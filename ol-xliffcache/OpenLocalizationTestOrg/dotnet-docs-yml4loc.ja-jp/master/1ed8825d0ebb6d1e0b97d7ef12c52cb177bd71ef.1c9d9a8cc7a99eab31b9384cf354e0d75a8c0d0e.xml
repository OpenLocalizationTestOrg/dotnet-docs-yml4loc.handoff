{"nodes":[{"content":"Defines the base class for controls, which are components with visual representation.","nodes":[{"pos":[0,85],"content":"Defines the base class for controls, which are components with visual representation.","nodes":[{"content":"Defines the base class for controls, which are components with visual representation.","pos":[0,85]}]}],"pos":[23776,23862],"yaml":true},{"content":"To create your own control class, inherit from the <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, or from the other Windows Forms provided controls. For more information about authoring custom controls, see [Developing Custom Windows Forms Controls with the .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md).  \n  \n The <xref:System.Windows.Forms.Control> class implements very basic functionality required by classes that display information to the user. It handles user input through the keyboard and pointing devices. It handles message routing and security. It defines the bounds of a control (its position and size), although it does not implement painting. It provides a window handle (`hWnd`).  \n  \n Windows Forms controls use ambient properties so child controls can appear like their surrounding environment. An *ambient property* is a control property that, if not set, is retrieved from the parent control. If the control does not have a <xref:System.Windows.Forms.Control.Parent%2A>, and the property is not set, the control attempts to determine the value of the ambient property through the <xref:System.Windows.Forms.Control.Site%2A> property. If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <xref:System.Windows.Forms.AmbientProperties>, the control uses its own default values. Typically, an ambient property represents a characteristic of a control, such as <xref:System.Windows.Forms.Control.BackColor%2A>, that is communicated to a child control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. Ambient properties provided by the <xref:System.Windows.Forms.Control>class include: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, and <xref:System.Windows.Forms.Control.RightToLeft%2A>.  \n  \n> [!NOTE]\n>  To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable. A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file. For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration. For more information about using visual styles, see[Visual Styles](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).  \n  \n Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities. Sometimes you will want to provide additional information to accessibility client applications. There are two ways of providing this additional information. You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications. This method is typically used to provide limited accessibility information for existing controls. Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed.  \n  \n> [!NOTE]\n>  To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.  \n  \n> [!NOTE]\n>  Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor. Doing so will cause errors in code generation and can cause unwanted behavior.  \n  \n The majority of the controls in the <xref:System.Windows.Forms> namespace use the underlying Windows common control as a base to build on. For more information about the Windows common controls, see[General Control Reference](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).  \n  \n To identify Windows Forms controls from a separate process, use a standard `SendMessage` call to pass the WM_GETCONTROLNAME message. WM_GETCONTROLNAME is independent of the language and Windows hierarchy. For more information, see the \"Recommended Solution for Windows Forms\" topic in[Automating Windows Forms](http://msdn.microsoft.com/library/ms996405.aspx).  \n  \n Use the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property to synchronize access to the control from multiple threads. For more information about multithreaded Windows Forms controls, see [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)","nodes":[{"pos":[0,393],"content":"To create your own control class, inherit from the <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, or from the other Windows Forms provided controls. For more information about authoring custom controls, see [Developing Custom Windows Forms Controls with the .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md).","nodes":[{"content":"To create your own control class, inherit from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> classes, or from the other Windows Forms provided controls.","pos":[0,187],"source":"To create your own control class, inherit from the <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, or from the other Windows Forms provided controls."},{"content":"For more information about authoring custom controls, see <bpt id=\"p1\">[</bpt>Developing Custom Windows Forms Controls with the .NET Framework<ept id=\"p1\">](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept>.","pos":[188,393],"source":" For more information about authoring custom controls, see [Developing Custom Windows Forms Controls with the .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)."}]},{"pos":[400,784],"content":"The <xref:System.Windows.Forms.Control> class implements very basic functionality required by classes that display information to the user. It handles user input through the keyboard and pointing devices. It handles message routing and security. It defines the bounds of a control (its position and size), although it does not implement painting. It provides a window handle (`hWnd`).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class implements very basic functionality required by classes that display information to the user.","pos":[0,139],"source":"The <xref:System.Windows.Forms.Control> class implements very basic functionality required by classes that display information to the user."},{"content":"It handles user input through the keyboard and pointing devices.","pos":[140,204]},{"content":"It handles message routing and security.","pos":[205,245]},{"content":"It defines the bounds of a control (its position and size), although it does not implement painting.","pos":[246,346]},{"content":"It provides a window handle (<ph id=\"ph1\">`hWnd`</ph>).","pos":[347,384],"source":" It provides a window handle (`hWnd`)."}]},{"pos":[791,2127],"content":"Windows Forms controls use ambient properties so child controls can appear like their surrounding environment. An *ambient property* is a control property that, if not set, is retrieved from the parent control. If the control does not have a <xref:System.Windows.Forms.Control.Parent%2A>, and the property is not set, the control attempts to determine the value of the ambient property through the <xref:System.Windows.Forms.Control.Site%2A> property. If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <xref:System.Windows.Forms.AmbientProperties>, the control uses its own default values. Typically, an ambient property represents a characteristic of a control, such as <xref:System.Windows.Forms.Control.BackColor%2A>, that is communicated to a child control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. Ambient properties provided by the <xref:System.Windows.Forms.Control>class include: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, and <xref:System.Windows.Forms.Control.RightToLeft%2A>.","nodes":[{"content":"Windows Forms controls use ambient properties so child controls can appear like their surrounding environment.","pos":[0,110]},{"content":"An <bpt id=\"p1\">*</bpt>ambient property<ept id=\"p1\">*</ept> is a control property that, if not set, is retrieved from the parent control.","pos":[111,210],"source":" An *ambient property* is a control property that, if not set, is retrieved from the parent control."},{"content":"If the control does not have a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>, and the property is not set, the control attempts to determine the value of the ambient property through the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Site%2A&gt;</ph> property.","pos":[211,451],"source":" If the control does not have a <xref:System.Windows.Forms.Control.Parent%2A>, and the property is not set, the control attempts to determine the value of the ambient property through the <xref:System.Windows.Forms.Control.Site%2A> property."},{"content":"If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>, the control uses its own default values.","pos":[452,654],"source":" If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <xref:System.Windows.Forms.AmbientProperties>, the control uses its own default values."},{"content":"Typically, an ambient property represents a characteristic of a control, such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, that is communicated to a child control.","pos":[655,826],"source":" Typically, an ambient property represents a characteristic of a control, such as <xref:System.Windows.Forms.Control.BackColor%2A>, that is communicated to a child control."},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.","pos":[827,1003],"source":" For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default."},{"content":"Ambient properties provided by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph>class include: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>, and <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>.","pos":[1004,1336],"source":" Ambient properties provided by the <xref:System.Windows.Forms.Control>class include: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, and <xref:System.Windows.Forms.Control.RightToLeft%2A>."}]},{"pos":[2135,2755],"content":"[!NOTE]\n To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable. A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file. For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration. For more information about using visual styles, see[Visual Styles](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).","leadings":["","> "],"nodes":[{"content":" To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable. A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file. For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration. For more information about using visual styles, see[Visual Styles](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).","pos":[8,618],"nodes":[{"content":"To make your Windows Forms application support visual styles, be sure to set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> property to <ph id=\"ph2\">`System`</ph> and include a manifest with your executable.","pos":[1,185],"source":" To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable."},{"content":"A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file.","pos":[186,365]},{"content":"For an example of a manifest, see the Example section of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> enumeration.","pos":[366,477],"source":" For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration."},{"content":"For more information about using visual styles, see<bpt id=\"p1\">[</bpt>Visual Styles<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)</ept>.","pos":[478,610],"source":" For more information about using visual styles, see[Visual Styles](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)."}]}]},{"pos":[2762,3910],"content":"Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities. Sometimes you will want to provide additional information to accessibility client applications. There are two ways of providing this additional information. You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications. This method is typically used to provide limited accessibility information for existing controls. Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed.","nodes":[{"content":"Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities. Sometimes you will want to provide additional information to accessibility client applications. There are two ways of providing this additional information. You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications. This method is typically used to provide limited accessibility information for existing controls. Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed.","pos":[0,1148],"nodes":[{"content":"Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities.","pos":[0,315]},{"content":"Sometimes you will want to provide additional information to accessibility client applications.","pos":[316,411]},{"content":"There are two ways of providing this additional information.","pos":[412,472]},{"content":"You can set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property values, which will be reported to accessibility client applications.","pos":[473,816],"source":" You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications."},{"content":"This method is typically used to provide limited accessibility information for existing controls.","pos":[817,914]},{"content":"Alternatively, you can write your own class deriving from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes, providing as much accessibility information as needed.","pos":[915,1148],"source":" Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed."}]}]},{"pos":[3918,4114],"content":"[!NOTE]\n To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","leadings":["","> "],"nodes":[{"content":" To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","pos":[8,194],"nodes":[{"content":"To maintain better performance, do not set the size of a control in its constructor.","pos":[1,85]},{"content":"The preferred method is to override the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.","pos":[86,186],"source":" The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property."}]}]},{"pos":[4122,4298],"content":"[!NOTE]\n Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor. Doing so will cause errors in code generation and can cause unwanted behavior.","leadings":["","> "],"nodes":[{"content":" Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor. Doing so will cause errors in code generation and can cause unwanted behavior.","pos":[8,174],"nodes":[{"content":"Do not add data bindings for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> in its constructor.","pos":[1,87],"source":" Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor."},{"content":"Doing so will cause errors in code generation and can cause unwanted behavior.","pos":[88,166]}]}]},{"pos":[4305,4596],"content":"The majority of the controls in the <xref:System.Windows.Forms> namespace use the underlying Windows common control as a base to build on. For more information about the Windows common controls, see[General Control Reference](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).","nodes":[{"content":"The majority of the controls in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms&gt;</ph> namespace use the underlying Windows common control as a base to build on.","pos":[0,138],"source":"The majority of the controls in the <xref:System.Windows.Forms> namespace use the underlying Windows common control as a base to build on."},{"content":"For more information about the Windows common controls, see<bpt id=\"p1\">[</bpt>General Control Reference<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)</ept>.","pos":[139,291],"source":" For more information about the Windows common controls, see[General Control Reference](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)."}]},{"pos":[4603,4963],"content":"To identify Windows Forms controls from a separate process, use a standard `SendMessage` call to pass the WM_GETCONTROLNAME message. WM_GETCONTROLNAME is independent of the language and Windows hierarchy. For more information, see the \"Recommended Solution for Windows Forms\" topic in[Automating Windows Forms](http://msdn.microsoft.com/library/ms996405.aspx).","nodes":[{"content":"To identify Windows Forms controls from a separate process, use a standard <ph id=\"ph1\">`SendMessage`</ph> call to pass the WM_GETCONTROLNAME message.","pos":[0,132],"source":"To identify Windows Forms controls from a separate process, use a standard `SendMessage` call to pass the WM_GETCONTROLNAME message."},{"content":"WM_GETCONTROLNAME is independent of the language and Windows hierarchy.","pos":[133,204]},{"content":"For more information, see the \"Recommended Solution for Windows Forms\" topic in<bpt id=\"p1\">[</bpt>Automating Windows Forms<ept id=\"p1\">](http://msdn.microsoft.com/library/ms996405.aspx)</ept>.","pos":[205,360],"source":" For more information, see the \"Recommended Solution for Windows Forms\" topic in[Automating Windows Forms](http://msdn.microsoft.com/library/ms996405.aspx)."}]},{"pos":[4970,5323],"content":"Use the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property to synchronize access to the control from multiple threads. For more information about multithreaded Windows Forms controls, see [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property to synchronize access to the control from multiple threads.","pos":[0,130],"source":"Use the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property to synchronize access to the control from multiple threads."},{"content":"For more information about multithreaded Windows Forms controls, see <bpt id=\"p1\">[</bpt>How to: Make Thread-Safe Calls to Windows Forms Controls<ept id=\"p1\">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept>","pos":[131,353],"source":" For more information about multithreaded Windows Forms controls, see [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)"}]}],"pos":[23873,29222],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with default settings.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> class with default settings.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with default settings."}],"pos":[32783,32896],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","nodes":[{"pos":[0,286],"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[0,286],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.","pos":[0,117],"source":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application."},{"content":"Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[118,286]}]}]}],"pos":[32907,33194],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with specific text.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> class with specific text.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with specific text."}],"pos":[34262,34372],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  \n  \n This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.","nodes":[{"pos":[0,286],"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[0,286],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.","pos":[0,117],"source":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application."},{"content":"Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[118,286]}]}]},{"pos":[293,478],"content":"This version of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id=\"ph3\">`text`</ph> parameter value.","source":"This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value."}],"pos":[34383,34866],"yaml":true,"extradata":"MT"},{"content":"The text displayed by the control.","nodes":[{"pos":[0,34],"content":"The text displayed by the control.","nodes":[{"content":"The text displayed by the control.","pos":[0,34]}]}],"pos":[34995,35030],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class as a child control, with specific text.","nodes":[{"pos":[0,129],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> class as a child control, with specific text.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class as a child control, with specific text."}],"pos":[36151,36281],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  \n  \n This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value. The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.","nodes":[{"pos":[0,286],"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[0,286],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.","pos":[0,117],"source":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application."},{"content":"Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[118,286]}]}]},{"pos":[293,595],"content":"This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value. The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.","nodes":[{"content":"This version of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id=\"ph3\">`text`</ph> parameter value.","pos":[0,185],"source":"This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value."},{"content":"The constructor also adds the control to the parent control's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.","pos":[186,302],"source":" The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>."}]}],"pos":[36292,36892],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to be the parent of the control.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to be the parent of the control.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to be the parent of the control."}],"pos":[37075,37162],"yaml":true},{"content":"The text displayed by the control.","nodes":[{"pos":[0,34],"content":"The text displayed by the control.","nodes":[{"content":"The text displayed by the control.","pos":[0,34]}]}],"pos":[37222,37257],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with specific text, size, and location.","nodes":[{"pos":[0,129],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> class with specific text, size, and location.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with specific text, size, and location."}],"pos":[38504,38634],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  \n  \n This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A>property value to the `text` parameter value. The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.  \n  \n> [!NOTE]\n>  To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","nodes":[{"pos":[0,286],"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[0,286],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.","pos":[0,117],"source":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application."},{"content":"Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[118,286]}]}]},{"pos":[293,676],"content":"This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A>property value to the `text` parameter value. The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.","nodes":[{"content":"This version of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>property value to the <ph id=\"ph3\">`text`</ph> parameter value.","pos":[0,184],"source":"This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A>property value to the `text` parameter value."},{"content":"The initial <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control are determined by the <ph id=\"ph3\">`left`</ph>, <ph id=\"ph4\">`top`</ph>, <ph id=\"ph5\">`width`</ph> and <ph id=\"ph6\">`height`</ph> parameter values.","pos":[185,383],"source":" The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values."}]},{"pos":[684,880],"content":"[!NOTE]\n To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","leadings":["","> "],"nodes":[{"content":" To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","pos":[8,194],"nodes":[{"content":"To maintain better performance, do not set the size of a control in its constructor.","pos":[1,85]},{"content":"The preferred method is to override the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.","pos":[86,186],"source":" The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property."}]}]}],"pos":[38645,39533],"yaml":true,"extradata":"MT"},{"content":"The text displayed by the control.","nodes":[{"pos":[0,34],"content":"The text displayed by the control.","nodes":[{"content":"The text displayed by the control.","pos":[0,34]}]}],"pos":[39704,39739],"yaml":true},{"content":"The <xref href=\"System.Drawing.Point.X\"></xref> position of the control, in pixels, from the left edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Left\"></xref> property.","nodes":[{"pos":[0,224],"content":"The <xref href=\"System.Drawing.Point.X\"></xref> position of the control, in pixels, from the left edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Left\"></xref> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.X\"&gt;&lt;/xref&gt;</ph> position of the control, in pixels, from the left edge of the control's container.","pos":[0,130],"source":"The <xref href=\"System.Drawing.Point.X\"></xref> position of the control, in pixels, from the left edge of the control's container."},{"content":"The value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Left\"&gt;&lt;/xref&gt;</ph> property.","pos":[131,224],"source":" The value is assigned to the <xref href=\"System.Windows.Forms.Control.Left\"></xref> property."}]}],"pos":[39798,40023],"yaml":true},{"content":"The <xref href=\"System.Drawing.Point.Y\"></xref> position of the control, in pixels, from the top edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Top\"></xref> property.","nodes":[{"pos":[0,222],"content":"The <xref href=\"System.Drawing.Point.Y\"></xref> position of the control, in pixels, from the top edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Top\"></xref> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.Y\"&gt;&lt;/xref&gt;</ph> position of the control, in pixels, from the top edge of the control's container.","pos":[0,129],"source":"The <xref href=\"System.Drawing.Point.Y\"></xref> position of the control, in pixels, from the top edge of the control's container."},{"content":"The value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Top\"&gt;&lt;/xref&gt;</ph> property.","pos":[130,222],"source":" The value is assigned to the <xref href=\"System.Windows.Forms.Control.Top\"></xref> property."}]}],"pos":[40081,40304],"yaml":true},{"content":"The width of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Width\"></xref> property.","nodes":[{"pos":[0,131],"content":"The width of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Width\"></xref> property.","nodes":[{"content":"The width of the control, in pixels.","pos":[0,36]},{"content":"The value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Width\"&gt;&lt;/xref&gt;</ph> property.","pos":[37,131],"source":" The value is assigned to the <xref href=\"System.Windows.Forms.Control.Width\"></xref> property."}]}],"pos":[40364,40496],"yaml":true},{"content":"The height of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Height\"></xref> property.","nodes":[{"pos":[0,133],"content":"The height of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Height\"></xref> property.","nodes":[{"content":"The height of the control, in pixels.","pos":[0,37]},{"content":"The value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Height\"&gt;&lt;/xref&gt;</ph> property.","pos":[38,133],"source":" The value is assigned to the <xref href=\"System.Windows.Forms.Control.Height\"></xref> property."}]}],"pos":[40557,40691],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class as a child control, with specific text, size, and location.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> class as a child control, with specific text, size, and location.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class as a child control, with specific text, size, and location."}],"pos":[42052,42202],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  \n  \n This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value. The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>. The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.  \n  \n> [!NOTE]\n>  To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","nodes":[{"pos":[0,286],"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[0,286],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.","pos":[0,117],"source":"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application."},{"content":"Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.","pos":[118,286]}]}]},{"pos":[293,794],"content":"This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value. The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>. The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.","nodes":[{"content":"This version of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id=\"ph3\">`text`</ph> parameter value.","pos":[0,185],"source":"This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value."},{"content":"The constructor also adds the control to the parent control's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.","pos":[186,302],"source":" The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>."},{"content":"The initial <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control are determined by the <ph id=\"ph3\">`left`</ph>, <ph id=\"ph4\">`top`</ph>, <ph id=\"ph5\">`width`</ph> and <ph id=\"ph6\">`height`</ph> parameter values.","pos":[303,501],"source":" The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values."}]},{"pos":[802,998],"content":"[!NOTE]\n To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","leadings":["","> "],"nodes":[{"content":" To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","pos":[8,194],"nodes":[{"content":"To maintain better performance, do not set the size of a control in its constructor.","pos":[1,85]},{"content":"The preferred method is to override the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.","pos":[86,186],"source":" The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property."}]}]}],"pos":[42213,43219],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to be the parent of the control.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to be the parent of the control.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to be the parent of the control."}],"pos":[43444,43531],"yaml":true},{"content":"The text displayed by the control.","nodes":[{"pos":[0,34],"content":"The text displayed by the control.","nodes":[{"content":"The text displayed by the control.","pos":[0,34]}]}],"pos":[43591,43626],"yaml":true},{"content":"The <xref href=\"System.Drawing.Point.X\"></xref> position of the control, in pixels, from the left edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Left\"></xref> property.","nodes":[{"pos":[0,224],"content":"The <xref href=\"System.Drawing.Point.X\"></xref> position of the control, in pixels, from the left edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Left\"></xref> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.X\"&gt;&lt;/xref&gt;</ph> position of the control, in pixels, from the left edge of the control's container.","pos":[0,130],"source":"The <xref href=\"System.Drawing.Point.X\"></xref> position of the control, in pixels, from the left edge of the control's container."},{"content":"The value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Left\"&gt;&lt;/xref&gt;</ph> property.","pos":[131,224],"source":" The value is assigned to the <xref href=\"System.Windows.Forms.Control.Left\"></xref> property."}]}],"pos":[43685,43910],"yaml":true},{"content":"The <xref href=\"System.Drawing.Point.Y\"></xref> position of the control, in pixels, from the top edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Top\"></xref> property.","nodes":[{"pos":[0,222],"content":"The <xref href=\"System.Drawing.Point.Y\"></xref> position of the control, in pixels, from the top edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Top\"></xref> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.Y\"&gt;&lt;/xref&gt;</ph> position of the control, in pixels, from the top edge of the control's container.","pos":[0,129],"source":"The <xref href=\"System.Drawing.Point.Y\"></xref> position of the control, in pixels, from the top edge of the control's container."},{"content":"The value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Top\"&gt;&lt;/xref&gt;</ph> property.","pos":[130,222],"source":" The value is assigned to the <xref href=\"System.Windows.Forms.Control.Top\"></xref> property."}]}],"pos":[43968,44191],"yaml":true},{"content":"The width of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Width\"></xref> property.","nodes":[{"pos":[0,131],"content":"The width of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Width\"></xref> property.","nodes":[{"content":"The width of the control, in pixels.","pos":[0,36]},{"content":"The value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Width\"&gt;&lt;/xref&gt;</ph> property.","pos":[37,131],"source":" The value is assigned to the <xref href=\"System.Windows.Forms.Control.Width\"></xref> property."}]}],"pos":[44251,44383],"yaml":true},{"content":"The height of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Height\"></xref> property.","nodes":[{"pos":[0,133],"content":"The height of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Height\"></xref> property.","nodes":[{"content":"The height of the control, in pixels.","pos":[0,37]},{"content":"The value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Height\"&gt;&lt;/xref&gt;</ph> property.","pos":[38,133],"source":" The value is assigned to the <xref href=\"System.Windows.Forms.Control.Height\"></xref> property."}]}],"pos":[44444,44578],"yaml":true},{"content":"Notifies the accessibility client applications of the specified <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> for the specified child control.","nodes":[{"pos":[0,155],"content":"Notifies the accessibility client applications of the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleEvents\"&gt;&lt;/xref&gt;</ph> for the specified child control.","source":"Notifies the accessibility client applications of the specified <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> for the specified child control."}],"pos":[45860,46016],"yaml":true},{"content":"You must call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName> method for each <xref:System.Windows.Forms.AccessibleEvents> the accessibility client applications are to be notified of. The <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method is typically called when a property is set or from within an event handler. For example, you might call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method and pass in an <xref:System.Windows.Forms.AccessibleEvents> value of `Hide` from within the event handler for the <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName> event.","nodes":[{"pos":[0,718],"content":"You must call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName> method for each <xref:System.Windows.Forms.AccessibleEvents> the accessibility client applications are to be notified of. The <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method is typically called when a property is set or from within an event handler. For example, you might call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method and pass in an <xref:System.Windows.Forms.AccessibleEvents> value of `Hide` from within the event handler for the <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName> event.","nodes":[{"content":"You must call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName&gt;</ph> method for each <ph id=\"ph2\">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> the accessibility client applications are to be notified of.","pos":[0,241],"source":"You must call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName> method for each <xref:System.Windows.Forms.AccessibleEvents> the accessibility client applications are to be notified of."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> method is typically called when a property is set or from within an event handler.","pos":[242,405],"source":" The <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method is typically called when a property is set or from within an event handler."},{"content":"For example, you might call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> method and pass in an <ph id=\"ph2\">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> value of <ph id=\"ph3\">`Hide`</ph> from within the event handler for the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName&gt;</ph> event.","pos":[406,718],"source":" For example, you might call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method and pass in an <xref:System.Windows.Forms.AccessibleEvents> value of `Hide` from within the event handler for the <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName> event."}]}],"pos":[46027,46746],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> to notify the accessibility client applications of.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleEvents\"&gt;&lt;/xref&gt;</ph> to notify the accessibility client applications of.","source":"The <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> to notify the accessibility client applications of."}],"pos":[48813,48928],"yaml":true},{"content":"The child <xref href=\"System.Windows.Forms.Control\"></xref> to notify of the accessible event.","nodes":[{"pos":[0,94],"content":"The child <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to notify of the accessible event.","source":"The child <xref href=\"System.Windows.Forms.Control\"></xref> to notify of the accessible event."}],"pos":[48990,49085],"yaml":true},{"content":"Notifies the accessibility client applications of the specified <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> for the specified child control .","nodes":[{"pos":[0,156],"content":"Notifies the accessibility client applications of the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleEvents\"&gt;&lt;/xref&gt;</ph> for the specified child control .","source":"Notifies the accessibility client applications of the specified <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> for the specified child control ."}],"pos":[50465,50622],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> to notify the accessibility client applications of.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleEvents\"&gt;&lt;/xref&gt;</ph> to notify the accessibility client applications of.","source":"The <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> to notify the accessibility client applications of."}],"pos":[50868,50983],"yaml":true},{"content":"The identifier of the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>.","nodes":[{"pos":[0,81],"content":"The identifier of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;&lt;/xref&gt;</ph>.","source":"The identifier of the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>."}],"pos":[51046,51128],"yaml":true},{"content":"The child <xref href=\"System.Windows.Forms.Control\"></xref> to notify of the accessible event.","nodes":[{"pos":[0,94],"content":"The child <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to notify of the accessible event.","source":"The child <xref href=\"System.Windows.Forms.Control\"></xref> to notify of the accessible event."}],"pos":[51190,51285],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> assigned to the control.","nodes":[{"pos":[0,92],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;&lt;/xref&gt;</ph> assigned to the control.","source":"Gets the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> assigned to the control."}],"pos":[52334,52427],"yaml":true},{"content":"To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.  \n  \n If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.  \n  \n> [!NOTE]\n>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  \n  \n For more information about accessible objects, see [Active Accessibility](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx).","nodes":[{"pos":[0,138],"content":"To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.","nodes":[{"content":"To control the instance returned from this method, override the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.","pos":[0,138],"source":"To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method."}]},{"pos":[145,267],"content":"If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.","nodes":[{"content":"If no <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> is currently assigned to the control, a new instance of one is created.","pos":[0,122],"source":"If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created."}]},{"pos":[275,502],"content":"[!NOTE]\n To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].","leadings":["","> "],"nodes":[{"content":"To get or set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id=\"ph2\">`Accessibility`</ph> assembly installed with the<ph id=\"ph3\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.","pos":[9,225],"source":" To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]."}]},{"pos":[509,648],"content":"For more information about accessible objects, see <bpt id=\"p1\">[</bpt>Active Accessibility<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)</ept>.","source":"For more information about accessible objects, see [Active Accessibility](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)."}],"pos":[52438,53096],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> assigned to the control.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;&lt;/xref&gt;</ph> assigned to the control.","source":"The <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> assigned to the control."}],"pos":[53331,53419],"yaml":true},{"content":"Gets or sets the default action description of the control for use by accessibility client applications.","nodes":[{"pos":[0,104],"content":"Gets or sets the default action description of the control for use by accessibility client applications.","nodes":[{"content":"Gets or sets the default action description of the control for use by accessibility client applications.","pos":[0,104]}]}],"pos":[54599,54704],"yaml":true},{"content":"An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint. This property should be a verb or a short verb phrase.  \n  \n> [!NOTE]\n>  Not all objects have default actions, and some objects might have a default action that is related to its <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName> property, such as in the following examples:  \n  \n-   A selected check box has a default action of \"Uncheck\" and a value of \"Checked.\"  \n  \n-   A cleared check box has a default action of \"Check\" and a value of \"Unchecked.\"  \n  \n-   A button labeled \"Print\" has a default action of \"Press,\" with no value.  \n  \n-   A label or a text box control that shows \"Printer\" has no default action, but would have a value of \"Printer.\"  \n  \n For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).","nodes":[{"pos":[0,230],"content":"An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint. This property should be a verb or a short verb phrase.","nodes":[{"content":"An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint. This property should be a verb or a short verb phrase.","pos":[0,230],"nodes":[{"content":"An object's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph> property describes the object's primary method of manipulation from the user's viewpoint.","pos":[0,175],"source":"An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint."},{"content":"This property should be a verb or a short verb phrase.","pos":[176,230]}]}]},{"pos":[238,478],"content":"[!NOTE]\n Not all objects have default actions, and some objects might have a default action that is related to its <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName> property, such as in the following examples:","leadings":["","> "],"nodes":[{"content":"Not all objects have default actions, and some objects might have a default action that is related to its <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName&gt;</ph> property, such as in the following examples:","pos":[9,238],"source":" Not all objects have default actions, and some objects might have a default action that is related to its <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName> property, such as in the following examples:"}]},{"pos":[488,568],"content":"A selected check box has a default action of \"Uncheck\" and a value of \"Checked.\"","nodes":[{"content":"A selected check box has a default action of \"Uncheck\" and a value of \"Checked.\"","pos":[0,80]}]},{"pos":[578,657],"content":"A cleared check box has a default action of \"Check\" and a value of \"Unchecked.\"","nodes":[{"content":"A cleared check box has a default action of \"Check\" and a value of \"Unchecked.\"","pos":[0,79]}]},{"pos":[667,739],"content":"A button labeled \"Print\" has a default action of \"Press,\" with no value.","nodes":[{"content":"A button labeled \"Print\" has a default action of \"Press,\" with no value.","pos":[0,72]}]},{"pos":[749,859],"content":"A label or a text box control that shows \"Printer\" has no default action, but would have a value of \"Printer.\"","nodes":[{"content":"A label or a text box control that shows \"Printer\" has no default action, but would have a value of \"Printer.\"","pos":[0,110]}]},{"pos":[866,1032],"content":"For more information about properties of accessible objects, see <bpt id=\"p1\">[</bpt>Content of Descriptive Properties<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.","source":"For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)."}],"pos":[54715,55779],"yaml":true,"extradata":"MT"},{"content":"The default action description of the control for use by accessibility client applications.","nodes":[{"pos":[0,91],"content":"The default action description of the control for use by accessibility client applications.","nodes":[{"content":"The default action description of the control for use by accessibility client applications.","pos":[0,91]}]}],"pos":[55979,56071],"yaml":true},{"content":"Gets or sets the description of the control used by accessibility client applications.","nodes":[{"pos":[0,86],"content":"Gets or sets the description of the control used by accessibility client applications.","nodes":[{"content":"Gets or sets the description of the control used by accessibility client applications.","pos":[0,86]}]}],"pos":[57188,57275],"yaml":true},{"content":"An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance. The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.  \n  \n The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties. For example, a button with \"OK\" would not need additional information, but a button that shows a picture of a cactus would. The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as \"A button that shows a picture of a cactus.\"  \n  \n For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).","nodes":[{"pos":[0,307],"content":"An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance. The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.","nodes":[{"content":"An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance. The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.","pos":[0,307],"nodes":[{"content":"An object's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property provides a textual description about an object's visual appearance.","pos":[0,149],"source":"An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance."},{"content":"The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.","pos":[150,307]}]}]},{"pos":[314,1259],"content":"The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties. For example, a button with \"OK\" would not need additional information, but a button that shows a picture of a cactus would. The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as \"A button that shows a picture of a cactus.\"","nodes":[{"content":"The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties. For example, a button with \"OK\" would not need additional information, but a button that shows a picture of a cactus would. The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as \"A button that shows a picture of a cactus.\"","pos":[0,945],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property is needed if the description is not obvious, or if it is redundant based on the object's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.AccessibleObject.State%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> properties.","pos":[0,397],"source":"The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties."},{"content":"For example, a button with \"OK\" would not need additional information, but a button that shows a picture of a cactus would.","pos":[398,521]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> (and perhaps <ph id=\"ph3\">&lt;xref:System.Windows.Forms.AccessibleObject.Help%2A&gt;</ph>) properties for the cactus button would describe its purpose, but the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property would convey information that is less tangible, such as \"A button that shows a picture of a cactus.\"","pos":[522,945],"source":" The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as \"A button that shows a picture of a cactus.\""}]}]},{"pos":[1266,1432],"content":"For more information about properties of accessible objects, see <bpt id=\"p1\">[</bpt>Content of Descriptive Properties<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.","source":"For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)."}],"pos":[57286,58729],"yaml":true,"extradata":"MT"},{"content":"The description of the control used by accessibility client applications. The default is `null`.","nodes":[{"pos":[0,96],"content":"The description of the control used by accessibility client applications. The default is `null`.","nodes":[{"content":"The description of the control used by accessibility client applications.","pos":[0,73]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[74,96],"source":" The default is `null`."}]}],"pos":[59977,60074],"yaml":true},{"content":"Gets or sets the name of the control used by accessibility client applications.","nodes":[{"pos":[0,79],"content":"Gets or sets the name of the control used by accessibility client applications.","nodes":[{"content":"Gets or sets the name of the control used by accessibility client applications.","pos":[0,79]}]}],"pos":[61088,61168],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.AccessibleName%2A> property is a label that briefly describes and identifies the object within its container, such as the text in a <xref:System.Windows.Forms.Button>, the name of a <xref:System.Windows.Forms.MenuItem>, or a label displayed next to a <xref:System.Windows.Forms.TextBox> control.  \n  \n For more information about properties of accessible objects, see the \"[Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).","nodes":[{"pos":[0,334],"content":"The <xref:System.Windows.Forms.Control.AccessibleName%2A> property is a label that briefly describes and identifies the object within its container, such as the text in a <xref:System.Windows.Forms.Button>, the name of a <xref:System.Windows.Forms.MenuItem>, or a label displayed next to a <xref:System.Windows.Forms.TextBox> control.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> property is a label that briefly describes and identifies the object within its container, such as the text in a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the name of a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, or a label displayed next to a <ph id=\"ph4\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.","pos":[0,334],"source":"The <xref:System.Windows.Forms.Control.AccessibleName%2A> property is a label that briefly describes and identifies the object within its container, such as the text in a <xref:System.Windows.Forms.Button>, the name of a <xref:System.Windows.Forms.MenuItem>, or a label displayed next to a <xref:System.Windows.Forms.TextBox> control."}]},{"pos":[341,512],"content":"For more information about properties of accessible objects, see the \"<bpt id=\"p1\">[</bpt>Content of Descriptive Properties<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.","source":"For more information about properties of accessible objects, see the \"[Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)."}],"pos":[61179,61697],"yaml":true,"extradata":"MT"},{"content":"The name of the control used by accessibility client applications. The default is `null`.","nodes":[{"pos":[0,89],"content":"The name of the control used by accessibility client applications. The default is `null`.","nodes":[{"content":"The name of the control used by accessibility client applications.","pos":[0,66]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[67,89],"source":" The default is `null`."}]}],"pos":[62935,63025],"yaml":true},{"content":"Gets or sets the accessible role of the control","nodes":[{"pos":[0,47],"content":"Gets or sets the accessible role of the control","nodes":[{"content":"Gets or sets the accessible role of the control","pos":[0,47]}]}],"pos":[64032,64080],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.AccessibleRole%2A> property describes what kind of user interface element an object is. If the control's role cannot be determined, the <xref:System.Windows.Forms.Control.AccessibleRole%2A> property is set to `Default`.  \n  \n For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).","nodes":[{"pos":[0,258],"content":"The <xref:System.Windows.Forms.Control.AccessibleRole%2A> property describes what kind of user interface element an object is. If the control's role cannot be determined, the <xref:System.Windows.Forms.Control.AccessibleRole%2A> property is set to `Default`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property describes what kind of user interface element an object is.","pos":[0,126],"source":"The <xref:System.Windows.Forms.Control.AccessibleRole%2A> property describes what kind of user interface element an object is."},{"content":"If the control's role cannot be determined, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property is set to <ph id=\"ph2\">`Default`</ph>.","pos":[127,258],"source":" If the control's role cannot be determined, the <xref:System.Windows.Forms.Control.AccessibleRole%2A> property is set to `Default`."}]},{"pos":[265,431],"content":"For more information about properties of accessible objects, see <bpt id=\"p1\">[</bpt>Content of Descriptive Properties<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.","source":"For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)."}],"pos":[64091,64527],"yaml":true,"extradata":"MT"},{"content":"One of the values of <xref href=\"System.Windows.Forms.AccessibleRole\"></xref>. The default is `Default`.","nodes":[{"pos":[0,104],"content":"One of the values of <xref href=\"System.Windows.Forms.AccessibleRole\"></xref>. The default is `Default`.","nodes":[{"content":"One of the values of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleRole\"&gt;&lt;/xref&gt;</ph>.","pos":[0,78],"source":"One of the values of <xref href=\"System.Windows.Forms.AccessibleRole\"></xref>."},{"content":"The default is <ph id=\"ph1\">`Default`</ph>.","pos":[79,104],"source":" The default is `Default`."}]}],"pos":[64701,64806],"yaml":true},{"content":"The value assigned is not one of the <xref href=\"System.Windows.Forms.AccessibleRole\"></xref> values.","nodes":[{"pos":[0,101],"content":"The value assigned is not one of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleRole\"&gt;&lt;/xref&gt;</ph> values.","source":"The value assigned is not one of the <xref href=\"System.Windows.Forms.AccessibleRole\"></xref> values."}],"pos":[65023,65125],"yaml":true},{"content":"Gets or sets a value indicating whether the control can accept data that the user drags onto it.","nodes":[{"pos":[0,96],"content":"Gets or sets a value indicating whether the control can accept data that the user drags onto it.","nodes":[{"content":"Gets or sets a value indicating whether the control can accept data that the user drags onto it.","pos":[0,96]}]}],"pos":[66028,66125],"yaml":true},{"content":"`true` if drag-and-drop operations are allowed in the control; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,106],"content":"`true` if drag-and-drop operations are allowed in the control; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if drag-and-drop operations are allowed in the control; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,82],"source":"`true` if drag-and-drop operations are allowed in the control; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[83,106],"source":" The default is `false`."}]}],"pos":[67745,67854],"yaml":true},{"content":"Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.","nodes":[{"pos":[0,124],"content":"Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.","nodes":[{"content":"Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.","pos":[0,124]}]}],"pos":[68786,68911],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized. Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.  \n  \n You can anchor a control to one or more edges of its container. For example, if you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> whose <xref:System.Windows.Forms.Control.Anchor%2A> property value is set to `Top` and `Bottom`, the <xref:System.Windows.Forms.Button> is stretched to maintain the anchored distance to the top and bottom edges of the <xref:System.Windows.Forms.Form> as the <xref:System.Windows.Forms.Control.Height%2A> of the <xref:System.Windows.Forms.Form> is increased.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.","nodes":[{"pos":[0,327],"content":"Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized. Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.","nodes":[{"content":"Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized. Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.","pos":[0,327],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property to define how a control is automatically resized as its parent control is resized.","pos":[0,145],"source":"Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized."},{"content":"Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.","pos":[146,327]}]}]},{"pos":[334,857],"content":"You can anchor a control to one or more edges of its container. For example, if you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> whose <xref:System.Windows.Forms.Control.Anchor%2A> property value is set to `Top` and `Bottom`, the <xref:System.Windows.Forms.Button> is stretched to maintain the anchored distance to the top and bottom edges of the <xref:System.Windows.Forms.Form> as the <xref:System.Windows.Forms.Control.Height%2A> of the <xref:System.Windows.Forms.Form> is increased.","nodes":[{"content":"You can anchor a control to one or more edges of its container.","pos":[0,63]},{"content":"For example, if you have a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Button&gt;</ph> whose <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property value is set to <ph id=\"ph4\">`Top`</ph> and <ph id=\"ph5\">`Bottom`</ph>, the <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Button&gt;</ph> is stretched to maintain the anchored distance to the top and bottom edges of the <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Form&gt;</ph> as the <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is increased.","pos":[64,523],"source":" For example, if you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> whose <xref:System.Windows.Forms.Control.Anchor%2A> property value is set to `Top` and `Bottom`, the <xref:System.Windows.Forms.Button> is stretched to maintain the anchored distance to the top and bottom edges of the <xref:System.Windows.Forms.Form> as the <xref:System.Windows.Forms.Control.Height%2A> of the <xref:System.Windows.Forms.Form> is increased."}]},{"pos":[865,1078],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.","pos":[8,211],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties are mutually exclusive.","pos":[1,133],"source":" The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive."},{"content":"Only one can be set at a time, and the last one set takes precedence.","pos":[134,203]}]}]}],"pos":[68922,70008],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.AnchorStyles\"></xref> values. The default is `Top` and `Left`.","nodes":[{"pos":[0,124],"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.AnchorStyles\"></xref> values. The default is `Top` and `Left`.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AnchorStyles\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,91],"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.AnchorStyles\"></xref> values."},{"content":"The default is <ph id=\"ph1\">`Top`</ph> and <ph id=\"ph2\">`Left`</ph>.","pos":[92,124],"source":" The default is `Top` and `Left`."}]}],"pos":[71434,71559],"yaml":true},{"content":"Gets or sets where this control is scrolled to in <xref href=\"System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)\"></xref>.","nodes":[{"pos":[0,162],"content":"Gets or sets where this control is scrolled to in <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets where this control is scrolled to in <xref href=\"System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)\"></xref>."}],"pos":[72570,72733],"yaml":true},{"content":"A <xref href=\"System.Drawing.Point\"></xref> specifying the scroll location. The default is the upper-left corner of the control.","nodes":[{"pos":[0,128],"content":"A <xref href=\"System.Drawing.Point\"></xref> specifying the scroll location. The default is the upper-left corner of the control.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> specifying the scroll location.","pos":[0,75],"source":"A <xref href=\"System.Drawing.Point\"></xref> specifying the scroll location."},{"content":"The default is the upper-left corner of the control.","pos":[76,128]}]}],"pos":[72944,73073],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[74094,74140],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[74151,74197],"yaml":true,"extradata":"MT"},{"content":"`true` if enabled; otherwise, `false`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">`true`</ph> if enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if enabled; otherwise, `false`."}],"pos":[74378,74419],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[75471,75514],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[75525,75568],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the background color for the control.","nodes":[{"pos":[0,50],"content":"Gets or sets the background color for the control.","nodes":[{"content":"Gets or sets the background color for the control.","pos":[0,50]}]}],"pos":[76725,76776],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.BackColor%2A> property does not support transparent colors unless the `SupportsTransparentBackColor` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> is set to `true`.  \n  \n The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","nodes":[{"pos":[0,233],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property does not support transparent colors unless the <ph id=\"ph2\">`SupportsTransparentBackColor`</ph> value of <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph4\">`true`</ph>.","source":"The <xref:System.Windows.Forms.Control.BackColor%2A> property does not support transparent colors unless the `SupportsTransparentBackColor` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> is set to `true`."},{"pos":[240,766],"content":"The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","pos":[0,526],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property is an ambient property.","pos":[0,85],"source":"The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property."},{"content":"An ambient property is a control property that, if not set, is retrieved from the parent control.","pos":[86,183]},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.","pos":[184,360],"source":" For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default."},{"content":"For more information about ambient properties, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.","pos":[361,526],"source":" For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview."}]}]}],"pos":[76787,77558],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultBackColor\"></xref> property.","nodes":[{"pos":[0,205],"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultBackColor\"></xref> property.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> that represents the background color of the control.","pos":[0,96],"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control."},{"content":"The default is the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DefaultBackColor\"&gt;&lt;/xref&gt;</ph> property.","pos":[97,205],"source":" The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultBackColor\"></xref> property."}]}],"pos":[78759,78965],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property changes.","nodes":[{"pos":[0,106],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackColor\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property changes."}],"pos":[79954,80061],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.BackColor%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,155],"content":"This event is raised if the <xref:System.Windows.Forms.Control.BackColor%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,155],"source":"This event is raised if the <xref:System.Windows.Forms.Control.BackColor%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[162,312],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[80072,80389],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the background image displayed in the control.","nodes":[{"pos":[0,59],"content":"Gets or sets the background image displayed in the control.","nodes":[{"content":"Gets or sets the background image displayed in the control.","pos":[0,59]}]}],"pos":[83014,83074],"yaml":true},{"content":"-   Use the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property to place a graphic image onto a control.  \n  \n> [!NOTE]\n>  Images with translucent or transparent colors are not supported by Windows Forms controls as background images.  \n>   \n>  This property is not supported on child controls whose <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is `true`.","nodes":[{"pos":[4,116],"content":"Use the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property to place a graphic image onto a control.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property to place a graphic image onto a control.","pos":[0,112],"source":"Use the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property to place a graphic image onto a control."}]},{"pos":[124,246],"content":"[!NOTE]\n Images with translucent or transparent colors are not supported by Windows Forms controls as background images.","leadings":["","> "],"nodes":[{"content":"Images with translucent or transparent colors are not supported by Windows Forms controls as background images.","pos":[9,120]}]},{"pos":[257,385],"content":"This property is not supported on child controls whose <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","source":"This property is not supported on child controls whose <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is `true`."}],"pos":[83085,83478],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Drawing.Image\"></xref> that represents the image to display in the background of the control.","nodes":[{"pos":[0,115],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> that represents the image to display in the background of the control.","source":"An <xref href=\"System.Drawing.Image\"></xref> that represents the image to display in the background of the control."}],"pos":[84887,85003],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.BackgroundImage\"></xref> property changes.","nodes":[{"pos":[0,112],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackgroundImage\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.BackgroundImage\"></xref> property changes."}],"pos":[86056,86169],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,161],"content":"This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,161],"source":"This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[168,318],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[86180,86503],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the background image layout as defined in the <xref href=\"System.Windows.Forms.ImageLayout\"></xref> enumeration.","nodes":[{"pos":[0,125],"content":"Gets or sets the background image layout as defined in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImageLayout\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"Gets or sets the background image layout as defined in the <xref href=\"System.Windows.Forms.ImageLayout\"></xref> enumeration."}],"pos":[89171,89297],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control. <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set.  \n  \n You can increase performance for large images if you set <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> to something other than <xref:System.Windows.Forms.ImageLayout.Tile>.","nodes":[{"pos":[0,316],"content":"Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control. <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set.","nodes":[{"content":"Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control. <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set.","pos":[0,316],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> property to specify the position and behavior of an image you have placed onto a control.","pos":[0,158],"source":"Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> takes effect only if the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property is set.","pos":[159,316],"source":" <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set."}]}]},{"pos":[323,510],"content":"You can increase performance for large images if you set <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> to something other than <xref:System.Windows.Forms.ImageLayout.Tile>.","nodes":[{"content":"You can increase performance for large images if you set <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> to something other than <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ImageLayout.Tile&gt;</ph>.","pos":[0,187],"source":"You can increase performance for large images if you set <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> to something other than <xref:System.Windows.Forms.ImageLayout.Tile>."}]}],"pos":[89308,89823],"yaml":true,"extradata":"MT"},{"content":"One of the values of <xref href=\"System.Windows.Forms.ImageLayout\"></xref> (<xref href=\"System.Windows.Forms.ImageLayout.Center\"></xref> , <xref href=\"System.Windows.Forms.ImageLayout.None\"></xref>, <xref href=\"System.Windows.Forms.ImageLayout.Stretch\"></xref>, <xref href=\"System.Windows.Forms.ImageLayout.Tile\"></xref>, or <xref href=\"System.Windows.Forms.ImageLayout.Zoom\"></xref>). <xref href=\"System.Windows.Forms.ImageLayout.Tile\"></xref> is the default value.","nodes":[{"pos":[0,466],"content":"One of the values of <xref href=\"System.Windows.Forms.ImageLayout\"></xref> (<xref href=\"System.Windows.Forms.ImageLayout.Center\"></xref> , <xref href=\"System.Windows.Forms.ImageLayout.None\"></xref>, <xref href=\"System.Windows.Forms.ImageLayout.Stretch\"></xref>, <xref href=\"System.Windows.Forms.ImageLayout.Tile\"></xref>, or <xref href=\"System.Windows.Forms.ImageLayout.Zoom\"></xref>). <xref href=\"System.Windows.Forms.ImageLayout.Tile\"></xref> is the default value.","nodes":[{"content":"One of the values of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImageLayout\"&gt;&lt;/xref&gt;</ph> (<ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.ImageLayout.Center\"&gt;&lt;/xref&gt;</ph> , <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.ImageLayout.None\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Windows.Forms.ImageLayout.Stretch\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.Windows.Forms.ImageLayout.Tile\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph6\">&lt;xref href=\"System.Windows.Forms.ImageLayout.Zoom\"&gt;&lt;/xref&gt;</ph>).","pos":[0,385],"source":"One of the values of <xref href=\"System.Windows.Forms.ImageLayout\"></xref> (<xref href=\"System.Windows.Forms.ImageLayout.Center\"></xref> , <xref href=\"System.Windows.Forms.ImageLayout.None\"></xref>, <xref href=\"System.Windows.Forms.ImageLayout.Stretch\"></xref>, <xref href=\"System.Windows.Forms.ImageLayout.Tile\"></xref>, or <xref href=\"System.Windows.Forms.ImageLayout.Zoom\"></xref>)."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImageLayout.Tile\"&gt;&lt;/xref&gt;</ph> is the default value.","pos":[386,466],"source":"<xref href=\"System.Windows.Forms.ImageLayout.Tile\"></xref> is the default value."}]}],"pos":[90006,90473],"yaml":true},{"content":"The specified enumeration value does not exist.","nodes":[{"pos":[0,47],"content":"The specified enumeration value does not exist.","nodes":[{"content":"The specified enumeration value does not exist.","pos":[0,47]}]}],"pos":[90697,90745],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayout\"></xref> property changes.","nodes":[{"pos":[0,105],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackgroundImageLayout\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayout\"></xref> property changes."}],"pos":[91759,91865],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property changes either programmatically or by user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,153],"content":"This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property changes either programmatically or by user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> property changes either programmatically or by user interaction.","pos":[0,153],"source":"This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property changes either programmatically or by user interaction."}]},{"pos":[160,310],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[91876,92191],"yaml":true,"extradata":"MT"},{"content":"Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.","nodes":[{"pos":[0,113],"content":"Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.","nodes":[{"content":"Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.","pos":[0,113]}]}],"pos":[94636,94750],"yaml":true},{"content":"The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.  \n  \n You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required. <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.  \n  \n> [!NOTE]\n>  Most methods on a control can only be called from the thread where the control was created. In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread. The invoke methods always invoke their callbacks on the control's thread.  \n  \n> [!NOTE]\n>  An exception might be thrown if the thread that should process the message is no longer active.","nodes":[{"pos":[0,570],"content":"The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.","nodes":[{"content":"The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.","pos":[0,570],"nodes":[{"content":"The delegate is called asynchronously, and this method returns immediately.","pos":[0,75]},{"content":"You can call this method from any thread, even the thread that owns the control's handle.","pos":[76,165]},{"content":"If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.","pos":[166,325]},{"content":"If no appropriate handle can be found, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> will throw an exception.","pos":[326,440],"source":" If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception."},{"content":"Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.","pos":[441,570]}]}]},{"pos":[577,827],"content":"You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required. <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.","nodes":[{"content":"You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required. <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.","pos":[0,250],"nodes":[{"content":"You can call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> to retrieve the return value from the delegate, if neccesary, but this is not required.","pos":[0,149],"source":"You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> will block until the return value can be retrieved.","pos":[150,250],"source":" <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved."}]}]},{"pos":[835,1697],"content":"[!NOTE]\n Most methods on a control can only be called from the thread where the control was created. In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread. The invoke methods always invoke their callbacks on the control's thread.","leadings":["","> "],"nodes":[{"content":" Most methods on a control can only be called from the thread where the control was created. In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread. The invoke methods always invoke their callbacks on the control's thread.","pos":[8,860],"nodes":[{"content":"Most methods on a control can only be called from the thread where the control was created.","pos":[1,92]},{"content":"In addition to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.","pos":[93,496],"source":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.","pos":[497,664],"source":" Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls."},{"content":"For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[665,778]},{"content":"The invoke methods always invoke their callbacks on the control's thread.","pos":[779,852]}]}]},{"pos":[1705,1811],"content":"[!NOTE]\n An exception might be thrown if the thread that should process the message is no longer active.","leadings":["","> "],"nodes":[{"content":"An exception might be thrown if the thread that should process the message is no longer active.","pos":[9,104]}]}],"pos":[94761,96583],"yaml":true,"extradata":"MT"},{"content":"A delegate to a method that takes no parameters.","nodes":[{"pos":[0,48],"content":"A delegate to a method that takes no parameters.","nodes":[{"content":"A delegate to a method that takes no parameters.","pos":[0,48]}]}],"pos":[97277,97326],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that represents the result of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> operation.","nodes":[{"pos":[0,167],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that represents the result of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"&gt;&lt;/xref&gt;</ph> operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that represents the result of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> operation."}],"pos":[97389,97557],"yaml":true},{"content":"No appropriate window handle can be found.","nodes":[{"pos":[0,42],"content":"No appropriate window handle can be found.","nodes":[{"content":"No appropriate window handle can be found.","pos":[0,42]}]}],"pos":[97735,97778],"yaml":true},{"content":"Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.","nodes":[{"pos":[0,143],"content":"Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.","nodes":[{"content":"Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.","pos":[0,143]}]}],"pos":[98850,98994],"yaml":true},{"content":"The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.  \n  \n You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required. <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.  \n  \n> [!NOTE]\n>  Most methods on a control can only be called from the thread where the control was created. In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread. The invoke methods always invoke their callbacks on the control's thread.  \n  \n> [!NOTE]\n>  An exception might be thrown if the thread that should process the message is no longer active.","nodes":[{"pos":[0,570],"content":"The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.","nodes":[{"content":"The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.","pos":[0,570],"nodes":[{"content":"The delegate is called asynchronously, and this method returns immediately.","pos":[0,75]},{"content":"You can call this method from any thread, even the thread that owns the control's handle.","pos":[76,165]},{"content":"If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.","pos":[166,325]},{"content":"If no appropriate handle can be found, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> will throw an exception.","pos":[326,440],"source":" If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception."},{"content":"Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.","pos":[441,570]}]}]},{"pos":[577,827],"content":"You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required. <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.","nodes":[{"content":"You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required. <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.","pos":[0,250],"nodes":[{"content":"You can call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> to retrieve the return value from the delegate, if neccesary, but this is not required.","pos":[0,149],"source":"You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> will block until the return value can be retrieved.","pos":[150,250],"source":" <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved."}]}]},{"pos":[835,1697],"content":"[!NOTE]\n Most methods on a control can only be called from the thread where the control was created. In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread. The invoke methods always invoke their callbacks on the control's thread.","leadings":["","> "],"nodes":[{"content":" Most methods on a control can only be called from the thread where the control was created. In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread. The invoke methods always invoke their callbacks on the control's thread.","pos":[8,860],"nodes":[{"content":"Most methods on a control can only be called from the thread where the control was created.","pos":[1,92]},{"content":"In addition to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.","pos":[93,496],"source":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.","pos":[497,664],"source":" Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls."},{"content":"For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[665,778]},{"content":"The invoke methods always invoke their callbacks on the control's thread.","pos":[779,852]}]}]},{"pos":[1705,1811],"content":"[!NOTE]\n An exception might be thrown if the thread that should process the message is no longer active.","leadings":["","> "],"nodes":[{"content":"An exception might be thrown if the thread that should process the message is no longer active.","pos":[9,104]}]}],"pos":[99005,100827],"yaml":true,"extradata":"MT"},{"content":"A delegate to a method that takes parameters of the same number and type that are contained in the <code>args</code> parameter.","nodes":[{"pos":[0,127],"content":"A delegate to a method that takes parameters of the same number and type that are contained in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A delegate to a method that takes parameters of the same number and type that are contained in the <code>args</code> parameter."}],"pos":[101536,101664],"yaml":true},{"content":"An array of objects to pass as arguments to the given method. This can be `null` if no arguments are needed.","nodes":[{"pos":[0,108],"content":"An array of objects to pass as arguments to the given method. This can be `null` if no arguments are needed.","nodes":[{"content":"An array of objects to pass as arguments to the given method.","pos":[0,61]},{"content":"This can be <ph id=\"ph1\">`null`</ph> if no arguments are needed.","pos":[62,108],"source":" This can be `null` if no arguments are needed."}]}],"pos":[101726,101835],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that represents the result of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> operation.","nodes":[{"pos":[0,167],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that represents the result of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"&gt;&lt;/xref&gt;</ph> operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that represents the result of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> operation."}],"pos":[101898,102066],"yaml":true},{"content":"No appropriate window handle can be found.","nodes":[{"pos":[0,42],"content":"No appropriate window handle can be found.","nodes":[{"content":"No appropriate window handle can be found.","pos":[0,42]}]}],"pos":[102244,102287],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Windows.Forms.BindingContext\"></xref> for the control.","nodes":[{"pos":[0,90],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;&lt;/xref&gt;</ph> for the control.","source":"Gets or sets the <xref href=\"System.Windows.Forms.BindingContext\"></xref> for the control."}],"pos":[103220,103311],"yaml":true},{"content":"The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single<xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>. The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized. For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to.  \n  \n For more information about creating a new <xref:System.Windows.Forms.BindingContext> and assigning it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.","nodes":[{"pos":[0,593],"content":"The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single<xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>. The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized. For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to.","nodes":[{"content":"The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single<xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>. The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized. For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to.","pos":[0,593],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> is used to return a single<ph id=\"ph3\">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for all data-bound controls contained by the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control&gt;</ph>.","pos":[0,242],"source":"The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single<xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> keeps all controls that are bound to the same data source synchronized.","pos":[243,365],"source":" The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized."},{"content":"For example, setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> specifies the item in the underlying list that all data-bound controls point to.","pos":[366,593],"source":" For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to."}]}]},{"pos":[600,835],"content":"For more information about creating a new <xref:System.Windows.Forms.BindingContext> and assigning it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.","nodes":[{"content":"For more information about creating a new <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> and assigning it to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph>.","pos":[0,235],"source":"For more information about creating a new <xref:System.Windows.Forms.BindingContext> and assigning it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A>."}]}],"pos":[103322,104162],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.BindingContext\"></xref> for the control.","nodes":[{"pos":[0,75],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;&lt;/xref&gt;</ph> for the control.","source":"A <xref href=\"System.Windows.Forms.BindingContext\"></xref> for the control."}],"pos":[105228,105304],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.BindingContext\"></xref> property changes.","nodes":[{"pos":[0,103],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BindingContext\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.BindingContext\"></xref> property changes."}],"pos":[106398,106502],"yaml":true},{"content":"To add a new <xref:System.Windows.Forms.BindingContext> to the <xref:System.Windows.Forms.Control> through the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.  \n  \n This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,249],"content":"To add a new <xref:System.Windows.Forms.BindingContext> to the <xref:System.Windows.Forms.Control> through the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.","nodes":[{"content":"To add a new <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> through the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> constructor.","pos":[0,249],"source":"To add a new <xref:System.Windows.Forms.BindingContext> to the <xref:System.Windows.Forms.Control> through the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor."}]},{"pos":[256,427],"content":"This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property is changed is changed by either a programmatic modification or user interaction.","pos":[0,171],"source":"This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed is changed by either a programmatic modification or user interaction."}]},{"pos":[434,584],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[106513,107104],"yaml":true,"extradata":"MT"},{"content":"Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.","nodes":[{"pos":[0,117],"content":"Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.","nodes":[{"content":"Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.","pos":[0,117]}]}],"pos":[108842,108960],"yaml":true},{"content":"The value of this property is equal to the sum of the <xref:System.Windows.Forms.Control.Top%2A> property value, and the <xref:System.Windows.Forms.Control.Height%2A> property value.  \n  \n The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property. You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.","nodes":[{"pos":[0,182],"content":"The value of this property is equal to the sum of the <xref:System.Windows.Forms.Control.Top%2A> property value, and the <xref:System.Windows.Forms.Control.Height%2A> property value.","nodes":[{"content":"The value of this property is equal to the sum of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property value, and the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> property value.","pos":[0,182],"source":"The value of this property is equal to the sum of the <xref:System.Windows.Forms.Control.Top%2A> property value, and the <xref:System.Windows.Forms.Control.Height%2A> property value."}]},{"pos":[189,684],"content":"The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property. You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property. You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.","pos":[0,495],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property is a read-only property.","pos":[0,83],"source":"The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property."},{"content":"You can manipulate this property value by changing the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> properties or calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> methods.","pos":[84,495],"source":" You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods."}]}]}],"pos":[108971,109660],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.","nodes":[{"pos":[0,162],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.","source":"An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area."}],"pos":[110385,110548],"yaml":true},{"content":"Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.","nodes":[{"pos":[0,126],"content":"Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.","nodes":[{"content":"Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.","pos":[0,126]}]}],"pos":[111525,111652],"yaml":true},{"content":"The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus. The <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method is called to set the <xref:System.Windows.Forms.Control.Bounds%2A> property. The <xref:System.Windows.Forms.Control.Bounds%2A>property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.Bounds%2A> property is set.","nodes":[{"pos":[0,551],"content":"The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus. The <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method is called to set the <xref:System.Windows.Forms.Control.Bounds%2A> property. The <xref:System.Windows.Forms.Control.Bounds%2A>property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.Bounds%2A> property is set.","nodes":[{"content":"The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus.","pos":[0,109]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method is called to set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property.","pos":[110,250],"source":" The <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method is called to set the <xref:System.Windows.Forms.Control.Bounds%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph>property is not always changed through its <ph id=\"ph2\">`set`</ph> method so you should override the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method to ensure that your code is executed when the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property is set.","pos":[251,551],"source":" The <xref:System.Windows.Forms.Control.Bounds%2A>property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.Bounds%2A> property is set."}]}],"pos":[111663,112215],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.","nodes":[{"pos":[0,175],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements."}],"pos":[113252,113428],"yaml":true},{"content":"Brings the control to the front of the z-order.","nodes":[{"pos":[0,47],"content":"Brings the control to the front of the z-order.","nodes":[{"content":"Brings the control to the front of the z-order.","pos":[0,47]}]}],"pos":[114467,114515],"yaml":true},{"content":"The control is moved to the front of the z-order. If the control is a child of another control, the child control is moved to the front of the z-order. <xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event.","nodes":[{"pos":[0,323],"content":"The control is moved to the front of the z-order. If the control is a child of another control, the child control is moved to the front of the z-order. <xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event.","nodes":[{"content":"The control is moved to the front of the z-order. If the control is a child of another control, the child control is moved to the front of the z-order. <xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event.","pos":[0,323],"nodes":[{"content":"The control is moved to the front of the z-order.","pos":[0,49]},{"content":"If the control is a child of another control, the child control is moved to the front of the z-order.","pos":[50,151]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> does not make a control a top-level control, and it does not raise the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event.","pos":[152,323],"source":" <xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event."}]}]}],"pos":[114526,114850],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property can be set to an active value, to enable IME support.","nodes":[{"pos":[0,156],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ImeMode\"&gt;&lt;/xref&gt;</ph> property can be set to an active value, to enable IME support.","source":"Gets a value indicating whether the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property can be set to an active value, to enable IME support."}],"pos":[116725,116882],"yaml":true},{"content":"Derived classes can override this property to return `false` if IME is not supported.","nodes":[{"pos":[0,85],"content":"Derived classes can override this property to return <ph id=\"ph1\">`false`</ph> if IME is not supported.","source":"Derived classes can override this property to return `false` if IME is not supported."}],"pos":[116893,116979],"yaml":true,"extradata":"MT"},{"content":"`true` in all cases.","nodes":[{"pos":[0,20],"content":"<ph id=\"ph1\">`true`</ph> in all cases.","source":"`true` in all cases."}],"pos":[117105,117128],"yaml":true},{"content":"Gets a value indicating whether the control can receive focus.","nodes":[{"pos":[0,62],"content":"Gets a value indicating whether the control can receive focus.","nodes":[{"content":"Gets a value indicating whether the control can receive focus.","pos":[0,62]}]}],"pos":[118080,118143],"yaml":true},{"content":"In order for a control to receive input focus, the control must have a handle assigned to it, and the <xref:System.Windows.Forms.Control.Visible%2A> and <xref:System.Windows.Forms.Control.Enabled%2A> properties must both be set to `true` for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.","nodes":[{"pos":[0,368],"content":"In order for a control to receive input focus, the control must have a handle assigned to it, and the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> properties must both be set to <ph id=\"ph3\">`true`</ph> for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.","source":"In order for a control to receive input focus, the control must have a handle assigned to it, and the <xref:System.Windows.Forms.Control.Visible%2A> and <xref:System.Windows.Forms.Control.Enabled%2A> properties must both be set to `true` for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form."}],"pos":[118154,118523],"yaml":true,"extradata":"MT"},{"content":"`true` if the control can receive focus; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the control can receive focus; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control can receive focus; otherwise, `false`."}],"pos":[119284,119347],"yaml":true},{"content":"Determines if events can be raised on the control.","nodes":[{"pos":[0,50],"content":"Determines if events can be raised on the control.","nodes":[{"content":"Determines if events can be raised on the control.","pos":[0,50]}]}],"pos":[120396,120447],"yaml":true},{"content":"If this control is being hosted as an ActiveX control, this property will return `false` if the ActiveX control has its events frozen.","nodes":[{"pos":[0,134],"content":"If this control is being hosted as an ActiveX control, this property will return <ph id=\"ph1\">`false`</ph> if the ActiveX control has its events frozen.","source":"If this control is being hosted as an ActiveX control, this property will return `false` if the ActiveX control has its events frozen."}],"pos":[120458,120593],"yaml":true,"extradata":"MT"},{"content":"`true` if the control is hosted as an ActiveX control whose events are not frozen; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control is hosted as an ActiveX control whose events are not frozen; otherwise, `false`."}],"pos":[120722,120827],"yaml":true},{"content":"Gets a value indicating whether the control can be selected.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether the control can be selected.","nodes":[{"content":"Gets a value indicating whether the control can be selected.","pos":[0,60]}]}],"pos":[121787,121848],"yaml":true},{"content":"This property returns `true` if the `Selectable` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> is set to `true`, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.  \n  \n The Windows Forms controls in the following list are not selectable and will return a value of `false` for the <xref:System.Windows.Forms.Control.CanSelect%2A> property. Controls derived from these controls are also not selectable.  \n  \n-   <xref:System.Windows.Forms.Panel>  \n  \n-   <xref:System.Windows.Forms.GroupBox>  \n  \n-   <xref:System.Windows.Forms.PictureBox>  \n  \n-   <xref:System.Windows.Forms.ProgressBar>  \n  \n-   <xref:System.Windows.Forms.Splitter>  \n  \n-   <xref:System.Windows.Forms.Label>  \n  \n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)","nodes":[{"pos":[0,271],"content":"This property returns <ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">`Selectable`</ph> value of <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph4\">`true`</ph>, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.","source":"This property returns `true` if the `Selectable` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> is set to `true`, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled."},{"pos":[278,509],"content":"The Windows Forms controls in the following list are not selectable and will return a value of `false` for the <xref:System.Windows.Forms.Control.CanSelect%2A> property. Controls derived from these controls are also not selectable.","nodes":[{"content":"The Windows Forms controls in the following list are not selectable and will return a value of <ph id=\"ph1\">`false`</ph> for the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> property.","pos":[0,169],"source":"The Windows Forms controls in the following list are not selectable and will return a value of `false` for the <xref:System.Windows.Forms.Control.CanSelect%2A> property."},{"content":"Controls derived from these controls are also not selectable.","pos":[170,231]}]},{"pos":[519,552],"content":"<xref:System.Windows.Forms.Panel>","nodes":[]},{"pos":[562,598],"content":"<xref:System.Windows.Forms.GroupBox>","nodes":[]},{"pos":[608,646],"content":"<xref:System.Windows.Forms.PictureBox>","nodes":[]},{"pos":[656,695],"content":"<xref:System.Windows.Forms.ProgressBar>","nodes":[]},{"pos":[705,741],"content":"<xref:System.Windows.Forms.Splitter>","nodes":[]},{"pos":[751,784],"content":"<xref:System.Windows.Forms.Label>","nodes":[]},{"pos":[794,878],"content":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)","pos":[0,84],"source":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)"}]}],"pos":[121859,122756],"yaml":true,"extradata":"MT"},{"content":"`true` if the control can be selected; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the control can be selected; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control can be selected; otherwise, `false`."}],"pos":[123508,123569],"yaml":true},{"content":"Gets or sets a value indicating whether the control has captured the mouse.","nodes":[{"pos":[0,75],"content":"Gets or sets a value indicating whether the control has captured the mouse.","nodes":[{"content":"Gets or sets a value indicating whether the control has captured the mouse.","pos":[0,75]}]}],"pos":[124577,124653],"yaml":true},{"content":"When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically only captured during drag operations.  \n  \n Only the foreground window can capture the mouse. When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window. Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.  \n  \n When the mouse is captured, shortcut keys should not work.","nodes":[{"pos":[0,172],"content":"When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically only captured during drag operations.","nodes":[{"content":"When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically only captured during drag operations.","pos":[0,172],"nodes":[{"content":"When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders.","pos":[0,111]},{"content":"The mouse is typically only captured during drag operations.","pos":[112,172]}]}]},{"pos":[179,533],"content":"Only the foreground window can capture the mouse. When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window. Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.","nodes":[{"content":"Only the foreground window can capture the mouse. When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window. Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.","pos":[0,354],"nodes":[{"content":"Only the foreground window can capture the mouse.","pos":[0,49]},{"content":"When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window.","pos":[50,222]},{"content":"Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.","pos":[223,354]}]}]},{"pos":[540,598],"content":"When the mouse is captured, shortcut keys should not work.","nodes":[{"content":"When the mouse is captured, shortcut keys should not work.","pos":[0,58]}]}],"pos":[124664,125269],"yaml":true,"extradata":"MT"},{"content":"`true` if the control has captured the mouse; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the control has captured the mouse; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control has captured the mouse; otherwise, `false`."}],"pos":[126350,126418],"yaml":true},{"content":"Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.","nodes":[{"pos":[0,149],"content":"Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.","nodes":[{"content":"Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.","pos":[0,149]}]}],"pos":[127478,127628],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n The <xref:System.Windows.Forms.Control.CausesValidation%2A> property value is typically set to `false` for controls such as a Help button.","nodes":[{"pos":[0,214],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.","source":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed."},{"pos":[221,359],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property value is typically set to <ph id=\"ph2\">`false`</ph> for controls such as a Help button.","source":"The <xref:System.Windows.Forms.Control.CausesValidation%2A> property value is typically set to `false` for controls such as a Help button."}],"pos":[127639,128003],"yaml":true,"extradata":"MT"},{"content":"`true` if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,159],"content":"`true` if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,136],"source":"`true` if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[137,159],"source":" The default is `true`."}]}],"pos":[129236,129398],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.CausesValidation\"></xref> property changes.","nodes":[{"pos":[0,113],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.CausesValidation\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.CausesValidation\"></xref> property changes."}],"pos":[130458,130572],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,162],"content":"This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,162],"source":"This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[169,319],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[130583,130907],"yaml":true,"extradata":"MT"},{"content":"Occurs when the focus or keyboard user interface (UI) cues change.","nodes":[{"pos":[0,66],"content":"Occurs when the focus or keyboard user interface (UI) cues change.","nodes":[{"content":"Occurs when the focus or keyboard user interface (UI) cues change.","pos":[0,66]}]}],"pos":[131965,132032],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[132043,132194],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <xref href=\"System.Windows.Forms.Control.Handle\"></xref> property when an application is being debugged.","nodes":[{"pos":[0,203],"content":"Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Handle\"&gt;&lt;/xref&gt;</ph> property when an application is being debugged.","source":"Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <xref href=\"System.Windows.Forms.Control.Handle\"></xref> property when an application is being debugged."}],"pos":[134683,134887],"yaml":true},{"content":"When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results. A common invalid thread activity is a call on the wrong thread that accesses the control's <xref:System.Windows.Forms.Control.Handle%2A> property. Set <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> to `true` to find and diagnose this thread activity more easily while debugging.","nodes":[{"pos":[0,462],"content":"When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results. A common invalid thread activity is a call on the wrong thread that accesses the control's <xref:System.Windows.Forms.Control.Handle%2A> property. Set <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> to `true` to find and diagnose this thread activity more easily while debugging.","nodes":[{"content":"When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results.","pos":[0,159]},{"content":"A common invalid thread activity is a call on the wrong thread that accesses the control's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property.","pos":[160,306],"source":" A common invalid thread activity is a call on the wrong thread that accesses the control's <xref:System.Windows.Forms.Control.Handle%2A> property."},{"content":"Set <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> to find and diagnose this thread activity more easily while debugging.","pos":[307,462],"source":" Set <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> to `true` to find and diagnose this thread activity more easily while debugging."}]}],"pos":[134898,135361],"yaml":true,"extradata":"MT"},{"content":"`true` if calls on the wrong thread are caught; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if calls on the wrong thread are caught; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if calls on the wrong thread are caught; otherwise, `false`."}],"pos":[135564,135634],"yaml":true},{"content":"Occurs when the control is clicked.","nodes":[{"pos":[0,35],"content":"Occurs when the control is clicked.","nodes":[{"content":"Occurs when the control is clicked.","pos":[0,35]}]}],"pos":[136649,136685],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred. If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event. However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.  \n  \n A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked. For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.  \n  \n You must set the `StandardClick` value of<xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.  \n  \n> [!NOTE]\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,498],"content":"The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred. If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event. However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred. If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event. However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.","pos":[0,498],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event passes an <ph id=\"ph2\">&lt;xref:System.EventArgs&gt;</ph> to its event handler, so it only indicates that a click has occurred.","pos":[0,155],"source":"The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred."},{"content":"If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.","pos":[156,318],"source":" If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.","pos":[319,498],"source":" However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key."}]}]},{"pos":[505,1377],"content":"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked. For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.","nodes":[{"content":"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked. For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.","pos":[0,872],"nodes":[{"content":"A double-click is determined by the mouse settings of the user's operating system.","pos":[0,82]},{"content":"The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.","pos":[83,206]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised every time a control is double-clicked.","pos":[207,308],"source":" The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked."},{"content":"For example, if you have event handlers for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events of a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.","pos":[309,673],"source":" For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called."},{"content":"If a control is double-clicked and that control does not support the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event might be raised twice.","pos":[674,872],"source":" If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice."}]}]},{"pos":[1384,1505],"content":"You must set the <ph id=\"ph1\">`StandardClick`</ph> value of<ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> to <ph id=\"ph3\">`true`</ph> for this event to be raised.","source":"You must set the `StandardClick` value of<xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised."},{"pos":[1513,2564],"content":"[!NOTE]\n The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","leadings":["","> "],"nodes":[{"content":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","pos":[8,1049],"nodes":[{"content":"The following events are not raised for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName&gt;</ph> collection: <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id=\"ph11\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.","pos":[1,627],"source":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>."},{"content":"If there is at least one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.","pos":[628,895],"source":" If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event."},{"content":"However, if the user interaction is within the client area of the tab page, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.","pos":[896,1041],"source":" However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event."}]}]},{"pos":[2571,2721],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[136696,139429],"yaml":true,"extradata":"MT"},{"content":"Gets the rectangle that represents the client area of the control.","nodes":[{"pos":[0,66],"content":"Gets the rectangle that represents the client area of the control.","nodes":[{"content":"Gets the rectangle that represents the client area of the control.","pos":[0,66]}]}],"pos":[140964,141031],"yaml":true},{"content":"The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.  \n  \n Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0). You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.  \n  \n For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).","nodes":[{"pos":[0,140],"content":"The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.","nodes":[{"content":"The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.","pos":[0,140]}]},{"pos":[147,493],"content":"Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0). You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.","nodes":[{"content":"Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0). You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.","pos":[0,346],"nodes":[{"content":"Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0).","pos":[0,194]},{"content":"You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.","pos":[195,346]}]}]},{"pos":[500,661],"content":"For more information about drawing on controls, see <bpt id=\"p1\">[</bpt>Rendering a Windows Forms Control<ept id=\"p1\">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.","source":"For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)."}],"pos":[141042,141710],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the client area of the control.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that represents the client area of the control.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the client area of the control."}],"pos":[142676,142772],"yaml":true},{"content":"Gets or sets the height and width of the client area of the control.","nodes":[{"pos":[0,68],"content":"Gets or sets the height and width of the client area of the control.","nodes":[{"content":"Gets or sets the height and width of the client area of the control.","pos":[0,68]}]}],"pos":[143804,143873],"yaml":true},{"content":"The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus. The <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method is called to set the <xref:System.Windows.Forms.Control.ClientSize%2A>property. The <xref:System.Windows.Forms.Control.ClientSize%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.ClientSize%2A> property is set.  \n  \n The <xref:System.Drawing.Size.Width%2A?displayProperty=fullName> and <xref:System.Drawing.Size.Height%2A?displayProperty=fullName> properties represent the width and height of the client area of the control. You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.  \n  \n For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).  \n  \n> [!NOTE]\n>  You cannot bind application settings to this property. For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).","nodes":[{"pos":[0,602],"content":"The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus. The <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method is called to set the <xref:System.Windows.Forms.Control.ClientSize%2A>property. The <xref:System.Windows.Forms.Control.ClientSize%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.ClientSize%2A> property is set.","nodes":[{"content":"The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.","pos":[0,140]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method is called to set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph>property.","pos":[141,288],"source":" The <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method is called to set the <xref:System.Windows.Forms.Control.ClientSize%2A>property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property is not always changed through its <ph id=\"ph2\">`set`</ph> method so you should override the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method to ensure that your code is executed when the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property is set.","pos":[289,602],"source":" The <xref:System.Windows.Forms.Control.ClientSize%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.ClientSize%2A> property is set."}]},{"pos":[609,952],"content":"The <xref:System.Drawing.Size.Width%2A?displayProperty=fullName> and <xref:System.Drawing.Size.Height%2A?displayProperty=fullName> properties represent the width and height of the client area of the control. You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.","nodes":[{"content":"The <xref:System.Drawing.Size.Width%2A?displayProperty=fullName> and <xref:System.Drawing.Size.Height%2A?displayProperty=fullName> properties represent the width and height of the client area of the control. You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.","pos":[0,343],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Size.Width%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Drawing.Size.Height%2A?displayProperty=fullName&gt;</ph> properties represent the width and height of the client area of the control.","pos":[0,207],"source":"The <xref:System.Drawing.Size.Width%2A?displayProperty=fullName> and <xref:System.Drawing.Size.Height%2A?displayProperty=fullName> properties represent the width and height of the client area of the control."},{"content":"You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.","pos":[208,343]}]}]},{"pos":[959,1120],"content":"For more information about drawing on controls, see <bpt id=\"p1\">[</bpt>Rendering a Windows Forms Control<ept id=\"p1\">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.","source":"For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)."},{"pos":[1128,1345],"content":"[!NOTE]\n You cannot bind application settings to this property. For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).","leadings":["","> "],"nodes":[{"content":" You cannot bind application settings to this property. For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).","pos":[8,215],"nodes":[{"content":"You cannot bind application settings to this property.","pos":[1,55]},{"content":"For more information on application settings, see <bpt id=\"p1\">[</bpt>Application Settings Overview<ept id=\"p1\">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.","pos":[56,207],"source":" For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md)."}]}]}],"pos":[143884,145239],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Size\"></xref> that represents the dimensions of the client area of the control.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> that represents the dimensions of the client area of the control.","source":"A <xref href=\"System.Drawing.Size\"></xref> that represents the dimensions of the client area of the control."}],"pos":[146495,146604],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ClientSize\"></xref> property changes.","nodes":[{"pos":[0,107],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ClientSize\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ClientSize\"></xref> property changes."}],"pos":[147670,147778],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[147789,147940],"yaml":true,"extradata":"MT"},{"content":"Gets the name of the company or creator of the application containing the control.","nodes":[{"pos":[0,82],"content":"Gets the name of the company or creator of the application containing the control.","nodes":[{"content":"Gets the name of the company or creator of the application containing the control.","pos":[0,82]}]}],"pos":[150299,150382],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property.  \n  \n```csharp  \n[assembly: AssemblyCompany(\"Microsoft\")]  \n```  \n  \n> [!NOTE]\n>  It is strongly recommended that you provide the company name, product name, and product version for your app.","nodes":[{"pos":[0,368],"content":"The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property.","pos":[0,368],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> property is a read-only property.","pos":[0,88],"source":"The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property."},{"content":"To change the value of this property, set the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyCompanyAttribute.Company%2A&gt;</ph> property value of the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyCompanyAttribute&gt;</ph>.","pos":[89,268],"source":" To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>."},{"content":"The following line of C# code sets the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> property.","pos":[269,368],"source":" The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property."}]}]},{"pos":[440,560],"content":"[!NOTE]\n It is strongly recommended that you provide the company name, product name, and product version for your app.","leadings":["","> "],"nodes":[{"content":"It is strongly recommended that you provide the company name, product name, and product version for your app.","pos":[9,118]}]}],"pos":[150393,150965],"yaml":true,"extradata":"MT"},{"content":"The company name or creator of the application containing the control.","nodes":[{"pos":[0,70],"content":"The company name or creator of the application containing the control.","nodes":[{"content":"The company name or creator of the application containing the control.","pos":[0,70]}]}],"pos":[151990,152061],"yaml":true},{"content":"Retrieves a value indicating whether the specified control is a child of the control.","nodes":[{"pos":[0,85],"content":"Retrieves a value indicating whether the specified control is a child of the control.","nodes":[{"content":"Retrieves a value indicating whether the specified control is a child of the control.","pos":[0,85]}]}],"pos":[153192,153278],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to evaluate.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to evaluate.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to evaluate."}],"pos":[154290,154357],"yaml":true},{"content":"`true` if the specified control is a child of the control; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the specified control is a child of the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified control is a child of the control; otherwise, `false`."}],"pos":[154415,154496],"yaml":true},{"content":"Gets a value indicating whether the control, or one of its child controls, currently has the input focus.","nodes":[{"pos":[0,105],"content":"Gets a value indicating whether the control, or one of its child controls, currently has the input focus.","nodes":[{"content":"Gets a value indicating whether the control, or one of its child controls, currently has the input focus.","pos":[0,105]}]}],"pos":[155474,155580],"yaml":true},{"content":"You can use this property to determine whether a control or any of the controls contained within it has the input focus. To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property. To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods.","nodes":[{"pos":[0,435],"content":"You can use this property to determine whether a control or any of the controls contained within it has the input focus. To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property. To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods.","nodes":[{"content":"You can use this property to determine whether a control or any of the controls contained within it has the input focus. To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property. To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods.","pos":[0,435],"nodes":[{"content":"You can use this property to determine whether a control or any of the controls contained within it has the input focus.","pos":[0,120]},{"content":"To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focused%2A&gt;</ph> property.","pos":[121,289],"source":" To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property."},{"content":"To give a control the input focus, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> methods.","pos":[290,435],"source":" To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods."}]}]}],"pos":[155591,156027],"yaml":true,"extradata":"MT"},{"content":"`true` if the control or one of its child controls currently has the input focus; otherwise, `false`.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if the control or one of its child controls currently has the input focus; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control or one of its child controls currently has the input focus; otherwise, `false`."}],"pos":[156200,156304],"yaml":true},{"content":"Gets or sets the shortcut menu associated with the control.","nodes":[{"pos":[0,59],"content":"Gets or sets the shortcut menu associated with the control.","nodes":[{"content":"Gets or sets the shortcut menu associated with the control.","pos":[0,59]}]}],"pos":[157340,157400],"yaml":true},{"content":"Use a shortcut menus to give context-specific menu options to users when they right-click on the control.","nodes":[{"pos":[0,105],"content":"Use a shortcut menus to give context-specific menu options to users when they right-click on the control.","nodes":[{"content":"Use a shortcut menus to give context-specific menu options to users when they right-click on the control.","pos":[0,105]}]}],"pos":[157411,157517],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.ContextMenu\"></xref> that represents the shortcut menu associated with the control.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ContextMenu\"&gt;&lt;/xref&gt;</ph> that represents the shortcut menu associated with the control.","source":"A <xref href=\"System.Windows.Forms.ContextMenu\"></xref> that represents the shortcut menu associated with the control."}],"pos":[158757,158876],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ContextMenu\"></xref> property changes.","nodes":[{"pos":[0,108],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ContextMenu\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ContextMenu\"></xref> property changes."}],"pos":[159949,160058],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,157],"content":"This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,157],"source":"This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[164,314],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[160069,160388],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> associated with this control.","nodes":[{"pos":[0,105],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ContextMenuStrip\"&gt;&lt;/xref&gt;</ph> associated with this control.","source":"Gets or sets the <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> associated with this control."}],"pos":[162242,162348],"yaml":true},{"content":"If a <xref:System.Windows.Forms.ContextMenu> has also been assigned to the control, the <xref:System.Windows.Forms.ContextMenu> takes precedence over the <xref:System.Windows.Forms.ContextMenuStrip>.","nodes":[{"pos":[0,199],"content":"If a <xref:System.Windows.Forms.ContextMenu> has also been assigned to the control, the <xref:System.Windows.Forms.ContextMenu> takes precedence over the <xref:System.Windows.Forms.ContextMenuStrip>.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> has also been assigned to the control, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> takes precedence over the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.","pos":[0,199],"source":"If a <xref:System.Windows.Forms.ContextMenu> has also been assigned to the control, the <xref:System.Windows.Forms.ContextMenu> takes precedence over the <xref:System.Windows.Forms.ContextMenuStrip>."}]}],"pos":[162359,162559],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> for this control, or `null` if there is no <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref>. The default is `null`.","nodes":[{"pos":[0,188],"content":"The <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> for this control, or `null` if there is no <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref>. The default is `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ContextMenuStrip\"&gt;&lt;/xref&gt;</ph> for this control, or <ph id=\"ph2\">`null`</ph> if there is no <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.ContextMenuStrip\"&gt;&lt;/xref&gt;</ph>.","pos":[0,165],"source":"The <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> for this control, or `null` if there is no <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref>."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[166,188],"source":" The default is `null`."}]}],"pos":[163399,163588],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ContextMenuStrip\"></xref> property changes.","nodes":[{"pos":[0,113],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ContextMenuStrip\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ContextMenuStrip\"></xref> property changes."}],"pos":[164648,164762],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[164773,164924],"yaml":true,"extradata":"MT"},{"content":"Occurs when a new control is added to the <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref>.","nodes":[{"pos":[0,110],"content":"Occurs when a new control is added to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ControlCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Occurs when a new control is added to the <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref>."}],"pos":[167304,167415],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[167426,167577],"yaml":true,"extradata":"MT"},{"content":"Occurs when a control is removed from the <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref>.","nodes":[{"pos":[0,110],"content":"Occurs when a control is removed from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ControlCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Occurs when a control is removed from the <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref>."}],"pos":[169406,169517],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[169528,169679],"yaml":true,"extradata":"MT"},{"content":"Gets the collection of controls contained within the control.","nodes":[{"pos":[0,61],"content":"Gets the collection of controls contained within the control.","nodes":[{"content":"Gets the collection of controls contained within the control.","pos":[0,61]}]}],"pos":[171486,171548],"yaml":true},{"content":"A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls. For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class.  \n  \n You can manipulate the controls in the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property by using the methods available in the <xref:System.Windows.Forms.Control.ControlCollection> class.  \n  \n When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. Doing so will increase the performance of applications with many controls.  \n  \n Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls. Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order. Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control.","nodes":[{"pos":[0,419],"content":"A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls. For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class.","nodes":[{"content":"A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls. For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class.","pos":[0,419],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> can act as a parent to a collection of controls.","pos":[0,86],"source":"A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls."},{"content":"For example, when several controls are added to a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, each of the controls is a member of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assigned to the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property of the form, which is derived from the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.","pos":[87,419],"source":" For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class."}]}]},{"pos":[426,690],"content":"You can manipulate the controls in the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property by using the methods available in the <xref:System.Windows.Forms.Control.ControlCollection> class.","nodes":[{"content":"You can manipulate the controls in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assigned to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property by using the methods available in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> class.","pos":[0,264],"source":"You can manipulate the controls in the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property by using the methods available in the <xref:System.Windows.Forms.Control.ControlCollection> class."}]},{"pos":[697,1081],"content":"When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. Doing so will increase the performance of applications with many controls.","nodes":[{"content":"When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. Doing so will increase the performance of applications with many controls.","pos":[0,384],"nodes":[{"content":"When adding several controls to a parent control, it is recommended that you call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.","pos":[0,191],"source":"When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added."},{"content":"After adding the controls to the parent control, call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.","pos":[192,309],"source":" After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method."},{"content":"Doing so will increase the performance of applications with many controls.","pos":[310,384]}]}]},{"pos":[1088,1492],"content":"Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls. Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order. Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control.","nodes":[{"content":"Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls. Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order. Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control.","pos":[0,404],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property to iterate through all controls of a form, including nested controls.","pos":[0,134],"source":"Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> method to retrieve the previous or next child control in the tab order.","pos":[135,268],"source":" Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property to get or set the active control of a container control.","pos":[269,404],"source":" Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control."}]}]}],"pos":[171559,173060],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> representing the collection of controls contained within the control.","nodes":[{"pos":[0,139],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ControlCollection\"&gt;&lt;/xref&gt;</ph> representing the collection of controls contained within the control.","source":"A <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> representing the collection of controls contained within the control."}],"pos":[174515,174655],"yaml":true},{"content":"Creates a new accessibility object for the control.","nodes":[{"pos":[0,51],"content":"Creates a new accessibility object for the control.","nodes":[{"content":"Creates a new accessibility object for the control.","pos":[0,51]}]}],"pos":[175786,175838],"yaml":true},{"content":"If you do not explicitly call the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.  \n  \n> [!NOTE]\n>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].","nodes":[{"pos":[0,218],"content":"If you do not explicitly call the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.","nodes":[{"content":"If you do not explicitly call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method, it will be called when the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property is referenced.","pos":[0,218],"source":"If you do not explicitly call the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced."}]},{"pos":[226,454],"content":"[!NOTE]\n To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].","leadings":["","> "],"nodes":[{"content":"To get or set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id=\"ph2\">`Accessibility`</ph> assembly installed with the <ph id=\"ph3\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.","pos":[9,226],"source":" To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]."}]}],"pos":[175849,176309],"yaml":true,"extradata":"MT"},{"content":"A new <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> for the control.","nodes":[{"pos":[0,81],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;&lt;/xref&gt;</ph> for the control.","source":"A new <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> for the control."}],"pos":[178359,178441],"yaml":true},{"content":"Forces the creation of the visible control, including the creation of the handle and any visible child controls.","nodes":[{"pos":[0,112],"content":"Forces the creation of the visible control, including the creation of the handle and any visible child controls.","nodes":[{"content":"Forces the creation of the visible control, including the creation of the handle and any visible child controls.","pos":[0,112]}]}],"pos":[179437,179550],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls. This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>.  \n  \n <xref:System.Windows.Forms.Control.CreateControl%2A> does not create a control handle if the control's <xref:System.Windows.Forms.Control.Visible%2A> property is `false`. You can either call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method or access the <xref:System.Windows.Forms.Control.Handle%2A> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.","nodes":[{"pos":[0,343],"content":"The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls. This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls. This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>.","pos":[0,343],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> method forces a handle to be created for the control and its child controls.","pos":[0,133],"source":"The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls."},{"content":"This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>.","pos":[134,343],"source":" This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>."}]}]},{"pos":[350,819],"content":"<xref:System.Windows.Forms.Control.CreateControl%2A> does not create a control handle if the control's <xref:System.Windows.Forms.Control.Visible%2A> property is `false`. You can either call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method or access the <xref:System.Windows.Forms.Control.Handle%2A> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> does not create a control handle if the control's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property is <ph id=\"ph3\">`false`</ph>.","pos":[0,170],"source":"<xref:System.Windows.Forms.Control.CreateControl%2A> does not create a control handle if the control's <xref:System.Windows.Forms.Control.Visible%2A> property is `false`."},{"content":"You can either call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> method or access the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.","pos":[171,469],"source":" You can either call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method or access the <xref:System.Windows.Forms.Control.Handle%2A> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children."}]}],"pos":[179561,180385],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the control collection for the control.","nodes":[{"pos":[0,65],"content":"Creates a new instance of the control collection for the control.","nodes":[{"content":"Creates a new instance of the control collection for the control.","pos":[0,65]}]}],"pos":[181498,181564],"yaml":true},{"content":"A new instance of <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> assigned to the control.","nodes":[{"pos":[0,110],"content":"A new instance of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ControlCollection\"&gt;&lt;/xref&gt;</ph> assigned to the control.","source":"A new instance of <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> assigned to the control."}],"pos":[181788,181899],"yaml":true},{"content":"Gets a value indicating whether the control has been created.","nodes":[{"pos":[0,61],"content":"Gets a value indicating whether the control has been created.","nodes":[{"content":"Gets a value indicating whether the control has been created.","pos":[0,61]}]}],"pos":[182872,182934],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Created%2A> property returns `true` if the <xref:System.Windows.Forms.Control> was successfully created even though the control's handle might not have been created or recreated yet.","nodes":[{"pos":[0,221],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Created%2A&gt;</ph> property returns <ph id=\"ph2\">`true`</ph> if the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control&gt;</ph> was successfully created even though the control's handle might not have been created or recreated yet.","source":"The <xref:System.Windows.Forms.Control.Created%2A> property returns `true` if the <xref:System.Windows.Forms.Control> was successfully created even though the control's handle might not have been created or recreated yet."}],"pos":[182945,183167],"yaml":true,"extradata":"MT"},{"content":"`true` if the control has been created; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the control has been created; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control has been created; otherwise, `false`."}],"pos":[183334,183396],"yaml":true},{"content":"Creates the <xref href=\"System.Drawing.Graphics\"></xref> for the control.","nodes":[{"pos":[0,73],"content":"Creates the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph> for the control.","source":"Creates the <xref href=\"System.Drawing.Graphics\"></xref> for the control."}],"pos":[184426,184500],"yaml":true},{"content":"The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message. Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName>. Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it. For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>.  \n  \n By design, <xref:System.Windows.Forms.Control.CreateGraphics%2A> sets ownership to the calling thread, and fails if it is called on other threads.  \n  \n> [!NOTE]\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","nodes":[{"pos":[0,836],"content":"The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message. Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName>. Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it. For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>.","nodes":[{"content":"The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message. Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName>. Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it. For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>.","pos":[0,836],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> object that you retrieve through the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message.","pos":[0,307],"source":"The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message."},{"content":"Therefore you cannot cache the <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> object for reuse, except to use non-visual methods like <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName&gt;</ph>.","pos":[308,499],"source":" Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName>."},{"content":"Instead, you must call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> every time that you want to use the <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics&gt;</ph> object, and then call <ph id=\"ph3\">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> when you are finished using it.","pos":[500,739],"source":" Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it."},{"content":"For more information about Windows messages, see <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>.","pos":[740,836],"source":" For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>."}]}]},{"pos":[843,989],"content":"By design, <xref:System.Windows.Forms.Control.CreateGraphics%2A> sets ownership to the calling thread, and fails if it is called on other threads.","nodes":[{"content":"By design, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> sets ownership to the calling thread, and fails if it is called on other threads.","pos":[0,146],"source":"By design, <xref:System.Windows.Forms.Control.CreateGraphics%2A> sets ownership to the calling thread, and fails if it is called on other threads."}]},{"pos":[997,1693],"content":"[!NOTE]\n In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","leadings":["","> "],"nodes":[{"content":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[8,694],"nodes":[{"content":"In addition to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.","pos":[1,404],"source":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.","pos":[405,572],"source":" Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls."},{"content":"For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[573,686]}]}]}],"pos":[184511,186212],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Graphics\"></xref> for the control.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph> for the control.","source":"The <xref href=\"System.Drawing.Graphics\"></xref> for the control."}],"pos":[187449,187515],"yaml":true},{"content":"Creates a handle for the control.","nodes":[{"pos":[0,33],"content":"Creates a handle for the control.","nodes":[{"content":"Creates a handle for the control.","pos":[0,33]}]}],"pos":[188475,188509],"yaml":true},{"content":"You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly. The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created.","nodes":[{"pos":[0,303],"content":"You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly. The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created.","nodes":[{"content":"You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly. The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created.","pos":[0,303],"nodes":[{"content":"You typically should not call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> method directly.","pos":[0,102],"source":"You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly."},{"content":"The preferred method is to call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> method, which forces a handle to be created for the control and its child controls when the control is created.","pos":[103,303],"source":" The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created."}]}]}],"pos":[188520,188824],"yaml":true,"extradata":"MT"},{"content":"The object is in a disposed state.","nodes":[{"pos":[0,34],"content":"The object is in a disposed state.","nodes":[{"content":"The object is in a disposed state.","pos":[0,34]}]}],"pos":[189081,189116],"yaml":true},{"content":"Gets the required creation parameters when the control handle is created.","nodes":[{"pos":[0,73],"content":"Gets the required creation parameters when the control handle is created.","nodes":[{"content":"Gets the required creation parameters when the control handle is created.","pos":[0,73]}]}],"pos":[190037,190111],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.CreateParams%2A> property should not be overridden and used to adjust the properties of your derived control. Properties such as the <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName> should be set by the corresponding properties in your control such as <xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName> and <xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName>. The <xref:System.Windows.Forms.CreateParams> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace. For more information about creating control parameters, see the `CreateWindow` and `CreateWindowEx` functions and the [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)structure documentation.","nodes":[{"pos":[0,1099],"content":"The <xref:System.Windows.Forms.Control.CreateParams%2A> property should not be overridden and used to adjust the properties of your derived control. Properties such as the <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName> should be set by the corresponding properties in your control such as <xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName> and <xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName>. The <xref:System.Windows.Forms.CreateParams> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace. For more information about creating control parameters, see the `CreateWindow` and `CreateWindowEx` functions and the [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)structure documentation.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property should not be overridden and used to adjust the properties of your derived control.","pos":[0,148],"source":"The <xref:System.Windows.Forms.Control.CreateParams%2A> property should not be overridden and used to adjust the properties of your derived control."},{"content":"Properties such as the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName&gt;</ph> should be set by the corresponding properties in your control such as <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName&gt;</ph>.","pos":[149,691],"source":" Properties such as the <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName> should be set by the corresponding properties in your control such as <xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName> and <xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace.","pos":[692,877],"source":" The <xref:System.Windows.Forms.CreateParams> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace."},{"content":"For more information about creating control parameters, see the <ph id=\"ph1\">`CreateWindow`</ph> and <ph id=\"ph2\">`CreateWindowEx`</ph> functions and the <bpt id=\"p1\">[</bpt>CREATESTRUCT<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)</ept>structure documentation.","pos":[878,1099],"source":" For more information about creating control parameters, see the `CreateWindow` and `CreateWindowEx` functions and the [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)structure documentation."}]}],"pos":[190122,191222],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.","nodes":[{"pos":[0,146],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.CreateParams\"&gt;&lt;/xref&gt;</ph> that contains the required creation parameters when the handle to the control is created.","source":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created."}],"pos":[192234,192381],"yaml":true},{"content":"Gets or sets the cursor that is displayed when the mouse pointer is over the control.","nodes":[{"pos":[0,85],"content":"Gets or sets the cursor that is displayed when the mouse pointer is over the control.","nodes":[{"content":"Gets or sets the cursor that is displayed when the mouse pointer is over the control.","pos":[0,85]}]}],"pos":[193321,193407],"yaml":true},{"content":"Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control. To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property. Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file.  \n  \n The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","nodes":[{"pos":[0,569],"content":"Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control. To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property. Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file.","nodes":[{"content":"Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control. To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property. Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file.","pos":[0,569],"nodes":[{"content":"Assign a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property of the control to change the cursor displayed when the mouse pointer is over the control.","pos":[0,195],"source":"Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control."},{"content":"To temporarily change the mouse cursor for all controls on your application set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName&gt;</ph> property.","pos":[196,360],"source":" To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property."},{"content":"Typically you would set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName&gt;</ph> property to a wait cursor when populating a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> or saving or loading a file.","pos":[361,569],"source":" Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file."}]}]},{"pos":[576,1099],"content":"The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","pos":[0,523],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property is an ambient property.","pos":[0,82],"source":"The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property."},{"content":"An ambient property is a control property that, if not set, is retrieved from the parent control.","pos":[83,180]},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.","pos":[181,357],"source":" For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default."},{"content":"For more information about ambient properties, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.","pos":[358,523],"source":" For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview."}]}]}],"pos":[193418,194522],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Cursor\"></xref> that represents the cursor to display when the mouse pointer is over the control.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Cursor\"&gt;&lt;/xref&gt;</ph> that represents the cursor to display when the mouse pointer is over the control.","source":"A <xref href=\"System.Windows.Forms.Cursor\"></xref> that represents the cursor to display when the mouse pointer is over the control."}],"pos":[195662,195795],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Cursor\"></xref> property changes.","nodes":[{"pos":[0,103],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Cursor\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Cursor\"></xref> property changes."}],"pos":[196785,196889],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,152],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,152],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[159,309],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[196900,197214],"yaml":true,"extradata":"MT"},{"content":"Gets the data bindings for the control.","nodes":[{"pos":[0,39],"content":"Gets the data bindings for the control.","nodes":[{"content":"Gets the data bindings for the control.","pos":[0,39]}]}],"pos":[199710,199750],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>. By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object.","nodes":[{"pos":[0,279],"content":"Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>. By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object.","nodes":[{"content":"Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>. By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object.","pos":[0,279],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> property to access the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>.","pos":[0,137],"source":"Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>."},{"content":"By adding <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to the collection, you can bind any property of a control to the property of an object.","pos":[138,279],"source":" By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object."}]}]}],"pos":[199761,200041],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.ControlBindingsCollection\"></xref> that contains the <xref href=\"System.Windows.Forms.Binding\"></xref> objects for the control.","nodes":[{"pos":[0,162],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlBindingsCollection\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Binding\"&gt;&lt;/xref&gt;</ph> objects for the control.","source":"A <xref href=\"System.Windows.Forms.ControlBindingsCollection\"></xref> that contains the <xref href=\"System.Windows.Forms.Binding\"></xref> objects for the control."}],"pos":[201177,201340],"yaml":true},{"content":"Gets the default background color of the control.","nodes":[{"pos":[0,49],"content":"Gets the default background color of the control.","nodes":[{"content":"Gets the default background color of the control.","pos":[0,49]}]}],"pos":[202357,202407],"yaml":true},{"content":"This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control. Derived classes can have different defaults.","nodes":[{"pos":[0,160],"content":"This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control. Derived classes can have different defaults.","nodes":[{"content":"This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control. Derived classes can have different defaults.","pos":[0,160],"nodes":[{"content":"This is the default <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property value of a generic top-level control.","pos":[0,115],"source":"This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control."},{"content":"Derived classes can have different defaults.","pos":[116,160]}]}]}],"pos":[202418,202579],"yaml":true,"extradata":"MT"},{"content":"The default background <xref href=\"System.Drawing.Color\"></xref> of the control. The default is <xref href=\"System.Drawing.SystemColors.Control\"></xref>.","nodes":[{"pos":[0,153],"content":"The default background <xref href=\"System.Drawing.Color\"></xref> of the control. The default is <xref href=\"System.Drawing.SystemColors.Control\"></xref>.","nodes":[{"content":"The default background <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> of the control.","pos":[0,80],"source":"The default background <xref href=\"System.Drawing.Color\"></xref> of the control."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Drawing.SystemColors.Control\"&gt;&lt;/xref&gt;</ph>.","pos":[81,153],"source":" The default is <xref href=\"System.Drawing.SystemColors.Control\"></xref>."}]}],"pos":[203748,203902],"yaml":true},{"content":"Gets or sets the default cursor for the control.","nodes":[{"pos":[0,48],"content":"Gets or sets the default cursor for the control.","nodes":[{"content":"Gets or sets the default cursor for the control.","pos":[0,48]}]}],"pos":[204866,204915],"yaml":true},{"content":"Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control. This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.","nodes":[{"pos":[0,261],"content":"Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control. This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.","nodes":[{"content":"Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control. This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.","pos":[0,261],"nodes":[{"content":"Override <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultCursor%2A&gt;</ph> to configure a default cursor for your control.","pos":[0,109],"source":"Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control."},{"content":"This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.","pos":[110,261]}]}]}],"pos":[204926,205188],"yaml":true,"extradata":"MT"},{"content":"An object of type <xref href=\"System.Windows.Forms.Cursor\"></xref> representing the current default cursor.","nodes":[{"pos":[0,107],"content":"An object of type <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Cursor\"&gt;&lt;/xref&gt;</ph> representing the current default cursor.","source":"An object of type <xref href=\"System.Windows.Forms.Cursor\"></xref> representing the current default cursor."}],"pos":[205351,205459],"yaml":true},{"content":"Gets the default font of the control.","nodes":[{"pos":[0,37],"content":"Gets the default font of the control.","nodes":[{"content":"Gets the default font of the control.","pos":[0,37]}]}],"pos":[206408,206446],"yaml":true},{"content":"The following table describes the value returned by <xref:System.Windows.Forms.Control.DefaultFont%2A> depending on the operating system and local culture.  \n  \n|System/and or Culture|Font|  \n|----------------------------|----------|  \n|Windows NT 4x, Japanese version|MS UI Gothic, 9 point.|  \n|Arabic Windows|Tahoma, 8 point.|  \n|Other operating system/culture|MS Shell Dlg logical font, typically Microsoft San Serif 8 point.|  \n  \n MS Shell Dlg maps to a font set in the system registry.  \n  \n If the previous fonts are not installed, the default font is Tahoma, 8 point. If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A>returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property","nodes":[{"pos":[0,155],"content":"The following table describes the value returned by <xref:System.Windows.Forms.Control.DefaultFont%2A> depending on the operating system and local culture.","nodes":[{"content":"The following table describes the value returned by <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> depending on the operating system and local culture.","pos":[0,155],"source":"The following table describes the value returned by <xref:System.Windows.Forms.Control.DefaultFont%2A> depending on the operating system and local culture."}]},{"pos":[162,183],"content":"System/and or Culture","nodes":[{"content":"System/and or Culture","pos":[0,21]}]},{"pos":[184,188],"content":"Font","nodes":[{"content":"Font","pos":[0,4]}]},{"pos":[237,268],"content":"Windows NT 4x, Japanese version","nodes":[{"content":"Windows NT 4x, Japanese version","pos":[0,31]}]},{"pos":[269,291],"content":"MS UI Gothic, 9 point.","nodes":[{"content":"MS UI Gothic, 9 point.","pos":[0,22]}]},{"pos":[296,310],"content":"Arabic Windows","nodes":[{"content":"Arabic Windows","pos":[0,14]}]},{"pos":[311,327],"content":"Tahoma, 8 point.","nodes":[{"content":"Tahoma, 8 point.","pos":[0,16]}]},{"pos":[332,362],"content":"Other operating system/culture","nodes":[{"content":"Other operating system/culture","pos":[0,30]}]},{"pos":[363,428],"content":"MS Shell Dlg logical font, typically Microsoft San Serif 8 point.","nodes":[{"content":"MS Shell Dlg logical font, typically Microsoft San Serif 8 point.","pos":[0,65]}]},{"pos":[436,491],"content":"MS Shell Dlg maps to a font set in the system registry.","nodes":[{"content":"MS Shell Dlg maps to a font set in the system registry.","pos":[0,55]}]},{"pos":[498,750],"content":"If the previous fonts are not installed, the default font is Tahoma, 8 point. If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A>returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property","nodes":[{"content":"If the previous fonts are not installed, the default font is Tahoma, 8 point. If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A>returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property","pos":[0,252],"nodes":[{"content":"If the previous fonts are not installed, the default font is Tahoma, 8 point.","pos":[0,77]},{"content":"If Tahoma, 8 point, is not installed, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>returns the value of the <ph id=\"ph2\">&lt;xref:System.Drawing.FontFamily.GenericSansSerif%2A&gt;</ph> property","pos":[78,252],"source":" If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A>returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property"}]}]}],"pos":[206457,207220],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.Drawing.Font\"></xref> of the control. The value returned will vary depending on the user's operating system the local culture setting of their system.","nodes":[{"pos":[0,181],"content":"The default <xref href=\"System.Drawing.Font\"></xref> of the control. The value returned will vary depending on the user's operating system the local culture setting of their system.","nodes":[{"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Font\"&gt;&lt;/xref&gt;</ph> of the control.","pos":[0,68],"source":"The default <xref href=\"System.Drawing.Font\"></xref> of the control."},{"content":"The value returned will vary depending on the user's operating system the local culture setting of their system.","pos":[69,181]}]}],"pos":[208382,208564],"yaml":true},{"content":"The default font or the regional alternative fonts are not installed on the client computer.","nodes":[{"pos":[0,92],"content":"The default font or the regional alternative fonts are not installed on the client computer.","nodes":[{"content":"The default font or the regional alternative fonts are not installed on the client computer.","pos":[0,92]}]}],"pos":[208726,208819],"yaml":true},{"content":"Gets the default foreground color of the control.","nodes":[{"pos":[0,49],"content":"Gets the default foreground color of the control.","nodes":[{"content":"Gets the default foreground color of the control.","pos":[0,49]}]}],"pos":[209747,209797],"yaml":true},{"content":"This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control. Derived classes can have different defaults.","nodes":[{"pos":[0,154],"content":"This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control. Derived classes can have different defaults.","nodes":[{"content":"This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control. Derived classes can have different defaults.","pos":[0,154],"nodes":[{"content":"This is the default <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property value of a nonparented control.","pos":[0,109],"source":"This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control."},{"content":"Derived classes can have different defaults.","pos":[110,154]}]}]}],"pos":[209808,209963],"yaml":true,"extradata":"MT"},{"content":"The default foreground <xref href=\"System.Drawing.Color\"></xref> of the control. The default is <xref href=\"System.Drawing.SystemColors.ControlText\"></xref>.","nodes":[{"pos":[0,157],"content":"The default foreground <xref href=\"System.Drawing.Color\"></xref> of the control. The default is <xref href=\"System.Drawing.SystemColors.ControlText\"></xref>.","nodes":[{"content":"The default foreground <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> of the control.","pos":[0,80],"source":"The default foreground <xref href=\"System.Drawing.Color\"></xref> of the control."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Drawing.SystemColors.ControlText\"&gt;&lt;/xref&gt;</ph>.","pos":[81,157],"source":" The default is <xref href=\"System.Drawing.SystemColors.ControlText\"></xref>."}]}],"pos":[211132,211290],"yaml":true},{"content":"Gets the default Input Method Editor (IME) mode supported by the control.","nodes":[{"pos":[0,73],"content":"Gets the default Input Method Editor (IME) mode supported by the control.","nodes":[{"content":"Gets the default Input Method Editor (IME) mode supported by the control.","pos":[0,73]}]}],"pos":[212282,212356],"yaml":true},{"content":"An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.  \n  \n As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value. The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control.","nodes":[{"pos":[0,166],"content":"An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.","nodes":[{"content":"An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.","pos":[0,166]}]},{"pos":[173,458],"content":"As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value. The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control.","nodes":[{"content":"As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value. The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control.","pos":[0,285],"nodes":[{"content":"As implemented in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, this property always returns the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ImeMode?displayProperty=fullName&gt;</ph> value.","pos":[0,165],"source":"As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ImeMode.Inherit&gt;</ph> value specifies that the IME mode is inherited from the parent control.","pos":[166,285],"source":" The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control."}]}]}],"pos":[212367,212830],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values.","nodes":[{"pos":[0,68],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImeMode\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values."}],"pos":[213655,213724],"yaml":true},{"content":"Gets the space, in pixels, that is specified by default between controls.","nodes":[{"pos":[0,73],"content":"Gets the space, in pixels, that is specified by default between controls.","nodes":[{"content":"Gets the space, in pixels, that is specified by default between controls.","pos":[0,73]}]}],"pos":[214708,214782],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.Padding\"></xref> that represents the default space between controls.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Padding\"&gt;&lt;/xref&gt;</ph> that represents the default space between controls.","source":"A <xref href=\"System.Windows.Forms.Padding\"></xref> that represents the default space between controls."}],"pos":[214947,215051],"yaml":true},{"content":"Gets the length and height, in pixels, that is specified as the default maximum size of a control.","nodes":[{"pos":[0,98],"content":"Gets the length and height, in pixels, that is specified as the default maximum size of a control.","nodes":[{"content":"Gets the length and height, in pixels, that is specified as the default maximum size of a control.","pos":[0,98]}]}],"pos":[216064,216163],"yaml":true},{"content":"A <xref href=\"System.Drawing.Point.#ctor(System.Drawing.Size)\"></xref> representing the size of the control.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.#ctor(System.Drawing.Size)\"&gt;&lt;/xref&gt;</ph> representing the size of the control.","source":"A <xref href=\"System.Drawing.Point.#ctor(System.Drawing.Size)\"></xref> representing the size of the control."}],"pos":[216315,216424],"yaml":true},{"content":"Gets the length and height, in pixels, that is specified as the default minimum size of a control.","nodes":[{"pos":[0,98],"content":"Gets the length and height, in pixels, that is specified as the default minimum size of a control.","nodes":[{"content":"Gets the length and height, in pixels, that is specified as the default minimum size of a control.","pos":[0,98]}]}],"pos":[217442,217541],"yaml":true},{"content":"A <xref href=\"System.Drawing.Size\"></xref> representing the size of the control.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> representing the size of the control.","source":"A <xref href=\"System.Drawing.Size\"></xref> representing the size of the control."}],"pos":[217693,217774],"yaml":true},{"content":"Gets the internal spacing, in pixels, of the contents of a control.","nodes":[{"pos":[0,67],"content":"Gets the internal spacing, in pixels, of the contents of a control.","nodes":[{"content":"Gets the internal spacing, in pixels, of the contents of a control.","pos":[0,67]}]}],"pos":[218768,218836],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.Padding\"></xref> that represents the internal spacing of the contents of a control.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Padding\"&gt;&lt;/xref&gt;</ph> that represents the internal spacing of the contents of a control.","source":"A <xref href=\"System.Windows.Forms.Padding\"></xref> that represents the internal spacing of the contents of a control."}],"pos":[219002,219121],"yaml":true},{"content":"Gets the default size of the control.","nodes":[{"pos":[0,37],"content":"Gets the default size of the control.","nodes":[{"content":"Gets the default size of the control.","pos":[0,37]}]}],"pos":[220093,220131],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created. You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value.  \n  \n> [!NOTE]\n>  To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.  \n  \n> [!NOTE]\n>  On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.","nodes":[{"pos":[0,264],"content":"The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created. You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created. You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value.","pos":[0,264],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property represents the <ph id=\"ph2\">&lt;xref:System.Drawing.Size&gt;</ph> of the control when it is initially created.","pos":[0,150],"source":"The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created."},{"content":"You can adjust the size of the control by setting its <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property value.","pos":[151,264],"source":" You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value."}]}]},{"pos":[272,490],"content":"[!NOTE]\n To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","leadings":["","> "],"nodes":[{"content":" To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","pos":[8,216],"nodes":[{"content":"To maintain better performance, do not set the <ph id=\"ph1\">&lt;xref:System.Drawing.Size&gt;</ph> of a control in its constructor.","pos":[1,107],"source":" To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor."},{"content":"The preferred method is to override the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.","pos":[108,208],"source":" The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property."}]}]},{"pos":[498,655],"content":"[!NOTE]\n On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.","leadings":["","> "],"nodes":[{"content":"On Windows Server 2003 systems, the size of a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.","pos":[9,155],"source":" On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor."}]}],"pos":[220142,220806],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.Drawing.Size\"></xref> of the control.","nodes":[{"pos":[0,68],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The default <xref href=\"System.Drawing.Size\"></xref> of the control."}],"pos":[221629,221698],"yaml":true},{"content":"Sends the specified message to the default window procedure.","nodes":[{"pos":[0,60],"content":"Sends the specified message to the default window procedure.","nodes":[{"content":"Sends the specified message to the default window procedure.","pos":[0,60]}]}],"pos":[222779,222840],"yaml":true},{"content":"For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).","nodes":[{"pos":[0,133],"content":"For more information about processing Windows messages, see the <bpt id=\"p1\">[</bpt>WindowProc function<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.","source":"For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565)."}],"pos":[222851,222985],"yaml":true,"extradata":"MT"},{"content":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.","nodes":[{"pos":[0,73],"content":"The Windows <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph> to process.","source":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process."}],"pos":[223168,223242],"yaml":true},{"content":"Destroys the handle associated with the control.","nodes":[{"pos":[0,48],"content":"Destroys the handle associated with the control.","nodes":[{"content":"Destroys the handle associated with the control.","pos":[0,48]}]}],"pos":[224243,224292],"yaml":true},{"content":"Gets the DPI value for the display device where the control is currently being displayed.","nodes":[{"pos":[0,89],"content":"Gets the DPI value for the display device where the control is currently being displayed.","nodes":[{"content":"Gets the DPI value for the display device where the control is currently being displayed.","pos":[0,89]}]}],"pos":[225351,225441],"yaml":true},{"content":"The DPI value of the display device.","nodes":[{"pos":[0,36],"content":"The DPI value of the display device.","nodes":[{"content":"The DPI value of the display device.","pos":[0,36]}]}],"pos":[225607,225644],"yaml":true},{"content":"Gets the rectangle that represents the display area of the control.","nodes":[{"pos":[0,67],"content":"Gets the rectangle that represents the display area of the control.","nodes":[{"content":"Gets the rectangle that represents the display area of the control.","pos":[0,67]}]}],"pos":[226401,226469],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control. For the base control class, this is equal to the client rectangle. However, inheriting controls might want to change this if their client area differs from their display area. The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls.","nodes":[{"pos":[0,436],"content":"The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control. For the base control class, this is equal to the client rectangle. However, inheriting controls might want to change this if their client area differs from their display area. The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control. For the base control class, this is equal to the client rectangle. However, inheriting controls might want to change this if their client area differs from their display area. The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls.","pos":[0,436],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> property returns the client rectangle of the display area of the control.","pos":[0,133],"source":"The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control."},{"content":"For the base control class, this is equal to the client rectangle.","pos":[134,200]},{"content":"However, inheriting controls might want to change this if their client area differs from their display area.","pos":[201,309]},{"content":"The display rectangle is the smallest <ph id=\"ph1\">&lt;xref:System.Drawing.Rectangle&gt;</ph> that encloses a control and is used to lay out controls.","pos":[310,436],"source":" The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls."}]}]}],"pos":[226480,226917],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the display area of the control.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that represents the display area of the control.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the display area of the control."}],"pos":[227131,227228],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Windows.Forms.Control\"></xref> and its child controls and optionally releases the managed resources.","nodes":[{"pos":[0,164],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> and its child controls and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Windows.Forms.Control\"></xref> and its child controls and optionally releases the managed resources."}],"pos":[228316,228481],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Control> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,292],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.<ph id=\"ph3\">`Dispose()`</ph>","pos":[0,114],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.`Dispose()`"},{"content":"invokes the protected <ph id=\"ph1\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph2\">`disposing`</ph> parameter set to <ph id=\"ph3\">`true`</ph>.","pos":[115,208],"source":" invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[209,292],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[299,531],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Control> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control&gt;</ph> references.","pos":[0,162],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Control> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[163,232],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[228492,229028],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[229183,229286],"yaml":true},{"content":"Gets a value indicating whether the base <xref href=\"System.Windows.Forms.Control\"></xref> class is in the process of disposing.","nodes":[{"pos":[0,128],"content":"Gets a value indicating whether the base <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> class is in the process of disposing.","source":"Gets a value indicating whether the base <xref href=\"System.Windows.Forms.Control\"></xref> class is in the process of disposing."}],"pos":[230239,230368],"yaml":true},{"content":"When this property returns `true`, the base<xref:System.Windows.Forms.Control> class is in the process of disposing. After the control is disposed of, it can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed of, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.","nodes":[{"pos":[0,469],"content":"When this property returns `true`, the base<xref:System.Windows.Forms.Control> class is in the process of disposing. After the control is disposed of, it can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed of, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.","nodes":[{"content":"When this property returns <ph id=\"ph1\">`true`</ph>, the base<ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is in the process of disposing.","pos":[0,116],"source":"When this property returns `true`, the base<xref:System.Windows.Forms.Control> class is in the process of disposing."},{"content":"After the control is disposed of, it can no longer be referenced as a valid Windows control.","pos":[117,209]},{"content":"Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.","pos":[210,356]},{"content":"When a control is disposed of, you cannot call its <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.","pos":[357,469],"source":" When a control is disposed of, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method."}]}],"pos":[230379,230849],"yaml":true,"extradata":"MT"},{"content":"`true` if the base <xref href=\"System.Windows.Forms.Control\"></xref> class is in the process of disposing; otherwise, `false`.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">`true`</ph> if the base <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> class is in the process of disposing; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the base <xref href=\"System.Windows.Forms.Control\"></xref> class is in the process of disposing; otherwise, `false`."}],"pos":[231018,231147],"yaml":true},{"content":"Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.","nodes":[{"pos":[0,124],"content":"Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.","nodes":[{"content":"Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.","pos":[0,124]}]}],"pos":[232115,232240],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized. For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle?displayProperty=fullName> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized. Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).  \n  \n A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.  \n  \n Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the the edges of its container.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.","nodes":[{"pos":[0,521],"content":"Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized. For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle?displayProperty=fullName> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized. Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).","nodes":[{"content":"Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized. For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle?displayProperty=fullName> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized. Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).","pos":[0,521],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property to define how a control is automatically resized as its parent control is resized.","pos":[0,143],"source":"Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized."},{"content":"For example, setting <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DockStyle?displayProperty=fullName&gt;</ph> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized.","pos":[144,399],"source":" For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle?displayProperty=fullName> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized."},{"content":"Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).","pos":[400,521]}]}]},{"pos":[528,648],"content":"A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.","nodes":[{"content":"A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.","pos":[0,120]}]},{"pos":[655,823],"content":"Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the the edges of its container.","nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> property on a docked control has no effect on the distance of the control from the the edges of its container.","pos":[0,168],"source":"Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the the edges of its container."}]},{"pos":[831,1044],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.","pos":[8,211],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties are mutually exclusive.","pos":[1,133],"source":" The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive."},{"content":"Only one can be set at a time, and the last one set takes precedence.","pos":[134,203]}]}]}],"pos":[232251,233305],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.DockStyle\"></xref> values. The default is <xref href=\"System.Windows.Forms.DockStyle.None\"></xref>.","nodes":[{"pos":[0,143],"content":"One of the <xref href=\"System.Windows.Forms.DockStyle\"></xref> values. The default is <xref href=\"System.Windows.Forms.DockStyle.None\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DockStyle\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,70],"source":"One of the <xref href=\"System.Windows.Forms.DockStyle\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DockStyle.None\"&gt;&lt;/xref&gt;</ph>.","pos":[71,143],"source":" The default is <xref href=\"System.Windows.Forms.DockStyle.None\"></xref>."}]}],"pos":[234549,234693],"yaml":true},{"content":"The value assigned is not one of the <xref href=\"System.Windows.Forms.DockStyle\"></xref> values.","nodes":[{"pos":[0,96],"content":"The value assigned is not one of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DockStyle\"&gt;&lt;/xref&gt;</ph> values.","source":"The value assigned is not one of the <xref href=\"System.Windows.Forms.DockStyle\"></xref> values."}],"pos":[234900,234997],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Dock\"></xref> property changes.","nodes":[{"pos":[0,101],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Dock\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Dock\"></xref> property changes."}],"pos":[235909,236011],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,150],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[157,307],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[236022,236334],"yaml":true,"extradata":"MT"},{"content":"Begins a drag-and-drop operation.","nodes":[{"pos":[0,33],"content":"Begins a drag-and-drop operation.","nodes":[{"content":"Begins a drag-and-drop operation.","pos":[0,33]}]}],"pos":[239131,239165],"yaml":true},{"content":"The `allowedEffects` parameter determines which drag operations can occur. If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<xref:System.String>, <xref:System.Drawing.Bitmap>, or <xref:System.Drawing.Imaging.Metafile>), or an object that implements <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Windows.Forms.IDataObject>.  \n  \n The following describes how and when events related to drag-and-drop operations are raised.  \n  \n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \n  \n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \n  \n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \n  \n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \n  \n If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n    > [!NOTE]\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method catches all exceptions and rethrows only the following security or critical exceptions:  \n  \n-   SecurityException  \n  \n-   NullReferenceException  \n  \n-   StackOverflowException  \n  \n-   OutOfMemoryException  \n  \n-   ThreadAbortException  \n  \n-   ExecutionEngineException  \n  \n-   IndexOutOfRangeException  \n  \n-   AccessViolationException","nodes":[{"pos":[0,419],"content":"The `allowedEffects` parameter determines which drag operations can occur. If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<xref:System.String>, <xref:System.Drawing.Bitmap>, or <xref:System.Drawing.Imaging.Metafile>), or an object that implements <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Windows.Forms.IDataObject>.","nodes":[{"content":"The <ph id=\"ph1\">`allowedEffects`</ph> parameter determines which drag operations can occur.","pos":[0,74],"source":"The `allowedEffects` parameter determines which drag operations can occur."},{"content":"If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<ph id=\"ph1\">&lt;xref:System.String&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Drawing.Bitmap&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>), or an object that implements <ph id=\"ph4\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>.","pos":[75,419],"source":" If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<xref:System.String>, <xref:System.Drawing.Bitmap>, or <xref:System.Drawing.Imaging.Metafile>), or an object that implements <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Windows.Forms.IDataObject>."}]},{"pos":[426,517],"content":"The following describes how and when events related to drag-and-drop operations are raised.","nodes":[{"content":"The following describes how and when events related to drag-and-drop operations are raised.","pos":[0,91]}]},{"pos":[524,703],"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","pos":[0,179],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.","pos":[0,118],"source":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location."},{"content":"It then checks to see if the control is a valid drop target.","pos":[119,179]}]}]},{"pos":[710,960],"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","pos":[0,250],"nodes":[{"content":"If the control is a valid drop target, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.","pos":[0,148],"source":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified."},{"content":"For a list of drag-and-drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[149,250],"source":" For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]}]},{"pos":[967,1056],"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","nodes":[{"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","pos":[0,89]}]},{"pos":[1066,1167],"content":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.","nodes":[{"content":"If the user moves out of a window, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","pos":[0,101],"source":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."}]},{"pos":[1177,1291],"content":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.","nodes":[{"content":"If the mouse enters another control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.","pos":[0,114],"source":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised."}]},{"pos":[1301,1420],"content":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.","nodes":[{"content":"If the mouse moves but stays within the same control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.","pos":[0,119],"source":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised."}]},{"pos":[1427,1821],"content":"If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.","nodes":[{"content":"If there is a change in the keyboard or mouse button state, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.","pos":[0,394],"source":"If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>."}]},{"pos":[1831,2226],"content":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Continue`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.","pos":[0,296],"source":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set."},{"content":"For a list of valid drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[297,395],"source":" For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]},{"pos":[2238,2495],"content":"[!NOTE]\nThe <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","leadings":["","    >  "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","pos":[8,250],"source":"The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position."}]},{"pos":[2505,2758],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move."},{"pos":[2768,2902],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Cancel`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."},{"pos":[2910,3069],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method catches all exceptions and rethrows only the following security or critical exceptions:","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method catches all exceptions and rethrows only the following security or critical exceptions:","pos":[9,157],"source":" The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method catches all exceptions and rethrows only the following security or critical exceptions:"}]},{"pos":[3079,3096],"content":"SecurityException","nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[3106,3128],"content":"NullReferenceException","nodes":[{"content":"NullReferenceException","pos":[0,22]}]},{"pos":[3138,3160],"content":"StackOverflowException","nodes":[{"content":"StackOverflowException","pos":[0,22]}]},{"pos":[3170,3190],"content":"OutOfMemoryException","nodes":[{"content":"OutOfMemoryException","pos":[0,20]}]},{"pos":[3200,3220],"content":"ThreadAbortException","nodes":[{"content":"ThreadAbortException","pos":[0,20]}]},{"pos":[3230,3254],"content":"ExecutionEngineException","nodes":[{"content":"ExecutionEngineException","pos":[0,24]}]},{"pos":[3264,3288],"content":"IndexOutOfRangeException","nodes":[{"content":"IndexOutOfRangeException","pos":[0,24]}]},{"pos":[3298,3322],"content":"AccessViolationException","nodes":[{"content":"AccessViolationException","pos":[0,24]}]}],"pos":[239176,242545],"yaml":true,"extradata":"MT"},{"content":"The data to drag.","nodes":[{"pos":[0,17],"content":"The data to drag.","nodes":[{"content":"The data to drag.","pos":[0,17]}]}],"pos":[246677,246695],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> values.","nodes":[{"pos":[0,76],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragDropEffects\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> values."}],"pos":[246788,246865],"yaml":true},{"content":"A value from the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> enumeration that represents the final effect that was performed during the drag-and-drop operation.","nodes":[{"pos":[0,174],"content":"A value from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragDropEffects\"&gt;&lt;/xref&gt;</ph> enumeration that represents the final effect that was performed during the drag-and-drop operation.","source":"A value from the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> enumeration that represents the final effect that was performed during the drag-and-drop operation."}],"pos":[246945,247120],"yaml":true},{"content":"Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.","nodes":[{"pos":[0,133],"content":"Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.","nodes":[{"content":"Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.","pos":[0,133]}]}],"pos":[248106,248240],"yaml":true},{"content":"Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface. Buffered graphics require that the updated graphics data is first written to a buffer. The data in the graphics buffer is then quickly written to displayed surface memory. The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.  \n  \n> [!NOTE]\n>  <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is not a bindable property.","nodes":[{"pos":[0,411],"content":"Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface. Buffered graphics require that the updated graphics data is first written to a buffer. The data in the graphics buffer is then quickly written to displayed surface memory. The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.","nodes":[{"content":"Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface. Buffered graphics require that the updated graphics data is first written to a buffer. The data in the graphics buffer is then quickly written to displayed surface memory. The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.","pos":[0,411],"nodes":[{"content":"Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface.","pos":[0,122]},{"content":"Buffered graphics require that the updated graphics data is first written to a buffer.","pos":[123,209]},{"content":"The data in the graphics buffer is then quickly written to displayed surface memory.","pos":[210,294]},{"content":"The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.","pos":[295,411]}]}]},{"pos":[419,511],"content":"[!NOTE]\n <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is not a bindable property.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is not a bindable property.","pos":[9,90],"source":" <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is not a bindable property."}]}],"pos":[248251,248768],"yaml":true,"extradata":"MT"},{"content":"`true` if the surface of the control should be drawn using double buffering; otherwise, `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if the surface of the control should be drawn using double buffering; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the surface of the control should be drawn using double buffering; otherwise, `false`."}],"pos":[248901,249000],"yaml":true},{"content":"Occurs when the control is double-clicked.","nodes":[{"pos":[0,42],"content":"Occurs when the control is double-clicked.","nodes":[{"content":"Occurs when the control is double-clicked.","pos":[0,42]}]}],"pos":[249947,249990],"yaml":true},{"content":"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked. For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.  \n  \n You must set the `StandardDoubleClick` and `StandardClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised. These values might already be set to `true` if you are inheriting from existing Windows Forms controls.  \n  \n> [!NOTE]\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,872],"content":"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked. For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.","nodes":[{"content":"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked. For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.","pos":[0,872],"nodes":[{"content":"A double-click is determined by the mouse settings of the user's operating system.","pos":[0,82]},{"content":"The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.","pos":[83,206]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised every time a control is double-clicked.","pos":[207,308],"source":" The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked."},{"content":"For example, if you have event handlers for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events of a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.","pos":[309,673],"source":" For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called."},{"content":"If a control is double-clicked and that control does not support the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event might be raised twice.","pos":[674,872],"source":" If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice."}]}]},{"pos":[879,1132],"content":"You must set the `StandardDoubleClick` and `StandardClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised. These values might already be set to `true` if you are inheriting from existing Windows Forms controls.","nodes":[{"content":"You must set the <ph id=\"ph1\">`StandardDoubleClick`</ph> and <ph id=\"ph2\">`StandardClick`</ph> values of <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> to <ph id=\"ph4\">`true`</ph> for this event to be raised.","pos":[0,149],"source":"You must set the `StandardDoubleClick` and `StandardClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised."},{"content":"These values might already be set to <ph id=\"ph1\">`true`</ph> if you are inheriting from existing Windows Forms controls.","pos":[150,253],"source":" These values might already be set to `true` if you are inheriting from existing Windows Forms controls."}]},{"pos":[1140,2191],"content":"[!NOTE]\n The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","leadings":["","> "],"nodes":[{"content":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","pos":[8,1049],"nodes":[{"content":"The following events are not raised for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName&gt;</ph> collection: <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id=\"ph11\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.","pos":[1,627],"source":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>."},{"content":"If there is at least one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.","pos":[628,895],"source":" If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event."},{"content":"However, if the user interaction is within the client area of the tab page, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.","pos":[896,1041],"source":" However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event."}]}]},{"pos":[2198,2348],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[250001,252359],"yaml":true,"extradata":"MT"},{"content":"Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.","nodes":[{"pos":[0,127],"content":"Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.","nodes":[{"content":"Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.","pos":[0,127]}]}],"pos":[254097,254225],"yaml":true},{"content":"Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.","nodes":[{"pos":[0,141],"content":"Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.","nodes":[{"content":"Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.","pos":[0,141]}]}],"pos":[255036,255178],"yaml":true},{"content":"Occurs when a drag-and-drop operation is completed.","nodes":[{"pos":[0,51],"content":"Occurs when a drag-and-drop operation is completed.","nodes":[{"content":"Occurs when a drag-and-drop operation is completed.","pos":[0,51]}]}],"pos":[255906,255958],"yaml":true},{"content":"The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>.  \n  \n```  \nPoint clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  \n```  \n  \n> [!NOTE]\n>  In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised. However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,348],"content":"The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.","pos":[0,212],"source":"The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates."},{"content":"The following line of <ph id=\"ph1\">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> code converts the properties to a client <ph id=\"ph2\">&lt;xref:System.Drawing.Point&gt;</ph>.","pos":[213,348],"source":" The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>."}]},{"pos":[445,1029],"content":"[!NOTE]\n In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised. However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.","leadings":["","> "],"nodes":[{"content":" In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised. However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.","pos":[8,582],"nodes":[{"content":"In versions earlier than <ph id=\"ph1\">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, if you put a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events on a Windows Form and drag and drop something onto the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> at design time, the <ph id=\"ph6\">`DropDrop`</ph> and <ph id=\"ph7\">`DropEnter`</ph> events are raised.","pos":[1,397],"source":" In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised."},{"content":"However, when you close and reopen the solution, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events are not raised again.","pos":[398,574],"source":" However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again."}]}]},{"pos":[1036,1186],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[255969,257167],"yaml":true,"extradata":"MT"},{"content":"Occurs when an object is dragged into the control's bounds.","nodes":[{"pos":[0,59],"content":"Occurs when an object is dragged into the control's bounds.","nodes":[{"content":"Occurs when an object is dragged into the control's bounds.","pos":[0,59]}]}],"pos":[258930,258990],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.DragEnter> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.  \n  \n> [!NOTE]\n>  In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised. However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.  \n  \n The following describes how and when events related to drag-and-drop operations are raised.  \n  \n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \n  \n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \n  \n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \n  \n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \n  \n If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n    > [!NOTE]\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n    > [!NOTE]\n    >  The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>.  \n  \n    ```  \n    Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  \n    ```  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,159],"content":"The <xref:System.Windows.Forms.Control.DragEnter> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.","pos":[0,159],"source":"The <xref:System.Windows.Forms.Control.DragEnter> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation."}]},{"pos":[167,751],"content":"[!NOTE]\n In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised. However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.","leadings":["","> "],"nodes":[{"content":" In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised. However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.","pos":[8,582],"nodes":[{"content":"In versions earlier than <ph id=\"ph1\">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, if you put a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events on a Windows Form and drag and drop something onto the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> at design time, the <ph id=\"ph6\">`DropDrop`</ph> and <ph id=\"ph7\">`DropEnter`</ph> events are raised.","pos":[1,397],"source":" In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised."},{"content":"However, when you close and reopen the solution, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events are not raised again.","pos":[398,574],"source":" However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again."}]}]},{"pos":[758,849],"content":"The following describes how and when events related to drag-and-drop operations are raised.","nodes":[{"content":"The following describes how and when events related to drag-and-drop operations are raised.","pos":[0,91]}]},{"pos":[856,1035],"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","pos":[0,179],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.","pos":[0,118],"source":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location."},{"content":"It then checks to see if the control is a valid drop target.","pos":[119,179]}]}]},{"pos":[1042,1292],"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","pos":[0,250],"nodes":[{"content":"If the control is a valid drop target, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.","pos":[0,148],"source":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified."},{"content":"For a list of drag-and-drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[149,250],"source":" For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]}]},{"pos":[1299,1388],"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","nodes":[{"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","pos":[0,89]}]},{"pos":[1398,1499],"content":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.","nodes":[{"content":"If the user moves out of a window, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","pos":[0,101],"source":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."}]},{"pos":[1509,1623],"content":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.","nodes":[{"content":"If the mouse enters another control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.","pos":[0,114],"source":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised."}]},{"pos":[1633,1752],"content":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.","nodes":[{"content":"If the mouse moves but stays within the same control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.","pos":[0,119],"source":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised."}]},{"pos":[1759,2152],"content":"If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.","nodes":[{"content":"If there is a change in the keyboard or mouse button state, the<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.","pos":[0,393],"source":"If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>."}]},{"pos":[2162,2557],"content":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Continue`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.","pos":[0,296],"source":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set."},{"content":"For a list of valid drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[297,395],"source":" For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]},{"pos":[2569,2826],"content":"[!NOTE]\nThe <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","leadings":["","    >  "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","pos":[8,250],"source":"The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position."}]},{"pos":[2836,3089],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move."},{"pos":[3099,3233],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Cancel`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."},{"pos":[3245,3608],"content":"[!NOTE]\nThe <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>.","leadings":["","    >  "],"nodes":[{"content":"The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>.","pos":[8,356],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.","pos":[0,212],"source":"The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates."},{"content":"The following line of <ph id=\"ph1\">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> code converts the properties to a client <ph id=\"ph2\">&lt;xref:System.Drawing.Point&gt;</ph>.","pos":[213,348],"source":" The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>."}]}]},{"pos":[3716,3866],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[259001,262907],"yaml":true,"extradata":"MT"},{"content":"Occurs when an object is dragged out of the control's bounds.","nodes":[{"pos":[0,61],"content":"Occurs when an object is dragged out of the control's bounds.","nodes":[{"content":"Occurs when an object is dragged out of the control's bounds.","pos":[0,61]}]}],"pos":[266772,266834],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.DragLeave> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.  \n  \n The following describes how and when events related to drag-and-drop operations are raised.  \n  \n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \n  \n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \n  \n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \n  \n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \n  \n If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n    > [!NOTE]\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,172],"content":"The <xref:System.Windows.Forms.Control.DragLeave> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.","pos":[0,172],"source":"The <xref:System.Windows.Forms.Control.DragLeave> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation."}]},{"pos":[179,270],"content":"The following describes how and when events related to drag-and-drop operations are raised.","nodes":[{"content":"The following describes how and when events related to drag-and-drop operations are raised.","pos":[0,91]}]},{"pos":[277,456],"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","pos":[0,179],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.","pos":[0,118],"source":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location."},{"content":"It then checks to see if the control is a valid drop target.","pos":[119,179]}]}]},{"pos":[463,713],"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","pos":[0,250],"nodes":[{"content":"If the control is a valid drop target, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.","pos":[0,148],"source":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified."},{"content":"For a list of drag-and-drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[149,250],"source":" For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]}]},{"pos":[720,809],"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","nodes":[{"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","pos":[0,89]}]},{"pos":[819,920],"content":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.","nodes":[{"content":"If the user moves out of a window, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","pos":[0,101],"source":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."}]},{"pos":[930,1044],"content":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.","nodes":[{"content":"If the mouse enters another control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.","pos":[0,114],"source":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised."}]},{"pos":[1054,1173],"content":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.","nodes":[{"content":"If the mouse moves but stays within the same control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.","pos":[0,119],"source":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised."}]},{"pos":[1180,1574],"content":"If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.","nodes":[{"content":"If there is a change in the keyboard or mouse button state, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.","pos":[0,394],"source":"If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>."}]},{"pos":[1584,1979],"content":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Continue`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.","pos":[0,296],"source":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set."},{"content":"For a list of valid drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[297,395],"source":" For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]},{"pos":[1991,2248],"content":"[!NOTE]\nThe <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","leadings":["","    >  "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","pos":[8,250],"source":"The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position."}]},{"pos":[2258,2511],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move."},{"pos":[2521,2655],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Cancel`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."},{"pos":[2662,2812],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[266845,269687],"yaml":true,"extradata":"MT"},{"content":"Occurs when an object is dragged over the control's bounds.","nodes":[{"pos":[0,59],"content":"Occurs when an object is dragged over the control's bounds.","nodes":[{"content":"Occurs when an object is dragged over the control's bounds.","pos":[0,59]}]}],"pos":[273503,273563],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.DragOver> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.  \n  \n The following describes how and when events related to drag-and-drop operations are raised.  \n  \n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \n  \n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \n  \n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \n  \n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \n  \n If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> value is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n    > [!NOTE]\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n    > [!NOTE]\n    >  The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:  \n    >   \n    >  Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,159],"content":"The <xref:System.Windows.Forms.Control.DragOver> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.","pos":[0,159],"source":"The <xref:System.Windows.Forms.Control.DragOver> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation."}]},{"pos":[166,257],"content":"The following describes how and when events related to drag-and-drop operations are raised.","nodes":[{"content":"The following describes how and when events related to drag-and-drop operations are raised.","pos":[0,91]}]},{"pos":[264,443],"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","pos":[0,179],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.","pos":[0,118],"source":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location."},{"content":"It then checks to see if the control is a valid drop target.","pos":[119,179]}]}]},{"pos":[450,700],"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","pos":[0,250],"nodes":[{"content":"If the control is a valid drop target, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.","pos":[0,148],"source":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified."},{"content":"For a list of drag-and-drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[149,250],"source":" For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]}]},{"pos":[707,796],"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","nodes":[{"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","pos":[0,89]}]},{"pos":[806,907],"content":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.","nodes":[{"content":"If the user moves out of a window, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","pos":[0,101],"source":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."}]},{"pos":[917,1031],"content":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.","nodes":[{"content":"If the mouse enters another control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.","pos":[0,114],"source":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised."}]},{"pos":[1041,1160],"content":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.","nodes":[{"content":"If the mouse moves but stays within the same control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.","pos":[0,119],"source":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised."}]},{"pos":[1167,1560],"content":"If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.","nodes":[{"content":"If there is a change in the keyboard or mouse button state, the<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.","pos":[0,393],"source":"If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>."}]},{"pos":[1570,1971],"content":"If the value of <xref:System.Windows.Forms.DragAction> value is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> value is <ph id=\"ph2\">`Continue`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.","pos":[0,302],"source":"If the value of <xref:System.Windows.Forms.DragAction> value is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set."},{"content":"For a list of valid drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[303,401],"source":" For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]},{"pos":[1983,2240],"content":"[!NOTE]\nThe <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","leadings":["","    >  "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","pos":[8,250],"source":"The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position."}]},{"pos":[2250,2503],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move."},{"pos":[2513,2647],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Cancel`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."},{"pos":[2659,2981],"content":"[!NOTE]\nThe <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:","leadings":["","    >  "],"nodes":[{"content":"The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:","pos":[8,315],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.","pos":[0,212],"source":"The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates."},{"content":"The following line of C# code converts the properties to a client <ph id=\"ph1\">&lt;xref:System.Drawing.Point&gt;</ph>:","pos":[213,307],"source":" The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:"}]}]},{"pos":[3000,3071],"content":"Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));","nodes":[{"content":"Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));","pos":[0,71]}]},{"pos":[3078,3228],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[273574,276837],"yaml":true,"extradata":"MT"},{"content":"Supports rendering to the specified bitmap.","nodes":[{"pos":[0,43],"content":"Supports rendering to the specified bitmap.","nodes":[{"content":"Supports rendering to the specified bitmap.","pos":[0,43]}]}],"pos":[280920,280964],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls. You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required.  \n  \n The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method has the following limitations:  \n  \n-   An <xref:System.ArgumentException> might be thrown for large bitmaps. The maximum allowable size varies by machine.  \n  \n-   <xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not support the `Ink` controls for the Windows XP Tablet PC Edition 2005 operating system.  \n  \n-   <xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not draw a child <xref:System.Windows.Forms.TextBox> if the <xref:System.Windows.Forms.Control.Visible%2A> property of the <xref:System.Windows.Forms.TextBox> is set to `false`.  \n  \n-   Controls inside containers are rendered in reverse order.  \n  \n-   <xref:System.Windows.Forms.Control.DrawToBitmap%2A> is not fully functional for the <xref:System.Windows.Forms.RichTextBox>; only the border of a bitmap is drawn.","nodes":[{"pos":[0,222],"content":"The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls. You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls. You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required.","pos":[0,222],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> method is not supported for ActiveX controls.","pos":[0,101],"source":"The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls."},{"content":"You can override the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> event and provide custom printing logic if required.","pos":[102,222],"source":" You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required."}]}]},{"pos":[229,322],"content":"The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method has the following limitations:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> method has the following limitations:","pos":[0,93],"source":"The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method has the following limitations:"}]},{"pos":[332,447],"content":"An <xref:System.ArgumentException> might be thrown for large bitmaps. The maximum allowable size varies by machine.","nodes":[{"content":"An <xref:System.ArgumentException> might be thrown for large bitmaps. The maximum allowable size varies by machine.","pos":[0,115],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> might be thrown for large bitmaps.","pos":[0,69],"source":"An <xref:System.ArgumentException> might be thrown for large bitmaps."},{"content":"The maximum allowable size varies by machine.","pos":[70,115]}]}]},{"pos":[457,604],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> does not support the <ph id=\"ph2\">`Ink`</ph> controls for the Windows XP Tablet PC Edition 2005 operating system.","source":"<xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not support the `Ink` controls for the Windows XP Tablet PC Edition 2005 operating system."},{"pos":[614,848],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> does not draw a child <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> if the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is set to <ph id=\"ph5\">`false`</ph>.","source":"<xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not draw a child <xref:System.Windows.Forms.TextBox> if the <xref:System.Windows.Forms.Control.Visible%2A> property of the <xref:System.Windows.Forms.TextBox> is set to `false`."},{"pos":[858,915],"content":"Controls inside containers are rendered in reverse order.","nodes":[{"content":"Controls inside containers are rendered in reverse order.","pos":[0,57]}]},{"pos":[925,1087],"content":"<xref:System.Windows.Forms.Control.DrawToBitmap%2A> is not fully functional for the <xref:System.Windows.Forms.RichTextBox>; only the border of a bitmap is drawn.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> is not fully functional for the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>; only the border of a bitmap is drawn.","pos":[0,162],"source":"<xref:System.Windows.Forms.Control.DrawToBitmap%2A> is not fully functional for the <xref:System.Windows.Forms.RichTextBox>; only the border of a bitmap is drawn."}]}],"pos":[280975,282077],"yaml":true,"extradata":"MT"},{"content":"The bitmap to be drawn to.","nodes":[{"pos":[0,26],"content":"The bitmap to be drawn to.","nodes":[{"content":"The bitmap to be drawn to.","pos":[0,26]}]}],"pos":[282282,282309],"yaml":true},{"content":"The bounds within which the control is rendered.","nodes":[{"pos":[0,48],"content":"The bounds within which the control is rendered.","nodes":[{"content":"The bounds within which the control is rendered.","pos":[0,48]}]}],"pos":[282388,282437],"yaml":true},{"content":"Gets or sets a value indicating whether the control can respond to user interaction.","nodes":[{"pos":[0,84],"content":"Gets or sets a value indicating whether the control can respond to user interaction.","nodes":[{"content":"Gets or sets a value indicating whether the control can respond to user interaction.","pos":[0,84]}]}],"pos":[283383,283468],"yaml":true},{"content":"With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time. For example, you can disable controls that do not apply to the current state of the application. You can also disable a control to restrict its use. For example, a button can be disabled to prevent the user from clicking it. If a control is disabled, it cannot be selected.  \n  \n> [!IMPORTANT]\n>  Setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` does not disable the application's control box or prevent the application window from receiving the focus.  \n  \n When a container control has its enabled property set to `false`, all its contained controls are disabled, as well. For example, if the user clicks on any of the controls contained in a disabled <xref:System.Windows.Forms.GroupBox> control, no events are raised.  \n  \n> [!NOTE]\n>  When a scrollable control is disabled, the scroll bars are also disabled. For example, a disabled multiline textbox is unable to scroll to display all the lines of text.","nodes":[{"pos":[0,387],"content":"With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time. For example, you can disable controls that do not apply to the current state of the application. You can also disable a control to restrict its use. For example, a button can be disabled to prevent the user from clicking it. If a control is disabled, it cannot be selected.","nodes":[{"content":"With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time. For example, you can disable controls that do not apply to the current state of the application. You can also disable a control to restrict its use. For example, a button can be disabled to prevent the user from clicking it. If a control is disabled, it cannot be selected.","pos":[0,387],"nodes":[{"content":"With the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property, you can enable or disable controls at run time.","pos":[0,113],"source":"With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time."},{"content":"For example, you can disable controls that do not apply to the current state of the application.","pos":[114,210]},{"content":"You can also disable a control to restrict its use.","pos":[211,262]},{"content":"For example, a button can be disabled to prevent the user from clicking it.","pos":[263,338]},{"content":"If a control is disabled, it cannot be selected.","pos":[339,387]}]}]},{"pos":[395,596],"content":"[!IMPORTANT]\n Setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` does not disable the application's control box or prevent the application window from receiving the focus.","leadings":["","> "],"nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> does not disable the application's control box or prevent the application window from receiving the focus.","pos":[14,199],"source":" Setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` does not disable the application's control box or prevent the application window from receiving the focus."}]},{"pos":[603,865],"content":"When a container control has its enabled property set to `false`, all its contained controls are disabled, as well. For example, if the user clicks on any of the controls contained in a disabled <xref:System.Windows.Forms.GroupBox> control, no events are raised.","nodes":[{"content":"When a container control has its enabled property set to <ph id=\"ph1\">`false`</ph>, all its contained controls are disabled, as well.","pos":[0,115],"source":"When a container control has its enabled property set to `false`, all its contained controls are disabled, as well."},{"content":"For example, if the user clicks on any of the controls contained in a disabled <ph id=\"ph1\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, no events are raised.","pos":[116,262],"source":" For example, if the user clicks on any of the controls contained in a disabled <xref:System.Windows.Forms.GroupBox> control, no events are raised."}]},{"pos":[873,1053],"content":"[!NOTE]\n When a scrollable control is disabled, the scroll bars are also disabled. For example, a disabled multiline textbox is unable to scroll to display all the lines of text.","leadings":["","> "],"nodes":[{"content":" When a scrollable control is disabled, the scroll bars are also disabled. For example, a disabled multiline textbox is unable to scroll to display all the lines of text.","pos":[8,178],"nodes":[{"content":"When a scrollable control is disabled, the scroll bars are also disabled.","pos":[1,74]},{"content":"For example, a disabled multiline textbox is unable to scroll to display all the lines of text.","pos":[75,170]}]}]}],"pos":[283479,284543],"yaml":true,"extradata":"MT"},{"content":"`true` if the control can respond to user interaction; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,97],"content":"`true` if the control can respond to user interaction; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the control can respond to user interaction; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,74],"source":"`true` if the control can respond to user interaction; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[75,97],"source":" The default is `true`."}]}],"pos":[285740,285840],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.Enabled\"></xref> property value has changed.","nodes":[{"pos":[0,101],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Enabled\"&gt;&lt;/xref&gt;</ph> property value has changed.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.Enabled\"></xref> property value has changed."}],"pos":[286837,286939],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,153],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,153],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[160,310],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[286950,287265],"yaml":true,"extradata":"MT"},{"content":"Retrieves the return value of the asynchronous operation represented by the <xref href=\"System.IAsyncResult\"></xref> passed.","nodes":[{"pos":[0,124],"content":"Retrieves the return value of the asynchronous operation represented by the <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> passed.","source":"Retrieves the return value of the asynchronous operation represented by the <xref href=\"System.IAsyncResult\"></xref> passed."}],"pos":[289115,289240],"yaml":true},{"content":"If the asynchronous operation has not been completed, this function will block until the result is available.  \n  \n> [!NOTE]\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","nodes":[{"pos":[0,109],"content":"If the asynchronous operation has not been completed, this function will block until the result is available.","nodes":[{"content":"If the asynchronous operation has not been completed, this function will block until the result is available.","pos":[0,109]}]},{"pos":[117,813],"content":"[!NOTE]\n In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","leadings":["","> "],"nodes":[{"content":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[8,694],"nodes":[{"content":"In addition to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.","pos":[1,404],"source":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.","pos":[405,572],"source":" Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls."},{"content":"For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[573,686]}]}]}],"pos":[289251,290070],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that represents a specific invoke asynchronous operation, returned when calling <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref>.","nodes":[{"pos":[0,204],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that represents a specific invoke asynchronous operation, returned when calling <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IAsyncResult\"></xref> that represents a specific invoke asynchronous operation, returned when calling <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref>."}],"pos":[290234,290439],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> generated by the asynchronous operation.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> generated by the asynchronous operation.","source":"The <xref href=\"System.Object\"></xref> generated by the asynchronous operation."}],"pos":[290496,290576],"yaml":true},{"content":"The <code>asyncResult</code> parameter value is `null`.","nodes":[{"pos":[0,55],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter value is <ph id=\"ph2\">`null`</ph>.","source":"The <code>asyncResult</code> parameter value is `null`."}],"pos":[290744,290800],"yaml":true},{"content":"The <code>asyncResult</code> object was not created by a preceding call of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> method from the same control.","nodes":[{"pos":[0,187],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> object was not created by a preceding call of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"&gt;&lt;/xref&gt;</ph> method from the same control.","source":"The <code>asyncResult</code> object was not created by a preceding call of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> method from the same control."}],"pos":[290894,291082],"yaml":true},{"content":"Occurs when the control is entered.","nodes":[{"pos":[0,35],"content":"Occurs when the control is entered.","nodes":[{"content":"Occurs when the control is entered.","pos":[0,35]}]}],"pos":[291958,291994],"yaml":true},{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section and the \"Message Deadlocks\" section of the[About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx)topic.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,384],"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName&gt;</ph> property to the current form, focus events occur in the following order:","pos":[0,384],"source":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:"}]},{"pos":[394,435],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[445,489],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[499,540],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[550,596],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[606,651],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[661,706],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[713,871],"content":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the mouse or by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:","pos":[0,158],"source":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:"}]},{"pos":[881,922],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[932,976],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[986,1031],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[1041,1082],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[1092,1138],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[1148,1193],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[1200,1414],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.","source":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed."},{"pos":[1422,2588],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.","pos":[8,1164],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are suppressed by the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.","pos":[1,161],"source":" The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class."},{"content":"The equivalent events in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class are the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.","pos":[162,336],"source":" The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.","pos":[337,540],"source":" The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached."},{"content":"For example, assume you have a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id=\"ph2\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls, and each <ph id=\"ph3\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control has one <ph id=\"ph4\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.","pos":[541,767],"source":" For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control."},{"content":"When the caret is moved from one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to the other, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event is raised for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, and the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event is raised for the other <ph id=\"ph6\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id=\"ph7\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.","pos":[768,1156],"source":" When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>."}]}]},{"pos":[2596,3278],"content":"[!CAUTION]\n Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section and the \"Message Deadlocks\" section of the[About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx)topic.","leadings":["","> "],"nodes":[{"content":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section and the \"Message Deadlocks\" section of the[About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx)topic.","pos":[11,680],"nodes":[{"content":"Do not attempt to set focus from within the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.","pos":[1,336],"source":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers."},{"content":"Doing so can cause your application or the operating system to stop responding.","pos":[337,416]},{"content":"For more information, see the <ph id=\"ph1\">`WM_KILLFOCUS`</ph> topic in the \"Keyboard Input Reference\" section and the \"Message Deadlocks\" section of the<bpt id=\"p1\">[</bpt>About Messages and Message Queues<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx)</ept>topic.","pos":[417,669],"source":" For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section and the \"Message Deadlocks\" section of the[About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx)topic."}]}]},{"pos":[3285,3435],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[292005,295485],"yaml":true,"extradata":"MT"},{"content":"Retrieves the form that the control is on.","nodes":[{"pos":[0,42],"content":"Retrieves the form that the control is on.","nodes":[{"content":"Retrieves the form that the control is on.","pos":[0,42]}]}],"pos":[297037,297080],"yaml":true},{"content":"The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method. For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>.","nodes":[{"pos":[0,711],"content":"The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method. For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>.","nodes":[{"content":"The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method. For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>.","pos":[0,711],"nodes":[{"content":"The control's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value might not be the same as the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph> returned by <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> method.","pos":[0,204],"source":"The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method."},{"content":"For example, if a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control is contained within a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, and the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> is on a <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control's <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> is the <ph id=\"ph7\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and the <ph id=\"ph8\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control's <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> is the <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Form&gt;</ph>.","pos":[205,711],"source":" For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>."}]}]}],"pos":[297091,297803],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.Form\"></xref> that the control is on.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> that the control is on.","source":"The <xref href=\"System.Windows.Forms.Form\"></xref> that the control is on."}],"pos":[298406,298481],"yaml":true},{"content":"Sets input focus to the control.","nodes":[{"pos":[0,32],"content":"Sets input focus to the control.","nodes":[{"content":"Sets input focus to the control.","pos":[0,32]}]}],"pos":[299415,299448],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Focus%2A> method returns `true` if the control successfully received input focus. The control can have the input focus while not displaying any visual cues of having the focus. This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.  \n  \n A control can be selected and receive input focus if all the following are true: the `Selectable` value of <xref:System.Windows.Forms.ControlStyles> is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled.  \n  \n The Windows Forms controls in the following list are not selectable. Controls derived from these controls are also not selectable.  \n  \n-   <xref:System.Windows.Forms.Panel>  \n  \n-   <xref:System.Windows.Forms.GroupBox>  \n  \n-   <xref:System.Windows.Forms.PictureBox>  \n  \n-   <xref:System.Windows.Forms.ProgressBar>  \n  \n-   <xref:System.Windows.Forms.Splitter>  \n  \n-   <xref:System.Windows.Forms.Label>  \n  \n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)  \n  \n> [!NOTE]\n>  <xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors. Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms.","nodes":[{"pos":[0,330],"content":"The <xref:System.Windows.Forms.Control.Focus%2A> method returns `true` if the control successfully received input focus. The control can have the input focus while not displaying any visual cues of having the focus. This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph> if the control successfully received input focus.","pos":[0,120],"source":"The <xref:System.Windows.Forms.Control.Focus%2A> method returns `true` if the control successfully received input focus."},{"content":"The control can have the input focus while not displaying any visual cues of having the focus.","pos":[121,215]},{"content":"This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.","pos":[216,330]}]},{"pos":[337,597],"content":"A control can be selected and receive input focus if all the following are true: the <ph id=\"ph1\">`Selectable`</ph> value of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> is set to <ph id=\"ph3\">`true`</ph>, it is contained in another control, and all its parent controls are both visible and enabled.","source":"A control can be selected and receive input focus if all the following are true: the `Selectable` value of <xref:System.Windows.Forms.ControlStyles> is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled."},{"pos":[604,734],"content":"The Windows Forms controls in the following list are not selectable. Controls derived from these controls are also not selectable.","nodes":[{"content":"The Windows Forms controls in the following list are not selectable. Controls derived from these controls are also not selectable.","pos":[0,130],"nodes":[{"content":"The Windows Forms controls in the following list are not selectable.","pos":[0,68]},{"content":"Controls derived from these controls are also not selectable.","pos":[69,130]}]}]},{"pos":[744,777],"content":"<xref:System.Windows.Forms.Panel>","nodes":[]},{"pos":[787,823],"content":"<xref:System.Windows.Forms.GroupBox>","nodes":[]},{"pos":[833,871],"content":"<xref:System.Windows.Forms.PictureBox>","nodes":[]},{"pos":[881,920],"content":"<xref:System.Windows.Forms.ProgressBar>","nodes":[]},{"pos":[930,966],"content":"<xref:System.Windows.Forms.Splitter>","nodes":[]},{"pos":[976,1009],"content":"<xref:System.Windows.Forms.Label>","nodes":[]},{"pos":[1019,1103],"content":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)","pos":[0,84],"source":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)"}]},{"pos":[1111,1504],"content":"[!NOTE]\n <xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors. Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms.","leadings":["","> "],"nodes":[{"content":" <xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors. Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms.","pos":[8,391],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> is a low-level method intended primarily for custom control authors.","pos":[1,114],"source":" <xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors."},{"content":"Instead, application programmers should use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property for child controls, or the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method for forms.","pos":[115,383],"source":" Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms."}]}]}],"pos":[299459,300987],"yaml":true,"extradata":"MT"},{"content":"`true` if the input focus request was successful; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the input focus request was successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the input focus request was successful; otherwise, `false`."}],"pos":[301702,301774],"yaml":true},{"content":"Gets a value indicating whether the control has input focus.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether the control has input focus.","nodes":[{"content":"Gets a value indicating whether the control has input focus.","pos":[0,60]}]}],"pos":[302730,302791],"yaml":true},{"content":"`true` if the control has focus; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if the control has focus; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control has focus; otherwise, `false`."}],"pos":[303842,303897],"yaml":true},{"content":"Gets or sets the font of the text displayed by the control.","nodes":[{"pos":[0,59],"content":"Gets or sets the font of the text displayed by the control.","nodes":[{"content":"Gets or sets the font of the text displayed by the control.","pos":[0,59]}]}],"pos":[304885,304945],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.  \n  \n Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>. However, you can base the new font on the existing font.  \n  \n [Visual Basic, C#]  \n  \n The following is an example of how to adjust the existing font to make it bold:  \n  \n```csharp  \nmyControl.Font = new Font(myControl.Font,   \n    myControl.Font.Style | FontStyle.Bold);  \n```  \n  \n```vb  \nMyControl.Font = New Font(MyControl.Font, _   \n    MyControl.Font.Style Or FontStyle.Bold)  \n```","nodes":[{"pos":[0,521],"content":"The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","pos":[0,521],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is an ambient property.","pos":[0,80],"source":"The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property."},{"content":"An ambient property is a control property that, if not set, is retrieved from the parent control.","pos":[81,178]},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.","pos":[179,355],"source":" For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default."},{"content":"For more information about ambient properties, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.","pos":[356,521],"source":" For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview."}]}]},{"pos":[528,803],"content":"Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>. However, you can base the new font on the existing font.","nodes":[{"content":"Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>. However, you can base the new font on the existing font.","pos":[0,275],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Drawing.Font&gt;</ph> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property a new <ph id=\"ph3\">&lt;xref:System.Drawing.Font&gt;</ph>.","pos":[0,218],"source":"Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>."},{"content":"However, you can base the new font on the existing font.","pos":[219,275]}]}]},{"pos":[810,828],"content":"[Visual Basic, C#]","nodes":[{"content":"[Visual Basic, C#]","pos":[0,18]}]},{"pos":[835,914],"content":"The following is an example of how to adjust the existing font to make it bold:","nodes":[{"content":"The following is an example of how to adjust the existing font to make it bold:","pos":[0,79]}]}],"pos":[304956,306111],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Font\"></xref> to apply to the text displayed by the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultFont\"></xref> property.","nodes":[{"pos":[0,195],"content":"The <xref href=\"System.Drawing.Font\"></xref> to apply to the text displayed by the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultFont\"></xref> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Font\"&gt;&lt;/xref&gt;</ph> to apply to the text displayed by the control.","pos":[0,91],"source":"The <xref href=\"System.Drawing.Font\"></xref> to apply to the text displayed by the control."},{"content":"The default is the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DefaultFont\"&gt;&lt;/xref&gt;</ph> property.","pos":[92,195],"source":" The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultFont\"></xref> property."}]}],"pos":[306972,307168],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property value changes.","nodes":[{"pos":[0,94],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Font\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property value changes."}],"pos":[308144,308239],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or through interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,153],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or through interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.","pos":[0,153],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or through interaction."}]},{"pos":[160,310],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[308250,308565],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the height of the font of the control.","nodes":[{"pos":[0,51],"content":"Gets or sets the height of the font of the control.","nodes":[{"content":"Gets or sets the height of the font of the control.","pos":[0,51]}]}],"pos":[310053,310105],"yaml":true},{"content":"> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=fullName> value, or -1. Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.","nodes":[{"pos":[2,395],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=fullName> value, or -1. Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=fullName> value, or -1. Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.","pos":[8,391],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> property should not be set to any value other than the control's <ph id=\"ph2\">&lt;xref:System.Drawing.Font.Height%2A?displayProperty=fullName&gt;</ph> value, or -1.","pos":[1,195],"source":" The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=fullName> value, or -1."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.","pos":[196,383],"source":" Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced."}]}]}],"pos":[310116,310524],"yaml":true,"extradata":"MT"},{"content":"The height of the <xref href=\"System.Drawing.Font\"></xref> of the control in pixels.","nodes":[{"pos":[0,84],"content":"The height of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Font\"&gt;&lt;/xref&gt;</ph> of the control in pixels.","source":"The height of the <xref href=\"System.Drawing.Font\"></xref> of the control in pixels."}],"pos":[310642,310727],"yaml":true},{"content":"Gets or sets the foreground color of the control.","nodes":[{"pos":[0,49],"content":"Gets or sets the foreground color of the control.","nodes":[{"content":"Gets or sets the foreground color of the control.","pos":[0,49]}]}],"pos":[311683,311733],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","nodes":[{"pos":[0,526],"content":"The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","pos":[0,526],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is an ambient property.","pos":[0,85],"source":"The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property."},{"content":"An ambient property is a control property that, if not set, is retrieved from the parent control.","pos":[86,183]},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.","pos":[184,360],"source":" For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default."},{"content":"For more information about ambient properties, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.","pos":[361,526],"source":" For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview."}]}]}],"pos":[311744,312271],"yaml":true,"extradata":"MT"},{"content":"The foreground <xref href=\"System.Drawing.Color\"></xref> of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultForeColor\"></xref> property.","nodes":[{"pos":[0,181],"content":"The foreground <xref href=\"System.Drawing.Color\"></xref> of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultForeColor\"></xref> property.","nodes":[{"content":"The foreground <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> of the control.","pos":[0,72],"source":"The foreground <xref href=\"System.Drawing.Color\"></xref> of the control."},{"content":"The default is the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DefaultForeColor\"&gt;&lt;/xref&gt;</ph> property.","pos":[73,181],"source":" The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultForeColor\"></xref> property."}]}],"pos":[313472,313654],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property value changes.","nodes":[{"pos":[0,99],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ForeColor\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property value changes."}],"pos":[314665,314765],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.ForeColor%2A> property is changed by either a programmatic modification or through interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,158],"content":"This event is raised if the <xref:System.Windows.Forms.Control.ForeColor%2A> property is changed by either a programmatic modification or through interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.","pos":[0,158],"source":"This event is raised if the <xref:System.Windows.Forms.Control.ForeColor%2A> property is changed by either a programmatic modification or through interaction."}]},{"pos":[165,315],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[314776,315096],"yaml":true,"extradata":"MT"},{"content":"Retrieves the control that contains the specified handle.","nodes":[{"pos":[0,57],"content":"Retrieves the control that contains the specified handle.","nodes":[{"content":"Retrieves the control that contains the specified handle.","pos":[0,57]}]}],"pos":[317767,317825],"yaml":true},{"content":"This method searches up the window handle parent chain until it finds a handle that is associated with a control. This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle.","nodes":[{"pos":[0,278],"content":"This method searches up the window handle parent chain until it finds a handle that is associated with a control. This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle.","nodes":[{"content":"This method searches up the window handle parent chain until it finds a handle that is associated with a control. This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle.","pos":[0,278],"nodes":[{"content":"This method searches up the window handle parent chain until it finds a handle that is associated with a control.","pos":[0,113]},{"content":"This method is more reliable than the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.FromHandle%2A&gt;</ph> method, because it correctly returns controls that own more than one handle.","pos":[114,278],"source":" This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle."}]}]}],"pos":[317836,318115],"yaml":true,"extradata":"MT"},{"content":"The window handle (`HWND`) to search for.","nodes":[{"pos":[0,41],"content":"The window handle (<ph id=\"ph1\">`HWND`</ph>) to search for.","source":"The window handle (`HWND`) to search for."}],"pos":[318292,318334],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control associated with the specified handle; returns `null` if no control with the specified handle is found.","nodes":[{"pos":[0,184],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> that represents the control associated with the specified handle; returns <ph id=\"ph2\">`null`</ph> if no control with the specified handle is found.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control associated with the specified handle; returns `null` if no control with the specified handle is found."}],"pos":[318406,318591],"yaml":true},{"content":"Returns the control that is currently associated with the specified handle.","nodes":[{"pos":[0,75],"content":"Returns the control that is currently associated with the specified handle.","nodes":[{"content":"Returns the control that is currently associated with the specified handle.","pos":[0,75]}]}],"pos":[319642,319718],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.Control.FromChildHandle%2A> method if you need to return controls that own more than one handle.","nodes":[{"pos":[0,131],"content":"Use the <xref:System.Windows.Forms.Control.FromChildHandle%2A> method if you need to return controls that own more than one handle.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.FromChildHandle%2A&gt;</ph> method if you need to return controls that own more than one handle.","pos":[0,131],"source":"Use the <xref:System.Windows.Forms.Control.FromChildHandle%2A> method if you need to return controls that own more than one handle."}]}],"pos":[319729,319861],"yaml":true,"extradata":"MT"},{"content":"The window handle (`HWND`) to search for.","nodes":[{"pos":[0,41],"content":"The window handle (<ph id=\"ph1\">`HWND`</ph>) to search for.","source":"The window handle (`HWND`) to search for."}],"pos":[320033,320075],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control associated with the specified handle; returns `null` if no control with the specified handle is found.","nodes":[{"pos":[0,182],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> that represents the control associated with the specified handle; returns <ph id=\"ph2\">`null`</ph> if no control with the specified handle is found.","source":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control associated with the specified handle; returns `null` if no control with the specified handle is found."}],"pos":[320147,320330],"yaml":true},{"content":"Retrieves the specified <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>.","nodes":[{"pos":[0,83],"content":"Retrieves the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves the specified <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>."}],"pos":[321466,321550],"yaml":true},{"content":"An `Int32` that identifies the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> to retrieve.","nodes":[{"pos":[0,102],"content":"An <ph id=\"ph1\">`Int32`</ph> that identifies the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;&lt;/xref&gt;</ph> to retrieve.","source":"An `Int32` that identifies the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> to retrieve."}],"pos":[321751,321854],"yaml":true},{"content":"The specified <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>.","nodes":[{"pos":[0,73],"content":"The specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;&lt;/xref&gt;</ph>.","source":"The specified <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>."}],"pos":[321935,322009],"yaml":true},{"content":"Retrieves a value indicating how a control will behave when its <xref href=\"System.Windows.Forms.Control.AutoSize\"></xref> property is enabled.","nodes":[{"pos":[0,143],"content":"Retrieves a value indicating how a control will behave when its <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.AutoSize\"&gt;&lt;/xref&gt;</ph> property is enabled.","source":"Retrieves a value indicating how a control will behave when its <xref href=\"System.Windows.Forms.Control.AutoSize\"></xref> property is enabled."}],"pos":[323019,323163],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AutoSizeMode\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> values."}],"pos":[323346,323420],"yaml":true},{"content":"Retrieves the child control that is located at the specified coordinates.","nodes":[{"pos":[0,73],"content":"Retrieves the child control that is located at the specified coordinates.","nodes":[{"content":"Retrieves the child control that is located at the specified coordinates.","pos":[0,73]}]}],"pos":[324480,324554],"yaml":true},{"content":"If there is no child control at the specified point, the <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> method returns `null`.","nodes":[{"pos":[0,134],"content":"If there is no child control at the specified point, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GetChildAtPoint%2A&gt;</ph> method returns <ph id=\"ph2\">`null`</ph>.","source":"If there is no child control at the specified point, the <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> method returns `null`."}],"pos":[324565,324700],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area.","nodes":[{"pos":[0,201],"content":"A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that contains the coordinates where you want to look for a control.","pos":[0,111],"source":"A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates where you want to look for a control."},{"content":"Coordinates are expressed relative to the upper-left corner of the control's client area.","pos":[112,201]}]}],"pos":[324883,325085],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control that is located at the specified point.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> that represents the control that is located at the specified point.","source":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control that is located at the specified point."}],"pos":[325157,325277],"yaml":true},{"content":"Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.","nodes":[{"pos":[0,136],"content":"Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.","nodes":[{"content":"Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.","pos":[0,136]}]}],"pos":[326545,326682],"yaml":true},{"content":"A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area.","nodes":[{"pos":[0,201],"content":"A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that contains the coordinates where you want to look for a control.","pos":[0,111],"source":"A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates where you want to look for a control."},{"content":"Coordinates are expressed relative to the upper-left corner of the control's client area.","pos":[112,201]}]}],"pos":[326917,327119],"yaml":true},{"content":"One of the values of <xref href=\"System.Windows.Forms.GetChildAtPointSkip\"></xref>, determining whether to ignore child controls of a certain type.","nodes":[{"pos":[0,147],"content":"One of the values of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.GetChildAtPointSkip\"&gt;&lt;/xref&gt;</ph>, determining whether to ignore child controls of a certain type.","source":"One of the values of <xref href=\"System.Windows.Forms.GetChildAtPointSkip\"></xref>, determining whether to ignore child controls of a certain type."}],"pos":[327211,327359],"yaml":true},{"content":"The child <xref href=\"System.Windows.Forms.Control\"></xref> at the specified coordinates.","nodes":[{"pos":[0,89],"content":"The child <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> at the specified coordinates.","source":"The child <xref href=\"System.Windows.Forms.Control\"></xref> at the specified coordinates."}],"pos":[327431,327521],"yaml":true},{"content":"Returns the next <xref href=\"System.Windows.Forms.ContainerControl\"></xref> up the control's chain of parent controls.","nodes":[{"pos":[0,118],"content":"Returns the next <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ContainerControl\"&gt;&lt;/xref&gt;</ph> up the control's chain of parent controls.","source":"Returns the next <xref href=\"System.Windows.Forms.ContainerControl\"></xref> up the control's chain of parent controls."}],"pos":[328546,328665],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.IContainerControl\"></xref>, that represents the parent of the <xref href=\"System.Windows.Forms.Control\"></xref>.","nodes":[{"pos":[0,148],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.IContainerControl\"&gt;&lt;/xref&gt;</ph>, that represents the parent of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Windows.Forms.IContainerControl\"></xref>, that represents the parent of the <xref href=\"System.Windows.Forms.Control\"></xref>."}],"pos":[328859,329008],"yaml":true},{"content":"Retrieves the next control forward or back in the tab order of child controls.","nodes":[{"pos":[0,78],"content":"Retrieves the next control forward or back in the tab order of child controls.","nodes":[{"content":"Retrieves the next control forward or back in the tab order of child controls.","pos":[0,78]}]}],"pos":[330190,330269],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order. To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property. To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property.","nodes":[{"pos":[0,364],"content":"The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order. To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property. To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order. To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property. To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property.","pos":[0,364],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> method is dependent on tab order.","pos":[0,91],"source":"The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order."},{"content":"To iterate through all controls of a form, including nested controls, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property.","pos":[92,227],"source":" To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property."},{"content":"To get or set the active control of a container control, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property.","pos":[228,364],"source":" To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property."}]}]}],"pos":[330280,330645],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to start the search with.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to start the search with.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to start the search with."}],"pos":[330859,330939],"yaml":true},{"content":"`true` to search forward in the tab order; `false` to search backward.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> to search forward in the tab order; <ph id=\"ph2\">`false`</ph> to search backward.","source":"`true` to search forward in the tab order; `false` to search backward."}],"pos":[331003,331076],"yaml":true},{"content":"The next <xref href=\"System.Windows.Forms.Control\"></xref> in the tab order.","nodes":[{"pos":[0,76],"content":"The next <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> in the tab order.","source":"The next <xref href=\"System.Windows.Forms.Control\"></xref> in the tab order."}],"pos":[331148,331225],"yaml":true},{"content":"Retrieves the size of a rectangular area into which a control can be fitted.","nodes":[{"pos":[0,76],"content":"Retrieves the size of a rectangular area into which a control can be fitted.","nodes":[{"content":"Retrieves the size of a rectangular area into which a control can be fitted.","pos":[0,76]}]}],"pos":[332306,332383],"yaml":true},{"content":"The behavior of <xref:System.Windows.Forms.Control.GetPreferredSize%2A> differs by control. The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control. You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases. For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`. The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.","nodes":[{"pos":[0,569],"content":"The behavior of <xref:System.Windows.Forms.Control.GetPreferredSize%2A> differs by control. The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control. You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases. For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`. The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.","nodes":[{"content":"The behavior of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> differs by control.","pos":[0,91],"source":"The behavior of <xref:System.Windows.Forms.Control.GetPreferredSize%2A> differs by control."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> might be unable to assign the returned size to the control.","pos":[92,207],"source":" The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control."},{"content":"You can return a size larger than the constraints indicated in the <ph id=\"ph1\">`proposedSize`</ph> parameter, but <ph id=\"ph2\">`proposedSize`</ph> should decrease as the constraint decreases.","pos":[208,364],"source":" You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases."},{"content":"For example, <ph id=\"ph1\">`GetPreferredSize(new Size(100, 0))`</ph> should not be wider than <ph id=\"ph2\">`GetPreferredSize(new Size(200, 0))`</ph>.","pos":[365,477],"source":" For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`."},{"content":"The exception is a <ph id=\"ph1\">`proposedSize`</ph> of 0 or <ph id=\"ph2\">`Size.Empty`</ph>, which are defined as unconstrained.","pos":[478,569],"source":" The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained."}]}],"pos":[332394,332964],"yaml":true,"extradata":"MT"},{"content":"The custom-sized area for a control.","nodes":[{"pos":[0,36],"content":"The custom-sized area for a control.","nodes":[{"content":"The custom-sized area for a control.","pos":[0,36]}]}],"pos":[333165,333202],"yaml":true},{"content":"An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle.","nodes":[{"pos":[0,114],"content":"An ordered pair of type <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> representing the width and height of a rectangle.","source":"An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle."}],"pos":[333265,333380],"yaml":true},{"content":"Retrieves the bounds within which the control is scaled.","nodes":[{"pos":[0,56],"content":"Retrieves the bounds within which the control is scaled.","nodes":[{"content":"Retrieves the bounds within which the control is scaled.","pos":[0,56]}]}],"pos":[334750,334807],"yaml":true},{"content":"This is a helper method that is called by <xref:System.Windows.Forms.Control.ScaleControl%2A> to retrieve the bounds within which the control is scaled. You can override this method to reuse the <xref:System.Windows.Forms.Control.ScaleControl%2A> scaling logic, but you must supply your own bounds. The default implementation returns scaled bounds that take into account the `specified` bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.","nodes":[{"pos":[0,520],"content":"This is a helper method that is called by <xref:System.Windows.Forms.Control.ScaleControl%2A> to retrieve the bounds within which the control is scaled. You can override this method to reuse the <xref:System.Windows.Forms.Control.ScaleControl%2A> scaling logic, but you must supply your own bounds. The default implementation returns scaled bounds that take into account the `specified` bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.","nodes":[{"content":"This is a helper method that is called by <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> to retrieve the bounds within which the control is scaled.","pos":[0,152],"source":"This is a helper method that is called by <xref:System.Windows.Forms.Control.ScaleControl%2A> to retrieve the bounds within which the control is scaled."},{"content":"You can override this method to reuse the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> scaling logic, but you must supply your own bounds.","pos":[153,298],"source":" You can override this method to reuse the <xref:System.Windows.Forms.Control.ScaleControl%2A> scaling logic, but you must supply your own bounds."},{"content":"The default implementation returns scaled bounds that take into account the <ph id=\"ph1\">`specified`</ph> bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.","pos":[299,520],"source":" The default implementation returns scaled bounds that take into account the `specified` bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have."}]}],"pos":[334818,335339],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that specifies the area for which to retrieve the display bounds.","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that specifies the area for which to retrieve the display bounds.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that specifies the area for which to retrieve the display bounds."}],"pos":[335622,335736],"yaml":true},{"content":"The height and width of the control's bounds.","nodes":[{"pos":[0,45],"content":"The height and width of the control's bounds.","nodes":[{"content":"The height and width of the control's bounds.","pos":[0,45]}]}],"pos":[335805,335851],"yaml":true},{"content":"One of the values of <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> that specifies the bounds of the control to use when defining its size and position.","nodes":[{"pos":[0,163],"content":"One of the values of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BoundsSpecified\"&gt;&lt;/xref&gt;</ph> that specifies the bounds of the control to use when defining its size and position.","source":"One of the values of <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> that specifies the bounds of the control to use when defining its size and position."}],"pos":[335939,336103],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> representing the bounds within which the control is scaled.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> representing the bounds within which the control is scaled.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> representing the bounds within which the control is scaled."}],"pos":[336171,336279],"yaml":true},{"content":"Retrieves the value of the specified control style bit for the control.","nodes":[{"pos":[0,71],"content":"Retrieves the value of the specified control style bit for the control.","nodes":[{"content":"Retrieves the value of the specified control style bit for the control.","pos":[0,71]}]}],"pos":[337402,337474],"yaml":true},{"content":"Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to. To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.","nodes":[{"pos":[0,518],"content":"Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to. To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.","nodes":[{"content":"Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to. To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.","pos":[0,518],"nodes":[{"content":"Control style bit flags are used to categorize supported behavior.","pos":[0,66]},{"content":"A control can enable a style by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit and the Boolean value to set the bit to.","pos":[67,283],"source":" A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to."},{"content":"To determine the value assigned to a specified <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method and pass in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> member to evaluate.","pos":[284,518],"source":" To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate."}]}]}],"pos":[337485,338004],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.ControlStyles\"></xref> bit to return the value from.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlStyles\"&gt;&lt;/xref&gt;</ph> bit to return the value from.","source":"The <xref href=\"System.Windows.Forms.ControlStyles\"></xref> bit to return the value from."}],"pos":[338869,338959],"yaml":true},{"content":"`true` if the specified control style bit is set to `true`; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the specified control style bit is set to <ph id=\"ph2\">`true`</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified control style bit is set to `true`; otherwise, `false`."}],"pos":[339017,339099],"yaml":true},{"content":"Determines if the control is a top-level control.","nodes":[{"pos":[0,49],"content":"Determines if the control is a top-level control.","nodes":[{"content":"Determines if the control is a top-level control.","pos":[0,49]}]}],"pos":[340069,340119],"yaml":true},{"content":"`true` if the control is a top-level control; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the control is a top-level control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control is a top-level control; otherwise, `false`."}],"pos":[340250,340318],"yaml":true},{"content":"Occurs during a drag operation.","nodes":[{"pos":[0,31],"content":"Occurs during a drag operation.","nodes":[{"content":"Occurs during a drag operation.","pos":[0,31]}]}],"pos":[341290,341322],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started. With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.  \n  \n The following describes how and when events related to drag-and-drop operations are raised.  \n  \n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \n  \n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \n  \n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \n  \n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \n  \n If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n    > [!NOTE]\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,326],"content":"The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started. With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started. With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.","pos":[0,326],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised when a drag-and-drop operation is started.","pos":[0,111],"source":"The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started."},{"content":"With the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.","pos":[112,326],"source":" With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation."}]}]},{"pos":[333,424],"content":"The following describes how and when events related to drag-and-drop operations are raised.","nodes":[{"content":"The following describes how and when events related to drag-and-drop operations are raised.","pos":[0,91]}]},{"pos":[431,610],"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","pos":[0,179],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.","pos":[0,118],"source":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location."},{"content":"It then checks to see if the control is a valid drop target.","pos":[119,179]}]}]},{"pos":[617,867],"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","pos":[0,250],"nodes":[{"content":"If the control is a valid drop target, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.","pos":[0,148],"source":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified."},{"content":"For a list of drag-and-drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[149,250],"source":" For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]}]},{"pos":[874,963],"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","nodes":[{"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","pos":[0,89]}]},{"pos":[973,1074],"content":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.","nodes":[{"content":"If the user moves out of a window, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","pos":[0,101],"source":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."}]},{"pos":[1084,1198],"content":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.","nodes":[{"content":"If the mouse enters another control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.","pos":[0,114],"source":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised."}]},{"pos":[1208,1327],"content":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.","nodes":[{"content":"If the mouse moves but stays within the same control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.","pos":[0,119],"source":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised."}]},{"pos":[1334,1728],"content":"If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.","nodes":[{"content":"If there is a change in the keyboard or mouse button state, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.","pos":[0,394],"source":"If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>."}]},{"pos":[1738,2133],"content":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Continue`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.","pos":[0,296],"source":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set."},{"content":"For a list of valid drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[297,395],"source":" For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]},{"pos":[2145,2402],"content":"[!NOTE]\nThe <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","leadings":["","    >  "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","pos":[8,250],"source":"The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position."}]},{"pos":[2412,2665],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move."},{"pos":[2675,2809],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Cancel`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."},{"pos":[2816,2966],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[341333,344329],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control receives focus.","nodes":[{"pos":[0,39],"content":"Occurs when the control receives focus.","nodes":[{"content":"Occurs when the control receives focus.","pos":[0,39]}]}],"pos":[348210,348250],"yaml":true},{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n **Note** The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\\(v=vs.85\\).aspx)and[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,384],"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName&gt;</ph> property to the current form, focus events occur in the following order:","pos":[0,384],"source":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:"}]},{"pos":[394,435],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[445,489],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[499,540],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[550,596],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[606,651],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[661,706],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[713,871],"content":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the mouse or by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:","pos":[0,158],"source":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:"}]},{"pos":[881,922],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[932,976],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[986,1031],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[1041,1082],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[1092,1138],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[1148,1193],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[1200,1414],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.","source":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed."},{"pos":[1421,2480],"content":"**Note** The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\\(v=vs.85\\).aspx)and[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.","pos":[0,209],"source":"**Note** The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages."},{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are only used when updating <ph id=\"ph3\">&lt;xref:System.Windows.Forms.UICues&gt;</ph> or when writing custom controls.","pos":[210,422],"source":" Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls."},{"content":"Instead the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events should be used for all controls except the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, which uses the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.","pos":[423,726],"source":" Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events."},{"content":"For more information about the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events, see the <bpt id=\"p1\">[</bpt>WM_SETFOCUS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646283\\(v=vs.85\\).aspx)</ept>and<bpt id=\"p2\">[</bpt>WM_KILLFOCUS<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx)</ept> topics.","pos":[727,1059],"source":" For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\\(v=vs.85\\).aspx)and[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics."}]},{"pos":[2488,3045],"content":"[!CAUTION]\n Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.","leadings":["","> "],"nodes":[{"content":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.","pos":[11,555],"nodes":[{"content":"Do not attempt to set focus from within the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.","pos":[1,336],"source":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers."},{"content":"Doing so can cause your application or the operating system to stop responding.","pos":[337,416]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>WM_KILLFOCUS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx)</ept> topic.","pos":[417,544],"source":" For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic."}]}]},{"pos":[3052,3202],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[348261,351507],"yaml":true,"extradata":"MT"},{"content":"Gets the window handle that the control is bound to.","nodes":[{"pos":[0,52],"content":"Gets the window handle that the control is bound to.","nodes":[{"content":"Gets the window handle that the control is bound to.","pos":[0,52]}]}],"pos":[353633,353686],"yaml":true},{"content":"The value of the <xref:System.Windows.Forms.Control.Handle%2A> property is a Windows `HWND`. If the handle has not yet been created, referencing this property will force the handle to be created.","nodes":[{"pos":[0,195],"content":"The value of the <xref:System.Windows.Forms.Control.Handle%2A> property is a Windows `HWND`. If the handle has not yet been created, referencing this property will force the handle to be created.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property is a Windows <ph id=\"ph2\">`HWND`</ph>.","pos":[0,92],"source":"The value of the <xref:System.Windows.Forms.Control.Handle%2A> property is a Windows `HWND`."},{"content":"If the handle has not yet been created, referencing this property will force the handle to be created.","pos":[93,195]}]}],"pos":[353697,353893],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IntPtr\"></xref> that contains the window handle (`HWND`) of the control.","nodes":[{"pos":[0,94],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> that contains the window handle (<ph id=\"ph2\">`HWND`</ph>) of the control.","source":"An <xref href=\"System.IntPtr\"></xref> that contains the window handle (`HWND`) of the control."}],"pos":[354912,355007],"yaml":true},{"content":"Occurs when a handle is created for the control.","nodes":[{"pos":[0,48],"content":"Occurs when a handle is created for the control.","nodes":[{"content":"Occurs when a handle is created for the control.","pos":[0,48]}]}],"pos":[356045,356094],"yaml":true},{"content":"A handle is created when the <xref:System.Windows.Forms.Control> is displayed for the first time. For example, if a <xref:System.Windows.Forms.Control> is created that has <xref:System.Windows.Forms.Control.Visible%2A> set to `false`, the <xref:System.Windows.Forms.Control.HandleCreated> event will not be raised until <xref:System.Windows.Forms.Control.Visible%2A> is set to `true`.  \n  \n For more information about handling events, see[Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,384],"content":"A handle is created when the <xref:System.Windows.Forms.Control> is displayed for the first time. For example, if a <xref:System.Windows.Forms.Control> is created that has <xref:System.Windows.Forms.Control.Visible%2A> set to `false`, the <xref:System.Windows.Forms.Control.HandleCreated> event will not be raised until <xref:System.Windows.Forms.Control.Visible%2A> is set to `true`.","nodes":[{"content":"A handle is created when the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> is displayed for the first time.","pos":[0,97],"source":"A handle is created when the <xref:System.Windows.Forms.Control> is displayed for the first time."},{"content":"For example, if a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> is created that has <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> set to <ph id=\"ph3\">`false`</ph>, the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event will not be raised until <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> is set to <ph id=\"ph6\">`true`</ph>.","pos":[98,384],"source":" For example, if a <xref:System.Windows.Forms.Control> is created that has <xref:System.Windows.Forms.Control.Visible%2A> set to `false`, the <xref:System.Windows.Forms.Control.HandleCreated> event will not be raised until <xref:System.Windows.Forms.Control.Visible%2A> is set to `true`."}]},{"pos":[391,540],"content":"For more information about handling events, see<bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see[Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[356105,356650],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control's handle is in the process of being destroyed.","nodes":[{"pos":[0,70],"content":"Occurs when the control's handle is in the process of being destroyed.","nodes":[{"content":"Occurs when the control's handle is in the process of being destroyed.","pos":[0,70]}]}],"pos":[359139,359210],"yaml":true},{"content":"During the <xref:System.Windows.Forms.Control.HandleDestroyed> event, the control is still a valid Windows control and the <xref:System.Windows.Forms.Control.Handle%2A> can be recreated by calling the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,262],"content":"During the <xref:System.Windows.Forms.Control.HandleDestroyed> event, the control is still a valid Windows control and the <xref:System.Windows.Forms.Control.Handle%2A> can be recreated by calling the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.","nodes":[{"content":"During the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event, the control is still a valid Windows control and the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> can be recreated by calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.","pos":[0,262],"source":"During the <xref:System.Windows.Forms.Control.HandleDestroyed> event, the control is still a valid Windows control and the <xref:System.Windows.Forms.Control.Handle%2A> can be recreated by calling the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method."}]},{"pos":[269,419],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[359221,359645],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the control contains one or more child controls.","nodes":[{"pos":[0,80],"content":"Gets a value indicating whether the control contains one or more child controls.","nodes":[{"content":"Gets a value indicating whether the control contains one or more child controls.","pos":[0,80]}]}],"pos":[362098,362179],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.Controls%2A> collection has a <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> greater than zero, the <xref:System.Windows.Forms.Control.HasChildren%2A> property will return `true`. Accessing the <xref:System.Windows.Forms.Control.HasChildren%2A> property does not force the creation of a <xref:System.Windows.Forms.Control.ControlCollection> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.","nodes":[{"pos":[0,533],"content":"If the <xref:System.Windows.Forms.Control.Controls%2A> collection has a <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> greater than zero, the <xref:System.Windows.Forms.Control.HasChildren%2A> property will return `true`. Accessing the <xref:System.Windows.Forms.Control.HasChildren%2A> property does not force the creation of a <xref:System.Windows.Forms.Control.ControlCollection> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection has a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A&gt;</ph> greater than zero, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> property will return <ph id=\"ph4\">`true`</ph>.","pos":[0,244],"source":"If the <xref:System.Windows.Forms.Control.Controls%2A> collection has a <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> greater than zero, the <xref:System.Windows.Forms.Control.HasChildren%2A> property will return `true`."},{"content":"Accessing the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> property does not force the creation of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.","pos":[245,533],"source":" Accessing the <xref:System.Windows.Forms.Control.HasChildren%2A> property does not force the creation of a <xref:System.Windows.Forms.Control.ControlCollection> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls."}]}],"pos":[362190,362724],"yaml":true,"extradata":"MT"},{"content":"`true` if the control contains one or more child controls; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the control contains one or more child controls; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control contains one or more child controls; otherwise, `false`."}],"pos":[363949,364030],"yaml":true},{"content":"Gets or sets the height of the control.","nodes":[{"pos":[0,39],"content":"Gets or sets the height of the control.","nodes":[{"content":"Gets or sets the height of the control.","pos":[0,39]}]}],"pos":[365034,365074],"yaml":true},{"content":"Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.  \n  \n> [!NOTE]\n>  The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel. The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels. Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height.","nodes":[{"pos":[0,225],"content":"Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.","nodes":[{"content":"Changes made to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property values cause the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property value of the control to change.","pos":[0,225],"source":"Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change."}]},{"pos":[233,575],"content":"[!NOTE]\n The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel. The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels. Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height.","leadings":["","> "],"nodes":[{"content":" The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel. The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels. Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height.","pos":[8,340],"nodes":[{"content":"The minimum height for the derived control <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> is one pixel.","pos":[1,94],"source":" The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel."},{"content":"The default height for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> control is three pixels.","pos":[95,183],"source":" The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels."},{"content":"Setting the height of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> control to a value less than one will reset the property value to the default height.","pos":[184,332],"source":" Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height."}]}]}],"pos":[365085,365666],"yaml":true,"extradata":"MT"},{"content":"The height of the control in pixels.","nodes":[{"pos":[0,36],"content":"The height of the control in pixels.","nodes":[{"content":"The height of the control in pixels.","pos":[0,36]}]}],"pos":[366670,366707],"yaml":true},{"content":"Occurs when the user requests help for a control.","nodes":[{"pos":[0,49],"content":"Occurs when the user requests help for a control.","nodes":[{"content":"Occurs when the user requests help for a control.","pos":[0,49]}]}],"pos":[367745,367795],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.HelpRequested> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,170],"content":"The <xref:System.Windows.Forms.Control.HelpRequested> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.","pos":[0,170],"source":"The <xref:System.Windows.Forms.Control.HelpRequested> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked."}]},{"pos":[177,327],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[367806,368138],"yaml":true,"extradata":"MT"},{"content":"Conceals the control from the user.","nodes":[{"pos":[0,35],"content":"Conceals the control from the user.","nodes":[{"content":"Conceals the control from the user.","pos":[0,35]}]}],"pos":[370385,370421],"yaml":true},{"content":"Hiding the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `false`. After the <xref:System.Windows.Forms.Control.Hide%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `false` until the <xref:System.Windows.Forms.Control.Show%2A> method is called.","nodes":[{"pos":[0,346],"content":"Hiding the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `false`. After the <xref:System.Windows.Forms.Control.Hide%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `false` until the <xref:System.Windows.Forms.Control.Show%2A> method is called.","nodes":[{"content":"Hiding the control is equivalent to setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph>.","pos":[0,115],"source":"Hiding the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `false`."},{"content":"After the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id=\"ph3\">`false`</ph> until the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method is called.","pos":[116,346],"source":" After the <xref:System.Windows.Forms.Control.Hide%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `false` until the <xref:System.Windows.Forms.Control.Show%2A> method is called."}]}],"pos":[370432,370779],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the Input Method Editor (IME) mode of the control.","nodes":[{"pos":[0,63],"content":"Gets or sets the Input Method Editor (IME) mode of the control.","nodes":[{"content":"Gets or sets the Input Method Editor (IME) mode of the control.","pos":[0,63]}]}],"pos":[372487,372551],"yaml":true},{"content":"An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard. The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values. The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for the <xref:System.Windows.Forms.Form> class.  \n  \n Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <xref:System.Windows.Forms.ImeMode.NoControl>.  \n  \n> [!IMPORTANT]\n>  The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>. In this case, the user will not be able to use the IME.  \n>   \n>  The <xref:System.Windows.Forms.Control.ImeMode%2A> property is ignored on Windows 8 when the global input mode is in effect. For more info, see[Switch Text Input Changed from Per-Thread to Per-User](http://go.microsoft.com/fwlink/?LinkID=256509).","nodes":[{"pos":[0,564],"content":"An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard. The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values. The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for the <xref:System.Windows.Forms.Form> class.","nodes":[{"content":"An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard. The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values. The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for the <xref:System.Windows.Forms.Form> class.","pos":[0,564],"nodes":[{"content":"An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.","pos":[0,141]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is typically set to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ImeMode?displayProperty=fullName&gt;</ph> for a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control that is intended to only enter numeric values.","pos":[142,379],"source":" The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property value is set to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ImeMode?displayProperty=fullName&gt;</ph> for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.","pos":[380,564],"source":" The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for the <xref:System.Windows.Forms.Form> class."}]}]},{"pos":[571,755],"content":"Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <xref:System.Windows.Forms.ImeMode.NoControl>.","nodes":[{"content":"Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ImeMode.NoControl&gt;</ph>.","pos":[0,184],"source":"Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <xref:System.Windows.Forms.ImeMode.NoControl>."}]},{"pos":[763,1024],"content":"[!IMPORTANT]\n The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>. In this case, the user will not be able to use the IME.","leadings":["","> "],"nodes":[{"content":" The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>. In this case, the user will not be able to use the IME.","pos":[13,259],"nodes":[{"content":"The user can interactively change the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> unless it has been programmatically set to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ImeMode?displayProperty=fullName&gt;</ph>.","pos":[1,190],"source":" The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>."},{"content":"In this case, the user will not be able to use the IME.","pos":[191,246]}]}]},{"pos":[1035,1281],"content":"The <xref:System.Windows.Forms.Control.ImeMode%2A> property is ignored on Windows 8 when the global input mode is in effect. For more info, see[Switch Text Input Changed from Per-Thread to Per-User](http://go.microsoft.com/fwlink/?LinkID=256509).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is ignored on Windows 8 when the global input mode is in effect.","pos":[0,124],"source":"The <xref:System.Windows.Forms.Control.ImeMode%2A> property is ignored on Windows 8 when the global input mode is in effect."},{"content":"For more info, see<bpt id=\"p1\">[</bpt>Switch Text Input Changed from Per-Thread to Per-User<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=256509)</ept>.","pos":[125,246],"source":" For more info, see[Switch Text Input Changed from Per-Thread to Per-User](http://go.microsoft.com/fwlink/?LinkID=256509)."}]}],"pos":[372562,373853],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values. The default is <xref href=\"System.Windows.Forms.ImeMode.Inherit\"></xref>.","nodes":[{"pos":[0,142],"content":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values. The default is <xref href=\"System.Windows.Forms.ImeMode.Inherit\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImeMode\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,68],"source":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImeMode.Inherit\"&gt;&lt;/xref&gt;</ph>.","pos":[69,142],"source":" The default is <xref href=\"System.Windows.Forms.ImeMode.Inherit\"></xref>."}]}],"pos":[374006,374149],"yaml":true},{"content":"The assigned value is not one of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> enumeration values.","nodes":[{"pos":[0,106],"content":"The assigned value is not one of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImeMode\"&gt;&lt;/xref&gt;</ph> enumeration values.","source":"The assigned value is not one of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> enumeration values."}],"pos":[374359,374466],"yaml":true},{"content":"Gets or sets the IME mode of a control.","nodes":[{"pos":[0,39],"content":"Gets or sets the IME mode of a control.","nodes":[{"content":"Gets or sets the IME mode of a control.","pos":[0,39]}]}],"pos":[375381,375421],"yaml":true},{"content":"The IME mode of the control.","nodes":[{"pos":[0,28],"content":"The IME mode of the control.","nodes":[{"content":"The IME mode of the control.","pos":[0,28]}]}],"pos":[375589,375618],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property has changed.","nodes":[{"pos":[0,95],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ImeMode\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property has changed."}],"pos":[376602,376698],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.ImeMode%2A> property is changed by either a programmatic modification or through interaction.  \n  \n Controls that do not support Input Method Managers will never raise this event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,156],"content":"This event is raised if the <xref:System.Windows.Forms.Control.ImeMode%2A> property is changed by either a programmatic modification or through interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.","pos":[0,156],"source":"This event is raised if the <xref:System.Windows.Forms.Control.ImeMode%2A> property is changed by either a programmatic modification or through interaction."}]},{"pos":[163,242],"content":"Controls that do not support Input Method Managers will never raise this event.","nodes":[{"content":"Controls that do not support Input Method Managers will never raise this event.","pos":[0,79]}]},{"pos":[249,399],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[376709,377115],"yaml":true,"extradata":"MT"},{"content":"Called after the control has been added to another container.","nodes":[{"pos":[0,61],"content":"Called after the control has been added to another container.","nodes":[{"content":"Called after the control has been added to another container.","pos":[0,61]}]}],"pos":[379691,379753],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container. The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container. For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method.","nodes":[{"pos":[0,396],"content":"The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container. The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container. For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container. The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container. For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method.","pos":[0,396],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method is called immediately after adding a control to a container.","pos":[0,121],"source":"The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method enables a control to initialize its layout state based on its container.","pos":[122,255],"source":" The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container."},{"content":"For example, you would typically apply anchoring and docking to the control in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method.","pos":[256,396],"source":" For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method."}]}]}],"pos":[379764,380161],"yaml":true,"extradata":"MT"},{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","nodes":[{"pos":[0,281],"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","nodes":[{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","pos":[0,281],"nodes":[{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","pos":[0,213]},{"content":"Optionally, invalidates the child controls assigned to the control.","pos":[214,281]}]}]}],"pos":[381361,381643],"yaml":true},{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"pos":[0,373],"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","pos":[0,373],"nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.","pos":[0,272],"source":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method."},{"content":"When this method is called with no parameters, the entire client area is added to the update region.","pos":[273,373]}]}]}],"pos":[381654,382028],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Region\"></xref> to invalidate.","nodes":[{"pos":[0,61],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Region\"&gt;&lt;/xref&gt;</ph> to invalidate.","source":"The <xref href=\"System.Drawing.Region\"></xref> to invalidate."}],"pos":[382217,382279],"yaml":true},{"content":"`true` to invalidate the control's child controls; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> to invalidate the control's child controls; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to invalidate the control's child controls; otherwise, `false`."}],"pos":[382354,382427],"yaml":true},{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","nodes":[{"pos":[0,281],"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","nodes":[{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","pos":[0,281],"nodes":[{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","pos":[0,213]},{"content":"Optionally, invalidates the child controls assigned to the control.","pos":[214,281]}]}]}],"pos":[383570,383852],"yaml":true},{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"pos":[0,373],"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","pos":[0,373],"nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.","pos":[0,272],"source":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method."},{"content":"When this method is called with no parameters, the entire client area is added to the update region.","pos":[273,373]}]}]}],"pos":[383863,384237],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the region to invalidate.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that represents the region to invalidate.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the region to invalidate."}],"pos":[384424,384514],"yaml":true},{"content":"`true` to invalidate the control's child controls; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> to invalidate the control's child controls; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to invalidate the control's child controls; otherwise, `false`."}],"pos":[384589,384662],"yaml":true},{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","nodes":[{"pos":[0,213],"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","nodes":[{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","pos":[0,213]}]}],"pos":[385715,385929],"yaml":true},{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"pos":[0,373],"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","pos":[0,373],"nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.","pos":[0,272],"source":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method."},{"content":"When this method is called with no parameters, the entire client area is added to the update region.","pos":[273,373]}]}]}],"pos":[385940,386314],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Region\"></xref> to invalidate.","nodes":[{"pos":[0,61],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Region\"&gt;&lt;/xref&gt;</ph> to invalidate.","source":"The <xref href=\"System.Drawing.Region\"></xref> to invalidate."}],"pos":[386478,386540],"yaml":true},{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","nodes":[{"pos":[0,213],"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","nodes":[{"content":"Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.","pos":[0,213]}]}],"pos":[387611,387825],"yaml":true},{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"pos":[0,373],"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","pos":[0,373],"nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.","pos":[0,272],"source":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method."},{"content":"When this method is called with no parameters, the entire client area is added to the update region.","pos":[273,373]}]}]}],"pos":[387836,388210],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the region to invalidate.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that represents the region to invalidate.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the region to invalidate."}],"pos":[388372,388462],"yaml":true},{"content":"Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","nodes":[{"pos":[0,166],"content":"Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","nodes":[{"content":"Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.","pos":[0,166],"nodes":[{"content":"Invalidates a specific region of the control and causes a paint message to be sent to the control.","pos":[0,98]},{"content":"Optionally, invalidates the child controls assigned to the control.","pos":[99,166]}]}]}],"pos":[389497,389664],"yaml":true},{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"pos":[0,373],"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","pos":[0,373],"nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.","pos":[0,272],"source":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method."},{"content":"When this method is called with no parameters, the entire client area is added to the update region.","pos":[273,373]}]}]}],"pos":[389675,390049],"yaml":true,"extradata":"MT"},{"content":"`true` to invalidate the control's child controls; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> to invalidate the control's child controls; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to invalidate the control's child controls; otherwise, `false`."}],"pos":[390213,390286],"yaml":true},{"content":"Invalidates the entire surface of the control and causes the control to be redrawn.","nodes":[{"pos":[0,83],"content":"Invalidates the entire surface of the control and causes the control to be redrawn.","nodes":[{"content":"Invalidates the entire surface of the control and causes the control to be redrawn.","pos":[0,83]}]}],"pos":[391252,391336],"yaml":true},{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"pos":[0,373],"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","nodes":[{"content":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.","pos":[0,373],"nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.","pos":[0,272],"source":"Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method."},{"content":"When this method is called with no parameters, the entire client area is added to the update region.","pos":[273,373]}]}]}],"pos":[391347,391721],"yaml":true,"extradata":"MT"},{"content":"Occurs when a control's display requires redrawing.","nodes":[{"pos":[0,51],"content":"Occurs when a control's display requires redrawing.","nodes":[{"content":"Occurs when a control's display requires redrawing.","pos":[0,51]}]}],"pos":[394236,394288],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[394299,394450],"yaml":true,"extradata":"MT"},{"content":"Executes the specified delegate on the thread that owns the control's underlying window handle.","nodes":[{"pos":[0,95],"content":"Executes the specified delegate on the thread that owns the control's underlying window handle.","nodes":[{"content":"Executes the specified delegate on the thread that owns the control's underlying window handle.","pos":[0,95]}]}],"pos":[396995,397091],"yaml":true},{"content":"Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.  \n  \n The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet. If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception. Exceptions that are raised during the call will be propagated back to the caller.  \n  \n> [!NOTE]\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.  \n  \n The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>. The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list. A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.  \n  \n> [!NOTE]\n>  An exception might be thrown if the thread that should process the message is no longer active.","nodes":[{"pos":[0,376],"content":"Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.","nodes":[{"content":"Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.","pos":[0,376],"nodes":[{"content":"Delegates are similar to function pointers in C or C++ languages.","pos":[0,65]},{"content":"Delegates encapsulate a reference to a method inside a delegate object.","pos":[66,137]},{"content":"The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.","pos":[138,279]},{"content":"Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.","pos":[280,376]}]}]},{"pos":[383,809],"content":"The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet. If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception. Exceptions that are raised during the call will be propagated back to the caller.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet. If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception. Exceptions that are raised during the call will be propagated back to the caller.","pos":[0,426],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet.","pos":[0,223],"source":"The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet."},{"content":"If no appropriate handle can be found, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method will throw an exception.","pos":[224,344],"source":" If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception."},{"content":"Exceptions that are raised during the call will be propagated back to the caller.","pos":[345,426]}]}]},{"pos":[817,1513],"content":"[!NOTE]\n In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","leadings":["","> "],"nodes":[{"content":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[8,694],"nodes":[{"content":"In addition to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.","pos":[1,404],"source":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.","pos":[405,572],"source":" Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls."},{"content":"For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[573,686]}]}]},{"pos":[1520,2026],"content":"The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>. The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list. A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.","nodes":[{"content":"The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>. The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list. A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.","pos":[0,506],"nodes":[{"content":"The delegate can be an instance of <ph id=\"ph1\">&lt;xref:System.EventHandler&gt;</ph>, in which case the sender parameter will contain this control, and the event parameter will contain <ph id=\"ph2\">&lt;xref:System.EventArgs.Empty?displayProperty=fullName&gt;</ph>.","pos":[0,217],"source":"The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>."},{"content":"The delegate can also be an instance of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, or any other delegate that takes a void parameter list.","pos":[218,356],"source":" The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list."},{"content":"A call to an <ph id=\"ph1\">&lt;xref:System.EventHandler&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegate will be faster than a call to another type of delegate.","pos":[357,506],"source":" A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate."}]}]},{"pos":[2034,2140],"content":"[!NOTE]\n An exception might be thrown if the thread that should process the message is no longer active.","leadings":["","> "],"nodes":[{"content":"An exception might be thrown if the thread that should process the message is no longer active.","pos":[9,104]}]}],"pos":[397102,399255],"yaml":true,"extradata":"MT"},{"content":"A delegate that contains a method to be called in the control's thread context.","nodes":[{"pos":[0,79],"content":"A delegate that contains a method to be called in the control's thread context.","nodes":[{"content":"A delegate that contains a method to be called in the control's thread context.","pos":[0,79]}]}],"pos":[400076,400156],"yaml":true},{"content":"The return value from the delegate being invoked, or `null` if the delegate has no return value.","nodes":[{"pos":[0,96],"content":"The return value from the delegate being invoked, or <ph id=\"ph1\">`null`</ph> if the delegate has no return value.","source":"The return value from the delegate being invoked, or `null` if the delegate has no return value."}],"pos":[400213,400310],"yaml":true},{"content":"Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.","nodes":[{"pos":[0,134],"content":"Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.","nodes":[{"content":"Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.","pos":[0,134]}]}],"pos":[401379,401514],"yaml":true},{"content":"Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.  \n  \n If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, this method throws an exception. Exceptions that are raised during the call will be propagated back to the caller.  \n  \n> [!NOTE]\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.  \n  \n The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>. The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list. A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.  \n  \n> [!NOTE]\n>  An exception might be thrown if the thread that should process the message is no longer active.","nodes":[{"pos":[0,376],"content":"Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.","nodes":[{"content":"Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.","pos":[0,376],"nodes":[{"content":"Delegates are similar to function pointers in C or C++ languages.","pos":[0,65]},{"content":"Delegates encapsulate a reference to a method inside a delegate object.","pos":[66,137]},{"content":"The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.","pos":[138,279]},{"content":"Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.","pos":[280,376]}]}]},{"pos":[383,696],"content":"If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, this method throws an exception. Exceptions that are raised during the call will be propagated back to the caller.","nodes":[{"content":"If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, this method throws an exception. Exceptions that are raised during the call will be propagated back to the caller.","pos":[0,313],"nodes":[{"content":"If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.","pos":[0,159]},{"content":"If no appropriate handle can be found, this method throws an exception.","pos":[160,231]},{"content":"Exceptions that are raised during the call will be propagated back to the caller.","pos":[232,313]}]}]},{"pos":[704,1400],"content":"[!NOTE]\n In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","leadings":["","> "],"nodes":[{"content":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[8,694],"nodes":[{"content":"In addition to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.","pos":[1,404],"source":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.","pos":[405,572],"source":" Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls."},{"content":"For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.","pos":[573,686]}]}]},{"pos":[1407,1913],"content":"The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>. The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list. A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.","nodes":[{"content":"The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>. The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list. A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.","pos":[0,506],"nodes":[{"content":"The delegate can be an instance of <ph id=\"ph1\">&lt;xref:System.EventHandler&gt;</ph>, in which case the sender parameter will contain this control, and the event parameter will contain <ph id=\"ph2\">&lt;xref:System.EventArgs.Empty?displayProperty=fullName&gt;</ph>.","pos":[0,217],"source":"The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>."},{"content":"The delegate can also be an instance of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, or any other delegate that takes a void parameter list.","pos":[218,356],"source":" The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list."},{"content":"A call to an <ph id=\"ph1\">&lt;xref:System.EventHandler&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegate will be faster than a call to another type of delegate.","pos":[357,506],"source":" A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate."}]}]},{"pos":[1921,2027],"content":"[!NOTE]\n An exception might be thrown if the thread that should process the message is no longer active.","leadings":["","> "],"nodes":[{"content":"An exception might be thrown if the thread that should process the message is no longer active.","pos":[9,104]}]}],"pos":[401525,403565],"yaml":true,"extradata":"MT"},{"content":"A delegate to a method that takes parameters of the same number and type that are contained in the <code>args</code> parameter.","nodes":[{"pos":[0,127],"content":"A delegate to a method that takes parameters of the same number and type that are contained in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A delegate to a method that takes parameters of the same number and type that are contained in the <code>args</code> parameter."}],"pos":[404432,404560],"yaml":true},{"content":"An array of objects to pass as arguments to the specified method. This parameter can be `null` if the method takes no arguments.","nodes":[{"pos":[0,128],"content":"An array of objects to pass as arguments to the specified method. This parameter can be `null` if the method takes no arguments.","nodes":[{"content":"An array of objects to pass as arguments to the specified method.","pos":[0,65]},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph> if the method takes no arguments.","pos":[66,128],"source":" This parameter can be `null` if the method takes no arguments."}]}],"pos":[404622,404751],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that contains the return value from the delegate being invoked, or `null` if the delegate has no return value.","nodes":[{"pos":[0,148],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that contains the return value from the delegate being invoked, or <ph id=\"ph2\">`null`</ph> if the delegate has no return value.","source":"An <xref href=\"System.Object\"></xref> that contains the return value from the delegate being invoked, or `null` if the delegate has no return value."}],"pos":[404808,404957],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.GotFocus\"></xref> event for the specified control.","nodes":[{"pos":[0,102],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.GotFocus\"&gt;&lt;/xref&gt;</ph> event for the specified control.","source":"Raises the <xref href=\"System.Windows.Forms.Control.GotFocus\"></xref> event for the specified control."}],"pos":[406138,406241],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the event to.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to assign the event to.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the event to."}],"pos":[406443,406521],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[406581,406652],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.LostFocus\"></xref> event for the specified control.","nodes":[{"pos":[0,103],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.LostFocus\"&gt;&lt;/xref&gt;</ph> event for the specified control.","source":"Raises the <xref href=\"System.Windows.Forms.Control.LostFocus\"></xref> event for the specified control."}],"pos":[407864,407968],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the event to.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to assign the event to.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the event to."}],"pos":[408171,408249],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[408309,408380],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event for the specified control.","nodes":[{"pos":[0,99],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Click\"&gt;&lt;/xref&gt;</ph> event for the specified control.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event for the specified control."}],"pos":[409581,409681],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event to.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to assign the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Click\"&gt;&lt;/xref&gt;</ph> event to.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event to."}],"pos":[409882,410016],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[410076,410147],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event for the specified control.","nodes":[{"pos":[0,99],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Paint\"&gt;&lt;/xref&gt;</ph> event for the specified control.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event for the specified control."}],"pos":[411406,411506],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event to.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to assign the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Paint\"&gt;&lt;/xref&gt;</ph> event to.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event to."}],"pos":[411717,411851],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,89],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PaintEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data."}],"pos":[411930,412020],"yaml":true},{"content":"Raises the `PaintBackground` event for the specified control.","nodes":[{"pos":[0,61],"content":"Raises the <ph id=\"ph1\">`PaintBackground`</ph> event for the specified control.","source":"Raises the `PaintBackground` event for the specified control."}],"pos":[413320,413382],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event to.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> to assign the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Paint\"&gt;&lt;/xref&gt;</ph> event to.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event to."}],"pos":[413603,413737],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,89],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PaintEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data."}],"pos":[413816,413906],"yaml":true},{"content":"Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.","nodes":[{"pos":[0,194],"content":"Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.","nodes":[{"content":"Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.","pos":[0,194]}]}],"pos":[414881,415076],"yaml":true},{"content":"Controls in Windows Forms are bound to a specific thread and are not thread safe. Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread. This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.  \n  \n> [!NOTE]\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of these invoke methods when calling from a different thread.  \n  \n If the control's handle does not yet exist, <xref:System.Windows.Forms.Control.InvokeRequired%2A> searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.InvokeRequired%2A> method returns `false`.  \n  \n This means that <xref:System.Windows.Forms.Control.InvokeRequired%2A>can return `false` if <xref:System.Windows.Forms.Control.Invoke%2A> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.  \n  \n In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control. This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.  \n  \n You can protect against this case by also checking the value of <xref:System.Windows.Forms.Control.IsHandleCreated%2A> when <xref:System.Windows.Forms.Control.InvokeRequired%2A> returns `false` on a background thread. If the control handle has not yet been created, you must wait until it has been created before calling <xref:System.Windows.Forms.Control.Invoke%2A> or <xref:System.Windows.Forms.Control.BeginInvoke%2A>. Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in `Application.Run(new MainForm())`, before the form has been shown or `Application.Run` has been called.  \n  \n One solution is to wait until the form's handle has been created before starting the background thread. Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process.  \n  \n An even better solution is to use the `SynchronizationContext` returned by <xref:System.Threading.SynchronizationContext> rather than a control for cross-thread marshaling.  \n  \n> [!NOTE]\n>  An exception might be thrown if the thread that should process the message is no longer active.  \n  \n For more information about multithreaded Windows Forms controls, see [How to: Use a Background Thread to Search for Files](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md) and [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md).","nodes":[{"pos":[0,387],"content":"Controls in Windows Forms are bound to a specific thread and are not thread safe. Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread. This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.","nodes":[{"content":"Controls in Windows Forms are bound to a specific thread and are not thread safe. Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread. This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.","pos":[0,387],"nodes":[{"content":"Controls in Windows Forms are bound to a specific thread and are not thread safe.","pos":[0,81]},{"content":"Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread.","pos":[82,246]},{"content":"This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.","pos":[247,387]}]}]},{"pos":[395,1092],"content":"[!NOTE]\n In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of these invoke methods when calling from a different thread.","leadings":["","> "],"nodes":[{"content":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of these invoke methods when calling from a different thread.","pos":[8,695],"nodes":[{"content":"In addition to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe to call: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>,<ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.","pos":[1,410],"source":" In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.","pos":[411,578],"source":" Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls."},{"content":"For all other method calls, you should use one of these invoke methods when calling from a different thread.","pos":[579,687]}]}]},{"pos":[1099,1421],"content":"If the control's handle does not yet exist, <xref:System.Windows.Forms.Control.InvokeRequired%2A> searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.InvokeRequired%2A> method returns `false`.","nodes":[{"content":"If the control's handle does not yet exist, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> searches up the control's parent chain until it finds a control or form that does have a window handle.","pos":[0,201],"source":"If the control's handle does not yet exist, <xref:System.Windows.Forms.Control.InvokeRequired%2A> searches up the control's parent chain until it finds a control or form that does have a window handle."},{"content":"If no appropriate handle can be found, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> method returns <ph id=\"ph2\">`false`</ph>.","pos":[202,322],"source":" If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.InvokeRequired%2A> method returns `false`."}]},{"pos":[1428,1721],"content":"This means that <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>can return <ph id=\"ph2\">`false`</ph> if <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.","source":"This means that <xref:System.Windows.Forms.Control.InvokeRequired%2A>can return `false` if <xref:System.Windows.Forms.Control.Invoke%2A> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created."},{"pos":[1728,2038],"content":"In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control. This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.","nodes":[{"content":"In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control. This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.","pos":[0,310],"nodes":[{"content":"In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control.","pos":[0,138]},{"content":"This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.","pos":[139,310]}]}]},{"pos":[2045,2699],"content":"You can protect against this case by also checking the value of <xref:System.Windows.Forms.Control.IsHandleCreated%2A> when <xref:System.Windows.Forms.Control.InvokeRequired%2A> returns `false` on a background thread. If the control handle has not yet been created, you must wait until it has been created before calling <xref:System.Windows.Forms.Control.Invoke%2A> or <xref:System.Windows.Forms.Control.BeginInvoke%2A>. Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in `Application.Run(new MainForm())`, before the form has been shown or `Application.Run` has been called.","nodes":[{"content":"You can protect against this case by also checking the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> when <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph> on a background thread.","pos":[0,217],"source":"You can protect against this case by also checking the value of <xref:System.Windows.Forms.Control.IsHandleCreated%2A> when <xref:System.Windows.Forms.Control.InvokeRequired%2A> returns `false` on a background thread."},{"content":"If the control handle has not yet been created, you must wait until it has been created before calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>.","pos":[218,421],"source":" If the control handle has not yet been created, you must wait until it has been created before calling <xref:System.Windows.Forms.Control.Invoke%2A> or <xref:System.Windows.Forms.Control.BeginInvoke%2A>."},{"content":"Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in <ph id=\"ph1\">`Application.Run(new MainForm())`</ph>, before the form has been shown or <ph id=\"ph2\">`Application.Run`</ph> has been called.","pos":[422,654],"source":" Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in `Application.Run(new MainForm())`, before the form has been shown or `Application.Run` has been called."}]},{"pos":[2706,3004],"content":"One solution is to wait until the form's handle has been created before starting the background thread. Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process.","nodes":[{"content":"One solution is to wait until the form's handle has been created before starting the background thread. Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process.","pos":[0,298],"nodes":[{"content":"One solution is to wait until the form's handle has been created before starting the background thread.","pos":[0,103]},{"content":"Either force handle creation by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property, or wait until the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event to start the background process.","pos":[104,298],"source":" Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process."}]}]},{"pos":[3011,3183],"content":"An even better solution is to use the <ph id=\"ph1\">`SynchronizationContext`</ph> returned by <ph id=\"ph2\">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> rather than a control for cross-thread marshaling.","source":"An even better solution is to use the `SynchronizationContext` returned by <xref:System.Threading.SynchronizationContext> rather than a control for cross-thread marshaling."},{"pos":[3191,3297],"content":"[!NOTE]\n An exception might be thrown if the thread that should process the message is no longer active.","leadings":["","> "],"nodes":[{"content":"An exception might be thrown if the thread that should process the message is no longer active.","pos":[9,104]}]},{"pos":[3304,3675],"content":"For more information about multithreaded Windows Forms controls, see <bpt id=\"p1\">[</bpt>How to: Use a Background Thread to Search for Files<ept id=\"p1\">](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Make Thread-Safe Calls to Windows Forms Controls<ept id=\"p2\">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept>.","source":"For more information about multithreaded Windows Forms controls, see [How to: Use a Background Thread to Search for Files](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md) and [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)."}],"pos":[415087,418785],"yaml":true,"extradata":"MT"},{"content":"`true` if the control's <xref href=\"System.Windows.Forms.Control.Handle\"></xref> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, `false`.","nodes":[{"pos":[0,237],"content":"<ph id=\"ph1\">`true`</ph> if the control's <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Handle\"&gt;&lt;/xref&gt;</ph> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the control's <xref href=\"System.Windows.Forms.Control.Handle\"></xref> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, `false`."}],"pos":[418959,419201],"yaml":true},{"content":"Gets or sets a value indicating whether the control is visible to accessibility applications.","nodes":[{"pos":[0,93],"content":"Gets or sets a value indicating whether the control is visible to accessibility applications.","nodes":[{"content":"Gets or sets a value indicating whether the control is visible to accessibility applications.","pos":[0,93]}]}],"pos":[420244,420338],"yaml":true},{"content":"`true` if the control is visible to accessibility applications; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the control is visible to accessibility applications; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control is visible to accessibility applications; otherwise, `false`."}],"pos":[420515,420601],"yaml":true},{"content":"Gets a value indicating whether the control has been disposed of.","nodes":[{"pos":[0,65],"content":"Gets a value indicating whether the control has been disposed of.","nodes":[{"content":"Gets a value indicating whether the control has been disposed of.","pos":[0,65]}]}],"pos":[421630,421696],"yaml":true},{"content":"When this property returns `true`, the control is disposed of and can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.","nodes":[{"pos":[0,378],"content":"When this property returns `true`, the control is disposed of and can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.","nodes":[{"content":"When this property returns <ph id=\"ph1\">`true`</ph>, the control is disposed of and can no longer be referenced as a valid Windows control.","pos":[0,121],"source":"When this property returns `true`, the control is disposed of and can no longer be referenced as a valid Windows control."},{"content":"Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.","pos":[122,268]},{"content":"When a control is disposed, you cannot call its <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.","pos":[269,378],"source":" When a control is disposed, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method."}]}],"pos":[421707,422086],"yaml":true,"extradata":"MT"},{"content":"`true` if the control has been disposed of; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the control has been disposed of; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control has been disposed of; otherwise, `false`."}],"pos":[422256,422322],"yaml":true},{"content":"Gets a value indicating whether the control has a handle associated with it.","nodes":[{"pos":[0,76],"content":"Gets a value indicating whether the control has a handle associated with it.","nodes":[{"content":"Gets a value indicating whether the control has a handle associated with it.","pos":[0,76]}]}],"pos":[423379,423456],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property to determine whether <xref:System.Windows.Forms.Control.CreateHandle%2A> has been called.","nodes":[{"pos":[0,161],"content":"Use the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property to determine whether <xref:System.Windows.Forms.Control.CreateHandle%2A> has been called.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property to determine whether <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> has been called.","pos":[0,161],"source":"Use the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property to determine whether <xref:System.Windows.Forms.Control.CreateHandle%2A> has been called."}]}],"pos":[423467,423629],"yaml":true,"extradata":"MT"},{"content":"`true` if a handle has been assigned to the control; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if a handle has been assigned to the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a handle has been assigned to the control; otherwise, `false`."}],"pos":[423804,423879],"yaml":true},{"content":"Determines if a character is an input character that the control recognizes.","nodes":[{"pos":[0,76],"content":"Determines if a character is an input character that the control recognizes.","nodes":[{"content":"Determines if a character is an input character that the control recognizes.","pos":[0,76]}]}],"pos":[424972,425049],"yaml":true},{"content":"Call the <xref:System.Windows.Forms.Control.IsInputChar%2A> method to determine whether the character specified by the `charCode` parameter is an input character that the control wants. This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `true`, the specified character is sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `false`, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. The preprocessing of a character includes checking whether the character is a mnemonic of another control.","nodes":[{"pos":[0,774],"content":"Call the <xref:System.Windows.Forms.Control.IsInputChar%2A> method to determine whether the character specified by the `charCode` parameter is an input character that the control wants. This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `true`, the specified character is sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `false`, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. The preprocessing of a character includes checking whether the character is a mnemonic of another control.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method to determine whether the character specified by the <ph id=\"ph2\">`charCode`</ph> parameter is an input character that the control wants.","pos":[0,185],"source":"Call the <xref:System.Windows.Forms.Control.IsInputChar%2A> method to determine whether the character specified by the `charCode` parameter is an input character that the control wants."},{"content":"This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control.","pos":[186,350]},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph>, the specified character is sent directly to the control.","pos":[351,477],"source":" If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `true`, the specified character is sent directly to the control."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.","pos":[478,667],"source":" If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `false`, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase."},{"content":"The preprocessing of a character includes checking whether the character is a mnemonic of another control.","pos":[668,774]}]}],"pos":[425060,425835],"yaml":true,"extradata":"MT"},{"content":"The character to test.","nodes":[{"pos":[0,22],"content":"The character to test.","nodes":[{"content":"The character to test.","pos":[0,22]}]}],"pos":[425988,426011],"yaml":true},{"content":"`true` if the character should be sent directly to the control and not preprocessed; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if the character should be sent directly to the control and not preprocessed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character should be sent directly to the control and not preprocessed; otherwise, `false`."}],"pos":[426069,426176],"yaml":true},{"content":"Determines whether the specified key is a regular input key or a special key that requires preprocessing.","nodes":[{"pos":[0,105],"content":"Determines whether the specified key is a regular input key or a special key that requires preprocessing.","nodes":[{"content":"Determines whether the specified key is a regular input key or a special key that requires preprocessing.","pos":[0,105]}]}],"pos":[427236,427342],"yaml":true},{"content":"Call the <xref:System.Windows.Forms.Control.IsInputKey%2A> method to determine whether the key specified by the `keyData` parameter is an input key that the control wants. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `true`, the specified key is sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `false`, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.","nodes":[{"pos":[0,754],"content":"Call the <xref:System.Windows.Forms.Control.IsInputKey%2A> method to determine whether the key specified by the `keyData` parameter is an input key that the control wants. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `true`, the specified key is sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `false`, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method to determine whether the key specified by the <ph id=\"ph2\">`keyData`</ph> parameter is an input key that the control wants.","pos":[0,171],"source":"Call the <xref:System.Windows.Forms.Control.IsInputKey%2A> method to determine whether the key specified by the `keyData` parameter is an input key that the control wants."},{"content":"This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control.","pos":[172,330]},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph>, the specified key is sent directly to the control.","pos":[331,450],"source":" If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `true`, the specified key is sent directly to the control."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.","pos":[451,633],"source":" If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `false`, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase."},{"content":"Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.","pos":[634,754]}]}],"pos":[427353,428108],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values.","nodes":[{"pos":[0,65],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values."}],"pos":[429572,429638],"yaml":true},{"content":"`true` if the specified key is a regular input key; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the specified key is a regular input key; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified key is a regular input key; otherwise, `false`."}],"pos":[429696,429770],"yaml":true},{"content":"Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.","nodes":[{"pos":[0,76],"content":"Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.","nodes":[{"content":"Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.","pos":[0,76]}]}],"pos":[430813,430890],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.Control.IsKeyLocked%2A> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.","nodes":[{"pos":[0,181],"content":"Use the <xref:System.Windows.Forms.Control.IsKeyLocked%2A> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsKeyLocked%2A&gt;</ph> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.","pos":[0,181],"source":"Use the <xref:System.Windows.Forms.Control.IsKeyLocked%2A> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination."}]}],"pos":[430901,431083],"yaml":true,"extradata":"MT"},{"content":"The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <xref href=\"System.Windows.Forms.Keys\"></xref> enumeration.","nodes":[{"pos":[0,113],"content":"The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <xref href=\"System.Windows.Forms.Keys\"></xref> enumeration."}],"pos":[431816,431930],"yaml":true},{"content":"`true` if the specified key or keys are in effect; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the specified key or keys are in effect; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified key or keys are in effect; otherwise, `false`."}],"pos":[431988,432061],"yaml":true},{"content":"The <code>keyVal</code> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.","nodes":[{"pos":[0,105],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyVal</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.","source":"The <code>keyVal</code> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key."}],"pos":[432231,432337],"yaml":true},{"content":"Gets a value indicating whether the control is mirrored.","nodes":[{"pos":[0,56],"content":"Gets a value indicating whether the control is mirrored.","nodes":[{"content":"Gets a value indicating whether the control is mirrored.","pos":[0,56]}]}],"pos":[433229,433286],"yaml":true},{"content":"A mirrored control displays both layout and text from right to left. For more information, see [How to: Create Mirrored Windows Forms and Controls](http://msdn.microsoft.com/en-us/7c5c4ecc-9bfb-4508-8383-753e306719b1).","nodes":[{"pos":[0,218],"content":"A mirrored control displays both layout and text from right to left. For more information, see [How to: Create Mirrored Windows Forms and Controls](http://msdn.microsoft.com/en-us/7c5c4ecc-9bfb-4508-8383-753e306719b1).","nodes":[{"content":"A mirrored control displays both layout and text from right to left.","pos":[0,68]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Create Mirrored Windows Forms and Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/7c5c4ecc-9bfb-4508-8383-753e306719b1)</ept>.","pos":[69,218],"source":" For more information, see [How to: Create Mirrored Windows Forms and Controls](http://msdn.microsoft.com/en-us/7c5c4ecc-9bfb-4508-8383-753e306719b1)."}]}],"pos":[433297,433518],"yaml":true,"extradata":"MT"},{"content":"`true` if the control is mirrored; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the control is mirrored; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control is mirrored; otherwise, `false`."}],"pos":[433688,433745],"yaml":true},{"content":"Determines if the specified character is the mnemonic character assigned to the control in the specified string.","nodes":[{"pos":[0,112],"content":"Determines if the specified character is the mnemonic character assigned to the control in the specified string.","nodes":[{"content":"Determines if the specified character is the mnemonic character assigned to the control in the specified string.","pos":[0,112]}]}],"pos":[434871,434984],"yaml":true},{"content":"The mnemonic character is the character immediately following the first instance of \"&\" in a <xref:System.String>.","nodes":[{"pos":[0,114],"content":"The mnemonic character is the character immediately following the first instance of \"&\" in a <xref:System.String>.","nodes":[{"content":"The mnemonic character is the character immediately following the first instance of \"&amp;\" in a <ph id=\"ph1\">&lt;xref:System.String&gt;</ph>.","pos":[0,114],"source":"The mnemonic character is the character immediately following the first instance of \"&\" in a <xref:System.String>."}]}],"pos":[434995,435110],"yaml":true,"extradata":"MT"},{"content":"The character to test.","nodes":[{"pos":[0,22],"content":"The character to test.","nodes":[{"content":"The character to test.","pos":[0,22]}]}],"pos":[436235,436258],"yaml":true},{"content":"The string to search.","nodes":[{"pos":[0,21],"content":"The string to search.","nodes":[{"content":"The string to search.","pos":[0,21]}]}],"pos":[436318,436340],"yaml":true},{"content":"`true` if the <code>charCode</code> character is the mnemonic character assigned to the control; otherwise, `false`.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">charCode</ph><ept id=\"p1\">&lt;/code&gt;</ept> character is the mnemonic character assigned to the control; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>charCode</code> character is the mnemonic character assigned to the control; otherwise, `false`."}],"pos":[436398,436517],"yaml":true},{"content":"Occurs when a key is pressed while the control has focus.","nodes":[{"pos":[0,57],"content":"Occurs when a key is pressed while the control has focus.","nodes":[{"content":"Occurs when a key is pressed while the control has focus.","pos":[0,57]}]}],"pos":[437458,437516],"yaml":true},{"content":"Key events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.KeyDown>  \n  \n2.  <xref:System.Windows.Forms.Control.KeyPress>  \n  \n3.  <xref:System.Windows.Forms.Control.KeyUp>  \n  \n To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`. Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically. To have these keys raise the <xref:System.Windows.Forms.Control.KeyDown> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form. The code for the override of the <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`. Instead of overriding the <xref:System.Windows.Forms.Control.IsInputKey%2A> method, you can handle the <xref:System.Windows.Forms.Control.PreviewKeyDown> event and set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>property to `true`. For a code example, see the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,40],"content":"Key events occur in the following order:","nodes":[{"content":"Key events occur in the following order:","pos":[0,40]}]},{"pos":[50,93],"content":"<xref:System.Windows.Forms.Control.KeyDown>","nodes":[]},{"pos":[103,147],"content":"<xref:System.Windows.Forms.Control.KeyPress>","nodes":[]},{"pos":[157,198],"content":"<xref:System.Windows.Forms.Control.KeyUp>","nodes":[]},{"pos":[205,1308],"content":"To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`. Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically. To have these keys raise the <xref:System.Windows.Forms.Control.KeyDown> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form. The code for the override of the <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`. Instead of overriding the <xref:System.Windows.Forms.Control.IsInputKey%2A> method, you can handle the <xref:System.Windows.Forms.Control.PreviewKeyDown> event and set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>property to `true`. For a code example, see the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.","nodes":[{"content":"To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName&gt;</ph> property in your form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id=\"ph3\">`true`</ph>.","pos":[0,298],"source":"To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`."},{"content":"Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.","pos":[299,396]},{"content":"To have these keys raise the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event, you must override the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method in each control on your form.","pos":[397,585],"source":" To have these keys raise the <xref:System.Windows.Forms.Control.KeyDown> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form."},{"content":"The code for the override of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> would need to determine if one of the special keys is pressed and return a value of <ph id=\"ph2\">`true`</ph>.","pos":[586,760],"source":" The code for the override of the <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`."},{"content":"Instead of overriding the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method, you can handle the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event and set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph>property to <ph id=\"ph4\">`true`</ph>.","pos":[761,1017],"source":" Instead of overriding the <xref:System.Windows.Forms.Control.IsInputKey%2A> method, you can handle the <xref:System.Windows.Forms.Control.PreviewKeyDown> event and set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>property to `true`."},{"content":"For a code example, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.","pos":[1018,1103],"source":" For a code example, see the <xref:System.Windows.Forms.Control.PreviewKeyDown> event."}]},{"pos":[1315,1465],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[437527,439005],"yaml":true,"extradata":"MT"},{"content":"Occurs when a character. space or backspace key is pressed while the control has focus.","nodes":[{"pos":[0,87],"content":"Occurs when a character. space or backspace key is pressed while the control has focus.","nodes":[{"content":"Occurs when a character. space or backspace key is pressed while the control has focus.","pos":[0,87],"nodes":[{"content":"Occurs when a character.","pos":[0,24]},{"content":"space or backspace key is pressed while the control has focus.","pos":[25,87]}]}]}],"pos":[440573,440661],"yaml":true},{"content":"Key events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.KeyDown>  \n  \n2.  <xref:System.Windows.Forms.Control.KeyPress>  \n  \n3.  <xref:System.Windows.Forms.Control.KeyUp>  \n  \n The <xref:System.Windows.Forms.Control.KeyPress> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events.  \n  \n Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.  \n  \n To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,40],"content":"Key events occur in the following order:","nodes":[{"content":"Key events occur in the following order:","pos":[0,40]}]},{"pos":[50,93],"content":"<xref:System.Windows.Forms.Control.KeyDown>","nodes":[]},{"pos":[103,147],"content":"<xref:System.Windows.Forms.Control.KeyPress>","nodes":[]},{"pos":[157,198],"content":"<xref:System.Windows.Forms.Control.KeyUp>","nodes":[]},{"pos":[205,470],"content":"The <xref:System.Windows.Forms.Control.KeyPress> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events.","pos":[0,265],"source":"The <xref:System.Windows.Forms.Control.KeyPress> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events."}]},{"pos":[477,639],"content":"Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.","pos":[0,162],"source":"Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes."}]},{"pos":[646,944],"content":"To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName&gt;</ph> property in your form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id=\"ph3\">`true`</ph>.","source":"To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`."},{"pos":[951,1101],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[440672,441790],"yaml":true,"extradata":"MT"},{"content":"Occurs when a key is released while the control has focus.","nodes":[{"pos":[0,58],"content":"Occurs when a key is released while the control has focus.","nodes":[{"content":"Occurs when a key is released while the control has focus.","pos":[0,58]}]}],"pos":[443340,443399],"yaml":true},{"content":"Key events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.KeyDown>  \n  \n2.  <xref:System.Windows.Forms.Control.KeyPress>  \n  \n3.  <xref:System.Windows.Forms.Control.KeyUp>  \n  \n To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`. Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically. To have these keys raise the <xref:System.Windows.Forms.Control.KeyUp> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form. The code for the override of <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,40],"content":"Key events occur in the following order:","nodes":[{"content":"Key events occur in the following order:","pos":[0,40]}]},{"pos":[50,93],"content":"<xref:System.Windows.Forms.Control.KeyDown>","nodes":[]},{"pos":[103,147],"content":"<xref:System.Windows.Forms.Control.KeyPress>","nodes":[]},{"pos":[157,198],"content":"<xref:System.Windows.Forms.Control.KeyUp>","nodes":[]},{"pos":[205,959],"content":"To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`. Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically. To have these keys raise the <xref:System.Windows.Forms.Control.KeyUp> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form. The code for the override of <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.","nodes":[{"content":"To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName&gt;</ph> property in your form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id=\"ph3\">`true`</ph>.","pos":[0,298],"source":"To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`."},{"content":"Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.","pos":[299,396]},{"content":"To have these keys raise the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event, you must override the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method in each control on your form.","pos":[397,583],"source":" To have these keys raise the <xref:System.Windows.Forms.Control.KeyUp> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form."},{"content":"The code for the override of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> would need to determine if one of the special keys is pressed and return a value of <ph id=\"ph2\">`true`</ph>.","pos":[584,754],"source":" The code for the override of <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`."}]},{"pos":[966,1116],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[443410,444539],"yaml":true,"extradata":"MT"},{"content":"Occurs when a control should reposition its child controls.","nodes":[{"pos":[0,59],"content":"Occurs when a control should reposition its child controls.","nodes":[{"content":"Occurs when a control should reposition its child controls.","pos":[0,59]}]}],"pos":[446086,446146],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control. The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods. Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change. For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,625],"content":"The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control. The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods. Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change. For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control. The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods. Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change. For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event.","pos":[0,625],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.","pos":[0,213],"source":"The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control."},{"content":"The layout event can be suppressed using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.","pos":[214,376],"source":" The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods."},{"content":"Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.","pos":[377,499]},{"content":"For example, if you resize and move a control, each operation would raise a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.","pos":[500,625],"source":" For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event."}]}]},{"pos":[632,782],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[446157,446944],"yaml":true,"extradata":"MT"},{"content":"Gets a cached instance of the control's layout engine.","nodes":[{"pos":[0,54],"content":"Gets a cached instance of the control's layout engine.","nodes":[{"content":"Gets a cached instance of the control's layout engine.","pos":[0,54]}]}],"pos":[448658,448713],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.LayoutEngine%2A> property gets the layout engine for the control's children rather than for the control itself.","nodes":[{"pos":[0,150],"content":"The <xref:System.Windows.Forms.Control.LayoutEngine%2A> property gets the layout engine for the control's children rather than for the control itself.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> property gets the layout engine for the control's children rather than for the control itself.","pos":[0,150],"source":"The <xref:System.Windows.Forms.Control.LayoutEngine%2A> property gets the layout engine for the control's children rather than for the control itself."}]}],"pos":[448724,448875],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.Layout.LayoutEngine\"></xref> for the control's contents.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Layout.LayoutEngine\"&gt;&lt;/xref&gt;</ph> for the control's contents.","source":"The <xref href=\"System.Windows.Forms.Layout.LayoutEngine\"></xref> for the control's contents."}],"pos":[449117,449211],"yaml":true},{"content":"Occurs when the input focus leaves the control.","nodes":[{"pos":[0,47],"content":"Occurs when the input focus leaves the control.","nodes":[{"content":"Occurs when the input focus leaves the control.","pos":[0,47]}]}],"pos":[450207,450255],"yaml":true},{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,384],"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName&gt;</ph> property to the current form, focus events occur in the following order:","pos":[0,384],"source":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:"}]},{"pos":[394,435],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[445,489],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[499,540],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[550,596],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[606,651],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[661,706],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[713,871],"content":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the mouse or by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:","pos":[0,158],"source":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:"}]},{"pos":[881,922],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[932,976],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[986,1031],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[1041,1082],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[1092,1138],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[1148,1193],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[1200,1414],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.","source":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed."},{"pos":[1422,2588],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.","pos":[8,1164],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are suppressed by the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.","pos":[1,161],"source":" The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class."},{"content":"The equivalent events in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class are the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.","pos":[162,336],"source":" The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.","pos":[337,540],"source":" The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached."},{"content":"For example, assume you have a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id=\"ph2\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls, and each <ph id=\"ph3\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control has one <ph id=\"ph4\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.","pos":[541,767],"source":" For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control."},{"content":"When the caret is moved from one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to the other, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event is raised for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, and the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event is raised for the other <ph id=\"ph6\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id=\"ph7\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.","pos":[768,1156],"source":" When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>."}]}]},{"pos":[2596,3153],"content":"[!CAUTION]\n Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.","leadings":["","> "],"nodes":[{"content":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.","pos":[11,555],"nodes":[{"content":"Do not attempt to set focus from within the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.","pos":[1,336],"source":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers."},{"content":"Doing so can cause your application or the operating system to stop responding.","pos":[337,416]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>WM_KILLFOCUS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx)</ept> topic.","pos":[417,544],"source":" For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic."}]}]},{"pos":[3160,3310],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[450266,453617],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.","nodes":[{"pos":[0,124],"content":"Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.","nodes":[{"content":"Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.","pos":[0,124]}]}],"pos":[455064,455189],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Left%2A> property value is equivalent to the <xref:System.Drawing.Point.X%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.  \n  \n Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.","nodes":[{"pos":[0,236],"content":"The <xref:System.Windows.Forms.Control.Left%2A> property value is equivalent to the <xref:System.Drawing.Point.X%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property value is equivalent to the <ph id=\"ph2\">&lt;xref:System.Drawing.Point.X%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value of the control.","pos":[0,236],"source":"The <xref:System.Windows.Forms.Control.Left%2A> property value is equivalent to the <xref:System.Drawing.Point.X%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control."}]},{"pos":[243,467],"content":"Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.","nodes":[{"content":"Changes made to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property values cause the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property value of the control to change.","pos":[0,224],"source":"Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change."}]}],"pos":[455200,455672],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.","nodes":[{"pos":[0,161],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.","source":"An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area."}],"pos":[456674,456836],"yaml":true},{"content":"Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.","nodes":[{"pos":[0,120],"content":"Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.","nodes":[{"content":"Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.","pos":[0,120]}]}],"pos":[457845,457966],"yaml":true},{"content":"Because the <xref:System.Drawing.Point> class is a value type (`Structure` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `struct` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)]), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control. So, adjusting the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from this property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the control. To adjust these properties set each property value individually, or set the <xref:System.Windows.Forms.Control.Location%2A> property with a new <xref:System.Drawing.Point>.  \n  \n If the <xref:System.Windows.Forms.Control> is a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Location%2A> property value represents the upper-left corner of the <xref:System.Windows.Forms.Form> in screen coordinates.","nodes":[{"pos":[0,861],"content":"Because the <xref:System.Drawing.Point> class is a value type (`Structure` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `struct` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)]), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control. So, adjusting the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from this property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the control. To adjust these properties set each property value individually, or set the <xref:System.Windows.Forms.Control.Location%2A> property with a new <xref:System.Drawing.Point>.","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Drawing.Point&gt;</ph> class is a value type (<ph id=\"ph2\">`Structure`</ph> in <ph id=\"ph3\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id=\"ph4\">`struct`</ph> in <ph id=\"ph5\">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph>), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control.","pos":[0,291],"source":"Because the <xref:System.Drawing.Point> class is a value type (`Structure` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `struct` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)]), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control."},{"content":"So, adjusting the <ph id=\"ph1\">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Drawing.Point&gt;</ph> returned from this property will not affect the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, or <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property values of the control.","pos":[292,688],"source":" So, adjusting the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from this property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the control."},{"content":"To adjust these properties set each property value individually, or set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property with a new <ph id=\"ph2\">&lt;xref:System.Drawing.Point&gt;</ph>.","pos":[689,861],"source":" To adjust these properties set each property value individually, or set the <xref:System.Windows.Forms.Control.Location%2A> property with a new <xref:System.Drawing.Point>."}]},{"pos":[868,1112],"content":"If the <xref:System.Windows.Forms.Control> is a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Location%2A> property value represents the upper-left corner of the <xref:System.Windows.Forms.Form> in screen coordinates.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> is a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value represents the upper-left corner of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form&gt;</ph> in screen coordinates.","pos":[0,244],"source":"If the <xref:System.Windows.Forms.Control> is a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Location%2A> property value represents the upper-left corner of the <xref:System.Windows.Forms.Form> in screen coordinates."}]}],"pos":[457977,459094],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the control relative to the upper-left corner of its container.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that represents the upper-left corner of the control relative to the upper-left corner of its container.","source":"The <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the control relative to the upper-left corner of its container."}],"pos":[460313,460464],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.Location\"></xref> property value has changed.","nodes":[{"pos":[0,102],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Location\"&gt;&lt;/xref&gt;</ph> property value has changed.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.Location\"></xref> property value has changed."}],"pos":[461468,461571],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or through interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,157],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or through interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.","pos":[0,157],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or through interaction."}]},{"pos":[164,314],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[461582,461901],"yaml":true,"extradata":"MT"},{"content":"Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.","nodes":[{"pos":[0,69],"content":"Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.","nodes":[{"content":"Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.","pos":[0,69]}]}],"pos":[463566,463636],"yaml":true},{"content":"The Logical value to convert.","nodes":[{"pos":[0,29],"content":"The Logical value to convert.","nodes":[{"content":"The Logical value to convert.","pos":[0,29]}]}],"pos":[463780,463810],"yaml":true},{"content":"The resulting DeviceUnit value.","nodes":[{"pos":[0,31],"content":"The resulting DeviceUnit value.","nodes":[{"content":"The resulting DeviceUnit value.","pos":[0,31]}]}],"pos":[463866,463898],"yaml":true},{"content":"Occurs when the control loses focus.","nodes":[{"pos":[0,36],"content":"Occurs when the control loses focus.","nodes":[{"content":"Occurs when the control loses focus.","pos":[0,36]}]}],"pos":[464556,464593],"yaml":true},{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,384],"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName&gt;</ph> property to the current form, focus events occur in the following order:","pos":[0,384],"source":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:"}]},{"pos":[394,435],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[445,489],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[499,540],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[550,596],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[606,651],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[661,706],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[713,871],"content":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the mouse or by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:","pos":[0,158],"source":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:"}]},{"pos":[881,922],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[932,976],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[986,1031],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[1041,1082],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[1092,1138],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[1148,1193],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[1200,1414],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.","source":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed."},{"pos":[1421,1745],"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id=\"ph3\">`true`</ph> in the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.","source":"If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed."},{"pos":[1753,2817],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.","pos":[8,1062],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.","pos":[1,201],"source":" The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages."},{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are only used when updating <ph id=\"ph3\">&lt;xref:System.Windows.Forms.UICues&gt;</ph> or when writing custom controls.","pos":[202,414],"source":" Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls."},{"content":"Instead the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events should be used for all controls except the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, which uses the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.","pos":[415,718],"source":" Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events."},{"content":"For more information about the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events, see the <bpt id=\"p1\">[</bpt>WM_KILLFOCUS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx)</ept> and <bpt id=\"p2\">[</bpt>WM_KILLFOCUS<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx)</ept> topics.","pos":[719,1054],"source":" For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics."}]}]},{"pos":[2825,3382],"content":"[!CAUTION]\n Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.","leadings":["","> "],"nodes":[{"content":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.","pos":[11,555],"nodes":[{"content":"Do not attempt to set focus from within the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.","pos":[1,336],"source":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers."},{"content":"Doing so can cause your application or the operating system to stop responding.","pos":[337,416]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>WM_KILLFOCUS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx)</ept> topic.","pos":[417,544],"source":" For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic."}]}]},{"pos":[3389,3539],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[464604,468190],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the space between controls.","nodes":[{"pos":[0,40],"content":"Gets or sets the space between controls.","nodes":[{"content":"Gets or sets the space between controls.","pos":[0,40]}]}],"pos":[470632,470673],"yaml":true},{"content":"Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.  \n  \n> [!NOTE]\n>  Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the the edges of its container.","nodes":[{"pos":[0,216],"content":"Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.","nodes":[{"content":"Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.","pos":[0,216],"nodes":[{"content":"Controls receive default values for <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> that are reasonably close to Windows user interface guidelines.","pos":[0,145],"source":"Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines."},{"content":"Some adjustments might still be necessary for particular applications.","pos":[146,216]}]}]},{"pos":[224,403],"content":"[!NOTE]\n Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the the edges of its container.","leadings":["","> "],"nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> property on a docked control has no effect on the distance of the control from the the edges of its container.","pos":[9,177],"source":" Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the the edges of its container."}]}],"pos":[470684,471093],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Padding\"></xref> representing the space between controls.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Padding\"&gt;&lt;/xref&gt;</ph> representing the space between controls.","source":"A <xref href=\"System.Windows.Forms.Padding\"></xref> representing the space between controls."}],"pos":[471245,471338],"yaml":true},{"content":"Occurs when the control's margin changes.","nodes":[{"pos":[0,41],"content":"Occurs when the control's margin changes.","nodes":[{"content":"Occurs when the control's margin changes.","pos":[0,41]}]}],"pos":[472328,472370],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[472381,472532],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the size that is the upper limit that <xref href=\"System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\"></xref> can specify.","nodes":[{"pos":[0,151],"content":"Gets or sets the size that is the upper limit that <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\"&gt;&lt;/xref&gt;</ph> can specify.","source":"Gets or sets the size that is the upper limit that <xref href=\"System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\"></xref> can specify."}],"pos":[474879,475031],"yaml":true},{"content":"An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle.","nodes":[{"pos":[0,114],"content":"An ordered pair of type <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> representing the width and height of a rectangle.","source":"An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle."}],"pos":[475178,475293],"yaml":true},{"content":"Gets or sets the size that is the lower limit that <xref href=\"System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\"></xref> can specify.","nodes":[{"pos":[0,151],"content":"Gets or sets the size that is the lower limit that <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\"&gt;&lt;/xref&gt;</ph> can specify.","source":"Gets or sets the size that is the lower limit that <xref href=\"System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\"></xref> can specify."}],"pos":[476279,476431],"yaml":true},{"content":"An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle.","nodes":[{"pos":[0,114],"content":"An ordered pair of type <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> representing the width and height of a rectangle.","source":"An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle."}],"pos":[476578,476693],"yaml":true},{"content":"Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.","nodes":[{"pos":[0,96],"content":"Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.","nodes":[{"content":"Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.","pos":[0,96]}]}],"pos":[477685,477782],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.Keys\"></xref> values. The default is <xref href=\"System.Windows.Forms.Keys.None\"></xref>.","nodes":[{"pos":[0,151],"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.Keys\"></xref> values. The default is <xref href=\"System.Windows.Forms.Keys.None\"></xref>.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,83],"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.Keys\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys.None\"&gt;&lt;/xref&gt;</ph>.","pos":[84,151],"source":" The default is <xref href=\"System.Windows.Forms.Keys.None\"></xref>."}]}],"pos":[478660,478812],"yaml":true},{"content":"Gets a value indicating which of the mouse buttons is in a pressed state.","nodes":[{"pos":[0,73],"content":"Gets a value indicating which of the mouse buttons is in a pressed state.","nodes":[{"content":"Gets a value indicating which of the mouse buttons is in a pressed state.","pos":[0,73]}]}],"pos":[479788,479862],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> enumeration values. The default is <xref href=\"System.Windows.Forms.MouseButtons.None\"></xref>.","nodes":[{"pos":[0,179],"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> enumeration values. The default is <xref href=\"System.Windows.Forms.MouseButtons.None\"></xref>.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseButtons\"&gt;&lt;/xref&gt;</ph> enumeration values.","pos":[0,103],"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> enumeration values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseButtons.None\"&gt;&lt;/xref&gt;</ph>.","pos":[104,179],"source":" The default is <xref href=\"System.Windows.Forms.MouseButtons.None\"></xref>."}]}],"pos":[481331,481511],"yaml":true},{"content":"Occurs when the control loses mouse capture.","nodes":[{"pos":[0,44],"content":"Occurs when the control loses mouse capture.","nodes":[{"content":"Occurs when the control loses mouse capture.","pos":[0,44]}]}],"pos":[482526,482571],"yaml":true},{"content":"In rare scenarios, you might need to detect unexpected input. For example, consider the following scenarios.  \n  \n-   During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.  \n  \n-   During a mouse operation, the user switches to another program by pressing ALT+TAB.  \n  \n-   During a mouse operation, another program displays a window or a message box that takes focus away from the current application.  \n  \n Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation. If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event.","nodes":[{"pos":[0,108],"content":"In rare scenarios, you might need to detect unexpected input. For example, consider the following scenarios.","nodes":[{"content":"In rare scenarios, you might need to detect unexpected input. For example, consider the following scenarios.","pos":[0,108],"nodes":[{"content":"In rare scenarios, you might need to detect unexpected input.","pos":[0,61]},{"content":"For example, consider the following scenarios.","pos":[62,108]}]}]},{"pos":[118,214],"content":"During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.","nodes":[{"content":"During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.","pos":[0,96]}]},{"pos":[224,307],"content":"During a mouse operation, the user switches to another program by pressing ALT+TAB.","nodes":[{"content":"During a mouse operation, the user switches to another program by pressing ALT+TAB.","pos":[0,83]}]},{"pos":[317,445],"content":"During a mouse operation, another program displays a window or a message box that takes focus away from the current application.","nodes":[{"content":"During a mouse operation, another program displays a window or a message box that takes focus away from the current application.","pos":[0,128]}]},{"pos":[452,763],"content":"Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation. If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event.","nodes":[{"content":"Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation. If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event.","pos":[0,311],"nodes":[{"content":"Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation.","pos":[0,121]},{"content":"If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event.","pos":[122,311],"source":" If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event."}]}]}],"pos":[482582,483356],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control is clicked by the mouse.","nodes":[{"pos":[0,48],"content":"Occurs when the control is clicked by the mouse.","nodes":[{"content":"Occurs when the control is clicked by the mouse.","pos":[0,48]}]}],"pos":[485787,485836],"yaml":true},{"content":"Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseDown> event.  \n  \n2.  <xref:System.Windows.Forms.Control.Click> event.  \n  \n3.  <xref:System.Windows.Forms.Control.MouseClick> event.  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp> event.  \n  \n For this to occur, the various events cannot be disabled in the control's class.  \n  \n Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second <xref:System.Windows.Forms.Control.MouseClick> event.  \n  \n> [!IMPORTANT]\n>  <xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control. They are often raised by other actions, such as pressing the ENTER key when the control has focus.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,125],"content":"Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:","nodes":[{"content":"Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:","pos":[0,125]}]},{"pos":[135,187],"content":"<xref:System.Windows.Forms.Control.MouseDown> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.","pos":[0,52],"source":"<xref:System.Windows.Forms.Control.MouseDown> event."}]},{"pos":[197,245],"content":"<xref:System.Windows.Forms.Control.Click> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.","pos":[0,48],"source":"<xref:System.Windows.Forms.Control.Click> event."}]},{"pos":[255,308],"content":"<xref:System.Windows.Forms.Control.MouseClick> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.","pos":[0,53],"source":"<xref:System.Windows.Forms.Control.MouseClick> event."}]},{"pos":[318,368],"content":"<xref:System.Windows.Forms.Control.MouseUp> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.","pos":[0,50],"source":"<xref:System.Windows.Forms.Control.MouseUp> event."}]},{"pos":[375,455],"content":"For this to occur, the various events cannot be disabled in the control's class.","nodes":[{"content":"For this to occur, the various events cannot be disabled in the control's class.","pos":[0,80]}]},{"pos":[462,731],"content":"Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second <xref:System.Windows.Forms.Control.MouseClick> event.","nodes":[{"content":"Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event instead of the second <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.","pos":[0,269],"source":"Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second <xref:System.Windows.Forms.Control.MouseClick> event."}]},{"pos":[739,950],"content":"[!IMPORTANT]\n <xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control. They are often raised by other actions, such as pressing the ENTER key when the control has focus.","leadings":["","> "],"nodes":[{"content":" <xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control. They are often raised by other actions, such as pressing the ENTER key when the control has focus.","pos":[13,209],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> events are logically higher-level events of a control.","pos":[1,97],"source":" <xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control."},{"content":"They are often raised by other actions, such as pressing the ENTER key when the control has focus.","pos":[98,196]}]}]},{"pos":[957,1107],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[485847,486974],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control is double clicked by the mouse.","nodes":[{"pos":[0,55],"content":"Occurs when the control is double clicked by the mouse.","nodes":[{"content":"Occurs when the control is double clicked by the mouse.","pos":[0,55]}]}],"pos":[489384,489440],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control. The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.  \n  \n The following series of events is raised by the control when such a user action takes place:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseDown> event.  \n  \n2.  <xref:System.Windows.Forms.Control.Click> event.  \n  \n3.  <xref:System.Windows.Forms.Control.MouseClick> event.  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp> event.  \n  \n5.  <xref:System.Windows.Forms.Control.MouseDown> event.  \n  \n6.  <xref:System.Windows.Forms.Control.DoubleClick> event.  \n  \n7.  <xref:System.Windows.Forms.Control.MouseDoubleClick> event.  \n  \n8.  <xref:System.Windows.Forms.Control.MouseUp> event.  \n  \n For this to occur, the various events cannot be disabled in the control's class.  \n  \n> [!IMPORTANT]\n>  <xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control. They may be raised by other user actions, such as shortcut key combinations.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,310],"content":"The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control. The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control. The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.","pos":[0,310],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control.","pos":[0,171],"source":"The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control."},{"content":"The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.","pos":[172,310]}]}]},{"pos":[317,409],"content":"The following series of events is raised by the control when such a user action takes place:","nodes":[{"content":"The following series of events is raised by the control when such a user action takes place:","pos":[0,92]}]},{"pos":[419,471],"content":"<xref:System.Windows.Forms.Control.MouseDown> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.","pos":[0,52],"source":"<xref:System.Windows.Forms.Control.MouseDown> event."}]},{"pos":[481,529],"content":"<xref:System.Windows.Forms.Control.Click> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.","pos":[0,48],"source":"<xref:System.Windows.Forms.Control.Click> event."}]},{"pos":[539,592],"content":"<xref:System.Windows.Forms.Control.MouseClick> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.","pos":[0,53],"source":"<xref:System.Windows.Forms.Control.MouseClick> event."}]},{"pos":[602,652],"content":"<xref:System.Windows.Forms.Control.MouseUp> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.","pos":[0,50],"source":"<xref:System.Windows.Forms.Control.MouseUp> event."}]},{"pos":[662,714],"content":"<xref:System.Windows.Forms.Control.MouseDown> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.","pos":[0,52],"source":"<xref:System.Windows.Forms.Control.MouseDown> event."}]},{"pos":[724,778],"content":"<xref:System.Windows.Forms.Control.DoubleClick> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.","pos":[0,54],"source":"<xref:System.Windows.Forms.Control.DoubleClick> event."}]},{"pos":[788,847],"content":"<xref:System.Windows.Forms.Control.MouseDoubleClick> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.","pos":[0,59],"source":"<xref:System.Windows.Forms.Control.MouseDoubleClick> event."}]},{"pos":[857,907],"content":"<xref:System.Windows.Forms.Control.MouseUp> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.","pos":[0,50],"source":"<xref:System.Windows.Forms.Control.MouseUp> event."}]},{"pos":[914,994],"content":"For this to occur, the various events cannot be disabled in the control's class.","nodes":[{"content":"For this to occur, the various events cannot be disabled in the control's class.","pos":[0,80]}]},{"pos":[1002,1197],"content":"[!IMPORTANT]\n <xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control. They may be raised by other user actions, such as shortcut key combinations.","leadings":["","> "],"nodes":[{"content":" <xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control. They may be raised by other user actions, such as shortcut key combinations.","pos":[13,193],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are logically higher-level events of a control.","pos":[1,103],"source":" <xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control."},{"content":"They may be raised by other user actions, such as shortcut key combinations.","pos":[104,180]}]}]},{"pos":[1204,1354],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[489451,490833],"yaml":true,"extradata":"MT"},{"content":"Occurs when the mouse pointer is over the control and a mouse button is pressed.","nodes":[{"pos":[0,80],"content":"Occurs when the mouse pointer is over the control and a mouse button is pressed.","nodes":[{"content":"Occurs when the mouse pointer is over the control and a mouse button is pressed.","pos":[0,80]}]}],"pos":[493219,493300],"yaml":true},{"content":"Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n> [!NOTE]\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,42],"content":"Mouse events occur in the following order:","nodes":[{"content":"Mouse events occur in the following order:","pos":[0,42]}]},{"pos":[52,98],"content":"<xref:System.Windows.Forms.Control.MouseEnter>","nodes":[]},{"pos":[108,153],"content":"<xref:System.Windows.Forms.Control.MouseMove>","nodes":[]},{"pos":[163,306],"content":"<xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>","nodes":[]},{"pos":[316,359],"content":"<xref:System.Windows.Forms.Control.MouseUp>","nodes":[]},{"pos":[369,415],"content":"<xref:System.Windows.Forms.Control.MouseLeave>","nodes":[]},{"pos":[423,1474],"content":"[!NOTE]\n The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","leadings":["","> "],"nodes":[{"content":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","pos":[8,1049],"nodes":[{"content":"The following events are not raised for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName&gt;</ph> collection: <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id=\"ph11\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.","pos":[1,627],"source":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>."},{"content":"If there is at least one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.","pos":[628,895],"source":" If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event."},{"content":"However, if the user interaction is within the client area of the tab page, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.","pos":[896,1041],"source":" However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event."}]}]},{"pos":[1481,1631],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[493311,494960],"yaml":true,"extradata":"MT"},{"content":"Occurs when the mouse pointer enters the control.","nodes":[{"pos":[0,49],"content":"Occurs when the mouse pointer enters the control.","nodes":[{"content":"Occurs when the mouse pointer enters the control.","pos":[0,49]}]}],"pos":[497416,497466],"yaml":true},{"content":"Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n> [!NOTE]\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,42],"content":"Mouse events occur in the following order:","nodes":[{"content":"Mouse events occur in the following order:","pos":[0,42]}]},{"pos":[52,98],"content":"<xref:System.Windows.Forms.Control.MouseEnter>","nodes":[]},{"pos":[108,153],"content":"<xref:System.Windows.Forms.Control.MouseMove>","nodes":[]},{"pos":[163,306],"content":"<xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>","nodes":[]},{"pos":[316,359],"content":"<xref:System.Windows.Forms.Control.MouseUp>","nodes":[]},{"pos":[369,415],"content":"<xref:System.Windows.Forms.Control.MouseLeave>","nodes":[]},{"pos":[423,1474],"content":"[!NOTE]\n The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","leadings":["","> "],"nodes":[{"content":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","pos":[8,1049],"nodes":[{"content":"The following events are not raised for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName&gt;</ph> collection: <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id=\"ph11\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.","pos":[1,627],"source":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>."},{"content":"If there is at least one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.","pos":[628,895],"source":" If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event."},{"content":"However, if the user interaction is within the client area of the tab page, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.","pos":[896,1041],"source":" However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event."}]}]},{"pos":[1481,1631],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[497477,499126],"yaml":true,"extradata":"MT"},{"content":"Occurs when the mouse pointer rests on the control.","nodes":[{"pos":[0,51],"content":"Occurs when the mouse pointer rests on the control.","nodes":[{"content":"Occurs when the mouse pointer rests on the control.","pos":[0,51]}]}],"pos":[501538,501590],"yaml":true},{"content":"A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the \"hover rectangle\"). The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.  \n  \n The <xref:System.Windows.Forms.Control.MouseHover> event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties.  \n  \n Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n> [!NOTE]\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,348],"content":"A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the \"hover rectangle\"). The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.","nodes":[{"content":"A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the \"hover rectangle\"). The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.","pos":[0,348],"nodes":[{"content":"A typical use of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the \"hover rectangle\").","pos":[0,191],"source":"A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the \"hover rectangle\")."},{"content":"The pause required for this event to be raised is specified in milliseconds by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> property.","pos":[192,348],"source":" The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property."}]}]},{"pos":[355,602],"content":"The <xref:System.Windows.Forms.Control.MouseHover> event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> event is defined and detected in connection with the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> properties.","pos":[0,247],"source":"The <xref:System.Windows.Forms.Control.MouseHover> event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties."}]},{"pos":[609,651],"content":"Mouse events occur in the following order:","nodes":[{"content":"Mouse events occur in the following order:","pos":[0,42]}]},{"pos":[661,707],"content":"<xref:System.Windows.Forms.Control.MouseEnter>","nodes":[]},{"pos":[717,762],"content":"<xref:System.Windows.Forms.Control.MouseMove>","nodes":[]},{"pos":[772,915],"content":"<xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>","nodes":[]},{"pos":[925,968],"content":"<xref:System.Windows.Forms.Control.MouseUp>","nodes":[]},{"pos":[978,1024],"content":"<xref:System.Windows.Forms.Control.MouseLeave>","nodes":[]},{"pos":[1032,2083],"content":"[!NOTE]\n The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","leadings":["","> "],"nodes":[{"content":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","pos":[8,1049],"nodes":[{"content":"The following events are not raised for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName&gt;</ph> collection: <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id=\"ph11\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.","pos":[1,627],"source":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>."},{"content":"If there is at least one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.","pos":[628,895],"source":" If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event."},{"content":"However, if the user interaction is within the client area of the tab page, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.","pos":[896,1041],"source":" However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event."}]}]},{"pos":[2090,2240],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[501601,503865],"yaml":true,"extradata":"MT"},{"content":"Occurs when the mouse pointer leaves the control.","nodes":[{"pos":[0,49],"content":"Occurs when the mouse pointer leaves the control.","nodes":[{"content":"Occurs when the mouse pointer leaves the control.","pos":[0,49]}]}],"pos":[506277,506327],"yaml":true},{"content":"Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n> [!NOTE]\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,42],"content":"Mouse events occur in the following order:","nodes":[{"content":"Mouse events occur in the following order:","pos":[0,42]}]},{"pos":[52,98],"content":"<xref:System.Windows.Forms.Control.MouseEnter>","nodes":[]},{"pos":[108,153],"content":"<xref:System.Windows.Forms.Control.MouseMove>","nodes":[]},{"pos":[163,306],"content":"<xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>","nodes":[]},{"pos":[316,359],"content":"<xref:System.Windows.Forms.Control.MouseUp>","nodes":[]},{"pos":[369,415],"content":"<xref:System.Windows.Forms.Control.MouseLeave>","nodes":[]},{"pos":[423,1474],"content":"[!NOTE]\n The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","leadings":["","> "],"nodes":[{"content":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","pos":[8,1049],"nodes":[{"content":"The following events are not raised for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName&gt;</ph> collection: <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id=\"ph11\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.","pos":[1,627],"source":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>."},{"content":"If there is at least one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.","pos":[628,895],"source":" If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event."},{"content":"However, if the user interaction is within the client area of the tab page, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.","pos":[896,1041],"source":" However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event."}]}]},{"pos":[1481,1631],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[506338,507987],"yaml":true,"extradata":"MT"},{"content":"Occurs when the mouse pointer is moved over the control.","nodes":[{"pos":[0,56],"content":"Occurs when the mouse pointer is moved over the control.","nodes":[{"content":"Occurs when the mouse pointer is moved over the control.","pos":[0,56]}]}],"pos":[510393,510450],"yaml":true},{"content":"Typical uses of <xref:System.Windows.Forms.Control.MouseMove> are to change the control's color or to paint a raised rectangle around the control.  \n  \n Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n> [!NOTE]\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,146],"content":"Typical uses of <xref:System.Windows.Forms.Control.MouseMove> are to change the control's color or to paint a raised rectangle around the control.","nodes":[{"content":"Typical uses of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> are to change the control's color or to paint a raised rectangle around the control.","pos":[0,146],"source":"Typical uses of <xref:System.Windows.Forms.Control.MouseMove> are to change the control's color or to paint a raised rectangle around the control."}]},{"pos":[153,195],"content":"Mouse events occur in the following order:","nodes":[{"content":"Mouse events occur in the following order:","pos":[0,42]}]},{"pos":[205,251],"content":"<xref:System.Windows.Forms.Control.MouseEnter>","nodes":[]},{"pos":[261,306],"content":"<xref:System.Windows.Forms.Control.MouseMove>","nodes":[]},{"pos":[316,459],"content":"<xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>","nodes":[]},{"pos":[469,512],"content":"<xref:System.Windows.Forms.Control.MouseUp>","nodes":[]},{"pos":[522,568],"content":"<xref:System.Windows.Forms.Control.MouseLeave>","nodes":[]},{"pos":[576,1627],"content":"[!NOTE]\n The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","leadings":["","> "],"nodes":[{"content":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","pos":[8,1049],"nodes":[{"content":"The following events are not raised for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName&gt;</ph> collection: <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id=\"ph11\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.","pos":[1,627],"source":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>."},{"content":"If there is at least one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.","pos":[628,895],"source":" If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event."},{"content":"However, if the user interaction is within the client area of the tab page, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.","pos":[896,1041],"source":" However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event."}]}]},{"pos":[1634,1784],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[510461,512265],"yaml":true,"extradata":"MT"},{"content":"Gets the position of the mouse cursor in screen coordinates.","nodes":[{"pos":[0,60],"content":"Gets the position of the mouse cursor in screen coordinates.","nodes":[{"content":"Gets the position of the mouse cursor in screen coordinates.","pos":[0,60]}]}],"pos":[514742,514803],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced. The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control. The coordinates of the upper-left corner of the screen are 0,0.  \n  \n The <xref:System.Windows.Forms.Control.MousePosition%2A> property is identical to the <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,414],"content":"The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced. The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control. The coordinates of the upper-left corner of the screen are 0,0.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced. The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control. The coordinates of the upper-left corner of the screen are 0,0.","pos":[0,414],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> property returns a <ph id=\"ph2\">&lt;xref:System.Drawing.Point&gt;</ph> that represents the mouse cursor position at the time the property was referenced.","pos":[0,186],"source":"The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced."},{"content":"The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control.","pos":[187,350]},{"content":"The coordinates of the upper-left corner of the screen are 0,0.","pos":[351,414]}]}]},{"pos":[421,588],"content":"The <xref:System.Windows.Forms.Control.MousePosition%2A> property is identical to the <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> property is identical to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,167],"source":"The <xref:System.Windows.Forms.Control.MousePosition%2A> property is identical to the <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName> property."}]}],"pos":[514814,515407],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.","source":"A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen."}],"pos":[516594,516737],"yaml":true},{"content":"Occurs when the mouse pointer is over the control and a mouse button is released.","nodes":[{"pos":[0,81],"content":"Occurs when the mouse pointer is over the control and a mouse button is released.","nodes":[{"content":"Occurs when the mouse pointer is over the control and a mouse button is released.","pos":[0,81]}]}],"pos":[517681,517763],"yaml":true},{"content":"Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n> [!NOTE]\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,42],"content":"Mouse events occur in the following order:","nodes":[{"content":"Mouse events occur in the following order:","pos":[0,42]}]},{"pos":[52,98],"content":"<xref:System.Windows.Forms.Control.MouseEnter>","nodes":[]},{"pos":[108,153],"content":"<xref:System.Windows.Forms.Control.MouseMove>","nodes":[]},{"pos":[163,306],"content":"<xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>","nodes":[]},{"pos":[316,359],"content":"<xref:System.Windows.Forms.Control.MouseUp>","nodes":[]},{"pos":[369,415],"content":"<xref:System.Windows.Forms.Control.MouseLeave>","nodes":[]},{"pos":[423,1474],"content":"[!NOTE]\n The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","leadings":["","> "],"nodes":[{"content":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.","pos":[8,1049],"nodes":[{"content":"The following events are not raised for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName&gt;</ph> collection: <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id=\"ph11\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.","pos":[1,627],"source":" The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>."},{"content":"If there is at least one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.","pos":[628,895],"source":" If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event."},{"content":"However, if the user interaction is within the client area of the tab page, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.","pos":[896,1041],"source":" However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event."}]}]},{"pos":[1481,1631],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[517774,519423],"yaml":true,"extradata":"MT"},{"content":"Occurs when the mouse wheel moves while the control has focus.","nodes":[{"pos":[0,62],"content":"Occurs when the mouse wheel moves while the control has focus.","nodes":[{"content":"Occurs when the mouse wheel moves while the control has focus.","pos":[0,62]}]}],"pos":[521855,521918],"yaml":true},{"content":"When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel. The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=fullName> property value indicates the amount the mouse wheel has been moved. The UI should scroll when the accumulated delta is plus or minus 120. The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> property for every delta value reached. You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> lines scrolled per 120 delta units of wheel movement.  \n  \n For more information about handling mouse wheel messages, see the[WM_MOUSEWHEEL](http://msdn.microsoft.com/library/windows/desktop/ms645617\\(v=vs.85\\).aspx)topic.  \n  \n Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,854],"content":"When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel. The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=fullName> property value indicates the amount the mouse wheel has been moved. The UI should scroll when the accumulated delta is plus or minus 120. The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> property for every delta value reached. You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> lines scrolled per 120 delta units of wheel movement.","nodes":[{"content":"When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel. The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=fullName> property value indicates the amount the mouse wheel has been moved. The UI should scroll when the accumulated delta is plus or minus 120. The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> property for every delta value reached. You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> lines scrolled per 120 delta units of wheel movement.","pos":[0,854],"nodes":[{"content":"When handling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event it is important to follow the user interface (UI) standards associated with the mouse wheel.","pos":[0,163],"source":"When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=fullName&gt;</ph> property value indicates the amount the mouse wheel has been moved.","pos":[164,312],"source":" The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=fullName> property value indicates the amount the mouse wheel has been moved."},{"content":"The UI should scroll when the accumulated delta is plus or minus 120.","pos":[313,382]},{"content":"The UI should scroll the number of logical lines returned by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName&gt;</ph> property for every delta value reached.","pos":[383,583],"source":" The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> property for every delta value reached."},{"content":"You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <ph id=\"ph1\">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName&gt;</ph> lines scrolled per 120 delta units of wheel movement.","pos":[584,854],"source":" You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> lines scrolled per 120 delta units of wheel movement."}]}]},{"pos":[861,1023],"content":"For more information about handling mouse wheel messages, see the<bpt id=\"p1\">[</bpt>WM_MOUSEWHEEL<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms645617\\(v=vs.85\\).aspx)</ept>topic.","source":"For more information about handling mouse wheel messages, see the[WM_MOUSEWHEEL](http://msdn.microsoft.com/library/windows/desktop/ms645617\\(v=vs.85\\).aspx)topic."},{"pos":[1030,1072],"content":"Mouse events occur in the following order:","nodes":[{"content":"Mouse events occur in the following order:","pos":[0,42]}]},{"pos":[1082,1128],"content":"<xref:System.Windows.Forms.Control.MouseEnter>","nodes":[]},{"pos":[1138,1183],"content":"<xref:System.Windows.Forms.Control.MouseMove>","nodes":[]},{"pos":[1193,1336],"content":"<xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>","nodes":[]},{"pos":[1346,1389],"content":"<xref:System.Windows.Forms.Control.MouseUp>","nodes":[]},{"pos":[1399,1445],"content":"<xref:System.Windows.Forms.Control.MouseLeave>","nodes":[]},{"pos":[1452,1602],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[521929,523552],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control is moved.","nodes":[{"pos":[0,33],"content":"Occurs when the control is moved.","nodes":[{"content":"Occurs when the control is moved.","pos":[0,33]}]}],"pos":[526073,526107],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[526118,526269],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the control.","nodes":[{"pos":[0,37],"content":"Gets or sets the name of the control.","nodes":[{"content":"Gets or sets the name of the control.","pos":[0,37]}]}],"pos":[527780,527818],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Name%2A> property can be used at run time to evaluate the object by name rather than type and programmatic name. Because the <xref:System.Windows.Forms.Control.Name%2A> property returns a <xref:System.String> type, it can be evaluated in case-style logic statements (`Select` statement in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `switch` statement in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] and [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).","nodes":[{"pos":[0,488],"content":"The <xref:System.Windows.Forms.Control.Name%2A> property can be used at run time to evaluate the object by name rather than type and programmatic name. Because the <xref:System.Windows.Forms.Control.Name%2A> property returns a <xref:System.String> type, it can be evaluated in case-style logic statements (`Select` statement in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `switch` statement in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] and [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> property can be used at run time to evaluate the object by name rather than type and programmatic name.","pos":[0,151],"source":"The <xref:System.Windows.Forms.Control.Name%2A> property can be used at run time to evaluate the object by name rather than type and programmatic name."},{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> property returns a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> type, it can be evaluated in case-style logic statements (<ph id=\"ph3\">`Select`</ph> statement in <ph id=\"ph4\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id=\"ph5\">`switch`</ph> statement in <ph id=\"ph6\">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> and <ph id=\"ph7\">[!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]</ph>).","pos":[152,488],"source":" Because the <xref:System.Windows.Forms.Control.Name%2A> property returns a <xref:System.String> type, it can be evaluated in case-style logic statements (`Select` statement in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `switch` statement in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] and [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)])."}]}],"pos":[527829,528318],"yaml":true,"extradata":"MT"},{"content":"The name of the control. The default is an empty string (\"\").","nodes":[{"pos":[0,61],"content":"The name of the control. The default is an empty string (\"\").","nodes":[{"content":"The name of the control. The default is an empty string (\"\").","pos":[0,61],"nodes":[{"content":"The name of the control.","pos":[0,24]},{"content":"The default is an empty string (\"\").","pos":[25,61]}]}]}],"pos":[529083,529145],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Invalidated\"></xref> event with a specified region of the control to invalidate.","nodes":[{"pos":[0,132],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Invalidated\"&gt;&lt;/xref&gt;</ph> event with a specified region of the control to invalidate.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Invalidated\"></xref> event with a specified region of the control to invalidate."}],"pos":[530311,530444],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> representing the area to invalidate.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> representing the area to invalidate.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> representing the area to invalidate."}],"pos":[530649,530734],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.AutoSizeChanged\"></xref> event.","nodes":[{"pos":[0,83],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.AutoSizeChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.AutoSizeChanged\"></xref> event."}],"pos":[531846,531930],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,418],"content":"The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,145],"source":"The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[146,220]}]}]}],"pos":[531941,532364],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[532519,532590],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BackColorChanged\"></xref> event.","nodes":[{"pos":[0,84],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackColorChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BackColorChanged\"></xref> event."}],"pos":[533692,533777],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,419],"content":"The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,221],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,146],"source":"The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[147,221]}]}]}],"pos":[533788,534212],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[535979,536050],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event.","nodes":[{"pos":[0,90],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event."}],"pos":[537206,537297],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,425],"content":"The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,227],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,152],"source":"The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[153,227]}]}]}],"pos":[537308,537738],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[539511,539582],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\"></xref> event.","nodes":[{"pos":[0,96],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\"></xref> event."}],"pos":[540780,540877],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,431],"content":"The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,233],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,158],"source":"The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[159,233]}]}]}],"pos":[540888,541324],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[541492,541563],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BindingContextChanged\"></xref> event.","nodes":[{"pos":[0,89],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BindingContextChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BindingContextChanged\"></xref> event."}],"pos":[542725,542815],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,424],"content":"The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,226],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnBindingContextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,151],"source":"The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[152,226]}]}]}],"pos":[542826,543255],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[543416,543487],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.CausesValidationChanged\"></xref> event.","nodes":[{"pos":[0,91],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.CausesValidationChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.CausesValidationChanged\"></xref> event."}],"pos":[544654,544746],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,426],"content":"The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,228],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,153],"source":"The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[154,228]}]}]}],"pos":[544757,545188],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[546962,547033],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ChangeUICues\"></xref> event.","nodes":[{"pos":[0,80],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ChangeUICues\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ChangeUICues\"></xref> event."}],"pos":[548214,548295],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,415],"content":"The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,217],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnChangeUICues%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,142],"source":"The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[143,217]}]}]}],"pos":[548306,548726],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.UICuesEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.UICuesEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.UICuesEventArgs\"></xref> that contains the event data."}],"pos":[548925,549015],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event.","nodes":[{"pos":[0,73],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Click\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event."}],"pos":[550043,550117],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,408],"content":"The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,210],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,135],"source":"The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[136,210]}]}]}],"pos":[550128,550541],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[551923,551994],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ClientSizeChanged\"></xref> event.","nodes":[{"pos":[0,85],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ClientSizeChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ClientSizeChanged\"></xref> event."}],"pos":[553109,553195],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,420],"content":"The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,222],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnClientSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,147],"source":"The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[148,222]}]}]}],"pos":[553206,553631],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[553788,553859],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ContextMenuChanged\"></xref> event.","nodes":[{"pos":[0,86],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ContextMenuChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ContextMenuChanged\"></xref> event."}],"pos":[554992,555079],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,421],"content":"The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,223],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnContextMenuChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,148],"source":"The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[149,223]}]}]}],"pos":[555090,555516],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[557285,557356],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ContextMenuStripChanged\"></xref> event.","nodes":[{"pos":[0,91],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ContextMenuStripChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ContextMenuStripChanged\"></xref> event."}],"pos":[558520,558612],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,426],"content":"The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,228],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,153],"source":"The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[154,228]}]}]}],"pos":[558623,559054],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[559217,559288],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ControlAdded\"></xref> event.","nodes":[{"pos":[0,80],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ControlAdded\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ControlAdded\"></xref> event."}],"pos":[560475,560556],"yaml":true},{"content":"Called when a child control is added to the control.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,52],"content":"Called when a child control is added to the control.","nodes":[{"content":"Called when a child control is added to the control.","pos":[0,52]}]},{"pos":[59,250],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[257,474],"content":"The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,217],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnControlAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,142],"source":"The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[143,217]}]}]}],"pos":[560567,561048],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.ControlEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.ControlEventArgs\"></xref> that contains the event data."}],"pos":[561849,561940],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ControlRemoved\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ControlRemoved\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ControlRemoved\"></xref> event."}],"pos":[563106,563189],"yaml":true},{"content":"Called when a child control is removed from the control.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,56],"content":"Called when a child control is removed from the control.","nodes":[{"content":"Called when a child control is removed from the control.","pos":[0,56]}]},{"pos":[63,254],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[261,480],"content":"The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,219],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnControlRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,144],"source":"The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[145,219]}]}]}],"pos":[563200,563687],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.ControlEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.ControlEventArgs\"></xref> that contains the event data."}],"pos":[564499,564590],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.CreateControl\"></xref> method.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.CreateControl\"&gt;&lt;/xref&gt;</ph> method.","source":"Raises the <xref href=\"System.Windows.Forms.Control.CreateControl\"></xref> method."}],"pos":[565609,565692],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method is called when the control is first created.  \n  \n The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,110],"content":"The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method is called when the control is first created.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> method is called when the control is first created.","pos":[0,110],"source":"The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method is called when the control is first created."}]},{"pos":[117,335],"content":"The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[144,218]}]}]}],"pos":[565703,566043],"yaml":true,"extradata":"MT"},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.CursorChanged\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.CursorChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.CursorChanged\"></xref> event."}],"pos":[567227,567309],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,416],"content":"The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[144,218]}]}]}],"pos":[567320,567741],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[569505,569576],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DockChanged\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DockChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DockChanged\"></xref> event."}],"pos":[570641,570721],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,414],"content":"The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,216],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnDockChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,141],"source":"The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[142,216]}]}]}],"pos":[570732,571151],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[572913,572984],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DoubleClick\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> event."}],"pos":[574069,574149],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,414],"content":"The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,216],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,141],"source":"The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[142,216]}]}]}],"pos":[574160,574579],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[575368,575439],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DpiChangedAfterParent\"></xref> event.","nodes":[{"pos":[0,89],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DpiChangedAfterParent\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DpiChangedAfterParent\"></xref> event."}],"pos":[576584,576674],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,94],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DpiChangedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data."}],"pos":[576891,576986],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DpiChangedBeforeParent\"></xref> event.","nodes":[{"pos":[0,90],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DpiChangedBeforeParent\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DpiChangedBeforeParent\"></xref> event."}],"pos":[577890,577981],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,94],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DpiChangedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data."}],"pos":[578199,578294],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DragDrop\"></xref> event.","nodes":[{"pos":[0,76],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DragDrop\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DragDrop\"></xref> event."}],"pos":[579181,579258],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,411],"content":"The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,213],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnDragDrop%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,138],"source":"The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[139,213]}]}]}],"pos":[579269,579685],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data."}],"pos":[579890,579978],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DragEnter\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DragEnter\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DragEnter\"></xref> event."}],"pos":[581114,581192],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,412],"content":"The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,214],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnDragEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,139],"source":"The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[140,214]}]}]}],"pos":[581203,581620],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data."}],"pos":[581826,581914],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DragLeave\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DragLeave\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DragLeave\"></xref> event."}],"pos":[582985,583063],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,412],"content":"The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,214],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnDragLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,139],"source":"The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[140,214]}]}]}],"pos":[583074,583491],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[583640,583711],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DragOver\"></xref> event.","nodes":[{"pos":[0,76],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DragOver\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DragOver\"></xref> event."}],"pos":[584820,584897],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,411],"content":"The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,213],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnDragOver%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,138],"source":"The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[139,213]}]}]}],"pos":[584908,585324],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data."}],"pos":[585529,585617],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.EnabledChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event."}],"pos":[586717,586800],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,417],"content":"The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,219],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnEnabledChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,144],"source":"The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[145,219]}]}]}],"pos":[586811,587233],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[587387,587458],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Enter\"></xref> event.","nodes":[{"pos":[0,73],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Enter\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Enter\"></xref> event."}],"pos":[588510,588584],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,408],"content":"The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,210],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,135],"source":"The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[136,210]}]}]}],"pos":[588595,589008],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[589704,589775],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.FontChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event."}],"pos":[590832,590912],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,414],"content":"The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,216],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,141],"source":"The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[142,216]}]}]}],"pos":[590923,591342],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[593104,593175],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ForeColorChanged\"></xref> event.","nodes":[{"pos":[0,84],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ForeColorChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ForeColorChanged\"></xref> event."}],"pos":[594290,594375],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,419],"content":"The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,221],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,146],"source":"The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[147,221]}]}]}],"pos":[594386,594810],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[596577,596648],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.GiveFeedback\"></xref> event.","nodes":[{"pos":[0,80],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.GiveFeedback\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.GiveFeedback\"></xref> event."}],"pos":[597858,597939],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,415],"content":"The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,217],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnGiveFeedback%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,142],"source":"The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[143,217]}]}]}],"pos":[597950,598370],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"></xref> that contains the event data."}],"pos":[598595,598691],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.GotFocus\"></xref> event.","nodes":[{"pos":[0,76],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.GotFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.GotFocus\"></xref> event."}],"pos":[599737,599814],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,411],"content":"The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,213],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnGotFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,138],"source":"The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[139,213]}]}]}],"pos":[599825,600241],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[600389,600460],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.HandleCreated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event."}],"pos":[601554,601636],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,416],"content":"The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[144,218]}]}]}],"pos":[601647,602068],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[602221,602292],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event.","nodes":[{"pos":[0,83],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.HandleDestroyed\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event."}],"pos":[603403,603487],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,418],"content":"The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnHandleDestroyed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,145],"source":"The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[146,220]}]}]}],"pos":[603498,603921],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[604076,604147],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.HelpRequested\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.HelpRequested\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.HelpRequested\"></xref> event."}],"pos":[605314,605396],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,416],"content":"The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnHelpRequested%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[144,218]}]}]}],"pos":[605407,605828],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.HelpEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HelpEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.HelpEventArgs\"></xref> that contains the event data."}],"pos":[606034,606122],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ImeModeChanged\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ImeModeChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ImeModeChanged\"></xref> event."}],"pos":[607227,607310],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,417],"content":"The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,219],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnImeModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,144],"source":"The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[145,219]}]}]}],"pos":[607321,607743],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[609508,609579],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Invalidated\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Invalidated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Invalidated\"></xref> event."}],"pos":[610752,610832],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,414],"content":"The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,216],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnInvalidated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,141],"source":"The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[142,216]}]}]}],"pos":[610843,611262],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.InvalidateEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,94],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.InvalidateEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.Windows.Forms.InvalidateEventArgs\"></xref> that contains the event data."}],"pos":[611468,611563],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> event.","nodes":[{"pos":[0,75],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.KeyDown\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> event."}],"pos":[612684,612760],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,410],"content":"The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,212],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,137],"source":"The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[138,212]}]}]}],"pos":[612771,613186],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data."}],"pos":[613883,613970],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.KeyPress\"></xref> event.","nodes":[{"pos":[0,76],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.KeyPress\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.KeyPress\"></xref> event."}],"pos":[615101,615178],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,411],"content":"The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,213],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,138],"source":"The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[139,213]}]}]}],"pos":[615189,615605],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.KeyPressEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.KeyPressEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.KeyPressEventArgs\"></xref> that contains the event data."}],"pos":[616302,616394],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event.","nodes":[{"pos":[0,73],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.KeyUp\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event."}],"pos":[617500,617574],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,408],"content":"The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,210],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,135],"source":"The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[136,210]}]}]}],"pos":[617585,617998],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data."}],"pos":[618708,618795],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Layout\"></xref> event.","nodes":[{"pos":[0,74],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Layout\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Layout\"></xref> event."}],"pos":[619900,619975],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,409],"content":"The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,211],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,136],"source":"The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[137,211]}]}]}],"pos":[619986,620400],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.LayoutEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.LayoutEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.LayoutEventArgs\"></xref> that contains the event data."}],"pos":[620603,620693],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Leave\"></xref> event.","nodes":[{"pos":[0,73],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Leave\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Leave\"></xref> event."}],"pos":[621737,621811],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,408],"content":"The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,210],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,135],"source":"The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[136,210]}]}]}],"pos":[621822,622235],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[622854,622925],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.LocationChanged\"></xref> event.","nodes":[{"pos":[0,83],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.LocationChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.LocationChanged\"></xref> event."}],"pos":[624028,624112],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,418],"content":"The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnLocationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,145],"source":"The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[146,220]}]}]}],"pos":[624123,624546],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[626313,626384],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.LostFocus\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.LostFocus\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.LostFocus\"></xref> event."}],"pos":[627461,627539],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,412],"content":"The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,214],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnLostFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,139],"source":"The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[140,214]}]}]}],"pos":[627550,627967],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[628116,628187],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MarginChanged\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MarginChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MarginChanged\"></xref> event."}],"pos":[629282,629364],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,416],"content":"The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMarginChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[144,218]}]}]}],"pos":[629375,629796],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[629949,630019],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseCaptureChanged\"></xref> event.","nodes":[{"pos":[0,87],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseCaptureChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseCaptureChanged\"></xref> event."}],"pos":[631137,631225],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,422],"content":"The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,149],"source":"The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[150,224]}]}]}],"pos":[631236,631663],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[631822,631893],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseClick\"></xref> event.","nodes":[{"pos":[0,78],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseClick\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseClick\"></xref> event."}],"pos":[633030,633109],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,413],"content":"The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,140],"source":"The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[141,215]}]}]}],"pos":[633120,633538],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,89],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."}],"pos":[633733,633823],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseDoubleClick\"></xref> event.","nodes":[{"pos":[0,84],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseDoubleClick\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseDoubleClick\"></xref> event."}],"pos":[635009,635094],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,419],"content":"The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,221],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,146],"source":"The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[147,221]}]}]}],"pos":[635105,635529],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,89],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."}],"pos":[635730,635820],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseDown\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseDown\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseDown\"></xref> event."}],"pos":[636970,637048],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,412],"content":"The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,214],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,139],"source":"The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[140,214]}]}]}],"pos":[637059,637476],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."}],"pos":[637670,637759],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseEnter\"></xref> event.","nodes":[{"pos":[0,78],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseEnter\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseEnter\"></xref> event."}],"pos":[638836,638915],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,413],"content":"The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,140],"source":"The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[141,215]}]}]}],"pos":[638926,639344],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[639494,639565],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseHover\"></xref> event.","nodes":[{"pos":[0,78],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseHover\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseHover\"></xref> event."}],"pos":[640621,640700],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,413],"content":"The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,140],"source":"The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[141,215]}]}]}],"pos":[640711,641129],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[642182,642253],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseLeave\"></xref> event.","nodes":[{"pos":[0,78],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseLeave\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseLeave\"></xref> event."}],"pos":[643331,643410],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,413],"content":"The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,140],"source":"The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[141,215]}]}]}],"pos":[643421,643839],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[643989,644060],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseMove\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseMove\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseMove\"></xref> event."}],"pos":[645204,645282],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,412],"content":"The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,214],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,139],"source":"The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[140,214]}]}]}],"pos":[645293,645710],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."}],"pos":[646807,646896],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref> event.","nodes":[{"pos":[0,75],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseUp\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref> event."}],"pos":[648027,648103],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,410],"content":"The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,212],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,137],"source":"The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[138,212]}]}]}],"pos":[648114,648529],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."}],"pos":[648721,648810],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseWheel\"></xref> event.","nodes":[{"pos":[0,78],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseWheel\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseWheel\"></xref> event."}],"pos":[649957,650036],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,413],"content":"The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,140],"source":"The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[141,215]}]}]}],"pos":[650047,650465],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."}],"pos":[650660,650749],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Move\"></xref> event.","nodes":[{"pos":[0,72],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Move\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Move\"></xref> event."}],"pos":[651791,651864],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,407],"content":"The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,209],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,134],"source":"The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[135,209]}]}]}],"pos":[651875,652287],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[652948,653019],"yaml":true},{"content":"Notifies the control of Windows messages.","nodes":[{"pos":[0,41],"content":"Notifies the control of Windows messages.","nodes":[{"content":"Notifies the control of Windows messages.","pos":[0,41]}]}],"pos":[654139,654181],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> method is called if the control's `EnableNotifyMessage` style bit is set in <xref:System.Windows.Forms.ControlStyles>. The `EnableNotifyMessage` style in <xref:System.Windows.Forms.ControlStyles> enables the control to be notified when the <xref:System.Windows.Forms.Control.WndProc%2A> method receives a Windows message. With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.","nodes":[{"pos":[0,497],"content":"The <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> method is called if the control's `EnableNotifyMessage` style bit is set in <xref:System.Windows.Forms.ControlStyles>. The `EnableNotifyMessage` style in <xref:System.Windows.Forms.ControlStyles> enables the control to be notified when the <xref:System.Windows.Forms.Control.WndProc%2A> method receives a Windows message. With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnNotifyMessage%2A&gt;</ph> method is called if the control's <ph id=\"ph2\">`EnableNotifyMessage`</ph> style bit is set in <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>.","pos":[0,177],"source":"The <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> method is called if the control's `EnableNotifyMessage` style bit is set in <xref:System.Windows.Forms.ControlStyles>."},{"content":"The <ph id=\"ph1\">`EnableNotifyMessage`</ph> style in <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> enables the control to be notified when the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method receives a Windows message.","pos":[178,380],"source":" The `EnableNotifyMessage` style in <xref:System.Windows.Forms.ControlStyles> enables the control to be notified when the <xref:System.Windows.Forms.Control.WndProc%2A> method receives a Windows message."},{"content":"With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.","pos":[381,497]}]}],"pos":[654192,654690],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref> that represents the Windows message.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph> that represents the Windows message.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref> that represents the Windows message."}],"pos":[654874,654963],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.PaddingChanged\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.PaddingChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.PaddingChanged\"></xref> event."}],"pos":[656046,656129],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,417],"content":"The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,219],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnPaddingChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,144],"source":"The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[145,219]}]}]}],"pos":[656140,656562],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[656716,656786],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event.","nodes":[{"pos":[0,73],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Paint\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event."}],"pos":[657893,657967],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,409],"content":"The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,211],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,136],"source":"The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[137,211]}]}]}],"pos":[657978,658392],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PaintEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data."}],"pos":[660402,660491],"yaml":true},{"content":"Paints the background of the control.","nodes":[{"pos":[0,37],"content":"Paints the background of the control.","nodes":[{"content":"Paints the background of the control.","pos":[0,37]}]}],"pos":[661666,661704],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.OnPaintBackground%2A> method enables derived classes to handle Windows background erase requests.","nodes":[{"pos":[0,136],"content":"The <xref:System.Windows.Forms.Control.OnPaintBackground%2A> method enables derived classes to handle Windows background erase requests.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> method enables derived classes to handle Windows background erase requests.","pos":[0,136],"source":"The <xref:System.Windows.Forms.Control.OnPaintBackground%2A> method enables derived classes to handle Windows background erase requests."}]}],"pos":[661715,661852],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains information about the control to paint.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PaintEventArgs\"&gt;&lt;/xref&gt;</ph> that contains information about the control to paint.","source":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains information about the control to paint."}],"pos":[662062,662175],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BackColorChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property value of the control's container changes.","nodes":[{"pos":[0,203],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackColorChanged\"&gt;&lt;/xref&gt;</ph> event when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.BackColor\"&gt;&lt;/xref&gt;</ph> property value of the control's container changes.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BackColorChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property value of the control's container changes."}],"pos":[663330,663534],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,426],"content":"The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,228],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,153],"source":"The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[154,228]}]}]}],"pos":[663545,663976],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[665749,665820],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BackgroundImage\"></xref> property value of the control's container changes.","nodes":[{"pos":[0,215],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"&gt;&lt;/xref&gt;</ph> event when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.BackgroundImage\"&gt;&lt;/xref&gt;</ph> property value of the control's container changes.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BackgroundImage\"></xref> property value of the control's container changes."}],"pos":[667018,667234],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,432],"content":"The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,234],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,159],"source":"The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[160,234]}]}]}],"pos":[667245,667682],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[669461,669532],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BindingContextChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BindingContext\"></xref> property value of the control's container changes.","nodes":[{"pos":[0,213],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BindingContextChanged\"&gt;&lt;/xref&gt;</ph> event when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.BindingContext\"&gt;&lt;/xref&gt;</ph> property value of the control's container changes.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BindingContextChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BindingContext\"></xref> property value of the control's container changes."}],"pos":[670730,670944],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,431],"content":"The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,233],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,158],"source":"The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[159,233]}]}]}],"pos":[670955,671391],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[673169,673240],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ParentChanged\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ParentChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ParentChanged\"></xref> event."}],"pos":[674353,674435],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,417],"content":"The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,219],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,144],"source":"The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[145,219]}]}]}],"pos":[674446,674868],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[676632,676703],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.CursorChanged\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.CursorChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.CursorChanged\"></xref> event."}],"pos":[677816,677898],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,422],"content":"The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,149],"source":"The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[150,224]}]}]}],"pos":[677909,678336],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[678495,678566],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Enabled\"></xref> property value of the control's container changes.","nodes":[{"pos":[0,199],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.EnabledChanged\"&gt;&lt;/xref&gt;</ph> event when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Enabled\"&gt;&lt;/xref&gt;</ph> property value of the control's container changes.","source":"Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Enabled\"></xref> property value of the control's container changes."}],"pos":[679713,679913],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,424],"content":"The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,226],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,151],"source":"The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[152,226]}]}]}],"pos":[679924,680353],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[682124,682195],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property value of the control's container changes.","nodes":[{"pos":[0,193],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.FontChanged\"&gt;&lt;/xref&gt;</ph> event when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Font\"&gt;&lt;/xref&gt;</ph> property value of the control's container changes.","source":"Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property value of the control's container changes."}],"pos":[683303,683497],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,421],"content":"The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,223],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentFontChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,148],"source":"The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[149,223]}]}]}],"pos":[683508,683934],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[685702,685773],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.ForeColorChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property value of the control's container changes.","nodes":[{"pos":[0,203],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ForeColorChanged\"&gt;&lt;/xref&gt;</ph> event when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.ForeColor\"&gt;&lt;/xref&gt;</ph> property value of the control's container changes.","source":"Raises the <xref href=\"System.Windows.Forms.Control.ForeColorChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property value of the control's container changes."}],"pos":[686930,687134],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,426],"content":"The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,228],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,153],"source":"The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[154,228]}]}]}],"pos":[687145,687576],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[689349,689420],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property value of the control's container changes.","nodes":[{"pos":[0,207],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"&gt;&lt;/xref&gt;</ph> event when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.RightToLeft\"&gt;&lt;/xref&gt;</ph> property value of the control's container changes.","source":"Raises the <xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property value of the control's container changes."}],"pos":[690594,690802],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,428],"content":"The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,230],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,155],"source":"The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[156,230]}]}]}],"pos":[690813,691246],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[693021,693092],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Visible\"></xref> property value of the control's container changes.","nodes":[{"pos":[0,199],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.VisibleChanged\"&gt;&lt;/xref&gt;</ph> event when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Visible\"&gt;&lt;/xref&gt;</ph> property value of the control's container changes.","source":"Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Visible\"></xref> property value of the control's container changes."}],"pos":[694244,694444],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,424],"content":"The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,226],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,151],"source":"The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[152,226]}]}]}],"pos":[694455,694884],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[696655,696726],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.PreviewKeyDown\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.PreviewKeyDown\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.PreviewKeyDown\"></xref> event."}],"pos":[697964,698047],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,417],"content":"The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,219],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,144],"source":"The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[145,219]}]}]}],"pos":[698058,698480],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.PreviewKeyDownEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PreviewKeyDownEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.PreviewKeyDownEventArgs\"></xref> that contains the event data."}],"pos":[698697,698795],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event.","nodes":[{"pos":[0,73],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Paint\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event."}],"pos":[699919,699993],"yaml":true},{"content":"If the `UserPaint` bit of the <xref:System.Windows.Forms.ControlStyles> is set, you can override <xref:System.Windows.Forms.Control.OnPrint%2A> to do layered painting. See <xref:System.Windows.Forms.Control.SetStyle%2A> for more information.","nodes":[{"pos":[0,241],"content":"If the `UserPaint` bit of the <xref:System.Windows.Forms.ControlStyles> is set, you can override <xref:System.Windows.Forms.Control.OnPrint%2A> to do layered painting. See <xref:System.Windows.Forms.Control.SetStyle%2A> for more information.","nodes":[{"content":"If the <ph id=\"ph1\">`UserPaint`</ph> bit of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> is set, you can override <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> to do layered painting.","pos":[0,167],"source":"If the `UserPaint` bit of the <xref:System.Windows.Forms.ControlStyles> is set, you can override <xref:System.Windows.Forms.Control.OnPrint%2A> to do layered painting."},{"content":"See <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> for more information.","pos":[168,241],"source":" See <xref:System.Windows.Forms.Control.SetStyle%2A> for more information."}]}],"pos":[700004,700246],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PaintEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data."}],"pos":[700436,700525],"yaml":true},{"content":"The <code>e</code> parameter is `null`.","nodes":[{"pos":[0,39],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>e</code> parameter is `null`."}],"pos":[700691,700731],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"></xref> event.","nodes":[{"pos":[0,85],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"></xref> event."}],"pos":[701923,702009],"yaml":true},{"content":"After dragging has begun, this method is called repeatedly by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] until the drag operation is either canceled or completed.  \n  \n> [!NOTE]\n>  Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,177],"content":"After dragging has begun, this method is called repeatedly by the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> until the drag operation is either canceled or completed.","source":"After dragging has begun, this method is called repeatedly by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] until the drag operation is either canceled or completed."},{"pos":[185,305],"content":"[!NOTE]\n Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.","leadings":["","> "],"nodes":[{"content":"Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.","pos":[9,118]}]},{"pos":[312,503],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[510,733],"content":"The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,223],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,148],"source":"The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[149,223]}]}]}],"pos":[702020,702763],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.QueryContinueDragEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.QueryContinueDragEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.QueryContinueDragEventArgs\"></xref> that contains the event data."}],"pos":[703003,703104],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.RegionChanged\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.RegionChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.RegionChanged\"></xref> event."}],"pos":[704207,704289],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,416],"content":"The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnRegionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[144,218]}]}]}],"pos":[704300,704721],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[704874,704945],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Resize\"></xref> event.","nodes":[{"pos":[0,74],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Resize\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Resize\"></xref> event."}],"pos":[706002,706077],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,410],"content":"The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,212],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnResize%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,137],"source":"The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[138,212]}]}]}],"pos":[706088,706503],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[706649,706720],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"></xref> event.","nodes":[{"pos":[0,86],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"></xref> event."}],"pos":[707842,707929],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,422],"content":"The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,149],"source":"The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[150,224]}]}]}],"pos":[707940,708367],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[710136,710207],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.SizeChanged\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.SizeChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.SizeChanged\"></xref> event."}],"pos":[711299,711379],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,415],"content":"The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,217],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnSizeChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,142],"source":"The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[143,217]}]}]}],"pos":[711390,711810],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[711961,712032],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.StyleChanged\"></xref> event.","nodes":[{"pos":[0,80],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.StyleChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.StyleChanged\"></xref> event."}],"pos":[713123,713204],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,416],"content":"The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnStyleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[144,218]}]}]}],"pos":[713215,713636],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[713788,713859],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.SystemColorsChanged\"></xref> event.","nodes":[{"pos":[0,87],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.SystemColorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.SystemColorsChanged\"></xref> event."}],"pos":[714993,715081],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,423],"content":"The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,225],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,150],"source":"The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[151,225]}]}]}],"pos":[715092,715520],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[715679,715750],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.TabIndexChanged\"></xref> event.","nodes":[{"pos":[0,83],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.TabIndexChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.TabIndexChanged\"></xref> event."}],"pos":[716867,716951],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,419],"content":"The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,221],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnTabIndexChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,146],"source":"The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[147,221]}]}]}],"pos":[716962,717386],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[717541,717612],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.TabStopChanged\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.TabStopChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.TabStopChanged\"></xref> event."}],"pos":[718719,718802],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,418],"content":"The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnTabStopChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,145],"source":"The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[146,220]}]}]}],"pos":[718813,719236],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[721001,721072],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.TextChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event."}],"pos":[722160,722240],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,415],"content":"The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,217],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnTextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,142],"source":"The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[143,217]}]}]}],"pos":[722251,722671],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[723996,724067],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Validated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event."}],"pos":[725140,725218],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,413],"content":"The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnValidated%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,140],"source":"The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[141,215]}]}]}],"pos":[725229,725647],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[725796,725867],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event.","nodes":[{"pos":[0,78],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Validating\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event."}],"pos":[727003,727082],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,414],"content":"The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,216],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnValidating%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,141],"source":"The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[142,216]}]}]}],"pos":[727093,727512],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.CancelEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data."}],"pos":[727711,727802],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.VisibleChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event."}],"pos":[728904,728987],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,418],"content":"The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnVisibleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.","pos":[0,145],"source":"The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[146,220]}]}]}],"pos":[728998,729421],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[731186,731257],"yaml":true},{"content":"Gets or sets padding within the control.","nodes":[{"pos":[0,40],"content":"Gets or sets padding within the control.","nodes":[{"content":"Gets or sets padding within the control.","pos":[0,40]}]}],"pos":[732224,732265],"yaml":true},{"content":"For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties. The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=fullName> property.  \n  \n Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.  \n  \n All controls that implement <xref:System.Windows.Forms.Control.GetPreferredSize%2A> are enlarged by the amount in <xref:System.Windows.Forms.Control.Padding%2A> when <xref:System.Windows.Forms.Control.AutoSize%2A> is `true`.  \n  \n The following controls do not use <xref:System.Windows.Forms.Control.Padding%2A>:  \n  \n-   Controls that do not implement <xref:System.Windows.Forms.Control.AutoSize%2A> through <xref:System.Windows.Forms.Control.GetPreferredSize%2A>  \n  \n-   Custom controls that directly inherit from <xref:System.Windows.Forms.Control>  \n  \n-   <xref:System.Windows.Forms.AxHost>  \n  \n-   <xref:System.Windows.Forms.ComboBox>  \n  \n-   <xref:System.Windows.Forms.DataGridView>  \n  \n-   <xref:System.Windows.Forms.DateTimePicker>  \n  \n-   <xref:System.Windows.Forms.HScrollBar>  \n  \n-   <xref:System.Windows.Forms.ListView>  \n  \n-   <xref:System.Windows.Forms.MaskedTextBox>  \n  \n-   <xref:System.Windows.Forms.MonthCalendar>  \n  \n-   <xref:System.Windows.Forms.ProgressBar>  \n  \n-   <xref:System.Windows.Forms.PropertyGrid>  \n  \n-   <xref:System.Windows.Forms.RichTextBox>  \n  \n-   <xref:System.Windows.Forms.SplitContainer>  \n  \n-   <xref:System.Windows.Forms.TextBox>  \n  \n-   <xref:System.Windows.Forms.TextBoxBase>  \n  \n-   <xref:System.Windows.Forms.TreeView>  \n  \n-   <xref:System.Windows.Forms.VScrollBar>  \n  \n-   <xref:System.Windows.Forms.WebBrowser>","nodes":[{"pos":[0,458],"content":"For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties. The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=fullName> property.","nodes":[{"content":"For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties. The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=fullName> property.","pos":[0,458],"nodes":[{"content":"For containers such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> property gets or sets their respective <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> properties.","pos":[0,261],"source":"For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName&gt;</ph> property is equal to its <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Padding%2A?displayProperty=fullName&gt;</ph> property.","pos":[262,458],"source":" The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=fullName> property."}]}]},{"pos":[465,682],"content":"Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.","nodes":[{"content":"Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.","pos":[0,217],"nodes":[{"content":"Controls receive default values for <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> that are reasonably close to Windows user interface guidelines.","pos":[0,146],"source":"Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines."},{"content":"Some adjustments might still be necessary for particular applications.","pos":[147,217]}]}]},{"pos":[689,913],"content":"All controls that implement <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> are enlarged by the amount in <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> when <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> is <ph id=\"ph4\">`true`</ph>.","source":"All controls that implement <xref:System.Windows.Forms.Control.GetPreferredSize%2A> are enlarged by the amount in <xref:System.Windows.Forms.Control.Padding%2A> when <xref:System.Windows.Forms.Control.AutoSize%2A> is `true`."},{"pos":[920,1001],"content":"The following controls do not use <xref:System.Windows.Forms.Control.Padding%2A>:","nodes":[{"content":"The following controls do not use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>:","pos":[0,81],"source":"The following controls do not use <xref:System.Windows.Forms.Control.Padding%2A>:"}]},{"pos":[1011,1153],"content":"Controls that do not implement <xref:System.Windows.Forms.Control.AutoSize%2A> through <xref:System.Windows.Forms.Control.GetPreferredSize%2A>","nodes":[{"content":"Controls that do not implement <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> through <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph>","pos":[0,142],"source":"Controls that do not implement <xref:System.Windows.Forms.Control.AutoSize%2A> through <xref:System.Windows.Forms.Control.GetPreferredSize%2A>"}]},{"pos":[1163,1241],"content":"Custom controls that directly inherit from <xref:System.Windows.Forms.Control>","nodes":[{"content":"Custom controls that directly inherit from <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph>","pos":[0,78],"source":"Custom controls that directly inherit from <xref:System.Windows.Forms.Control>"}]},{"pos":[1251,1285],"content":"<xref:System.Windows.Forms.AxHost>","nodes":[]},{"pos":[1295,1331],"content":"<xref:System.Windows.Forms.ComboBox>","nodes":[]},{"pos":[1341,1381],"content":"<xref:System.Windows.Forms.DataGridView>","nodes":[]},{"pos":[1391,1433],"content":"<xref:System.Windows.Forms.DateTimePicker>","nodes":[]},{"pos":[1443,1481],"content":"<xref:System.Windows.Forms.HScrollBar>","nodes":[]},{"pos":[1491,1527],"content":"<xref:System.Windows.Forms.ListView>","nodes":[]},{"pos":[1537,1578],"content":"<xref:System.Windows.Forms.MaskedTextBox>","nodes":[]},{"pos":[1588,1629],"content":"<xref:System.Windows.Forms.MonthCalendar>","nodes":[]},{"pos":[1639,1678],"content":"<xref:System.Windows.Forms.ProgressBar>","nodes":[]},{"pos":[1688,1728],"content":"<xref:System.Windows.Forms.PropertyGrid>","nodes":[]},{"pos":[1738,1777],"content":"<xref:System.Windows.Forms.RichTextBox>","nodes":[]},{"pos":[1787,1829],"content":"<xref:System.Windows.Forms.SplitContainer>","nodes":[]},{"pos":[1839,1874],"content":"<xref:System.Windows.Forms.TextBox>","nodes":[]},{"pos":[1884,1923],"content":"<xref:System.Windows.Forms.TextBoxBase>","nodes":[]},{"pos":[1933,1969],"content":"<xref:System.Windows.Forms.TreeView>","nodes":[]},{"pos":[1979,2017],"content":"<xref:System.Windows.Forms.VScrollBar>","nodes":[]},{"pos":[2027,2065],"content":"<xref:System.Windows.Forms.WebBrowser>","nodes":[]}],"pos":[732276,734388],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Padding\"></xref> representing the control's internal spacing characteristics.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Padding\"&gt;&lt;/xref&gt;</ph> representing the control's internal spacing characteristics.","source":"A <xref href=\"System.Windows.Forms.Padding\"></xref> representing the control's internal spacing characteristics."}],"pos":[734541,734654],"yaml":true},{"content":"Occurs when the control's padding changes.","nodes":[{"pos":[0,42],"content":"Occurs when the control's padding changes.","nodes":[{"content":"Occurs when the control's padding changes.","pos":[0,42]}]}],"pos":[735651,735694],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[735705,735856],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control is redrawn.","nodes":[{"pos":[0,35],"content":"Occurs when the control is redrawn.","nodes":[{"content":"Occurs when the control is redrawn.","pos":[0,35]}]}],"pos":[738145,738181],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn. It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event.  \n  \n When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <xref:System.Windows.Forms.Control.OnPaint%2A> method. For more information, see [Overriding the OnPaint Method](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) and [Custom Control Painting and Rendering](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md).  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,241],"content":"The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn. It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn. It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event.","pos":[0,241],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event is raised when the control is redrawn.","pos":[0,90],"source":"The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn."},{"content":"It passes an instance of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> to the method(s) that handles the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event.","pos":[91,241],"source":" It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event."}]}]},{"pos":[248,708],"content":"When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <xref:System.Windows.Forms.Control.OnPaint%2A> method. For more information, see [Overriding the OnPaint Method](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) and [Custom Control Painting and Rendering](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md).","nodes":[{"content":"When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method.","pos":[0,211],"source":"When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <xref:System.Windows.Forms.Control.OnPaint%2A> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Overriding the OnPaint Method<ept id=\"p1\">](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Control Painting and Rendering<ept id=\"p2\">](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)</ept>.","pos":[212,460],"source":" For more information, see [Overriding the OnPaint Method](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) and [Custom Control Painting and Rendering](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)."}]},{"pos":[715,865],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[738192,739064],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the parent container of the control.","nodes":[{"pos":[0,49],"content":"Gets or sets the parent container of the control.","nodes":[{"content":"Gets or sets the parent container of the control.","pos":[0,49]}]}],"pos":[740638,740688],"yaml":true},{"content":"Setting the <xref:System.Windows.Forms.Control.Parent%2A> property value to `null` removes the control from the <xref:System.Windows.Forms.Control.ControlCollection> of its current parent control.","nodes":[{"pos":[0,196],"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value to <ph id=\"ph2\">`null`</ph> removes the control from the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> of its current parent control.","source":"Setting the <xref:System.Windows.Forms.Control.Parent%2A> property value to `null` removes the control from the <xref:System.Windows.Forms.Control.ControlCollection> of its current parent control."}],"pos":[740699,740896],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the parent or container control of the control.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> that represents the parent or container control of the control.","source":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the parent or container control of the control."}],"pos":[741693,741809],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.Parent\"></xref> property value changes.","nodes":[{"pos":[0,96],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Parent\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.Parent\"></xref> property value changes."}],"pos":[742847,742944],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,152],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,152],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[159,309],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[742955,743269],"yaml":true,"extradata":"MT"},{"content":"Forces the control to apply layout logic to all its child controls.","nodes":[{"pos":[0,67],"content":"Forces the control to apply layout logic to all its child controls.","nodes":[{"content":"Forces the control to apply layout logic to all its child controls.","pos":[0,67]}]}],"pos":[744330,744398],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.  \n  \n The <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created are set to `null` if no values were provided when the <xref:System.Windows.Forms.Control.PerformLayout%2A> method was called.","nodes":[{"pos":[0,225],"content":"If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method was called before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is suppressed.","pos":[0,225],"source":"If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed."}]},{"pos":[232,562],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> created are set to <ph id=\"ph4\">`null`</ph> if no values were provided when the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method was called.","source":"The <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created are set to `null` if no values were provided when the <xref:System.Windows.Forms.Control.PerformLayout%2A> method was called."}],"pos":[744409,744976],"yaml":true,"extradata":"MT"},{"content":"Forces the control to apply layout logic to all its child controls.","nodes":[{"pos":[0,67],"content":"Forces the control to apply layout logic to all its child controls.","nodes":[{"content":"Forces the control to apply layout logic to all its child controls.","pos":[0,67]}]}],"pos":[747542,747610],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.  \n  \n The `affectedControl` and `affectedProperty` parameters can both be set to `null`. Doing so causes the <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created to be set to `null`.","nodes":[{"pos":[0,225],"content":"If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method was called before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is suppressed.","pos":[0,225],"source":"If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed."}]},{"pos":[232,556],"content":"The `affectedControl` and `affectedProperty` parameters can both be set to `null`. Doing so causes the <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created to be set to `null`.","nodes":[{"content":"The <ph id=\"ph1\">`affectedControl`</ph> and <ph id=\"ph2\">`affectedProperty`</ph> parameters can both be set to <ph id=\"ph3\">`null`</ph>.","pos":[0,82],"source":"The `affectedControl` and `affectedProperty` parameters can both be set to `null`."},{"content":"Doing so causes the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> created to be set to <ph id=\"ph4\">`null`</ph>.","pos":[83,324],"source":" Doing so causes the <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created to be set to `null`."}]}],"pos":[747621,748182],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the most recently changed control.","nodes":[{"pos":[0,102],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> that represents the most recently changed control.","source":"A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the most recently changed control."}],"pos":[749719,749822],"yaml":true},{"content":"The name of the most recently changed property on the control.","nodes":[{"pos":[0,62],"content":"The name of the most recently changed property on the control.","nodes":[{"content":"The name of the most recently changed property on the control.","pos":[0,62]}]}],"pos":[749894,749957],"yaml":true},{"content":"Computes the location of the specified screen point into client coordinates.","nodes":[{"pos":[0,76],"content":"Computes the location of the specified screen point into client coordinates.","nodes":[{"content":"Computes the location of the specified screen point into client coordinates.","pos":[0,76]}]}],"pos":[751042,751119],"yaml":true},{"content":"The screen coordinate <xref href=\"System.Drawing.Point\"></xref> to convert.","nodes":[{"pos":[0,75],"content":"The screen coordinate <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The screen coordinate <xref href=\"System.Drawing.Point\"></xref> to convert."}],"pos":[752785,752861],"yaml":true},{"content":"A <xref href=\"System.Drawing.Point\"></xref> that represents the converted <xref href=\"System.Drawing.Point\"></xref>, <code>p</code>, in client coordinates.","nodes":[{"pos":[0,155],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that represents the converted <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph>, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">p</ph><ept id=\"p1\">&lt;/code&gt;</ept>, in client coordinates.","source":"A <xref href=\"System.Drawing.Point\"></xref> that represents the converted <xref href=\"System.Drawing.Point\"></xref>, <code>p</code>, in client coordinates."}],"pos":[752925,753081],"yaml":true},{"content":"Computes the location of the specified client point into screen coordinates.","nodes":[{"pos":[0,76],"content":"Computes the location of the specified client point into screen coordinates.","nodes":[{"content":"Computes the location of the specified client point into screen coordinates.","pos":[0,76]}]}],"pos":[754127,754204],"yaml":true},{"content":"The client coordinate <xref href=\"System.Drawing.Point\"></xref> to convert.","nodes":[{"pos":[0,75],"content":"The client coordinate <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The client coordinate <xref href=\"System.Drawing.Point\"></xref> to convert."}],"pos":[755674,755750],"yaml":true},{"content":"A <xref href=\"System.Drawing.Point\"></xref> that represents the converted <xref href=\"System.Drawing.Point\"></xref>, <code>p</code>, in screen coordinates.","nodes":[{"pos":[0,155],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that represents the converted <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph>, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">p</ph><ept id=\"p1\">&lt;/code&gt;</ept>, in screen coordinates.","source":"A <xref href=\"System.Drawing.Point\"></xref> that represents the converted <xref href=\"System.Drawing.Point\"></xref>, <code>p</code>, in screen coordinates."}],"pos":[755814,755970],"yaml":true},{"content":"Gets the size of a rectangular area into which the control can fit.","nodes":[{"pos":[0,67],"content":"Gets the size of a rectangular area into which the control can fit.","nodes":[{"content":"Gets the size of a rectangular area into which the control can fit.","pos":[0,67]}]}],"pos":[756953,757021],"yaml":true},{"content":"A <xref href=\"System.Drawing.Size\"></xref> containing the height and width, in pixels.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> containing the height and width, in pixels.","source":"A <xref href=\"System.Drawing.Size\"></xref> containing the height and width, in pixels."}],"pos":[757214,757301],"yaml":true},{"content":"Preprocesses keyboard or input messages within the message loop before they are dispatched.","nodes":[{"pos":[0,91],"content":"Preprocesses keyboard or input messages within the message loop before they are dispatched.","nodes":[{"content":"Preprocesses keyboard or input messages within the message loop before they are dispatched.","pos":[0,91]}]}],"pos":[758533,758625],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref> that represents the message to process.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph> that represents the message to process.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref> that represents the message to process."}],"pos":[758854,758946],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.PreProcessControlState\"></xref> values, depending on whether <xref href=\"System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\"></xref> is `true` or `false` and whether <xref href=\"System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\"></xref> or <xref href=\"System.Windows.Forms.Control.IsInputChar(System.Char)\"></xref> are `true` or `false`.","nodes":[{"pos":[0,425],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PreProcessControlState\"&gt;&lt;/xref&gt;</ph> values, depending on whether <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph3\">`true`</ph> or <ph id=\"ph4\">`false`</ph> and whether <ph id=\"ph5\">&lt;xref href=\"System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph6\">&lt;xref href=\"System.Windows.Forms.Control.IsInputChar(System.Char)\"&gt;&lt;/xref&gt;</ph> are <ph id=\"ph7\">`true`</ph> or <ph id=\"ph8\">`false`</ph>.","source":"One of the <xref href=\"System.Windows.Forms.PreProcessControlState\"></xref> values, depending on whether <xref href=\"System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\"></xref> is `true` or `false` and whether <xref href=\"System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\"></xref> or <xref href=\"System.Windows.Forms.Control.IsInputChar(System.Char)\"></xref> are `true` or `false`."}],"pos":[759033,759459],"yaml":true},{"content":"Preprocesses keyboard or input messages within the message loop before they are dispatched.","nodes":[{"pos":[0,91],"content":"Preprocesses keyboard or input messages within the message loop before they are dispatched.","nodes":[{"content":"Preprocesses keyboard or input messages within the message loop before they are dispatched.","pos":[0,91]}]}],"pos":[760612,760704],"yaml":true},{"content":"<xref:System.Windows.Forms.Control.PreProcessMessage%2A> is called by the application's message loop to preprocess input messages before they are dispatched. Possible values for the `msg` parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.  \n  \n When overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, a control should return `true` to indicate that it has processed the message. For messages that are not processed by the control, the result of `base.PreProcessMessage` should be returned. Controls will typically override one of the more specialized methods such as <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, or <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> instead of overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.","nodes":[{"pos":[0,253],"content":"<xref:System.Windows.Forms.Control.PreProcessMessage%2A> is called by the application's message loop to preprocess input messages before they are dispatched. Possible values for the `msg` parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> is called by the application's message loop to preprocess input messages before they are dispatched.","pos":[0,157],"source":"<xref:System.Windows.Forms.Control.PreProcessMessage%2A> is called by the application's message loop to preprocess input messages before they are dispatched."},{"content":"Possible values for the <ph id=\"ph1\">`msg`</ph> parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.","pos":[158,253],"source":" Possible values for the `msg` parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR."}]},{"pos":[260,953],"content":"When overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, a control should return `true` to indicate that it has processed the message. For messages that are not processed by the control, the result of `base.PreProcessMessage` should be returned. Controls will typically override one of the more specialized methods such as <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, or <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> instead of overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.","nodes":[{"content":"When overriding <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>, a control should return <ph id=\"ph2\">`true`</ph> to indicate that it has processed the message.","pos":[0,151],"source":"When overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, a control should return `true` to indicate that it has processed the message."},{"content":"For messages that are not processed by the control, the result of <ph id=\"ph1\">`base.PreProcessMessage`</ph> should be returned.","pos":[152,262],"source":" For messages that are not processed by the control, the result of `base.PreProcessMessage` should be returned."},{"content":"Controls will typically override one of the more specialized methods such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> instead of overriding <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>.","pos":[263,693],"source":" Controls will typically override one of the more specialized methods such as <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, or <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> instead of overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>."}]}],"pos":[760715,761673],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.","nodes":[{"pos":[0,189],"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the message to process.","pos":[0,113],"source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the message to process."},{"content":"The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.","pos":[114,189]}]}],"pos":[761864,762054],"yaml":true},{"content":"`true` if the message was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the message was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was processed by the control; otherwise, `false`."}],"pos":[762112,762186],"yaml":true},{"content":"Occurs before the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> event when a key is pressed while focus is on this control.","nodes":[{"pos":[0,135],"content":"Occurs before the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.KeyDown\"&gt;&lt;/xref&gt;</ph> event when a key is pressed while focus is on this control.","source":"Occurs before the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> event when a key is pressed while focus is on this control."}],"pos":[763176,763312],"yaml":true},{"content":"Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses. For example, by default, a <xref:System.Windows.Controls.Button> control ignores the arrow keys. Pressing the arrow keys typically causes the focus to move to the previous or next control. The arrow keys are considered navigation keys and pressing these keys typically do not raise the <xref:System.Windows.Forms.Control.KeyDown> event for a<xref:System.Windows.Controls.Button>. However, pressing the arrow keys for a <xref:System.Windows.Controls.Button> does raise the <xref:System.Windows.Forms.Control.PreviewKeyDown> event. By handling the <xref:System.Windows.Forms.Control.PreviewKeyDown> event for a <xref:System.Windows.Controls.Button> and setting the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`, you can raise the <xref:System.Windows.Forms.Control.KeyDown> event when the arrow keys are pressed. However, if you handle the arrow keys, the focus will no longer move to the previous or next control.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,1105],"content":"Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses. For example, by default, a <xref:System.Windows.Controls.Button> control ignores the arrow keys. Pressing the arrow keys typically causes the focus to move to the previous or next control. The arrow keys are considered navigation keys and pressing these keys typically do not raise the <xref:System.Windows.Forms.Control.KeyDown> event for a<xref:System.Windows.Controls.Button>. However, pressing the arrow keys for a <xref:System.Windows.Controls.Button> does raise the <xref:System.Windows.Forms.Control.PreviewKeyDown> event. By handling the <xref:System.Windows.Forms.Control.PreviewKeyDown> event for a <xref:System.Windows.Controls.Button> and setting the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`, you can raise the <xref:System.Windows.Forms.Control.KeyDown> event when the arrow keys are pressed. However, if you handle the arrow keys, the focus will no longer move to the previous or next control.","nodes":[{"content":"Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses.","pos":[0,153]},{"content":"For example, by default, a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> control ignores the arrow keys.","pos":[154,250],"source":" For example, by default, a <xref:System.Windows.Controls.Button> control ignores the arrow keys."},{"content":"Pressing the arrow keys typically causes the focus to move to the previous or next control.","pos":[251,342]},{"content":"The arrow keys are considered navigation keys and pressing these keys typically do not raise the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event for a<ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph>.","pos":[343,533],"source":" The arrow keys are considered navigation keys and pressing these keys typically do not raise the <xref:System.Windows.Forms.Control.KeyDown> event for a<xref:System.Windows.Controls.Button>."},{"content":"However, pressing the arrow keys for a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> does raise the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.","pos":[534,683],"source":" However, pressing the arrow keys for a <xref:System.Windows.Controls.Button> does raise the <xref:System.Windows.Forms.Control.PreviewKeyDown> event."},{"content":"By handling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event for a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Button&gt;</ph> and setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id=\"ph4\">`true`</ph>, you can raise the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event when the arrow keys are pressed.","pos":[684,1003],"source":" By handling the <xref:System.Windows.Forms.Control.PreviewKeyDown> event for a <xref:System.Windows.Controls.Button> and setting the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`, you can raise the <xref:System.Windows.Forms.Control.KeyDown> event when the arrow keys are pressed."},{"content":"However, if you handle the arrow keys, the focus will no longer move to the previous or next control.","pos":[1004,1105]}]},{"pos":[1112,1262],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[763323,764590],"yaml":true,"extradata":"MT"},{"content":"Processes a command key.","nodes":[{"pos":[0,24],"content":"Processes a command key.","nodes":[{"content":"Processes a command key.","pos":[0,24]}]}],"pos":[767257,767282],"yaml":true},{"content":"This method is called during message preprocessing to handle command keys. Command keys are keys that always take precedence over regular input keys. Examples of command keys include accelerators and menu shortcuts. The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.  \n  \n The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key. If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method. The net effect is that command keys are \"bubbled\" up the control hierarchy. In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key. Modifier keys include the SHIFT, CTRL, and ALT keys.","nodes":[{"pos":[0,465],"content":"This method is called during message preprocessing to handle command keys. Command keys are keys that always take precedence over regular input keys. Examples of command keys include accelerators and menu shortcuts. The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","nodes":[{"content":"This method is called during message preprocessing to handle command keys.","pos":[0,74]},{"content":"Command keys are keys that always take precedence over regular input keys.","pos":[75,149]},{"content":"Examples of command keys include accelerators and menu shortcuts.","pos":[150,215]},{"content":"The method must return <ph id=\"ph1\">`true`</ph> to indicate that it has processed the command key, or <ph id=\"ph2\">`false`</ph> to indicate that the key is not a command key.","pos":[216,354],"source":" The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key."},{"content":"This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","pos":[355,465]}]},{"pos":[472,1146],"content":"The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key. If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method. The net effect is that command keys are \"bubbled\" up the control hierarchy. In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key. Modifier keys include the SHIFT, CTRL, and ALT keys.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key. If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method. The net effect is that command keys are \"bubbled\" up the control hierarchy. In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key. Modifier keys include the SHIFT, CTRL, and ALT keys.","pos":[0,674],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> method first determines whether the control has a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, and if so, enables the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> to process the command key.","pos":[0,238],"source":"The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key."},{"content":"If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> method.","pos":[239,405],"source":" If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method."},{"content":"The net effect is that command keys are \"bubbled\" up the control hierarchy.","pos":[406,481]},{"content":"In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.","pos":[482,621]},{"content":"Modifier keys include the SHIFT, CTRL, and ALT keys.","pos":[622,674]}]}]}],"pos":[767293,768446],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process."}],"pos":[768671,768792],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.","nodes":[{"pos":[0,100],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> values that represents the key to process.","source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process."}],"pos":[768867,768968],"yaml":true},{"content":"`true` if the character was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the character was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was processed by the control; otherwise, `false`."}],"pos":[769026,769102],"yaml":true},{"content":"Processes a dialog character.","nodes":[{"pos":[0,29],"content":"Processes a dialog character.","nodes":[{"content":"Processes a dialog character.","pos":[0,29]}]}],"pos":[770164,770194],"yaml":true},{"content":"This method is called during message preprocessing to handle dialog characters, such as control mnemonics. This method is called only if the <xref:System.Windows.Forms.Control.IsInputChar%2A> method indicates that the control is not processing the character. The <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog characters. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","nodes":[{"pos":[0,710],"content":"This method is called during message preprocessing to handle dialog characters, such as control mnemonics. This method is called only if the <xref:System.Windows.Forms.Control.IsInputChar%2A> method indicates that the control is not processing the character. The <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog characters. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","nodes":[{"content":"This method is called during message preprocessing to handle dialog characters, such as control mnemonics.","pos":[0,106]},{"content":"This method is called only if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method indicates that the control is not processing the character.","pos":[107,258],"source":" This method is called only if the <xref:System.Windows.Forms.Control.IsInputChar%2A> method indicates that the control is not processing the character."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> method simply sends the character to the parent's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> method, or returns <ph id=\"ph3\">`false`</ph> if the control has no parent.","pos":[259,483],"source":" The <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method, or returns `false` if the control has no parent."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog characters.","pos":[484,599],"source":" The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog characters."},{"content":"This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","pos":[600,710]}]}],"pos":[770205,770916],"yaml":true,"extradata":"MT"},{"content":"The character to process.","nodes":[{"pos":[0,25],"content":"The character to process.","nodes":[{"content":"The character to process.","pos":[0,25]}]}],"pos":[771075,771101],"yaml":true},{"content":"`true` if the character was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the character was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was processed by the control; otherwise, `false`."}],"pos":[771159,771235],"yaml":true},{"content":"Processes a dialog key.","nodes":[{"pos":[0,23],"content":"Processes a dialog key.","nodes":[{"content":"Processes a dialog key.","pos":[0,23]}]}],"pos":[772337,772361],"yaml":true},{"content":"This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys. This method is called only if the <xref:System.Windows.Forms.Control.IsInputKey%2A> method indicates that the control is not processing the key. The <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","nodes":[{"pos":[0,703],"content":"This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys. This method is called only if the <xref:System.Windows.Forms.Control.IsInputKey%2A> method indicates that the control is not processing the key. The <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","nodes":[{"content":"This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys.","pos":[0,121]},{"content":"This method is called only if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method indicates that the control is not processing the key.","pos":[122,266],"source":" This method is called only if the <xref:System.Windows.Forms.Control.IsInputKey%2A> method indicates that the control is not processing the key."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> simply sends the character to the parent's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> method, or returns <ph id=\"ph3\">`false`</ph> if the control has no parent.","pos":[267,482],"source":" The <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> method, or returns `false` if the control has no parent."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog keys.","pos":[483,592],"source":" The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys."},{"content":"This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.","pos":[593,703]}]}],"pos":[772372,773076],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.","nodes":[{"pos":[0,100],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> values that represents the key to process.","source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process."}],"pos":[773267,773368],"yaml":true},{"content":"`true` if the key was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the key was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key was processed by the control; otherwise, `false`."}],"pos":[773426,773496],"yaml":true},{"content":"Processes a key message and generates the appropriate control events.","nodes":[{"pos":[0,69],"content":"Processes a key message and generates the appropriate control events.","nodes":[{"content":"Processes a key message and generates the appropriate control events.","pos":[0,69]}]}],"pos":[774614,774684],"yaml":true},{"content":"This method is called when a control receives a keyboard message. The method is responsible for generating the appropriate key events for the message by calling the <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, or <xref:System.Windows.Forms.Control.OnKeyUp%2A> methods. The `m` parameter contains the window message that must be processed. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.","nodes":[{"pos":[0,575],"content":"This method is called when a control receives a keyboard message. The method is responsible for generating the appropriate key events for the message by calling the <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, or <xref:System.Windows.Forms.Control.OnKeyUp%2A> methods. The `m` parameter contains the window message that must be processed. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.","nodes":[{"content":"This method is called when a control receives a keyboard message.","pos":[0,65]},{"content":"The method is responsible for generating the appropriate key events for the message by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> methods.","pos":[66,324],"source":" The method is responsible for generating the appropriate key events for the message by calling the <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, or <xref:System.Windows.Forms.Control.OnKeyUp%2A> methods."},{"content":"The <ph id=\"ph1\">`m`</ph> parameter contains the window message that must be processed.","pos":[325,394],"source":" The `m` parameter contains the window message that must be processed."},{"content":"Possible values for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.","pos":[395,575],"source":" Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR."}]}],"pos":[774695,775271],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process."}],"pos":[775463,775584],"yaml":true},{"content":"`true` if the message was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the message was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was processed by the control; otherwise, `false`."}],"pos":[775642,775716],"yaml":true},{"content":"Processes a keyboard message.","nodes":[{"pos":[0,29],"content":"Processes a keyboard message.","nodes":[{"content":"Processes a keyboard message.","pos":[0,29]}]}],"pos":[776847,776877],"yaml":true},{"content":"This method is called when a control receives a keyboard message. The method first determines whether the control has a parent; if so, it calls the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method. If the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method does not process the message then the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> method is called to generate the appropriate keyboard events. The `m` parameter contains the window message that must be processed. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.","nodes":[{"pos":[0,698],"content":"This method is called when a control receives a keyboard message. The method first determines whether the control has a parent; if so, it calls the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method. If the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method does not process the message then the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> method is called to generate the appropriate keyboard events. The `m` parameter contains the window message that must be processed. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.","nodes":[{"content":"This method is called when a control receives a keyboard message.","pos":[0,65]},{"content":"The method first determines whether the control has a parent; if so, it calls the parent's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method.","pos":[66,221],"source":" The method first determines whether the control has a parent; if so, it calls the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method."},{"content":"If the parent's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method does not process the message then the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A&gt;</ph> method is called to generate the appropriate keyboard events.","pos":[222,460],"source":" If the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method does not process the message then the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> method is called to generate the appropriate keyboard events."},{"content":"The <ph id=\"ph1\">`m`</ph> parameter contains the window message that must be processed.","pos":[461,530],"source":" The `m` parameter contains the window message that must be processed."},{"content":"Possible values for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.","pos":[531,698],"source":" Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP."}]}],"pos":[776888,777587],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process."}],"pos":[777777,777898],"yaml":true},{"content":"`true` if the message was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the message was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was processed by the control; otherwise, `false`."}],"pos":[777956,778030],"yaml":true},{"content":"Previews a keyboard message.","nodes":[{"pos":[0,28],"content":"Previews a keyboard message.","nodes":[{"content":"Previews a keyboard message.","pos":[0,28]}]}],"pos":[779159,779188],"yaml":true},{"content":"This method is called by a child control when the child control receives a keyboard message. The child control calls this method before generating any keyboard events for the message. If this method returns `true`, the child control considers the message processed and does not generate any keyboard events. The `m` parameter contains the window message to preview. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP. The <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.","nodes":[{"pos":[0,868],"content":"This method is called by a child control when the child control receives a keyboard message. The child control calls this method before generating any keyboard events for the message. If this method returns `true`, the child control considers the message processed and does not generate any keyboard events. The `m` parameter contains the window message to preview. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP. The <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.","nodes":[{"content":"This method is called by a child control when the child control receives a keyboard message.","pos":[0,92]},{"content":"The child control calls this method before generating any keyboard events for the message.","pos":[93,183]},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the child control considers the message processed and does not generate any keyboard events.","pos":[184,307],"source":" If this method returns `true`, the child control considers the message processed and does not generate any keyboard events."},{"content":"The <ph id=\"ph1\">`m`</ph> parameter contains the window message to preview.","pos":[308,365],"source":" The `m` parameter contains the window message to preview."},{"content":"Possible values for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.","pos":[366,533],"source":" Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method simply sends the character to the parent's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method, or returns <ph id=\"ph3\">`false`</ph> if the control has no parent.","pos":[534,758],"source":" The <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method, or returns `false` if the control has no parent."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog keys.","pos":[759,868],"source":" The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys."}]}],"pos":[779199,780068],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process."}],"pos":[780258,780379],"yaml":true},{"content":"`true` if the message was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the message was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was processed by the control; otherwise, `false`."}],"pos":[780437,780511],"yaml":true},{"content":"Processes a mnemonic character.","nodes":[{"pos":[0,31],"content":"Processes a mnemonic character.","nodes":[{"content":"Processes a mnemonic character.","pos":[0,31]}]}],"pos":[781565,781597],"yaml":true},{"content":"This method is called to give a control the opportunity to process a mnemonic character. The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic. If so, the method should perform the action associated with the mnemonic and return `true`. If not, the method should return `false`. Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.  \n  \n For example:  \n  \n```csharp  \nif (CanSelect && IsMnemonic(charCode, MyControl.Text) {  \n      // Perform action associated with mnemonic.  \n       }  \n```  \n  \n This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.","nodes":[{"pos":[0,548],"content":"This method is called to give a control the opportunity to process a mnemonic character. The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic. If so, the method should perform the action associated with the mnemonic and return `true`. If not, the method should return `false`. Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.","nodes":[{"content":"This method is called to give a control the opportunity to process a mnemonic character.","pos":[0,88]},{"content":"The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.","pos":[89,229]},{"content":"If so, the method should perform the action associated with the mnemonic and return <ph id=\"ph1\">`true`</ph>.","pos":[230,321],"source":" If so, the method should perform the action associated with the mnemonic and return `true`."},{"content":"If not, the method should return <ph id=\"ph1\">`false`</ph>.","pos":[322,363],"source":" If not, the method should return `false`."},{"content":"Implementations of this method often use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> method to determine whether the given character matches a mnemonic in the control's text.","pos":[364,548],"source":" Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text."}]},{"pos":[555,567],"content":"For example:","nodes":[{"content":"For example:","pos":[0,12]}]},{"pos":[716,881],"content":"This default implementation of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method simply returns <ph id=\"ph2\">`false`</ph> to indicate that the control has no mnemonic.","source":"This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic."}],"pos":[781608,782502],"yaml":true,"extradata":"MT"},{"content":"The character to process.","nodes":[{"pos":[0,25],"content":"The character to process.","nodes":[{"content":"The character to process.","pos":[0,25]}]}],"pos":[783623,783649],"yaml":true},{"content":"`true` if the character was processed as a mnemonic by the control; otherwise, `false`.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">`true`</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was processed as a mnemonic by the control; otherwise, `false`."}],"pos":[783707,783797],"yaml":true},{"content":"Gets the product name of the assembly containing the control.","nodes":[{"pos":[0,61],"content":"Gets the product name of the assembly containing the control.","nodes":[{"content":"Gets the product name of the assembly containing the control.","pos":[0,61]}]}],"pos":[784770,784832],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property.  \n  \n```  \n[assembly: AssemblyProduct(\"MyApplication\")]  \n```  \n  \n> [!NOTE]\n>  It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \"Certified for Windows\" program. For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.","nodes":[{"pos":[0,368],"content":"The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property.","pos":[0,368],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> property is a read-only property.","pos":[0,88],"source":"The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property."},{"content":"To change the value of this property, set the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyProductAttribute.Product%2A&gt;</ph> property value of the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>.","pos":[89,268],"source":" To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>."},{"content":"The following line of C# code sets the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> property.","pos":[269,368],"source":" The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property."}]}]},{"pos":[438,909],"content":"[!NOTE]\n It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \"Certified for Windows\" program. For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.","leadings":["","> "],"nodes":[{"content":" It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \"Certified for Windows\" program. For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.","pos":[8,469],"nodes":[{"content":"It is strongly recommended that you provide the company name, product name, and product version.","pos":[1,97]},{"content":"Providing this information enables the use of Windows Forms features such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName&gt;</ph> that make it easier to write applications that comply with the \"Certified for Windows\" program.","pos":[98,354],"source":" Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \"Certified for Windows\" program."},{"content":"For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.","pos":[355,461]}]}]}],"pos":[784843,785766],"yaml":true,"extradata":"MT"},{"content":"The product name of the assembly containing the control.","nodes":[{"pos":[0,56],"content":"The product name of the assembly containing the control.","nodes":[{"content":"The product name of the assembly containing the control.","pos":[0,56]}]}],"pos":[786791,786848],"yaml":true},{"content":"Gets the version of the assembly containing the control.","nodes":[{"pos":[0,56],"content":"Gets the version of the assembly containing the control.","nodes":[{"content":"Gets the version of the assembly containing the control.","pos":[0,56]}]}],"pos":[787900,787957],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property.  \n  \n```  \n[assembly: AssemblyVersion(\"1.0.1\")]  \n```  \n  \n> [!NOTE]\n>  It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \"Certified for Windows\" program. For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.","nodes":[{"pos":[0,374],"content":"The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property.","pos":[0,374],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> property is a read-only property.","pos":[0,91],"source":"The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property."},{"content":"To change the value of this property, set the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyVersionAttribute.Version%2A&gt;</ph> property value of the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>.","pos":[92,271],"source":" To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>."},{"content":"The following line of C# code sets the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> property.","pos":[272,374],"source":" The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property."}]}]},{"pos":[436,907],"content":"[!NOTE]\n It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \"Certified for Windows\" program. For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.","leadings":["","> "],"nodes":[{"content":" It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \"Certified for Windows\" program. For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.","pos":[8,469],"nodes":[{"content":"It is strongly recommended that you provide the company name, product name, and product version.","pos":[1,97]},{"content":"Providing this information enables the use of Windows Forms features such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName&gt;</ph> that make it easier to write applications that comply with the \"Certified for Windows\" program.","pos":[98,354],"source":" Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \"Certified for Windows\" program."},{"content":"For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.","pos":[355,461]}]}]}],"pos":[787968,788889],"yaml":true,"extradata":"MT"},{"content":"The file version of the assembly containing the control.","nodes":[{"pos":[0,56],"content":"The file version of the assembly containing the control.","nodes":[{"content":"The file version of the assembly containing the control.","pos":[0,56]}]}],"pos":[789917,789974],"yaml":true},{"content":"Gets an object that represents a propagating IME mode.","nodes":[{"pos":[0,54],"content":"Gets an object that represents a propagating IME mode.","nodes":[{"content":"Gets an object that represents a propagating IME mode.","pos":[0,54]}]}],"pos":[791053,791108],"yaml":true},{"content":"An object that represents a propagating IME mode.","nodes":[{"pos":[0,49],"content":"An object that represents a propagating IME mode.","nodes":[{"content":"An object that represents a propagating IME mode.","pos":[0,49]}]}],"pos":[791277,791327],"yaml":true},{"content":"Occurs when <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> is providing help to accessibility applications.","nodes":[{"pos":[0,119],"content":"Occurs when <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;&lt;/xref&gt;</ph> is providing help to accessibility applications.","source":"Occurs when <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> is providing help to accessibility applications."}],"pos":[792366,792486],"yaml":true},{"content":"You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke help on your accessible object by pressing the F1 key. Using the <xref:System.Windows.Forms.HelpProvider> provides you with complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>. For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,455],"content":"You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke help on your accessible object by pressing the F1 key. Using the <xref:System.Windows.Forms.HelpProvider> provides you with complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>. For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"You should use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> class to enable users to invoke help on your accessible object by pressing the F1 key.","pos":[0,146],"source":"You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke help on your accessible object by pressing the F1 key."},{"content":"Using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> provides you with complete information in the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs&gt;</ph>.","pos":[147,304],"source":" Using the <xref:System.Windows.Forms.HelpProvider> provides you with complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>."},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[305,455],"source":" For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]}],"pos":[792497,792953],"yaml":true,"extradata":"MT"},{"content":"Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.","nodes":[{"pos":[0,136],"content":"Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.","nodes":[{"content":"Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.","pos":[0,136]}]}],"pos":[795947,796084],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation. The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.  \n  \n The following describes how and when events related to drag-and-drop operations are raised.  \n  \n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \n  \n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \n  \n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \n  \n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \n  \n If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \n  \n    > [!NOTE]\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \n  \n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \n  \n By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Cancel` in <xref:System.Windows.Forms.DragAction> if the ESC key was pressed and sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Drop` in <xref:System.Windows.Forms.DragAction> if the left, middle, or right mouse button is pressed.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,325],"content":"The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation. The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation. The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.","pos":[0,325],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.","pos":[0,168],"source":"The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event enables the drag source to determine whether the drag-and-drop operation should be canceled.","pos":[169,325],"source":" The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled."}]}]},{"pos":[332,423],"content":"The following describes how and when events related to drag-and-drop operations are raised.","nodes":[{"content":"The following describes how and when events related to drag-and-drop operations are raised.","pos":[0,91]}]},{"pos":[430,609],"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.","pos":[0,179],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.","pos":[0,118],"source":"The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location."},{"content":"It then checks to see if the control is a valid drop target.","pos":[119,179]}]}]},{"pos":[616,866],"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","pos":[0,250],"nodes":[{"content":"If the control is a valid drop target, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.","pos":[0,148],"source":"If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified."},{"content":"For a list of drag-and-drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[149,250],"source":" For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]}]},{"pos":[873,962],"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","nodes":[{"content":"Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.","pos":[0,89]}]},{"pos":[972,1073],"content":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.","nodes":[{"content":"If the user moves out of a window, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","pos":[0,101],"source":"If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."}]},{"pos":[1083,1197],"content":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.","nodes":[{"content":"If the mouse enters another control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.","pos":[0,114],"source":"If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised."}]},{"pos":[1207,1326],"content":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.","nodes":[{"content":"If the mouse moves but stays within the same control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.","pos":[0,119],"source":"If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised."}]},{"pos":[1333,1726],"content":"If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.","nodes":[{"content":"If there is a change in the keyboard or mouse button state, the<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.","pos":[0,393],"source":"If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>."}]},{"pos":[1736,2131],"content":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.","nodes":[{"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Continue`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.","pos":[0,296],"source":"If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set."},{"content":"For a list of valid drop effects, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.","pos":[297,395],"source":" For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration."}]},{"pos":[2143,2400],"content":"[!NOTE]\nThe <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","leadings":["","    >  "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.","pos":[8,250],"source":"The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position."}]},{"pos":[2410,2663],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move."},{"pos":[2673,2807],"content":"If the value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id=\"ph2\">`Cancel`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.","source":"If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised."},{"pos":[2814,3221],"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event sets <ph id=\"ph2\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id=\"ph3\">`Cancel`</ph> in <ph id=\"ph4\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> if the ESC key was pressed and sets <ph id=\"ph5\">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id=\"ph6\">`Drop`</ph> in <ph id=\"ph7\">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> if the left, middle, or right mouse button is pressed.","source":"By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Cancel` in <xref:System.Windows.Forms.DragAction> if the ESC key was pressed and sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Drop` in <xref:System.Windows.Forms.DragAction> if the left, middle, or right mouse button is pressed."},{"pos":[3228,3378],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[796095,799505],"yaml":true,"extradata":"MT"},{"content":"Raises the appropriate drag event.","nodes":[{"pos":[0,34],"content":"Raises the appropriate drag event.","nodes":[{"content":"Raises the appropriate drag event.","pos":[0,34]}]}],"pos":[803661,803696],"yaml":true},{"content":"The event to raise.","nodes":[{"pos":[0,19],"content":"The event to raise.","nodes":[{"content":"The event to raise.","pos":[0,19]}]}],"pos":[803876,803896],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data."}],"pos":[803974,804062],"yaml":true},{"content":"Raises the appropriate key event.","nodes":[{"pos":[0,33],"content":"Raises the appropriate key event.","nodes":[{"content":"Raises the appropriate key event.","pos":[0,33]}]}],"pos":[805252,805286],"yaml":true},{"content":"The event to raise.","nodes":[{"pos":[0,19],"content":"The event to raise.","nodes":[{"content":"The event to raise.","pos":[0,19]}]}],"pos":[805464,805484],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data."}],"pos":[805561,805648],"yaml":true},{"content":"Raises the appropriate mouse event.","nodes":[{"pos":[0,35],"content":"Raises the appropriate mouse event.","nodes":[{"content":"Raises the appropriate mouse event.","pos":[0,35]}]}],"pos":[806883,806919],"yaml":true},{"content":"The event to raise.","nodes":[{"pos":[0,19],"content":"The event to raise.","nodes":[{"content":"The event to raise.","pos":[0,19]}]}],"pos":[807101,807121],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data."}],"pos":[807200,807289],"yaml":true},{"content":"Raises the appropriate paint event.","nodes":[{"pos":[0,35],"content":"Raises the appropriate paint event.","nodes":[{"content":"Raises the appropriate paint event.","pos":[0,35]}]}],"pos":[808504,808540],"yaml":true},{"content":"The event to raise.","nodes":[{"pos":[0,19],"content":"The event to raise.","nodes":[{"content":"The event to raise.","pos":[0,19]}]}],"pos":[808722,808742],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PaintEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data."}],"pos":[808821,808910],"yaml":true},{"content":"Forces the re-creation of the handle for the control.","nodes":[{"pos":[0,53],"content":"Forces the re-creation of the handle for the control.","nodes":[{"content":"Forces the re-creation of the handle for the control.","pos":[0,53]}]}],"pos":[809922,809976],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is called whenever parameters are needed for a new control, but using a call from <xref:System.Windows.Forms.Control.UpdateStyles%2A> to <xref:System.Windows.Forms.Control.CreateParams%2A> is insufficient. This method also calls <xref:System.Windows.Forms.Control.DestroyHandle%2A> and<xref:System.Windows.Forms.Control.CreateHandle%2A> and sets <xref:System.Windows.Forms.Control.RecreatingHandle%2A> to `true`.","nodes":[{"pos":[0,477],"content":"The <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is called whenever parameters are needed for a new control, but using a call from <xref:System.Windows.Forms.Control.UpdateStyles%2A> to <xref:System.Windows.Forms.Control.CreateParams%2A> is insufficient. This method also calls <xref:System.Windows.Forms.Control.DestroyHandle%2A> and<xref:System.Windows.Forms.Control.CreateHandle%2A> and sets <xref:System.Windows.Forms.Control.RecreatingHandle%2A> to `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method is called whenever parameters are needed for a new control, but using a call from <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> to <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> is insufficient.","pos":[0,270],"source":"The <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is called whenever parameters are needed for a new control, but using a call from <xref:System.Windows.Forms.Control.UpdateStyles%2A> to <xref:System.Windows.Forms.Control.CreateParams%2A> is insufficient."},{"content":"This method also calls <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DestroyHandle%2A&gt;</ph> and<ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> and sets <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> to <ph id=\"ph4\">`true`</ph>.","pos":[271,477],"source":" This method also calls <xref:System.Windows.Forms.Control.DestroyHandle%2A> and<xref:System.Windows.Forms.Control.CreateHandle%2A> and sets <xref:System.Windows.Forms.Control.RecreatingHandle%2A> to `true`."}]}],"pos":[809987,810465],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the control is currently re-creating its handle.","nodes":[{"pos":[0,80],"content":"Gets a value indicating whether the control is currently re-creating its handle.","nodes":[{"content":"Gets a value indicating whether the control is currently re-creating its handle.","pos":[0,80]}]}],"pos":[811560,811641],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.RecreatingHandle%2A> property returns `true` if the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is still running on the control.","nodes":[{"pos":[0,184],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> property returns <ph id=\"ph2\">`true`</ph> if the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method is still running on the control.","source":"The <xref:System.Windows.Forms.Control.RecreatingHandle%2A> property returns `true` if the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is still running on the control."}],"pos":[811652,811837],"yaml":true,"extradata":"MT"},{"content":"`true` if the control is currently re-creating its handle; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the control is currently re-creating its handle; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control is currently re-creating its handle; otherwise, `false`."}],"pos":[812013,812094],"yaml":true},{"content":"Computes the size and location of the specified screen rectangle in client coordinates.","nodes":[{"pos":[0,87],"content":"Computes the size and location of the specified screen rectangle in client coordinates.","nodes":[{"content":"Computes the size and location of the specified screen rectangle in client coordinates.","pos":[0,87]}]}],"pos":[813278,813366],"yaml":true},{"content":"The screen coordinate <xref href=\"System.Drawing.Rectangle\"></xref> to convert.","nodes":[{"pos":[0,79],"content":"The screen coordinate <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The screen coordinate <xref href=\"System.Drawing.Rectangle\"></xref> to convert."}],"pos":[813553,813633],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the converted <xref href=\"System.Drawing.Rectangle\"></xref>, <code>r</code>, in client coordinates.","nodes":[{"pos":[0,163],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that represents the converted <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph>, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">r</ph><ept id=\"p1\">&lt;/code&gt;</ept>, in client coordinates.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the converted <xref href=\"System.Drawing.Rectangle\"></xref>, <code>r</code>, in client coordinates."}],"pos":[813701,813865],"yaml":true},{"content":"Computes the size and location of the specified client rectangle in screen coordinates.","nodes":[{"pos":[0,87],"content":"Computes the size and location of the specified client rectangle in screen coordinates.","nodes":[{"content":"Computes the size and location of the specified client rectangle in screen coordinates.","pos":[0,87]}]}],"pos":[814985,815073],"yaml":true},{"content":"The client coordinate <xref href=\"System.Drawing.Rectangle\"></xref> to convert.","nodes":[{"pos":[0,79],"content":"The client coordinate <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The client coordinate <xref href=\"System.Drawing.Rectangle\"></xref> to convert."}],"pos":[816563,816643],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the converted <xref href=\"System.Drawing.Rectangle\"></xref>, <code>p</code>, in screen coordinates.","nodes":[{"pos":[0,163],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that represents the converted <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph>, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">p</ph><ept id=\"p1\">&lt;/code&gt;</ept>, in screen coordinates.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the converted <xref href=\"System.Drawing.Rectangle\"></xref>, <code>p</code>, in screen coordinates."}],"pos":[816711,816875],"yaml":true},{"content":"Reflects the specified message to the control that is bound to the specified handle.","nodes":[{"pos":[0,84],"content":"Reflects the specified message to the control that is bound to the specified handle.","nodes":[{"content":"Reflects the specified message to the control that is bound to the specified handle.","pos":[0,84]}]}],"pos":[818052,818137],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is an infrastructure method and typically should not be called from your code.  \n  \n If the `hWnd` parameter does not represent a valid control, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method returns `false`.  \n  \n Because Windows messages are returned to the top-level window, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is used to propagate the return message to the control that sent the message.","nodes":[{"pos":[0,143],"content":"The <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is an infrastructure method and typically should not be called from your code.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method is an infrastructure method and typically should not be called from your code.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is an infrastructure method and typically should not be called from your code."}]},{"pos":[150,291],"content":"If the <ph id=\"ph1\">`hWnd`</ph> parameter does not represent a valid control, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method returns <ph id=\"ph3\">`false`</ph>.","source":"If the `hWnd` parameter does not represent a valid control, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method returns `false`."},{"pos":[298,503],"content":"Because Windows messages are returned to the top-level window, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is used to propagate the return message to the control that sent the message.","nodes":[{"content":"Because Windows messages are returned to the top-level window, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method is used to propagate the return message to the control that sent the message.","pos":[0,205],"source":"Because Windows messages are returned to the top-level window, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is used to propagate the return message to the control that sent the message."}]}],"pos":[818148,818658],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IntPtr\"></xref> representing the handle of the control to reflect the message to.","nodes":[{"pos":[0,103],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> representing the handle of the control to reflect the message to.","source":"An <xref href=\"System.IntPtr\"></xref> representing the handle of the control to reflect the message to."}],"pos":[818845,818949],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref> representing the Windows message to reflect.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph> representing the Windows message to reflect.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref> representing the Windows message to reflect."}],"pos":[819021,819118],"yaml":true},{"content":"`true` if the message was reflected; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the message was reflected; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was reflected; otherwise, `false`."}],"pos":[819176,819235],"yaml":true},{"content":"Forces the control to invalidate its client area and immediately redraw itself and any child controls.","nodes":[{"pos":[0,102],"content":"Forces the control to invalidate its client area and immediately redraw itself and any child controls.","nodes":[{"content":"Forces the control to invalidate its client area and immediately redraw itself and any child controls.","pos":[0,102]}]}],"pos":[820204,820307],"yaml":true},{"content":"Gets or sets the window region associated with the control.","nodes":[{"pos":[0,59],"content":"Gets or sets the window region associated with the control.","nodes":[{"content":"Gets or sets the window region associated with the control.","pos":[0,59]}]}],"pos":[821316,821376],"yaml":true},{"content":"The window region is a collection of pixels within the window where the operating system permits drawing. The operating system does not display any portion of a window that lies outside of the window region. The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.  \n  \n> [!NOTE]\n>  The collection of pixels contained with the region can be noncontiguous.","nodes":[{"pos":[0,335],"content":"The window region is a collection of pixels within the window where the operating system permits drawing. The operating system does not display any portion of a window that lies outside of the window region. The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.","nodes":[{"content":"The window region is a collection of pixels within the window where the operating system permits drawing. The operating system does not display any portion of a window that lies outside of the window region. The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.","pos":[0,335],"nodes":[{"content":"The window region is a collection of pixels within the window where the operating system permits drawing.","pos":[0,105]},{"content":"The operating system does not display any portion of a window that lies outside of the window region.","pos":[106,207]},{"content":"The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.","pos":[208,335]}]}]},{"pos":[343,426],"content":"[!NOTE]\n The collection of pixels contained with the region can be noncontiguous.","leadings":["","> "],"nodes":[{"content":"The collection of pixels contained with the region can be noncontiguous.","pos":[9,81]}]}],"pos":[821387,821819],"yaml":true,"extradata":"MT"},{"content":"The window <xref href=\"System.Drawing.Region\"></xref> associated with the control.","nodes":[{"pos":[0,82],"content":"The window <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Region\"&gt;&lt;/xref&gt;</ph> associated with the control.","source":"The window <xref href=\"System.Drawing.Region\"></xref> associated with the control."}],"pos":[822868,822951],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Region\"></xref> property changes.","nodes":[{"pos":[0,103],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Region\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Region\"></xref> property changes."}],"pos":[823989,824093],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[824104,824255],"yaml":true,"extradata":"MT"},{"content":"This property is now obsolete.","nodes":[{"pos":[0,30],"content":"This property is now obsolete.","nodes":[{"content":"This property is now obsolete.","pos":[0,30]}]}],"pos":[826638,826669],"yaml":true},{"content":"`true` if the control is rendered from right to left; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,97],"content":"`true` if the control is rendered from right to left; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the control is rendered from right to left; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` if the control is rendered from right to left; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[74,97],"source":" The default is `false`."}]}],"pos":[826941,827041],"yaml":true},{"content":"Provides constants for rescaling the control when a DPI change occurs.","nodes":[{"pos":[0,70],"content":"Provides constants for rescaling the control when a DPI change occurs.","nodes":[{"content":"Provides constants for rescaling the control when a DPI change occurs.","pos":[0,70]}]}],"pos":[828252,828323],"yaml":true},{"content":"The DPI value prior to the change.","nodes":[{"pos":[0,34],"content":"The DPI value prior to the change.","nodes":[{"content":"The DPI value prior to the change.","pos":[0,34]}]}],"pos":[828569,828604],"yaml":true},{"content":"The DPI value after the change.","nodes":[{"pos":[0,31],"content":"The DPI value after the change.","nodes":[{"content":"The DPI value after the change.","pos":[0,31]}]}],"pos":[828671,828703],"yaml":true},{"content":"Resets the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property to its default value.","nodes":[{"pos":[0,101],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackColor\"&gt;&lt;/xref&gt;</ph> property to its default value.","source":"Resets the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property to its default value."}],"pos":[829465,829567],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[829578,829622],"yaml":true,"extradata":"MT"},{"content":"Causes a control bound to the <xref href=\"System.Windows.Forms.BindingSource\"></xref> to reread all the items in the list and refresh their displayed values.","nodes":[{"pos":[0,157],"content":"Causes a control bound to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BindingSource\"&gt;&lt;/xref&gt;</ph> to reread all the items in the list and refresh their displayed values.","source":"Causes a control bound to the <xref href=\"System.Windows.Forms.BindingSource\"></xref> to reread all the items in the list and refresh their displayed values."}],"pos":[830708,830866],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[830877,830921],"yaml":true,"extradata":"MT"},{"content":"Resets the <xref href=\"System.Windows.Forms.Control.Cursor\"></xref> property to its default value.","nodes":[{"pos":[0,98],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Cursor\"&gt;&lt;/xref&gt;</ph> property to its default value.","source":"Resets the <xref href=\"System.Windows.Forms.Control.Cursor\"></xref> property to its default value."}],"pos":[831985,832084],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[832095,832139],"yaml":true,"extradata":"MT"},{"content":"Resets the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property to its default value.","nodes":[{"pos":[0,96],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Font\"&gt;&lt;/xref&gt;</ph> property to its default value.","source":"Resets the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property to its default value."}],"pos":[833195,833292],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[833303,833347],"yaml":true,"extradata":"MT"},{"content":"Resets the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property to its default value.","nodes":[{"pos":[0,101],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ForeColor\"&gt;&lt;/xref&gt;</ph> property to its default value.","source":"Resets the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property to its default value."}],"pos":[834429,834531],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[834542,834586],"yaml":true,"extradata":"MT"},{"content":"Resets the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property to its default value.","nodes":[{"pos":[0,99],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ImeMode\"&gt;&lt;/xref&gt;</ph> property to its default value.","source":"Resets the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property to its default value."}],"pos":[835666,835766],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[835777,835821],"yaml":true,"extradata":"MT"},{"content":"Resets the control to handle the <xref href=\"System.Windows.Forms.Control.MouseLeave\"></xref> event.","nodes":[{"pos":[0,100],"content":"Resets the control to handle the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseLeave\"&gt;&lt;/xref&gt;</ph> event.","source":"Resets the control to handle the <xref href=\"System.Windows.Forms.Control.MouseLeave\"></xref> event."}],"pos":[836931,837032],"yaml":true},{"content":"Resets the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property to its default value.","nodes":[{"pos":[0,103],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.RightToLeft\"&gt;&lt;/xref&gt;</ph> property to its default value.","source":"Resets the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property to its default value."}],"pos":[838119,838223],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[838234,838278],"yaml":true,"extradata":"MT"},{"content":"Resets the <xref href=\"System.Windows.Forms.Control.Text\"></xref> property to its default value.","nodes":[{"pos":[0,96],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Text\"&gt;&lt;/xref&gt;</ph> property to its default value.","source":"Resets the <xref href=\"System.Windows.Forms.Control.Text\"></xref> property to its default value."}],"pos":[839344,839441],"yaml":true},{"content":"You typically use this method if you are either creating a designer for the <xref:System.Windows.Forms.Control> or creating your own control incorporating the <xref:System.Windows.Forms.Control>.","nodes":[{"pos":[0,195],"content":"You typically use this method if you are either creating a designer for the <xref:System.Windows.Forms.Control> or creating your own control incorporating the <xref:System.Windows.Forms.Control>.","nodes":[{"content":"You typically use this method if you are either creating a designer for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> or creating your own control incorporating the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph>.","pos":[0,195],"source":"You typically use this method if you are either creating a designer for the <xref:System.Windows.Forms.Control> or creating your own control incorporating the <xref:System.Windows.Forms.Control>."}]}],"pos":[839452,839648],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control is resized.","nodes":[{"pos":[0,35],"content":"Occurs when the control is resized.","nodes":[{"content":"Occurs when the control is resized.","pos":[0,35]}]}],"pos":[840658,840694],"yaml":true},{"content":"To determine the <xref:System.Windows.Forms.Control.Size%2A> of the resized control, you can cast the `sender` parameter of the registered <xref:System.Windows.Forms.ControlEventHandler> method  to a <xref:System.Windows.Forms.Control> and get its <xref:System.Windows.Forms.Control.Size%2A> property (or <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually).  \n  \n To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event. The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,425],"content":"To determine the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the resized control, you can cast the <ph id=\"ph2\">`sender`</ph> parameter of the registered <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ControlEventHandler&gt;</ph> method  to a <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control&gt;</ph> and get its <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property (or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties individually).","source":"To determine the <xref:System.Windows.Forms.Control.Size%2A> of the resized control, you can cast the `sender` parameter of the registered <xref:System.Windows.Forms.ControlEventHandler> method  to a <xref:System.Windows.Forms.Control> and get its <xref:System.Windows.Forms.Control.Size%2A> property (or <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually)."},{"pos":[432,750],"content":"To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event. The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control.","nodes":[{"content":"To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event. The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control.","pos":[0,318],"nodes":[{"content":"To handle custom layouts, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event instead of the Resize event.","pos":[0,111],"source":"To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised in response to a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event, but also in response to other changes that affect the layout of the control.","pos":[112,318],"source":" The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control."}]}]},{"pos":[757,907],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[840705,841619],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the control redraws itself when resized.","nodes":[{"pos":[0,80],"content":"Gets or sets a value indicating whether the control redraws itself when resized.","nodes":[{"content":"Gets or sets a value indicating whether the control redraws itself when resized.","pos":[0,80]}]}],"pos":[843549,843630],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.ResizeRedraw%2A> property value is equivalent to the return value of the <xref:System.Windows.Forms.Control.GetStyle%2A> method when passing in the <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> value as a parameter.","nodes":[{"pos":[0,275],"content":"The <xref:System.Windows.Forms.Control.ResizeRedraw%2A> property value is equivalent to the return value of the <xref:System.Windows.Forms.Control.GetStyle%2A> method when passing in the <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> value as a parameter.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ResizeRedraw%2A&gt;</ph> property value is equivalent to the return value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method when passing in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=fullName&gt;</ph> value as a parameter.","pos":[0,275],"source":"The <xref:System.Windows.Forms.Control.ResizeRedraw%2A> property value is equivalent to the return value of the <xref:System.Windows.Forms.Control.GetStyle%2A> method when passing in the <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> value as a parameter."}]}],"pos":[843641,843917],"yaml":true,"extradata":"MT"},{"content":"`true` if the control redraws itself when resized; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the control redraws itself when resized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control redraws itself when resized; otherwise, `false`."}],"pos":[844040,844113],"yaml":true},{"content":"Resumes usual layout logic.","nodes":[{"pos":[0,27],"content":"Resumes usual layout logic.","nodes":[{"content":"Resumes usual layout logic.","pos":[0,27]}]}],"pos":[845071,845099],"yaml":true},{"content":"Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.  \n  \n The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.  \n  \n There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.","nodes":[{"pos":[0,139],"content":"Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method forces an immediate layout if there are any pending layout requests.","pos":[0,139],"source":"Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests."}]},{"pos":[146,855],"content":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.","pos":[0,709],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.","pos":[0,263],"source":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control."},{"content":"For example, you would typically call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.","pos":[264,709],"source":" For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect."}]}]},{"pos":[862,1031],"content":"There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.","nodes":[{"content":"There must be no pending calls to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.","pos":[0,169],"source":"There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called."}]}],"pos":[845110,846148],"yaml":true,"extradata":"MT"},{"content":"Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.","nodes":[{"pos":[0,94],"content":"Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.","nodes":[{"content":"Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.","pos":[0,94]}]}],"pos":[847989,848084],"yaml":true},{"content":"Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests. When the `performLayout` parameter is set to `true`, an immediate layout occurs if there are any pending layout requests.  \n  \n The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.  \n  \n There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.  \n  \n> [!NOTE]\n>  When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. This will increase the performance of applications with many controls.","nodes":[{"pos":[0,261],"content":"Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests. When the `performLayout` parameter is set to `true`, an immediate layout occurs if there are any pending layout requests.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method forces an immediate layout if there are any pending layout requests.","pos":[0,139],"source":"Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests."},{"content":"When the <ph id=\"ph1\">`performLayout`</ph> parameter is set to <ph id=\"ph2\">`true`</ph>, an immediate layout occurs if there are any pending layout requests.","pos":[140,261],"source":" When the `performLayout` parameter is set to `true`, an immediate layout occurs if there are any pending layout requests."}]},{"pos":[268,977],"content":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.","pos":[0,709],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.","pos":[0,263],"source":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control."},{"content":"For example, you would typically call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.","pos":[264,709],"source":" For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect."}]}]},{"pos":[984,1153],"content":"There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.","nodes":[{"content":"There must be no pending calls to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.","pos":[0,169],"source":"There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called."}]},{"pos":[1161,1552],"content":"[!NOTE]\n When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. This will increase the performance of applications with many controls.","leadings":["","> "],"nodes":[{"content":" When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. This will increase the performance of applications with many controls.","pos":[8,389],"nodes":[{"content":"When adding several controls to a parent control, it is recommended that you call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.","pos":[1,192],"source":" When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added."},{"content":"After adding the controls to the parent control, call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.","pos":[193,310],"source":" After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method."},{"content":"This will increase the performance of applications with many controls.","pos":[311,381]}]}]}],"pos":[848095,849657],"yaml":true,"extradata":"MT"},{"content":"`true` to execute pending layout requests; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> to execute pending layout requests; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to execute pending layout requests; otherwise, `false`."}],"pos":[849813,849878],"yaml":true},{"content":"Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.","nodes":[{"pos":[0,117],"content":"Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.","nodes":[{"content":"Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.","pos":[0,117]}]}],"pos":[850812,850930],"yaml":true},{"content":"The value of the <xref:System.Windows.Forms.Control.Right%2A> property is equal to the sum of the <xref:System.Windows.Forms.Control.Left%2A> property value and the <xref:System.Windows.Forms.Control.Width%2A> property value.  \n  \n The <xref:System.Windows.Forms.Control.Right%2A> property is read-only. You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.","nodes":[{"pos":[0,225],"content":"The value of the <xref:System.Windows.Forms.Control.Right%2A> property is equal to the sum of the <xref:System.Windows.Forms.Control.Left%2A> property value and the <xref:System.Windows.Forms.Control.Width%2A> property value.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property is equal to the sum of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property value and the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> property value.","pos":[0,225],"source":"The value of the <xref:System.Windows.Forms.Control.Right%2A> property is equal to the sum of the <xref:System.Windows.Forms.Control.Left%2A> property value and the <xref:System.Windows.Forms.Control.Width%2A> property value."}]},{"pos":[232,722],"content":"The <xref:System.Windows.Forms.Control.Right%2A> property is read-only. You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Right%2A> property is read-only. You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.","pos":[0,490],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property is read-only.","pos":[0,71],"source":"The <xref:System.Windows.Forms.Control.Right%2A> property is read-only."},{"content":"You can change this property value indirectly by changing the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties or calling the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> methods.","pos":[72,490],"source":" You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods."}]}]}],"pos":[850941,851668],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.","nodes":[{"pos":[0,162],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.","source":"An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area."}],"pos":[852999,853162],"yaml":true},{"content":"Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.","nodes":[{"pos":[0,116],"content":"Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.","nodes":[{"content":"Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.","pos":[0,116]}]}],"pos":[854168,854285],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.  \n  \n The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic. When this property is set to <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>, control elements that include text are displayed from right to left.  \n  \n> [!NOTE]\n>  If the value of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed at run time, only raw text without formatting is preserved.  \n  \n The following are a few examples of how control elements are affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property value of <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName> :  \n  \n-   Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, multiline <xref:System.Windows.Forms.TextBox>, and <xref:System.Windows.Forms.RichTextBox>).  \n  \n-   Horizontal scroll bars start with the scroll box (thumb) right-aligned.  \n  \n-   The check box element alignment, controlled by the `CheckAlign` property, is reversed for <xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls.  \n  \n-   Items in list box, combo box, and up-down controls are right aligned.  \n  \n-   Up and down buttons are left-aligned on <xref:System.Windows.Forms.NumericUpDown> and <xref:System.Windows.Forms.DomainUpDown> controls.  \n  \n-   Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu>) are displayed right-aligned.  \n  \n-   The alignment of toolbar buttons on a <xref:System.Windows.Forms.ToolBar> control or the alignment of text on a <xref:System.Windows.Forms.ToolBarButton> is not affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.  \n  \n-   <xref:System.Windows.Forms.AxHost> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.","nodes":[{"pos":[0,528],"content":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.","pos":[0,528],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is an ambient property.","pos":[0,87],"source":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property."},{"content":"An ambient property is a control property that, if not set, is retrieved from the parent control.","pos":[88,185]},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.","pos":[186,362],"source":" For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default."},{"content":"For more information about ambient properties, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.","pos":[363,528],"source":" For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview."}]}]},{"pos":[535,877],"content":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic. When this property is set to <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>, control elements that include text are displayed from right to left.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic. When this property is set to <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>, control elements that include text are displayed from right to left.","pos":[0,342],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic.","pos":[0,178],"source":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic."},{"content":"When this property is set to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RightToLeft?displayProperty=fullName&gt;</ph>, control elements that include text are displayed from right to left.","pos":[179,342],"source":" When this property is set to <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>, control elements that include text are displayed from right to left."}]}]},{"pos":[885,1046],"content":"[!NOTE]\n If the value of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed at run time, only raw text without formatting is preserved.","leadings":["","> "],"nodes":[{"content":"If the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is changed at run time, only raw text without formatting is preserved.","pos":[9,159],"source":" If the value of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed at run time, only raw text without formatting is preserved."}]},{"pos":[1053,1265],"content":"The following are a few examples of how control elements are affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property value of <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName> :","nodes":[{"content":"The following are a few examples of how control elements are affected by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property value of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RightToLeft?displayProperty=fullName&gt;</ph> :","pos":[0,212],"source":"The following are a few examples of how control elements are affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property value of <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName> :"}]},{"pos":[1275,1548],"content":"Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, multiline <xref:System.Windows.Forms.TextBox>, and <xref:System.Windows.Forms.RichTextBox>).","nodes":[{"content":"Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, multiline <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>).","pos":[0,273],"source":"Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, multiline <xref:System.Windows.Forms.TextBox>, and <xref:System.Windows.Forms.RichTextBox>)."}]},{"pos":[1558,1629],"content":"Horizontal scroll bars start with the scroll box (thumb) right-aligned.","nodes":[{"content":"Horizontal scroll bars start with the scroll box (thumb) right-aligned.","pos":[0,71]}]},{"pos":[1639,1819],"content":"The check box element alignment, controlled by the <ph id=\"ph1\">`CheckAlign`</ph> property, is reversed for <ph id=\"ph2\">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls.","source":"The check box element alignment, controlled by the `CheckAlign` property, is reversed for <xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls."},{"pos":[1829,1898],"content":"Items in list box, combo box, and up-down controls are right aligned.","nodes":[{"content":"Items in list box, combo box, and up-down controls are right aligned.","pos":[0,69]}]},{"pos":[1908,2044],"content":"Up and down buttons are left-aligned on <xref:System.Windows.Forms.NumericUpDown> and <xref:System.Windows.Forms.DomainUpDown> controls.","nodes":[{"content":"Up and down buttons are left-aligned on <ph id=\"ph1\">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph> controls.","pos":[0,136],"source":"Up and down buttons are left-aligned on <xref:System.Windows.Forms.NumericUpDown> and <xref:System.Windows.Forms.DomainUpDown> controls."}]},{"pos":[2054,2210],"content":"Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu>) are displayed right-aligned.","nodes":[{"content":"Menus (<ph id=\"ph1\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>) are displayed right-aligned.","pos":[0,156],"source":"Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu>) are displayed right-aligned."}]},{"pos":[2220,2457],"content":"The alignment of toolbar buttons on a <xref:System.Windows.Forms.ToolBar> control or the alignment of text on a <xref:System.Windows.Forms.ToolBarButton> is not affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.","nodes":[{"content":"The alignment of toolbar buttons on a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control or the alignment of text on a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ToolBarButton&gt;</ph> is not affected by the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property.","pos":[0,237],"source":"The alignment of toolbar buttons on a <xref:System.Windows.Forms.ToolBar> control or the alignment of text on a <xref:System.Windows.Forms.ToolBarButton> is not affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property."}]},{"pos":[2467,2674],"content":"<xref:System.Windows.Forms.AxHost> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.","pos":[0,207],"source":"<xref:System.Windows.Forms.AxHost> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display."}]}],"pos":[854296,856996],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values. The default is <xref href=\"System.Windows.Forms.RightToLeft.Inherit\"></xref>.","nodes":[{"pos":[0,150],"content":"One of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values. The default is <xref href=\"System.Windows.Forms.RightToLeft.Inherit\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.RightToLeft\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,72],"source":"One of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.RightToLeft.Inherit\"&gt;&lt;/xref&gt;</ph>.","pos":[73,150],"source":" The default is <xref href=\"System.Windows.Forms.RightToLeft.Inherit\"></xref>."}]}],"pos":[857169,857320],"yaml":true},{"content":"The assigned value is not one of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values.","nodes":[{"pos":[0,98],"content":"The assigned value is not one of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.RightToLeft\"&gt;&lt;/xref&gt;</ph> values.","source":"The assigned value is not one of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values."}],"pos":[857534,857633],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property value changes.","nodes":[{"pos":[0,101],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.RightToLeft\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property value changes."}],"pos":[858565,858667],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,157],"content":"This event is raised if the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,157],"source":"This event is raised if the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[164,314],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[858678,858997],"yaml":true,"extradata":"MT"},{"content":"Converts the specified <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to support right-to-left text.","nodes":[{"pos":[0,194],"content":"Converts the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;&lt;/xref&gt;</ph> to the appropriate <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;&lt;/xref&gt;</ph> to support right-to-left text.","source":"Converts the specified <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to support right-to-left text."}],"pos":[861842,862037],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.","nodes":[{"pos":[0,187],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id=\"ph3\">`No`</ph>, the return value is equal to the <ph id=\"ph4\">`align`</ph> parameter passed in.","source":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in."}],"pos":[862048,862236],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values.","nodes":[{"pos":[0,79],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values."}],"pos":[862483,862563],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values.","nodes":[{"pos":[0,79],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values."}],"pos":[862646,862726],"yaml":true},{"content":"Converts the specified <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to support right-to-left text.","nodes":[{"pos":[0,196],"content":"Converts the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;&lt;/xref&gt;</ph> to the appropriate <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;&lt;/xref&gt;</ph> to support right-to-left text.","source":"Converts the specified <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to support right-to-left text."}],"pos":[863969,864166],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.","nodes":[{"pos":[0,187],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id=\"ph3\">`No`</ph>, the return value is equal to the <ph id=\"ph4\">`align`</ph> parameter passed in.","source":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in."}],"pos":[864177,864365],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.","nodes":[{"pos":[0,80],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values."}],"pos":[864615,864696],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.","nodes":[{"pos":[0,80],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values."}],"pos":[864780,864861],"yaml":true},{"content":"Converts the specified <xref href=\"System.Drawing.ContentAlignment\"></xref> to the appropriate <xref href=\"System.Drawing.ContentAlignment\"></xref> to support right-to-left text.","nodes":[{"pos":[0,178],"content":"Converts the specified <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;&lt;/xref&gt;</ph> to the appropriate <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;&lt;/xref&gt;</ph> to support right-to-left text.","source":"Converts the specified <xref href=\"System.Drawing.ContentAlignment\"></xref> to the appropriate <xref href=\"System.Drawing.ContentAlignment\"></xref> to support right-to-left text."}],"pos":[866068,866247],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.","nodes":[{"pos":[0,187],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id=\"ph3\">`No`</ph>, the return value is equal to the <ph id=\"ph4\">`align`</ph> parameter passed in.","source":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in."}],"pos":[866258,866446],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.","nodes":[{"pos":[0,71],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."}],"pos":[866669,866741],"yaml":true},{"content":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.","nodes":[{"pos":[0,71],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."}],"pos":[866816,866888],"yaml":true},{"content":"Converts the specified <xref href=\"System.Drawing.ContentAlignment\"></xref> to the appropriate <xref href=\"System.Drawing.ContentAlignment\"></xref> to support right-to-left text.","nodes":[{"pos":[0,178],"content":"Converts the specified <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;&lt;/xref&gt;</ph> to the appropriate <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;&lt;/xref&gt;</ph> to support right-to-left text.","source":"Converts the specified <xref href=\"System.Drawing.ContentAlignment\"></xref> to the appropriate <xref href=\"System.Drawing.ContentAlignment\"></xref> to support right-to-left text."}],"pos":[868083,868262],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.","nodes":[{"pos":[0,187],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id=\"ph3\">`No`</ph>, the return value is equal to the <ph id=\"ph4\">`align`</ph> parameter passed in.","source":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in."}],"pos":[868273,868461],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.","nodes":[{"pos":[0,71],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."}],"pos":[868682,868754],"yaml":true},{"content":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.","nodes":[{"pos":[0,71],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ContentAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values."}],"pos":[868829,868901],"yaml":true},{"content":"Converts the specified <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to support right-to-left text.","nodes":[{"pos":[0,196],"content":"Converts the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;&lt;/xref&gt;</ph> to the appropriate <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;&lt;/xref&gt;</ph> to support right-to-left text.","source":"Converts the specified <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to support right-to-left text."}],"pos":[870148,870345],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.","nodes":[{"pos":[0,187],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id=\"ph3\">`No`</ph>, the return value is equal to the <ph id=\"ph4\">`align`</ph> parameter passed in.","source":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in."}],"pos":[870356,870544],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.","nodes":[{"pos":[0,80],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values."}],"pos":[870795,870876],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.","nodes":[{"pos":[0,80],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values."}],"pos":[870960,871041],"yaml":true},{"content":"Converts the specified <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to support right-to-left text.","nodes":[{"pos":[0,194],"content":"Converts the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;&lt;/xref&gt;</ph> to the appropriate <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;&lt;/xref&gt;</ph> to support right-to-left text.","source":"Converts the specified <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to support right-to-left text."}],"pos":[872279,872474],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.","nodes":[{"pos":[0,187],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id=\"ph3\">`No`</ph>, the return value is equal to the <ph id=\"ph4\">`align`</ph> parameter passed in.","source":"If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in."}],"pos":[872485,872673],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values.","nodes":[{"pos":[0,79],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values."}],"pos":[872920,873000],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values.","nodes":[{"pos":[0,79],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.LeftRightAlignment\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values."}],"pos":[873083,873163],"yaml":true},{"content":"Scales the control and all child controls by the specified scaling factor.","nodes":[{"pos":[0,74],"content":"Scales the control and all child controls by the specified scaling factor.","nodes":[{"content":"Scales the control and all child controls by the specified scaling factor.","pos":[0,74]}]}],"pos":[874208,874283],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Scale%2A> method scales the control by the specified scaling `factor`. It also recursively scales all child controls if the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`. Internally, this method calls <xref:System.Windows.Forms.Control.ScaleControl%2A> to scale each control.","nodes":[{"pos":[0,340],"content":"The <xref:System.Windows.Forms.Control.Scale%2A> method scales the control by the specified scaling `factor`. It also recursively scales all child controls if the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`. Internally, this method calls <xref:System.Windows.Forms.Control.ScaleControl%2A> to scale each control.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> method scales the control by the specified scaling <ph id=\"ph2\">`factor`</ph>.","pos":[0,109],"source":"The <xref:System.Windows.Forms.Control.Scale%2A> method scales the control by the specified scaling `factor`."},{"content":"It also recursively scales all child controls if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","pos":[110,235],"source":" It also recursively scales all child controls if the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`."},{"content":"Internally, this method calls <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> to scale each control.","pos":[236,340],"source":" Internally, this method calls <xref:System.Windows.Forms.Control.ScaleControl%2A> to scale each control."}]}],"pos":[874294,874635],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.SizeF\"></xref> containing the horizontal and vertical scaling factors.","nodes":[{"pos":[0,99],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;&lt;/xref&gt;</ph> containing the horizontal and vertical scaling factors.","source":"A <xref href=\"System.Drawing.SizeF\"></xref> containing the horizontal and vertical scaling factors."}],"pos":[874792,874892],"yaml":true},{"content":"Scales the control and any child controls.","nodes":[{"pos":[0,42],"content":"Scales the control and any child controls.","nodes":[{"content":"Scales the control and any child controls.","pos":[0,42]}]}],"pos":[875903,875946],"yaml":true},{"content":"The ratio to use for scaling.","nodes":[{"pos":[0,29],"content":"The ratio to use for scaling.","nodes":[{"content":"The ratio to use for scaling.","pos":[0,29]}]}],"pos":[876237,876267],"yaml":true},{"content":"Scales the entire control and any child controls.","nodes":[{"pos":[0,49],"content":"Scales the entire control and any child controls.","nodes":[{"content":"Scales the entire control and any child controls.","pos":[0,49]}]}],"pos":[877376,877426],"yaml":true},{"content":"The horizontal scaling factor.","nodes":[{"pos":[0,30],"content":"The horizontal scaling factor.","nodes":[{"content":"The horizontal scaling factor.","pos":[0,30]}]}],"pos":[877721,877752],"yaml":true},{"content":"The vertical scaling factor.","nodes":[{"pos":[0,28],"content":"The vertical scaling factor.","nodes":[{"content":"The vertical scaling factor.","pos":[0,28]}]}],"pos":[877810,877839],"yaml":true},{"content":"Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.","nodes":[{"pos":[0,92],"content":"Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.","nodes":[{"content":"Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.","pos":[0,92]}]}],"pos":[879035,879128],"yaml":true},{"content":"The bitmap to scale.","nodes":[{"pos":[0,20],"content":"The bitmap to scale.","nodes":[{"content":"The bitmap to scale.","pos":[0,20]}]}],"pos":[879326,879347],"yaml":true},{"content":"Gets a value that determines the scaling of child controls.","nodes":[{"pos":[0,59],"content":"Gets a value that determines the scaling of child controls.","nodes":[{"content":"Gets a value that determines the scaling of child controls.","pos":[0,59]}]}],"pos":[880038,880098],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`, then the <xref:System.Windows.Forms.Control.Scale%2A> method will recursively call the <xref:System.Windows.Forms.Control.ScaleControl%2A> method of each of its child controls.  \n  \n The default implementation of <xref:System.Windows.Forms.Control.ScaleChildren%2A> always returns `true`. Derived classes can override <xref:System.Windows.Forms.Control.ScaleChildren%2A> to return `false` to indicate that scaling should not be performed on their children.","nodes":[{"pos":[0,256],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, then the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> method will recursively call the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> method of each of its child controls.","source":"If the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`, then the <xref:System.Windows.Forms.Control.Scale%2A> method will recursively call the <xref:System.Windows.Forms.Control.ScaleControl%2A> method of each of its child controls."},{"pos":[263,536],"content":"The default implementation of <xref:System.Windows.Forms.Control.ScaleChildren%2A> always returns `true`. Derived classes can override <xref:System.Windows.Forms.Control.ScaleChildren%2A> to return `false` to indicate that scaling should not be performed on their children.","nodes":[{"content":"The default implementation of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> always returns <ph id=\"ph2\">`true`</ph>.","pos":[0,105],"source":"The default implementation of <xref:System.Windows.Forms.Control.ScaleChildren%2A> always returns `true`."},{"content":"Derived classes can override <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> to return <ph id=\"ph2\">`false`</ph> to indicate that scaling should not be performed on their children.","pos":[106,273],"source":" Derived classes can override <xref:System.Windows.Forms.Control.ScaleChildren%2A> to return `false` to indicate that scaling should not be performed on their children."}]}],"pos":[880109,880650],"yaml":true,"extradata":"MT"},{"content":"`true` if child controls will be scaled when the <xref href=\"System.Windows.Forms.Control.Scale(System.Single)\"></xref> method on this control is called; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,196],"content":"`true` if child controls will be scaled when the <xref href=\"System.Windows.Forms.Control.Scale(System.Single)\"></xref> method on this control is called; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if child controls will be scaled when the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Scale(System.Single)\"&gt;&lt;/xref&gt;</ph> method on this control is called; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,173],"source":"`true` if child controls will be scaled when the <xref href=\"System.Windows.Forms.Control.Scale(System.Single)\"></xref> method on this control is called; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[174,196],"source":" The default is `true`."}]}],"pos":[880777,880976],"yaml":true},{"content":"Scales a control's location, size, padding and margin.","nodes":[{"pos":[0,54],"content":"Scales a control's location, size, padding and margin.","nodes":[{"content":"Scales a control's location, size, padding and margin.","pos":[0,54]}]}],"pos":[882217,882272],"yaml":true},{"content":"If the control is top level, this will not scale the control's location. This does not scale children or the size of automatically sized controls. You can omit scaling in any direction by changing the value of the `specified` parameter.","nodes":[{"pos":[0,236],"content":"If the control is top level, this will not scale the control's location. This does not scale children or the size of automatically sized controls. You can omit scaling in any direction by changing the value of the `specified` parameter.","nodes":[{"content":"If the control is top level, this will not scale the control's location.","pos":[0,72]},{"content":"This does not scale children or the size of automatically sized controls.","pos":[73,146]},{"content":"You can omit scaling in any direction by changing the value of the <ph id=\"ph1\">`specified`</ph> parameter.","pos":[147,236],"source":" You can omit scaling in any direction by changing the value of the `specified` parameter."}]}],"pos":[882283,882520],"yaml":true,"extradata":"MT"},{"content":"The factor by which the height and width of the control will be scaled.","nodes":[{"pos":[0,71],"content":"The factor by which the height and width of the control will be scaled.","nodes":[{"content":"The factor by which the height and width of the control will be scaled.","pos":[0,71]}]}],"pos":[882981,883053],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> value that specifies the bounds of the control to use when defining its size and position.","nodes":[{"pos":[0,150],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BoundsSpecified\"&gt;&lt;/xref&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.","source":"A <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> value that specifies the bounds of the control to use when defining its size and position."}],"pos":[883141,883292],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[884400,884444],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[884455,884499],"yaml":true,"extradata":"MT"},{"content":"The horizontal scaling factor.","nodes":[{"pos":[0,30],"content":"The horizontal scaling factor.","nodes":[{"content":"The horizontal scaling factor.","pos":[0,30]}]}],"pos":[884651,884682],"yaml":true},{"content":"The vertical scaling factor.","nodes":[{"pos":[0,28],"content":"The vertical scaling factor.","nodes":[{"content":"The vertical scaling factor.","pos":[0,28]}]}],"pos":[884740,884769],"yaml":true},{"content":"Activates a child control. Optionally specifies the direction in the tab order to select the control from.","nodes":[{"pos":[0,106],"content":"Activates a child control. Optionally specifies the direction in the tab order to select the control from.","nodes":[{"content":"Activates a child control. Optionally specifies the direction in the tab order to select the control from.","pos":[0,106],"nodes":[{"content":"Activates a child control.","pos":[0,26]},{"content":"Optionally specifies the direction in the tab order to select the control from.","pos":[27,106]}]}]}],"pos":[885868,885975],"yaml":true},{"content":"The `directed` and `forward` parameters are used by container-style controls. When the `directed` parameter is set to `true`, the `forward` parameter is evaluated to determine which control to select. When `forward` is set to `true`, the next control in the tab order is selected; when `false`, the previous control in the tab order is selected.  \n  \n The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.  \n  \n The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  \n  \n-   <xref:System.Windows.Forms.Label>  \n  \n-   <xref:System.Windows.Forms.Panel>  \n  \n-   <xref:System.Windows.Forms.GroupBox>  \n  \n-   <xref:System.Windows.Forms.PictureBox>  \n  \n-   <xref:System.Windows.Forms.ProgressBar>  \n  \n-   <xref:System.Windows.Forms.Splitter>  \n  \n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)","nodes":[{"pos":[0,345],"content":"The `directed` and `forward` parameters are used by container-style controls. When the `directed` parameter is set to `true`, the `forward` parameter is evaluated to determine which control to select. When `forward` is set to `true`, the next control in the tab order is selected; when `false`, the previous control in the tab order is selected.","nodes":[{"content":"The <ph id=\"ph1\">`directed`</ph> and <ph id=\"ph2\">`forward`</ph> parameters are used by container-style controls.","pos":[0,77],"source":"The `directed` and `forward` parameters are used by container-style controls."},{"content":"When the <ph id=\"ph1\">`directed`</ph> parameter is set to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">`forward`</ph> parameter is evaluated to determine which control to select.","pos":[78,200],"source":" When the `directed` parameter is set to `true`, the `forward` parameter is evaluated to determine which control to select."},{"content":"When <ph id=\"ph1\">`forward`</ph> is set to <ph id=\"ph2\">`true`</ph>, the next control in the tab order is selected; when <ph id=\"ph3\">`false`</ph>, the previous control in the tab order is selected.","pos":[201,345],"source":" When `forward` is set to `true`, the next control in the tab order is selected; when `false`, the previous control in the tab order is selected."}]},{"pos":[352,627],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method activates the control if the control's <ph id=\"ph2\">`Selectable`</ph> style bit is set to <ph id=\"ph3\">`true`</ph> in <ph id=\"ph4\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.","source":"The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled."},{"pos":[634,774],"content":"The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.","nodes":[{"content":"The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.","pos":[0,140],"nodes":[{"content":"The Windows Forms controls in the following list are not selectable.","pos":[0,68]},{"content":"Controls derived from controls in the list will also not be selectable.","pos":[69,140]}]}]},{"pos":[784,817],"content":"<xref:System.Windows.Forms.Label>","nodes":[]},{"pos":[827,860],"content":"<xref:System.Windows.Forms.Panel>","nodes":[]},{"pos":[870,906],"content":"<xref:System.Windows.Forms.GroupBox>","nodes":[]},{"pos":[916,954],"content":"<xref:System.Windows.Forms.PictureBox>","nodes":[]},{"pos":[964,1003],"content":"<xref:System.Windows.Forms.ProgressBar>","nodes":[]},{"pos":[1013,1049],"content":"<xref:System.Windows.Forms.Splitter>","nodes":[]},{"pos":[1059,1143],"content":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)","pos":[0,84],"source":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)"}]}],"pos":[885986,887150],"yaml":true,"extradata":"MT"},{"content":"`true` to specify the direction of the control to select; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> to specify the direction of the control to select; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to specify the direction of the control to select; otherwise, `false`."}],"pos":[887315,887395],"yaml":true},{"content":"`true` to move forward in the tab order; `false` to move backward in the tab order.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> to move forward in the tab order; <ph id=\"ph2\">`false`</ph> to move backward in the tab order.","source":"`true` to move forward in the tab order; `false` to move backward in the tab order."}],"pos":[887459,887545],"yaml":true},{"content":"Activates the control.","nodes":[{"pos":[0,22],"content":"Activates the control.","nodes":[{"content":"Activates the control.","pos":[0,22]}]}],"pos":[888483,888506],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.  \n  \n The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  \n  \n-   <xref:System.Windows.Forms.Label>  \n  \n-   <xref:System.Windows.Forms.Panel>  \n  \n-   <xref:System.Windows.Forms.GroupBox>  \n  \n-   <xref:System.Windows.Forms.PictureBox>  \n  \n-   <xref:System.Windows.Forms.ProgressBar>  \n  \n-   <xref:System.Windows.Forms.Splitter>  \n  \n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)","nodes":[{"pos":[0,275],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method activates the control if the control's <ph id=\"ph2\">`Selectable`</ph> style bit is set to <ph id=\"ph3\">`true`</ph> in <ph id=\"ph4\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.","source":"The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled."},{"pos":[282,422],"content":"The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.","nodes":[{"content":"The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.","pos":[0,140],"nodes":[{"content":"The Windows Forms controls in the following list are not selectable.","pos":[0,68]},{"content":"Controls derived from controls in the list will also not be selectable.","pos":[69,140]}]}]},{"pos":[432,465],"content":"<xref:System.Windows.Forms.Label>","nodes":[]},{"pos":[475,508],"content":"<xref:System.Windows.Forms.Panel>","nodes":[]},{"pos":[518,554],"content":"<xref:System.Windows.Forms.GroupBox>","nodes":[]},{"pos":[564,602],"content":"<xref:System.Windows.Forms.PictureBox>","nodes":[]},{"pos":[612,651],"content":"<xref:System.Windows.Forms.ProgressBar>","nodes":[]},{"pos":[661,697],"content":"<xref:System.Windows.Forms.Splitter>","nodes":[]},{"pos":[707,791],"content":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)","pos":[0,84],"source":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)"}]}],"pos":[888517,889327],"yaml":true,"extradata":"MT"},{"content":"Activates the next control.","nodes":[{"pos":[0,27],"content":"Activates the next control.","nodes":[{"content":"Activates the next control.","pos":[0,27]}]}],"pos":[891378,891406],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.SelectNextControl%2A> method activates the next control in the tab order if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.  \n  \n The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  \n  \n-   <xref:System.Windows.Forms.Label>  \n  \n-   <xref:System.Windows.Forms.Panel>  \n  \n-   <xref:System.Windows.Forms.GroupBox>  \n  \n-   <xref:System.Windows.Forms.PictureBox>  \n  \n-   <xref:System.Windows.Forms.ProgressBar>  \n  \n-   <xref:System.Windows.Forms.Splitter>  \n  \n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)  \n  \n When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.","nodes":[{"pos":[0,308],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method activates the next control in the tab order if the control's <ph id=\"ph2\">`Selectable`</ph> style bit is set to <ph id=\"ph3\">`true`</ph> in <ph id=\"ph4\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.","source":"The <xref:System.Windows.Forms.Control.SelectNextControl%2A> method activates the next control in the tab order if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled."},{"pos":[315,455],"content":"The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.","nodes":[{"content":"The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.","pos":[0,140],"nodes":[{"content":"The Windows Forms controls in the following list are not selectable.","pos":[0,68]},{"content":"Controls derived from controls in the list will also not be selectable.","pos":[69,140]}]}]},{"pos":[465,498],"content":"<xref:System.Windows.Forms.Label>","nodes":[]},{"pos":[508,541],"content":"<xref:System.Windows.Forms.Panel>","nodes":[]},{"pos":[551,587],"content":"<xref:System.Windows.Forms.GroupBox>","nodes":[]},{"pos":[597,635],"content":"<xref:System.Windows.Forms.PictureBox>","nodes":[]},{"pos":[645,684],"content":"<xref:System.Windows.Forms.ProgressBar>","nodes":[]},{"pos":[694,730],"content":"<xref:System.Windows.Forms.Splitter>","nodes":[]},{"pos":[740,824],"content":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)","pos":[0,84],"source":"<xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)"}]},{"pos":[831,1215],"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName&gt;</ph> property to the current form, focus events occur in the following order:","pos":[0,384],"source":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:"}]},{"pos":[1225,1266],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[1276,1320],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[1330,1371],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[1381,1427],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[1437,1482],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[1492,1537],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[1544,1758],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.","source":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed."}],"pos":[891417,893210],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> at which to start the search.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> at which to start the search.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> at which to start the search."}],"pos":[895157,895241],"yaml":true},{"content":"`true` to move forward in the tab order; `false` to move backward in the tab order.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> to move forward in the tab order; <ph id=\"ph2\">`false`</ph> to move backward in the tab order.","source":"`true` to move forward in the tab order; `false` to move backward in the tab order."}],"pos":[895305,895391],"yaml":true},{"content":"`true` to ignore the controls with the <xref href=\"System.Windows.Forms.Control.TabStop\"></xref> property set to `false`; otherwise, `false`.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> to ignore the controls with the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.TabStop\"&gt;&lt;/xref&gt;</ph> property set to <ph id=\"ph3\">`false`</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to ignore the controls with the <xref href=\"System.Windows.Forms.Control.TabStop\"></xref> property set to `false`; otherwise, `false`."}],"pos":[895459,895603],"yaml":true},{"content":"`true` to include nested (children of child controls) child controls; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> to include nested (children of child controls) child controls; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include nested (children of child controls) child controls; otherwise, `false`."}],"pos":[895666,895758],"yaml":true},{"content":"`true` to continue searching from the first control in the tab order after the last control has been reached; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to continue searching from the first control in the tab order after the last control has been reached; otherwise, `false`."}],"pos":[895819,895951],"yaml":true},{"content":"`true` if a control was activated; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if a control was activated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a control was activated; otherwise, `false`."}],"pos":[896009,896066],"yaml":true},{"content":"Sends the control to the back of the z-order.","nodes":[{"pos":[0,45],"content":"Sends the control to the back of the z-order.","nodes":[{"content":"Sends the control to the back of the z-order.","pos":[0,45]}]}],"pos":[897039,897085],"yaml":true},{"content":"The control is moved to the back of the z-order. If the control is a child of another control, the child control is moved to the back of the z-order. If the control is a top-level control, this method will not work correctly unless the control is active. A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control. An active control is a visible control that has input focus. To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control.","nodes":[{"pos":[0,628],"content":"The control is moved to the back of the z-order. If the control is a child of another control, the child control is moved to the back of the z-order. If the control is a top-level control, this method will not work correctly unless the control is active. A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control. An active control is a visible control that has input focus. To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control.","nodes":[{"content":"The control is moved to the back of the z-order. If the control is a child of another control, the child control is moved to the back of the z-order. If the control is a top-level control, this method will not work correctly unless the control is active. A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control. An active control is a visible control that has input focus. To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control.","pos":[0,628],"nodes":[{"content":"The control is moved to the back of the z-order.","pos":[0,48]},{"content":"If the control is a child of another control, the child control is moved to the back of the z-order.","pos":[49,149]},{"content":"If the control is a top-level control, this method will not work correctly unless the control is active.","pos":[150,254]},{"content":"A top-level control is a control, such as a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, that is not a child of another control.","pos":[255,372],"source":" A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control."},{"content":"An active control is a visible control that has input focus.","pos":[373,433]},{"content":"To use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph> method with an inactive, top-level control, first call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method on the control.","pos":[434,628],"source":" To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control."}]}]}],"pos":[897096,897725],"yaml":true,"extradata":"MT"},{"content":"Sets a value indicating how a control will behave when its <xref href=\"System.Windows.Forms.Control.AutoSize\"></xref> property is enabled.","nodes":[{"pos":[0,138],"content":"Sets a value indicating how a control will behave when its <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.AutoSize\"&gt;&lt;/xref&gt;</ph> property is enabled.","source":"Sets a value indicating how a control will behave when its <xref href=\"System.Windows.Forms.Control.AutoSize\"></xref> property is enabled."}],"pos":[898931,899070],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AutoSizeMode\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> values."}],"pos":[899262,899336],"yaml":true},{"content":"Sets the bounds of the control to the specified location and size.","nodes":[{"pos":[0,66],"content":"Sets the bounds of the control to the specified location and size.","nodes":[{"content":"Sets the bounds of the control to the specified location and size.","pos":[0,66]}]}],"pos":[900538,900605],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.","nodes":[{"pos":[0,93],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Left\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control."}],"pos":[900761,900855],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.","nodes":[{"pos":[0,92],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Top\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control."}],"pos":[900911,901004],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.","nodes":[{"pos":[0,94],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Width\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control."}],"pos":[901064,901159],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control.","nodes":[{"pos":[0,95],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Height\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control."}],"pos":[901220,901316],"yaml":true},{"content":"Sets the specified bounds of the control to the specified location and size.","nodes":[{"pos":[0,76],"content":"Sets the specified bounds of the control to the specified location and size.","nodes":[{"content":"Sets the specified bounds of the control to the specified location and size.","pos":[0,76]}]}],"pos":[902652,902729],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.","nodes":[{"pos":[0,93],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Left\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control."}],"pos":[903592,903686],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.","nodes":[{"pos":[0,92],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Top\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control."}],"pos":[903742,903835],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.","nodes":[{"pos":[0,94],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Width\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control."}],"pos":[903895,903990],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control.","nodes":[{"pos":[0,95],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Height\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control."}],"pos":[904051,904147],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values. For any parameter not specified, the current value will be used.","nodes":[{"pos":[0,159],"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values. For any parameter not specified, the current value will be used.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BoundsSpecified\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,94],"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values."},{"content":"For any parameter not specified, the current value will be used.","pos":[95,159]}]}],"pos":[904235,904395],"yaml":true},{"content":"Performs the work of setting the specified bounds of this control.","nodes":[{"pos":[0,66],"content":"Performs the work of setting the specified bounds of this control.","nodes":[{"content":"Performs the work of setting the specified bounds of this control.","pos":[0,66]}]}],"pos":[905777,905844],"yaml":true},{"content":"Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values. For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.  \n  \n The `boundsSpecified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application. For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `boundsSpecified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>. However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `boundsSpecified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.  \n  \n> [!NOTE]\n>  On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.","nodes":[{"pos":[0,542],"content":"Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values. For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.","nodes":[{"content":"Typically, the parameters that correspond to the bounds not included in the <ph id=\"ph1\">`specified`</ph> parameter are passed in with their current values.","pos":[0,138],"source":"Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, or the <ph id=\"ph3\">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property can be passed in with a reference to the current instance of the control.","pos":[139,473],"source":" For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control."},{"content":"However all values passed in are honored and applied to the control.","pos":[474,542]}]},{"pos":[549,1153],"content":"The `boundsSpecified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application. For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `boundsSpecified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>. However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `boundsSpecified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.","nodes":[{"content":"The <ph id=\"ph1\">`boundsSpecified`</ph> parameter represents the elements of the controls <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> changed by your application.","pos":[0,146],"source":"The `boundsSpecified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application."},{"content":"For example, if you change the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control, the <ph id=\"ph2\">`boundsSpecified`</ph> parameter value is the <ph id=\"ph3\">`Size`</ph> value of <ph id=\"ph4\">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.","pos":[147,343],"source":" For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `boundsSpecified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>."},{"content":"However, if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> is adjusted in response to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property being set, the <ph id=\"ph3\">`boundsSpecified`</ph> parameter value is the <ph id=\"ph4\">`None`</ph> value of <ph id=\"ph5\">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.","pos":[344,604],"source":" However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `boundsSpecified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>."}]},{"pos":[1161,1318],"content":"[!NOTE]\n On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.","leadings":["","> "],"nodes":[{"content":"On Windows Server 2003 systems, the size of a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.","pos":[9,155],"source":" On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor."}]}],"pos":[905855,907181],"yaml":true,"extradata":"MT"},{"content":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.","nodes":[{"pos":[0,93],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Left\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control."}],"pos":[908165,908259],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.","nodes":[{"pos":[0,92],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Top\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control."}],"pos":[908315,908408],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.","nodes":[{"pos":[0,94],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Width\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control."}],"pos":[908468,908563],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control.","nodes":[{"pos":[0,95],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Height\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control."}],"pos":[908624,908720],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values.","nodes":[{"pos":[0,94],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BoundsSpecified\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values."}],"pos":[908808,908903],"yaml":true},{"content":"Sets the size of the client area of the control.","nodes":[{"pos":[0,48],"content":"Sets the size of the client area of the control.","nodes":[{"content":"Sets the size of the client area of the control.","pos":[0,48]}]}],"pos":[910026,910075],"yaml":true},{"content":"The client area starts at the (0, 0) location and extends to the (`x`, `y`) location.  \n  \n Typically, you should not set the <xref:System.Windows.Forms.Control.ClientSize%2A> of the control.","nodes":[{"pos":[0,85],"content":"The client area starts at the (0, 0) location and extends to the (<ph id=\"ph1\">`x`</ph>, <ph id=\"ph2\">`y`</ph>) location.","source":"The client area starts at the (0, 0) location and extends to the (`x`, `y`) location."},{"pos":[92,191],"content":"Typically, you should not set the <xref:System.Windows.Forms.Control.ClientSize%2A> of the control.","nodes":[{"content":"Typically, you should not set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> of the control.","pos":[0,99],"source":"Typically, you should not set the <xref:System.Windows.Forms.Control.ClientSize%2A> of the control."}]}],"pos":[910086,910282],"yaml":true,"extradata":"MT"},{"content":"The client area width, in pixels.","nodes":[{"pos":[0,33],"content":"The client area width, in pixels.","nodes":[{"content":"The client area width, in pixels.","pos":[0,33]}]}],"pos":[911197,911231],"yaml":true},{"content":"The client area height, in pixels.","nodes":[{"pos":[0,34],"content":"The client area height, in pixels.","nodes":[{"content":"The client area height, in pixels.","pos":[0,34]}]}],"pos":[911287,911322],"yaml":true},{"content":"Sets a specified <xref href=\"System.Windows.Forms.ControlStyles\"></xref> flag to either `true` or `false`.","nodes":[{"pos":[0,106],"content":"Sets a specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlStyles\"&gt;&lt;/xref&gt;</ph> flag to either <ph id=\"ph2\">`true`</ph> or <ph id=\"ph3\">`false`</ph>.","source":"Sets a specified <xref href=\"System.Windows.Forms.ControlStyles\"></xref> flag to either `true` or `false`."}],"pos":[912519,912626],"yaml":true},{"content":"Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to. To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.  \n  \n> [!CAUTION]\n>  Setting the control style bits can substantially change the behavior of the control. Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method.","nodes":[{"pos":[0,531],"content":"Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to. To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.","nodes":[{"content":"Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to. To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.","pos":[0,531],"nodes":[{"content":"Control style bit flags are used to categorize supported behavior.","pos":[0,66]},{"content":"A control can enable a style by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.","pos":[67,296],"source":" A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to."},{"content":"To determine the value assigned to a specified <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method and pass in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> member to evaluate.","pos":[297,531],"source":" To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate."}]}]},{"pos":[539,852],"content":"[!CAUTION]\n Setting the control style bits can substantially change the behavior of the control. Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method.","leadings":["","> "],"nodes":[{"content":" Setting the control style bits can substantially change the behavior of the control. Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method.","pos":[11,311],"nodes":[{"content":"Setting the control style bits can substantially change the behavior of the control.","pos":[1,85]},{"content":"Review the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> enumeration documentation to understand the effects of changing the control style bits before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.","pos":[86,300],"source":" Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method."}]}]}],"pos":[912637,913495],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.ControlStyles\"></xref> bit to set.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlStyles\"&gt;&lt;/xref&gt;</ph> bit to set.","source":"The <xref href=\"System.Windows.Forms.ControlStyles\"></xref> bit to set."}],"pos":[914307,914379],"yaml":true},{"content":"`true` to apply the specified style to the control; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> to apply the specified style to the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to apply the specified style to the control; otherwise, `false`."}],"pos":[914441,914515],"yaml":true},{"content":"Sets the control as the top-level control.","nodes":[{"pos":[0,42],"content":"Sets the control as the top-level control.","nodes":[{"content":"Sets the control as the top-level control.","pos":[0,42]}]}],"pos":[915549,915592],"yaml":true},{"content":"If you call the <xref:System.Windows.Forms.Control.SetTopLevel%2A> method of a <xref:System.Windows.Forms.Form> and pass in a value of `false`, the form will not be visible until you call <xref:System.Windows.Forms.Control.SetTopLevel%2A>again, passing in a value of `true`.","nodes":[{"pos":[0,274],"content":"If you call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> method of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph> and pass in a value of <ph id=\"ph3\">`false`</ph>, the form will not be visible until you call <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph>again, passing in a value of <ph id=\"ph5\">`true`</ph>.","source":"If you call the <xref:System.Windows.Forms.Control.SetTopLevel%2A> method of a <xref:System.Windows.Forms.Form> and pass in a value of `false`, the form will not be visible until you call <xref:System.Windows.Forms.Control.SetTopLevel%2A>again, passing in a value of `true`."}],"pos":[915603,915878],"yaml":true,"extradata":"MT"},{"content":"`true` to set the control as the top-level control; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> to set the control as the top-level control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to set the control as the top-level control; otherwise, `false`."}],"pos":[916020,916094],"yaml":true},{"content":"The <code>value</code> parameter is set to `true` and the control is an ActiveX control.","nodes":[{"pos":[0,88],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is set to <ph id=\"ph2\">`true`</ph> and the control is an ActiveX control.","source":"The <code>value</code> parameter is set to `true` and the control is an ActiveX control."}],"pos":[916272,916361],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Control.GetTopLevel\"></xref> return value is not equal to the <code>value</code> parameter and the <xref href=\"System.Windows.Forms.Control.Parent\"></xref> property is not `null`.","nodes":[{"pos":[0,216],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.GetTopLevel\"&gt;&lt;/xref&gt;</ph> return value is not equal to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter and the <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.Control.Parent\"&gt;&lt;/xref&gt;</ph> property is not <ph id=\"ph4\">`null`</ph>.","source":"The <xref href=\"System.Windows.Forms.Control.GetTopLevel\"></xref> return value is not equal to the <code>value</code> parameter and the <xref href=\"System.Windows.Forms.Control.Parent\"></xref> property is not `null`."}],"pos":[916439,916656],"yaml":true},{"content":"Sets the control to the specified visible state.","nodes":[{"pos":[0,48],"content":"Sets the control to the specified visible state.","nodes":[{"content":"Sets the control to the specified visible state.","pos":[0,48]}]}],"pos":[917645,917694],"yaml":true},{"content":"You would typically override this method to change the visibility behavior of the control.","nodes":[{"pos":[0,90],"content":"You would typically override this method to change the visibility behavior of the control.","nodes":[{"content":"You would typically override this method to change the visibility behavior of the control.","pos":[0,90]}]}],"pos":[917705,917796],"yaml":true,"extradata":"MT"},{"content":"`true` to make the control visible; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> to make the control visible; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to make the control visible; otherwise, `false`."}],"pos":[917949,918007],"yaml":true},{"content":"Displays the control to the user.","nodes":[{"pos":[0,33],"content":"Displays the control to the user.","nodes":[{"content":"Displays the control to the user.","pos":[0,33]}]}],"pos":[918919,918953],"yaml":true},{"content":"Showing the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`. After the <xref:System.Windows.Forms.Control.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.","nodes":[{"pos":[0,345],"content":"Showing the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`. After the <xref:System.Windows.Forms.Control.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.","nodes":[{"content":"Showing the control is equivalent to setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[0,115],"source":"Showing the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`."},{"content":"After the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method is called, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id=\"ph3\">`true`</ph> until the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called.","pos":[116,345],"source":" After the <xref:System.Windows.Forms.Control.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called."}]}],"pos":[918964,919310],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the control should display focus rectangles.","nodes":[{"pos":[0,76],"content":"Gets a value indicating whether the control should display focus rectangles.","nodes":[{"content":"Gets a value indicating whether the control should display focus rectangles.","pos":[0,76]}]}],"pos":[921061,921138],"yaml":true},{"content":"For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)topics.","nodes":[{"pos":[0,347],"content":"For more information about this feature, see the<bpt id=\"p1\">[</bpt>WM_CHANGEUISTATE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx)</ept>,<bpt id=\"p2\">[</bpt>WM_QUERYUISTATE<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx)</ept>, and the <bpt id=\"p3\">[</bpt>WM_UPDATEUISTATE<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)</ept>topics.","source":"For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)topics."}],"pos":[921149,921497],"yaml":true,"extradata":"MT"},{"content":"`true` if the control should display focus rectangles; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the control should display focus rectangles; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control should display focus rectangles; otherwise, `false`."}],"pos":[921681,921758],"yaml":true},{"content":"Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.","nodes":[{"pos":[0,117],"content":"Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.","nodes":[{"content":"Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.","pos":[0,117]}]}],"pos":[922824,922942],"yaml":true},{"content":"In controls created in the Windows Forms designer, keyboard accelerators are visible by default.  \n  \n For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)topics.","nodes":[{"pos":[0,96],"content":"In controls created in the Windows Forms designer, keyboard accelerators are visible by default.","nodes":[{"content":"In controls created in the Windows Forms designer, keyboard accelerators are visible by default.","pos":[0,96]}]},{"pos":[103,450],"content":"For more information about this feature, see the<bpt id=\"p1\">[</bpt>WM_CHANGEUISTATE<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx)</ept>,<bpt id=\"p2\">[</bpt>WM_QUERYUISTATE<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx)</ept>, and the <bpt id=\"p3\">[</bpt>WM_UPDATEUISTATE<ept id=\"p3\">](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)</ept>topics.","source":"For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)topics."}],"pos":[922953,923414],"yaml":true,"extradata":"MT"},{"content":"`true` if the keyboard accelerators are visible; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the keyboard accelerators are visible; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the keyboard accelerators are visible; otherwise, `false`."}],"pos":[923601,923672],"yaml":true},{"content":"Gets or sets the site of the control.","nodes":[{"pos":[0,37],"content":"Gets or sets the site of the control.","nodes":[{"content":"Gets or sets the site of the control.","pos":[0,37]}]}],"pos":[924669,924707],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.ISite\"></xref> associated with the <xref href=\"System.Windows.Forms.Control\"></xref>, if any.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ISite\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph>, if any.","source":"The <xref href=\"System.ComponentModel.ISite\"></xref> associated with the <xref href=\"System.Windows.Forms.Control\"></xref>, if any."}],"pos":[924864,924996],"yaml":true},{"content":"Gets or sets the height and width of the control.","nodes":[{"pos":[0,49],"content":"Gets or sets the height and width of the control.","nodes":[{"content":"Gets or sets the height and width of the control.","pos":[0,49]}]}],"pos":[925933,925983],"yaml":true},{"content":"Because the <xref:System.Drawing.Size> class is a value type (`Structure` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `struct` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)]), it is returned by value, meaning accessing the property returns a copy of the size of the control. So, adjusting the <xref:System.Drawing.Size.Width%2A> or <xref:System.Drawing.Size.Height%2A> properties of the <xref:System.Drawing.Size> returned from this property will not affect the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control. To adjust the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control, you must set the control's <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> property, or set the <xref:System.Windows.Forms.Control.Size%2A> property with a new <xref:System.Drawing.Size>.  \n  \n> [!NOTE]\n>  To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.  \n  \n> [!NOTE]\n>  On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.","nodes":[{"pos":[0,933],"content":"Because the <xref:System.Drawing.Size> class is a value type (`Structure` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `struct` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)]), it is returned by value, meaning accessing the property returns a copy of the size of the control. So, adjusting the <xref:System.Drawing.Size.Width%2A> or <xref:System.Drawing.Size.Height%2A> properties of the <xref:System.Drawing.Size> returned from this property will not affect the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control. To adjust the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control, you must set the control's <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> property, or set the <xref:System.Windows.Forms.Control.Size%2A> property with a new <xref:System.Drawing.Size>.","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Drawing.Size&gt;</ph> class is a value type (<ph id=\"ph2\">`Structure`</ph> in <ph id=\"ph3\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id=\"ph4\">`struct`</ph> in <ph id=\"ph5\">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph>), it is returned by value, meaning accessing the property returns a copy of the size of the control.","pos":[0,278],"source":"Because the <xref:System.Drawing.Size> class is a value type (`Structure` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `struct` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)]), it is returned by value, meaning accessing the property returns a copy of the size of the control."},{"content":"So, adjusting the <ph id=\"ph1\">&lt;xref:System.Drawing.Size.Width%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Drawing.Size&gt;</ph> returned from this property will not affect the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the control.","pos":[279,575],"source":" So, adjusting the <xref:System.Drawing.Size.Width%2A> or <xref:System.Drawing.Size.Height%2A> properties of the <xref:System.Drawing.Size> returned from this property will not affect the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control."},{"content":"To adjust the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the control, you must set the control's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> property, or set the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property with a new <ph id=\"ph6\">&lt;xref:System.Drawing.Size&gt;</ph>.","pos":[576,933],"source":" To adjust the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control, you must set the control's <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> property, or set the <xref:System.Windows.Forms.Control.Size%2A> property with a new <xref:System.Drawing.Size>."}]},{"pos":[941,1159],"content":"[!NOTE]\n To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","leadings":["","> "],"nodes":[{"content":" To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.","pos":[8,216],"nodes":[{"content":"To maintain better performance, do not set the <ph id=\"ph1\">&lt;xref:System.Drawing.Size&gt;</ph> of a control in its constructor.","pos":[1,107],"source":" To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor."},{"content":"The preferred method is to override the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.","pos":[108,208],"source":" The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property."}]}]},{"pos":[1167,1324],"content":"[!NOTE]\n On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.","leadings":["","> "],"nodes":[{"content":"On Windows Server 2003 systems, the size of a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.","pos":[9,155],"source":" On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor."}]}],"pos":[925994,927327],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Size\"></xref> that represents the height and width of the control in pixels.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> that represents the height and width of the control in pixels.","source":"The <xref href=\"System.Drawing.Size\"></xref> that represents the height and width of the control in pixels."}],"pos":[928714,928822],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.Size\"></xref> property value changes.","nodes":[{"pos":[0,94],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Size\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.Size\"></xref> property value changes."}],"pos":[929776,929871],"yaml":true},{"content":"It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts. The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied.  \n  \n This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,298],"content":"It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts. The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied.","nodes":[{"content":"It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts. The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied.","pos":[0,298],"nodes":[{"content":"It is preferable to use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event to handle custom layouts.","pos":[0,102],"source":"It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised in response to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> events, but also in other conditions when layout might need to be applied.","pos":[103,298],"source":" The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied."}]}]},{"pos":[305,455],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,150],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[462,612],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[929882,930501],"yaml":true,"extradata":"MT"},{"content":"Determines the size of the entire control from the height and width of its client area.","nodes":[{"pos":[0,87],"content":"Determines the size of the entire control from the height and width of its client area.","nodes":[{"content":"Determines the size of the entire control from the height and width of its client area.","pos":[0,87]}]}],"pos":[932790,932878],"yaml":true},{"content":"A <xref href=\"System.Drawing.Size\"></xref> value representing the height and width of the control's client area.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> value representing the height and width of the control's client area.","source":"A <xref href=\"System.Drawing.Size\"></xref> value representing the height and width of the control's client area."}],"pos":[933080,933193],"yaml":true},{"content":"A <xref href=\"System.Drawing.Size\"></xref> value representing the height and width of the entire control.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> value representing the height and width of the entire control.","source":"A <xref href=\"System.Drawing.Size\"></xref> value representing the height and width of the entire control."}],"pos":[933256,933362],"yaml":true},{"content":"Occurs when the control style changes.","nodes":[{"pos":[0,38],"content":"Occurs when the control style changes.","nodes":[{"content":"Occurs when the control style changes.","pos":[0,38]}]}],"pos":[934358,934397],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.StyleChanged> event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed.  \n  \n This event is raised if the control style is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,146],"content":"The <xref:System.Windows.Forms.Control.StyleChanged> event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event occurs when <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> flags have been added or changed.","pos":[0,146],"source":"The <xref:System.Windows.Forms.Control.StyleChanged> event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed."}]},{"pos":[153,264],"content":"This event is raised if the control style is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the control style is changed by either a programmatic modification or user interaction.","pos":[0,111]}]},{"pos":[271,421],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[934408,934836],"yaml":true,"extradata":"MT"},{"content":"Temporarily suspends the layout logic for the control.","nodes":[{"pos":[0,54],"content":"Temporarily suspends the layout logic for the control.","nodes":[{"content":"Temporarily suspends the layout logic for the control.","pos":[0,54]}]}],"pos":[937196,937251],"yaml":true},{"content":"The layout logic of the control is suspended until the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method is called.  \n  \n The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.  \n  \n There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.  \n  \n> [!NOTE]\n>  When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. This will increase the performance of applications with many controls.","nodes":[{"pos":[0,124],"content":"The layout logic of the control is suspended until the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method is called.","nodes":[{"content":"The layout logic of the control is suspended until the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method is called.","pos":[0,124],"source":"The layout logic of the control is suspended until the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method is called."}]},{"pos":[131,840],"content":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.","pos":[0,709],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.","pos":[0,263],"source":"The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control."},{"content":"For example, you would typically call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.","pos":[264,709],"source":" For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect."}]}]},{"pos":[847,1016],"content":"There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.","nodes":[{"content":"There must be no pending calls to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.","pos":[0,169],"source":"There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called."}]},{"pos":[1024,1415],"content":"[!NOTE]\n When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. This will increase the performance of applications with many controls.","leadings":["","> "],"nodes":[{"content":" When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. This will increase the performance of applications with many controls.","pos":[8,389],"nodes":[{"content":"When adding several controls to a parent control, it is recommended that you call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.","pos":[1,192],"source":" When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added."},{"content":"After adding the controls to the parent control, call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.","pos":[193,310],"source":" After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method."},{"content":"This will increase the performance of applications with many controls.","pos":[311,381]}]}]}],"pos":[937262,938687],"yaml":true,"extradata":"MT"},{"content":"Occurs when the system colors change.","nodes":[{"pos":[0,37],"content":"Occurs when the system colors change.","nodes":[{"content":"Occurs when the system colors change.","pos":[0,37]}]}],"pos":[940496,940534],"yaml":true},{"content":"This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,132],"content":"This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Drawing.SystemColors&gt;</ph> is changed by either a programmatic modification or user interaction.","pos":[0,132],"source":"This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction."}]},{"pos":[139,289],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[940545,940839],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the tab order of the control within its container.","nodes":[{"pos":[0,63],"content":"Gets or sets the tab order of the control within its container.","nodes":[{"content":"Gets or sets the tab order of the control within its container.","pos":[0,63]}]}],"pos":[943164,943228],"yaml":true},{"content":"A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order. If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.  \n  \n For a control to be included in the tab order, its <xref:System.Windows.Forms.Control.TabStop%2A> property must be set to `true`.","nodes":[{"pos":[0,277],"content":"A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order. If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.","nodes":[{"content":"A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order. If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.","pos":[0,277],"nodes":[{"content":"A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order.","pos":[0,121]},{"content":"If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.","pos":[122,277]}]}]},{"pos":[284,413],"content":"For a control to be included in the tab order, its <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property must be set to <ph id=\"ph2\">`true`</ph>.","source":"For a control to be included in the tab order, its <xref:System.Windows.Forms.Control.TabStop%2A> property must be set to `true`."}],"pos":[943239,943657],"yaml":true,"extradata":"MT"},{"content":"The index value of the control within the set of controls within its container. The controls in the container are included in the tab order.","nodes":[{"pos":[0,140],"content":"The index value of the control within the set of controls within its container. The controls in the container are included in the tab order.","nodes":[{"content":"The index value of the control within the set of controls within its container. The controls in the container are included in the tab order.","pos":[0,140],"nodes":[{"content":"The index value of the control within the set of controls within its container.","pos":[0,79]},{"content":"The controls in the container are included in the tab order.","pos":[80,140]}]}]}],"pos":[945026,945167],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.TabIndex\"></xref> property value changes.","nodes":[{"pos":[0,98],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.TabIndex\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.TabIndex\"></xref> property value changes."}],"pos":[946171,946270],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,154],"content":"This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,154],"source":"This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[161,311],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[946281,946597],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.","nodes":[{"pos":[0,102],"content":"Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.","nodes":[{"content":"Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.","pos":[0,102]}]}],"pos":[948926,949029],"yaml":true},{"content":"When the user presses the TAB key, the input focus is set to the next control in the tab order. Controls with the <xref:System.Windows.Forms.Control.TabStop%2A> property value of `false` are not included in the collection of controls in the tab order. The tab order can be manipulated by setting the control's <xref:System.Windows.Forms.Control.TabIndex%2A> property value.","nodes":[{"pos":[0,373],"content":"When the user presses the TAB key, the input focus is set to the next control in the tab order. Controls with the <xref:System.Windows.Forms.Control.TabStop%2A> property value of `false` are not included in the collection of controls in the tab order. The tab order can be manipulated by setting the control's <xref:System.Windows.Forms.Control.TabIndex%2A> property value.","nodes":[{"content":"When the user presses the TAB key, the input focus is set to the next control in the tab order.","pos":[0,95]},{"content":"Controls with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property value of <ph id=\"ph2\">`false`</ph> are not included in the collection of controls in the tab order.","pos":[96,251],"source":" Controls with the <xref:System.Windows.Forms.Control.TabStop%2A> property value of `false` are not included in the collection of controls in the tab order."},{"content":"The tab order can be manipulated by setting the control's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property value.","pos":[252,373],"source":" The tab order can be manipulated by setting the control's <xref:System.Windows.Forms.Control.TabIndex%2A> property value."}]}],"pos":[949040,949414],"yaml":true,"extradata":"MT"},{"content":"`true` if the user can give the focus to the control using the TAB key; otherwise, `false`. The default is `true`.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n This property will always return `true` for an instance of the <xref href=\"System.Windows.Forms.Form\"></xref> class.  \n  \n</p></block>","nodes":[{"pos":[0,114],"content":"`true` if the user can give the focus to the control using the TAB key; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the user can give the focus to the control using the TAB key; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,91],"source":"`true` if the user can give the focus to the control using the TAB key; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[92,114],"source":" The default is `true`."}]},{"pos":[121,277],"content":"<block subset=\"none\" type=\"note\"><p>  \n This property will always return `true` for an instance of the <xref href=\"System.Windows.Forms.Form\"></xref> class.","nodes":[{"content":"This property will always return <ph id=\"ph1\">`true`</ph> for an instance of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> class.","pos":[40,156],"source":" This property will always return `true` for an instance of the <xref href=\"System.Windows.Forms.Form\"></xref> class."}]},{"pos":[283,295],"content":"</p></block>","nodes":[]}],"pos":[950785,951094],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.TabStop\"></xref> property value changes.","nodes":[{"pos":[0,97],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.TabStop\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.TabStop\"></xref> property value changes."}],"pos":[952091,952189],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,153],"content":"This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,153],"source":"This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[160,310],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[952200,952515],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the object that contains data about the control.","nodes":[{"pos":[0,61],"content":"Gets or sets the object that contains data about the control.","nodes":[{"content":"Gets or sets the object that contains data about the control.","pos":[0,61]}]}],"pos":[954817,954879],"yaml":true},{"content":"Any type derived from the <xref:System.Object> class can be assigned to this property. If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.  \n  \n A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control. For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly.","nodes":[{"pos":[0,215],"content":"Any type derived from the <xref:System.Object> class can be assigned to this property. If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.","nodes":[{"content":"Any type derived from the <xref:System.Object> class can be assigned to this property. If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.","pos":[0,215],"nodes":[{"content":"Any type derived from the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> class can be assigned to this property.","pos":[0,86],"source":"Any type derived from the <xref:System.Object> class can be assigned to this property."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property is set through the Windows Forms designer, only text can be assigned.","pos":[87,215],"source":" If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned."}]}]},{"pos":[222,630],"content":"A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control. For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly.","nodes":[{"content":"A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control. For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly.","pos":[0,408],"nodes":[{"content":"A common use for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property is to store data that is closely associated with the control.","pos":[0,134],"source":"A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control."},{"content":"For example, if you have a control that displays information about a customer, you might store a <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> that contains the customer's order history in that control's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property so the data can be accessed quickly.","pos":[135,408],"source":" For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly."}]}]}],"pos":[954890,955525],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Object\"></xref> that contains data about the control. The default is `null`.","nodes":[{"pos":[0,98],"content":"An <xref href=\"System.Object\"></xref> that contains data about the control. The default is `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that contains data about the control.","pos":[0,75],"source":"An <xref href=\"System.Object\"></xref> that contains data about the control."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[76,98],"source":" The default is `null`."}]}],"pos":[956557,956656],"yaml":true},{"content":"Gets or sets the text associated with this control.","nodes":[{"pos":[0,51],"content":"Gets or sets the text associated with this control.","nodes":[{"content":"Gets or sets the text associated with this control.","pos":[0,51]}]}],"pos":[957672,957724],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class. For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name. However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text. For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text.","nodes":[{"pos":[0,777],"content":"The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class. For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name. However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text. For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class. For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name. However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text. For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text.","pos":[0,777],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the control is used differently by each derived class.","pos":[0,114],"source":"The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class."},{"content":"For example the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name.","pos":[115,366],"source":" For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> can be large and can include numerous nonvisual characters used to format the text.","pos":[367,561],"source":" However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text."},{"content":"For example, the text displayed in a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> can be formatted by adjusting the <ph id=\"ph2\">&lt;xref:System.Drawing.Font&gt;</ph> properties, or by the addition of spaces or tab characters to align the text.","pos":[562,777],"source":" For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text."}]}]}],"pos":[957735,958513],"yaml":true,"extradata":"MT"},{"content":"The text associated with this control.","nodes":[{"pos":[0,38],"content":"The text associated with this control.","nodes":[{"content":"The text associated with this control.","pos":[0,38]}]}],"pos":[959771,959810],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.Text\"></xref> property value changes.","nodes":[{"pos":[0,94],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Text\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.Text\"></xref> property value changes."}],"pos":[960833,960928],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.Text%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Text%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,150],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Text%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[157,307],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[960939,961251],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.","nodes":[{"pos":[0,122],"content":"Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.","nodes":[{"content":"Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.","pos":[0,122]}]}],"pos":[963381,963504],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.Top%2A> property value is equivalent to the <xref:System.Drawing.Point.Y%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.  \n  \n Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.","nodes":[{"pos":[0,235],"content":"The <xref:System.Windows.Forms.Control.Top%2A> property value is equivalent to the <xref:System.Drawing.Point.Y%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property value is equivalent to the <ph id=\"ph2\">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value of the control.","pos":[0,235],"source":"The <xref:System.Windows.Forms.Control.Top%2A> property value is equivalent to the <xref:System.Drawing.Point.Y%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control."}]},{"pos":[242,467],"content":"Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.","nodes":[{"content":"Changes made to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property values cause the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property value of the control to change.","pos":[0,225],"source":"Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change."}]}],"pos":[963515,963987],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.","nodes":[{"pos":[0,162],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.","source":"An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area."}],"pos":[964988,965151],"yaml":true},{"content":"Gets the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <xref href=\"System.Windows.Forms.Form\"></xref> that the control is contained in.","nodes":[{"pos":[0,192],"content":"Gets the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <xref href=\"System.Windows.Forms.Form\"></xref> that the control is contained in.","nodes":[{"content":"Gets the parent control that is not parented by another Windows Forms control.","pos":[0,78]},{"content":"Typically, this is the outermost <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> that the control is contained in.","pos":[79,192],"source":" Typically, this is the outermost <xref href=\"System.Windows.Forms.Form\"></xref> that the control is contained in."}]}],"pos":[966201,966394],"yaml":true},{"content":"The top-level control is defined as the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <xref:System.Windows.Forms.Form> that the control is contained in. For example, if the control is contained on an MDI child <xref:System.Windows.Forms.Form>, then the top-level control is the Multiple Document Interface (MDI) parent <xref:System.Windows.Forms.Form>. If the control is not parented on a <xref:System.Windows.Forms.Form>, this property will return `null`.","nodes":[{"pos":[0,513],"content":"The top-level control is defined as the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <xref:System.Windows.Forms.Form> that the control is contained in. For example, if the control is contained on an MDI child <xref:System.Windows.Forms.Form>, then the top-level control is the Multiple Document Interface (MDI) parent <xref:System.Windows.Forms.Form>. If the control is not parented on a <xref:System.Windows.Forms.Form>, this property will return `null`.","nodes":[{"content":"The top-level control is defined as the parent control that is not parented by another Windows Forms control.","pos":[0,109]},{"content":"Typically, this is the outermost <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> that the control is contained in.","pos":[110,209],"source":" Typically, this is the outermost <xref:System.Windows.Forms.Form> that the control is contained in."},{"content":"For example, if the control is contained on an MDI child <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, then the top-level control is the Multiple Document Interface (MDI) parent <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph>.","pos":[210,409],"source":" For example, if the control is contained on an MDI child <xref:System.Windows.Forms.Form>, then the top-level control is the Multiple Document Interface (MDI) parent <xref:System.Windows.Forms.Form>."},{"content":"If the control is not parented on a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph>, this property will return <ph id=\"ph2\">`null`</ph>.","pos":[410,513],"source":" If the control is not parented on a <xref:System.Windows.Forms.Form>, this property will return `null`."}]}],"pos":[966405,966919],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.Control\"></xref> that represents the top-level control that contains the current control.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph> that represents the top-level control that contains the current control.","source":"The <xref href=\"System.Windows.Forms.Control\"></xref> that represents the top-level control that contains the current control."}],"pos":[967132,967259],"yaml":true},{"content":"Causes the control to redraw the invalidated regions within its client area.","nodes":[{"pos":[0,76],"content":"Causes the control to redraw the invalidated regions within its client area.","nodes":[{"content":"Causes the control to redraw the invalidated regions within its client area.","pos":[0,76]}]}],"pos":[968271,968348],"yaml":true},{"content":"Executes any pending requests for painting.  \n  \n There are two ways to repaint a form and its contents:  \n  \n-   You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the <xref:System.Windows.Forms.Control.Update%2A> method.  \n  \n-   You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children. This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with <xref:System.Windows.Forms.Control.Update%2A>.  \n  \n The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted. The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs. If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use. The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method.  \n  \n For more information, see the[WM_PAINT](http://msdn.microsoft.com/library/dd145213\\(v=vs.85\\).aspx)topic.","nodes":[{"pos":[0,43],"content":"Executes any pending requests for painting.","nodes":[{"content":"Executes any pending requests for painting.","pos":[0,43]}]},{"pos":[50,104],"content":"There are two ways to repaint a form and its contents:","nodes":[{"content":"There are two ways to repaint a form and its contents:","pos":[0,54]}]},{"pos":[114,273],"content":"You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the <xref:System.Windows.Forms.Control.Update%2A> method.","nodes":[{"content":"You can use one of the overloads of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method with the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method.","pos":[0,159],"source":"You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the <xref:System.Windows.Forms.Control.Update%2A> method."}]},{"pos":[283,584],"content":"You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children. This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with <xref:System.Windows.Forms.Control.Update%2A>.","nodes":[{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> method, which forces the control to redraw itself and all its children.","pos":[0,135],"source":"You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children."},{"content":"This is equivalent to setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method to <ph id=\"ph2\">`true`</ph> and using it with <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>.","pos":[136,301],"source":" This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with <xref:System.Windows.Forms.Control.Update%2A>."}]},{"pos":[591,1375],"content":"The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted. The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs. If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use. The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted. The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs. If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use. The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method.","pos":[0,784],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method governs what gets painted or repainted.","pos":[0,100],"source":"The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method governs when the painting or repainting occurs.","pos":[101,205],"source":" The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs."},{"content":"If you use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> methods together rather than calling <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>, what gets repainted depends on which overload of <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> you use.","pos":[206,513],"source":" If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method just forces the control to be painted immediately, but the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method governs what gets painted when you call the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method.","pos":[514,784],"source":" The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method."}]}]},{"pos":[1382,1487],"content":"For more information, see the<bpt id=\"p1\">[</bpt>WM_PAINT<ept id=\"p1\">](http://msdn.microsoft.com/library/dd145213\\(v=vs.85\\).aspx)</ept>topic.","source":"For more information, see the[WM_PAINT](http://msdn.microsoft.com/library/dd145213\\(v=vs.85\\).aspx)topic."}],"pos":[968359,969861],"yaml":true,"extradata":"MT"},{"content":"Updates the bounds of the control with the specified size, location, and client size.","nodes":[{"pos":[0,85],"content":"Updates the bounds of the control with the specified size, location, and client size.","nodes":[{"content":"Updates the bounds of the control with the specified size, location, and client size.","pos":[0,85]}]}],"pos":[971257,971343],"yaml":true},{"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","nodes":[{"pos":[0,359],"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","nodes":[{"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","pos":[0,359],"nodes":[{"content":"If the new <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control is different from the previous <ph id=\"ph2\">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.","pos":[0,197],"source":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised."},{"content":"Likewise, if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.","pos":[198,359],"source":" Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised."}]}]}],"pos":[971354,971714],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Point.X\"></xref> coordinate of the control.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.X\"&gt;&lt;/xref&gt;</ph> coordinate of the control.","source":"The <xref href=\"System.Drawing.Point.X\"></xref> coordinate of the control."}],"pos":[971911,971986],"yaml":true},{"content":"The <xref href=\"System.Drawing.Point.Y\"></xref> coordinate of the control.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.Y\"&gt;&lt;/xref&gt;</ph> coordinate of the control.","source":"The <xref href=\"System.Drawing.Point.Y\"></xref> coordinate of the control."}],"pos":[972042,972117],"yaml":true},{"content":"The <xref href=\"System.Drawing.Size.Width\"></xref> of the control.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size.Width\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The <xref href=\"System.Drawing.Size.Width\"></xref> of the control."}],"pos":[972177,972244],"yaml":true},{"content":"The <xref href=\"System.Drawing.Size.Height\"></xref> of the control.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size.Height\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The <xref href=\"System.Drawing.Size.Height\"></xref> of the control."}],"pos":[972305,972373],"yaml":true},{"content":"The client <xref href=\"System.Drawing.Size.Width\"></xref> of the control.","nodes":[{"pos":[0,73],"content":"The client <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size.Width\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The client <xref href=\"System.Drawing.Size.Width\"></xref> of the control."}],"pos":[972439,972513],"yaml":true},{"content":"The client <xref href=\"System.Drawing.Size.Height\"></xref> of the control.","nodes":[{"pos":[0,74],"content":"The client <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size.Height\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The client <xref href=\"System.Drawing.Size.Height\"></xref> of the control."}],"pos":[972580,972655],"yaml":true},{"content":"Updates the bounds of the control with the specified size and location.","nodes":[{"pos":[0,71],"content":"Updates the bounds of the control with the specified size and location.","nodes":[{"content":"Updates the bounds of the control with the specified size and location.","pos":[0,71]}]}],"pos":[973889,973961],"yaml":true},{"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","nodes":[{"pos":[0,359],"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","nodes":[{"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","pos":[0,359],"nodes":[{"content":"If the new <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control if different from the previous <ph id=\"ph2\">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.","pos":[0,197],"source":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised."},{"content":"Likewise, is the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.","pos":[198,359],"source":" Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised."}]}]}],"pos":[973972,974332],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Point.X\"></xref> coordinate of the control.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.X\"&gt;&lt;/xref&gt;</ph> coordinate of the control.","source":"The <xref href=\"System.Drawing.Point.X\"></xref> coordinate of the control."}],"pos":[974494,974569],"yaml":true},{"content":"The <xref href=\"System.Drawing.Point.Y\"></xref> coordinate of the control.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point.Y\"&gt;&lt;/xref&gt;</ph> coordinate of the control.","source":"The <xref href=\"System.Drawing.Point.Y\"></xref> coordinate of the control."}],"pos":[974625,974700],"yaml":true},{"content":"The <xref href=\"System.Drawing.Size.Width\"></xref> of the control.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size.Width\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The <xref href=\"System.Drawing.Size.Width\"></xref> of the control."}],"pos":[974760,974827],"yaml":true},{"content":"The <xref href=\"System.Drawing.Size.Height\"></xref> of the control.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size.Height\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The <xref href=\"System.Drawing.Size.Height\"></xref> of the control."}],"pos":[974888,974956],"yaml":true},{"content":"Updates the bounds of the control with the current size and location.","nodes":[{"pos":[0,69],"content":"Updates the bounds of the control with the current size and location.","nodes":[{"content":"Updates the bounds of the control with the current size and location.","pos":[0,69]}]}],"pos":[975953,976023],"yaml":true},{"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","nodes":[{"pos":[0,359],"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","nodes":[{"content":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.","pos":[0,359],"nodes":[{"content":"If the new <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control is different from the previous <ph id=\"ph2\">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.","pos":[0,197],"source":"If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised."},{"content":"Likewise, if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.","pos":[198,359],"source":" Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised."}]}]}],"pos":[976034,976394],"yaml":true,"extradata":"MT"},{"content":"Forces the assigned styles to be reapplied to the control.","nodes":[{"pos":[0,58],"content":"Forces the assigned styles to be reapplied to the control.","nodes":[{"content":"Forces the assigned styles to be reapplied to the control.","pos":[0,58]}]}],"pos":[977443,977502],"yaml":true},{"content":"This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply. The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied. The control is repainted to reflect the style changes if necessary.  \n  \n The <xref:System.Windows.Forms.Control.UpdateStyles%2A> method has no effect if the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property value is `false`.","nodes":[{"pos":[0,470],"content":"This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply. The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied. The control is repainted to reflect the style changes if necessary.","nodes":[{"content":"This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply. The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied. The control is repainted to reflect the style changes if necessary.","pos":[0,470],"nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> method to get the styles to apply.","pos":[0,108],"source":"This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply."},{"content":"The styles assigned to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.CreateParams.Style%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.CreateParams.ExStyle%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> assigned to the control's <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property are reapplied.","pos":[109,402],"source":" The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied."},{"content":"The control is repainted to reflect the style changes if necessary.","pos":[403,470]}]}]},{"pos":[477,642],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> method has no effect if the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property value is <ph id=\"ph3\">`false`</ph>.","source":"The <xref:System.Windows.Forms.Control.UpdateStyles%2A> method has no effect if the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property value is `false`."}],"pos":[977513,978160],"yaml":true,"extradata":"MT"},{"content":"Updates the control in its parent's z-order.","nodes":[{"pos":[0,44],"content":"Updates the control in its parent's z-order.","nodes":[{"content":"Updates the control in its parent's z-order.","pos":[0,44]}]}],"pos":[979844,979889],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order. For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back.","nodes":[{"pos":[0,325],"content":"The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order. For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order. For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back.","pos":[0,325],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.UpdateZOrder%2A&gt;</ph> method updates the position of the control in its parent control's z-order.","pos":[0,131],"source":"The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order."},{"content":"For example, if this control is a newly created control that was added to a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>, the z-order is updated with the new control added to the back.","pos":[132,325],"source":" For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back."}]}]}],"pos":[979900,980226],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.","nodes":[{"pos":[0,110],"content":"Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.","nodes":[{"content":"Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.","pos":[0,110]}]}],"pos":[981299,981410],"yaml":true},{"content":"Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread. To change the cursor globally and immediately, seethe <xref:System.Windows.Forms.Cursor.Current%2A> property.","nodes":[{"pos":[0,392],"content":"Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread. To change the cursor globally and immediately, seethe <xref:System.Windows.Forms.Cursor.Current%2A> property.","nodes":[{"content":"Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread. To change the cursor globally and immediately, seethe <xref:System.Windows.Forms.Cursor.Current%2A> property.","pos":[0,392],"nodes":[{"content":"Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread.","pos":[0,282]},{"content":"To change the cursor globally and immediately, seethe <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property.","pos":[283,392],"source":" To change the cursor globally and immediately, seethe <xref:System.Windows.Forms.Cursor.Current%2A> property."}]}]}],"pos":[981421,981814],"yaml":true,"extradata":"MT"},{"content":"`true` to use the wait cursor for the current control and all child controls; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,121],"content":"`true` to use the wait cursor for the current control and all child controls; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to use the wait cursor for the current control and all child controls; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,97],"source":"`true` to use the wait cursor for the current control and all child controls; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[98,121],"source":" The default is `false`."}]}],"pos":[981991,982115],"yaml":true},{"content":"Occurs when the control is finished validating.","nodes":[{"pos":[0,47],"content":"Occurs when the control is finished validating.","nodes":[{"content":"Occurs when the control is finished validating.","pos":[0,47]}]}],"pos":[983136,983184],"yaml":true},{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)topic, and the \"Message Deadlocks\" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,384],"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName&gt;</ph> property to the current form, focus events occur in the following order:","pos":[0,384],"source":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:"}]},{"pos":[394,435],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[445,489],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[499,540],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[550,596],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[606,651],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[661,706],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[713,871],"content":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the mouse or by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:","pos":[0,158],"source":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:"}]},{"pos":[881,922],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[932,976],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[986,1031],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[1041,1082],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[1092,1138],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[1148,1193],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[1200,1414],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.","source":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed."},{"pos":[1421,1745],"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id=\"ph3\">`true`</ph> in the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.","source":"If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed."},{"pos":[1753,2470],"content":"[!CAUTION]\n Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)topic, and the \"Message Deadlocks\" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx) topic.","leadings":["","> "],"nodes":[{"content":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)topic, and the \"Message Deadlocks\" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx) topic.","pos":[11,715],"nodes":[{"content":"Do not attempt to set focus from within the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.","pos":[1,336],"source":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers."},{"content":"Doing so can cause your application or the operating system to stop responding.","pos":[337,416]},{"content":"For more information, see the<bpt id=\"p1\">[</bpt>WM_KILLFOCUS<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)</ept>topic, and the \"Message Deadlocks\" section of the <bpt id=\"p2\">[</bpt>About Messages and Message Queues<ept id=\"p2\">](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx)</ept> topic.","pos":[417,704],"source":" For more information, see the[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)topic, and the \"Message Deadlocks\" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx) topic."}]}]},{"pos":[2477,2627],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[983195,985866],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control is validating.","nodes":[{"pos":[0,38],"content":"Occurs when the control is validating.","nodes":[{"content":"Occurs when the control is validating.","pos":[0,38]}]}],"pos":[987776,987815],"yaml":true},{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A>or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section, and the \"Message Deadlocks\" section of the \"About Messages and Message Queues\" topic in the MSDN library at http://msdn.microsoft.com/library.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,383],"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A>or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName&gt;</ph> property to the current form, focus events occur in the following order:","pos":[0,383],"source":"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A>or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:"}]},{"pos":[393,434],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[444,488],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[498,539],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[549,595],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[605,650],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[660,705],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[712,870],"content":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:","nodes":[{"content":"When you change the focus by using the mouse or by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:","pos":[0,158],"source":"When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:"}]},{"pos":[880,921],"content":"<xref:System.Windows.Forms.Control.Enter>","nodes":[]},{"pos":[931,975],"content":"<xref:System.Windows.Forms.Control.GotFocus>","nodes":[]},{"pos":[985,1030],"content":"<xref:System.Windows.Forms.Control.LostFocus>","nodes":[]},{"pos":[1040,1081],"content":"<xref:System.Windows.Forms.Control.Leave>","nodes":[]},{"pos":[1091,1137],"content":"<xref:System.Windows.Forms.Control.Validating>","nodes":[]},{"pos":[1147,1192],"content":"<xref:System.Windows.Forms.Control.Validated>","nodes":[]},{"pos":[1199,1413],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.","source":"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed."},{"pos":[1420,1744],"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id=\"ph3\">`true`</ph> in the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.","source":"If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed."},{"pos":[1752,2418],"content":"[!CAUTION]\n Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section, and the \"Message Deadlocks\" section of the \"About Messages and Message Queues\" topic in the MSDN library at http://msdn.microsoft.com/library.","leadings":["","> "],"nodes":[{"content":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section, and the \"Message Deadlocks\" section of the \"About Messages and Message Queues\" topic in the MSDN library at http://msdn.microsoft.com/library.","pos":[11,664],"nodes":[{"content":"Do not attempt to set focus from within the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.","pos":[1,336],"source":" Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers."},{"content":"Doing so can cause your application or the operating system to stop responding.","pos":[337,416]},{"content":"For more information, see the <ph id=\"ph1\">`WM_KILLFOCUS`</ph> topic in the \"Keyboard Input Reference\" section, and the \"Message Deadlocks\" section of the \"About Messages and Message Queues\" topic in the MSDN library at http://msdn.microsoft.com/library.","pos":[417,653],"source":" For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section, and the \"Message Deadlocks\" section of the \"About Messages and Message Queues\" topic in the MSDN library at http://msdn.microsoft.com/library."}]}]},{"pos":[2425,2575],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[987826,990445],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the control and all its child controls are displayed.","nodes":[{"pos":[0,93],"content":"Gets or sets a value indicating whether the control and all its child controls are displayed.","nodes":[{"content":"Gets or sets a value indicating whether the control and all its child controls are displayed.","pos":[0,93]}]}],"pos":[992390,992484],"yaml":true},{"content":"Note that even if `Visible` is set to `true`, the control might not be visible to the user if it is obscured behind other controls.","nodes":[{"pos":[0,131],"content":"Note that even if <ph id=\"ph1\">`Visible`</ph> is set to <ph id=\"ph2\">`true`</ph>, the control might not be visible to the user if it is obscured behind other controls.","source":"Note that even if `Visible` is set to `true`, the control might not be visible to the user if it is obscured behind other controls."}],"pos":[992495,992627],"yaml":true,"extradata":"MT"},{"content":"`true` if the control and all its child controls are displayed; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,106],"content":"`true` if the control and all its child controls are displayed; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the control and all its child controls are displayed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,83],"source":"`true` if the control and all its child controls are displayed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[84,106],"source":" The default is `true`."}]}],"pos":[993943,994052],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Control.Visible\"></xref> property value changes.","nodes":[{"pos":[0,97],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Visible\"&gt;&lt;/xref&gt;</ph> property value changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Control.Visible\"></xref> property value changes."}],"pos":[995049,995147],"yaml":true},{"content":"This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,153],"content":"This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction.","nodes":[{"content":"This event is raised if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.","pos":[0,153],"source":"This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction."}]},{"pos":[160,310],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[995158,995473],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the width of the control.","nodes":[{"pos":[0,38],"content":"Gets or sets the width of the control.","nodes":[{"content":"Gets or sets the width of the control.","pos":[0,38]}]}],"pos":[997144,997183],"yaml":true},{"content":"Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.","nodes":[{"pos":[0,224],"content":"Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.","nodes":[{"content":"Changes made to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property values cause the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property value of the control to change.","pos":[0,224],"source":"Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change."}]}],"pos":[997194,997419],"yaml":true,"extradata":"MT"},{"content":"The width of the control in pixels.","nodes":[{"pos":[0,35],"content":"The width of the control in pixels.","nodes":[{"content":"The width of the control in pixels.","pos":[0,35]}]}],"pos":[998422,998458],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[999492,999538],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[999549,999595],"yaml":true,"extradata":"MT"},{"content":"The NativeWindow contained within the control.","nodes":[{"pos":[0,46],"content":"The NativeWindow contained within the control.","nodes":[{"content":"The NativeWindow contained within the control.","pos":[0,46]}]}],"pos":[999822,999869],"yaml":true},{"content":"Processes Windows messages.","nodes":[{"pos":[0,27],"content":"Processes Windows messages.","nodes":[{"content":"Processes Windows messages.","pos":[0,27]}]}],"pos":[1000998,1001026],"yaml":true},{"content":"All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.  \n  \n The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function. For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).","nodes":[{"pos":[0,182],"content":"All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.","nodes":[{"content":"All messages are sent to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method after getting filtered through the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> method.","pos":[0,182],"source":"All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method."}]},{"pos":[189,438],"content":"The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function. For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method corresponds exactly to the Windows <ph id=\"ph2\">`WindowProc`</ph> function.","pos":[0,115],"source":"The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function."},{"content":"For more information about processing Windows messages, see the <bpt id=\"p1\">[</bpt>WindowProc function<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.","pos":[116,249],"source":" For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565)."}]}],"pos":[1001037,1001480],"yaml":true,"extradata":"MT"},{"content":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.","nodes":[{"pos":[0,73],"content":"The Windows <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph> to process.","source":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process."}],"pos":[1002909,1002983],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DragDrop\"></xref> event.","nodes":[{"pos":[0,76],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DragDrop\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DragDrop\"></xref> event."}],"pos":[1004242,1004319],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data."}],"pos":[1004518,1004606],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DragEnter\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DragEnter\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DragEnter\"></xref> event."}],"pos":[1005885,1005963],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data."}],"pos":[1006163,1006251],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DragLeave\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DragLeave\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DragLeave\"></xref> event."}],"pos":[1007487,1007565],"yaml":true},{"content":"A <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[1007708,1007778],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.DragOver\"></xref> event.","nodes":[{"pos":[0,76],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DragOver\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.DragOver\"></xref> event."}],"pos":[1009074,1009151],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DragEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data."}],"pos":[1009350,1009438],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.Control\n  commentId: T:System.Windows.Forms.Control\n  id: Control\n  children:\n  - System.Windows.Forms.Control.#ctor\n  - System.Windows.Forms.Control.#ctor(System.String)\n  - System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)\n  - System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityObject\n  - System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  - System.Windows.Forms.Control.AccessibleDescription\n  - System.Windows.Forms.Control.AccessibleName\n  - System.Windows.Forms.Control.AccessibleRole\n  - System.Windows.Forms.Control.AllowDrop\n  - System.Windows.Forms.Control.Anchor\n  - System.Windows.Forms.Control.AutoScrollOffset\n  - System.Windows.Forms.Control.AutoSize\n  - System.Windows.Forms.Control.AutoSizeChanged\n  - System.Windows.Forms.Control.BackColor\n  - System.Windows.Forms.Control.BackColorChanged\n  - System.Windows.Forms.Control.BackgroundImage\n  - System.Windows.Forms.Control.BackgroundImageChanged\n  - System.Windows.Forms.Control.BackgroundImageLayout\n  - System.Windows.Forms.Control.BackgroundImageLayoutChanged\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.BindingContext\n  - System.Windows.Forms.Control.BindingContextChanged\n  - System.Windows.Forms.Control.Bottom\n  - System.Windows.Forms.Control.Bounds\n  - System.Windows.Forms.Control.BringToFront\n  - System.Windows.Forms.Control.CanEnableIme\n  - System.Windows.Forms.Control.CanFocus\n  - System.Windows.Forms.Control.CanRaiseEvents\n  - System.Windows.Forms.Control.CanSelect\n  - System.Windows.Forms.Control.Capture\n  - System.Windows.Forms.Control.CausesValidation\n  - System.Windows.Forms.Control.CausesValidationChanged\n  - System.Windows.Forms.Control.ChangeUICues\n  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  - System.Windows.Forms.Control.Click\n  - System.Windows.Forms.Control.ClientRectangle\n  - System.Windows.Forms.Control.ClientSize\n  - System.Windows.Forms.Control.ClientSizeChanged\n  - System.Windows.Forms.Control.CompanyName\n  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  - System.Windows.Forms.Control.ContainsFocus\n  - System.Windows.Forms.Control.ContextMenu\n  - System.Windows.Forms.Control.ContextMenuChanged\n  - System.Windows.Forms.Control.ContextMenuStrip\n  - System.Windows.Forms.Control.ContextMenuStripChanged\n  - System.Windows.Forms.Control.ControlAdded\n  - System.Windows.Forms.Control.ControlRemoved\n  - System.Windows.Forms.Control.Controls\n  - System.Windows.Forms.Control.CreateAccessibilityInstance\n  - System.Windows.Forms.Control.CreateControl\n  - System.Windows.Forms.Control.CreateControlsInstance\n  - System.Windows.Forms.Control.Created\n  - System.Windows.Forms.Control.CreateGraphics\n  - System.Windows.Forms.Control.CreateHandle\n  - System.Windows.Forms.Control.CreateParams\n  - System.Windows.Forms.Control.Cursor\n  - System.Windows.Forms.Control.CursorChanged\n  - System.Windows.Forms.Control.DataBindings\n  - System.Windows.Forms.Control.DefaultBackColor\n  - System.Windows.Forms.Control.DefaultCursor\n  - System.Windows.Forms.Control.DefaultFont\n  - System.Windows.Forms.Control.DefaultForeColor\n  - System.Windows.Forms.Control.DefaultImeMode\n  - System.Windows.Forms.Control.DefaultMargin\n  - System.Windows.Forms.Control.DefaultMaximumSize\n  - System.Windows.Forms.Control.DefaultMinimumSize\n  - System.Windows.Forms.Control.DefaultPadding\n  - System.Windows.Forms.Control.DefaultSize\n  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.DestroyHandle\n  - System.Windows.Forms.Control.DeviceDpi\n  - System.Windows.Forms.Control.DisplayRectangle\n  - System.Windows.Forms.Control.Dispose(System.Boolean)\n  - System.Windows.Forms.Control.Disposing\n  - System.Windows.Forms.Control.Dock\n  - System.Windows.Forms.Control.DockChanged\n  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  - System.Windows.Forms.Control.DoubleBuffered\n  - System.Windows.Forms.Control.DoubleClick\n  - System.Windows.Forms.Control.DpiChangedAfterParent\n  - System.Windows.Forms.Control.DpiChangedBeforeParent\n  - System.Windows.Forms.Control.DragDrop\n  - System.Windows.Forms.Control.DragEnter\n  - System.Windows.Forms.Control.DragLeave\n  - System.Windows.Forms.Control.DragOver\n  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Enabled\n  - System.Windows.Forms.Control.EnabledChanged\n  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  - System.Windows.Forms.Control.Enter\n  - System.Windows.Forms.Control.FindForm\n  - System.Windows.Forms.Control.Focus\n  - System.Windows.Forms.Control.Focused\n  - System.Windows.Forms.Control.Font\n  - System.Windows.Forms.Control.FontChanged\n  - System.Windows.Forms.Control.FontHeight\n  - System.Windows.Forms.Control.ForeColor\n  - System.Windows.Forms.Control.ForeColorChanged\n  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  - System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  - System.Windows.Forms.Control.GetAutoSizeMode\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  - System.Windows.Forms.Control.GetContainerControl\n  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  - System.Windows.Forms.Control.GetTopLevel\n  - System.Windows.Forms.Control.GiveFeedback\n  - System.Windows.Forms.Control.GotFocus\n  - System.Windows.Forms.Control.Handle\n  - System.Windows.Forms.Control.HandleCreated\n  - System.Windows.Forms.Control.HandleDestroyed\n  - System.Windows.Forms.Control.HasChildren\n  - System.Windows.Forms.Control.Height\n  - System.Windows.Forms.Control.HelpRequested\n  - System.Windows.Forms.Control.Hide\n  - System.Windows.Forms.Control.ImeMode\n  - System.Windows.Forms.Control.ImeModeBase\n  - System.Windows.Forms.Control.ImeModeChanged\n  - System.Windows.Forms.Control.InitLayout\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Invalidate(System.Boolean)\n  - System.Windows.Forms.Control.Invalidate\n  - System.Windows.Forms.Control.Invalidated\n  - System.Windows.Forms.Control.Invoke(System.Delegate)\n  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokeRequired\n  - System.Windows.Forms.Control.IsAccessible\n  - System.Windows.Forms.Control.IsDisposed\n  - System.Windows.Forms.Control.IsHandleCreated\n  - System.Windows.Forms.Control.IsInputChar(System.Char)\n  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsMirrored\n  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  - System.Windows.Forms.Control.KeyDown\n  - System.Windows.Forms.Control.KeyPress\n  - System.Windows.Forms.Control.KeyUp\n  - System.Windows.Forms.Control.Layout\n  - System.Windows.Forms.Control.LayoutEngine\n  - System.Windows.Forms.Control.Leave\n  - System.Windows.Forms.Control.Left\n  - System.Windows.Forms.Control.Location\n  - System.Windows.Forms.Control.LocationChanged\n  - System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)\n  - System.Windows.Forms.Control.LostFocus\n  - System.Windows.Forms.Control.Margin\n  - System.Windows.Forms.Control.MarginChanged\n  - System.Windows.Forms.Control.MaximumSize\n  - System.Windows.Forms.Control.MinimumSize\n  - System.Windows.Forms.Control.ModifierKeys\n  - System.Windows.Forms.Control.MouseButtons\n  - System.Windows.Forms.Control.MouseCaptureChanged\n  - System.Windows.Forms.Control.MouseClick\n  - System.Windows.Forms.Control.MouseDoubleClick\n  - System.Windows.Forms.Control.MouseDown\n  - System.Windows.Forms.Control.MouseEnter\n  - System.Windows.Forms.Control.MouseHover\n  - System.Windows.Forms.Control.MouseLeave\n  - System.Windows.Forms.Control.MouseMove\n  - System.Windows.Forms.Control.MousePosition\n  - System.Windows.Forms.Control.MouseUp\n  - System.Windows.Forms.Control.MouseWheel\n  - System.Windows.Forms.Control.Move\n  - System.Windows.Forms.Control.Name\n  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  - System.Windows.Forms.Control.OnClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnCreateControl\n  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)\n  - System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)\n  - System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)\n  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  - System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMove(System.EventArgs)\n  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnResize(System.EventArgs)\n  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.Padding\n  - System.Windows.Forms.Control.PaddingChanged\n  - System.Windows.Forms.Control.Paint\n  - System.Windows.Forms.Control.Parent\n  - System.Windows.Forms.Control.ParentChanged\n  - System.Windows.Forms.Control.PerformLayout\n  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  - System.Windows.Forms.Control.PreferredSize\n  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreviewKeyDown\n  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  - System.Windows.Forms.Control.ProductName\n  - System.Windows.Forms.Control.ProductVersion\n  - System.Windows.Forms.Control.PropagatingImeMode\n  - System.Windows.Forms.Control.QueryAccessibilityHelp\n  - System.Windows.Forms.Control.QueryContinueDrag\n  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.RecreateHandle\n  - System.Windows.Forms.Control.RecreatingHandle\n  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.Refresh\n  - System.Windows.Forms.Control.Region\n  - System.Windows.Forms.Control.RegionChanged\n  - System.Windows.Forms.Control.RenderRightToLeft\n  - System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.ResetBackColor\n  - System.Windows.Forms.Control.ResetBindings\n  - System.Windows.Forms.Control.ResetCursor\n  - System.Windows.Forms.Control.ResetFont\n  - System.Windows.Forms.Control.ResetForeColor\n  - System.Windows.Forms.Control.ResetImeMode\n  - System.Windows.Forms.Control.ResetMouseEventArgs\n  - System.Windows.Forms.Control.ResetRightToLeft\n  - System.Windows.Forms.Control.ResetText\n  - System.Windows.Forms.Control.Resize\n  - System.Windows.Forms.Control.ResizeRedraw\n  - System.Windows.Forms.Control.ResumeLayout\n  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  - System.Windows.Forms.Control.Right\n  - System.Windows.Forms.Control.RightToLeft\n  - System.Windows.Forms.Control.RightToLeftChanged\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  - System.Windows.Forms.Control.Scale(System.Single)\n  - System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  - System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  - System.Windows.Forms.Control.ScaleChildren\n  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.Select\n  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SendToBack\n  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  - System.Windows.Forms.Control.Show\n  - System.Windows.Forms.Control.ShowFocusCues\n  - System.Windows.Forms.Control.ShowKeyboardCues\n  - System.Windows.Forms.Control.Site\n  - System.Windows.Forms.Control.Size\n  - System.Windows.Forms.Control.SizeChanged\n  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.StyleChanged\n  - System.Windows.Forms.Control.SuspendLayout\n  - System.Windows.Forms.Control.SystemColorsChanged\n  - System.Windows.Forms.Control.TabIndex\n  - System.Windows.Forms.Control.TabIndexChanged\n  - System.Windows.Forms.Control.TabStop\n  - System.Windows.Forms.Control.TabStopChanged\n  - System.Windows.Forms.Control.Tag\n  - System.Windows.Forms.Control.Text\n  - System.Windows.Forms.Control.TextChanged\n  - System.Windows.Forms.Control.Top\n  - System.Windows.Forms.Control.TopLevelControl\n  - System.Windows.Forms.Control.Update\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateBounds\n  - System.Windows.Forms.Control.UpdateStyles\n  - System.Windows.Forms.Control.UpdateZOrder\n  - System.Windows.Forms.Control.UseWaitCursor\n  - System.Windows.Forms.Control.Validated\n  - System.Windows.Forms.Control.Validating\n  - System.Windows.Forms.Control.Visible\n  - System.Windows.Forms.Control.VisibleChanged\n  - System.Windows.Forms.Control.Width\n  - System.Windows.Forms.Control.WindowTarget\n  - System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  langs:\n  - csharp\n  name: Control\n  nameWithType: Control\n  fullName: System.Windows.Forms.Control\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Defines the base class for controls, which are components with visual representation.\n  remarks: \"To create your own control class, inherit from the <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, or from the other Windows Forms provided controls. For more information about authoring custom controls, see [Developing Custom Windows Forms Controls with the .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md).  \\n  \\n The <xref:System.Windows.Forms.Control> class implements very basic functionality required by classes that display information to the user. It handles user input through the keyboard and pointing devices. It handles message routing and security. It defines the bounds of a control (its position and size), although it does not implement painting. It provides a window handle (`hWnd`).  \\n  \\n Windows Forms controls use ambient properties so child controls can appear like their surrounding environment. An *ambient property* is a control property that, if not set, is retrieved from the parent control. If the control does not have a <xref:System.Windows.Forms.Control.Parent%2A>, and the property is not set, the control attempts to determine the value of the ambient property through the <xref:System.Windows.Forms.Control.Site%2A> property. If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <xref:System.Windows.Forms.AmbientProperties>, the control uses its own default values. Typically, an ambient property represents a characteristic of a control, such as <xref:System.Windows.Forms.Control.BackColor%2A>, that is communicated to a child control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. Ambient properties provided by the <xref:System.Windows.Forms.Control>class include: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, and <xref:System.Windows.Forms.Control.RightToLeft%2A>.  \\n  \\n> [!NOTE]\\n>  To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable. A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file. For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration. For more information about using visual styles, see[Visual Styles](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).  \\n  \\n Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities. Sometimes you will want to provide additional information to accessibility client applications. There are two ways of providing this additional information. You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications. This method is typically used to provide limited accessibility information for existing controls. Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed.  \\n  \\n> [!NOTE]\\n>  To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.  \\n  \\n> [!NOTE]\\n>  Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor. Doing so will cause errors in code generation and can cause unwanted behavior.  \\n  \\n The majority of the controls in the <xref:System.Windows.Forms> namespace use the underlying Windows common control as a base to build on. For more information about the Windows common controls, see[General Control Reference](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).  \\n  \\n To identify Windows Forms controls from a separate process, use a standard `SendMessage` call to pass the WM_GETCONTROLNAME message. WM_GETCONTROLNAME is independent of the language and Windows hierarchy. For more information, see the \\\"Recommended Solution for Windows Forms\\\" topic in[Automating Windows Forms](http://msdn.microsoft.com/library/ms996405.aspx).  \\n  \\n Use the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property to synchronize access to the control from multiple threads. For more information about multithreaded Windows Forms controls, see [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class Control : System.ComponentModel.Component, IDisposable, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IBindableComponent, System.Windows.Forms.IDropTarget, System.Windows.Forms.IWin32Window\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  derivedClasses:\n  - System.Windows.Forms.AxHost\n  - System.Windows.Forms.ButtonBase\n  - System.Windows.Forms.DataGrid\n  - System.Windows.Forms.DataGridView\n  - System.Windows.Forms.DateTimePicker\n  - System.Windows.Forms.GroupBox\n  - System.Windows.Forms.Label\n  - System.Windows.Forms.ListControl\n  - System.Windows.Forms.ListView\n  - System.Windows.Forms.MdiClient\n  - System.Windows.Forms.MonthCalendar\n  - System.Windows.Forms.PictureBox\n  - System.Windows.Forms.PrintPreviewControl\n  - System.Windows.Forms.ProgressBar\n  - System.Windows.Forms.ScrollableControl\n  - System.Windows.Forms.ScrollBar\n  - System.Windows.Forms.Splitter\n  - System.Windows.Forms.StatusBar\n  - System.Windows.Forms.TabControl\n  - System.Windows.Forms.TextBoxBase\n  - System.Windows.Forms.ToolBar\n  - System.Windows.Forms.TrackBar\n  - System.Windows.Forms.TreeView\n  - System.Windows.Forms.WebBrowserBase\n  - System.Windows.Forms.DataVisualization.Charting.Chart\n  - System.Windows.Forms.Integration.ElementHost\n  implements:\n  - System.ComponentModel.ISynchronizeInvoke\n  - System.IDisposable\n  - System.Windows.Forms.IBindableComponent\n  - System.Windows.Forms.IDropTarget\n  - System.Windows.Forms.IWin32Window\n  inheritedMembers:\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.#ctor\n  commentId: M:System.Windows.Forms.Control.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Control()\n  nameWithType: Control.Control()\n  fullName: Control.Control()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with default settings.\n  remarks: The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.\n  syntax:\n    content: public Control ();\n    parameters: []\n  overload: System.Windows.Forms.Control.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.#ctor(System.String)\n  commentId: M:System.Windows.Forms.Control.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Control(String)\n  nameWithType: Control.Control(String)\n  fullName: Control.Control(String)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with specific text.\n  remarks: \"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  \\n  \\n This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.\"\n  syntax:\n    content: public Control (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text displayed by the control.\n  overload: System.Windows.Forms.Control.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)\n  commentId: M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)\n  id: '#ctor(System.Windows.Forms.Control,System.String)'\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Control(Control, String)\n  nameWithType: Control.Control(Control, String)\n  fullName: Control.Control(Control, String)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class as a child control, with specific text.\n  remarks: \"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  \\n  \\n This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value. The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.\"\n  syntax:\n    content: public Control (System.Windows.Forms.Control parent, string text);\n    parameters:\n    - id: parent\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to be the parent of the control.\n    - id: text\n      type: System.String\n      description: The text displayed by the control.\n  overload: System.Windows.Forms.Control.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Control(String, Int32, Int32, Int32, Int32)\n  nameWithType: Control.Control(String, Int32, Int32, Int32, Int32)\n  fullName: Control.Control(String, Int32, Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class with specific text, size, and location.\n  remarks: \"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  \\n  \\n This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A>property value to the `text` parameter value. The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.  \\n  \\n> [!NOTE]\\n>  To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.\"\n  syntax:\n    content: public Control (string text, int left, int top, int width, int height);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text displayed by the control.\n    - id: left\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Point.X\"></xref> position of the control, in pixels, from the left edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Left\"></xref> property.\n    - id: top\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Point.Y\"></xref> position of the control, in pixels, from the top edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Top\"></xref> property.\n    - id: width\n      type: System.Int32\n      description: The width of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Width\"></xref> property.\n    - id: height\n      type: System.Int32\n      description: The height of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Height\"></xref> property.\n  overload: System.Windows.Forms.Control.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Control(Control, String, Int32, Int32, Int32, Int32)\n  nameWithType: Control.Control(Control, String, Int32, Int32, Int32, Int32)\n  fullName: Control.Control(Control, String, Int32, Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.Control\"></xref> class as a child control, with specific text, size, and location.\n  remarks: \"The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application. Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.  \\n  \\n This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value. The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>. The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.  \\n  \\n> [!NOTE]\\n>  To maintain better performance, do not set the size of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.\"\n  syntax:\n    content: public Control (System.Windows.Forms.Control parent, string text, int left, int top, int width, int height);\n    parameters:\n    - id: parent\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to be the parent of the control.\n    - id: text\n      type: System.String\n      description: The text displayed by the control.\n    - id: left\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Point.X\"></xref> position of the control, in pixels, from the left edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Left\"></xref> property.\n    - id: top\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Point.Y\"></xref> position of the control, in pixels, from the top edge of the control's container. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Top\"></xref> property.\n    - id: width\n      type: System.Int32\n      description: The width of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Width\"></xref> property.\n    - id: height\n      type: System.Int32\n      description: The height of the control, in pixels. The value is assigned to the <xref href=\"System.Windows.Forms.Control.Height\"></xref> property.\n  overload: System.Windows.Forms.Control.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  commentId: M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  id: AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AccessibilityNotifyClients(AccessibleEvents, Int32)\n  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents, Int32)\n  fullName: Control.AccessibilityNotifyClients(AccessibleEvents, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Notifies the accessibility client applications of the specified <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> for the specified child control.\n  remarks: You must call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName> method for each <xref:System.Windows.Forms.AccessibleEvents> the accessibility client applications are to be notified of. The <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method is typically called when a property is set or from within an event handler. For example, you might call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method and pass in an <xref:System.Windows.Forms.AccessibleEvents> value of `Hide` from within the event handler for the <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName> event.\n  example:\n  - \"The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates calling the <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A> method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#5)]\\n [!code-csharp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#5)]\\n [!code-vb[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#5)]\"\n  syntax:\n    content: protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);\n    parameters:\n    - id: accEvent\n      type: System.Windows.Forms.AccessibleEvents\n      description: The <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> to notify the accessibility client applications of.\n    - id: childID\n      type: System.Int32\n      description: The child <xref href=\"System.Windows.Forms.Control\"></xref> to notify of the accessible event.\n  overload: System.Windows.Forms.Control.AccessibilityNotifyClients*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  id: AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  fullName: Control.AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Notifies the accessibility client applications of the specified <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> for the specified child control .\n  syntax:\n    content: protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int objectID, int childID);\n    parameters:\n    - id: accEvent\n      type: System.Windows.Forms.AccessibleEvents\n      description: The <xref href=\"System.Windows.Forms.AccessibleEvents\"></xref> to notify the accessibility client applications of.\n    - id: objectID\n      type: System.Int32\n      description: The identifier of the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>.\n    - id: childID\n      type: System.Int32\n      description: The child <xref href=\"System.Windows.Forms.Control\"></xref> to notify of the accessible event.\n  overload: System.Windows.Forms.Control.AccessibilityNotifyClients*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AccessibilityObject\n  commentId: P:System.Windows.Forms.Control.AccessibilityObject\n  id: AccessibilityObject\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AccessibilityObject\n  nameWithType: Control.AccessibilityObject\n  fullName: Control.AccessibilityObject\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> assigned to the control.\n  remarks: \"To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.  \\n  \\n If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.  \\n  \\n> [!NOTE]\\n>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  \\n  \\n For more information about accessible objects, see [Active Accessibility](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx).\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: The <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> assigned to the control.\n  overload: System.Windows.Forms.Control.AccessibilityObject*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  commentId: P:System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  id: AccessibleDefaultActionDescription\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AccessibleDefaultActionDescription\n  nameWithType: Control.AccessibleDefaultActionDescription\n  fullName: Control.AccessibleDefaultActionDescription\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the default action description of the control for use by accessibility client applications.\n  remarks: \"An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint. This property should be a verb or a short verb phrase.  \\n  \\n> [!NOTE]\\n>  Not all objects have default actions, and some objects might have a default action that is related to its <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName> property, such as in the following examples:  \\n  \\n-   A selected check box has a default action of \\\"Uncheck\\\" and a value of \\\"Checked.\\\"  \\n  \\n-   A cleared check box has a default action of \\\"Check\\\" and a value of \\\"Unchecked.\\\"  \\n  \\n-   A button labeled \\\"Print\\\" has a default action of \\\"Press,\\\" with no value.  \\n  \\n-   A label or a text box control that shows \\\"Printer\\\" has no default action, but would have a value of \\\"Printer.\\\"  \\n  \\n For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string AccessibleDefaultActionDescription { get; set; }\n    return:\n      type: System.String\n      description: The default action description of the control for use by accessibility client applications.\n  overload: System.Windows.Forms.Control.AccessibleDefaultActionDescription*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AccessibleDescription\n  commentId: P:System.Windows.Forms.Control.AccessibleDescription\n  id: AccessibleDescription\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AccessibleDescription\n  nameWithType: Control.AccessibleDescription\n  fullName: Control.AccessibleDescription\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the description of the control used by accessibility client applications.\n  remarks: \"An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance. The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.  \\n  \\n The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties. For example, a button with \\\"OK\\\" would not need additional information, but a button that shows a picture of a cactus would. The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as \\\"A button that shows a picture of a cactus.\\\"  \\n  \\n For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).\"\n  example:\n  - \"The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties, because the <xref:System.Windows.Forms.Control.Text%2A> property is `null`. This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.  \\n  \\n [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]\\n [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]\\n [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]\"\n  syntax:\n    content: public string AccessibleDescription { get; set; }\n    return:\n      type: System.String\n      description: The description of the control used by accessibility client applications. The default is `null`.\n  overload: System.Windows.Forms.Control.AccessibleDescription*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AccessibleName\n  commentId: P:System.Windows.Forms.Control.AccessibleName\n  id: AccessibleName\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AccessibleName\n  nameWithType: Control.AccessibleName\n  fullName: Control.AccessibleName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the name of the control used by accessibility client applications.\n  remarks: \"The <xref:System.Windows.Forms.Control.AccessibleName%2A> property is a label that briefly describes and identifies the object within its container, such as the text in a <xref:System.Windows.Forms.Button>, the name of a <xref:System.Windows.Forms.MenuItem>, or a label displayed next to a <xref:System.Windows.Forms.TextBox> control.  \\n  \\n For more information about properties of accessible objects, see the \\\"[Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).\"\n  example:\n  - \"The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties since the <xref:System.Windows.Forms.Control.Text%2A> property is `null`. This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.  \\n  \\n [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]\\n [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]\\n [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]\"\n  syntax:\n    content: public string AccessibleName { get; set; }\n    return:\n      type: System.String\n      description: The name of the control used by accessibility client applications. The default is `null`.\n  overload: System.Windows.Forms.Control.AccessibleName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AccessibleRole\n  commentId: P:System.Windows.Forms.Control.AccessibleRole\n  id: AccessibleRole\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AccessibleRole\n  nameWithType: Control.AccessibleRole\n  fullName: Control.AccessibleRole\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the accessible role of the control\n  remarks: \"The <xref:System.Windows.Forms.Control.AccessibleRole%2A> property describes what kind of user interface element an object is. If the control's role cannot be determined, the <xref:System.Windows.Forms.Control.AccessibleRole%2A> property is set to `Default`.  \\n  \\n For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).\"\n  syntax:\n    content: public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }\n    return:\n      type: System.Windows.Forms.AccessibleRole\n      description: One of the values of <xref href=\"System.Windows.Forms.AccessibleRole\"></xref>. The default is `Default`.\n  overload: System.Windows.Forms.Control.AccessibleRole*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned is not one of the <xref href=\"System.Windows.Forms.AccessibleRole\"></xref> values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AllowDrop\n  commentId: P:System.Windows.Forms.Control.AllowDrop\n  id: AllowDrop\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AllowDrop\n  nameWithType: Control.AllowDrop\n  fullName: Control.AllowDrop\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the control can accept data that the user drags onto it.\n  remarks: ''\n  example:\n  - \"The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \\n  \\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]\\n [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]\\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]\"\n  syntax:\n    content: public virtual bool AllowDrop { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if drag-and-drop operations are allowed in the control; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.Control.AllowDrop*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Anchor\n  commentId: P:System.Windows.Forms.Control.Anchor\n  id: Anchor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Anchor\n  nameWithType: Control.Anchor\n  fullName: Control.Anchor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.\n  remarks: \"Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized. Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.  \\n  \\n You can anchor a control to one or more edges of its container. For example, if you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> whose <xref:System.Windows.Forms.Control.Anchor%2A> property value is set to `Top` and `Bottom`, the <xref:System.Windows.Forms.Button> is stretched to maintain the anchored distance to the top and bottom edges of the <xref:System.Windows.Forms.Form> as the <xref:System.Windows.Forms.Control.Height%2A> of the <xref:System.Windows.Forms.Form> is increased.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.\"\n  example:\n  - \"The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]\\n [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]\\n [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.AnchorStyles Anchor { get; set; }\n    return:\n      type: System.Windows.Forms.AnchorStyles\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.AnchorStyles\"></xref> values. The default is `Top` and `Left`.\n  overload: System.Windows.Forms.Control.Anchor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AutoScrollOffset\n  commentId: P:System.Windows.Forms.Control.AutoScrollOffset\n  id: AutoScrollOffset\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AutoScrollOffset\n  nameWithType: Control.AutoScrollOffset\n  fullName: Control.AutoScrollOffset\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets where this control is scrolled to in <xref href=\"System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)\"></xref>.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual System.Drawing.Point AutoScrollOffset { get; set; }\n    return:\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> specifying the scroll location. The default is the upper-left corner of the control.\n  overload: System.Windows.Forms.Control.AutoScrollOffset*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AutoSize\n  commentId: P:System.Windows.Forms.Control.AutoSize\n  id: AutoSize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AutoSize\n  nameWithType: Control.AutoSize\n  fullName: Control.AutoSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant for this class.\n  remarks: This property is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual bool AutoSize { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if enabled; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.AutoSize*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.AutoSizeChanged\n  commentId: E:System.Windows.Forms.Control.AutoSizeChanged\n  id: AutoSizeChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: AutoSizeChanged\n  nameWithType: Control.AutoSizeChanged\n  fullName: Control.AutoSizeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This event is not relevant for this class.\n  remarks: This event is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler AutoSizeChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BackColor\n  commentId: P:System.Windows.Forms.Control.BackColor\n  id: BackColor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BackColor\n  nameWithType: Control.BackColor\n  fullName: Control.BackColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the background color for the control.\n  remarks: \"The <xref:System.Windows.Forms.Control.BackColor%2A> property does not support transparent colors unless the `SupportsTransparentBackColor` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> is set to `true`.  \\n  \\n The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.\"\n  example:\n  - \"The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]\\n [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]\"\n  syntax:\n    content: public virtual System.Drawing.Color BackColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultBackColor\"></xref> property.\n  overload: System.Windows.Forms.Control.BackColor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.BackColorChanged\n  commentId: E:System.Windows.Forms.Control.BackColorChanged\n  id: BackColorChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BackColorChanged\n  nameWithType: Control.BackColorChanged\n  fullName: Control.BackColorChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.BackColor%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form>that contains a <xref:System.Windows.Forms.TextBox>.  \\n  \\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]\"\n  syntax:\n    content: public event EventHandler BackColorChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BackgroundImage\n  commentId: P:System.Windows.Forms.Control.BackgroundImage\n  id: BackgroundImage\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BackgroundImage\n  nameWithType: Control.BackgroundImage\n  fullName: Control.BackgroundImage\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the background image displayed in the control.\n  remarks: \"-   Use the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property to place a graphic image onto a control.  \\n  \\n> [!NOTE]\\n>  Images with translucent or transparent colors are not supported by Windows Forms controls as background images.  \\n>   \\n>  This property is not supported on child controls whose <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is `true`.\"\n  example:\n  - \"The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]\\n [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]\\n [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]\"\n  syntax:\n    content: public virtual System.Drawing.Image BackgroundImage { get; set; }\n    return:\n      type: System.Drawing.Image\n      description: An <xref href=\"System.Drawing.Image\"></xref> that represents the image to display in the background of the control.\n  overload: System.Windows.Forms.Control.BackgroundImage*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BackgroundImageChanged\n  commentId: E:System.Windows.Forms.Control.BackgroundImageChanged\n  id: BackgroundImageChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BackgroundImageChanged\n  nameWithType: Control.BackgroundImageChanged\n  fullName: Control.BackgroundImageChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.BackgroundImage\"></xref> property changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \\n  \\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]\"\n  syntax:\n    content: public event EventHandler BackgroundImageChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BackgroundImageLayout\n  commentId: P:System.Windows.Forms.Control.BackgroundImageLayout\n  id: BackgroundImageLayout\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BackgroundImageLayout\n  nameWithType: Control.BackgroundImageLayout\n  fullName: Control.BackgroundImageLayout\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the background image layout as defined in the <xref href=\"System.Windows.Forms.ImageLayout\"></xref> enumeration.\n  remarks: \"Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control. <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set.  \\n  \\n You can increase performance for large images if you set <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> to something other than <xref:System.Windows.Forms.ImageLayout.Tile>.\"\n  syntax:\n    content: public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }\n    return:\n      type: System.Windows.Forms.ImageLayout\n      description: One of the values of <xref href=\"System.Windows.Forms.ImageLayout\"></xref> (<xref href=\"System.Windows.Forms.ImageLayout.Center\"></xref> , <xref href=\"System.Windows.Forms.ImageLayout.None\"></xref>, <xref href=\"System.Windows.Forms.ImageLayout.Stretch\"></xref>, <xref href=\"System.Windows.Forms.ImageLayout.Tile\"></xref>, or <xref href=\"System.Windows.Forms.ImageLayout.Zoom\"></xref>). <xref href=\"System.Windows.Forms.ImageLayout.Tile\"></xref> is the default value.\n  overload: System.Windows.Forms.Control.BackgroundImageLayout*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The specified enumeration value does not exist.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BackgroundImageLayoutChanged\n  commentId: E:System.Windows.Forms.Control.BackgroundImageLayoutChanged\n  id: BackgroundImageLayoutChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BackgroundImageLayoutChanged\n  nameWithType: Control.BackgroundImageLayoutChanged\n  fullName: Control.BackgroundImageLayoutChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayout\"></xref> property changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property changes either programmatically or by user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#9)]\\n [!code-vb[System.Windows.Forms.EventExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#9)]\"\n  syntax:\n    content: public event EventHandler BackgroundImageLayoutChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  commentId: M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  id: BeginInvoke(System.Delegate)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BeginInvoke(Delegate)\n  nameWithType: Control.BeginInvoke(Delegate)\n  fullName: Control.BeginInvoke(Delegate)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.\n  remarks: \"The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.  \\n  \\n You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required. <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.  \\n  \\n> [!NOTE]\\n>  Most methods on a control can only be called from the thread where the control was created. In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread. The invoke methods always invoke their callbacks on the control's thread.  \\n  \\n> [!NOTE]\\n>  An exception might be thrown if the thread that should process the message is no longer active.\"\n  example:\n  - \"The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.  \\n  \\n [!code-cpp[Control_BeginInvoke#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#2)]\\n [!code-csharp[Control_BeginInvoke#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#2)]\\n [!code-vb[Control_BeginInvoke#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#2)]\"\n  syntax:\n    content: public IAsyncResult BeginInvoke (Delegate method);\n    parameters:\n    - id: method\n      type: System.Delegate\n      description: A delegate to a method that takes no parameters.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that represents the result of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> operation.\n  overload: System.Windows.Forms.Control.BeginInvoke*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No appropriate window handle can be found.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  commentId: M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  id: BeginInvoke(System.Delegate,System.Object[])\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BeginInvoke(Delegate, Object[])\n  nameWithType: Control.BeginInvoke(Delegate, Object[])\n  fullName: Control.BeginInvoke(Delegate, Object[])\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.\n  remarks: \"The delegate is called asynchronously, and this method returns immediately. You can call this method from any thread, even the thread that owns the control's handle. If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception. Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.  \\n  \\n You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required. <xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.  \\n  \\n> [!NOTE]\\n>  Most methods on a control can only be called from the thread where the control was created. In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread. The invoke methods always invoke their callbacks on the control's thread.  \\n  \\n> [!NOTE]\\n>  An exception might be thrown if the thread that should process the message is no longer active.\"\n  example:\n  - \"The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.  \\n  \\n [!code-cpp[Control_BeginInvoke#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#1)]\\n [!code-csharp[Control_BeginInvoke#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#1)]\\n [!code-vb[Control_BeginInvoke#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginInvoke (Delegate method, object[] args);\n    parameters:\n    - id: method\n      type: System.Delegate\n      description: A delegate to a method that takes parameters of the same number and type that are contained in the <code>args</code> parameter.\n    - id: args\n      type: System.Object[]\n      description: An array of objects to pass as arguments to the given method. This can be `null` if no arguments are needed.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that represents the result of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> operation.\n  overload: System.Windows.Forms.Control.BeginInvoke*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No appropriate window handle can be found.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BindingContext\n  commentId: P:System.Windows.Forms.Control.BindingContext\n  id: BindingContext\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BindingContext\n  nameWithType: Control.BindingContext\n  fullName: Control.BindingContext\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the <xref href=\"System.Windows.Forms.BindingContext\"></xref> for the control.\n  remarks: \"The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single<xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>. The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized. For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to.  \\n  \\n For more information about creating a new <xref:System.Windows.Forms.BindingContext> and assigning it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.\"\n  example:\n  - \"The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls, a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls, to several data sources. The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.  \\n  \\n [!code-cpp[Classic BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext Example/CS/source.cs#1)]\\n [!code-vb[Classic BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual System.Windows.Forms.BindingContext BindingContext { get; set; }\n    return:\n      type: System.Windows.Forms.BindingContext\n      description: A <xref href=\"System.Windows.Forms.BindingContext\"></xref> for the control.\n  overload: System.Windows.Forms.Control.BindingContext*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BindingContextChanged\n  commentId: E:System.Windows.Forms.Control.BindingContextChanged\n  id: BindingContextChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BindingContextChanged\n  nameWithType: Control.BindingContextChanged\n  fullName: Control.BindingContextChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.BindingContext\"></xref> property changes.\n  remarks: \"To add a new <xref:System.Windows.Forms.BindingContext> to the <xref:System.Windows.Forms.Control> through the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.  \\n  \\n This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example adds an <xref:System.EventHandler> delegate to the <xref:System.Windows.Forms.Control.BindingContextChanged> event of a <xref:System.Windows.Forms.TextBox> control.  \\n  \\n [!code-cpp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CS/source.cs#1)]\\n [!code-vb[Classic Control.BindingContextChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/VB/source.vb#1)]\"\n  syntax:\n    content: public event EventHandler BindingContextChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Bottom\n  commentId: P:System.Windows.Forms.Control.Bottom\n  id: Bottom\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Bottom\n  nameWithType: Control.Bottom\n  fullName: Control.Bottom\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.\n  remarks: \"The value of this property is equal to the sum of the <xref:System.Windows.Forms.Control.Top%2A> property value, and the <xref:System.Windows.Forms.Control.Height%2A> property value.  \\n  \\n The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property. You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.Bottom%2A> property to define the lower limit of a <xref:System.Windows.Forms.TextBox> control relative to the client area of the container.  \\n  \\n [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]\\n [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]\\n [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Bottom { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.\n  overload: System.Windows.Forms.Control.Bottom*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Bounds\n  commentId: P:System.Windows.Forms.Control.Bounds\n  id: Bounds\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Bounds\n  nameWithType: Control.Bounds\n  fullName: Control.Bounds\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.\n  remarks: The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus. The <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method is called to set the <xref:System.Windows.Forms.Control.Bounds%2A> property. The <xref:System.Windows.Forms.Control.Bounds%2A>property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.Bounds%2A> property is set.\n  example:\n  - \"The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \\n  \\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]\\n [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]\\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Rectangle Bounds { get; set; }\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.\n  overload: System.Windows.Forms.Control.Bounds*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.BringToFront\n  commentId: M:System.Windows.Forms.Control.BringToFront\n  id: BringToFront\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: BringToFront()\n  nameWithType: Control.BringToFront()\n  fullName: Control.BringToFront()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Brings the control to the front of the z-order.\n  remarks: The control is moved to the front of the z-order. If the control is a child of another control, the child control is moved to the front of the z-order. <xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event.\n  example:\n  - \"The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.  \\n  \\n [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]\\n [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]\"\n  syntax:\n    content: public void BringToFront ();\n    parameters: []\n  overload: System.Windows.Forms.Control.BringToFront*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CanEnableIme\n  commentId: P:System.Windows.Forms.Control.CanEnableIme\n  id: CanEnableIme\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CanEnableIme\n  nameWithType: Control.CanEnableIme\n  fullName: Control.CanEnableIme\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property can be set to an active value, to enable IME support.\n  remarks: Derived classes can override this property to return `false` if IME is not supported.\n  syntax:\n    content: protected virtual bool CanEnableIme { get; }\n    return:\n      type: System.Boolean\n      description: '`true` in all cases.'\n  overload: System.Windows.Forms.Control.CanEnableIme*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CanFocus\n  commentId: P:System.Windows.Forms.Control.CanFocus\n  id: CanFocus\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CanFocus\n  nameWithType: Control.CanFocus\n  fullName: Control.CanFocus\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control can receive focus.\n  remarks: In order for a control to receive input focus, the control must have a handle assigned to it, and the <xref:System.Windows.Forms.Control.Visible%2A> and <xref:System.Windows.Forms.Control.Enabled%2A> properties must both be set to `true` for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.\n  example:\n  - \"The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.  \\n  \\n [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]\\n [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]\\n [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool CanFocus { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control can receive focus; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.CanFocus*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CanRaiseEvents\n  commentId: P:System.Windows.Forms.Control.CanRaiseEvents\n  id: CanRaiseEvents\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CanRaiseEvents\n  nameWithType: Control.CanRaiseEvents\n  fullName: Control.CanRaiseEvents\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines if events can be raised on the control.\n  remarks: If this control is being hosted as an ActiveX control, this property will return `false` if the ActiveX control has its events frozen.\n  syntax:\n    content: protected override bool CanRaiseEvents { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control is hosted as an ActiveX control whose events are not frozen; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.CanRaiseEvents*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CanSelect\n  commentId: P:System.Windows.Forms.Control.CanSelect\n  id: CanSelect\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CanSelect\n  nameWithType: Control.CanSelect\n  fullName: Control.CanSelect\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control can be selected.\n  remarks: \"This property returns `true` if the `Selectable` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> is set to `true`, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.  \\n  \\n The Windows Forms controls in the following list are not selectable and will return a value of `false` for the <xref:System.Windows.Forms.Control.CanSelect%2A> property. Controls derived from these controls are also not selectable.  \\n  \\n-   <xref:System.Windows.Forms.Panel>  \\n  \\n-   <xref:System.Windows.Forms.GroupBox>  \\n  \\n-   <xref:System.Windows.Forms.PictureBox>  \\n  \\n-   <xref:System.Windows.Forms.ProgressBar>  \\n  \\n-   <xref:System.Windows.Forms.Splitter>  \\n  \\n-   <xref:System.Windows.Forms.Label>  \\n  \\n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)\"\n  example:\n  - \"The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.  \\n  \\n [!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]\\n [!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]\\n [!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool CanSelect { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control can be selected; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.CanSelect*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Capture\n  commentId: P:System.Windows.Forms.Control.Capture\n  id: Capture\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Capture\n  nameWithType: Control.Capture\n  fullName: Control.Capture\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the control has captured the mouse.\n  remarks: \"When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically only captured during drag operations.  \\n  \\n Only the foreground window can capture the mouse. When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window. Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.  \\n  \\n When the mouse is captured, shortcut keys should not work.\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Windows.Forms.Control.Capture%2A> property. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.Label> named label1 and two <xref:System.Windows.Forms.ListBox> controls named listbox1 and listbox2. Ensure the form and controls' <xref:System.Windows.Forms.Control.MouseDown> event is associated with the method in this example.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.ControlCapture#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool Capture { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control has captured the mouse; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.Capture*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CausesValidation\n  commentId: P:System.Windows.Forms.Control.CausesValidation\n  id: CausesValidation\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CausesValidation\n  nameWithType: Control.CausesValidation\n  fullName: Control.CausesValidation\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.\n  remarks: \"If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \\n  \\n The <xref:System.Windows.Forms.Control.CausesValidation%2A> property value is typically set to `false` for controls such as a Help button.\"\n  example:\n  - \"The following code example uses the derived class<xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \\\"@\\\" and \\\".\\\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. One of the buttons on the form has its <xref:System.Windows.Forms.Control.CausesValidation%2A> property set to `false`. Clicking or setting focus to this button does not trigger validation. This example requires that a <xref:System.Windows.Forms.TextBox>, an <xref:System.Windows.Forms.ErrorProvider> control, and a <xref:System.Windows.Forms.Button> have been created on a form.  \\n  \\n [!code-cpp[Control.Validating#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#2)]\\n [!code-csharp[Control.Validating#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#2)]\\n [!code-vb[Control.Validating#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#2)]\"\n  syntax:\n    content: public bool CausesValidation { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Control.CausesValidation*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CausesValidationChanged\n  commentId: E:System.Windows.Forms.Control.CausesValidationChanged\n  id: CausesValidationChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CausesValidationChanged\n  nameWithType: Control.CausesValidationChanged\n  fullName: Control.CausesValidationChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.CausesValidation\"></xref> property changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  syntax:\n    content: public event EventHandler CausesValidationChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ChangeUICues\n  commentId: E:System.Windows.Forms.Control.ChangeUICues\n  id: ChangeUICues\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ChangeUICues\n  nameWithType: Control.ChangeUICues\n  fullName: Control.ChangeUICues\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the focus or keyboard user interface (UI) cues change.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ChangeUICues> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ChangeUICues> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]\\n [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]\"\n  syntax:\n    content: public event System.Windows.Forms.UICuesEventHandler ChangeUICues;\n    return:\n      type: System.Windows.Forms.UICuesEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  commentId: P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  id: CheckForIllegalCrossThreadCalls\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CheckForIllegalCrossThreadCalls\n  nameWithType: Control.CheckForIllegalCrossThreadCalls\n  fullName: Control.CheckForIllegalCrossThreadCalls\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <xref href=\"System.Windows.Forms.Control.Handle\"></xref> property when an application is being debugged.\n  remarks: When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results. A common invalid thread activity is a call on the wrong thread that accesses the control's <xref:System.Windows.Forms.Control.Handle%2A> property. Set <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> to `true` to find and diagnose this thread activity more easily while debugging.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public static bool CheckForIllegalCrossThreadCalls { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if calls on the wrong thread are caught; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Click\n  commentId: E:System.Windows.Forms.Control.Click\n  id: Click\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Click\n  nameWithType: Control.Click\n  fullName: Control.Click\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is clicked.\n  remarks: \"The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred. If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event. However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.  \\n  \\n A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked. For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.  \\n  \\n You must set the `StandardClick` value of<xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.  \\n  \\n> [!NOTE]\\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example shows the <xref:System.Windows.Forms.Control.Click> event in an event handler.  \\n  \\n [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]\\n [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]\\n [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler Click;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ClientRectangle\n  commentId: P:System.Windows.Forms.Control.ClientRectangle\n  id: ClientRectangle\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ClientRectangle\n  nameWithType: Control.ClientRectangle\n  fullName: Control.ClientRectangle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the rectangle that represents the client area of the control.\n  remarks: \"The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.  \\n  \\n Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0). You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.  \\n  \\n For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).\"\n  example:\n  - \"The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `button2` on it.  \\n  \\n [!code-cpp[Windows.Forms.Control Member5#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Member5#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#2)]\\n [!code-vb[Windows.Forms.Control Member5#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Rectangle ClientRectangle { get; }\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the client area of the control.\n  overload: System.Windows.Forms.Control.ClientRectangle*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ClientSize\n  commentId: P:System.Windows.Forms.Control.ClientSize\n  id: ClientSize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ClientSize\n  nameWithType: Control.ClientSize\n  fullName: Control.ClientSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the height and width of the client area of the control.\n  remarks: \"The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus. The <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method is called to set the <xref:System.Windows.Forms.Control.ClientSize%2A>property. The <xref:System.Windows.Forms.Control.ClientSize%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.ClientSize%2A> property is set.  \\n  \\n The <xref:System.Drawing.Size.Width%2A?displayProperty=fullName> and <xref:System.Drawing.Size.Height%2A?displayProperty=fullName> properties represent the width and height of the client area of the control. You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.  \\n  \\n For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).  \\n  \\n> [!NOTE]\\n>  You cannot bind application settings to this property. For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).\"\n  example:\n  - \"The following code example resizes the specified control so the control will accommodate its formatted text. The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text. The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control. To make the padding appear equal, align the text with the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> value, if your control supports it.  \\n  \\n [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]\\n [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Size ClientSize { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that represents the dimensions of the client area of the control.\n  overload: System.Windows.Forms.Control.ClientSize*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ClientSizeChanged\n  commentId: E:System.Windows.Forms.Control.ClientSizeChanged\n  id: ClientSizeChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ClientSizeChanged\n  nameWithType: Control.ClientSizeChanged\n  fullName: Control.ClientSizeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ClientSize\"></xref> property changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ClientSizeChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#12)]\\n [!code-vb[System.Windows.Forms.EventExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#12)]\"\n  syntax:\n    content: public event EventHandler ClientSizeChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CompanyName\n  commentId: P:System.Windows.Forms.Control.CompanyName\n  id: CompanyName\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CompanyName\n  nameWithType: Control.CompanyName\n  fullName: Control.CompanyName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the name of the company or creator of the application containing the control.\n  remarks: \"The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property.  \\n  \\n```csharp  \\n[assembly: AssemblyCompany(\\\"Microsoft\\\")]  \\n```  \\n  \\n> [!NOTE]\\n>  It is strongly recommended that you provide the company name, product name, and product version for your app.\"\n  example:\n  - \"The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]\\n [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string CompanyName { get; }\n    return:\n      type: System.String\n      description: The company name or creator of the application containing the control.\n  overload: System.Windows.Forms.Control.CompanyName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  commentId: M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  id: Contains(System.Windows.Forms.Control)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Contains(Control)\n  nameWithType: Control.Contains(Control)\n  fullName: Control.Contains(Control)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves a value indicating whether the specified control is a child of the control.\n  remarks: ''\n  example:\n  - \"The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.  \\n  \\n [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]\\n [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]\"\n  syntax:\n    content: public bool Contains (System.Windows.Forms.Control ctl);\n    parameters:\n    - id: ctl\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified control is a child of the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ContainsFocus\n  commentId: P:System.Windows.Forms.Control.ContainsFocus\n  id: ContainsFocus\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ContainsFocus\n  nameWithType: Control.ContainsFocus\n  fullName: Control.ContainsFocus\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control, or one of its child controls, currently has the input focus.\n  remarks: You can use this property to determine whether a control or any of the controls contained within it has the input focus. To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property. To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool ContainsFocus { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control or one of its child controls currently has the input focus; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ContainsFocus*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ContextMenu\n  commentId: P:System.Windows.Forms.Control.ContextMenu\n  id: ContextMenu\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ContextMenu\n  nameWithType: Control.ContextMenu\n  fullName: Control.ContextMenu\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the shortcut menu associated with the control.\n  remarks: Use a shortcut menus to give context-specific menu options to users when they right-click on the control.\n  example:\n  - \"The following code example displays the <xref:System.Windows.Forms.ContextMenu> assigned to a <xref:System.Windows.Forms.TreeView> when the right mouse button is clicked and released. This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> on it. It is also required that the <xref:System.Windows.Forms.TreeView> has a <xref:System.Windows.Forms.ContextMenu> assigned to its <xref:System.Windows.Forms.Control.ContextMenu%2A> property.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#5)]\\n [!code-csharp[Windows.Forms.Control Properties2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#5)]\\n [!code-vb[Windows.Forms.Control Properties2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#5)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }\n    return:\n      type: System.Windows.Forms.ContextMenu\n      description: A <xref href=\"System.Windows.Forms.ContextMenu\"></xref> that represents the shortcut menu associated with the control.\n  overload: System.Windows.Forms.Control.ContextMenu*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ContextMenuChanged\n  commentId: E:System.Windows.Forms.Control.ContextMenuChanged\n  id: ContextMenuChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ContextMenuChanged\n  nameWithType: Control.ContextMenuChanged\n  fullName: Control.ContextMenuChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ContextMenu\"></xref> property changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example displays a message when a change occurs to the shortcut menu.  \\n  \\n [!code-cpp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CPP/control_contextmenu_creategraphics.cpp#2)]\\n [!code-csharp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CS/control_contextmenu_creategraphics.cs#2)]\\n [!code-vb[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/VB/control_contextmenu_creategraphics.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler ContextMenuChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ContextMenuStrip\n  commentId: P:System.Windows.Forms.Control.ContextMenuStrip\n  id: ContextMenuStrip\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ContextMenuStrip\n  nameWithType: Control.ContextMenuStrip\n  fullName: Control.ContextMenuStrip\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> associated with this control.\n  remarks: If a <xref:System.Windows.Forms.ContextMenu> has also been assigned to the control, the <xref:System.Windows.Forms.ContextMenu> takes precedence over the <xref:System.Windows.Forms.ContextMenuStrip>.\n  example:\n  - \"The following code example demonstrates how to add three <xref:System.Windows.Forms.ToolStripMenuItem> objects to a <xref:System.Windows.Forms.ContextMenuStrip>. In addition it demonstrates setting the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property of the form.  \\n  \\n [!code-csharp[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/VB/form1.vb#1)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }\n    return:\n      type: System.Windows.Forms.ContextMenuStrip\n      description: The <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref> for this control, or `null` if there is no <xref href=\"System.Windows.Forms.ContextMenuStrip\"></xref>. The default is `null`.\n  overload: System.Windows.Forms.Control.ContextMenuStrip*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ContextMenuStripChanged\n  commentId: E:System.Windows.Forms.Control.ContextMenuStripChanged\n  id: ContextMenuStripChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ContextMenuStripChanged\n  nameWithType: Control.ContextMenuStripChanged\n  fullName: Control.ContextMenuStripChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.ContextMenuStrip\"></xref> property changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#14)]\\n [!code-vb[System.Windows.Forms.EventExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#14)]\"\n  syntax:\n    content: public event EventHandler ContextMenuStripChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ControlAdded\n  commentId: E:System.Windows.Forms.Control.ControlAdded\n  id: ControlAdded\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ControlAdded\n  nameWithType: Control.ControlAdded\n  fullName: Control.ControlAdded\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a new control is added to the <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref>.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]\\n [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]\\n [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public event System.Windows.Forms.ControlEventHandler ControlAdded;\n    return:\n      type: System.Windows.Forms.ControlEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ControlRemoved\n  commentId: E:System.Windows.Forms.Control.ControlRemoved\n  id: ControlRemoved\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ControlRemoved\n  nameWithType: Control.ControlRemoved\n  fullName: Control.ControlRemoved\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a control is removed from the <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref>.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]\\n [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]\\n [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public event System.Windows.Forms.ControlEventHandler ControlRemoved;\n    return:\n      type: System.Windows.Forms.ControlEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Controls\n  commentId: P:System.Windows.Forms.Control.Controls\n  id: Controls\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Controls\n  nameWithType: Control.Controls\n  fullName: Control.Controls\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the collection of controls contained within the control.\n  remarks: \"A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls. For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class.  \\n  \\n You can manipulate the controls in the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property by using the methods available in the <xref:System.Windows.Forms.Control.ControlCollection> class.  \\n  \\n When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. Doing so will increase the performance of applications with many controls.  \\n  \\n Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls. Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order. Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control.\"\n  example:\n  - \"The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection. The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>. The <xref:System.Windows.Forms.RadioButton> control(s) are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>. When the button is clicked, the radio button named `removeButton` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.  \\n  \\n [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]\\n [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]\\n [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Control.ControlCollection Controls { get; }\n    return:\n      type: System.Windows.Forms.Control+ControlCollection\n      description: A <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> representing the collection of controls contained within the control.\n  overload: System.Windows.Forms.Control.Controls*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CreateAccessibilityInstance\n  commentId: M:System.Windows.Forms.Control.CreateAccessibilityInstance\n  id: CreateAccessibilityInstance\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CreateAccessibilityInstance()\n  nameWithType: Control.CreateAccessibilityInstance()\n  fullName: Control.CreateAccessibilityInstance()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new accessibility object for the control.\n  remarks: \"If you do not explicitly call the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.  \\n  \\n> [!NOTE]\\n>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].\"\n  example:\n  - \"The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates overriding the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#2)]\\n [!code-csharp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#2)]\\n [!code-vb[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#2)]\"\n  syntax:\n    content: protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: A new <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> for the control.\n  overload: System.Windows.Forms.Control.CreateAccessibilityInstance*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.CreateControl\n  commentId: M:System.Windows.Forms.Control.CreateControl\n  id: CreateControl\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CreateControl()\n  nameWithType: Control.CreateControl()\n  fullName: Control.CreateControl()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Forces the creation of the visible control, including the creation of the handle and any visible child controls.\n  remarks: \"The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls. This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>.  \\n  \\n <xref:System.Windows.Forms.Control.CreateControl%2A> does not create a control handle if the control's <xref:System.Windows.Forms.Control.Visible%2A> property is `false`. You can either call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method or access the <xref:System.Windows.Forms.Control.Handle%2A> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.\"\n  syntax:\n    content: public void CreateControl ();\n    parameters: []\n  overload: System.Windows.Forms.Control.CreateControl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CreateControlsInstance\n  commentId: M:System.Windows.Forms.Control.CreateControlsInstance\n  id: CreateControlsInstance\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CreateControlsInstance()\n  nameWithType: Control.CreateControlsInstance()\n  fullName: Control.CreateControlsInstance()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new instance of the control collection for the control.\n  syntax:\n    content: protected virtual System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.Control+ControlCollection\n      description: A new instance of <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> assigned to the control.\n  overload: System.Windows.Forms.Control.CreateControlsInstance*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Created\n  commentId: P:System.Windows.Forms.Control.Created\n  id: Created\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Created\n  nameWithType: Control.Created\n  fullName: Control.Created\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control has been created.\n  remarks: The <xref:System.Windows.Forms.Control.Created%2A> property returns `true` if the <xref:System.Windows.Forms.Control> was successfully created even though the control's handle might not have been created or recreated yet.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool Created { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control has been created; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.Created*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.CreateGraphics\n  commentId: M:System.Windows.Forms.Control.CreateGraphics\n  id: CreateGraphics\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CreateGraphics()\n  nameWithType: Control.CreateGraphics()\n  fullName: Control.CreateGraphics()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates the <xref href=\"System.Drawing.Graphics\"></xref> for the control.\n  remarks: \"The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message. Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName>. Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it. For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>.  \\n  \\n By design, <xref:System.Windows.Forms.Control.CreateGraphics%2A> sets ownership to the calling thread, and fails if it is called on other threads.  \\n  \\n> [!NOTE]\\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.\"\n  example:\n  - \"The following code example resizes the specified control so the control will accommodate its formatted text. The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text. The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control. To make the padding appear equal, align the text with the `MiddleCenter` value of <xref:System.Drawing.ContentAlignment?displayProperty=fullName> if your control supports it.  \\n  \\n [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]\\n [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]\"\n  syntax:\n    content: public System.Drawing.Graphics CreateGraphics ();\n    parameters: []\n    return:\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> for the control.\n  overload: System.Windows.Forms.Control.CreateGraphics*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.CreateHandle\n  commentId: M:System.Windows.Forms.Control.CreateHandle\n  id: CreateHandle\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CreateHandle()\n  nameWithType: Control.CreateHandle()\n  fullName: Control.CreateHandle()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a handle for the control.\n  remarks: You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly. The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created.\n  syntax:\n    content: protected virtual void CreateHandle ();\n    parameters: []\n  overload: System.Windows.Forms.Control.CreateHandle*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The object is in a disposed state.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CreateParams\n  commentId: P:System.Windows.Forms.Control.CreateParams\n  id: CreateParams\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CreateParams\n  nameWithType: Control.CreateParams\n  fullName: Control.CreateParams\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the required creation parameters when the control handle is created.\n  remarks: The <xref:System.Windows.Forms.Control.CreateParams%2A> property should not be overridden and used to adjust the properties of your derived control. Properties such as the <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName> should be set by the corresponding properties in your control such as <xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName> and <xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName>. The <xref:System.Windows.Forms.CreateParams> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace. For more information about creating control parameters, see the `CreateWindow` and `CreateWindowEx` functions and the [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)structure documentation.\n  example:\n  - \"The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class. The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=fullName> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>. This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.  \\n  \\n [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]\\n [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]\\n [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]\"\n  syntax:\n    content: protected virtual System.Windows.Forms.CreateParams CreateParams { get; }\n    return:\n      type: System.Windows.Forms.CreateParams\n      description: A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.\n  overload: System.Windows.Forms.Control.CreateParams*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Cursor\n  commentId: P:System.Windows.Forms.Control.Cursor\n  id: Cursor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Cursor\n  nameWithType: Control.Cursor\n  fullName: Control.Cursor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the cursor that is displayed when the mouse pointer is over the control.\n  remarks: \"Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control. To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property. Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file.  \\n  \\n The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.\"\n  example:\n  - \"The following code example fills a <xref:System.Windows.Forms.ComboBox> with the user's available logical drives. The example also sets the combo box's <xref:System.Windows.Forms.Cursor> property so the <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=fullName> cursor is displayed when the mouse pointer is over the drop-down button. This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ComboBox> on it.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Properties2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#1)]\\n [!code-vb[Windows.Forms.Control Properties2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#1)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.Cursor Cursor { get; set; }\n    return:\n      type: System.Windows.Forms.Cursor\n      description: A <xref href=\"System.Windows.Forms.Cursor\"></xref> that represents the cursor to display when the mouse pointer is over the control.\n  overload: System.Windows.Forms.Control.Cursor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.CursorChanged\n  commentId: E:System.Windows.Forms.Control.CursorChanged\n  id: CursorChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: CursorChanged\n  nameWithType: Control.CursorChanged\n  fullName: Control.CursorChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Cursor\"></xref> property changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates changing the mouse cursor using the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=fullName> property, the <xref:System.Windows.Forms.Cursor> class, and the <xref:System.Windows.Forms.Cursors> class. The example creates a form that contains a <xref:System.Windows.Forms.ComboBox> control, a <xref:System.Windows.Forms.Panel> control, and a <xref:System.Windows.Forms.ListView> control. The<xref:System.Windows.Forms.ComboBox> contains all cursors provided by the <xref:System.Windows.Forms.Cursors> class. When the user selects a mouse cursor in the <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=fullName> property is set to the selected cursor, which updates the cursor for the <xref:System.Windows.Forms.Panel>. The <xref:System.Windows.Forms.ListView> is updated every time the <xref:System.Windows.Forms.Control.CursorChanged?displayProperty=fullName> event occurs.  \\n  \\n [!code-cpp[System.Windows.Forms.Cursors#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CPP/cursorexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.Cursors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CS/cursorexample.cs#1)]\\n [!code-vb[System.Windows.Forms.Cursors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursors/VB/cursorexample.vb#1)]\"\n  syntax:\n    content: public event EventHandler CursorChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DataBindings\n  commentId: P:System.Windows.Forms.Control.DataBindings\n  id: DataBindings\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DataBindings\n  nameWithType: Control.DataBindings\n  fullName: Control.DataBindings\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the data bindings for the control.\n  remarks: Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>. By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object.\n  example:\n  - \"The following code example adds <xref:System.Windows.Forms.Binding> objects to the <xref:System.Windows.Forms.ControlBindingsCollection> of five controls: four <xref:System.Windows.Forms.TextBox> controls and a <xref:System.Windows.Forms.DateTimePicker> control. The <xref:System.Windows.Forms.ControlBindingsCollection> is accessed through the <xref:System.Windows.Forms.Control.DataBindings%2A> property of the <xref:System.Windows.Forms.Control> class.  \\n  \\n [!code-cpp[Classic Control.DataBindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Control.DataBindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CS/source.cs#1)]\\n [!code-vb[Classic Control.DataBindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.DataBindings Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }\n    return:\n      type: System.Windows.Forms.ControlBindingsCollection\n      description: A <xref href=\"System.Windows.Forms.ControlBindingsCollection\"></xref> that contains the <xref href=\"System.Windows.Forms.Binding\"></xref> objects for the control.\n  overload: System.Windows.Forms.Control.DataBindings*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefaultBackColor\n  commentId: P:System.Windows.Forms.Control.DefaultBackColor\n  id: DefaultBackColor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultBackColor\n  nameWithType: Control.DefaultBackColor\n  fullName: Control.DefaultBackColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default background color of the control.\n  remarks: This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control. Derived classes can have different defaults.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]\"\n  syntax:\n    content: public static System.Drawing.Color DefaultBackColor { get; }\n    return:\n      type: System.Drawing.Color\n      description: The default background <xref href=\"System.Drawing.Color\"></xref> of the control. The default is <xref href=\"System.Drawing.SystemColors.Control\"></xref>.\n  overload: System.Windows.Forms.Control.DefaultBackColor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.DefaultCursor\n  commentId: P:System.Windows.Forms.Control.DefaultCursor\n  id: DefaultCursor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultCursor\n  nameWithType: Control.DefaultCursor\n  fullName: Control.DefaultCursor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the default cursor for the control.\n  remarks: Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control. This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.\n  syntax:\n    content: protected virtual System.Windows.Forms.Cursor DefaultCursor { get; }\n    return:\n      type: System.Windows.Forms.Cursor\n      description: An object of type <xref href=\"System.Windows.Forms.Cursor\"></xref> representing the current default cursor.\n  overload: System.Windows.Forms.Control.DefaultCursor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.DefaultFont\n  commentId: P:System.Windows.Forms.Control.DefaultFont\n  id: DefaultFont\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultFont\n  nameWithType: Control.DefaultFont\n  fullName: Control.DefaultFont\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default font of the control.\n  remarks: \"The following table describes the value returned by <xref:System.Windows.Forms.Control.DefaultFont%2A> depending on the operating system and local culture.  \\n  \\n|System/and or Culture|Font|  \\n|----------------------------|----------|  \\n|Windows NT 4x, Japanese version|MS UI Gothic, 9 point.|  \\n|Arabic Windows|Tahoma, 8 point.|  \\n|Other operating system/culture|MS Shell Dlg logical font, typically Microsoft San Serif 8 point.|  \\n  \\n MS Shell Dlg maps to a font set in the system registry.  \\n  \\n If the previous fonts are not installed, the default font is Tahoma, 8 point. If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A>returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]\"\n  syntax:\n    content: public static System.Drawing.Font DefaultFont { get; }\n    return:\n      type: System.Drawing.Font\n      description: The default <xref href=\"System.Drawing.Font\"></xref> of the control. The value returned will vary depending on the user's operating system the local culture setting of their system.\n  overload: System.Windows.Forms.Control.DefaultFont*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The default font or the regional alternative fonts are not installed on the client computer.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefaultForeColor\n  commentId: P:System.Windows.Forms.Control.DefaultForeColor\n  id: DefaultForeColor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultForeColor\n  nameWithType: Control.DefaultForeColor\n  fullName: Control.DefaultForeColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default foreground color of the control.\n  remarks: This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control. Derived classes can have different defaults.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]\"\n  syntax:\n    content: public static System.Drawing.Color DefaultForeColor { get; }\n    return:\n      type: System.Drawing.Color\n      description: The default foreground <xref href=\"System.Drawing.Color\"></xref> of the control. The default is <xref href=\"System.Drawing.SystemColors.ControlText\"></xref>.\n  overload: System.Windows.Forms.Control.DefaultForeColor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefaultImeMode\n  commentId: P:System.Windows.Forms.Control.DefaultImeMode\n  id: DefaultImeMode\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultImeMode\n  nameWithType: Control.DefaultImeMode\n  fullName: Control.DefaultImeMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default Input Method Editor (IME) mode supported by the control.\n  remarks: \"An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.  \\n  \\n As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value. The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control.\"\n  example:\n  - \"The following code example overrides the <xref:System.Windows.Forms.Control.DefaultImeMode%2A> property to turn off the Input Method Editor.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#4)]\\n [!code-csharp[Windows.Forms.Control Properties2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#4)]\\n [!code-vb[Windows.Forms.Control Properties2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#4)]\"\n  syntax:\n    content: protected virtual System.Windows.Forms.ImeMode DefaultImeMode { get; }\n    return:\n      type: System.Windows.Forms.ImeMode\n      description: One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values.\n  overload: System.Windows.Forms.Control.DefaultImeMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefaultMargin\n  commentId: P:System.Windows.Forms.Control.DefaultMargin\n  id: DefaultMargin\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultMargin\n  nameWithType: Control.DefaultMargin\n  fullName: Control.DefaultMargin\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the space, in pixels, that is specified by default between controls.\n  syntax:\n    content: protected virtual System.Windows.Forms.Padding DefaultMargin { get; }\n    return:\n      type: System.Windows.Forms.Padding\n      description: A <xref href=\"System.Windows.Forms.Padding\"></xref> that represents the default space between controls.\n  overload: System.Windows.Forms.Control.DefaultMargin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefaultMaximumSize\n  commentId: P:System.Windows.Forms.Control.DefaultMaximumSize\n  id: DefaultMaximumSize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultMaximumSize\n  nameWithType: Control.DefaultMaximumSize\n  fullName: Control.DefaultMaximumSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the length and height, in pixels, that is specified as the default maximum size of a control.\n  syntax:\n    content: protected virtual System.Drawing.Size DefaultMaximumSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Point.#ctor(System.Drawing.Size)\"></xref> representing the size of the control.\n  overload: System.Windows.Forms.Control.DefaultMaximumSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefaultMinimumSize\n  commentId: P:System.Windows.Forms.Control.DefaultMinimumSize\n  id: DefaultMinimumSize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultMinimumSize\n  nameWithType: Control.DefaultMinimumSize\n  fullName: Control.DefaultMinimumSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the length and height, in pixels, that is specified as the default minimum size of a control.\n  syntax:\n    content: protected virtual System.Drawing.Size DefaultMinimumSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> representing the size of the control.\n  overload: System.Windows.Forms.Control.DefaultMinimumSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefaultPadding\n  commentId: P:System.Windows.Forms.Control.DefaultPadding\n  id: DefaultPadding\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultPadding\n  nameWithType: Control.DefaultPadding\n  fullName: Control.DefaultPadding\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the internal spacing, in pixels, of the contents of a control.\n  syntax:\n    content: protected virtual System.Windows.Forms.Padding DefaultPadding { get; }\n    return:\n      type: System.Windows.Forms.Padding\n      description: A <xref href=\"System.Windows.Forms.Padding\"></xref> that represents the internal spacing of the contents of a control.\n  overload: System.Windows.Forms.Control.DefaultPadding*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefaultSize\n  commentId: P:System.Windows.Forms.Control.DefaultSize\n  id: DefaultSize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefaultSize\n  nameWithType: Control.DefaultSize\n  fullName: Control.DefaultSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default size of the control.\n  remarks: \"The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created. You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value.  \\n  \\n> [!NOTE]\\n>  To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.  \\n  \\n> [!NOTE]\\n>  On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.\"\n  example:\n  - \"The following code example overrides the <xref:System.Windows.Forms.Control.DefaultSize%2A> property, and makes the default size of the form 500 pixels square.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#3)]\\n [!code-csharp[Windows.Forms.Control Properties2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#3)]\\n [!code-vb[Windows.Forms.Control Properties2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#3)]\"\n  syntax:\n    content: protected virtual System.Drawing.Size DefaultSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: The default <xref href=\"System.Drawing.Size\"></xref> of the control.\n  overload: System.Windows.Forms.Control.DefaultSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  id: DefWndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DefWndProc(Message)\n  nameWithType: Control.DefWndProc(Message)\n  fullName: Control.DefWndProc(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sends the specified message to the default window procedure.\n  remarks: For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).\n  syntax:\n    content: protected virtual void DefWndProc (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.\n  overload: System.Windows.Forms.Control.DefWndProc*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DestroyHandle\n  commentId: M:System.Windows.Forms.Control.DestroyHandle\n  id: DestroyHandle\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DestroyHandle()\n  nameWithType: Control.DestroyHandle()\n  fullName: Control.DestroyHandle()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Destroys the handle associated with the control.\n  syntax:\n    content: protected virtual void DestroyHandle ();\n    parameters: []\n  overload: System.Windows.Forms.Control.DestroyHandle*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DeviceDpi\n  commentId: P:System.Windows.Forms.Control.DeviceDpi\n  id: DeviceDpi\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DeviceDpi\n  nameWithType: Control.DeviceDpi\n  fullName: Control.DeviceDpi\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the DPI value for the display device where the control is currently being displayed.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int DeviceDpi { get; }\n    return:\n      type: System.Int32\n      description: The DPI value of the display device.\n  overload: System.Windows.Forms.Control.DeviceDpi*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DisplayRectangle\n  commentId: P:System.Windows.Forms.Control.DisplayRectangle\n  id: DisplayRectangle\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DisplayRectangle\n  nameWithType: Control.DisplayRectangle\n  fullName: Control.DisplayRectangle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the rectangle that represents the display area of the control.\n  remarks: The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control. For the base control class, this is equal to the client rectangle. However, inheriting controls might want to change this if their client area differs from their display area. The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual System.Drawing.Rectangle DisplayRectangle { get; }\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the display area of the control.\n  overload: System.Windows.Forms.Control.DisplayRectangle*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Dispose(System.Boolean)\n  commentId: M:System.Windows.Forms.Control.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Control.Dispose(Boolean)\n  fullName: Control.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Windows.Forms.Control\"></xref> and its child controls and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Control> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Windows.Forms.Control.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Disposing\n  commentId: P:System.Windows.Forms.Control.Disposing\n  id: Disposing\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Disposing\n  nameWithType: Control.Disposing\n  fullName: Control.Disposing\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the base <xref href=\"System.Windows.Forms.Control\"></xref> class is in the process of disposing.\n  remarks: When this property returns `true`, the base<xref:System.Windows.Forms.Control> class is in the process of disposing. After the control is disposed of, it can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed of, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool Disposing { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the base <xref href=\"System.Windows.Forms.Control\"></xref> class is in the process of disposing; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.Disposing*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Dock\n  commentId: P:System.Windows.Forms.Control.Dock\n  id: Dock\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Dock\n  nameWithType: Control.Dock\n  fullName: Control.Dock\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.\n  remarks: \"Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized. For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle?displayProperty=fullName> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized. Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).  \\n  \\n A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.  \\n  \\n Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the the edges of its container.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive. Only one can be set at a time, and the last one set takes precedence.\"\n  example:\n  - \"The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]\\n [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.DockStyle Dock { get; set; }\n    return:\n      type: System.Windows.Forms.DockStyle\n      description: One of the <xref href=\"System.Windows.Forms.DockStyle\"></xref> values. The default is <xref href=\"System.Windows.Forms.DockStyle.None\"></xref>.\n  overload: System.Windows.Forms.Control.Dock*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned is not one of the <xref href=\"System.Windows.Forms.DockStyle\"></xref> values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DockChanged\n  commentId: E:System.Windows.Forms.Control.DockChanged\n  id: DockChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DockChanged\n  nameWithType: Control.DockChanged\n  fullName: Control.DockChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Dock\"></xref> property changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes(*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \\n  \\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]\"\n  syntax:\n    content: public event EventHandler DockChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  commentId: M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  id: DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DoDragDrop(Object, DragDropEffects)\n  nameWithType: Control.DoDragDrop(Object, DragDropEffects)\n  fullName: Control.DoDragDrop(Object, DragDropEffects)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Begins a drag-and-drop operation.\n  remarks: \"The `allowedEffects` parameter determines which drag operations can occur. If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<xref:System.String>, <xref:System.Drawing.Bitmap>, or <xref:System.Drawing.Imaging.Metafile>), or an object that implements <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Windows.Forms.IDataObject>.  \\n  \\n The following describes how and when events related to drag-and-drop operations are raised.  \\n  \\n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \\n  \\n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \\n  \\n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \\n  \\n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \\n  \\n If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method catches all exceptions and rethrows only the following security or critical exceptions:  \\n  \\n-   SecurityException  \\n  \\n-   NullReferenceException  \\n  \\n-   StackOverflowException  \\n  \\n-   OutOfMemoryException  \\n  \\n-   ThreadAbortException  \\n  \\n-   ExecutionEngineException  \\n  \\n-   IndexOutOfRangeException  \\n  \\n-   AccessViolationException\"\n  example:\n  - \"The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel` <xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#1)]  \\n  \\n The following code example shows how to use the <xref:System.Windows.Forms.DragDropEffects> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation. This example requires that your form includes a <xref:System.Windows.Forms.RichTextBox> control and a <xref:System.Windows.Forms.ListBox> control and that the <xref:System.Windows.Forms.ListBox> control is populated with a list of valid file names. When the user drags a file name onto the <xref:System.Windows.Forms.RichTextBox> control, the control's <xref:System.Windows.Forms.Control.DragEnter> event is raised. Within the event handler, the <xref:System.Windows.Forms.DragEventArgs.Effect%2A> property of the <xref:System.Windows.Forms.DragEventArgs> is initialized to <xref:System.Windows.Forms.DragDropEffects> to indicate that the data referenced by the file path should be copied to the <xref:System.Windows.Forms.RichTextBox> control.  \\n  \\n [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]\\n [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]\\n [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);\n    parameters:\n    - id: data\n      type: System.Object\n      description: The data to drag.\n    - id: allowedEffects\n      type: System.Windows.Forms.DragDropEffects\n      description: One of the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> values.\n    return:\n      type: System.Windows.Forms.DragDropEffects\n      description: A value from the <xref href=\"System.Windows.Forms.DragDropEffects\"></xref> enumeration that represents the final effect that was performed during the drag-and-drop operation.\n  overload: System.Windows.Forms.Control.DoDragDrop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DoubleBuffered\n  commentId: P:System.Windows.Forms.Control.DoubleBuffered\n  id: DoubleBuffered\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DoubleBuffered\n  nameWithType: Control.DoubleBuffered\n  fullName: Control.DoubleBuffered\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.\n  remarks: \"Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface. Buffered graphics require that the updated graphics data is first written to a buffer. The data in the graphics buffer is then quickly written to displayed surface memory. The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.  \\n  \\n> [!NOTE]\\n>  <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is not a bindable property.\"\n  syntax:\n    content: protected virtual bool DoubleBuffered { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the surface of the control should be drawn using double buffering; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.DoubleBuffered*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.DoubleClick\n  commentId: E:System.Windows.Forms.Control.DoubleClick\n  id: DoubleClick\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DoubleClick\n  nameWithType: Control.DoubleClick\n  fullName: Control.DoubleClick\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is double-clicked.\n  remarks: \"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks. The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked. For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called. If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.  \\n  \\n You must set the `StandardDoubleClick` and `StandardClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised. These values might already be set to `true` if you are inheriting from existing Windows Forms controls.  \\n  \\n> [!NOTE]\\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.  \\n  \\n [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]\\n [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]\\n [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler DoubleClick;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DpiChangedAfterParent\n  commentId: E:System.Windows.Forms.Control.DpiChangedAfterParent\n  id: DpiChangedAfterParent\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DpiChangedAfterParent\n  nameWithType: Control.DpiChangedAfterParent\n  fullName: Control.DpiChangedAfterParent\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.\n  syntax:\n    content: public event EventHandler DpiChangedAfterParent;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DpiChangedBeforeParent\n  commentId: E:System.Windows.Forms.Control.DpiChangedBeforeParent\n  id: DpiChangedBeforeParent\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DpiChangedBeforeParent\n  nameWithType: Control.DpiChangedBeforeParent\n  fullName: Control.DpiChangedBeforeParent\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.\n  syntax:\n    content: public event EventHandler DpiChangedBeforeParent;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DragDrop\n  commentId: E:System.Windows.Forms.Control.DragDrop\n  id: DragDrop\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DragDrop\n  nameWithType: Control.DragDrop\n  fullName: Control.DragDrop\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a drag-and-drop operation is completed.\n  remarks: \"The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>.  \\n  \\n```  \\nPoint clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  \\n```  \\n  \\n> [!NOTE]\\n>  In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised. However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragDrop> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#5)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#5)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#5)]\"\n  syntax:\n    content: public event System.Windows.Forms.DragEventHandler DragDrop;\n    return:\n      type: System.Windows.Forms.DragEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DragEnter\n  commentId: E:System.Windows.Forms.Control.DragEnter\n  id: DragEnter\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DragEnter\n  nameWithType: Control.DragEnter\n  fullName: Control.DragEnter\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when an object is dragged into the control's bounds.\n  remarks: \"The <xref:System.Windows.Forms.Control.DragEnter> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.  \\n  \\n> [!NOTE]\\n>  In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised. However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.  \\n  \\n The following describes how and when events related to drag-and-drop operations are raised.  \\n  \\n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \\n  \\n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \\n  \\n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \\n  \\n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \\n  \\n If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of [!INCLUDE[csprcs](~/includes/csprcs-md.md)] code converts the properties to a client <xref:System.Drawing.Point>.  \\n  \\n    ```  \\n    Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  \\n    ```  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragEnter> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#7)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#7)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#7)]\"\n  syntax:\n    content: public event System.Windows.Forms.DragEventHandler DragEnter;\n    return:\n      type: System.Windows.Forms.DragEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DragLeave\n  commentId: E:System.Windows.Forms.Control.DragLeave\n  id: DragLeave\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DragLeave\n  nameWithType: Control.DragLeave\n  fullName: Control.DragLeave\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when an object is dragged out of the control's bounds.\n  remarks: \"The <xref:System.Windows.Forms.Control.DragLeave> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.  \\n  \\n The following describes how and when events related to drag-and-drop operations are raised.  \\n  \\n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \\n  \\n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \\n  \\n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \\n  \\n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \\n  \\n If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragLeave> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#8)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#8)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#8)]\"\n  syntax:\n    content: public event EventHandler DragLeave;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DragOver\n  commentId: E:System.Windows.Forms.Control.DragOver\n  id: DragOver\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DragOver\n  nameWithType: Control.DragOver\n  fullName: Control.DragOver\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when an object is dragged over the control's bounds.\n  remarks: \"The <xref:System.Windows.Forms.Control.DragOver> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.  \\n  \\n The following describes how and when events related to drag-and-drop operations are raised.  \\n  \\n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \\n  \\n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \\n  \\n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \\n  \\n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \\n  \\n If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> value is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates. The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:  \\n    >   \\n    >  Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragOver> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]\"\n  syntax:\n    content: public event System.Windows.Forms.DragEventHandler DragOver;\n    return:\n      type: System.Windows.Forms.DragEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  commentId: M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  id: DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: DrawToBitmap(Bitmap, Rectangle)\n  nameWithType: Control.DrawToBitmap(Bitmap, Rectangle)\n  fullName: Control.DrawToBitmap(Bitmap, Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Supports rendering to the specified bitmap.\n  remarks: \"The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls. You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required.  \\n  \\n The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method has the following limitations:  \\n  \\n-   An <xref:System.ArgumentException> might be thrown for large bitmaps. The maximum allowable size varies by machine.  \\n  \\n-   <xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not support the `Ink` controls for the Windows XP Tablet PC Edition 2005 operating system.  \\n  \\n-   <xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not draw a child <xref:System.Windows.Forms.TextBox> if the <xref:System.Windows.Forms.Control.Visible%2A> property of the <xref:System.Windows.Forms.TextBox> is set to `false`.  \\n  \\n-   Controls inside containers are rendered in reverse order.  \\n  \\n-   <xref:System.Windows.Forms.Control.DrawToBitmap%2A> is not fully functional for the <xref:System.Windows.Forms.RichTextBox>; only the border of a bitmap is drawn.\"\n  syntax:\n    content: public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);\n    parameters:\n    - id: bitmap\n      type: System.Drawing.Bitmap\n      description: The bitmap to be drawn to.\n    - id: targetBounds\n      type: System.Drawing.Rectangle\n      description: The bounds within which the control is rendered.\n  overload: System.Windows.Forms.Control.DrawToBitmap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Enabled\n  commentId: P:System.Windows.Forms.Control.Enabled\n  id: Enabled\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: Control.Enabled\n  fullName: Control.Enabled\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the control can respond to user interaction.\n  remarks: \"With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time. For example, you can disable controls that do not apply to the current state of the application. You can also disable a control to restrict its use. For example, a button can be disabled to prevent the user from clicking it. If a control is disabled, it cannot be selected.  \\n  \\n> [!IMPORTANT]\\n>  Setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` does not disable the application's control box or prevent the application window from receiving the focus.  \\n  \\n When a container control has its enabled property set to `false`, all its contained controls are disabled, as well. For example, if the user clicks on any of the controls contained in a disabled <xref:System.Windows.Forms.GroupBox> control, no events are raised.  \\n  \\n> [!NOTE]\\n>  When a scrollable control is disabled, the scroll bars are also disabled. For example, a disabled multiline textbox is unable to scroll to display all the lines of text.\"\n  example:\n  - \"The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]\\n [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]\"\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control can respond to user interaction; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Control.Enabled*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.EnabledChanged\n  commentId: E:System.Windows.Forms.Control.EnabledChanged\n  id: EnabledChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: EnabledChanged\n  nameWithType: Control.EnabledChanged\n  fullName: Control.EnabledChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.Enabled\"></xref> property value has changed.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses two <xref:System.Windows.Forms.RadioButton> controls to demonstrate the <xref:System.Windows.Forms.Control.EnabledChanged> event. Clicking one button changes the value of the <xref:System.Windows.Forms.Control.Enabled%2A> property of the other button to `false` and displays a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n [!code-csharp[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler EnabledChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  commentId: M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  id: EndInvoke(System.IAsyncResult)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: EndInvoke(IAsyncResult)\n  nameWithType: Control.EndInvoke(IAsyncResult)\n  fullName: Control.EndInvoke(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the return value of the asynchronous operation represented by the <xref href=\"System.IAsyncResult\"></xref> passed.\n  remarks: \"If the asynchronous operation has not been completed, this function will block until the result is available.  \\n  \\n> [!NOTE]\\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.\"\n  syntax:\n    content: public object EndInvoke (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that represents a specific invoke asynchronous operation, returned when calling <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref>.\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> generated by the asynchronous operation.\n  overload: System.Windows.Forms.Control.EndInvoke*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>asyncResult</code> parameter value is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>asyncResult</code> object was not created by a preceding call of the <xref href=\"System.Windows.Forms.Control.BeginInvoke(System.Delegate)\"></xref> method from the same control.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Enter\n  commentId: E:System.Windows.Forms.Control.Enter\n  id: Enter\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Enter\n  nameWithType: Control.Enter\n  fullName: Control.Enter\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is entered.\n  remarks: \"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n6.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n6.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.  \\n  \\n> [!CAUTION]\\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \\\"Keyboard Input Reference\\\" section and the \\\"Message Deadlocks\\\" section of the[About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\\\(v=vs.85\\\\).aspx)topic.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.  \\n  \\n [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]\\n [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]\\n [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler Enter;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.FindForm\n  commentId: M:System.Windows.Forms.Control.FindForm\n  id: FindForm\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: FindForm()\n  nameWithType: Control.FindForm()\n  fullName: Control.FindForm()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the form that the control is on.\n  remarks: The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method. For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>.\n  example:\n  - \"The following code example finds the form that contains the specified button.  \\n  \\n [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]\\n [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]\\n [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.Form FindForm ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.Form\n      description: The <xref href=\"System.Windows.Forms.Form\"></xref> that the control is on.\n  overload: System.Windows.Forms.Control.FindForm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Focus\n  commentId: M:System.Windows.Forms.Control.Focus\n  id: Focus\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Focus()\n  nameWithType: Control.Focus()\n  fullName: Control.Focus()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets input focus to the control.\n  remarks: \"The <xref:System.Windows.Forms.Control.Focus%2A> method returns `true` if the control successfully received input focus. The control can have the input focus while not displaying any visual cues of having the focus. This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.  \\n  \\n A control can be selected and receive input focus if all the following are true: the `Selectable` value of <xref:System.Windows.Forms.ControlStyles> is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled.  \\n  \\n The Windows Forms controls in the following list are not selectable. Controls derived from these controls are also not selectable.  \\n  \\n-   <xref:System.Windows.Forms.Panel>  \\n  \\n-   <xref:System.Windows.Forms.GroupBox>  \\n  \\n-   <xref:System.Windows.Forms.PictureBox>  \\n  \\n-   <xref:System.Windows.Forms.ProgressBar>  \\n  \\n-   <xref:System.Windows.Forms.Splitter>  \\n  \\n-   <xref:System.Windows.Forms.Label>  \\n  \\n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)  \\n  \\n> [!NOTE]\\n>  <xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors. Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms.\"\n  example:\n  - \"The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.  \\n  \\n [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]\\n [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]\\n [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]\"\n  syntax:\n    content: public bool Focus ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the input focus request was successful; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.Focus*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Focused\n  commentId: P:System.Windows.Forms.Control.Focused\n  id: Focused\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Focused\n  nameWithType: Control.Focused\n  fullName: Control.Focused\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control has input focus.\n  remarks: ''\n  example:\n  - \"The following code example disables a <xref:System.Windows.Forms.MenuItem> if a <xref:System.Windows.Forms.TextBox> does not have focus. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TextBox> named `textBox1` and two <xref:System.Windows.Forms.MenuItem> objects named `menuItemEdit` and `menuItemEditInsertCustomerInfo`.  \\n  \\n [!code-cpp[Windows.FOrms.Control Members2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#4)]\\n [!code-csharp[Windows.FOrms.Control Members2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#4)]\\n [!code-vb[Windows.FOrms.Control Members2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#4)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual bool Focused { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control has focus; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.Focused*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Font\n  commentId: P:System.Windows.Forms.Control.Font\n  id: Font\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Font\n  nameWithType: Control.Font\n  fullName: Control.Font\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the font of the text displayed by the control.\n  remarks: \"The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.  \\n  \\n Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>. However, you can base the new font on the existing font.  \\n  \\n [Visual Basic, C#]  \\n  \\n The following is an example of how to adjust the existing font to make it bold:  \\n  \\n```csharp  \\nmyControl.Font = new Font(myControl.Font,   \\n    myControl.Font.Style | FontStyle.Bold);  \\n```  \\n  \\n```vb  \\nMyControl.Font = New Font(MyControl.Font, _   \\n    MyControl.Font.Style Or FontStyle.Bold)  \\n```\"\n  example:\n  - \"The following code example displays a <xref:System.Windows.Forms.FontDialog> to the user and changes the <xref:System.Drawing.Font> of a <xref:System.Windows.Forms.DateTimePicker> control. This example requires that you have a <xref:System.Windows.Forms.Form> with <xref:System.Windows.Forms.Button> and a <xref:System.Windows.Forms.DateTimePicker> on it.  \\n  \\n [!code-cpp[Control_Font#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Font/CPP/control_font.cpp#1)]\\n [!code-csharp[Control_Font#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Font/CS/control_font.cs#1)]\\n [!code-vb[Control_Font#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Font/VB/control_font.vb#1)]\"\n  syntax:\n    content: public virtual System.Drawing.Font Font { get; set; }\n    return:\n      type: System.Drawing.Font\n      description: The <xref href=\"System.Drawing.Font\"></xref> to apply to the text displayed by the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultFont\"></xref> property.\n  overload: System.Windows.Forms.Control.Font*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.FontChanged\n  commentId: E:System.Windows.Forms.Control.FontChanged\n  id: FontChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: FontChanged\n  nameWithType: Control.FontChanged\n  fullName: Control.FontChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property value changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or through interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Windows.Forms.Control.FontChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler FontChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.FontHeight\n  commentId: P:System.Windows.Forms.Control.FontHeight\n  id: FontHeight\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: FontHeight\n  nameWithType: Control.FontHeight\n  fullName: Control.FontHeight\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the height of the font of the control.\n  remarks: >-\n    > [!NOTE]\n\n    >  The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=fullName> value, or -1. Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.\n  syntax:\n    content: protected int FontHeight { get; set; }\n    return:\n      type: System.Int32\n      description: The height of the <xref href=\"System.Drawing.Font\"></xref> of the control in pixels.\n  overload: System.Windows.Forms.Control.FontHeight*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ForeColor\n  commentId: P:System.Windows.Forms.Control.ForeColor\n  id: ForeColor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ForeColor\n  nameWithType: Control.ForeColor\n  fullName: Control.ForeColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the foreground color of the control.\n  remarks: The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.\n  example:\n  - \"The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]\\n [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]\"\n  syntax:\n    content: public virtual System.Drawing.Color ForeColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: The foreground <xref href=\"System.Drawing.Color\"></xref> of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultForeColor\"></xref> property.\n  overload: System.Windows.Forms.Control.ForeColor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ForeColorChanged\n  commentId: E:System.Windows.Forms.Control.ForeColorChanged\n  id: ForeColorChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ForeColorChanged\n  nameWithType: Control.ForeColorChanged\n  fullName: Control.ForeColorChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property value changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.ForeColor%2A> property is changed by either a programmatic modification or through interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \\n  \\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]\"\n  syntax:\n    content: public event EventHandler ForeColorChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  commentId: M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  id: FromChildHandle(System.IntPtr)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: FromChildHandle(IntPtr)\n  nameWithType: Control.FromChildHandle(IntPtr)\n  fullName: Control.FromChildHandle(IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the control that contains the specified handle.\n  remarks: This method searches up the window handle parent chain until it finds a handle that is associated with a control. This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle.\n  syntax:\n    content: public static System.Windows.Forms.Control FromChildHandle (IntPtr handle);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: The window handle (`HWND`) to search for.\n    return:\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control associated with the specified handle; returns `null` if no control with the specified handle is found.\n  overload: System.Windows.Forms.Control.FromChildHandle*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  commentId: M:System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  id: FromHandle(System.IntPtr)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: FromHandle(IntPtr)\n  nameWithType: Control.FromHandle(IntPtr)\n  fullName: Control.FromHandle(IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns the control that is currently associated with the specified handle.\n  remarks: Use the <xref:System.Windows.Forms.Control.FromChildHandle%2A> method if you need to return controls that own more than one handle.\n  syntax:\n    content: public static System.Windows.Forms.Control FromHandle (IntPtr handle);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: The window handle (`HWND`) to search for.\n    return:\n      type: System.Windows.Forms.Control\n      description: A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control associated with the specified handle; returns `null` if no control with the specified handle is found.\n  overload: System.Windows.Forms.Control.FromHandle*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  commentId: M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  id: GetAccessibilityObjectById(System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetAccessibilityObjectById(Int32)\n  nameWithType: Control.GetAccessibilityObjectById(Int32)\n  fullName: Control.GetAccessibilityObjectById(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the specified <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>.\n  syntax:\n    content: protected virtual System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);\n    parameters:\n    - id: objectId\n      type: System.Int32\n      description: An `Int32` that identifies the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> to retrieve.\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: The specified <xref href=\"System.Windows.Forms.AccessibleObject\"></xref>.\n  overload: System.Windows.Forms.Control.GetAccessibilityObjectById*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetAutoSizeMode\n  commentId: M:System.Windows.Forms.Control.GetAutoSizeMode\n  id: GetAutoSizeMode\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetAutoSizeMode()\n  nameWithType: Control.GetAutoSizeMode()\n  fullName: Control.GetAutoSizeMode()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves a value indicating how a control will behave when its <xref href=\"System.Windows.Forms.Control.AutoSize\"></xref> property is enabled.\n  syntax:\n    content: protected System.Windows.Forms.AutoSizeMode GetAutoSizeMode ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.AutoSizeMode\n      description: One of the <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> values.\n  overload: System.Windows.Forms.Control.GetAutoSizeMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  commentId: M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  id: GetChildAtPoint(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetChildAtPoint(Point)\n  nameWithType: Control.GetChildAtPoint(Point)\n  fullName: Control.GetChildAtPoint(Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the child control that is located at the specified coordinates.\n  remarks: If there is no child control at the specified point, the <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> method returns `null`.\n  syntax:\n    content: public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area.\n    return:\n      type: System.Windows.Forms.Control\n      description: A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the control that is located at the specified point.\n  overload: System.Windows.Forms.Control.GetChildAtPoint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  commentId: M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  id: GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetChildAtPoint(Point, GetChildAtPointSkip)\n  nameWithType: Control.GetChildAtPoint(Point, GetChildAtPointSkip)\n  fullName: Control.GetChildAtPoint(Point, GetChildAtPointSkip)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.\n  syntax:\n    content: public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area.\n    - id: skipValue\n      type: System.Windows.Forms.GetChildAtPointSkip\n      description: One of the values of <xref href=\"System.Windows.Forms.GetChildAtPointSkip\"></xref>, determining whether to ignore child controls of a certain type.\n    return:\n      type: System.Windows.Forms.Control\n      description: The child <xref href=\"System.Windows.Forms.Control\"></xref> at the specified coordinates.\n  overload: System.Windows.Forms.Control.GetChildAtPoint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetContainerControl\n  commentId: M:System.Windows.Forms.Control.GetContainerControl\n  id: GetContainerControl\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetContainerControl()\n  nameWithType: Control.GetContainerControl()\n  fullName: Control.GetContainerControl()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns the next <xref href=\"System.Windows.Forms.ContainerControl\"></xref> up the control's chain of parent controls.\n  syntax:\n    content: public System.Windows.Forms.IContainerControl GetContainerControl ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.IContainerControl\n      description: An <xref href=\"System.Windows.Forms.IContainerControl\"></xref>, that represents the parent of the <xref href=\"System.Windows.Forms.Control\"></xref>.\n  overload: System.Windows.Forms.Control.GetContainerControl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  commentId: M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  id: GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetNextControl(Control, Boolean)\n  nameWithType: Control.GetNextControl(Control, Boolean)\n  fullName: Control.GetNextControl(Control, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the next control forward or back in the tab order of child controls.\n  remarks: The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order. To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property. To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property.\n  syntax:\n    content: public System.Windows.Forms.Control GetNextControl (System.Windows.Forms.Control ctl, bool forward);\n    parameters:\n    - id: ctl\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to start the search with.\n    - id: forward\n      type: System.Boolean\n      description: '`true` to search forward in the tab order; `false` to search backward.'\n    return:\n      type: System.Windows.Forms.Control\n      description: The next <xref href=\"System.Windows.Forms.Control\"></xref> in the tab order.\n  overload: System.Windows.Forms.Control.GetNextControl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  commentId: M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  id: GetPreferredSize(System.Drawing.Size)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetPreferredSize(Size)\n  nameWithType: Control.GetPreferredSize(Size)\n  fullName: Control.GetPreferredSize(Size)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the size of a rectangular area into which a control can be fitted.\n  remarks: The behavior of <xref:System.Windows.Forms.Control.GetPreferredSize%2A> differs by control. The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control. You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases. For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`. The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.\n  syntax:\n    content: public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);\n    parameters:\n    - id: proposedSize\n      type: System.Drawing.Size\n      description: The custom-sized area for a control.\n    return:\n      type: System.Drawing.Size\n      description: An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle.\n  overload: System.Windows.Forms.Control.GetPreferredSize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  commentId: M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  nameWithType: Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  fullName: Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the bounds within which the control is scaled.\n  remarks: This is a helper method that is called by <xref:System.Windows.Forms.Control.ScaleControl%2A> to retrieve the bounds within which the control is scaled. You can override this method to reuse the <xref:System.Windows.Forms.Control.ScaleControl%2A> scaling logic, but you must supply your own bounds. The default implementation returns scaled bounds that take into account the `specified` bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.\n  syntax:\n    content: protected virtual System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);\n    parameters:\n    - id: bounds\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that specifies the area for which to retrieve the display bounds.\n    - id: factor\n      type: System.Drawing.SizeF\n      description: The height and width of the control's bounds.\n    - id: specified\n      type: System.Windows.Forms.BoundsSpecified\n      description: One of the values of <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> that specifies the bounds of the control to use when defining its size and position.\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> representing the bounds within which the control is scaled.\n  overload: System.Windows.Forms.Control.GetScaledBounds*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  commentId: M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  id: GetStyle(System.Windows.Forms.ControlStyles)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetStyle(ControlStyles)\n  nameWithType: Control.GetStyle(ControlStyles)\n  fullName: Control.GetStyle(ControlStyles)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the value of the specified control style bit for the control.\n  remarks: Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to. To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.\n  example:\n  - \"The following code example returns the value of the double-buffering related style bits for a <xref:System.Windows.Forms.Form>. This example returns `true` only if all the style bits are set to `true`.  \\n  \\n [!code-cpp[Windows.Forms.ControlMembers6#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#4)]\\n [!code-csharp[Windows.Forms.ControlMembers6#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#4)]\\n [!code-vb[Windows.Forms.ControlMembers6#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#4)]\"\n  syntax:\n    content: protected bool GetStyle (System.Windows.Forms.ControlStyles flag);\n    parameters:\n    - id: flag\n      type: System.Windows.Forms.ControlStyles\n      description: The <xref href=\"System.Windows.Forms.ControlStyles\"></xref> bit to return the value from.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified control style bit is set to `true`; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.GetStyle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GetTopLevel\n  commentId: M:System.Windows.Forms.Control.GetTopLevel\n  id: GetTopLevel\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GetTopLevel()\n  nameWithType: Control.GetTopLevel()\n  fullName: Control.GetTopLevel()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines if the control is a top-level control.\n  syntax:\n    content: protected bool GetTopLevel ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the control is a top-level control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.GetTopLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GiveFeedback\n  commentId: E:System.Windows.Forms.Control.GiveFeedback\n  id: GiveFeedback\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GiveFeedback\n  nameWithType: Control.GiveFeedback\n  fullName: Control.GiveFeedback\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs during a drag operation.\n  remarks: \"The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started. With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.  \\n  \\n The following describes how and when events related to drag-and-drop operations are raised.  \\n  \\n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \\n  \\n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \\n  \\n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \\n  \\n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \\n  \\n If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.GiveFeedback> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]\"\n  syntax:\n    content: public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;\n    return:\n      type: System.Windows.Forms.GiveFeedbackEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.GotFocus\n  commentId: E:System.Windows.Forms.Control.GotFocus\n  id: GotFocus\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: GotFocus\n  nameWithType: Control.GotFocus\n  fullName: Control.GotFocus\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control receives focus.\n  remarks: \"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n6.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n6.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \\n  \\n **Note** The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\\\\(v=vs.85\\\\).aspx)and[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\\\(v=vs.85\\\\).aspx) topics.  \\n  \\n> [!CAUTION]\\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\\\(v=vs.85\\\\).aspx) topic.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.GotFocus> event. This report helps you to learn when the event occurs and can assist you in debugging.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.GotFocus> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#47](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#47)]\\n [!code-vb[System.Windows.Forms.EventExamples#47](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#47)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler GotFocus;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Handle\n  commentId: P:System.Windows.Forms.Control.Handle\n  id: Handle\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: Control.Handle\n  fullName: Control.Handle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the window handle that the control is bound to.\n  remarks: The value of the <xref:System.Windows.Forms.Control.Handle%2A> property is a Windows `HWND`. If the handle has not yet been created, referencing this property will force the handle to be created.\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=fullName> and the <xref:System.Windows.Forms.Control.Handle%2A> property. To run the example paste the following code in a form. Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public IntPtr Handle { get; }\n    return:\n      type: System.IntPtr\n      description: An <xref href=\"System.IntPtr\"></xref> that contains the window handle (`HWND`) of the control.\n  overload: System.Windows.Forms.Control.Handle*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.HandleCreated\n  commentId: E:System.Windows.Forms.Control.HandleCreated\n  id: HandleCreated\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: HandleCreated\n  nameWithType: Control.HandleCreated\n  fullName: Control.HandleCreated\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a handle is created for the control.\n  remarks: \"A handle is created when the <xref:System.Windows.Forms.Control> is displayed for the first time. For example, if a <xref:System.Windows.Forms.Control> is created that has <xref:System.Windows.Forms.Control.Visible%2A> set to `false`, the <xref:System.Windows.Forms.Control.HandleCreated> event will not be raised until <xref:System.Windows.Forms.Control.Visible%2A> is set to `true`.  \\n  \\n For more information about handling events, see[Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleCreated> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button>or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleCreated> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#37](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#37)]\\n [!code-vb[System.Windows.Forms.EventExamples#37](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#37)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler HandleCreated;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.HandleDestroyed\n  commentId: E:System.Windows.Forms.Control.HandleDestroyed\n  id: HandleDestroyed\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: HandleDestroyed\n  nameWithType: Control.HandleDestroyed\n  fullName: Control.HandleDestroyed\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control's handle is in the process of being destroyed.\n  remarks: \"During the <xref:System.Windows.Forms.Control.HandleDestroyed> event, the control is still a valid Windows control and the <xref:System.Windows.Forms.Control.Handle%2A> can be recreated by calling the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleDestroyed> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleDestroyed> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#38](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#38)]\\n [!code-vb[System.Windows.Forms.EventExamples#38](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#38)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler HandleDestroyed;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.HasChildren\n  commentId: P:System.Windows.Forms.Control.HasChildren\n  id: HasChildren\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: HasChildren\n  nameWithType: Control.HasChildren\n  fullName: Control.HasChildren\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control contains one or more child controls.\n  remarks: If the <xref:System.Windows.Forms.Control.Controls%2A> collection has a <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> greater than zero, the <xref:System.Windows.Forms.Control.HasChildren%2A> property will return `true`. Accessing the <xref:System.Windows.Forms.Control.HasChildren%2A> property does not force the creation of a <xref:System.Windows.Forms.Control.ControlCollection> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.\n  example:\n  - \"The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]\\n [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool HasChildren { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control contains one or more child controls; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.HasChildren*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Height\n  commentId: P:System.Windows.Forms.Control.Height\n  id: Height\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Height\n  nameWithType: Control.Height\n  fullName: Control.Height\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the height of the control.\n  remarks: \"Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.  \\n  \\n> [!NOTE]\\n>  The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel. The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels. Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height.\"\n  example:\n  - \"The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \\n  \\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]\\n [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]\\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Height { get; set; }\n    return:\n      type: System.Int32\n      description: The height of the control in pixels.\n  overload: System.Windows.Forms.Control.Height*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.HelpRequested\n  commentId: E:System.Windows.Forms.Control.HelpRequested\n  id: HelpRequested\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: HelpRequested\n  nameWithType: Control.HelpRequested\n  fullName: Control.HelpRequested\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user requests help for a control.\n  remarks: \"The <xref:System.Windows.Forms.Control.HelpRequested> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates handling the <xref:System.Windows.Forms.Control.HelpRequested> event to display custom Help content on a form containing four address fields. The <xref:System.Windows.Forms.Control.HelpRequested> event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field. The <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> property is set to true to indicate that the `HelpRequested` event is handled. The example also demonstrates storing the Help text in the <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=fullName> property.  \\n  \\n [!code-cpp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CPP/helpevent.cpp#1)]\\n [!code-csharp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CS/helpevent.cs#1)]\\n [!code-vb[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/VB/helpevent.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.HelpEventHandler HelpRequested;\n    return:\n      type: System.Windows.Forms.HelpEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Hide\n  commentId: M:System.Windows.Forms.Control.Hide\n  id: Hide\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Hide()\n  nameWithType: Control.Hide()\n  fullName: Control.Hide()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Conceals the control from the user.\n  remarks: Hiding the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `false`. After the <xref:System.Windows.Forms.Control.Hide%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `false` until the <xref:System.Windows.Forms.Control.Show%2A> method is called.\n  example:\n  - \"The following code example hides a button if the CTRL key is pressed when the button is clicked. This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]\\n [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]\"\n  syntax:\n    content: public void Hide ();\n    parameters: []\n  overload: System.Windows.Forms.Control.Hide*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ImeMode\n  commentId: P:System.Windows.Forms.Control.ImeMode\n  id: ImeMode\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ImeMode\n  nameWithType: Control.ImeMode\n  fullName: Control.ImeMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the Input Method Editor (IME) mode of the control.\n  remarks: \"An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard. The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values. The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> for the <xref:System.Windows.Forms.Form> class.  \\n  \\n Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <xref:System.Windows.Forms.ImeMode.NoControl>.  \\n  \\n> [!IMPORTANT]\\n>  The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>. In this case, the user will not be able to use the IME.  \\n>   \\n>  The <xref:System.Windows.Forms.Control.ImeMode%2A> property is ignored on Windows 8 when the global input mode is in effect. For more info, see[Switch Text Input Changed from Per-Thread to Per-User](http://go.microsoft.com/fwlink/?LinkID=256509).\"\n  syntax:\n    content: public System.Windows.Forms.ImeMode ImeMode { get; set; }\n    return:\n      type: System.Windows.Forms.ImeMode\n      description: One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values. The default is <xref href=\"System.Windows.Forms.ImeMode.Inherit\"></xref>.\n  overload: System.Windows.Forms.Control.ImeMode*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The assigned value is not one of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> enumeration values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ImeModeBase\n  commentId: P:System.Windows.Forms.Control.ImeModeBase\n  id: ImeModeBase\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ImeModeBase\n  nameWithType: Control.ImeModeBase\n  fullName: Control.ImeModeBase\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the IME mode of a control.\n  syntax:\n    content: protected virtual System.Windows.Forms.ImeMode ImeModeBase { get; set; }\n    return:\n      type: System.Windows.Forms.ImeMode\n      description: The IME mode of the control.\n  overload: System.Windows.Forms.Control.ImeModeBase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ImeModeChanged\n  commentId: E:System.Windows.Forms.Control.ImeModeChanged\n  id: ImeModeChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ImeModeChanged\n  nameWithType: Control.ImeModeChanged\n  fullName: Control.ImeModeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property has changed.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.ImeMode%2A> property is changed by either a programmatic modification or through interaction.  \\n  \\n Controls that do not support Input Method Managers will never raise this event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \\n  \\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]\"\n  syntax:\n    content: public event EventHandler ImeModeChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.InitLayout\n  commentId: M:System.Windows.Forms.Control.InitLayout\n  id: InitLayout\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: InitLayout()\n  nameWithType: Control.InitLayout()\n  fullName: Control.InitLayout()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Called after the control has been added to another container.\n  remarks: The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container. The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container. For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method.\n  syntax:\n    content: protected virtual void InitLayout ();\n    parameters: []\n  overload: System.Windows.Forms.Control.InitLayout*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  commentId: M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  id: Invalidate(System.Drawing.Region,System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invalidate(Region, Boolean)\n  nameWithType: Control.Invalidate(Region, Boolean)\n  fullName: Control.Invalidate(Region, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.\n  remarks: Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.\n  syntax:\n    content: public void Invalidate (System.Drawing.Region region, bool invalidateChildren);\n    parameters:\n    - id: region\n      type: System.Drawing.Region\n      description: The <xref href=\"System.Drawing.Region\"></xref> to invalidate.\n    - id: invalidateChildren\n      type: System.Boolean\n      description: \"`true` to invalidate the control's child controls; otherwise, `false`.\"\n  overload: System.Windows.Forms.Control.Invalidate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  commentId: M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  id: Invalidate(System.Drawing.Rectangle,System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invalidate(Rectangle, Boolean)\n  nameWithType: Control.Invalidate(Rectangle, Boolean)\n  fullName: Control.Invalidate(Rectangle, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.\n  remarks: Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.\n  syntax:\n    content: public void Invalidate (System.Drawing.Rectangle rc, bool invalidateChildren);\n    parameters:\n    - id: rc\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the region to invalidate.\n    - id: invalidateChildren\n      type: System.Boolean\n      description: \"`true` to invalidate the control's child controls; otherwise, `false`.\"\n  overload: System.Windows.Forms.Control.Invalidate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  commentId: M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  id: Invalidate(System.Drawing.Region)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invalidate(Region)\n  nameWithType: Control.Invalidate(Region)\n  fullName: Control.Invalidate(Region)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.\n  remarks: Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.\n  syntax:\n    content: public void Invalidate (System.Drawing.Region region);\n    parameters:\n    - id: region\n      type: System.Drawing.Region\n      description: The <xref href=\"System.Drawing.Region\"></xref> to invalidate.\n  overload: System.Windows.Forms.Control.Invalidate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  commentId: M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  id: Invalidate(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invalidate(Rectangle)\n  nameWithType: Control.Invalidate(Rectangle)\n  fullName: Control.Invalidate(Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.\n  remarks: Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.\n  syntax:\n    content: public void Invalidate (System.Drawing.Rectangle rc);\n    parameters:\n    - id: rc\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the region to invalidate.\n  overload: System.Windows.Forms.Control.Invalidate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Invalidate(System.Boolean)\n  commentId: M:System.Windows.Forms.Control.Invalidate(System.Boolean)\n  id: Invalidate(System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invalidate(Boolean)\n  nameWithType: Control.Invalidate(Boolean)\n  fullName: Control.Invalidate(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.\n  remarks: Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.\n  syntax:\n    content: public void Invalidate (bool invalidateChildren);\n    parameters:\n    - id: invalidateChildren\n      type: System.Boolean\n      description: \"`true` to invalidate the control's child controls; otherwise, `false`.\"\n  overload: System.Windows.Forms.Control.Invalidate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Invalidate\n  commentId: M:System.Windows.Forms.Control.Invalidate\n  id: Invalidate\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invalidate()\n  nameWithType: Control.Invalidate()\n  fullName: Control.Invalidate()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Invalidates the entire surface of the control and causes the control to be redrawn.\n  remarks: Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method. When this method is called with no parameters, the entire client area is added to the update region.\n  example:\n  - \"The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \\n  \\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]\\n [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]\\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]\"\n  syntax:\n    content: public void Invalidate ();\n    parameters: []\n  overload: System.Windows.Forms.Control.Invalidate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Invalidated\n  commentId: E:System.Windows.Forms.Control.Invalidated\n  id: Invalidated\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invalidated\n  nameWithType: Control.Invalidated\n  fullName: Control.Invalidated\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a control's display requires redrawing.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.Invalidated> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.Invalidated> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#40)]\\n [!code-vb[System.Windows.Forms.EventExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#40)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event System.Windows.Forms.InvalidateEventHandler Invalidated;\n    return:\n      type: System.Windows.Forms.InvalidateEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Invoke(System.Delegate)\n  commentId: M:System.Windows.Forms.Control.Invoke(System.Delegate)\n  id: Invoke(System.Delegate)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invoke(Delegate)\n  nameWithType: Control.Invoke(Delegate)\n  fullName: Control.Invoke(Delegate)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Executes the specified delegate on the thread that owns the control's underlying window handle.\n  remarks: \"Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.  \\n  \\n The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet. If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception. Exceptions that are raised during the call will be propagated back to the caller.  \\n  \\n> [!NOTE]\\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.  \\n  \\n The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>. The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list. A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.  \\n  \\n> [!NOTE]\\n>  An exception might be thrown if the thread that should process the message is no longer active.\"\n  example:\n  - \"The following code example shows controls that contain a delegate. The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form. When the user clicks on the button, `Invoke` runs the delegate.  \\n  \\n [!code-cpp[Control_Invoke2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke2/CPP/control_invoke2.cpp#1)]\\n [!code-csharp[Control_Invoke2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke2/CS/control_invoke2.cs#1)]\\n [!code-vb[Control_Invoke2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke2/VB/control_invoke2.vb#1)]\"\n  syntax:\n    content: public object Invoke (Delegate method);\n    parameters:\n    - id: method\n      type: System.Delegate\n      description: A delegate that contains a method to be called in the control's thread context.\n    return:\n      type: System.Object\n      description: The return value from the delegate being invoked, or `null` if the delegate has no return value.\n  overload: System.Windows.Forms.Control.Invoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  commentId: M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  id: Invoke(System.Delegate,System.Object[])\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Invoke(Delegate, Object[])\n  nameWithType: Control.Invoke(Delegate, Object[])\n  fullName: Control.Invoke(Delegate, Object[])\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.\n  remarks: \"Delegates are similar to function pointers in C or C++ languages. Delegates encapsulate a reference to a method inside a delegate object. The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time. Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.  \\n  \\n If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, this method throws an exception. Exceptions that are raised during the call will be propagated back to the caller.  \\n  \\n> [!NOTE]\\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.  \\n  \\n The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=fullName>. The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list. A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.  \\n  \\n> [!NOTE]\\n>  An exception might be thrown if the thread that should process the message is no longer active.\"\n  example:\n  - \"The following code example shows controls that contain a delegate. The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments. When the user clicks on the button, `Invoke` runs the delegate.  \\n  \\n [!code-cpp[Control_Invoke1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke1/CPP/control_invoke1.cpp#1)]\\n [!code-csharp[Control_Invoke1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke1/CS/control_invoke1.cs#1)]\\n [!code-vb[Control_Invoke1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke1/VB/control_invoke1.vb#1)]\"\n  syntax:\n    content: public object Invoke (Delegate method, object[] args);\n    parameters:\n    - id: method\n      type: System.Delegate\n      description: A delegate to a method that takes parameters of the same number and type that are contained in the <code>args</code> parameter.\n    - id: args\n      type: System.Object[]\n      description: An array of objects to pass as arguments to the specified method. This parameter can be `null` if the method takes no arguments.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that contains the return value from the delegate being invoked, or `null` if the delegate has no return value.\n  overload: System.Windows.Forms.Control.Invoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  id: InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: InvokeGotFocus(Control, EventArgs)\n  nameWithType: Control.InvokeGotFocus(Control, EventArgs)\n  fullName: Control.InvokeGotFocus(Control, EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.GotFocus\"></xref> event for the specified control.\n  syntax:\n    content: protected void InvokeGotFocus (System.Windows.Forms.Control toInvoke, EventArgs e);\n    parameters:\n    - id: toInvoke\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the event to.\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.InvokeGotFocus*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  id: InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: InvokeLostFocus(Control, EventArgs)\n  nameWithType: Control.InvokeLostFocus(Control, EventArgs)\n  fullName: Control.InvokeLostFocus(Control, EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.LostFocus\"></xref> event for the specified control.\n  syntax:\n    content: protected void InvokeLostFocus (System.Windows.Forms.Control toInvoke, EventArgs e);\n    parameters:\n    - id: toInvoke\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the event to.\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.InvokeLostFocus*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  id: InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: InvokeOnClick(Control, EventArgs)\n  nameWithType: Control.InvokeOnClick(Control, EventArgs)\n  fullName: Control.InvokeOnClick(Control, EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event for the specified control.\n  syntax:\n    content: protected void InvokeOnClick (System.Windows.Forms.Control toInvoke, EventArgs e);\n    parameters:\n    - id: toInvoke\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event to.\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.InvokeOnClick*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  commentId: M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  id: InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: InvokePaint(Control, PaintEventArgs)\n  nameWithType: Control.InvokePaint(Control, PaintEventArgs)\n  fullName: Control.InvokePaint(Control, PaintEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event for the specified control.\n  syntax:\n    content: protected void InvokePaint (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);\n    parameters:\n    - id: c\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event to.\n    - id: e\n      type: System.Windows.Forms.PaintEventArgs\n      description: An <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.InvokePaint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  commentId: M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  id: InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: InvokePaintBackground(Control, PaintEventArgs)\n  nameWithType: Control.InvokePaintBackground(Control, PaintEventArgs)\n  fullName: Control.InvokePaintBackground(Control, PaintEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the `PaintBackground` event for the specified control.\n  syntax:\n    content: protected void InvokePaintBackground (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);\n    parameters:\n    - id: c\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> to assign the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event to.\n    - id: e\n      type: System.Windows.Forms.PaintEventArgs\n      description: An <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.InvokePaintBackground*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.InvokeRequired\n  commentId: P:System.Windows.Forms.Control.InvokeRequired\n  id: InvokeRequired\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: InvokeRequired\n  nameWithType: Control.InvokeRequired\n  fullName: Control.InvokeRequired\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.\n  remarks: \"Controls in Windows Forms are bound to a specific thread and are not thread safe. Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread. This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.  \\n  \\n> [!NOTE]\\n>  In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created. Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls. For all other method calls, you should use one of these invoke methods when calling from a different thread.  \\n  \\n If the control's handle does not yet exist, <xref:System.Windows.Forms.Control.InvokeRequired%2A> searches up the control's parent chain until it finds a control or form that does have a window handle. If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.InvokeRequired%2A> method returns `false`.  \\n  \\n This means that <xref:System.Windows.Forms.Control.InvokeRequired%2A>can return `false` if <xref:System.Windows.Forms.Control.Invoke%2A> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.  \\n  \\n In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control. This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.  \\n  \\n You can protect against this case by also checking the value of <xref:System.Windows.Forms.Control.IsHandleCreated%2A> when <xref:System.Windows.Forms.Control.InvokeRequired%2A> returns `false` on a background thread. If the control handle has not yet been created, you must wait until it has been created before calling <xref:System.Windows.Forms.Control.Invoke%2A> or <xref:System.Windows.Forms.Control.BeginInvoke%2A>. Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in `Application.Run(new MainForm())`, before the form has been shown or `Application.Run` has been called.  \\n  \\n One solution is to wait until the form's handle has been created before starting the background thread. Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process.  \\n  \\n An even better solution is to use the `SynchronizationContext` returned by <xref:System.Threading.SynchronizationContext> rather than a control for cross-thread marshaling.  \\n  \\n> [!NOTE]\\n>  An exception might be thrown if the thread that should process the message is no longer active.  \\n  \\n For more information about multithreaded Windows Forms controls, see [How to: Use a Background Thread to Search for Files](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md) and [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md).\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool InvokeRequired { get; }\n    return:\n      type: System.Boolean\n      description: \"`true` if the control's <xref href=\\\"System.Windows.Forms.Control.Handle\\\"></xref> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, `false`.\"\n  overload: System.Windows.Forms.Control.InvokeRequired*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.IsAccessible\n  commentId: P:System.Windows.Forms.Control.IsAccessible\n  id: IsAccessible\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IsAccessible\n  nameWithType: Control.IsAccessible\n  fullName: Control.IsAccessible\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the control is visible to accessibility applications.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsAccessible { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control is visible to accessibility applications; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.IsAccessible*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.IsDisposed\n  commentId: P:System.Windows.Forms.Control.IsDisposed\n  id: IsDisposed\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IsDisposed\n  nameWithType: Control.IsDisposed\n  fullName: Control.IsDisposed\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control has been disposed of.\n  remarks: When this property returns `true`, the control is disposed of and can no longer be referenced as a valid Windows control. Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When a control is disposed, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsDisposed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control has been disposed of; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.IsDisposed*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.IsHandleCreated\n  commentId: P:System.Windows.Forms.Control.IsHandleCreated\n  id: IsHandleCreated\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IsHandleCreated\n  nameWithType: Control.IsHandleCreated\n  fullName: Control.IsHandleCreated\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control has a handle associated with it.\n  remarks: Use the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property to determine whether <xref:System.Windows.Forms.Control.CreateHandle%2A> has been called.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsHandleCreated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a handle has been assigned to the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.IsHandleCreated*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.IsInputChar(System.Char)\n  commentId: M:System.Windows.Forms.Control.IsInputChar(System.Char)\n  id: IsInputChar(System.Char)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IsInputChar(Char)\n  nameWithType: Control.IsInputChar(Char)\n  fullName: Control.IsInputChar(Char)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines if a character is an input character that the control recognizes.\n  remarks: Call the <xref:System.Windows.Forms.Control.IsInputChar%2A> method to determine whether the character specified by the `charCode` parameter is an input character that the control wants. This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `true`, the specified character is sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `false`, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. The preprocessing of a character includes checking whether the character is a mnemonic of another control.\n  syntax:\n    content: protected virtual bool IsInputChar (char charCode);\n    parameters:\n    - id: charCode\n      type: System.Char\n      description: The character to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the character should be sent directly to the control and not preprocessed; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.IsInputChar*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\n  id: IsInputKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IsInputKey(Keys)\n  nameWithType: Control.IsInputKey(Keys)\n  fullName: Control.IsInputKey(Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines whether the specified key is a regular input key or a special key that requires preprocessing.\n  remarks: Call the <xref:System.Windows.Forms.Control.IsInputKey%2A> method to determine whether the key specified by the `keyData` parameter is an input key that the control wants. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `true`, the specified key is sent directly to the control. If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `false`, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.\n  example:\n  - \"The following code example shows you how to override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method for a <xref:System.Windows.Forms.TextBox> control. In this example, the `TabTextBox` class handles the TAB key. When the `TabTextBox` has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text. By default, the <xref:System.Windows.Forms.TextBox> control handles the TAB key by moving the input focus to the next control. In this case, the keypress never reaches the <xref:System.Windows.Forms.Control.OnKeyDown%2A> method override. To prevent this default behavior, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns `true` when the user presses the TAB key. For all other keypresses, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns the result of calling the base-class version of the method.  \\n  \\n [!code-csharp[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/cs/form1.cs#0)]\\n [!code-vb[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/vb/form1.vb#0)]\"\n  syntax:\n    content: protected virtual bool IsInputKey (System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified key is a regular input key; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.IsInputKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  id: IsKeyLocked(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IsKeyLocked(Keys)\n  nameWithType: Control.IsKeyLocked(Keys)\n  fullName: Control.IsKeyLocked(Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.\n  remarks: Use the <xref:System.Windows.Forms.Control.IsKeyLocked%2A> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.\n  example:\n  - \"The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.  \\n  \\n [!code-cpp[ControlIsKeyLocked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlIsKeyLocked/CPP/controliskeylocked.cpp#1)]\\n [!code-csharp[ControlIsKeyLocked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlIsKeyLocked/CS/controliskeylocked.cs#1)]\\n [!code-vb[ControlIsKeyLocked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlIsKeyLocked/VB/controliskeylocked.vb#1)]\"\n  syntax:\n    content: public static bool IsKeyLocked (System.Windows.Forms.Keys keyVal);\n    parameters:\n    - id: keyVal\n      type: System.Windows.Forms.Keys\n      description: The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <xref href=\"System.Windows.Forms.Keys\"></xref> enumeration.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified key or keys are in effect; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.IsKeyLocked*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <code>keyVal</code> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.IsMirrored\n  commentId: P:System.Windows.Forms.Control.IsMirrored\n  id: IsMirrored\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IsMirrored\n  nameWithType: Control.IsMirrored\n  fullName: Control.IsMirrored\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control is mirrored.\n  remarks: 'A mirrored control displays both layout and text from right to left. For more information, see [How to: Create Mirrored Windows Forms and Controls](http://msdn.microsoft.com/en-us/7c5c4ecc-9bfb-4508-8383-753e306719b1).'\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsMirrored { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control is mirrored; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.IsMirrored*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  commentId: M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  id: IsMnemonic(System.Char,System.String)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IsMnemonic(Char, String)\n  nameWithType: Control.IsMnemonic(Char, String)\n  fullName: Control.IsMnemonic(Char, String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines if the specified character is the mnemonic character assigned to the control in the specified string.\n  remarks: The mnemonic character is the character immediately following the first instance of \"&\" in a <xref:System.String>.\n  example:\n  - \"The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior. The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties. To run this example paste the following code after a form class, in the same file. Add a button of type `MnemonicButton` to the form.  \\n  \\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]\"\n  syntax:\n    content: public static bool IsMnemonic (char charCode, string text);\n    parameters:\n    - id: charCode\n      type: System.Char\n      description: The character to test.\n    - id: text\n      type: System.String\n      description: The string to search.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>charCode</code> character is the mnemonic character assigned to the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.IsMnemonic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.KeyDown\n  commentId: E:System.Windows.Forms.Control.KeyDown\n  id: KeyDown\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: KeyDown\n  nameWithType: Control.KeyDown\n  fullName: Control.KeyDown\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a key is pressed while the control has focus.\n  remarks: \"Key events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.KeyDown>  \\n  \\n2.  <xref:System.Windows.Forms.Control.KeyPress>  \\n  \\n3.  <xref:System.Windows.Forms.Control.KeyUp>  \\n  \\n To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`. Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically. To have these keys raise the <xref:System.Windows.Forms.Control.KeyDown> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form. The code for the override of the <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`. Instead of overriding the <xref:System.Windows.Forms.Control.IsInputKey%2A> method, you can handle the <xref:System.Windows.Forms.Control.PreviewKeyDown> event and set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>property to `true`. For a code example, see the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.  \\n  \\n [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]\\n [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]\\n [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.KeyEventHandler KeyDown;\n    return:\n      type: System.Windows.Forms.KeyEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.KeyPress\n  commentId: E:System.Windows.Forms.Control.KeyPress\n  id: KeyPress\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: KeyPress\n  nameWithType: Control.KeyPress\n  fullName: Control.KeyPress\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a character. space or backspace key is pressed while the control has focus.\n  remarks: \"Key events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.KeyDown>  \\n  \\n2.  <xref:System.Windows.Forms.Control.KeyPress>  \\n  \\n3.  <xref:System.Windows.Forms.Control.KeyUp>  \\n  \\n The <xref:System.Windows.Forms.Control.KeyPress> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events.  \\n  \\n Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.  \\n  \\n To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.  \\n  \\n [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]\\n [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]\\n [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.KeyPressEventHandler KeyPress;\n    return:\n      type: System.Windows.Forms.KeyPressEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.KeyUp\n  commentId: E:System.Windows.Forms.Control.KeyUp\n  id: KeyUp\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: KeyUp\n  nameWithType: Control.KeyUp\n  fullName: Control.KeyUp\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a key is released while the control has focus.\n  remarks: \"Key events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.KeyDown>  \\n  \\n2.  <xref:System.Windows.Forms.Control.KeyPress>  \\n  \\n3.  <xref:System.Windows.Forms.Control.KeyUp>  \\n  \\n To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`. Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically. To have these keys raise the <xref:System.Windows.Forms.Control.KeyUp> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form. The code for the override of <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.  \\n  \\n [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]\\n [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]\\n [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.KeyEventHandler KeyUp;\n    return:\n      type: System.Windows.Forms.KeyEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Layout\n  commentId: E:System.Windows.Forms.Control.Layout\n  id: Layout\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Layout\n  nameWithType: Control.Layout\n  fullName: Control.Layout\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a control should reposition its child controls.\n  remarks: \"The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control. The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods. Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change. For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event. This will keep the form centered as the user resizes it. This example requires that you have created a <xref:System.Windows.Forms.Form> control.  \\n  \\n [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]\\n [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]\\n [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.LayoutEventHandler Layout;\n    return:\n      type: System.Windows.Forms.LayoutEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.LayoutEngine\n  commentId: P:System.Windows.Forms.Control.LayoutEngine\n  id: LayoutEngine\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: LayoutEngine\n  nameWithType: Control.LayoutEngine\n  fullName: Control.LayoutEngine\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a cached instance of the control's layout engine.\n  remarks: The <xref:System.Windows.Forms.Control.LayoutEngine%2A> property gets the layout engine for the control's children rather than for the control itself.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }\n    return:\n      type: System.Windows.Forms.Layout.LayoutEngine\n      description: The <xref href=\"System.Windows.Forms.Layout.LayoutEngine\"></xref> for the control's contents.\n  overload: System.Windows.Forms.Control.LayoutEngine*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Leave\n  commentId: E:System.Windows.Forms.Control.Leave\n  id: Leave\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Leave\n  nameWithType: Control.Leave\n  fullName: Control.Leave\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the input focus leaves the control.\n  remarks: \"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n6.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n6.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.  \\n  \\n> [!CAUTION]\\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\\\(v=vs.85\\\\).aspx) topic.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.  \\n  \\n [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]\\n [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]\\n [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler Leave;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Left\n  commentId: P:System.Windows.Forms.Control.Left\n  id: Left\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Left\n  nameWithType: Control.Left\n  fullName: Control.Left\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.\n  remarks: \"The <xref:System.Windows.Forms.Control.Left%2A> property value is equivalent to the <xref:System.Drawing.Point.X%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.  \\n  \\n Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.\"\n  example:\n  - \"The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \\n  \\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]\\n [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]\\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Left { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.\n  overload: System.Windows.Forms.Control.Left*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Location\n  commentId: P:System.Windows.Forms.Control.Location\n  id: Location\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Location\n  nameWithType: Control.Location\n  fullName: Control.Location\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.\n  remarks: \"Because the <xref:System.Drawing.Point> class is a value type (`Structure` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `struct` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)]), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control. So, adjusting the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from this property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the control. To adjust these properties set each property value individually, or set the <xref:System.Windows.Forms.Control.Location%2A> property with a new <xref:System.Drawing.Point>.  \\n  \\n If the <xref:System.Windows.Forms.Control> is a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Location%2A> property value represents the upper-left corner of the <xref:System.Windows.Forms.Form> in screen coordinates.\"\n  example:\n  - \"The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox>and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]\\n [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]\"\n  syntax:\n    content: public System.Drawing.Point Location { get; set; }\n    return:\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the control relative to the upper-left corner of its container.\n  overload: System.Windows.Forms.Control.Location*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.LocationChanged\n  commentId: E:System.Windows.Forms.Control.LocationChanged\n  id: LocationChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: LocationChanged\n  nameWithType: Control.LocationChanged\n  fullName: Control.LocationChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.Location\"></xref> property value has changed.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or through interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example raises the <xref:System.Windows.Forms.Control.LocationChanged> event on a <xref:System.Windows.Forms.StatusStrip> when the form is resized.  \\n  \\n [!code-csharp[System.Windows.Forms.LocationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.LocationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler LocationChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)\n  commentId: M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)\n  id: LogicalToDeviceUnits(System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: LogicalToDeviceUnits(Int32)\n  nameWithType: Control.LogicalToDeviceUnits(Int32)\n  fullName: Control.LogicalToDeviceUnits(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.\n  syntax:\n    content: public int LogicalToDeviceUnits (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: The Logical value to convert.\n    return:\n      type: System.Int32\n      description: The resulting DeviceUnit value.\n  overload: System.Windows.Forms.Control.LogicalToDeviceUnits*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.LostFocus\n  commentId: E:System.Windows.Forms.Control.LostFocus\n  id: LostFocus\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: LostFocus\n  nameWithType: Control.LostFocus\n  fullName: Control.LostFocus\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control loses focus.\n  remarks: \"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n6.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n6.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \\n  \\n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\\\(v=vs.85\\\\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\\\(v=vs.85\\\\).aspx) topics.  \\n  \\n> [!CAUTION]\\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\\\(v=vs.85\\\\).aspx) topic.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates validating the text for TextBox1. It also demonstrates handling the <xref:System.Windows.Forms.Control.LostFocus> event by setting the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=fullName> property to the text in TextBox1. The code example used the <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=fullName> method to check for an error before opening the file dialog box. To run this example, paste the following code into a form containing a <xref:System.Windows.Forms.TextBox> named `TextBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, a <xref:System.Windows.Forms.Button> named `Button1`, and an <xref:System.Windows.Forms.ErrorProvider> named `ErrorProvider1`. Ensure all events are associated with their event handlers.  \\n  \\n [!code-cpp[System.Windows.Forms.FileDialog#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#2)]\\n [!code-csharp[System.Windows.Forms.FileDialog#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#2)]\\n [!code-vb[System.Windows.Forms.FileDialog#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler LostFocus;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Margin\n  commentId: P:System.Windows.Forms.Control.Margin\n  id: Margin\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Margin\n  nameWithType: Control.Margin\n  fullName: Control.Margin\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the space between controls.\n  remarks: \"Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.  \\n  \\n> [!NOTE]\\n>  Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the the edges of its container.\"\n  syntax:\n    content: public System.Windows.Forms.Padding Margin { get; set; }\n    return:\n      type: System.Windows.Forms.Padding\n      description: A <xref href=\"System.Windows.Forms.Padding\"></xref> representing the space between controls.\n  overload: System.Windows.Forms.Control.Margin*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MarginChanged\n  commentId: E:System.Windows.Forms.Control.MarginChanged\n  id: MarginChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MarginChanged\n  nameWithType: Control.MarginChanged\n  fullName: Control.MarginChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control's margin changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MarginChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MarginChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#21)]\\n [!code-vb[System.Windows.Forms.EventExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#21)]\"\n  syntax:\n    content: public event EventHandler MarginChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MaximumSize\n  commentId: P:System.Windows.Forms.Control.MaximumSize\n  id: MaximumSize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MaximumSize\n  nameWithType: Control.MaximumSize\n  fullName: Control.MaximumSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the size that is the upper limit that <xref href=\"System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\"></xref> can specify.\n  syntax:\n    content: public virtual System.Drawing.Size MaximumSize { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle.\n  overload: System.Windows.Forms.Control.MaximumSize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MinimumSize\n  commentId: P:System.Windows.Forms.Control.MinimumSize\n  id: MinimumSize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MinimumSize\n  nameWithType: Control.MinimumSize\n  fullName: Control.MinimumSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the size that is the lower limit that <xref href=\"System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\"></xref> can specify.\n  syntax:\n    content: public virtual System.Drawing.Size MinimumSize { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: An ordered pair of type <xref href=\"System.Drawing.Size\"></xref> representing the width and height of a rectangle.\n  overload: System.Windows.Forms.Control.MinimumSize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ModifierKeys\n  commentId: P:System.Windows.Forms.Control.ModifierKeys\n  id: ModifierKeys\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ModifierKeys\n  nameWithType: Control.ModifierKeys\n  fullName: Control.ModifierKeys\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.\n  remarks: ''\n  example:\n  - \"The following code example hides a button when the CTRL key is pressed while the button is clicked. This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.  \\n  \\n [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]\\n [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]\"\n  syntax:\n    content: public static System.Windows.Forms.Keys ModifierKeys { get; }\n    return:\n      type: System.Windows.Forms.Keys\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.Keys\"></xref> values. The default is <xref href=\"System.Windows.Forms.Keys.None\"></xref>.\n  overload: System.Windows.Forms.Control.ModifierKeys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseButtons\n  commentId: P:System.Windows.Forms.Control.MouseButtons\n  id: MouseButtons\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseButtons\n  nameWithType: Control.MouseButtons\n  fullName: Control.MouseButtons\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating which of the mouse buttons is in a pressed state.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called Form1 containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \\n  \\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]\"\n  syntax:\n    content: public static System.Windows.Forms.MouseButtons MouseButtons { get; }\n    return:\n      type: System.Windows.Forms.MouseButtons\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> enumeration values. The default is <xref href=\"System.Windows.Forms.MouseButtons.None\"></xref>.\n  overload: System.Windows.Forms.Control.MouseButtons*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseCaptureChanged\n  commentId: E:System.Windows.Forms.Control.MouseCaptureChanged\n  id: MouseCaptureChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseCaptureChanged\n  nameWithType: Control.MouseCaptureChanged\n  fullName: Control.MouseCaptureChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control loses mouse capture.\n  remarks: \"In rare scenarios, you might need to detect unexpected input. For example, consider the following scenarios.  \\n  \\n-   During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.  \\n  \\n-   During a mouse operation, the user switches to another program by pressing ALT+TAB.  \\n  \\n-   During a mouse operation, another program displays a window or a message box that takes focus away from the current application.  \\n  \\n Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation. If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event.\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event for a <xref:System.Windows.Forms.Button> control.  \\n  \\n [!code-csharp[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/cs/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/vb/form1.vb#1)]  \\n  \\n To test this example, run it in the debugger by pressing F5. Open the **Output** window in Visual Studio so that you can see when events are raised. Click the <xref:System.Windows.Forms.Button> and notice the following output.  \\n  \\n `button1_MouseDown`  \\n  \\n `button1_MouseUp`  \\n  \\n `button1_MouseCaptureChanged`  \\n  \\n Now, click and hold the left mouse button on the <xref:System.Windows.Forms.Button> control. While still clicking the mouse, press ALT+TAB to switch to another program. Notice that the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event is raised enabling you to potentially handle this scenario. Depending on your actions, the <xref:System.Windows.Forms.Control.MouseUp> event might not be raised. You can also try this test with the Windows key or CTRL+ESC.  \\n  \\n `button1_MouseDown`  \\n  \\n `button1_MouseCaptureChanged`\"\n  syntax:\n    content: public event EventHandler MouseCaptureChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.MouseClick\n  commentId: E:System.Windows.Forms.Control.MouseClick\n  id: MouseClick\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseClick\n  nameWithType: Control.MouseClick\n  fullName: Control.MouseClick\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is clicked by the mouse.\n  remarks: \"Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseDown> event.  \\n  \\n2.  <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseClick> event.  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp> event.  \\n  \\n For this to occur, the various events cannot be disabled in the control's class.  \\n  \\n Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second <xref:System.Windows.Forms.Control.MouseClick> event.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control. They are often raised by other actions, such as pressing the ENTER key when the control has focus.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]\\n [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]\"\n  syntax:\n    content: public event System.Windows.Forms.MouseEventHandler MouseClick;\n    return:\n      type: System.Windows.Forms.MouseEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseDoubleClick\n  commentId: E:System.Windows.Forms.Control.MouseDoubleClick\n  id: MouseDoubleClick\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseDoubleClick\n  nameWithType: Control.MouseDoubleClick\n  fullName: Control.MouseDoubleClick\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is double clicked by the mouse.\n  remarks: \"The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control. The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.  \\n  \\n The following series of events is raised by the control when such a user action takes place:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseDown> event.  \\n  \\n2.  <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseClick> event.  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp> event.  \\n  \\n5.  <xref:System.Windows.Forms.Control.MouseDown> event.  \\n  \\n6.  <xref:System.Windows.Forms.Control.DoubleClick> event.  \\n  \\n7.  <xref:System.Windows.Forms.Control.MouseDoubleClick> event.  \\n  \\n8.  <xref:System.Windows.Forms.Control.MouseUp> event.  \\n  \\n For this to occur, the various events cannot be disabled in the control's class.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control. They may be raised by other user actions, such as shortcut key combinations.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseDoubleClick> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#55)]\\n [!code-vb[System.Windows.Forms.EventExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#55)]\"\n  syntax:\n    content: public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;\n    return:\n      type: System.Windows.Forms.MouseEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseDown\n  commentId: E:System.Windows.Forms.Control.MouseDown\n  id: MouseDown\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseDown\n  nameWithType: Control.MouseDown\n  fullName: Control.MouseDown\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the mouse pointer is over the control and a mouse button is pressed.\n  remarks: \"Mouse events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.MouseMove>  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp>  \\n  \\n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \\n  \\n> [!NOTE]\\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \\n  \\n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]\\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.MouseEventHandler MouseDown;\n    return:\n      type: System.Windows.Forms.MouseEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseEnter\n  commentId: E:System.Windows.Forms.Control.MouseEnter\n  id: MouseEnter\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseEnter\n  nameWithType: Control.MouseEnter\n  fullName: Control.MouseEnter\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the mouse pointer enters the control.\n  remarks: \"Mouse events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.MouseMove>  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp>  \\n  \\n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \\n  \\n> [!NOTE]\\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \\n  \\n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]\\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]\"\n  syntax:\n    content: public event EventHandler MouseEnter;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseHover\n  commentId: E:System.Windows.Forms.Control.MouseHover\n  id: MouseHover\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseHover\n  nameWithType: Control.MouseHover\n  fullName: Control.MouseHover\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the mouse pointer rests on the control.\n  remarks: \"A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the \\\"hover rectangle\\\"). The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.  \\n  \\n The <xref:System.Windows.Forms.Control.MouseHover> event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties.  \\n  \\n Mouse events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.MouseMove>  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp>  \\n  \\n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \\n  \\n> [!NOTE]\\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \\n  \\n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]\\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]\"\n  syntax:\n    content: public event EventHandler MouseHover;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseLeave\n  commentId: E:System.Windows.Forms.Control.MouseLeave\n  id: MouseLeave\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseLeave\n  nameWithType: Control.MouseLeave\n  fullName: Control.MouseLeave\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the mouse pointer leaves the control.\n  remarks: \"Mouse events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.MouseMove>  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp>  \\n  \\n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \\n  \\n> [!NOTE]\\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \\n  \\n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]\\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]\"\n  syntax:\n    content: public event EventHandler MouseLeave;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseMove\n  commentId: E:System.Windows.Forms.Control.MouseMove\n  id: MouseMove\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseMove\n  nameWithType: Control.MouseMove\n  fullName: Control.MouseMove\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the mouse pointer is moved over the control.\n  remarks: \"Typical uses of <xref:System.Windows.Forms.Control.MouseMove> are to change the control's color or to paint a raised rectangle around the control.  \\n  \\n Mouse events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.MouseMove>  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp>  \\n  \\n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \\n  \\n> [!NOTE]\\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \\n  \\n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]\\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.MouseEventHandler MouseMove;\n    return:\n      type: System.Windows.Forms.MouseEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MousePosition\n  commentId: P:System.Windows.Forms.Control.MousePosition\n  id: MousePosition\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MousePosition\n  nameWithType: Control.MousePosition\n  fullName: Control.MousePosition\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the position of the mouse cursor in screen coordinates.\n  remarks: \"The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced. The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control. The coordinates of the upper-left corner of the screen are 0,0.  \\n  \\n The <xref:System.Windows.Forms.Control.MousePosition%2A> property is identical to the <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following code example puts a <xref:System.Windows.Forms.TreeNode> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node. After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again. This example requires that you have a <xref:System.Windows.Forms.TreeView> on a <xref:System.Windows.Forms.Form>. The tree view should also have at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeView.Nodes%2A> collection.  \\n  \\n [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]\\n [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]\\n [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]\"\n  syntax:\n    content: public static System.Drawing.Point MousePosition { get; }\n    return:\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.\n  overload: System.Windows.Forms.Control.MousePosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.MouseUp\n  commentId: E:System.Windows.Forms.Control.MouseUp\n  id: MouseUp\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseUp\n  nameWithType: Control.MouseUp\n  fullName: Control.MouseUp\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the mouse pointer is over the control and a mouse button is released.\n  remarks: \"Mouse events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.MouseMove>  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp>  \\n  \\n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \\n  \\n> [!NOTE]\\n>  The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>. If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event. However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \\n  \\n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]\\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.MouseEventHandler MouseUp;\n    return:\n      type: System.Windows.Forms.MouseEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.MouseWheel\n  commentId: E:System.Windows.Forms.Control.MouseWheel\n  id: MouseWheel\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: MouseWheel\n  nameWithType: Control.MouseWheel\n  fullName: Control.MouseWheel\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the mouse wheel moves while the control has focus.\n  remarks: \"When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel. The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=fullName> property value indicates the amount the mouse wheel has been moved. The UI should scroll when the accumulated delta is plus or minus 120. The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> property for every delta value reached. You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> lines scrolled per 120 delta units of wheel movement.  \\n  \\n For more information about handling mouse wheel messages, see the[WM_MOUSEWHEEL](http://msdn.microsoft.com/library/windows/desktop/ms645617\\\\(v=vs.85\\\\).aspx)topic.  \\n  \\n Mouse events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.MouseMove>  \\n  \\n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  \\n  \\n4.  <xref:System.Windows.Forms.Control.MouseUp>  \\n  \\n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \\n  \\n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]\\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event System.Windows.Forms.MouseEventHandler MouseWheel;\n    return:\n      type: System.Windows.Forms.MouseEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Move\n  commentId: E:System.Windows.Forms.Control.Move\n  id: Move\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Move\n  nameWithType: Control.Move\n  fullName: Control.Move\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is moved.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.  \\n  \\n [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]\\n [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]\\n [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler Move;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Name\n  commentId: P:System.Windows.Forms.Control.Name\n  id: Name\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Name\n  nameWithType: Control.Name\n  fullName: Control.Name\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the name of the control.\n  remarks: The <xref:System.Windows.Forms.Control.Name%2A> property can be used at run time to evaluate the object by name rather than type and programmatic name. Because the <xref:System.Windows.Forms.Control.Name%2A> property returns a <xref:System.String> type, it can be evaluated in case-style logic statements (`Select` statement in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `switch` statement in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] and [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).\n  example:\n  - \"The following code example displays the <xref:System.Windows.Forms.Control.Name%2A> of a control in a <xref:System.Windows.Forms.MessageBox> when the control is added or removed from a form.  \\n  \\n [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]\\n [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]\\n [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the control. The default is an empty string (\"\").\n  overload: System.Windows.Forms.Control.Name*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  commentId: M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  id: NotifyInvalidate(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: NotifyInvalidate(Rectangle)\n  nameWithType: Control.NotifyInvalidate(Rectangle)\n  fullName: Control.NotifyInvalidate(Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Invalidated\"></xref> event with a specified region of the control to invalidate.\n  syntax:\n    content: protected virtual void NotifyInvalidate (System.Drawing.Rectangle invalidatedArea);\n    parameters:\n    - id: invalidatedArea\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> representing the area to invalidate.\n  overload: System.Windows.Forms.Control.NotifyInvalidate*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  id: OnAutoSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnAutoSizeChanged(EventArgs)\n  nameWithType: Control.OnAutoSizeChanged(EventArgs)\n  fullName: Control.OnAutoSizeChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.AutoSizeChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnAutoSizeChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnAutoSizeChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  id: OnBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnBackColorChanged(EventArgs)\n  nameWithType: Control.OnBackColorChanged(EventArgs)\n  fullName: Control.OnBackColorChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BackColorChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnBackColorChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnBackColorChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  id: OnBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnBackgroundImageChanged(EventArgs)\n  nameWithType: Control.OnBackgroundImageChanged(EventArgs)\n  fullName: Control.OnBackgroundImageChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnBackgroundImageChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnBackgroundImageChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  id: OnBackgroundImageLayoutChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnBackgroundImageLayoutChanged(EventArgs)\n  nameWithType: Control.OnBackgroundImageLayoutChanged(EventArgs)\n  fullName: Control.OnBackgroundImageLayoutChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnBackgroundImageLayoutChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  id: OnBindingContextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnBindingContextChanged(EventArgs)\n  nameWithType: Control.OnBindingContextChanged(EventArgs)\n  fullName: Control.OnBindingContextChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BindingContextChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnBindingContextChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnBindingContextChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  id: OnCausesValidationChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnCausesValidationChanged(EventArgs)\n  nameWithType: Control.OnCausesValidationChanged(EventArgs)\n  fullName: Control.OnCausesValidationChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.CausesValidationChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnCausesValidationChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnCausesValidationChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  id: OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnChangeUICues(UICuesEventArgs)\n  nameWithType: Control.OnChangeUICues(UICuesEventArgs)\n  fullName: Control.OnChangeUICues(UICuesEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ChangeUICues\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.UICuesEventArgs\n      description: A <xref href=\"System.Windows.Forms.UICuesEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnChangeUICues*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnClick(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnClick(System.EventArgs)\n  id: OnClick(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnClick(EventArgs)\n  nameWithType: Control.OnClick(EventArgs)\n  fullName: Control.OnClick(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Click\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.OnClick%2A> method in a derived class. To run the example, paste the following code after a form class, in the same file. Add a textbox of type `SingleClickTextBox` to the form.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/VB/form1.vb#1)]  \\n  \\n The following code example shows one of the many uses of the <xref:System.Windows.Forms.Control.Click> event and event handler.  \\n  \\n [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]\\n [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]\\n [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnClick (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnClick*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  id: OnClientSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnClientSizeChanged(EventArgs)\n  nameWithType: Control.OnClientSizeChanged(EventArgs)\n  fullName: Control.OnClientSizeChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ClientSizeChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnClientSizeChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnClientSizeChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  id: OnContextMenuChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnContextMenuChanged(EventArgs)\n  nameWithType: Control.OnContextMenuChanged(EventArgs)\n  fullName: Control.OnContextMenuChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ContextMenuChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnContextMenuChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnContextMenuChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  id: OnContextMenuStripChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnContextMenuStripChanged(EventArgs)\n  nameWithType: Control.OnContextMenuStripChanged(EventArgs)\n  fullName: Control.OnContextMenuStripChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ContextMenuStripChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnContextMenuStripChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnContextMenuStripChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  id: OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnControlAdded(ControlEventArgs)\n  nameWithType: Control.OnControlAdded(ControlEventArgs)\n  fullName: Control.OnControlAdded(ControlEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ControlAdded\"></xref> event.\n  remarks: \"Called when a child control is added to the control.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]\\n [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]\\n [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnControlAdded (System.Windows.Forms.ControlEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.ControlEventArgs\n      description: A <xref href=\"System.Windows.Forms.ControlEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnControlAdded*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  id: OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnControlRemoved(ControlEventArgs)\n  nameWithType: Control.OnControlRemoved(ControlEventArgs)\n  fullName: Control.OnControlRemoved(ControlEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ControlRemoved\"></xref> event.\n  remarks: \"Called when a child control is removed from the control.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]\\n [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]\\n [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnControlRemoved (System.Windows.Forms.ControlEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.ControlEventArgs\n      description: A <xref href=\"System.Windows.Forms.ControlEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnControlRemoved*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnCreateControl\n  commentId: M:System.Windows.Forms.Control.OnCreateControl\n  id: OnCreateControl\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnCreateControl()\n  nameWithType: Control.OnCreateControl()\n  fullName: Control.OnCreateControl()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.CreateControl\"></xref> method.\n  remarks: \"The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method is called when the control is first created.  \\n  \\n The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnCreateControl ();\n    parameters: []\n  overload: System.Windows.Forms.Control.OnCreateControl*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  id: OnCursorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnCursorChanged(EventArgs)\n  nameWithType: Control.OnCursorChanged(EventArgs)\n  fullName: Control.OnCursorChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.CursorChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnCursorChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnCursorChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  id: OnDockChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnDockChanged(EventArgs)\n  nameWithType: Control.OnDockChanged(EventArgs)\n  fullName: Control.OnDockChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DockChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnDockChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnDockChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  id: OnDoubleClick(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnDoubleClick(EventArgs)\n  nameWithType: Control.OnDoubleClick(EventArgs)\n  fullName: Control.OnDoubleClick(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.  \\n  \\n [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]\\n [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]\\n [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnDoubleClick (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnDoubleClick*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)\n  id: OnDpiChangedAfterParent(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnDpiChangedAfterParent(EventArgs)\n  nameWithType: Control.OnDpiChangedAfterParent(EventArgs)\n  fullName: Control.OnDpiChangedAfterParent(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DpiChangedAfterParent\"></xref> event.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      protected virtual void OnDpiChangedAfterParent (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnDpiChangedAfterParent*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)\n  id: OnDpiChangedBeforeParent(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnDpiChangedBeforeParent(EventArgs)\n  nameWithType: Control.OnDpiChangedBeforeParent(EventArgs)\n  fullName: Control.OnDpiChangedBeforeParent(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DpiChangedBeforeParent\"></xref> event.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      protected virtual void OnDpiChangedBeforeParent (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnDpiChangedBeforeParent*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  id: OnDragDrop(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnDragDrop(DragEventArgs)\n  nameWithType: Control.OnDragDrop(DragEventArgs)\n  fullName: Control.OnDragDrop(DragEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DragDrop\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs drgevent);\n    parameters:\n    - id: drgevent\n      type: System.Windows.Forms.DragEventArgs\n      description: A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnDragDrop*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  id: OnDragEnter(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnDragEnter(DragEventArgs)\n  nameWithType: Control.OnDragEnter(DragEventArgs)\n  fullName: Control.OnDragEnter(DragEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DragEnter\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs drgevent);\n    parameters:\n    - id: drgevent\n      type: System.Windows.Forms.DragEventArgs\n      description: A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnDragEnter*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  id: OnDragLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnDragLeave(EventArgs)\n  nameWithType: Control.OnDragLeave(EventArgs)\n  fullName: Control.OnDragLeave(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DragLeave\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnDragLeave (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnDragLeave*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  id: OnDragOver(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnDragOver(DragEventArgs)\n  nameWithType: Control.OnDragOver(DragEventArgs)\n  fullName: Control.OnDragOver(DragEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DragOver\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs drgevent);\n    parameters:\n    - id: drgevent\n      type: System.Windows.Forms.DragEventArgs\n      description: A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnDragOver*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)\n  id: OnEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnEnabledChanged(EventArgs)\n  nameWithType: Control.OnEnabledChanged(EventArgs)\n  fullName: Control.OnEnabledChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnEnabledChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnEnabledChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  id: OnEnter(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnEnter(EventArgs)\n  nameWithType: Control.OnEnter(EventArgs)\n  fullName: Control.OnEnter(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Enter\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.  \\n  \\n [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]\\n [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]\\n [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnEnter (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnEnter*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnFontChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)\n  id: OnFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnFontChanged(EventArgs)\n  nameWithType: Control.OnFontChanged(EventArgs)\n  fullName: Control.OnFontChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnFontChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnFontChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  id: OnForeColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnForeColorChanged(EventArgs)\n  nameWithType: Control.OnForeColorChanged(EventArgs)\n  fullName: Control.OnForeColorChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ForeColorChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnForeColorChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnForeColorChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  id: OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: Control.OnGiveFeedback(GiveFeedbackEventArgs)\n  fullName: Control.OnGiveFeedback(GiveFeedbackEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.GiveFeedback\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);\n    parameters:\n    - id: gfbevent\n      type: System.Windows.Forms.GiveFeedbackEventArgs\n      description: A <xref href=\"System.Windows.Forms.GiveFeedbackEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnGiveFeedback*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  id: OnGotFocus(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnGotFocus(EventArgs)\n  nameWithType: Control.OnGotFocus(EventArgs)\n  fullName: Control.OnGotFocus(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.GotFocus\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnGotFocus (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnGotFocus*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)\n  id: OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnHandleCreated(EventArgs)\n  nameWithType: Control.OnHandleCreated(EventArgs)\n  fullName: Control.OnHandleCreated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnHandleCreated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnHandleCreated*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)\n  id: OnHandleDestroyed(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnHandleDestroyed(EventArgs)\n  nameWithType: Control.OnHandleDestroyed(EventArgs)\n  fullName: Control.OnHandleDestroyed(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnHandleDestroyed (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnHandleDestroyed*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  id: OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnHelpRequested(HelpEventArgs)\n  nameWithType: Control.OnHelpRequested(HelpEventArgs)\n  fullName: Control.OnHelpRequested(HelpEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HelpRequested\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnHelpRequested (System.Windows.Forms.HelpEventArgs hevent);\n    parameters:\n    - id: hevent\n      type: System.Windows.Forms.HelpEventArgs\n      description: A <xref href=\"System.Windows.Forms.HelpEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnHelpRequested*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  id: OnImeModeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnImeModeChanged(EventArgs)\n  nameWithType: Control.OnImeModeChanged(EventArgs)\n  fullName: Control.OnImeModeChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ImeModeChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnImeModeChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnImeModeChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  id: OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnInvalidated(InvalidateEventArgs)\n  nameWithType: Control.OnInvalidated(InvalidateEventArgs)\n  fullName: Control.OnInvalidated(InvalidateEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Invalidated\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.InvalidateEventArgs\n      description: An <xref href=\"System.Windows.Forms.InvalidateEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnInvalidated*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  id: OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: Control.OnKeyDown(KeyEventArgs)\n  fullName: Control.OnKeyDown(KeyEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.  \\n  \\n [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]\\n [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]\\n [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.KeyEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnKeyDown*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  id: OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnKeyPress(KeyPressEventArgs)\n  nameWithType: Control.OnKeyPress(KeyPressEventArgs)\n  fullName: Control.OnKeyPress(KeyPressEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.KeyPress\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.  \\n  \\n [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]\\n [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]\\n [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.KeyPressEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyPressEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnKeyPress*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  id: OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: Control.OnKeyUp(KeyEventArgs)\n  fullName: Control.OnKeyUp(KeyEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.  \\n  \\n [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]\\n [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]\\n [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.KeyEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnKeyUp*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  id: OnLayout(System.Windows.Forms.LayoutEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnLayout(LayoutEventArgs)\n  nameWithType: Control.OnLayout(LayoutEventArgs)\n  fullName: Control.OnLayout(LayoutEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Layout\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs levent);\n    parameters:\n    - id: levent\n      type: System.Windows.Forms.LayoutEventArgs\n      description: A <xref href=\"System.Windows.Forms.LayoutEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnLayout*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  id: OnLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnLeave(EventArgs)\n  nameWithType: Control.OnLeave(EventArgs)\n  fullName: Control.OnLeave(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Leave\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.  \\n  \\n [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]\\n [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]\\n [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnLeave (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnLeave*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  id: OnLocationChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnLocationChanged(EventArgs)\n  nameWithType: Control.OnLocationChanged(EventArgs)\n  fullName: Control.OnLocationChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.LocationChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName* `Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnLocationChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnLocationChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  id: OnLostFocus(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnLostFocus(EventArgs)\n  nameWithType: Control.OnLostFocus(EventArgs)\n  fullName: Control.OnLostFocus(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.LostFocus\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnLostFocus (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnLostFocus*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  id: OnMarginChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMarginChanged(EventArgs)\n  nameWithType: Control.OnMarginChanged(EventArgs)\n  fullName: Control.OnMarginChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MarginChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMarginChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: A <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMarginChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  id: OnMouseCaptureChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseCaptureChanged(EventArgs)\n  nameWithType: Control.OnMouseCaptureChanged(EventArgs)\n  fullName: Control.OnMouseCaptureChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseCaptureChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMouseCaptureChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseCaptureChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseClick(MouseEventArgs)\n  nameWithType: Control.OnMouseClick(MouseEventArgs)\n  fullName: Control.OnMouseClick(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseClick\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMouseClick (System.Windows.Forms.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.MouseEventArgs\n      description: An <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseClick*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseDoubleClick(MouseEventArgs)\n  nameWithType: Control.OnMouseDoubleClick(MouseEventArgs)\n  fullName: Control.OnMouseDoubleClick(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseDoubleClick\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.MouseEventArgs\n      description: An <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseDoubleClick*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseDown(MouseEventArgs)\n  nameWithType: Control.OnMouseDown(MouseEventArgs)\n  fullName: Control.OnMouseDown(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseDown\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseDown*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  id: OnMouseEnter(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseEnter(EventArgs)\n  nameWithType: Control.OnMouseEnter(EventArgs)\n  fullName: Control.OnMouseEnter(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseEnter\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMouseEnter (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseEnter*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  id: OnMouseHover(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseHover(EventArgs)\n  nameWithType: Control.OnMouseHover(EventArgs)\n  fullName: Control.OnMouseHover(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseHover\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class. To run the example, paste the following code in a new form and paste this class, forming the same file, after the form. Add a button of type `FunButton` to the form.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]\"\n  syntax:\n    content: protected virtual void OnMouseHover (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseHover*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  id: OnMouseLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseLeave(EventArgs)\n  nameWithType: Control.OnMouseLeave(EventArgs)\n  fullName: Control.OnMouseLeave(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseLeave\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMouseLeave (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseLeave*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: Control.OnMouseMove(MouseEventArgs)\n  fullName: Control.OnMouseMove(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseMove\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class. To run the example, paste the following code in a new form and paste this class, forming the same file, after the form. Add a button of type `FunButton` to the form.  \\n  \\n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]\"\n  syntax:\n    content: protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseMove*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: Control.OnMouseUp(MouseEventArgs)\n  fullName: Control.OnMouseUp(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseUp*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMouseWheel(MouseEventArgs)\n  nameWithType: Control.OnMouseWheel(MouseEventArgs)\n  fullName: Control.OnMouseWheel(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseWheel\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMouseWheel*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnMove(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnMove(System.EventArgs)\n  id: OnMove(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnMove(EventArgs)\n  nameWithType: Control.OnMove(EventArgs)\n  fullName: Control.OnMove(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Move\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.  \\n  \\n [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]\\n [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]\\n [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnMove (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnMove*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  commentId: M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  id: OnNotifyMessage(System.Windows.Forms.Message)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnNotifyMessage(Message)\n  nameWithType: Control.OnNotifyMessage(Message)\n  fullName: Control.OnNotifyMessage(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Notifies the control of Windows messages.\n  remarks: The <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> method is called if the control's `EnableNotifyMessage` style bit is set in <xref:System.Windows.Forms.ControlStyles>. The `EnableNotifyMessage` style in <xref:System.Windows.Forms.ControlStyles> enables the control to be notified when the <xref:System.Windows.Forms.Control.WndProc%2A> method receives a Windows message. With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.\n  syntax:\n    content: protected virtual void OnNotifyMessage (System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref> that represents the Windows message.\n  overload: System.Windows.Forms.Control.OnNotifyMessage*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)\n  id: OnPaddingChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnPaddingChanged(EventArgs)\n  nameWithType: Control.OnPaddingChanged(EventArgs)\n  fullName: Control.OnPaddingChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.PaddingChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnPaddingChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: A <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnPaddingChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\n  id: OnPaint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnPaint(PaintEventArgs)\n  nameWithType: Control.OnPaint(PaintEventArgs)\n  fullName: Control.OnPaint(PaintEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \\n  \\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]\\n [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]\\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  \\n  \\n [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]\\n [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]\\n [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.PaintEventArgs\n      description: A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnPaint*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  id: OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnPaintBackground(PaintEventArgs)\n  nameWithType: Control.OnPaintBackground(PaintEventArgs)\n  fullName: Control.OnPaintBackground(PaintEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Paints the background of the control.\n  remarks: The <xref:System.Windows.Forms.Control.OnPaintBackground%2A> method enables derived classes to handle Windows background erase requests.\n  syntax:\n    content: protected virtual void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);\n    parameters:\n    - id: pevent\n      type: System.Windows.Forms.PaintEventArgs\n      description: A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains information about the control to paint.\n  overload: System.Windows.Forms.Control.OnPaintBackground*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  id: OnParentBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentBackColorChanged(EventArgs)\n  nameWithType: Control.OnParentBackColorChanged(EventArgs)\n  fullName: Control.OnParentBackColorChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BackColorChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property value of the control's container changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentBackColorChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentBackColorChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  id: OnParentBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentBackgroundImageChanged(EventArgs)\n  nameWithType: Control.OnParentBackgroundImageChanged(EventArgs)\n  fullName: Control.OnParentBackgroundImageChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BackgroundImage\"></xref> property value of the control's container changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentBackgroundImageChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentBackgroundImageChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  id: OnParentBindingContextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentBindingContextChanged(EventArgs)\n  nameWithType: Control.OnParentBindingContextChanged(EventArgs)\n  fullName: Control.OnParentBindingContextChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BindingContextChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.BindingContext\"></xref> property value of the control's container changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentBindingContextChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentBindingContextChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnParentChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)\n  id: OnParentChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentChanged(EventArgs)\n  nameWithType: Control.OnParentChanged(EventArgs)\n  fullName: Control.OnParentChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ParentChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  id: OnParentCursorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentCursorChanged(EventArgs)\n  nameWithType: Control.OnParentCursorChanged(EventArgs)\n  fullName: Control.OnParentCursorChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.CursorChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnParentCursorChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentCursorChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  id: OnParentEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentEnabledChanged(EventArgs)\n  nameWithType: Control.OnParentEnabledChanged(EventArgs)\n  fullName: Control.OnParentEnabledChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Enabled\"></xref> property value of the control's container changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentEnabledChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentEnabledChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  id: OnParentFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentFontChanged(EventArgs)\n  nameWithType: Control.OnParentFontChanged(EventArgs)\n  fullName: Control.OnParentFontChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property value of the control's container changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentFontChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentFontChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  id: OnParentForeColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentForeColorChanged(EventArgs)\n  nameWithType: Control.OnParentForeColorChanged(EventArgs)\n  fullName: Control.OnParentForeColorChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.ForeColorChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property value of the control's container changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentForeColorChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentForeColorChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  id: OnParentRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentRightToLeftChanged(EventArgs)\n  nameWithType: Control.OnParentRightToLeftChanged(EventArgs)\n  fullName: Control.OnParentRightToLeftChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property value of the control's container changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentRightToLeftChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentRightToLeftChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  id: OnParentVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnParentVisibleChanged(EventArgs)\n  nameWithType: Control.OnParentVisibleChanged(EventArgs)\n  fullName: Control.OnParentVisibleChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event when the <xref href=\"System.Windows.Forms.Control.Visible\"></xref> property value of the control's container changes.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnParentVisibleChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnParentVisibleChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  id: OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  nameWithType: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  fullName: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.PreviewKeyDown\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnPreviewKeyDown (System.Windows.Forms.PreviewKeyDownEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.PreviewKeyDownEventArgs\n      description: A <xref href=\"System.Windows.Forms.PreviewKeyDownEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnPreviewKeyDown*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  id: OnPrint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnPrint(PaintEventArgs)\n  nameWithType: Control.OnPrint(PaintEventArgs)\n  fullName: Control.OnPrint(PaintEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event.\n  remarks: If the `UserPaint` bit of the <xref:System.Windows.Forms.ControlStyles> is set, you can override <xref:System.Windows.Forms.Control.OnPrint%2A> to do layered painting. See <xref:System.Windows.Forms.Control.SetStyle%2A> for more information.\n  syntax:\n    content: protected virtual void OnPrint (System.Windows.Forms.PaintEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.PaintEventArgs\n      description: A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnPrint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>e</code> parameter is `null`.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  id: OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.QueryContinueDrag\"></xref> event.\n  remarks: \"After dragging has begun, this method is called repeatedly by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] until the drag operation is either canceled or completed.  \\n  \\n> [!NOTE]\\n>  Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);\n    parameters:\n    - id: qcdevent\n      type: System.Windows.Forms.QueryContinueDragEventArgs\n      description: A <xref href=\"System.Windows.Forms.QueryContinueDragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnQueryContinueDrag*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  id: OnRegionChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnRegionChanged(EventArgs)\n  nameWithType: Control.OnRegionChanged(EventArgs)\n  fullName: Control.OnRegionChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.RegionChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnRegionChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnRegionChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnResize(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnResize(System.EventArgs)\n  id: OnResize(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnResize(EventArgs)\n  nameWithType: Control.OnResize(EventArgs)\n  fullName: Control.OnResize(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Resize\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnResize (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnResize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  id: OnRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnRightToLeftChanged(EventArgs)\n  nameWithType: Control.OnRightToLeftChanged(EventArgs)\n  fullName: Control.OnRightToLeftChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.RightToLeftChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnRightToLeftChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnRightToLeftChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  id: OnSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnSizeChanged(EventArgs)\n  nameWithType: Control.OnSizeChanged(EventArgs)\n  fullName: Control.OnSizeChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.SizeChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSizeChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnSizeChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  id: OnStyleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnStyleChanged(EventArgs)\n  nameWithType: Control.OnStyleChanged(EventArgs)\n  fullName: Control.OnStyleChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.StyleChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnStyleChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnStyleChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  id: OnSystemColorsChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnSystemColorsChanged(EventArgs)\n  nameWithType: Control.OnSystemColorsChanged(EventArgs)\n  fullName: Control.OnSystemColorsChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.SystemColorsChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSystemColorsChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnSystemColorsChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  id: OnTabIndexChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnTabIndexChanged(EventArgs)\n  nameWithType: Control.OnTabIndexChanged(EventArgs)\n  fullName: Control.OnTabIndexChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.TabIndexChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnTabIndexChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnTabIndexChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  id: OnTabStopChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnTabStopChanged(EventArgs)\n  nameWithType: Control.OnTabStopChanged(EventArgs)\n  fullName: Control.OnTabStopChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.TabStopChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnTabStopChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnTabStopChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnTextChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)\n  id: OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnTextChanged(EventArgs)\n  nameWithType: Control.OnTextChanged(EventArgs)\n  fullName: Control.OnTextChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnTextChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnTextChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  id: OnValidated(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnValidated(EventArgs)\n  nameWithType: Control.OnValidated(EventArgs)\n  fullName: Control.OnValidated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnValidated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnValidated*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  commentId: M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  id: OnValidating(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnValidating(CancelEventArgs)\n  nameWithType: Control.OnValidating(CancelEventArgs)\n  fullName: Control.OnValidating(CancelEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.CancelEventArgs\n      description: A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnValidating*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)\n  id: OnVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: OnVisibleChanged(EventArgs)\n  nameWithType: Control.OnVisibleChanged(EventArgs)\n  fullName: Control.OnVisibleChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  example:\n  - \"The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]\"\n  syntax:\n    content: protected virtual void OnVisibleChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.OnVisibleChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Padding\n  commentId: P:System.Windows.Forms.Control.Padding\n  id: Padding\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: Control.Padding\n  fullName: Control.Padding\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets padding within the control.\n  remarks: \"For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties. The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=fullName> property.  \\n  \\n Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines. Some adjustments might still be necessary for particular applications.  \\n  \\n All controls that implement <xref:System.Windows.Forms.Control.GetPreferredSize%2A> are enlarged by the amount in <xref:System.Windows.Forms.Control.Padding%2A> when <xref:System.Windows.Forms.Control.AutoSize%2A> is `true`.  \\n  \\n The following controls do not use <xref:System.Windows.Forms.Control.Padding%2A>:  \\n  \\n-   Controls that do not implement <xref:System.Windows.Forms.Control.AutoSize%2A> through <xref:System.Windows.Forms.Control.GetPreferredSize%2A>  \\n  \\n-   Custom controls that directly inherit from <xref:System.Windows.Forms.Control>  \\n  \\n-   <xref:System.Windows.Forms.AxHost>  \\n  \\n-   <xref:System.Windows.Forms.ComboBox>  \\n  \\n-   <xref:System.Windows.Forms.DataGridView>  \\n  \\n-   <xref:System.Windows.Forms.DateTimePicker>  \\n  \\n-   <xref:System.Windows.Forms.HScrollBar>  \\n  \\n-   <xref:System.Windows.Forms.ListView>  \\n  \\n-   <xref:System.Windows.Forms.MaskedTextBox>  \\n  \\n-   <xref:System.Windows.Forms.MonthCalendar>  \\n  \\n-   <xref:System.Windows.Forms.ProgressBar>  \\n  \\n-   <xref:System.Windows.Forms.PropertyGrid>  \\n  \\n-   <xref:System.Windows.Forms.RichTextBox>  \\n  \\n-   <xref:System.Windows.Forms.SplitContainer>  \\n  \\n-   <xref:System.Windows.Forms.TextBox>  \\n  \\n-   <xref:System.Windows.Forms.TextBoxBase>  \\n  \\n-   <xref:System.Windows.Forms.TreeView>  \\n  \\n-   <xref:System.Windows.Forms.VScrollBar>  \\n  \\n-   <xref:System.Windows.Forms.WebBrowser>\"\n  syntax:\n    content: public System.Windows.Forms.Padding Padding { get; set; }\n    return:\n      type: System.Windows.Forms.Padding\n      description: A <xref href=\"System.Windows.Forms.Padding\"></xref> representing the control's internal spacing characteristics.\n  overload: System.Windows.Forms.Control.Padding*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PaddingChanged\n  commentId: E:System.Windows.Forms.Control.PaddingChanged\n  id: PaddingChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PaddingChanged\n  nameWithType: Control.PaddingChanged\n  fullName: Control.PaddingChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control's padding changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.PaddingChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.PaddingChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#41)]\\n [!code-vb[System.Windows.Forms.EventExamples#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#41)]\"\n  syntax:\n    content: public event EventHandler PaddingChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Paint\n  commentId: E:System.Windows.Forms.Control.Paint\n  id: Paint\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Paint\n  nameWithType: Control.Paint\n  fullName: Control.Paint\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is redrawn.\n  remarks: \"The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn. It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event.  \\n  \\n When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <xref:System.Windows.Forms.Control.OnPaint%2A> method. For more information, see [Overriding the OnPaint Method](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) and [Custom Control Painting and Rendering](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md).  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example creates a <xref:System.Windows.Forms.PictureBox> control on the form and uses the <xref:System.Windows.Forms.Control.Paint> event to draw to it.  \\n  \\n [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]\\n [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]\\n [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.PaintEventHandler Paint;\n    return:\n      type: System.Windows.Forms.PaintEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Parent\n  commentId: P:System.Windows.Forms.Control.Parent\n  id: Parent\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: Control.Parent\n  fullName: Control.Parent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the parent container of the control.\n  remarks: Setting the <xref:System.Windows.Forms.Control.Parent%2A> property value to `null` removes the control from the <xref:System.Windows.Forms.Control.ControlCollection> of its current parent control.\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.Parent%2A> property and the <xref:System.Windows.Forms.Control.FindForm%2A> method to set properties on the parent control of a button and its form.  \\n  \\n [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]\\n [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]\\n [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Control Parent { get; set; }\n    return:\n      type: System.Windows.Forms.Control\n      description: A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the parent or container control of the control.\n  overload: System.Windows.Forms.Control.Parent*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ParentChanged\n  commentId: E:System.Windows.Forms.Control.ParentChanged\n  id: ParentChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ParentChanged\n  nameWithType: Control.ParentChanged\n  fullName: Control.ParentChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.Parent\"></xref> property value changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  syntax:\n    content: public event EventHandler ParentChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PerformLayout\n  commentId: M:System.Windows.Forms.Control.PerformLayout\n  id: PerformLayout\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PerformLayout()\n  nameWithType: Control.PerformLayout()\n  fullName: Control.PerformLayout()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Forces the control to apply layout logic to all its child controls.\n  remarks: \"If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.  \\n  \\n The <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created are set to `null` if no values were provided when the <xref:System.Windows.Forms.Control.PerformLayout%2A> method was called.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method. It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised. In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>. The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>. <xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded. `Button3` returns the control to the state it was in when loaded. In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.  \\n  \\n This is a complete example. To run the example, paste the following code in a blank form.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]\"\n  syntax:\n    content: public void PerformLayout ();\n    parameters: []\n  overload: System.Windows.Forms.Control.PerformLayout*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  commentId: M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  id: PerformLayout(System.Windows.Forms.Control,System.String)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PerformLayout(Control, String)\n  nameWithType: Control.PerformLayout(Control, String)\n  fullName: Control.PerformLayout(Control, String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Forces the control to apply layout logic to all its child controls.\n  remarks: \"If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.  \\n  \\n The `affectedControl` and `affectedProperty` parameters can both be set to `null`. Doing so causes the <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created to be set to `null`.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method. It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised. In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>. The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>. <xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded. `Button3` returns the control to the state it was in when loaded. In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.  \\n  \\n This is a complete example. To run the example, paste the following code in a blank form.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]\"\n  syntax:\n    content: public void PerformLayout (System.Windows.Forms.Control affectedControl, string affectedProperty);\n    parameters:\n    - id: affectedControl\n      type: System.Windows.Forms.Control\n      description: A <xref href=\"System.Windows.Forms.Control\"></xref> that represents the most recently changed control.\n    - id: affectedProperty\n      type: System.String\n      description: The name of the most recently changed property on the control.\n  overload: System.Windows.Forms.Control.PerformLayout*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  commentId: M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  id: PointToClient(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PointToClient(Point)\n  nameWithType: Control.PointToClient(Point)\n  fullName: Control.PointToClient(Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Computes the location of the specified screen point into client coordinates.\n  remarks: ''\n  example:\n  - \"The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \\n  \\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]\\n [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]\\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]\"\n  syntax:\n    content: public System.Drawing.Point PointToClient (System.Drawing.Point p);\n    parameters:\n    - id: p\n      type: System.Drawing.Point\n      description: The screen coordinate <xref href=\"System.Drawing.Point\"></xref> to convert.\n    return:\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that represents the converted <xref href=\"System.Drawing.Point\"></xref>, <code>p</code>, in client coordinates.\n  overload: System.Windows.Forms.Control.PointToClient*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  commentId: M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  id: PointToScreen(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PointToScreen(Point)\n  nameWithType: Control.PointToScreen(Point)\n  fullName: Control.PointToScreen(Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Computes the location of the specified client point into screen coordinates.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called Form1 containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \\n  \\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]\"\n  syntax:\n    content: public System.Drawing.Point PointToScreen (System.Drawing.Point p);\n    parameters:\n    - id: p\n      type: System.Drawing.Point\n      description: The client coordinate <xref href=\"System.Drawing.Point\"></xref> to convert.\n    return:\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that represents the converted <xref href=\"System.Drawing.Point\"></xref>, <code>p</code>, in screen coordinates.\n  overload: System.Windows.Forms.Control.PointToScreen*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PreferredSize\n  commentId: P:System.Windows.Forms.Control.PreferredSize\n  id: PreferredSize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PreferredSize\n  nameWithType: Control.PreferredSize\n  fullName: Control.PreferredSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the size of a rectangular area into which the control can fit.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Size PreferredSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> containing the height and width, in pixels.\n  overload: System.Windows.Forms.Control.PreferredSize*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  id: PreProcessControlMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PreProcessControlMessage(Message)\n  nameWithType: Control.PreProcessControlMessage(Message)\n  fullName: Control.PreProcessControlMessage(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Preprocesses keyboard or input messages within the message loop before they are dispatched.\n  syntax:\n    content: public System.Windows.Forms.PreProcessControlState PreProcessControlMessage (ref System.Windows.Forms.Message msg);\n    parameters:\n    - id: msg\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref> that represents the message to process.\n    return:\n      type: System.Windows.Forms.PreProcessControlState\n      description: One of the <xref href=\"System.Windows.Forms.PreProcessControlState\"></xref> values, depending on whether <xref href=\"System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\"></xref> is `true` or `false` and whether <xref href=\"System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\"></xref> or <xref href=\"System.Windows.Forms.Control.IsInputChar(System.Char)\"></xref> are `true` or `false`.\n  overload: System.Windows.Forms.Control.PreProcessControlMessage*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  id: PreProcessMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PreProcessMessage(Message)\n  nameWithType: Control.PreProcessMessage(Message)\n  fullName: Control.PreProcessMessage(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Preprocesses keyboard or input messages within the message loop before they are dispatched.\n  remarks: \"<xref:System.Windows.Forms.Control.PreProcessMessage%2A> is called by the application's message loop to preprocess input messages before they are dispatched. Possible values for the `msg` parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.  \\n  \\n When overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, a control should return `true` to indicate that it has processed the message. For messages that are not processed by the control, the result of `base.PreProcessMessage` should be returned. Controls will typically override one of the more specialized methods such as <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, or <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> instead of overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.\"\n  syntax:\n    content: public virtual bool PreProcessMessage (ref System.Windows.Forms.Message msg);\n    parameters:\n    - id: msg\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.PreProcessMessage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PreviewKeyDown\n  commentId: E:System.Windows.Forms.Control.PreviewKeyDown\n  id: PreviewKeyDown\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PreviewKeyDown\n  nameWithType: Control.PreviewKeyDown\n  fullName: Control.PreviewKeyDown\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs before the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> event when a key is pressed while focus is on this control.\n  remarks: \"Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses. For example, by default, a <xref:System.Windows.Controls.Button> control ignores the arrow keys. Pressing the arrow keys typically causes the focus to move to the previous or next control. The arrow keys are considered navigation keys and pressing these keys typically do not raise the <xref:System.Windows.Forms.Control.KeyDown> event for a<xref:System.Windows.Controls.Button>. However, pressing the arrow keys for a <xref:System.Windows.Controls.Button> does raise the <xref:System.Windows.Forms.Control.PreviewKeyDown> event. By handling the <xref:System.Windows.Forms.Control.PreviewKeyDown> event for a <xref:System.Windows.Controls.Button> and setting the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`, you can raise the <xref:System.Windows.Forms.Control.KeyDown> event when the arrow keys are pressed. However, if you handle the arrow keys, the focus will no longer move to the previous or next control.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates a <xref:System.Windows.Forms.Button> that includes a <xref:System.Windows.Forms.ContextMenuStrip>. When the <xref:System.Windows.Forms.Button> has the focus and you press the UP ARROW or DOWN ARROW keys, the <xref:System.Windows.Forms.ContextMenuStrip> appears. The <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`. This raises the <xref:System.Windows.Forms.Control.KeyDown> event so that you can display the <xref:System.Windows.Forms.ContextMenuStrip>. You should not put any logic in the <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler, other than to set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property. Instead, you should put your logic in the <xref:System.Windows.Forms.Control.KeyDown> event handler.  \\n  \\n [!code-csharp[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/cs/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/vb/form1.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown;\n    return:\n      type: System.Windows.Forms.PreviewKeyDownEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProcessCmdKey(Message, Keys)\n  nameWithType: Control.ProcessCmdKey(Message, Keys)\n  fullName: Control.ProcessCmdKey(Message, Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a command key.\n  remarks: \"This method is called during message preprocessing to handle command keys. Command keys are keys that always take precedence over regular input keys. Examples of command keys include accelerators and menu shortcuts. The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.  \\n  \\n The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key. If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method. The net effect is that command keys are \\\"bubbled\\\" up the control hierarchy. In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key. Modifier keys include the SHIFT, CTRL, and ALT keys.\"\n  syntax:\n    content: protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: msg\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ProcessCmdKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  commentId: M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  id: ProcessDialogChar(System.Char)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProcessDialogChar(Char)\n  nameWithType: Control.ProcessDialogChar(Char)\n  fullName: Control.ProcessDialogChar(Char)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a dialog character.\n  remarks: This method is called during message preprocessing to handle dialog characters, such as control mnemonics. This method is called only if the <xref:System.Windows.Forms.Control.IsInputChar%2A> method indicates that the control is not processing the character. The <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog characters. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.\n  syntax:\n    content: protected virtual bool ProcessDialogChar (char charCode);\n    parameters:\n    - id: charCode\n      type: System.Char\n      description: The character to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ProcessDialogChar*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)\n  id: ProcessDialogKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProcessDialogKey(Keys)\n  nameWithType: Control.ProcessDialogKey(Keys)\n  fullName: Control.ProcessDialogKey(Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a dialog key.\n  remarks: This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys. This method is called only if the <xref:System.Windows.Forms.Control.IsInputKey%2A> method indicates that the control is not processing the key. The <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.\n  syntax:\n    content: protected virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the key was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ProcessDialogKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  id: ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProcessKeyEventArgs(Message)\n  nameWithType: Control.ProcessKeyEventArgs(Message)\n  fullName: Control.ProcessKeyEventArgs(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a key message and generates the appropriate control events.\n  remarks: This method is called when a control receives a keyboard message. The method is responsible for generating the appropriate key events for the message by calling the <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, or <xref:System.Windows.Forms.Control.OnKeyUp%2A> methods. The `m` parameter contains the window message that must be processed. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.\n  syntax:\n    content: protected virtual bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ProcessKeyEventArgs*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  id: ProcessKeyMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProcessKeyMessage(Message)\n  nameWithType: Control.ProcessKeyMessage(Message)\n  fullName: Control.ProcessKeyMessage(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a keyboard message.\n  remarks: This method is called when a control receives a keyboard message. The method first determines whether the control has a parent; if so, it calls the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method. If the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method does not process the message then the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> method is called to generate the appropriate keyboard events. The `m` parameter contains the window message that must be processed. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.\n  syntax:\n    content: protected virtual bool ProcessKeyMessage (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ProcessKeyMessage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  id: ProcessKeyPreview(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProcessKeyPreview(Message)\n  nameWithType: Control.ProcessKeyPreview(Message)\n  fullName: Control.ProcessKeyPreview(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Previews a keyboard message.\n  remarks: This method is called by a child control when the child control receives a keyboard message. The child control calls this method before generating any keyboard events for the message. If this method returns `true`, the child control considers the message processed and does not generate any keyboard events. The `m` parameter contains the window message to preview. Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP. The <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method, or returns `false` if the control has no parent. The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.\n  syntax:\n    content: protected virtual bool ProcessKeyPreview (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ProcessKeyPreview*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  commentId: M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  id: ProcessMnemonic(System.Char)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProcessMnemonic(Char)\n  nameWithType: Control.ProcessMnemonic(Char)\n  fullName: Control.ProcessMnemonic(Char)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a mnemonic character.\n  remarks: \"This method is called to give a control the opportunity to process a mnemonic character. The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic. If so, the method should perform the action associated with the mnemonic and return `true`. If not, the method should return `false`. Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.  \\n  \\n For example:  \\n  \\n```csharp  \\nif (CanSelect && IsMnemonic(charCode, MyControl.Text) {  \\n      // Perform action associated with mnemonic.  \\n       }  \\n```  \\n  \\n This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.\"\n  example:\n  - \"The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior. The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties. To run this example paste the following code after a form class, in the same file. Add a button of type `MnemonicButton` to the form.  \\n  \\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual bool ProcessMnemonic (char charCode);\n    parameters:\n    - id: charCode\n      type: System.Char\n      description: The character to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was processed as a mnemonic by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ProcessMnemonic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ProductName\n  commentId: P:System.Windows.Forms.Control.ProductName\n  id: ProductName\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProductName\n  nameWithType: Control.ProductName\n  fullName: Control.ProductName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the product name of the assembly containing the control.\n  remarks: \"The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property.  \\n  \\n```  \\n[assembly: AssemblyProduct(\\\"MyApplication\\\")]  \\n```  \\n  \\n> [!NOTE]\\n>  It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \\\"Certified for Windows\\\" program. For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.\"\n  example:\n  - \"The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]\\n [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string ProductName { get; }\n    return:\n      type: System.String\n      description: The product name of the assembly containing the control.\n  overload: System.Windows.Forms.Control.ProductName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ProductVersion\n  commentId: P:System.Windows.Forms.Control.ProductVersion\n  id: ProductVersion\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ProductVersion\n  nameWithType: Control.ProductVersion\n  fullName: Control.ProductVersion\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the version of the assembly containing the control.\n  remarks: \"The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property. To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>. The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property.  \\n  \\n```  \\n[assembly: AssemblyVersion(\\\"1.0.1\\\")]  \\n```  \\n  \\n> [!NOTE]\\n>  It is strongly recommended that you provide the company name, product name, and product version. Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> that make it easier to write applications that comply with the \\\"Certified for Windows\\\" program. For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.\"\n  example:\n  - \"The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]\\n [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string ProductVersion { get; }\n    return:\n      type: System.String\n      description: The file version of the assembly containing the control.\n  overload: System.Windows.Forms.Control.ProductVersion*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.PropagatingImeMode\n  commentId: P:System.Windows.Forms.Control.PropagatingImeMode\n  id: PropagatingImeMode\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: PropagatingImeMode\n  nameWithType: Control.PropagatingImeMode\n  fullName: Control.PropagatingImeMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an object that represents a propagating IME mode.\n  syntax:\n    content: protected static System.Windows.Forms.ImeMode PropagatingImeMode { get; }\n    return:\n      type: System.Windows.Forms.ImeMode\n      description: An object that represents a propagating IME mode.\n  overload: System.Windows.Forms.Control.PropagatingImeMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.QueryAccessibilityHelp\n  commentId: E:System.Windows.Forms.Control.QueryAccessibilityHelp\n  id: QueryAccessibilityHelp\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: QueryAccessibilityHelp\n  nameWithType: Control.QueryAccessibilityHelp\n  fullName: Control.QueryAccessibilityHelp\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> is providing help to accessibility applications.\n  remarks: You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke help on your accessible object by pressing the F1 key. Using the <xref:System.Windows.Forms.HelpProvider> provides you with complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>. For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates handling the <xref:System.Windows.Forms.Control.QueryAccessibilityHelp> event. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#3)]\\n [!code-csharp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#3)]\\n [!code-vb[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#3)]\"\n  syntax:\n    content: public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;\n    return:\n      type: System.Windows.Forms.QueryAccessibilityHelpEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.QueryContinueDrag\n  commentId: E:System.Windows.Forms.Control.QueryContinueDrag\n  id: QueryContinueDrag\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: QueryContinueDrag\n  nameWithType: Control.QueryContinueDrag\n  fullName: Control.QueryContinueDrag\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.\n  remarks: \"The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation. The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.  \\n  \\n The following describes how and when events related to drag-and-drop operations are raised.  \\n  \\n The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location. It then checks to see if the control is a valid drop target.  \\n  \\n If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified. For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.  \\n  \\n-   If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n-   If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.  \\n  \\n-   If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.  \\n  \\n If there is a change in the keyboard or mouse button state, the<xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set. For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.  \\n  \\n-   If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.  \\n  \\n By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Cancel` in <xref:System.Windows.Forms.DragAction> if the ESC key was pressed and sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Drop` in <xref:System.Windows.Forms.DragAction> if the left, middle, or right mouse button is pressed.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \\n  \\n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files,`3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \\n  \\n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \\n  \\n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \\n  \\n This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]\\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]\\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]\"\n  syntax:\n    content: public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;\n    return:\n      type: System.Windows.Forms.QueryContinueDragEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  commentId: M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  id: RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RaiseDragEvent(Object, DragEventArgs)\n  nameWithType: Control.RaiseDragEvent(Object, DragEventArgs)\n  fullName: Control.RaiseDragEvent(Object, DragEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the appropriate drag event.\n  syntax:\n    content: protected void RaiseDragEvent (object key, System.Windows.Forms.DragEventArgs e);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The event to raise.\n    - id: e\n      type: System.Windows.Forms.DragEventArgs\n      description: A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.RaiseDragEvent*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  commentId: M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  id: RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RaiseKeyEvent(Object, KeyEventArgs)\n  nameWithType: Control.RaiseKeyEvent(Object, KeyEventArgs)\n  fullName: Control.RaiseKeyEvent(Object, KeyEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the appropriate key event.\n  syntax:\n    content: protected void RaiseKeyEvent (object key, System.Windows.Forms.KeyEventArgs e);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The event to raise.\n    - id: e\n      type: System.Windows.Forms.KeyEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.RaiseKeyEvent*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  commentId: M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  id: RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RaiseMouseEvent(Object, MouseEventArgs)\n  nameWithType: Control.RaiseMouseEvent(Object, MouseEventArgs)\n  fullName: Control.RaiseMouseEvent(Object, MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the appropriate mouse event.\n  syntax:\n    content: protected void RaiseMouseEvent (object key, System.Windows.Forms.MouseEventArgs e);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The event to raise.\n    - id: e\n      type: System.Windows.Forms.MouseEventArgs\n      description: A <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.RaiseMouseEvent*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  commentId: M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  id: RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RaisePaintEvent(Object, PaintEventArgs)\n  nameWithType: Control.RaisePaintEvent(Object, PaintEventArgs)\n  fullName: Control.RaisePaintEvent(Object, PaintEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the appropriate paint event.\n  syntax:\n    content: protected void RaisePaintEvent (object key, System.Windows.Forms.PaintEventArgs e);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The event to raise.\n    - id: e\n      type: System.Windows.Forms.PaintEventArgs\n      description: A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.RaisePaintEvent*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RecreateHandle\n  commentId: M:System.Windows.Forms.Control.RecreateHandle\n  id: RecreateHandle\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RecreateHandle()\n  nameWithType: Control.RecreateHandle()\n  fullName: Control.RecreateHandle()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Forces the re-creation of the handle for the control.\n  remarks: The <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is called whenever parameters are needed for a new control, but using a call from <xref:System.Windows.Forms.Control.UpdateStyles%2A> to <xref:System.Windows.Forms.Control.CreateParams%2A> is insufficient. This method also calls <xref:System.Windows.Forms.Control.DestroyHandle%2A> and<xref:System.Windows.Forms.Control.CreateHandle%2A> and sets <xref:System.Windows.Forms.Control.RecreatingHandle%2A> to `true`.\n  syntax:\n    content: protected void RecreateHandle ();\n    parameters: []\n  overload: System.Windows.Forms.Control.RecreateHandle*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RecreatingHandle\n  commentId: P:System.Windows.Forms.Control.RecreatingHandle\n  id: RecreatingHandle\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RecreatingHandle\n  nameWithType: Control.RecreatingHandle\n  fullName: Control.RecreatingHandle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control is currently re-creating its handle.\n  remarks: The <xref:System.Windows.Forms.Control.RecreatingHandle%2A> property returns `true` if the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is still running on the control.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool RecreatingHandle { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control is currently re-creating its handle; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.RecreatingHandle*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  commentId: M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  id: RectangleToClient(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RectangleToClient(Rectangle)\n  nameWithType: Control.RectangleToClient(Rectangle)\n  fullName: Control.RectangleToClient(Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Computes the size and location of the specified screen rectangle in client coordinates.\n  syntax:\n    content: public System.Drawing.Rectangle RectangleToClient (System.Drawing.Rectangle r);\n    parameters:\n    - id: r\n      type: System.Drawing.Rectangle\n      description: The screen coordinate <xref href=\"System.Drawing.Rectangle\"></xref> to convert.\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the converted <xref href=\"System.Drawing.Rectangle\"></xref>, <code>r</code>, in client coordinates.\n  overload: System.Windows.Forms.Control.RectangleToClient*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  commentId: M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  id: RectangleToScreen(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RectangleToScreen(Rectangle)\n  nameWithType: Control.RectangleToScreen(Rectangle)\n  fullName: Control.RectangleToScreen(Rectangle)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Computes the size and location of the specified client rectangle in screen coordinates.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called **Form1** containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \\n  \\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]\"\n  syntax:\n    content: public System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle r);\n    parameters:\n    - id: r\n      type: System.Drawing.Rectangle\n      description: The client coordinate <xref href=\"System.Drawing.Rectangle\"></xref> to convert.\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the converted <xref href=\"System.Drawing.Rectangle\"></xref>, <code>p</code>, in screen coordinates.\n  overload: System.Windows.Forms.Control.RectangleToScreen*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  id: ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ReflectMessage(IntPtr, Message)\n  nameWithType: Control.ReflectMessage(IntPtr, Message)\n  fullName: Control.ReflectMessage(IntPtr, Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Reflects the specified message to the control that is bound to the specified handle.\n  remarks: \"The <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is an infrastructure method and typically should not be called from your code.  \\n  \\n If the `hWnd` parameter does not represent a valid control, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method returns `false`.  \\n  \\n Because Windows messages are returned to the top-level window, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is used to propagate the return message to the control that sent the message.\"\n  syntax:\n    content: protected static bool ReflectMessage (IntPtr hWnd, ref System.Windows.Forms.Message m);\n    parameters:\n    - id: hWnd\n      type: System.IntPtr\n      description: An <xref href=\"System.IntPtr\"></xref> representing the handle of the control to reflect the message to.\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref> representing the Windows message to reflect.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was reflected; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ReflectMessage*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Refresh\n  commentId: M:System.Windows.Forms.Control.Refresh\n  id: Refresh\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Refresh()\n  nameWithType: Control.Refresh()\n  fullName: Control.Refresh()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Forces the control to invalidate its client area and immediately redraw itself and any child controls.\n  syntax:\n    content: public virtual void Refresh ();\n    parameters: []\n  overload: System.Windows.Forms.Control.Refresh*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Region\n  commentId: P:System.Windows.Forms.Control.Region\n  id: Region\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Region\n  nameWithType: Control.Region\n  fullName: Control.Region\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the window region associated with the control.\n  remarks: \"The window region is a collection of pixels within the window where the operating system permits drawing. The operating system does not display any portion of a window that lies outside of the window region. The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.  \\n  \\n> [!NOTE]\\n>  The collection of pixels contained with the region can be noncontiguous.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.Region%2A> property by creating a round button. To run the example, paste the following code in a form containing a button called `roundButton`. This example requires that the <xref:System.Windows.Forms.Control.Paint> event is connected to the event handler defined in the example.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.Region#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.Control.Region#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.Region#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Region Region { get; set; }\n    return:\n      type: System.Drawing.Region\n      description: The window <xref href=\"System.Drawing.Region\"></xref> associated with the control.\n  overload: System.Windows.Forms.Control.Region*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RegionChanged\n  commentId: E:System.Windows.Forms.Control.RegionChanged\n  id: RegionChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RegionChanged\n  nameWithType: Control.RegionChanged\n  fullName: Control.RegionChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Control.Region\"></xref> property changes.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.RegionChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.RegionChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#22)]\\n [!code-vb[System.Windows.Forms.EventExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#22)]\"\n  syntax:\n    content: public event EventHandler RegionChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RenderRightToLeft\n  commentId: P:System.Windows.Forms.Control.RenderRightToLeft\n  id: RenderRightToLeft\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RenderRightToLeft\n  nameWithType: Control.RenderRightToLeft\n  fullName: Control.RenderRightToLeft\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is now obsolete.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This property has been deprecated. Please use RightToLeft instead. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      protected bool RenderRightToLeft { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control is rendered from right to left; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.Control.RenderRightToLeft*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)\n  id: RescaleConstantsForDpi(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RescaleConstantsForDpi(Int32, Int32)\n  nameWithType: Control.RescaleConstantsForDpi(Int32, Int32)\n  fullName: Control.RescaleConstantsForDpi(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Provides constants for rescaling the control when a DPI change occurs.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      protected virtual void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);\n    parameters:\n    - id: deviceDpiOld\n      type: System.Int32\n      description: The DPI value prior to the change.\n    - id: deviceDpiNew\n      type: System.Int32\n      description: The DPI value after the change.\n  overload: System.Windows.Forms.Control.RescaleConstantsForDpi*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResetBackColor\n  commentId: M:System.Windows.Forms.Control.ResetBackColor\n  id: ResetBackColor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetBackColor()\n  nameWithType: Control.ResetBackColor()\n  fullName: Control.ResetBackColor()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> property to its default value.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: public virtual void ResetBackColor ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetBackColor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResetBindings\n  commentId: M:System.Windows.Forms.Control.ResetBindings\n  id: ResetBindings\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetBindings()\n  nameWithType: Control.ResetBindings()\n  fullName: Control.ResetBindings()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Causes a control bound to the <xref href=\"System.Windows.Forms.BindingSource\"></xref> to reread all the items in the list and refresh their displayed values.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: public void ResetBindings ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetBindings*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResetCursor\n  commentId: M:System.Windows.Forms.Control.ResetCursor\n  id: ResetCursor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetCursor()\n  nameWithType: Control.ResetCursor()\n  fullName: Control.ResetCursor()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the <xref href=\"System.Windows.Forms.Control.Cursor\"></xref> property to its default value.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: public virtual void ResetCursor ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetCursor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResetFont\n  commentId: M:System.Windows.Forms.Control.ResetFont\n  id: ResetFont\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetFont()\n  nameWithType: Control.ResetFont()\n  fullName: Control.ResetFont()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the <xref href=\"System.Windows.Forms.Control.Font\"></xref> property to its default value.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: public virtual void ResetFont ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetFont*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResetForeColor\n  commentId: M:System.Windows.Forms.Control.ResetForeColor\n  id: ResetForeColor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetForeColor()\n  nameWithType: Control.ResetForeColor()\n  fullName: Control.ResetForeColor()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the <xref href=\"System.Windows.Forms.Control.ForeColor\"></xref> property to its default value.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: public virtual void ResetForeColor ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetForeColor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResetImeMode\n  commentId: M:System.Windows.Forms.Control.ResetImeMode\n  id: ResetImeMode\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetImeMode()\n  nameWithType: Control.ResetImeMode()\n  fullName: Control.ResetImeMode()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property to its default value.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: public void ResetImeMode ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetImeMode*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResetMouseEventArgs\n  commentId: M:System.Windows.Forms.Control.ResetMouseEventArgs\n  id: ResetMouseEventArgs\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetMouseEventArgs()\n  nameWithType: Control.ResetMouseEventArgs()\n  fullName: Control.ResetMouseEventArgs()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the control to handle the <xref href=\"System.Windows.Forms.Control.MouseLeave\"></xref> event.\n  syntax:\n    content: protected void ResetMouseEventArgs ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetMouseEventArgs*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.ResetRightToLeft\n  commentId: M:System.Windows.Forms.Control.ResetRightToLeft\n  id: ResetRightToLeft\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetRightToLeft()\n  nameWithType: Control.ResetRightToLeft()\n  fullName: Control.ResetRightToLeft()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property to its default value.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: public virtual void ResetRightToLeft ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetRightToLeft*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResetText\n  commentId: M:System.Windows.Forms.Control.ResetText\n  id: ResetText\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResetText()\n  nameWithType: Control.ResetText()\n  fullName: Control.ResetText()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets the <xref href=\"System.Windows.Forms.Control.Text\"></xref> property to its default value.\n  remarks: You typically use this method if you are either creating a designer for the <xref:System.Windows.Forms.Control> or creating your own control incorporating the <xref:System.Windows.Forms.Control>.\n  syntax:\n    content: public virtual void ResetText ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResetText*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Resize\n  commentId: E:System.Windows.Forms.Control.Resize\n  id: Resize\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Resize\n  nameWithType: Control.Resize\n  fullName: Control.Resize\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is resized.\n  remarks: \"To determine the <xref:System.Windows.Forms.Control.Size%2A> of the resized control, you can cast the `sender` parameter of the registered <xref:System.Windows.Forms.ControlEventHandler> method  to a <xref:System.Windows.Forms.Control> and get its <xref:System.Windows.Forms.Control.Size%2A> property (or <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually).  \\n  \\n To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event. The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example handles the <xref:System.Windows.Forms.Control.Resize> event of a <xref:System.Windows.Forms.Form>. When the form is resized, the event handler ensures that the form stays square (its <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> remain equal). To run this example, make sure and associate this event-handling method with the form’s <xref:System.Windows.Forms.Control.Resize> event.  \\n  \\n [!code-cpp[WinForms.Control.Resize#1](~/samples/snippets/cpp/VS_Snippets_Winforms/WinForms.Control.Resize/CPP/form1.cpp#1)]\\n [!code-csharp[WinForms.Control.Resize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/WinForms.Control.Resize/CS/form1.cs#1)]\\n [!code-vb[WinForms.Control.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WinForms.Control.Resize/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler Resize;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResizeRedraw\n  commentId: P:System.Windows.Forms.Control.ResizeRedraw\n  id: ResizeRedraw\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResizeRedraw\n  nameWithType: Control.ResizeRedraw\n  fullName: Control.ResizeRedraw\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the control redraws itself when resized.\n  remarks: The <xref:System.Windows.Forms.Control.ResizeRedraw%2A> property value is equivalent to the return value of the <xref:System.Windows.Forms.Control.GetStyle%2A> method when passing in the <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> value as a parameter.\n  syntax:\n    content: protected bool ResizeRedraw { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control redraws itself when resized; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ResizeRedraw*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.ResumeLayout\n  commentId: M:System.Windows.Forms.Control.ResumeLayout\n  id: ResumeLayout\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResumeLayout()\n  nameWithType: Control.ResumeLayout()\n  fullName: Control.ResumeLayout()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resumes usual layout logic.\n  remarks: \"Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.  \\n  \\n The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.  \\n  \\n There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.\"\n  example:\n  - \"The following code example adds two buttons to a form. The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.  \\n  \\n [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]\\n [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]\"\n  syntax:\n    content: public void ResumeLayout ();\n    parameters: []\n  overload: System.Windows.Forms.Control.ResumeLayout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  commentId: M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  id: ResumeLayout(System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ResumeLayout(Boolean)\n  nameWithType: Control.ResumeLayout(Boolean)\n  fullName: Control.ResumeLayout(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.\n  remarks: \"Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests. When the `performLayout` parameter is set to `true`, an immediate layout occurs if there are any pending layout requests.  \\n  \\n The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.  \\n  \\n There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.  \\n  \\n> [!NOTE]\\n>  When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. This will increase the performance of applications with many controls.\"\n  syntax:\n    content: public void ResumeLayout (bool performLayout);\n    parameters:\n    - id: performLayout\n      type: System.Boolean\n      description: '`true` to execute pending layout requests; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ResumeLayout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Right\n  commentId: P:System.Windows.Forms.Control.Right\n  id: Right\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Right\n  nameWithType: Control.Right\n  fullName: Control.Right\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.\n  remarks: \"The value of the <xref:System.Windows.Forms.Control.Right%2A> property is equal to the sum of the <xref:System.Windows.Forms.Control.Left%2A> property value and the <xref:System.Windows.Forms.Control.Width%2A> property value.  \\n  \\n The <xref:System.Windows.Forms.Control.Right%2A> property is read-only. You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.\"\n  example:\n  - \"The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \\n  \\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]\\n [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]\\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  \\n  \\n [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]\\n [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]\\n [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Right { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.\n  overload: System.Windows.Forms.Control.Right*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.RightToLeft\n  commentId: P:System.Windows.Forms.Control.RightToLeft\n  id: RightToLeft\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RightToLeft\n  nameWithType: Control.RightToLeft\n  fullName: Control.RightToLeft\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.\n  remarks: \"The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.  \\n  \\n The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic. When this property is set to <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>, control elements that include text are displayed from right to left.  \\n  \\n> [!NOTE]\\n>  If the value of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed at run time, only raw text without formatting is preserved.  \\n  \\n The following are a few examples of how control elements are affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property value of <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName> :  \\n  \\n-   Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, multiline <xref:System.Windows.Forms.TextBox>, and <xref:System.Windows.Forms.RichTextBox>).  \\n  \\n-   Horizontal scroll bars start with the scroll box (thumb) right-aligned.  \\n  \\n-   The check box element alignment, controlled by the `CheckAlign` property, is reversed for <xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls.  \\n  \\n-   Items in list box, combo box, and up-down controls are right aligned.  \\n  \\n-   Up and down buttons are left-aligned on <xref:System.Windows.Forms.NumericUpDown> and <xref:System.Windows.Forms.DomainUpDown> controls.  \\n  \\n-   Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu>) are displayed right-aligned.  \\n  \\n-   The alignment of toolbar buttons on a <xref:System.Windows.Forms.ToolBar> control or the alignment of text on a <xref:System.Windows.Forms.ToolBarButton> is not affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.  \\n  \\n-   <xref:System.Windows.Forms.AxHost> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.\"\n  syntax:\n    content: public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }\n    return:\n      type: System.Windows.Forms.RightToLeft\n      description: One of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values. The default is <xref href=\"System.Windows.Forms.RightToLeft.Inherit\"></xref>.\n  overload: System.Windows.Forms.Control.RightToLeft*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The assigned value is not one of the <xref href=\"System.Windows.Forms.RightToLeft\"></xref> values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.RightToLeftChanged\n  commentId: E:System.Windows.Forms.Control.RightToLeftChanged\n  id: RightToLeftChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RightToLeftChanged\n  nameWithType: Control.RightToLeftChanged\n  fullName: Control.RightToLeftChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.RightToLeft\"></xref> property value changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \\n  \\n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \\n  \\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]\"\n  syntax:\n    content: public event EventHandler RightToLeftChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  commentId: M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  id: RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RtlTranslateAlignment(LeftRightAlignment)\n  nameWithType: Control.RtlTranslateAlignment(LeftRightAlignment)\n  fullName: Control.RtlTranslateAlignment(LeftRightAlignment)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the specified <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to support right-to-left text.\n  remarks: If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.\n  syntax:\n    content: protected System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment (System.Windows.Forms.LeftRightAlignment align);\n    parameters:\n    - id: align\n      type: System.Windows.Forms.LeftRightAlignment\n      description: One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values.\n    return:\n      type: System.Windows.Forms.LeftRightAlignment\n      description: One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values.\n  overload: System.Windows.Forms.Control.RtlTranslateAlignment*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  commentId: M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  id: RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RtlTranslateAlignment(HorizontalAlignment)\n  nameWithType: Control.RtlTranslateAlignment(HorizontalAlignment)\n  fullName: Control.RtlTranslateAlignment(HorizontalAlignment)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the specified <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to support right-to-left text.\n  remarks: If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.\n  syntax:\n    content: protected System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment (System.Windows.Forms.HorizontalAlignment align);\n    parameters:\n    - id: align\n      type: System.Windows.Forms.HorizontalAlignment\n      description: One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.\n    return:\n      type: System.Windows.Forms.HorizontalAlignment\n      description: One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.\n  overload: System.Windows.Forms.Control.RtlTranslateAlignment*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  commentId: M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  id: RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RtlTranslateAlignment(ContentAlignment)\n  nameWithType: Control.RtlTranslateAlignment(ContentAlignment)\n  fullName: Control.RtlTranslateAlignment(ContentAlignment)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the specified <xref href=\"System.Drawing.ContentAlignment\"></xref> to the appropriate <xref href=\"System.Drawing.ContentAlignment\"></xref> to support right-to-left text.\n  remarks: If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.\n  syntax:\n    content: protected System.Drawing.ContentAlignment RtlTranslateAlignment (System.Drawing.ContentAlignment align);\n    parameters:\n    - id: align\n      type: System.Drawing.ContentAlignment\n      description: One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.\n    return:\n      type: System.Drawing.ContentAlignment\n      description: One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.\n  overload: System.Windows.Forms.Control.RtlTranslateAlignment*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  commentId: M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  id: RtlTranslateContent(System.Drawing.ContentAlignment)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RtlTranslateContent(ContentAlignment)\n  nameWithType: Control.RtlTranslateContent(ContentAlignment)\n  fullName: Control.RtlTranslateContent(ContentAlignment)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the specified <xref href=\"System.Drawing.ContentAlignment\"></xref> to the appropriate <xref href=\"System.Drawing.ContentAlignment\"></xref> to support right-to-left text.\n  remarks: If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.\n  syntax:\n    content: protected System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);\n    parameters:\n    - id: align\n      type: System.Drawing.ContentAlignment\n      description: One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.\n    return:\n      type: System.Drawing.ContentAlignment\n      description: One of the <xref href=\"System.Drawing.ContentAlignment\"></xref> values.\n  overload: System.Windows.Forms.Control.RtlTranslateContent*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  commentId: M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  id: RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RtlTranslateHorizontal(HorizontalAlignment)\n  nameWithType: Control.RtlTranslateHorizontal(HorizontalAlignment)\n  fullName: Control.RtlTranslateHorizontal(HorizontalAlignment)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the specified <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> to support right-to-left text.\n  remarks: If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.\n  syntax:\n    content: protected System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal (System.Windows.Forms.HorizontalAlignment align);\n    parameters:\n    - id: align\n      type: System.Windows.Forms.HorizontalAlignment\n      description: One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.\n    return:\n      type: System.Windows.Forms.HorizontalAlignment\n      description: One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> values.\n  overload: System.Windows.Forms.Control.RtlTranslateHorizontal*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  commentId: M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  id: RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: RtlTranslateLeftRight(LeftRightAlignment)\n  nameWithType: Control.RtlTranslateLeftRight(LeftRightAlignment)\n  fullName: Control.RtlTranslateLeftRight(LeftRightAlignment)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the specified <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to the appropriate <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> to support right-to-left text.\n  remarks: If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.\n  syntax:\n    content: protected System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight (System.Windows.Forms.LeftRightAlignment align);\n    parameters:\n    - id: align\n      type: System.Windows.Forms.LeftRightAlignment\n      description: One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values.\n    return:\n      type: System.Windows.Forms.LeftRightAlignment\n      description: One of the <xref href=\"System.Windows.Forms.LeftRightAlignment\"></xref> values.\n  overload: System.Windows.Forms.Control.RtlTranslateLeftRight*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  commentId: M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  id: Scale(System.Drawing.SizeF)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Scale(SizeF)\n  nameWithType: Control.Scale(SizeF)\n  fullName: Control.Scale(SizeF)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scales the control and all child controls by the specified scaling factor.\n  remarks: The <xref:System.Windows.Forms.Control.Scale%2A> method scales the control by the specified scaling `factor`. It also recursively scales all child controls if the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`. Internally, this method calls <xref:System.Windows.Forms.Control.ScaleControl%2A> to scale each control.\n  syntax:\n    content: public void Scale (System.Drawing.SizeF factor);\n    parameters:\n    - id: factor\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.SizeF\"></xref> containing the horizontal and vertical scaling factors.\n  overload: System.Windows.Forms.Control.Scale*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Scale(System.Single)\n  commentId: M:System.Windows.Forms.Control.Scale(System.Single)\n  id: Scale(System.Single)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Scale(Single)\n  nameWithType: Control.Scale(Single)\n  fullName: Control.Scale(Single)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scales the control and any child controls.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public void Scale (float ratio);\n    parameters:\n    - id: ratio\n      type: System.Single\n      description: The ratio to use for scaling.\n  overload: System.Windows.Forms.Control.Scale*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  commentId: M:System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  id: Scale(System.Single,System.Single)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Scale(Single, Single)\n  nameWithType: Control.Scale(Single, Single)\n  fullName: Control.Scale(Single, Single)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scales the entire control and any child controls.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public void Scale (float dx, float dy);\n    parameters:\n    - id: dx\n      type: System.Single\n      description: The horizontal scaling factor.\n    - id: dy\n      type: System.Single\n      description: The vertical scaling factor.\n  overload: System.Windows.Forms.Control.Scale*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  commentId: M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  id: ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ScaleBitmapLogicalToDevice(Bitmap)\n  nameWithType: Control.ScaleBitmapLogicalToDevice(Bitmap)\n  fullName: Control.ScaleBitmapLogicalToDevice(Bitmap)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.\n  syntax:\n    content: public void ScaleBitmapLogicalToDevice (ref System.Drawing.Bitmap logicalBitmap);\n    parameters:\n    - id: logicalBitmap\n      type: System.Drawing.Bitmap\n      description: The bitmap to scale.\n  overload: System.Windows.Forms.Control.ScaleBitmapLogicalToDevice*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ScaleChildren\n  commentId: P:System.Windows.Forms.Control.ScaleChildren\n  id: ScaleChildren\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ScaleChildren\n  nameWithType: Control.ScaleChildren\n  fullName: Control.ScaleChildren\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value that determines the scaling of child controls.\n  remarks: \"If the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`, then the <xref:System.Windows.Forms.Control.Scale%2A> method will recursively call the <xref:System.Windows.Forms.Control.ScaleControl%2A> method of each of its child controls.  \\n  \\n The default implementation of <xref:System.Windows.Forms.Control.ScaleChildren%2A> always returns `true`. Derived classes can override <xref:System.Windows.Forms.Control.ScaleChildren%2A> to return `false` to indicate that scaling should not be performed on their children.\"\n  syntax:\n    content: protected virtual bool ScaleChildren { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if child controls will be scaled when the <xref href=\"System.Windows.Forms.Control.Scale(System.Single)\"></xref> method on this control is called; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Control.ScaleChildren*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  commentId: M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ScaleControl(SizeF, BoundsSpecified)\n  nameWithType: Control.ScaleControl(SizeF, BoundsSpecified)\n  fullName: Control.ScaleControl(SizeF, BoundsSpecified)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scales a control's location, size, padding and margin.\n  remarks: If the control is top level, this will not scale the control's location. This does not scale children or the size of automatically sized controls. You can omit scaling in any direction by changing the value of the `specified` parameter.\n  example:\n  - \"<xref:System.Windows.Forms.BoundsSpecified>  \\n  \\n <xref:System.Windows.Forms.Control.Scale%2A>  \\n  \\n <xref:System.Windows.Forms.Control.GetScaledBounds%2A>  \\n  \\n <xref:System.Windows.Forms.Control.SetBoundsCore%2A>\"\n  syntax:\n    content: protected virtual void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);\n    parameters:\n    - id: factor\n      type: System.Drawing.SizeF\n      description: The factor by which the height and width of the control will be scaled.\n    - id: specified\n      type: System.Windows.Forms.BoundsSpecified\n      description: A <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> value that specifies the bounds of the control to use when defining its size and position.\n  overload: System.Windows.Forms.Control.ScaleControl*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  commentId: M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  id: ScaleCore(System.Single,System.Single)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ScaleCore(Single, Single)\n  nameWithType: Control.ScaleCore(Single, Single)\n  fullName: Control.ScaleCore(Single, Single)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This method is not relevant for this class.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: protected virtual void ScaleCore (float dx, float dy);\n    parameters:\n    - id: dx\n      type: System.Single\n      description: The horizontal scaling factor.\n    - id: dy\n      type: System.Single\n      description: The vertical scaling factor.\n  overload: System.Windows.Forms.Control.ScaleCore*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  commentId: M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  id: Select(System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Select(Boolean, Boolean)\n  nameWithType: Control.Select(Boolean, Boolean)\n  fullName: Control.Select(Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Activates a child control. Optionally specifies the direction in the tab order to select the control from.\n  remarks: \"The `directed` and `forward` parameters are used by container-style controls. When the `directed` parameter is set to `true`, the `forward` parameter is evaluated to determine which control to select. When `forward` is set to `true`, the next control in the tab order is selected; when `false`, the previous control in the tab order is selected.  \\n  \\n The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.  \\n  \\n The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  \\n  \\n-   <xref:System.Windows.Forms.Label>  \\n  \\n-   <xref:System.Windows.Forms.Panel>  \\n  \\n-   <xref:System.Windows.Forms.GroupBox>  \\n  \\n-   <xref:System.Windows.Forms.PictureBox>  \\n  \\n-   <xref:System.Windows.Forms.ProgressBar>  \\n  \\n-   <xref:System.Windows.Forms.Splitter>  \\n  \\n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)\"\n  syntax:\n    content: protected virtual void Select (bool directed, bool forward);\n    parameters:\n    - id: directed\n      type: System.Boolean\n      description: '`true` to specify the direction of the control to select; otherwise, `false`.'\n    - id: forward\n      type: System.Boolean\n      description: '`true` to move forward in the tab order; `false` to move backward in the tab order.'\n  overload: System.Windows.Forms.Control.Select*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Select\n  commentId: M:System.Windows.Forms.Control.Select\n  id: Select\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Select()\n  nameWithType: Control.Select()\n  fullName: Control.Select()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Activates the control.\n  remarks: \"The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.  \\n  \\n The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  \\n  \\n-   <xref:System.Windows.Forms.Label>  \\n  \\n-   <xref:System.Windows.Forms.Panel>  \\n  \\n-   <xref:System.Windows.Forms.GroupBox>  \\n  \\n-   <xref:System.Windows.Forms.PictureBox>  \\n  \\n-   <xref:System.Windows.Forms.ProgressBar>  \\n  \\n-   <xref:System.Windows.Forms.Splitter>  \\n  \\n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)\"\n  example:\n  - \"The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.  \\n  \\n [!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]\\n [!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]\\n [!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]\"\n  syntax:\n    content: public void Select ();\n    parameters: []\n  overload: System.Windows.Forms.Control.Select*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  commentId: M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  id: SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  nameWithType: Control.SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  fullName: Control.SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Activates the next control.\n  remarks: \"The <xref:System.Windows.Forms.Control.SelectNextControl%2A> method activates the next control in the tab order if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.  \\n  \\n The Windows Forms controls in the following list are not selectable. Controls derived from controls in the list will also not be selectable.  \\n  \\n-   <xref:System.Windows.Forms.Label>  \\n  \\n-   <xref:System.Windows.Forms.Panel>  \\n  \\n-   <xref:System.Windows.Forms.GroupBox>  \\n  \\n-   <xref:System.Windows.Forms.PictureBox>  \\n  \\n-   <xref:System.Windows.Forms.ProgressBar>  \\n  \\n-   <xref:System.Windows.Forms.Splitter>  \\n  \\n-   <xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)  \\n  \\n When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n6.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.\"\n  example:\n  - \"The following code exampleshows the<xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has some controls. Each time that you click the form, the next control is activated. The <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property gets the currently active control in the container control.  \\n  \\n [!code-csharp[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#1)]  \\n  \\n The following code example shows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has a <xref:System.Windows.Forms.Button> and some other controls. When you click the <xref:System.Windows.Forms.Button>, the next control after the <xref:System.Windows.Forms.Button> is activated. Notice that you have to get the parent of the <xref:System.Windows.Forms.Button> control. Since <xref:System.Windows.Forms.Button> is not a container, calling <xref:System.Windows.Forms.Control.SelectNextControl%2A> directly on the <xref:System.Windows.Forms.Button> would not change the activation.  \\n  \\n [!code-csharp[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#2)]\"\n  syntax:\n    content: public bool SelectNextControl (System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);\n    parameters:\n    - id: ctl\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> at which to start the search.\n    - id: forward\n      type: System.Boolean\n      description: '`true` to move forward in the tab order; `false` to move backward in the tab order.'\n    - id: tabStopOnly\n      type: System.Boolean\n      description: '`true` to ignore the controls with the <xref href=\"System.Windows.Forms.Control.TabStop\"></xref> property set to `false`; otherwise, `false`.'\n    - id: nested\n      type: System.Boolean\n      description: '`true` to include nested (children of child controls) child controls; otherwise, `false`.'\n    - id: wrap\n      type: System.Boolean\n      description: '`true` to continue searching from the first control in the tab order after the last control has been reached; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if a control was activated; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.SelectNextControl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SendToBack\n  commentId: M:System.Windows.Forms.Control.SendToBack\n  id: SendToBack\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SendToBack()\n  nameWithType: Control.SendToBack()\n  fullName: Control.SendToBack()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sends the control to the back of the z-order.\n  remarks: The control is moved to the back of the z-order. If the control is a child of another control, the child control is moved to the back of the z-order. If the control is a top-level control, this method will not work correctly unless the control is active. A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control. An active control is a visible control that has input focus. To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control.\n  syntax:\n    content: public void SendToBack ();\n    parameters: []\n  overload: System.Windows.Forms.Control.SendToBack*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  commentId: M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  id: SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SetAutoSizeMode(AutoSizeMode)\n  nameWithType: Control.SetAutoSizeMode(AutoSizeMode)\n  fullName: Control.SetAutoSizeMode(AutoSizeMode)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets a value indicating how a control will behave when its <xref href=\"System.Windows.Forms.Control.AutoSize\"></xref> property is enabled.\n  syntax:\n    content: protected void SetAutoSizeMode (System.Windows.Forms.AutoSizeMode mode);\n    parameters:\n    - id: mode\n      type: System.Windows.Forms.AutoSizeMode\n      description: One of the <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> values.\n  overload: System.Windows.Forms.Control.SetAutoSizeMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SetBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Control.SetBounds(Int32, Int32, Int32, Int32)\n  fullName: Control.SetBounds(Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the bounds of the control to the specified location and size.\n  syntax:\n    content: public void SetBounds (int x, int y, int width, int height);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.\n    - id: y\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.\n    - id: width\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.\n    - id: height\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control.\n  overload: System.Windows.Forms.Control.SetBounds*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  commentId: M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  id: SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the specified bounds of the control to the specified location and size.\n  remarks: ''\n  example:\n  - \"The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event. This will keep the form centered as the user resizes it. This example requires that you have created a <xref:System.Windows.Forms.Form> control.  \\n  \\n [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]\\n [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]\\n [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]\"\n  syntax:\n    content: public void SetBounds (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.\n    - id: y\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.\n    - id: width\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.\n    - id: height\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control.\n    - id: specified\n      type: System.Windows.Forms.BoundsSpecified\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values. For any parameter not specified, the current value will be used.\n  overload: System.Windows.Forms.Control.SetBounds*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  commentId: M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Performs the work of setting the specified bounds of this control.\n  remarks: \"Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values. For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.  \\n  \\n The `boundsSpecified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application. For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `boundsSpecified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>. However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `boundsSpecified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.  \\n  \\n> [!NOTE]\\n>  On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.\"\n  example:\n  - \"The following code example overrides the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that the control remains a fixed size. This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_Methods#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_Methods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#1)]\\n [!code-vb[Windows.Forms.Control_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#1)]\"\n  syntax:\n    content: protected virtual void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.\n    - id: y\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.\n    - id: width\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.\n    - id: height\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control.\n    - id: specified\n      type: System.Windows.Forms.BoundsSpecified\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values.\n  overload: System.Windows.Forms.Control.SetBoundsCore*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  id: SetClientSizeCore(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SetClientSizeCore(Int32, Int32)\n  nameWithType: Control.SetClientSizeCore(Int32, Int32)\n  fullName: Control.SetClientSizeCore(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the size of the client area of the control.\n  remarks: \"The client area starts at the (0, 0) location and extends to the (`x`, `y`) location.  \\n  \\n Typically, you should not set the <xref:System.Windows.Forms.Control.ClientSize%2A> of the control.\"\n  example:\n  - \"The following code example overrides the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that the control remains square. This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.  \\n  \\n [!code-cpp[Windows.Forms.Control_Methods#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#2)]\\n [!code-csharp[Windows.Forms.Control_Methods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#2)]\\n [!code-vb[Windows.Forms.Control_Methods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#2)]\"\n  syntax:\n    content: protected virtual void SetClientSizeCore (int x, int y);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The client area width, in pixels.\n    - id: y\n      type: System.Int32\n      description: The client area height, in pixels.\n  overload: System.Windows.Forms.Control.SetClientSizeCore*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  commentId: M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  id: SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SetStyle(ControlStyles, Boolean)\n  nameWithType: Control.SetStyle(ControlStyles, Boolean)\n  fullName: Control.SetStyle(ControlStyles, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets a specified <xref href=\"System.Windows.Forms.ControlStyles\"></xref> flag to either `true` or `false`.\n  remarks: \"Control style bit flags are used to categorize supported behavior. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to. To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.  \\n  \\n> [!CAUTION]\\n>  Setting the control style bits can substantially change the behavior of the control. Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method.\"\n  example:\n  - \"The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.  \\n  \\n [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]\\n [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]\\n [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]\"\n  syntax:\n    content: protected void SetStyle (System.Windows.Forms.ControlStyles flag, bool value);\n    parameters:\n    - id: flag\n      type: System.Windows.Forms.ControlStyles\n      description: The <xref href=\"System.Windows.Forms.ControlStyles\"></xref> bit to set.\n    - id: value\n      type: System.Boolean\n      description: '`true` to apply the specified style to the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.SetStyle*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  commentId: M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  id: SetTopLevel(System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SetTopLevel(Boolean)\n  nameWithType: Control.SetTopLevel(Boolean)\n  fullName: Control.SetTopLevel(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the control as the top-level control.\n  remarks: If you call the <xref:System.Windows.Forms.Control.SetTopLevel%2A> method of a <xref:System.Windows.Forms.Form> and pass in a value of `false`, the form will not be visible until you call <xref:System.Windows.Forms.Control.SetTopLevel%2A>again, passing in a value of `true`.\n  syntax:\n    content: protected void SetTopLevel (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: '`true` to set the control as the top-level control; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.SetTopLevel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>value</code> parameter is set to `true` and the control is an ActiveX control.\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The <xref href=\"System.Windows.Forms.Control.GetTopLevel\"></xref> return value is not equal to the <code>value</code> parameter and the <xref href=\"System.Windows.Forms.Control.Parent\"></xref> property is not `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  commentId: M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  id: SetVisibleCore(System.Boolean)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SetVisibleCore(Boolean)\n  nameWithType: Control.SetVisibleCore(Boolean)\n  fullName: Control.SetVisibleCore(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the control to the specified visible state.\n  remarks: You would typically override this method to change the visibility behavior of the control.\n  syntax:\n    content: protected virtual void SetVisibleCore (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: '`true` to make the control visible; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.SetVisibleCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Show\n  commentId: M:System.Windows.Forms.Control.Show\n  id: Show\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Show()\n  nameWithType: Control.Show()\n  fullName: Control.Show()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Displays the control to the user.\n  remarks: Showing the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`. After the <xref:System.Windows.Forms.Control.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.\n  example:\n  - \"The following code example displays an about dialog box and temporarily draws a blue square on its surface. This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `AboutDialog`.  \\n  \\n [!code-cpp[Windows.Forms.Control Members2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#1)]\\n [!code-csharp[Windows.Forms.Control Members2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#1)]\\n [!code-vb[Windows.Forms.Control Members2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#1)]\"\n  syntax:\n    content: public void Show ();\n    parameters: []\n  overload: System.Windows.Forms.Control.Show*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ShowFocusCues\n  commentId: P:System.Windows.Forms.Control.ShowFocusCues\n  id: ShowFocusCues\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ShowFocusCues\n  nameWithType: Control.ShowFocusCues\n  fullName: Control.ShowFocusCues\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the control should display focus rectangles.\n  remarks: For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)topics.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      protected virtual bool ShowFocusCues { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control should display focus rectangles; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ShowFocusCues*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.ShowKeyboardCues\n  commentId: P:System.Windows.Forms.Control.ShowKeyboardCues\n  id: ShowKeyboardCues\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: ShowKeyboardCues\n  nameWithType: Control.ShowKeyboardCues\n  fullName: Control.ShowKeyboardCues\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.\n  remarks: \"In controls created in the Windows Forms designer, keyboard accelerators are visible by default.  \\n  \\n For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\\\(v=vs.85\\\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\\\(v=vs.85\\\\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\\\(v=vs.85\\\\).aspx)topics.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      protected virtual bool ShowKeyboardCues { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the keyboard accelerators are visible; otherwise, `false`.'\n  overload: System.Windows.Forms.Control.ShowKeyboardCues*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Site\n  commentId: P:System.Windows.Forms.Control.Site\n  id: Site\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Site\n  nameWithType: Control.Site\n  fullName: Control.Site\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the site of the control.\n  syntax:\n    content: public override System.ComponentModel.ISite Site { get; set; }\n    return:\n      type: System.ComponentModel.ISite\n      description: The <xref href=\"System.ComponentModel.ISite\"></xref> associated with the <xref href=\"System.Windows.Forms.Control\"></xref>, if any.\n  overload: System.Windows.Forms.Control.Site*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Size\n  commentId: P:System.Windows.Forms.Control.Size\n  id: Size\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Size\n  nameWithType: Control.Size\n  fullName: Control.Size\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the height and width of the control.\n  remarks: \"Because the <xref:System.Drawing.Size> class is a value type (`Structure` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], `struct` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)]), it is returned by value, meaning accessing the property returns a copy of the size of the control. So, adjusting the <xref:System.Drawing.Size.Width%2A> or <xref:System.Drawing.Size.Height%2A> properties of the <xref:System.Drawing.Size> returned from this property will not affect the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control. To adjust the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control, you must set the control's <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> property, or set the <xref:System.Windows.Forms.Control.Size%2A> property with a new <xref:System.Drawing.Size>.  \\n  \\n> [!NOTE]\\n>  To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor. The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.  \\n  \\n> [!NOTE]\\n>  On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.\"\n  example:\n  - \"The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the<xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]\\n [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]\\n [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]\"\n  syntax:\n    content: public System.Drawing.Size Size { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> that represents the height and width of the control in pixels.\n  overload: System.Windows.Forms.Control.Size*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.SizeChanged\n  commentId: E:System.Windows.Forms.Control.SizeChanged\n  id: SizeChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SizeChanged\n  nameWithType: Control.SizeChanged\n  fullName: Control.SizeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.Size\"></xref> property value changes.\n  remarks: \"It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts. The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied.  \\n  \\n This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the <xref:System.Windows.Forms.Control.SizeChanged> event. An instance of a <xref:System.Windows.Forms.Button> control has been provided that can be scaled both horizontally and vertically. A <xref:System.Windows.Forms.NumericUpDown> instance provides the horizontal and vertical scale value. The <xref:System.Windows.Forms.Button> instance named **OK** is used to set the scale values for the <xref:System.Windows.Forms.Button> control instance. Whenever the size of the control changes, the event handler associated with the <xref:System.Windows.Forms.Control.SizeChanged> event of the control is called. This event handler displays a message box indicating that the size of the control has changed.  \\n  \\n [!code-cpp[Control_Scale1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Scale1/CPP/control_scale1.cpp#2)]\\n [!code-csharp[Control_Scale1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Scale1/CS/control_scale1.cs#2)]\\n [!code-vb[Control_Scale1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Scale1/VB/control_scale1.vb#2)]\"\n  syntax:\n    content: public event EventHandler SizeChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  commentId: M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  id: SizeFromClientSize(System.Drawing.Size)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SizeFromClientSize(Size)\n  nameWithType: Control.SizeFromClientSize(Size)\n  fullName: Control.SizeFromClientSize(Size)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines the size of the entire control from the height and width of its client area.\n  syntax:\n    content: protected virtual System.Drawing.Size SizeFromClientSize (System.Drawing.Size clientSize);\n    parameters:\n    - id: clientSize\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> value representing the height and width of the control's client area.\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> value representing the height and width of the entire control.\n  overload: System.Windows.Forms.Control.SizeFromClientSize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.StyleChanged\n  commentId: E:System.Windows.Forms.Control.StyleChanged\n  id: StyleChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: StyleChanged\n  nameWithType: Control.StyleChanged\n  fullName: Control.StyleChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control style changes.\n  remarks: \"The <xref:System.Windows.Forms.Control.StyleChanged> event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed.  \\n  \\n This event is raised if the control style is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.StyleChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.StyleChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#68](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#68)]\\n [!code-vb[System.Windows.Forms.EventExamples#68](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#68)]\"\n  syntax:\n    content: public event EventHandler StyleChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SuspendLayout\n  commentId: M:System.Windows.Forms.Control.SuspendLayout\n  id: SuspendLayout\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SuspendLayout()\n  nameWithType: Control.SuspendLayout()\n  fullName: Control.SuspendLayout()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Temporarily suspends the layout logic for the control.\n  remarks: \"The layout logic of the control is suspended until the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method is called.  \\n  \\n The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control. For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.  \\n  \\n There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.  \\n  \\n> [!NOTE]\\n>  When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added. After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method. This will increase the performance of applications with many controls.\"\n  example:\n  - \"The following code example adds two buttons to a form. The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.  \\n  \\n [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]\\n [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]\"\n  syntax:\n    content: public void SuspendLayout ();\n    parameters: []\n  overload: System.Windows.Forms.Control.SuspendLayout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.SystemColorsChanged\n  commentId: E:System.Windows.Forms.Control.SystemColorsChanged\n  id: SystemColorsChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: SystemColorsChanged\n  nameWithType: Control.SystemColorsChanged\n  fullName: Control.SystemColorsChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the system colors change.\n  remarks: \"This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.SystemColorsChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#69](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#69)]\\n [!code-vb[System.Windows.Forms.EventExamples#69](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#69)]\"\n  syntax:\n    content: public event EventHandler SystemColorsChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.TabIndex\n  commentId: P:System.Windows.Forms.Control.TabIndex\n  id: TabIndex\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: TabIndex\n  nameWithType: Control.TabIndex\n  fullName: Control.TabIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the tab order of the control within its container.\n  remarks: \"A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order. If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.  \\n  \\n For a control to be included in the tab order, its <xref:System.Windows.Forms.Control.TabStop%2A> property must be set to `true`.\"\n  example:\n  - \"The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]\\n [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]\\n [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]\"\n  syntax:\n    content: public int TabIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The index value of the control within the set of controls within its container. The controls in the container are included in the tab order.\n  overload: System.Windows.Forms.Control.TabIndex*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.TabIndexChanged\n  commentId: E:System.Windows.Forms.Control.TabIndexChanged\n  id: TabIndexChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: TabIndexChanged\n  nameWithType: Control.TabIndexChanged\n  fullName: Control.TabIndexChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.TabIndex\"></xref> property value changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabIndexChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabIndexChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#25)]\\n [!code-vb[System.Windows.Forms.EventExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#25)]\"\n  syntax:\n    content: public event EventHandler TabIndexChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.TabStop\n  commentId: P:System.Windows.Forms.Control.TabStop\n  id: TabStop\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: TabStop\n  nameWithType: Control.TabStop\n  fullName: Control.TabStop\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.\n  remarks: When the user presses the TAB key, the input focus is set to the next control in the tab order. Controls with the <xref:System.Windows.Forms.Control.TabStop%2A> property value of `false` are not included in the collection of controls in the tab order. The tab order can be manipulated by setting the control's <xref:System.Windows.Forms.Control.TabIndex%2A> property value.\n  example:\n  - \"The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]\\n [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]\\n [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]\"\n  syntax:\n    content: public bool TabStop { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` if the user can give the focus to the control using the TAB key; otherwise, `false`. The default is `true`.  \\n  \\n <block subset=\\\"none\\\" type=\\\"note\\\"><p>  \\n This property will always return `true` for an instance of the <xref href=\\\"System.Windows.Forms.Form\\\"></xref> class.  \\n  \\n</p></block>\"\n  overload: System.Windows.Forms.Control.TabStop*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.TabStopChanged\n  commentId: E:System.Windows.Forms.Control.TabStopChanged\n  id: TabStopChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: TabStopChanged\n  nameWithType: Control.TabStopChanged\n  fullName: Control.TabStopChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.TabStop\"></xref> property value changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabStopChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabStopChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#26)]\\n [!code-vb[System.Windows.Forms.EventExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#26)]\"\n  syntax:\n    content: public event EventHandler TabStopChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Tag\n  commentId: P:System.Windows.Forms.Control.Tag\n  id: Tag\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: Control.Tag\n  fullName: Control.Tag\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the object that contains data about the control.\n  remarks: \"Any type derived from the <xref:System.Object> class can be assigned to this property. If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.  \\n  \\n A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control. For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly.\"\n  example:\n  - \"The following code example displays a form and stores a `Customer` in its <xref:System.Windows.Forms.Control.Tag%2A> property. This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `CustomerForm` and that you have defined a `Customer`.  \\n  \\n [!code-cpp[Windows.Forms.Control Members2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#3)]\\n [!code-csharp[Windows.Forms.Control Members2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#3)]\\n [!code-vb[Windows.Forms.Control Members2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#3)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]\n\n      public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that contains data about the control. The default is `null`.\n  overload: System.Windows.Forms.Control.Tag*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Text\n  commentId: P:System.Windows.Forms.Control.Text\n  id: Text\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Text\n  nameWithType: Control.Text\n  fullName: Control.Text\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text associated with this control.\n  remarks: The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class. For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name. However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text. For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text.\n  example:\n  - \"The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \\n  \\n [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]\\n [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]\\n [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public virtual string Text { get; set; }\n    return:\n      type: System.String\n      description: The text associated with this control.\n  overload: System.Windows.Forms.Control.Text*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.TextChanged\n  commentId: E:System.Windows.Forms.Control.TextChanged\n  id: TextChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: TextChanged\n  nameWithType: Control.TextChanged\n  fullName: Control.TextChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.Text\"></xref> property value changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.Text%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \\n  \\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]\\n [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]\\n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]\"\n  syntax:\n    content: public event EventHandler TextChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Top\n  commentId: P:System.Windows.Forms.Control.Top\n  id: Top\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Top\n  nameWithType: Control.Top\n  fullName: Control.Top\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.\n  remarks: \"The <xref:System.Windows.Forms.Control.Top%2A> property value is equivalent to the <xref:System.Drawing.Point.Y%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.  \\n  \\n Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.\"\n  example:\n  - \"The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \\n  \\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]\\n [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]\\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Top { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.\n  overload: System.Windows.Forms.Control.Top*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.TopLevelControl\n  commentId: P:System.Windows.Forms.Control.TopLevelControl\n  id: TopLevelControl\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: TopLevelControl\n  nameWithType: Control.TopLevelControl\n  fullName: Control.TopLevelControl\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <xref href=\"System.Windows.Forms.Form\"></xref> that the control is contained in.\n  remarks: The top-level control is defined as the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <xref:System.Windows.Forms.Form> that the control is contained in. For example, if the control is contained on an MDI child <xref:System.Windows.Forms.Form>, then the top-level control is the Multiple Document Interface (MDI) parent <xref:System.Windows.Forms.Form>. If the control is not parented on a <xref:System.Windows.Forms.Form>, this property will return `null`.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Control TopLevelControl { get; }\n    return:\n      type: System.Windows.Forms.Control\n      description: The <xref href=\"System.Windows.Forms.Control\"></xref> that represents the top-level control that contains the current control.\n  overload: System.Windows.Forms.Control.TopLevelControl*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Update\n  commentId: M:System.Windows.Forms.Control.Update\n  id: Update\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Update()\n  nameWithType: Control.Update()\n  fullName: Control.Update()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Causes the control to redraw the invalidated regions within its client area.\n  remarks: \"Executes any pending requests for painting.  \\n  \\n There are two ways to repaint a form and its contents:  \\n  \\n-   You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the <xref:System.Windows.Forms.Control.Update%2A> method.  \\n  \\n-   You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children. This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with <xref:System.Windows.Forms.Control.Update%2A>.  \\n  \\n The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted. The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs. If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use. The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method.  \\n  \\n For more information, see the[WM_PAINT](http://msdn.microsoft.com/library/dd145213\\\\(v=vs.85\\\\).aspx)topic.\"\n  syntax:\n    content: public void Update ();\n    parameters: []\n  overload: System.Windows.Forms.Control.Update*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Updates the bounds of the control with the specified size, location, and client size.\n  remarks: If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.\n  syntax:\n    content: protected void UpdateBounds (int x, int y, int width, int height, int clientWidth, int clientHeight);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Point.X\"></xref> coordinate of the control.\n    - id: y\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Point.Y\"></xref> coordinate of the control.\n    - id: width\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Size.Width\"></xref> of the control.\n    - id: height\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Size.Height\"></xref> of the control.\n    - id: clientWidth\n      type: System.Int32\n      description: The client <xref href=\"System.Drawing.Size.Width\"></xref> of the control.\n    - id: clientHeight\n      type: System.Int32\n      description: The client <xref href=\"System.Drawing.Size.Height\"></xref> of the control.\n  overload: System.Windows.Forms.Control.UpdateBounds*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: UpdateBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Control.UpdateBounds(Int32, Int32, Int32, Int32)\n  fullName: Control.UpdateBounds(Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Updates the bounds of the control with the specified size and location.\n  remarks: If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.\n  syntax:\n    content: protected void UpdateBounds (int x, int y, int width, int height);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Point.X\"></xref> coordinate of the control.\n    - id: y\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Point.Y\"></xref> coordinate of the control.\n    - id: width\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Size.Width\"></xref> of the control.\n    - id: height\n      type: System.Int32\n      description: The <xref href=\"System.Drawing.Size.Height\"></xref> of the control.\n  overload: System.Windows.Forms.Control.UpdateBounds*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.UpdateBounds\n  commentId: M:System.Windows.Forms.Control.UpdateBounds\n  id: UpdateBounds\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: UpdateBounds()\n  nameWithType: Control.UpdateBounds()\n  fullName: Control.UpdateBounds()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Updates the bounds of the control with the current size and location.\n  remarks: If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised. Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.\n  syntax:\n    content: protected void UpdateBounds ();\n    parameters: []\n  overload: System.Windows.Forms.Control.UpdateBounds*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.UpdateStyles\n  commentId: M:System.Windows.Forms.Control.UpdateStyles\n  id: UpdateStyles\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: UpdateStyles()\n  nameWithType: Control.UpdateStyles()\n  fullName: Control.UpdateStyles()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Forces the assigned styles to be reapplied to the control.\n  remarks: \"This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply. The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied. The control is repainted to reflect the style changes if necessary.  \\n  \\n The <xref:System.Windows.Forms.Control.UpdateStyles%2A> method has no effect if the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property value is `false`.\"\n  example:\n  - \"The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.  \\n  \\n [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]\\n [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]\\n [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]\"\n  syntax:\n    content: protected void UpdateStyles ();\n    parameters: []\n  overload: System.Windows.Forms.Control.UpdateStyles*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.UpdateZOrder\n  commentId: M:System.Windows.Forms.Control.UpdateZOrder\n  id: UpdateZOrder\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: UpdateZOrder()\n  nameWithType: Control.UpdateZOrder()\n  fullName: Control.UpdateZOrder()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Updates the control in its parent's z-order.\n  remarks: The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order. For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back.\n  syntax:\n    content: protected void UpdateZOrder ();\n    parameters: []\n  overload: System.Windows.Forms.Control.UpdateZOrder*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.UseWaitCursor\n  commentId: P:System.Windows.Forms.Control.UseWaitCursor\n  id: UseWaitCursor\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: UseWaitCursor\n  nameWithType: Control.UseWaitCursor\n  fullName: Control.UseWaitCursor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.\n  remarks: Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread. To change the cursor globally and immediately, seethe <xref:System.Windows.Forms.Cursor.Current%2A> property.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public bool UseWaitCursor { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to use the wait cursor for the current control and all child controls; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.Control.UseWaitCursor*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Validated\n  commentId: E:System.Windows.Forms.Control.Validated\n  id: Validated\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Validated\n  nameWithType: Control.Validated\n  fullName: Control.Validated\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is finished validating.\n  remarks: \"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n6.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n6.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \\n  \\n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \\n  \\n> [!CAUTION]\\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\\\\(v=vs.85\\\\).aspx)topic, and the \\\"Message Deadlocks\\\" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\\\(v=vs.85\\\\).aspx) topic.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \\\"@\\\" and \\\".\\\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.  \\n  \\n [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]\\n [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]\\n [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]\"\n  syntax:\n    content: public event EventHandler Validated;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Validating\n  commentId: E:System.Windows.Forms.Control.Validating\n  id: Validating\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Validating\n  nameWithType: Control.Validating\n  fullName: Control.Validating\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is validating.\n  remarks: \"When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A>or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n6.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \\n  \\n1.  <xref:System.Windows.Forms.Control.Enter>  \\n  \\n2.  <xref:System.Windows.Forms.Control.GotFocus>  \\n  \\n3.  <xref:System.Windows.Forms.Control.LostFocus>  \\n  \\n4.  <xref:System.Windows.Forms.Control.Leave>  \\n  \\n5.  <xref:System.Windows.Forms.Control.Validating>  \\n  \\n6.  <xref:System.Windows.Forms.Control.Validated>  \\n  \\n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \\n  \\n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \\n  \\n> [!CAUTION]\\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \\\"Keyboard Input Reference\\\" section, and the \\\"Message Deadlocks\\\" section of the \\\"About Messages and Message Queues\\\" topic in the MSDN library at http://msdn.microsoft.com/library.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \\\"@\\\" and \\\".\\\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.  \\n  \\n [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]\\n [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]\\n [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]\"\n  syntax:\n    content: public event System.ComponentModel.CancelEventHandler Validating;\n    return:\n      type: System.ComponentModel.CancelEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.Visible\n  commentId: P:System.Windows.Forms.Control.Visible\n  id: Visible\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Visible\n  nameWithType: Control.Visible\n  fullName: Control.Visible\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the control and all its child controls are displayed.\n  remarks: Note that even if `Visible` is set to `true`, the control might not be visible to the user if it is obscured behind other controls.\n  example:\n  - \"The following code example uses the derived classes <xref:System.Windows.Forms.VScrollBar> and <xref:System.Windows.Forms.HScrollBar> and sets their <xref:System.Windows.Forms.Control.Visible%2A> property values, based on the size of an <xref:System.Drawing.Image> being displayed in a <xref:System.Windows.Forms.PictureBox> control. This example requires that a <xref:System.Windows.Forms.PictureBox> has been created on a form and that <xref:System.Windows.Forms.HScrollBar> and <xref:System.Windows.Forms.VScrollBar> controls have been created on the <xref:System.Windows.Forms.PictureBox>. This code should be called when the image is loaded into the picture box and by the <xref:System.Windows.Forms.Control.Resize> event of the form.  \\n  \\n [!code-cpp[Classic Control.Visible Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.Visible Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Control.Visible Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.Visible Example/CS/source.cs#1)]\\n [!code-vb[Classic Control.Visible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.Visible Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool Visible { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control and all its child controls are displayed; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Control.Visible*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.VisibleChanged\n  commentId: E:System.Windows.Forms.Control.VisibleChanged\n  id: VisibleChanged\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: VisibleChanged\n  nameWithType: Control.VisibleChanged\n  fullName: Control.VisibleChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Control.Visible\"></xref> property value changes.\n  remarks: \"This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example raises the <xref:System.Windows.Forms.Control.VisibleChanged> event when the <xref:System.Windows.Forms.Control.Visible%2A> property value of the <xref:System.Windows.Forms.Label> control has changed.  \\n  \\n [!code-cpp[Control_VisibleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_VisibleChanged/CPP/control_visiblechanged.cpp#1)]\\n [!code-csharp[Control_VisibleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_VisibleChanged/CS/control_visiblechanged.cs#1)]\\n [!code-vb[Control_VisibleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_VisibleChanged/VB/control_visiblechanged.vb#1)]\"\n  syntax:\n    content: public event EventHandler VisibleChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.Width\n  commentId: P:System.Windows.Forms.Control.Width\n  id: Width\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: Width\n  nameWithType: Control.Width\n  fullName: Control.Width\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the width of the control.\n  remarks: Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.\n  example:\n  - \"The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \\n  \\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]\\n [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]\\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int Width { get; set; }\n    return:\n      type: System.Int32\n      description: The width of the control in pixels.\n  overload: System.Windows.Forms.Control.Width*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.WindowTarget\n  commentId: P:System.Windows.Forms.Control.WindowTarget\n  id: WindowTarget\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: WindowTarget\n  nameWithType: Control.WindowTarget\n  fullName: Control.WindowTarget\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant for this class.\n  remarks: This property is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.IWindowTarget WindowTarget { get; set; }\n    return:\n      type: System.Windows.Forms.IWindowTarget\n      description: The NativeWindow contained within the control.\n  overload: System.Windows.Forms.Control.WindowTarget*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\n  id: WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: WndProc(Message)\n  nameWithType: Control.WndProc(Message)\n  fullName: Control.WndProc(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes Windows messages.\n  remarks: \"All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.  \\n  \\n The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function. For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).\"\n  example:\n  - \"The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.WndProc%2A> method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure. The[WM_ACTIVATEAPP](http://msdn.microsoft.com/en-us/library/windows/desktop/ms632614\\\\(v=vs.85\\\\).aspx)operating system message is handled in this example to know when another application is becoming active. See the following topics to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=fullName> values. Actual constant values can be found in the Windows.h header file.  \\n  \\n [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void WndProc (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.\n  overload: System.Windows.Forms.Control.WndProc*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  commentId: M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  id: System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  isEii: true\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IDropTarget.OnDragDrop(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragDrop(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragDrop(DragEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DragDrop\"></xref> event.\n  syntax:\n    content: void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs drgEvent);\n    parameters:\n    - id: drgEvent\n      type: System.Windows.Forms.DragEventArgs\n      description: A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  commentId: M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  id: System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  isEii: true\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IDropTarget.OnDragEnter(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragEnter(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragEnter(DragEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DragEnter\"></xref> event.\n  syntax:\n    content: void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs drgEvent);\n    parameters:\n    - id: drgEvent\n      type: System.Windows.Forms.DragEventArgs\n      description: A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  commentId: M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  id: System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  isEii: true\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IDropTarget.OnDragLeave(EventArgs)\n  nameWithType: Control.IDropTarget.OnDragLeave(EventArgs)\n  fullName: Control.IDropTarget.OnDragLeave(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DragLeave\"></xref> event.\n  syntax:\n    content: void IDropTarget.OnDragLeave (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: A <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  commentId: M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  id: System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  isEii: true\n  parent: System.Windows.Forms.Control\n  langs:\n  - csharp\n  name: IDropTarget.OnDragOver(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragOver(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragOver(DragEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.DragOver\"></xref> event.\n  syntax:\n    content: void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs drgEvent);\n    parameters:\n    - id: drgEvent\n      type: System.Windows.Forms.DragEventArgs\n      description: A <xref href=\"System.Windows.Forms.DragEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Component\n  parent: System.ComponentModel\n  isExternal: false\n  name: Component\n  nameWithType: Component\n  fullName: System.ComponentModel.Component\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Windows.Forms.Control.#ctor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Control()\n  nameWithType: Control.Control()\n  fullName: Control.Control()\n- uid: System.Windows.Forms.Control.#ctor(System.String)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Control(String)\n  nameWithType: Control.Control(String)\n  fullName: Control.Control(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Control(Control, String)\n  nameWithType: Control.Control(Control, String)\n  fullName: Control.Control(Control, String)\n- uid: System.Windows.Forms.Control\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Windows.Forms.Control\n- uid: System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Control(String, Int32, Int32, Int32, Int32)\n  nameWithType: Control.Control(String, Int32, Int32, Int32, Int32)\n  fullName: Control.Control(String, Int32, Int32, Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Control(Control, String, Int32, Int32, Int32, Int32)\n  nameWithType: Control.Control(Control, String, Int32, Int32, Int32, Int32)\n  fullName: Control.Control(Control, String, Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityNotifyClients(AccessibleEvents, Int32)\n  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents, Int32)\n  fullName: Control.AccessibilityNotifyClients(AccessibleEvents, Int32)\n- uid: System.Windows.Forms.AccessibleEvents\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleEvents\n  nameWithType: AccessibleEvents\n  fullName: System.Windows.Forms.AccessibleEvents\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  fullName: Control.AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n- uid: System.Windows.Forms.Control.AccessibilityObject\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityObject\n  nameWithType: Control.AccessibilityObject\n  fullName: Control.AccessibilityObject\n- uid: System.Windows.Forms.AccessibleObject\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleObject\n  nameWithType: AccessibleObject\n  fullName: System.Windows.Forms.AccessibleObject\n- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleDefaultActionDescription\n  nameWithType: Control.AccessibleDefaultActionDescription\n  fullName: Control.AccessibleDefaultActionDescription\n- uid: System.Windows.Forms.Control.AccessibleDescription\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleDescription\n  nameWithType: Control.AccessibleDescription\n  fullName: Control.AccessibleDescription\n- uid: System.Windows.Forms.Control.AccessibleName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleName\n  nameWithType: Control.AccessibleName\n  fullName: Control.AccessibleName\n- uid: System.Windows.Forms.Control.AccessibleRole\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleRole\n  nameWithType: Control.AccessibleRole\n  fullName: Control.AccessibleRole\n- uid: System.Windows.Forms.AccessibleRole\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleRole\n  nameWithType: AccessibleRole\n  fullName: System.Windows.Forms.AccessibleRole\n- uid: System.Windows.Forms.Control.AllowDrop\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AllowDrop\n  nameWithType: Control.AllowDrop\n  fullName: Control.AllowDrop\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.Control.Anchor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Anchor\n  nameWithType: Control.Anchor\n  fullName: Control.Anchor\n- uid: System.Windows.Forms.AnchorStyles\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AnchorStyles\n  nameWithType: AnchorStyles\n  fullName: System.Windows.Forms.AnchorStyles\n- uid: System.Windows.Forms.Control.AutoScrollOffset\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AutoScrollOffset\n  nameWithType: Control.AutoScrollOffset\n  fullName: Control.AutoScrollOffset\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.Control.AutoSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AutoSize\n  nameWithType: Control.AutoSize\n  fullName: Control.AutoSize\n- uid: System.Windows.Forms.Control.AutoSizeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AutoSizeChanged\n  nameWithType: Control.AutoSizeChanged\n  fullName: Control.AutoSizeChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.Control.BackColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackColor\n  nameWithType: Control.BackColor\n  fullName: Control.BackColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Windows.Forms.Control.BackColorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackColorChanged\n  nameWithType: Control.BackColorChanged\n  fullName: Control.BackColorChanged\n- uid: System.Windows.Forms.Control.BackgroundImage\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImage\n  nameWithType: Control.BackgroundImage\n  fullName: Control.BackgroundImage\n- uid: System.Drawing.Image\n  parent: System.Drawing\n  isExternal: false\n  name: Image\n  nameWithType: Image\n  fullName: System.Drawing.Image\n- uid: System.Windows.Forms.Control.BackgroundImageChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImageChanged\n  nameWithType: Control.BackgroundImageChanged\n  fullName: Control.BackgroundImageChanged\n- uid: System.Windows.Forms.Control.BackgroundImageLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImageLayout\n  nameWithType: Control.BackgroundImageLayout\n  fullName: Control.BackgroundImageLayout\n- uid: System.Windows.Forms.ImageLayout\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ImageLayout\n  nameWithType: ImageLayout\n  fullName: System.Windows.Forms.ImageLayout\n- uid: System.Windows.Forms.Control.BackgroundImageLayoutChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImageLayoutChanged\n  nameWithType: Control.BackgroundImageLayoutChanged\n  fullName: Control.BackgroundImageLayoutChanged\n- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BeginInvoke(Delegate)\n  nameWithType: Control.BeginInvoke(Delegate)\n  fullName: Control.BeginInvoke(Delegate)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BeginInvoke(Delegate, Object[])\n  nameWithType: Control.BeginInvoke(Delegate, Object[])\n  fullName: Control.BeginInvoke(Delegate, Object[])\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.Control.BindingContext\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BindingContext\n  nameWithType: Control.BindingContext\n  fullName: Control.BindingContext\n- uid: System.Windows.Forms.BindingContext\n  parent: System.Windows.Forms\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.Windows.Forms.BindingContext\n- uid: System.Windows.Forms.Control.BindingContextChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BindingContextChanged\n  nameWithType: Control.BindingContextChanged\n  fullName: Control.BindingContextChanged\n- uid: System.Windows.Forms.Control.Bottom\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Bottom\n  nameWithType: Control.Bottom\n  fullName: Control.Bottom\n- uid: System.Windows.Forms.Control.Bounds\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Bounds\n  nameWithType: Control.Bounds\n  fullName: Control.Bounds\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Windows.Forms.Control.BringToFront\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BringToFront()\n  nameWithType: Control.BringToFront()\n  fullName: Control.BringToFront()\n- uid: System.Windows.Forms.Control.CanEnableIme\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanEnableIme\n  nameWithType: Control.CanEnableIme\n  fullName: Control.CanEnableIme\n- uid: System.Windows.Forms.Control.CanFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanFocus\n  nameWithType: Control.CanFocus\n  fullName: Control.CanFocus\n- uid: System.Windows.Forms.Control.CanRaiseEvents\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Control.CanRaiseEvents\n  fullName: Control.CanRaiseEvents\n- uid: System.Windows.Forms.Control.CanSelect\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanSelect\n  nameWithType: Control.CanSelect\n  fullName: Control.CanSelect\n- uid: System.Windows.Forms.Control.Capture\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Capture\n  nameWithType: Control.Capture\n  fullName: Control.Capture\n- uid: System.Windows.Forms.Control.CausesValidation\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CausesValidation\n  nameWithType: Control.CausesValidation\n  fullName: Control.CausesValidation\n- uid: System.Windows.Forms.Control.CausesValidationChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CausesValidationChanged\n  nameWithType: Control.CausesValidationChanged\n  fullName: Control.CausesValidationChanged\n- uid: System.Windows.Forms.Control.ChangeUICues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ChangeUICues\n  nameWithType: Control.ChangeUICues\n  fullName: Control.ChangeUICues\n- uid: System.Windows.Forms.UICuesEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: UICuesEventHandler\n  nameWithType: UICuesEventHandler\n  fullName: System.Windows.Forms.UICuesEventHandler\n- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CheckForIllegalCrossThreadCalls\n  nameWithType: Control.CheckForIllegalCrossThreadCalls\n  fullName: Control.CheckForIllegalCrossThreadCalls\n- uid: System.Windows.Forms.Control.Click\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Click\n  nameWithType: Control.Click\n  fullName: Control.Click\n- uid: System.Windows.Forms.Control.ClientRectangle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientRectangle\n  nameWithType: Control.ClientRectangle\n  fullName: Control.ClientRectangle\n- uid: System.Windows.Forms.Control.ClientSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientSize\n  nameWithType: Control.ClientSize\n  fullName: Control.ClientSize\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Windows.Forms.Control.ClientSizeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientSizeChanged\n  nameWithType: Control.ClientSizeChanged\n  fullName: Control.ClientSizeChanged\n- uid: System.Windows.Forms.Control.CompanyName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CompanyName\n  nameWithType: Control.CompanyName\n  fullName: Control.CompanyName\n- uid: System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Contains(Control)\n  nameWithType: Control.Contains(Control)\n  fullName: Control.Contains(Control)\n- uid: System.Windows.Forms.Control.ContainsFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContainsFocus\n  nameWithType: Control.ContainsFocus\n  fullName: Control.ContainsFocus\n- uid: System.Windows.Forms.Control.ContextMenu\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenu\n  nameWithType: Control.ContextMenu\n  fullName: Control.ContextMenu\n- uid: System.Windows.Forms.ContextMenu\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ContextMenu\n  nameWithType: ContextMenu\n  fullName: System.Windows.Forms.ContextMenu\n- uid: System.Windows.Forms.Control.ContextMenuChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuChanged\n  nameWithType: Control.ContextMenuChanged\n  fullName: Control.ContextMenuChanged\n- uid: System.Windows.Forms.Control.ContextMenuStrip\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuStrip\n  nameWithType: Control.ContextMenuStrip\n  fullName: Control.ContextMenuStrip\n- uid: System.Windows.Forms.ContextMenuStrip\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ContextMenuStrip\n  nameWithType: ContextMenuStrip\n  fullName: System.Windows.Forms.ContextMenuStrip\n- uid: System.Windows.Forms.Control.ContextMenuStripChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuStripChanged\n  nameWithType: Control.ContextMenuStripChanged\n  fullName: Control.ContextMenuStripChanged\n- uid: System.Windows.Forms.Control.ControlAdded\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ControlAdded\n  nameWithType: Control.ControlAdded\n  fullName: Control.ControlAdded\n- uid: System.Windows.Forms.ControlEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ControlEventHandler\n  nameWithType: ControlEventHandler\n  fullName: System.Windows.Forms.ControlEventHandler\n- uid: System.Windows.Forms.Control.ControlRemoved\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ControlRemoved\n  nameWithType: Control.ControlRemoved\n  fullName: Control.ControlRemoved\n- uid: System.Windows.Forms.Control.Controls\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Controls\n  nameWithType: Control.Controls\n  fullName: Control.Controls\n- uid: System.Windows.Forms.Control.CreateAccessibilityInstance\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateAccessibilityInstance()\n  nameWithType: Control.CreateAccessibilityInstance()\n  fullName: Control.CreateAccessibilityInstance()\n- uid: System.Windows.Forms.Control.CreateControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateControl()\n  nameWithType: Control.CreateControl()\n  fullName: Control.CreateControl()\n- uid: System.Windows.Forms.Control.CreateControlsInstance\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateControlsInstance()\n  nameWithType: Control.CreateControlsInstance()\n  fullName: Control.CreateControlsInstance()\n- uid: System.Windows.Forms.Control.Created\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Created\n  nameWithType: Control.Created\n  fullName: Control.Created\n- uid: System.Windows.Forms.Control.CreateGraphics\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateGraphics()\n  nameWithType: Control.CreateGraphics()\n  fullName: Control.CreateGraphics()\n- uid: System.Drawing.Graphics\n  parent: System.Drawing\n  isExternal: false\n  name: Graphics\n  nameWithType: Graphics\n  fullName: System.Drawing.Graphics\n- uid: System.Windows.Forms.Control.CreateHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateHandle()\n  nameWithType: Control.CreateHandle()\n  fullName: Control.CreateHandle()\n- uid: System.Windows.Forms.Control.CreateParams\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateParams\n  nameWithType: Control.CreateParams\n  fullName: Control.CreateParams\n- uid: System.Windows.Forms.CreateParams\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CreateParams\n  nameWithType: CreateParams\n  fullName: System.Windows.Forms.CreateParams\n- uid: System.Windows.Forms.Control.Cursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Cursor\n  nameWithType: Control.Cursor\n  fullName: Control.Cursor\n- uid: System.Windows.Forms.Cursor\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Cursor\n  nameWithType: Cursor\n  fullName: System.Windows.Forms.Cursor\n- uid: System.Windows.Forms.Control.CursorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CursorChanged\n  nameWithType: Control.CursorChanged\n  fullName: Control.CursorChanged\n- uid: System.Windows.Forms.Control.DataBindings\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DataBindings\n  nameWithType: Control.DataBindings\n  fullName: Control.DataBindings\n- uid: System.Windows.Forms.ControlBindingsCollection\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ControlBindingsCollection\n  nameWithType: ControlBindingsCollection\n  fullName: System.Windows.Forms.ControlBindingsCollection\n- uid: System.Windows.Forms.Control.DefaultBackColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultBackColor\n  nameWithType: Control.DefaultBackColor\n  fullName: Control.DefaultBackColor\n- uid: System.Windows.Forms.Control.DefaultCursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultCursor\n  nameWithType: Control.DefaultCursor\n  fullName: Control.DefaultCursor\n- uid: System.Windows.Forms.Control.DefaultFont\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultFont\n  nameWithType: Control.DefaultFont\n  fullName: Control.DefaultFont\n- uid: System.Drawing.Font\n  parent: System.Drawing\n  isExternal: false\n  name: Font\n  nameWithType: Font\n  fullName: System.Drawing.Font\n- uid: System.Windows.Forms.Control.DefaultForeColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultForeColor\n  nameWithType: Control.DefaultForeColor\n  fullName: Control.DefaultForeColor\n- uid: System.Windows.Forms.Control.DefaultImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultImeMode\n  nameWithType: Control.DefaultImeMode\n  fullName: Control.DefaultImeMode\n- uid: System.Windows.Forms.ImeMode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ImeMode\n  nameWithType: ImeMode\n  fullName: System.Windows.Forms.ImeMode\n- uid: System.Windows.Forms.Control.DefaultMargin\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMargin\n  nameWithType: Control.DefaultMargin\n  fullName: Control.DefaultMargin\n- uid: System.Windows.Forms.Padding\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Padding\n  nameWithType: Padding\n  fullName: System.Windows.Forms.Padding\n- uid: System.Windows.Forms.Control.DefaultMaximumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMaximumSize\n  nameWithType: Control.DefaultMaximumSize\n  fullName: Control.DefaultMaximumSize\n- uid: System.Windows.Forms.Control.DefaultMinimumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMinimumSize\n  nameWithType: Control.DefaultMinimumSize\n  fullName: Control.DefaultMinimumSize\n- uid: System.Windows.Forms.Control.DefaultPadding\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultPadding\n  nameWithType: Control.DefaultPadding\n  fullName: Control.DefaultPadding\n- uid: System.Windows.Forms.Control.DefaultSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultSize\n  nameWithType: Control.DefaultSize\n  fullName: Control.DefaultSize\n- uid: System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefWndProc(Message)\n  nameWithType: Control.DefWndProc(Message)\n  fullName: Control.DefWndProc(Message)\n- uid: System.Windows.Forms.Message\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Windows.Forms.Message\n- uid: System.Windows.Forms.Control.DestroyHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DestroyHandle()\n  nameWithType: Control.DestroyHandle()\n  fullName: Control.DestroyHandle()\n- uid: System.Windows.Forms.Control.DeviceDpi\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DeviceDpi\n  nameWithType: Control.DeviceDpi\n  fullName: Control.DeviceDpi\n- uid: System.Windows.Forms.Control.DisplayRectangle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DisplayRectangle\n  nameWithType: Control.DisplayRectangle\n  fullName: Control.DisplayRectangle\n- uid: System.Windows.Forms.Control.Dispose(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Control.Dispose(Boolean)\n  fullName: Control.Dispose(Boolean)\n- uid: System.Windows.Forms.Control.Disposing\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Disposing\n  nameWithType: Control.Disposing\n  fullName: Control.Disposing\n- uid: System.Windows.Forms.Control.Dock\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Dock\n  nameWithType: Control.Dock\n  fullName: Control.Dock\n- uid: System.Windows.Forms.DockStyle\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DockStyle\n  nameWithType: DockStyle\n  fullName: System.Windows.Forms.DockStyle\n- uid: System.Windows.Forms.Control.DockChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DockChanged\n  nameWithType: Control.DockChanged\n  fullName: Control.DockChanged\n- uid: System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoDragDrop(Object, DragDropEffects)\n  nameWithType: Control.DoDragDrop(Object, DragDropEffects)\n  fullName: Control.DoDragDrop(Object, DragDropEffects)\n- uid: System.Windows.Forms.DragDropEffects\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DragDropEffects\n  nameWithType: DragDropEffects\n  fullName: System.Windows.Forms.DragDropEffects\n- uid: System.Windows.Forms.Control.DoubleBuffered\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoubleBuffered\n  nameWithType: Control.DoubleBuffered\n  fullName: Control.DoubleBuffered\n- uid: System.Windows.Forms.Control.DoubleClick\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoubleClick\n  nameWithType: Control.DoubleClick\n  fullName: Control.DoubleClick\n- uid: System.Windows.Forms.Control.DpiChangedAfterParent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DpiChangedAfterParent\n  nameWithType: Control.DpiChangedAfterParent\n  fullName: Control.DpiChangedAfterParent\n- uid: System.Windows.Forms.Control.DpiChangedBeforeParent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DpiChangedBeforeParent\n  nameWithType: Control.DpiChangedBeforeParent\n  fullName: Control.DpiChangedBeforeParent\n- uid: System.Windows.Forms.Control.DragDrop\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragDrop\n  nameWithType: Control.DragDrop\n  fullName: Control.DragDrop\n- uid: System.Windows.Forms.DragEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DragEventHandler\n  nameWithType: DragEventHandler\n  fullName: System.Windows.Forms.DragEventHandler\n- uid: System.Windows.Forms.Control.DragEnter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragEnter\n  nameWithType: Control.DragEnter\n  fullName: Control.DragEnter\n- uid: System.Windows.Forms.Control.DragLeave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragLeave\n  nameWithType: Control.DragLeave\n  fullName: Control.DragLeave\n- uid: System.Windows.Forms.Control.DragOver\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragOver\n  nameWithType: Control.DragOver\n  fullName: Control.DragOver\n- uid: System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DrawToBitmap(Bitmap, Rectangle)\n  nameWithType: Control.DrawToBitmap(Bitmap, Rectangle)\n  fullName: Control.DrawToBitmap(Bitmap, Rectangle)\n- uid: System.Drawing.Bitmap\n  parent: System.Drawing\n  isExternal: false\n  name: Bitmap\n  nameWithType: Bitmap\n  fullName: System.Drawing.Bitmap\n- uid: System.Windows.Forms.Control.Enabled\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Enabled\n  nameWithType: Control.Enabled\n  fullName: Control.Enabled\n- uid: System.Windows.Forms.Control.EnabledChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: EnabledChanged\n  nameWithType: Control.EnabledChanged\n  fullName: Control.EnabledChanged\n- uid: System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: EndInvoke(IAsyncResult)\n  nameWithType: Control.EndInvoke(IAsyncResult)\n  fullName: Control.EndInvoke(IAsyncResult)\n- uid: System.Windows.Forms.Control.Enter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Enter\n  nameWithType: Control.Enter\n  fullName: Control.Enter\n- uid: System.Windows.Forms.Control.FindForm\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FindForm()\n  nameWithType: Control.FindForm()\n  fullName: Control.FindForm()\n- uid: System.Windows.Forms.Form\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Form\n  nameWithType: Form\n  fullName: System.Windows.Forms.Form\n- uid: System.Windows.Forms.Control.Focus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Focus()\n  nameWithType: Control.Focus()\n  fullName: Control.Focus()\n- uid: System.Windows.Forms.Control.Focused\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Focused\n  nameWithType: Control.Focused\n  fullName: Control.Focused\n- uid: System.Windows.Forms.Control.Font\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Font\n  nameWithType: Control.Font\n  fullName: Control.Font\n- uid: System.Windows.Forms.Control.FontChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FontChanged\n  nameWithType: Control.FontChanged\n  fullName: Control.FontChanged\n- uid: System.Windows.Forms.Control.FontHeight\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FontHeight\n  nameWithType: Control.FontHeight\n  fullName: Control.FontHeight\n- uid: System.Windows.Forms.Control.ForeColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ForeColor\n  nameWithType: Control.ForeColor\n  fullName: Control.ForeColor\n- uid: System.Windows.Forms.Control.ForeColorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ForeColorChanged\n  nameWithType: Control.ForeColorChanged\n  fullName: Control.ForeColorChanged\n- uid: System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FromChildHandle(IntPtr)\n  nameWithType: Control.FromChildHandle(IntPtr)\n  fullName: Control.FromChildHandle(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FromHandle(IntPtr)\n  nameWithType: Control.FromHandle(IntPtr)\n  fullName: Control.FromHandle(IntPtr)\n- uid: System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetAccessibilityObjectById(Int32)\n  nameWithType: Control.GetAccessibilityObjectById(Int32)\n  fullName: Control.GetAccessibilityObjectById(Int32)\n- uid: System.Windows.Forms.Control.GetAutoSizeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetAutoSizeMode()\n  nameWithType: Control.GetAutoSizeMode()\n  fullName: Control.GetAutoSizeMode()\n- uid: System.Windows.Forms.AutoSizeMode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AutoSizeMode\n  nameWithType: AutoSizeMode\n  fullName: System.Windows.Forms.AutoSizeMode\n- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetChildAtPoint(Point)\n  nameWithType: Control.GetChildAtPoint(Point)\n  fullName: Control.GetChildAtPoint(Point)\n- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetChildAtPoint(Point, GetChildAtPointSkip)\n  nameWithType: Control.GetChildAtPoint(Point, GetChildAtPointSkip)\n  fullName: Control.GetChildAtPoint(Point, GetChildAtPointSkip)\n- uid: System.Windows.Forms.GetChildAtPointSkip\n  parent: System.Windows.Forms\n  isExternal: false\n  name: GetChildAtPointSkip\n  nameWithType: GetChildAtPointSkip\n  fullName: System.Windows.Forms.GetChildAtPointSkip\n- uid: System.Windows.Forms.Control.GetContainerControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetContainerControl()\n  nameWithType: Control.GetContainerControl()\n  fullName: Control.GetContainerControl()\n- uid: System.Windows.Forms.IContainerControl\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IContainerControl\n  nameWithType: IContainerControl\n  fullName: System.Windows.Forms.IContainerControl\n- uid: System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetNextControl(Control, Boolean)\n  nameWithType: Control.GetNextControl(Control, Boolean)\n  fullName: Control.GetNextControl(Control, Boolean)\n- uid: System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetPreferredSize(Size)\n  nameWithType: Control.GetPreferredSize(Size)\n  fullName: Control.GetPreferredSize(Size)\n- uid: System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  nameWithType: Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  fullName: Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n- uid: System.Drawing.SizeF\n  parent: System.Drawing\n  isExternal: false\n  name: SizeF\n  nameWithType: SizeF\n  fullName: System.Drawing.SizeF\n- uid: System.Windows.Forms.BoundsSpecified\n  parent: System.Windows.Forms\n  isExternal: false\n  name: BoundsSpecified\n  nameWithType: BoundsSpecified\n  fullName: System.Windows.Forms.BoundsSpecified\n- uid: System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetStyle(ControlStyles)\n  nameWithType: Control.GetStyle(ControlStyles)\n  fullName: Control.GetStyle(ControlStyles)\n- uid: System.Windows.Forms.ControlStyles\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ControlStyles\n  nameWithType: ControlStyles\n  fullName: System.Windows.Forms.ControlStyles\n- uid: System.Windows.Forms.Control.GetTopLevel\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetTopLevel()\n  nameWithType: Control.GetTopLevel()\n  fullName: Control.GetTopLevel()\n- uid: System.Windows.Forms.Control.GiveFeedback\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GiveFeedback\n  nameWithType: Control.GiveFeedback\n  fullName: Control.GiveFeedback\n- uid: System.Windows.Forms.GiveFeedbackEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: GiveFeedbackEventHandler\n  nameWithType: GiveFeedbackEventHandler\n  fullName: System.Windows.Forms.GiveFeedbackEventHandler\n- uid: System.Windows.Forms.Control.GotFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GotFocus\n  nameWithType: Control.GotFocus\n  fullName: Control.GotFocus\n- uid: System.Windows.Forms.Control.Handle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Handle\n  nameWithType: Control.Handle\n  fullName: Control.Handle\n- uid: System.Windows.Forms.Control.HandleCreated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HandleCreated\n  nameWithType: Control.HandleCreated\n  fullName: Control.HandleCreated\n- uid: System.Windows.Forms.Control.HandleDestroyed\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HandleDestroyed\n  nameWithType: Control.HandleDestroyed\n  fullName: Control.HandleDestroyed\n- uid: System.Windows.Forms.Control.HasChildren\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HasChildren\n  nameWithType: Control.HasChildren\n  fullName: Control.HasChildren\n- uid: System.Windows.Forms.Control.Height\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Height\n  nameWithType: Control.Height\n  fullName: Control.Height\n- uid: System.Windows.Forms.Control.HelpRequested\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HelpRequested\n  nameWithType: Control.HelpRequested\n  fullName: Control.HelpRequested\n- uid: System.Windows.Forms.HelpEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HelpEventHandler\n  nameWithType: HelpEventHandler\n  fullName: System.Windows.Forms.HelpEventHandler\n- uid: System.Windows.Forms.Control.Hide\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Hide()\n  nameWithType: Control.Hide()\n  fullName: Control.Hide()\n- uid: System.Windows.Forms.Control.ImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeMode\n  nameWithType: Control.ImeMode\n  fullName: Control.ImeMode\n- uid: System.Windows.Forms.Control.ImeModeBase\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeModeBase\n  nameWithType: Control.ImeModeBase\n  fullName: Control.ImeModeBase\n- uid: System.Windows.Forms.Control.ImeModeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeModeChanged\n  nameWithType: Control.ImeModeChanged\n  fullName: Control.ImeModeChanged\n- uid: System.Windows.Forms.Control.InitLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InitLayout()\n  nameWithType: Control.InitLayout()\n  fullName: Control.InitLayout()\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Region, Boolean)\n  nameWithType: Control.Invalidate(Region, Boolean)\n  fullName: Control.Invalidate(Region, Boolean)\n- uid: System.Drawing.Region\n  parent: System.Drawing\n  isExternal: false\n  name: Region\n  nameWithType: Region\n  fullName: System.Drawing.Region\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Rectangle, Boolean)\n  nameWithType: Control.Invalidate(Rectangle, Boolean)\n  fullName: Control.Invalidate(Rectangle, Boolean)\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Region)\n  nameWithType: Control.Invalidate(Region)\n  fullName: Control.Invalidate(Region)\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Rectangle)\n  nameWithType: Control.Invalidate(Rectangle)\n  fullName: Control.Invalidate(Rectangle)\n- uid: System.Windows.Forms.Control.Invalidate(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Boolean)\n  nameWithType: Control.Invalidate(Boolean)\n  fullName: Control.Invalidate(Boolean)\n- uid: System.Windows.Forms.Control.Invalidate\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate()\n  nameWithType: Control.Invalidate()\n  fullName: Control.Invalidate()\n- uid: System.Windows.Forms.Control.Invalidated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidated\n  nameWithType: Control.Invalidated\n  fullName: Control.Invalidated\n- uid: System.Windows.Forms.InvalidateEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InvalidateEventHandler\n  nameWithType: InvalidateEventHandler\n  fullName: System.Windows.Forms.InvalidateEventHandler\n- uid: System.Windows.Forms.Control.Invoke(System.Delegate)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invoke(Delegate)\n  nameWithType: Control.Invoke(Delegate)\n  fullName: Control.Invoke(Delegate)\n- uid: System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invoke(Delegate, Object[])\n  nameWithType: Control.Invoke(Delegate, Object[])\n  fullName: Control.Invoke(Delegate, Object[])\n- uid: System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeGotFocus(Control, EventArgs)\n  nameWithType: Control.InvokeGotFocus(Control, EventArgs)\n  fullName: Control.InvokeGotFocus(Control, EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeLostFocus(Control, EventArgs)\n  nameWithType: Control.InvokeLostFocus(Control, EventArgs)\n  fullName: Control.InvokeLostFocus(Control, EventArgs)\n- uid: System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeOnClick(Control, EventArgs)\n  nameWithType: Control.InvokeOnClick(Control, EventArgs)\n  fullName: Control.InvokeOnClick(Control, EventArgs)\n- uid: System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokePaint(Control, PaintEventArgs)\n  nameWithType: Control.InvokePaint(Control, PaintEventArgs)\n  fullName: Control.InvokePaint(Control, PaintEventArgs)\n- uid: System.Windows.Forms.PaintEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PaintEventArgs\n  nameWithType: PaintEventArgs\n  fullName: System.Windows.Forms.PaintEventArgs\n- uid: System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokePaintBackground(Control, PaintEventArgs)\n  nameWithType: Control.InvokePaintBackground(Control, PaintEventArgs)\n  fullName: Control.InvokePaintBackground(Control, PaintEventArgs)\n- uid: System.Windows.Forms.Control.InvokeRequired\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeRequired\n  nameWithType: Control.InvokeRequired\n  fullName: Control.InvokeRequired\n- uid: System.Windows.Forms.Control.IsAccessible\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsAccessible\n  nameWithType: Control.IsAccessible\n  fullName: Control.IsAccessible\n- uid: System.Windows.Forms.Control.IsDisposed\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsDisposed\n  nameWithType: Control.IsDisposed\n  fullName: Control.IsDisposed\n- uid: System.Windows.Forms.Control.IsHandleCreated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsHandleCreated\n  nameWithType: Control.IsHandleCreated\n  fullName: Control.IsHandleCreated\n- uid: System.Windows.Forms.Control.IsInputChar(System.Char)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsInputChar(Char)\n  nameWithType: Control.IsInputChar(Char)\n  fullName: Control.IsInputChar(Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsInputKey(Keys)\n  nameWithType: Control.IsInputKey(Keys)\n  fullName: Control.IsInputKey(Keys)\n- uid: System.Windows.Forms.Keys\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Keys\n  nameWithType: Keys\n  fullName: System.Windows.Forms.Keys\n- uid: System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsKeyLocked(Keys)\n  nameWithType: Control.IsKeyLocked(Keys)\n  fullName: Control.IsKeyLocked(Keys)\n- uid: System.Windows.Forms.Control.IsMirrored\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsMirrored\n  nameWithType: Control.IsMirrored\n  fullName: Control.IsMirrored\n- uid: System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsMnemonic(Char, String)\n  nameWithType: Control.IsMnemonic(Char, String)\n  fullName: Control.IsMnemonic(Char, String)\n- uid: System.Windows.Forms.Control.KeyDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyDown\n  nameWithType: Control.KeyDown\n  fullName: Control.KeyDown\n- uid: System.Windows.Forms.KeyEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: KeyEventHandler\n  nameWithType: KeyEventHandler\n  fullName: System.Windows.Forms.KeyEventHandler\n- uid: System.Windows.Forms.Control.KeyPress\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyPress\n  nameWithType: Control.KeyPress\n  fullName: Control.KeyPress\n- uid: System.Windows.Forms.KeyPressEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: KeyPressEventHandler\n  nameWithType: KeyPressEventHandler\n  fullName: System.Windows.Forms.KeyPressEventHandler\n- uid: System.Windows.Forms.Control.KeyUp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyUp\n  nameWithType: Control.KeyUp\n  fullName: Control.KeyUp\n- uid: System.Windows.Forms.Control.Layout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Layout\n  nameWithType: Control.Layout\n  fullName: Control.Layout\n- uid: System.Windows.Forms.LayoutEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: LayoutEventHandler\n  nameWithType: LayoutEventHandler\n  fullName: System.Windows.Forms.LayoutEventHandler\n- uid: System.Windows.Forms.Control.LayoutEngine\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LayoutEngine\n  nameWithType: Control.LayoutEngine\n  fullName: Control.LayoutEngine\n- uid: System.Windows.Forms.Layout.LayoutEngine\n  parent: System.Windows.Forms.Layout\n  isExternal: false\n  name: LayoutEngine\n  nameWithType: LayoutEngine\n  fullName: System.Windows.Forms.Layout.LayoutEngine\n- uid: System.Windows.Forms.Control.Leave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Leave\n  nameWithType: Control.Leave\n  fullName: Control.Leave\n- uid: System.Windows.Forms.Control.Left\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Left\n  nameWithType: Control.Left\n  fullName: Control.Left\n- uid: System.Windows.Forms.Control.Location\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Location\n  nameWithType: Control.Location\n  fullName: Control.Location\n- uid: System.Windows.Forms.Control.LocationChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LocationChanged\n  nameWithType: Control.LocationChanged\n  fullName: Control.LocationChanged\n- uid: System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LogicalToDeviceUnits(Int32)\n  nameWithType: Control.LogicalToDeviceUnits(Int32)\n  fullName: Control.LogicalToDeviceUnits(Int32)\n- uid: System.Windows.Forms.Control.LostFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LostFocus\n  nameWithType: Control.LostFocus\n  fullName: Control.LostFocus\n- uid: System.Windows.Forms.Control.Margin\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Margin\n  nameWithType: Control.Margin\n  fullName: Control.Margin\n- uid: System.Windows.Forms.Control.MarginChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MarginChanged\n  nameWithType: Control.MarginChanged\n  fullName: Control.MarginChanged\n- uid: System.Windows.Forms.Control.MaximumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MaximumSize\n  nameWithType: Control.MaximumSize\n  fullName: Control.MaximumSize\n- uid: System.Windows.Forms.Control.MinimumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MinimumSize\n  nameWithType: Control.MinimumSize\n  fullName: Control.MinimumSize\n- uid: System.Windows.Forms.Control.ModifierKeys\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: Control.ModifierKeys\n  fullName: Control.ModifierKeys\n- uid: System.Windows.Forms.Control.MouseButtons\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseButtons\n  nameWithType: Control.MouseButtons\n  fullName: Control.MouseButtons\n- uid: System.Windows.Forms.MouseButtons\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseButtons\n  nameWithType: MouseButtons\n  fullName: System.Windows.Forms.MouseButtons\n- uid: System.Windows.Forms.Control.MouseCaptureChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseCaptureChanged\n  nameWithType: Control.MouseCaptureChanged\n  fullName: Control.MouseCaptureChanged\n- uid: System.Windows.Forms.Control.MouseClick\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseClick\n  nameWithType: Control.MouseClick\n  fullName: Control.MouseClick\n- uid: System.Windows.Forms.MouseEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseEventHandler\n  nameWithType: MouseEventHandler\n  fullName: System.Windows.Forms.MouseEventHandler\n- uid: System.Windows.Forms.Control.MouseDoubleClick\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseDoubleClick\n  nameWithType: Control.MouseDoubleClick\n  fullName: Control.MouseDoubleClick\n- uid: System.Windows.Forms.Control.MouseDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseDown\n  nameWithType: Control.MouseDown\n  fullName: Control.MouseDown\n- uid: System.Windows.Forms.Control.MouseEnter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseEnter\n  nameWithType: Control.MouseEnter\n  fullName: Control.MouseEnter\n- uid: System.Windows.Forms.Control.MouseHover\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseHover\n  nameWithType: Control.MouseHover\n  fullName: Control.MouseHover\n- uid: System.Windows.Forms.Control.MouseLeave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseLeave\n  nameWithType: Control.MouseLeave\n  fullName: Control.MouseLeave\n- uid: System.Windows.Forms.Control.MouseMove\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseMove\n  nameWithType: Control.MouseMove\n  fullName: Control.MouseMove\n- uid: System.Windows.Forms.Control.MousePosition\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MousePosition\n  nameWithType: Control.MousePosition\n  fullName: Control.MousePosition\n- uid: System.Windows.Forms.Control.MouseUp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseUp\n  nameWithType: Control.MouseUp\n  fullName: Control.MouseUp\n- uid: System.Windows.Forms.Control.MouseWheel\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseWheel\n  nameWithType: Control.MouseWheel\n  fullName: Control.MouseWheel\n- uid: System.Windows.Forms.Control.Move\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Move\n  nameWithType: Control.Move\n  fullName: Control.Move\n- uid: System.Windows.Forms.Control.Name\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Name\n  nameWithType: Control.Name\n  fullName: Control.Name\n- uid: System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: NotifyInvalidate(Rectangle)\n  nameWithType: Control.NotifyInvalidate(Rectangle)\n  fullName: Control.NotifyInvalidate(Rectangle)\n- uid: System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnAutoSizeChanged(EventArgs)\n  nameWithType: Control.OnAutoSizeChanged(EventArgs)\n  fullName: Control.OnAutoSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackColorChanged(EventArgs)\n  nameWithType: Control.OnBackColorChanged(EventArgs)\n  fullName: Control.OnBackColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackgroundImageChanged(EventArgs)\n  nameWithType: Control.OnBackgroundImageChanged(EventArgs)\n  fullName: Control.OnBackgroundImageChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackgroundImageLayoutChanged(EventArgs)\n  nameWithType: Control.OnBackgroundImageLayoutChanged(EventArgs)\n  fullName: Control.OnBackgroundImageLayoutChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBindingContextChanged(EventArgs)\n  nameWithType: Control.OnBindingContextChanged(EventArgs)\n  fullName: Control.OnBindingContextChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCausesValidationChanged(EventArgs)\n  nameWithType: Control.OnCausesValidationChanged(EventArgs)\n  fullName: Control.OnCausesValidationChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnChangeUICues(UICuesEventArgs)\n  nameWithType: Control.OnChangeUICues(UICuesEventArgs)\n  fullName: Control.OnChangeUICues(UICuesEventArgs)\n- uid: System.Windows.Forms.UICuesEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: UICuesEventArgs\n  nameWithType: UICuesEventArgs\n  fullName: System.Windows.Forms.UICuesEventArgs\n- uid: System.Windows.Forms.Control.OnClick(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnClick(EventArgs)\n  nameWithType: Control.OnClick(EventArgs)\n  fullName: Control.OnClick(EventArgs)\n- uid: System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnClientSizeChanged(EventArgs)\n  nameWithType: Control.OnClientSizeChanged(EventArgs)\n  fullName: Control.OnClientSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnContextMenuChanged(EventArgs)\n  nameWithType: Control.OnContextMenuChanged(EventArgs)\n  fullName: Control.OnContextMenuChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnContextMenuStripChanged(EventArgs)\n  nameWithType: Control.OnContextMenuStripChanged(EventArgs)\n  fullName: Control.OnContextMenuStripChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnControlAdded(ControlEventArgs)\n  nameWithType: Control.OnControlAdded(ControlEventArgs)\n  fullName: Control.OnControlAdded(ControlEventArgs)\n- uid: System.Windows.Forms.ControlEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ControlEventArgs\n  nameWithType: ControlEventArgs\n  fullName: System.Windows.Forms.ControlEventArgs\n- uid: System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnControlRemoved(ControlEventArgs)\n  nameWithType: Control.OnControlRemoved(ControlEventArgs)\n  fullName: Control.OnControlRemoved(ControlEventArgs)\n- uid: System.Windows.Forms.Control.OnCreateControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCreateControl()\n  nameWithType: Control.OnCreateControl()\n  fullName: Control.OnCreateControl()\n- uid: System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCursorChanged(EventArgs)\n  nameWithType: Control.OnCursorChanged(EventArgs)\n  fullName: Control.OnCursorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDockChanged(EventArgs)\n  nameWithType: Control.OnDockChanged(EventArgs)\n  fullName: Control.OnDockChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDoubleClick(EventArgs)\n  nameWithType: Control.OnDoubleClick(EventArgs)\n  fullName: Control.OnDoubleClick(EventArgs)\n- uid: System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDpiChangedAfterParent(EventArgs)\n  nameWithType: Control.OnDpiChangedAfterParent(EventArgs)\n  fullName: Control.OnDpiChangedAfterParent(EventArgs)\n- uid: System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDpiChangedBeforeParent(EventArgs)\n  nameWithType: Control.OnDpiChangedBeforeParent(EventArgs)\n  fullName: Control.OnDpiChangedBeforeParent(EventArgs)\n- uid: System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragDrop(DragEventArgs)\n  nameWithType: Control.OnDragDrop(DragEventArgs)\n  fullName: Control.OnDragDrop(DragEventArgs)\n- uid: System.Windows.Forms.DragEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DragEventArgs\n  nameWithType: DragEventArgs\n  fullName: System.Windows.Forms.DragEventArgs\n- uid: System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragEnter(DragEventArgs)\n  nameWithType: Control.OnDragEnter(DragEventArgs)\n  fullName: Control.OnDragEnter(DragEventArgs)\n- uid: System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragLeave(EventArgs)\n  nameWithType: Control.OnDragLeave(EventArgs)\n  fullName: Control.OnDragLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragOver(DragEventArgs)\n  nameWithType: Control.OnDragOver(DragEventArgs)\n  fullName: Control.OnDragOver(DragEventArgs)\n- uid: System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnEnabledChanged(EventArgs)\n  nameWithType: Control.OnEnabledChanged(EventArgs)\n  fullName: Control.OnEnabledChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnEnter(EventArgs)\n  nameWithType: Control.OnEnter(EventArgs)\n  fullName: Control.OnEnter(EventArgs)\n- uid: System.Windows.Forms.Control.OnFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnFontChanged(EventArgs)\n  nameWithType: Control.OnFontChanged(EventArgs)\n  fullName: Control.OnFontChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnForeColorChanged(EventArgs)\n  nameWithType: Control.OnForeColorChanged(EventArgs)\n  fullName: Control.OnForeColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: Control.OnGiveFeedback(GiveFeedbackEventArgs)\n  fullName: Control.OnGiveFeedback(GiveFeedbackEventArgs)\n- uid: System.Windows.Forms.GiveFeedbackEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: GiveFeedbackEventArgs\n  nameWithType: GiveFeedbackEventArgs\n  fullName: System.Windows.Forms.GiveFeedbackEventArgs\n- uid: System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnGotFocus(EventArgs)\n  nameWithType: Control.OnGotFocus(EventArgs)\n  fullName: Control.OnGotFocus(EventArgs)\n- uid: System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnHandleCreated(EventArgs)\n  nameWithType: Control.OnHandleCreated(EventArgs)\n  fullName: Control.OnHandleCreated(EventArgs)\n- uid: System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnHandleDestroyed(EventArgs)\n  nameWithType: Control.OnHandleDestroyed(EventArgs)\n  fullName: Control.OnHandleDestroyed(EventArgs)\n- uid: System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnHelpRequested(HelpEventArgs)\n  nameWithType: Control.OnHelpRequested(HelpEventArgs)\n  fullName: Control.OnHelpRequested(HelpEventArgs)\n- uid: System.Windows.Forms.HelpEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HelpEventArgs\n  nameWithType: HelpEventArgs\n  fullName: System.Windows.Forms.HelpEventArgs\n- uid: System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnImeModeChanged(EventArgs)\n  nameWithType: Control.OnImeModeChanged(EventArgs)\n  fullName: Control.OnImeModeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnInvalidated(InvalidateEventArgs)\n  nameWithType: Control.OnInvalidated(InvalidateEventArgs)\n  fullName: Control.OnInvalidated(InvalidateEventArgs)\n- uid: System.Windows.Forms.InvalidateEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InvalidateEventArgs\n  nameWithType: InvalidateEventArgs\n  fullName: System.Windows.Forms.InvalidateEventArgs\n- uid: System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: Control.OnKeyDown(KeyEventArgs)\n  fullName: Control.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Forms.KeyEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs\n  fullName: System.Windows.Forms.KeyEventArgs\n- uid: System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyPress(KeyPressEventArgs)\n  nameWithType: Control.OnKeyPress(KeyPressEventArgs)\n  fullName: Control.OnKeyPress(KeyPressEventArgs)\n- uid: System.Windows.Forms.KeyPressEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: KeyPressEventArgs\n  nameWithType: KeyPressEventArgs\n  fullName: System.Windows.Forms.KeyPressEventArgs\n- uid: System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: Control.OnKeyUp(KeyEventArgs)\n  fullName: Control.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLayout(LayoutEventArgs)\n  nameWithType: Control.OnLayout(LayoutEventArgs)\n  fullName: Control.OnLayout(LayoutEventArgs)\n- uid: System.Windows.Forms.LayoutEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: LayoutEventArgs\n  nameWithType: LayoutEventArgs\n  fullName: System.Windows.Forms.LayoutEventArgs\n- uid: System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLeave(EventArgs)\n  nameWithType: Control.OnLeave(EventArgs)\n  fullName: Control.OnLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLocationChanged(EventArgs)\n  nameWithType: Control.OnLocationChanged(EventArgs)\n  fullName: Control.OnLocationChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLostFocus(EventArgs)\n  nameWithType: Control.OnLostFocus(EventArgs)\n  fullName: Control.OnLostFocus(EventArgs)\n- uid: System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMarginChanged(EventArgs)\n  nameWithType: Control.OnMarginChanged(EventArgs)\n  fullName: Control.OnMarginChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseCaptureChanged(EventArgs)\n  nameWithType: Control.OnMouseCaptureChanged(EventArgs)\n  fullName: Control.OnMouseCaptureChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseClick(MouseEventArgs)\n  nameWithType: Control.OnMouseClick(MouseEventArgs)\n  fullName: Control.OnMouseClick(MouseEventArgs)\n- uid: System.Windows.Forms.MouseEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs\n  fullName: System.Windows.Forms.MouseEventArgs\n- uid: System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseDoubleClick(MouseEventArgs)\n  nameWithType: Control.OnMouseDoubleClick(MouseEventArgs)\n  fullName: Control.OnMouseDoubleClick(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseDown(MouseEventArgs)\n  nameWithType: Control.OnMouseDown(MouseEventArgs)\n  fullName: Control.OnMouseDown(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseEnter(EventArgs)\n  nameWithType: Control.OnMouseEnter(EventArgs)\n  fullName: Control.OnMouseEnter(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseHover(EventArgs)\n  nameWithType: Control.OnMouseHover(EventArgs)\n  fullName: Control.OnMouseHover(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseLeave(EventArgs)\n  nameWithType: Control.OnMouseLeave(EventArgs)\n  fullName: Control.OnMouseLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: Control.OnMouseMove(MouseEventArgs)\n  fullName: Control.OnMouseMove(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: Control.OnMouseUp(MouseEventArgs)\n  fullName: Control.OnMouseUp(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseWheel(MouseEventArgs)\n  nameWithType: Control.OnMouseWheel(MouseEventArgs)\n  fullName: Control.OnMouseWheel(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMove(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMove(EventArgs)\n  nameWithType: Control.OnMove(EventArgs)\n  fullName: Control.OnMove(EventArgs)\n- uid: System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnNotifyMessage(Message)\n  nameWithType: Control.OnNotifyMessage(Message)\n  fullName: Control.OnNotifyMessage(Message)\n- uid: System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPaddingChanged(EventArgs)\n  nameWithType: Control.OnPaddingChanged(EventArgs)\n  fullName: Control.OnPaddingChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPaint(PaintEventArgs)\n  nameWithType: Control.OnPaint(PaintEventArgs)\n  fullName: Control.OnPaint(PaintEventArgs)\n- uid: System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPaintBackground(PaintEventArgs)\n  nameWithType: Control.OnPaintBackground(PaintEventArgs)\n  fullName: Control.OnPaintBackground(PaintEventArgs)\n- uid: System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBackColorChanged(EventArgs)\n  nameWithType: Control.OnParentBackColorChanged(EventArgs)\n  fullName: Control.OnParentBackColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBackgroundImageChanged(EventArgs)\n  nameWithType: Control.OnParentBackgroundImageChanged(EventArgs)\n  fullName: Control.OnParentBackgroundImageChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBindingContextChanged(EventArgs)\n  nameWithType: Control.OnParentBindingContextChanged(EventArgs)\n  fullName: Control.OnParentBindingContextChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentChanged(EventArgs)\n  nameWithType: Control.OnParentChanged(EventArgs)\n  fullName: Control.OnParentChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentCursorChanged(EventArgs)\n  nameWithType: Control.OnParentCursorChanged(EventArgs)\n  fullName: Control.OnParentCursorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentEnabledChanged(EventArgs)\n  nameWithType: Control.OnParentEnabledChanged(EventArgs)\n  fullName: Control.OnParentEnabledChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentFontChanged(EventArgs)\n  nameWithType: Control.OnParentFontChanged(EventArgs)\n  fullName: Control.OnParentFontChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentForeColorChanged(EventArgs)\n  nameWithType: Control.OnParentForeColorChanged(EventArgs)\n  fullName: Control.OnParentForeColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentRightToLeftChanged(EventArgs)\n  nameWithType: Control.OnParentRightToLeftChanged(EventArgs)\n  fullName: Control.OnParentRightToLeftChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentVisibleChanged(EventArgs)\n  nameWithType: Control.OnParentVisibleChanged(EventArgs)\n  fullName: Control.OnParentVisibleChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  nameWithType: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  fullName: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)\n- uid: System.Windows.Forms.PreviewKeyDownEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PreviewKeyDownEventArgs\n  nameWithType: PreviewKeyDownEventArgs\n  fullName: System.Windows.Forms.PreviewKeyDownEventArgs\n- uid: System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPrint(PaintEventArgs)\n  nameWithType: Control.OnPrint(PaintEventArgs)\n  fullName: Control.OnPrint(PaintEventArgs)\n- uid: System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)\n- uid: System.Windows.Forms.QueryContinueDragEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: QueryContinueDragEventArgs\n  nameWithType: QueryContinueDragEventArgs\n  fullName: System.Windows.Forms.QueryContinueDragEventArgs\n- uid: System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnRegionChanged(EventArgs)\n  nameWithType: Control.OnRegionChanged(EventArgs)\n  fullName: Control.OnRegionChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnResize(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnResize(EventArgs)\n  nameWithType: Control.OnResize(EventArgs)\n  fullName: Control.OnResize(EventArgs)\n- uid: System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnRightToLeftChanged(EventArgs)\n  nameWithType: Control.OnRightToLeftChanged(EventArgs)\n  fullName: Control.OnRightToLeftChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnSizeChanged(EventArgs)\n  nameWithType: Control.OnSizeChanged(EventArgs)\n  fullName: Control.OnSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnStyleChanged(EventArgs)\n  nameWithType: Control.OnStyleChanged(EventArgs)\n  fullName: Control.OnStyleChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnSystemColorsChanged(EventArgs)\n  nameWithType: Control.OnSystemColorsChanged(EventArgs)\n  fullName: Control.OnSystemColorsChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTabIndexChanged(EventArgs)\n  nameWithType: Control.OnTabIndexChanged(EventArgs)\n  fullName: Control.OnTabIndexChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTabStopChanged(EventArgs)\n  nameWithType: Control.OnTabStopChanged(EventArgs)\n  fullName: Control.OnTabStopChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTextChanged(EventArgs)\n  nameWithType: Control.OnTextChanged(EventArgs)\n  fullName: Control.OnTextChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnValidated(EventArgs)\n  nameWithType: Control.OnValidated(EventArgs)\n  fullName: Control.OnValidated(EventArgs)\n- uid: System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnValidating(CancelEventArgs)\n  nameWithType: Control.OnValidating(CancelEventArgs)\n  fullName: Control.OnValidating(CancelEventArgs)\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnVisibleChanged(EventArgs)\n  nameWithType: Control.OnVisibleChanged(EventArgs)\n  fullName: Control.OnVisibleChanged(EventArgs)\n- uid: System.Windows.Forms.Control.Padding\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Padding\n  nameWithType: Control.Padding\n  fullName: Control.Padding\n- uid: System.Windows.Forms.Control.PaddingChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PaddingChanged\n  nameWithType: Control.PaddingChanged\n  fullName: Control.PaddingChanged\n- uid: System.Windows.Forms.Control.Paint\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Paint\n  nameWithType: Control.Paint\n  fullName: Control.Paint\n- uid: System.Windows.Forms.PaintEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PaintEventHandler\n  nameWithType: PaintEventHandler\n  fullName: System.Windows.Forms.PaintEventHandler\n- uid: System.Windows.Forms.Control.Parent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Parent\n  nameWithType: Control.Parent\n  fullName: Control.Parent\n- uid: System.Windows.Forms.Control.ParentChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ParentChanged\n  nameWithType: Control.ParentChanged\n  fullName: Control.ParentChanged\n- uid: System.Windows.Forms.Control.PerformLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PerformLayout()\n  nameWithType: Control.PerformLayout()\n  fullName: Control.PerformLayout()\n- uid: System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PerformLayout(Control, String)\n  nameWithType: Control.PerformLayout(Control, String)\n  fullName: Control.PerformLayout(Control, String)\n- uid: System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PointToClient(Point)\n  nameWithType: Control.PointToClient(Point)\n  fullName: Control.PointToClient(Point)\n- uid: System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PointToScreen(Point)\n  nameWithType: Control.PointToScreen(Point)\n  fullName: Control.PointToScreen(Point)\n- uid: System.Windows.Forms.Control.PreferredSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreferredSize\n  nameWithType: Control.PreferredSize\n  fullName: Control.PreferredSize\n- uid: System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreProcessControlMessage(Message)\n  nameWithType: Control.PreProcessControlMessage(Message)\n  fullName: Control.PreProcessControlMessage(Message)\n- uid: System.Windows.Forms.PreProcessControlState\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PreProcessControlState\n  nameWithType: PreProcessControlState\n  fullName: System.Windows.Forms.PreProcessControlState\n- uid: System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreProcessMessage(Message)\n  nameWithType: Control.PreProcessMessage(Message)\n  fullName: Control.PreProcessMessage(Message)\n- uid: System.Windows.Forms.Control.PreviewKeyDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreviewKeyDown\n  nameWithType: Control.PreviewKeyDown\n  fullName: Control.PreviewKeyDown\n- uid: System.Windows.Forms.PreviewKeyDownEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PreviewKeyDownEventHandler\n  nameWithType: PreviewKeyDownEventHandler\n  fullName: System.Windows.Forms.PreviewKeyDownEventHandler\n- uid: System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessCmdKey(Message, Keys)\n  nameWithType: Control.ProcessCmdKey(Message, Keys)\n  fullName: Control.ProcessCmdKey(Message, Keys)\n- uid: System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessDialogChar(Char)\n  nameWithType: Control.ProcessDialogChar(Char)\n  fullName: Control.ProcessDialogChar(Char)\n- uid: System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessDialogKey(Keys)\n  nameWithType: Control.ProcessDialogKey(Keys)\n  fullName: Control.ProcessDialogKey(Keys)\n- uid: System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyEventArgs(Message)\n  nameWithType: Control.ProcessKeyEventArgs(Message)\n  fullName: Control.ProcessKeyEventArgs(Message)\n- uid: System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyMessage(Message)\n  nameWithType: Control.ProcessKeyMessage(Message)\n  fullName: Control.ProcessKeyMessage(Message)\n- uid: System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyPreview(Message)\n  nameWithType: Control.ProcessKeyPreview(Message)\n  fullName: Control.ProcessKeyPreview(Message)\n- uid: System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessMnemonic(Char)\n  nameWithType: Control.ProcessMnemonic(Char)\n  fullName: Control.ProcessMnemonic(Char)\n- uid: System.Windows.Forms.Control.ProductName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProductName\n  nameWithType: Control.ProductName\n  fullName: Control.ProductName\n- uid: System.Windows.Forms.Control.ProductVersion\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProductVersion\n  nameWithType: Control.ProductVersion\n  fullName: Control.ProductVersion\n- uid: System.Windows.Forms.Control.PropagatingImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PropagatingImeMode\n  nameWithType: Control.PropagatingImeMode\n  fullName: Control.PropagatingImeMode\n- uid: System.Windows.Forms.Control.QueryAccessibilityHelp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: QueryAccessibilityHelp\n  nameWithType: Control.QueryAccessibilityHelp\n  fullName: Control.QueryAccessibilityHelp\n- uid: System.Windows.Forms.QueryAccessibilityHelpEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: QueryAccessibilityHelpEventHandler\n  nameWithType: QueryAccessibilityHelpEventHandler\n  fullName: System.Windows.Forms.QueryAccessibilityHelpEventHandler\n- uid: System.Windows.Forms.Control.QueryContinueDrag\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: QueryContinueDrag\n  nameWithType: Control.QueryContinueDrag\n  fullName: Control.QueryContinueDrag\n- uid: System.Windows.Forms.QueryContinueDragEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: QueryContinueDragEventHandler\n  nameWithType: QueryContinueDragEventHandler\n  fullName: System.Windows.Forms.QueryContinueDragEventHandler\n- uid: System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseDragEvent(Object, DragEventArgs)\n  nameWithType: Control.RaiseDragEvent(Object, DragEventArgs)\n  fullName: Control.RaiseDragEvent(Object, DragEventArgs)\n- uid: System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseKeyEvent(Object, KeyEventArgs)\n  nameWithType: Control.RaiseKeyEvent(Object, KeyEventArgs)\n  fullName: Control.RaiseKeyEvent(Object, KeyEventArgs)\n- uid: System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseMouseEvent(Object, MouseEventArgs)\n  nameWithType: Control.RaiseMouseEvent(Object, MouseEventArgs)\n  fullName: Control.RaiseMouseEvent(Object, MouseEventArgs)\n- uid: System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaisePaintEvent(Object, PaintEventArgs)\n  nameWithType: Control.RaisePaintEvent(Object, PaintEventArgs)\n  fullName: Control.RaisePaintEvent(Object, PaintEventArgs)\n- uid: System.Windows.Forms.Control.RecreateHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RecreateHandle()\n  nameWithType: Control.RecreateHandle()\n  fullName: Control.RecreateHandle()\n- uid: System.Windows.Forms.Control.RecreatingHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RecreatingHandle\n  nameWithType: Control.RecreatingHandle\n  fullName: Control.RecreatingHandle\n- uid: System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RectangleToClient(Rectangle)\n  nameWithType: Control.RectangleToClient(Rectangle)\n  fullName: Control.RectangleToClient(Rectangle)\n- uid: System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RectangleToScreen(Rectangle)\n  nameWithType: Control.RectangleToScreen(Rectangle)\n  fullName: Control.RectangleToScreen(Rectangle)\n- uid: System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ReflectMessage(IntPtr, Message)\n  nameWithType: Control.ReflectMessage(IntPtr, Message)\n  fullName: Control.ReflectMessage(IntPtr, Message)\n- uid: System.Windows.Forms.Control.Refresh\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Refresh()\n  nameWithType: Control.Refresh()\n  fullName: Control.Refresh()\n- uid: System.Windows.Forms.Control.Region\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Region\n  nameWithType: Control.Region\n  fullName: Control.Region\n- uid: System.Windows.Forms.Control.RegionChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RegionChanged\n  nameWithType: Control.RegionChanged\n  fullName: Control.RegionChanged\n- uid: System.Windows.Forms.Control.RenderRightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RenderRightToLeft\n  nameWithType: Control.RenderRightToLeft\n  fullName: Control.RenderRightToLeft\n- uid: System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RescaleConstantsForDpi(Int32, Int32)\n  nameWithType: Control.RescaleConstantsForDpi(Int32, Int32)\n  fullName: Control.RescaleConstantsForDpi(Int32, Int32)\n- uid: System.Windows.Forms.Control.ResetBackColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetBackColor()\n  nameWithType: Control.ResetBackColor()\n  fullName: Control.ResetBackColor()\n- uid: System.Windows.Forms.Control.ResetBindings\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetBindings()\n  nameWithType: Control.ResetBindings()\n  fullName: Control.ResetBindings()\n- uid: System.Windows.Forms.Control.ResetCursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetCursor()\n  nameWithType: Control.ResetCursor()\n  fullName: Control.ResetCursor()\n- uid: System.Windows.Forms.Control.ResetFont\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetFont()\n  nameWithType: Control.ResetFont()\n  fullName: Control.ResetFont()\n- uid: System.Windows.Forms.Control.ResetForeColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetForeColor()\n  nameWithType: Control.ResetForeColor()\n  fullName: Control.ResetForeColor()\n- uid: System.Windows.Forms.Control.ResetImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetImeMode()\n  nameWithType: Control.ResetImeMode()\n  fullName: Control.ResetImeMode()\n- uid: System.Windows.Forms.Control.ResetMouseEventArgs\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetMouseEventArgs()\n  nameWithType: Control.ResetMouseEventArgs()\n  fullName: Control.ResetMouseEventArgs()\n- uid: System.Windows.Forms.Control.ResetRightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetRightToLeft()\n  nameWithType: Control.ResetRightToLeft()\n  fullName: Control.ResetRightToLeft()\n- uid: System.Windows.Forms.Control.ResetText\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetText()\n  nameWithType: Control.ResetText()\n  fullName: Control.ResetText()\n- uid: System.Windows.Forms.Control.Resize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Resize\n  nameWithType: Control.Resize\n  fullName: Control.Resize\n- uid: System.Windows.Forms.Control.ResizeRedraw\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResizeRedraw\n  nameWithType: Control.ResizeRedraw\n  fullName: Control.ResizeRedraw\n- uid: System.Windows.Forms.Control.ResumeLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResumeLayout()\n  nameWithType: Control.ResumeLayout()\n  fullName: Control.ResumeLayout()\n- uid: System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResumeLayout(Boolean)\n  nameWithType: Control.ResumeLayout(Boolean)\n  fullName: Control.ResumeLayout(Boolean)\n- uid: System.Windows.Forms.Control.Right\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Right\n  nameWithType: Control.Right\n  fullName: Control.Right\n- uid: System.Windows.Forms.Control.RightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RightToLeft\n  nameWithType: Control.RightToLeft\n  fullName: Control.RightToLeft\n- uid: System.Windows.Forms.RightToLeft\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RightToLeft\n  nameWithType: RightToLeft\n  fullName: System.Windows.Forms.RightToLeft\n- uid: System.Windows.Forms.Control.RightToLeftChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RightToLeftChanged\n  nameWithType: Control.RightToLeftChanged\n  fullName: Control.RightToLeftChanged\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(LeftRightAlignment)\n  nameWithType: Control.RtlTranslateAlignment(LeftRightAlignment)\n  fullName: Control.RtlTranslateAlignment(LeftRightAlignment)\n- uid: System.Windows.Forms.LeftRightAlignment\n  parent: System.Windows.Forms\n  isExternal: false\n  name: LeftRightAlignment\n  nameWithType: LeftRightAlignment\n  fullName: System.Windows.Forms.LeftRightAlignment\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(HorizontalAlignment)\n  nameWithType: Control.RtlTranslateAlignment(HorizontalAlignment)\n  fullName: Control.RtlTranslateAlignment(HorizontalAlignment)\n- uid: System.Windows.Forms.HorizontalAlignment\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HorizontalAlignment\n  nameWithType: HorizontalAlignment\n  fullName: System.Windows.Forms.HorizontalAlignment\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(ContentAlignment)\n  nameWithType: Control.RtlTranslateAlignment(ContentAlignment)\n  fullName: Control.RtlTranslateAlignment(ContentAlignment)\n- uid: System.Drawing.ContentAlignment\n  parent: System.Drawing\n  isExternal: false\n  name: ContentAlignment\n  nameWithType: ContentAlignment\n  fullName: System.Drawing.ContentAlignment\n- uid: System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateContent(ContentAlignment)\n  nameWithType: Control.RtlTranslateContent(ContentAlignment)\n  fullName: Control.RtlTranslateContent(ContentAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateHorizontal(HorizontalAlignment)\n  nameWithType: Control.RtlTranslateHorizontal(HorizontalAlignment)\n  fullName: Control.RtlTranslateHorizontal(HorizontalAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateLeftRight(LeftRightAlignment)\n  nameWithType: Control.RtlTranslateLeftRight(LeftRightAlignment)\n  fullName: Control.RtlTranslateLeftRight(LeftRightAlignment)\n- uid: System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(SizeF)\n  nameWithType: Control.Scale(SizeF)\n  fullName: Control.Scale(SizeF)\n- uid: System.Windows.Forms.Control.Scale(System.Single)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(Single)\n  nameWithType: Control.Scale(Single)\n  fullName: Control.Scale(Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(Single, Single)\n  nameWithType: Control.Scale(Single, Single)\n  fullName: Control.Scale(Single, Single)\n- uid: System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleBitmapLogicalToDevice(Bitmap)\n  nameWithType: Control.ScaleBitmapLogicalToDevice(Bitmap)\n  fullName: Control.ScaleBitmapLogicalToDevice(Bitmap)\n- uid: System.Windows.Forms.Control.ScaleChildren\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleChildren\n  nameWithType: Control.ScaleChildren\n  fullName: Control.ScaleChildren\n- uid: System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleControl(SizeF, BoundsSpecified)\n  nameWithType: Control.ScaleControl(SizeF, BoundsSpecified)\n  fullName: Control.ScaleControl(SizeF, BoundsSpecified)\n- uid: System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleCore(Single, Single)\n  nameWithType: Control.ScaleCore(Single, Single)\n  fullName: Control.ScaleCore(Single, Single)\n- uid: System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Select(Boolean, Boolean)\n  nameWithType: Control.Select(Boolean, Boolean)\n  fullName: Control.Select(Boolean, Boolean)\n- uid: System.Windows.Forms.Control.Select\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Select()\n  nameWithType: Control.Select()\n  fullName: Control.Select()\n- uid: System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  nameWithType: Control.SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  fullName: Control.SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n- uid: System.Windows.Forms.Control.SendToBack\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SendToBack()\n  nameWithType: Control.SendToBack()\n  fullName: Control.SendToBack()\n- uid: System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetAutoSizeMode(AutoSizeMode)\n  nameWithType: Control.SetAutoSizeMode(AutoSizeMode)\n  fullName: Control.SetAutoSizeMode(AutoSizeMode)\n- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Control.SetBounds(Int32, Int32, Int32, Int32)\n  fullName: Control.SetBounds(Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n- uid: System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n- uid: System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetClientSizeCore(Int32, Int32)\n  nameWithType: Control.SetClientSizeCore(Int32, Int32)\n  fullName: Control.SetClientSizeCore(Int32, Int32)\n- uid: System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetStyle(ControlStyles, Boolean)\n  nameWithType: Control.SetStyle(ControlStyles, Boolean)\n  fullName: Control.SetStyle(ControlStyles, Boolean)\n- uid: System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetTopLevel(Boolean)\n  nameWithType: Control.SetTopLevel(Boolean)\n  fullName: Control.SetTopLevel(Boolean)\n- uid: System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetVisibleCore(Boolean)\n  nameWithType: Control.SetVisibleCore(Boolean)\n  fullName: Control.SetVisibleCore(Boolean)\n- uid: System.Windows.Forms.Control.Show\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Show()\n  nameWithType: Control.Show()\n  fullName: Control.Show()\n- uid: System.Windows.Forms.Control.ShowFocusCues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ShowFocusCues\n  nameWithType: Control.ShowFocusCues\n  fullName: Control.ShowFocusCues\n- uid: System.Windows.Forms.Control.ShowKeyboardCues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ShowKeyboardCues\n  nameWithType: Control.ShowKeyboardCues\n  fullName: Control.ShowKeyboardCues\n- uid: System.Windows.Forms.Control.Site\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Site\n  nameWithType: Control.Site\n  fullName: Control.Site\n- uid: System.ComponentModel.ISite\n  parent: System.ComponentModel\n  isExternal: false\n  name: ISite\n  nameWithType: ISite\n  fullName: System.ComponentModel.ISite\n- uid: System.Windows.Forms.Control.Size\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Size\n  nameWithType: Control.Size\n  fullName: Control.Size\n- uid: System.Windows.Forms.Control.SizeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SizeChanged\n  nameWithType: Control.SizeChanged\n  fullName: Control.SizeChanged\n- uid: System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SizeFromClientSize(Size)\n  nameWithType: Control.SizeFromClientSize(Size)\n  fullName: Control.SizeFromClientSize(Size)\n- uid: System.Windows.Forms.Control.StyleChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: StyleChanged\n  nameWithType: Control.StyleChanged\n  fullName: Control.StyleChanged\n- uid: System.Windows.Forms.Control.SuspendLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SuspendLayout()\n  nameWithType: Control.SuspendLayout()\n  fullName: Control.SuspendLayout()\n- uid: System.Windows.Forms.Control.SystemColorsChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SystemColorsChanged\n  nameWithType: Control.SystemColorsChanged\n  fullName: Control.SystemColorsChanged\n- uid: System.Windows.Forms.Control.TabIndex\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabIndex\n  nameWithType: Control.TabIndex\n  fullName: Control.TabIndex\n- uid: System.Windows.Forms.Control.TabIndexChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabIndexChanged\n  nameWithType: Control.TabIndexChanged\n  fullName: Control.TabIndexChanged\n- uid: System.Windows.Forms.Control.TabStop\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabStop\n  nameWithType: Control.TabStop\n  fullName: Control.TabStop\n- uid: System.Windows.Forms.Control.TabStopChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabStopChanged\n  nameWithType: Control.TabStopChanged\n  fullName: Control.TabStopChanged\n- uid: System.Windows.Forms.Control.Tag\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Tag\n  nameWithType: Control.Tag\n  fullName: Control.Tag\n- uid: System.Windows.Forms.Control.Text\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Text\n  nameWithType: Control.Text\n  fullName: Control.Text\n- uid: System.Windows.Forms.Control.TextChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TextChanged\n  nameWithType: Control.TextChanged\n  fullName: Control.TextChanged\n- uid: System.Windows.Forms.Control.Top\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Top\n  nameWithType: Control.Top\n  fullName: Control.Top\n- uid: System.Windows.Forms.Control.TopLevelControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TopLevelControl\n  nameWithType: Control.TopLevelControl\n  fullName: Control.TopLevelControl\n- uid: System.Windows.Forms.Control.Update\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Update()\n  nameWithType: Control.Update()\n  fullName: Control.Update()\n- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Control.UpdateBounds(Int32, Int32, Int32, Int32)\n  fullName: Control.UpdateBounds(Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.UpdateBounds\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds()\n  nameWithType: Control.UpdateBounds()\n  fullName: Control.UpdateBounds()\n- uid: System.Windows.Forms.Control.UpdateStyles\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateStyles()\n  nameWithType: Control.UpdateStyles()\n  fullName: Control.UpdateStyles()\n- uid: System.Windows.Forms.Control.UpdateZOrder\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateZOrder()\n  nameWithType: Control.UpdateZOrder()\n  fullName: Control.UpdateZOrder()\n- uid: System.Windows.Forms.Control.UseWaitCursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UseWaitCursor\n  nameWithType: Control.UseWaitCursor\n  fullName: Control.UseWaitCursor\n- uid: System.Windows.Forms.Control.Validated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Validated\n  nameWithType: Control.Validated\n  fullName: Control.Validated\n- uid: System.Windows.Forms.Control.Validating\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Validating\n  nameWithType: Control.Validating\n  fullName: Control.Validating\n- uid: System.ComponentModel.CancelEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventHandler\n  nameWithType: CancelEventHandler\n  fullName: System.ComponentModel.CancelEventHandler\n- uid: System.Windows.Forms.Control.Visible\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Visible\n  nameWithType: Control.Visible\n  fullName: Control.Visible\n- uid: System.Windows.Forms.Control.VisibleChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: VisibleChanged\n  nameWithType: Control.VisibleChanged\n  fullName: Control.VisibleChanged\n- uid: System.Windows.Forms.Control.Width\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Width\n  nameWithType: Control.Width\n  fullName: Control.Width\n- uid: System.Windows.Forms.Control.WindowTarget\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: WindowTarget\n  nameWithType: Control.WindowTarget\n  fullName: Control.WindowTarget\n- uid: System.Windows.Forms.IWindowTarget\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IWindowTarget\n  nameWithType: IWindowTarget\n  fullName: System.Windows.Forms.IWindowTarget\n- uid: System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: WndProc(Message)\n  nameWithType: Control.WndProc(Message)\n  fullName: Control.WndProc(Message)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragDrop(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragDrop(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragDrop(DragEventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragEnter(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragEnter(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragEnter(DragEventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragLeave(EventArgs)\n  nameWithType: Control.IDropTarget.OnDragLeave(EventArgs)\n  fullName: Control.IDropTarget.OnDragLeave(EventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragOver(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragOver(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragOver(DragEventArgs)\n- uid: System.Windows.Forms.Control.#ctor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Control\n  nameWithType: Control.Control\n  fullName: Control.Control\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityNotifyClients\n  nameWithType: Control.AccessibilityNotifyClients\n  fullName: Control.AccessibilityNotifyClients\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AccessibilityObject*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityObject\n  nameWithType: Control.AccessibilityObject\n  fullName: Control.AccessibilityObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleDefaultActionDescription\n  nameWithType: Control.AccessibleDefaultActionDescription\n  fullName: Control.AccessibleDefaultActionDescription\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AccessibleDescription*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleDescription\n  nameWithType: Control.AccessibleDescription\n  fullName: Control.AccessibleDescription\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AccessibleName*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleName\n  nameWithType: Control.AccessibleName\n  fullName: Control.AccessibleName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AccessibleRole*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleRole\n  nameWithType: Control.AccessibleRole\n  fullName: Control.AccessibleRole\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AllowDrop*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AllowDrop\n  nameWithType: Control.AllowDrop\n  fullName: Control.AllowDrop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Anchor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Anchor\n  nameWithType: Control.Anchor\n  fullName: Control.Anchor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AutoScrollOffset*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AutoScrollOffset\n  nameWithType: Control.AutoScrollOffset\n  fullName: Control.AutoScrollOffset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.AutoSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AutoSize\n  nameWithType: Control.AutoSize\n  fullName: Control.AutoSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.BackColor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackColor\n  nameWithType: Control.BackColor\n  fullName: Control.BackColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.BackgroundImage*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImage\n  nameWithType: Control.BackgroundImage\n  fullName: Control.BackgroundImage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.BackgroundImageLayout*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImageLayout\n  nameWithType: Control.BackgroundImageLayout\n  fullName: Control.BackgroundImageLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.BeginInvoke*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BeginInvoke\n  nameWithType: Control.BeginInvoke\n  fullName: Control.BeginInvoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.BindingContext*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BindingContext\n  nameWithType: Control.BindingContext\n  fullName: Control.BindingContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Bottom*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Bottom\n  nameWithType: Control.Bottom\n  fullName: Control.Bottom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Bounds*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Bounds\n  nameWithType: Control.Bounds\n  fullName: Control.Bounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.BringToFront*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BringToFront\n  nameWithType: Control.BringToFront\n  fullName: Control.BringToFront\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CanEnableIme*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanEnableIme\n  nameWithType: Control.CanEnableIme\n  fullName: Control.CanEnableIme\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CanFocus*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanFocus\n  nameWithType: Control.CanFocus\n  fullName: Control.CanFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CanRaiseEvents*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Control.CanRaiseEvents\n  fullName: Control.CanRaiseEvents\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CanSelect*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanSelect\n  nameWithType: Control.CanSelect\n  fullName: Control.CanSelect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Capture*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Capture\n  nameWithType: Control.Capture\n  fullName: Control.Capture\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CausesValidation*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CausesValidation\n  nameWithType: Control.CausesValidation\n  fullName: Control.CausesValidation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CheckForIllegalCrossThreadCalls\n  nameWithType: Control.CheckForIllegalCrossThreadCalls\n  fullName: Control.CheckForIllegalCrossThreadCalls\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ClientRectangle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientRectangle\n  nameWithType: Control.ClientRectangle\n  fullName: Control.ClientRectangle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ClientSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientSize\n  nameWithType: Control.ClientSize\n  fullName: Control.ClientSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CompanyName*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CompanyName\n  nameWithType: Control.CompanyName\n  fullName: Control.CompanyName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Contains*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Contains\n  nameWithType: Control.Contains\n  fullName: Control.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ContainsFocus*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContainsFocus\n  nameWithType: Control.ContainsFocus\n  fullName: Control.ContainsFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ContextMenu*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenu\n  nameWithType: Control.ContextMenu\n  fullName: Control.ContextMenu\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ContextMenuStrip*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuStrip\n  nameWithType: Control.ContextMenuStrip\n  fullName: Control.ContextMenuStrip\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Controls*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Controls\n  nameWithType: Control.Controls\n  fullName: Control.Controls\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CreateAccessibilityInstance*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateAccessibilityInstance\n  nameWithType: Control.CreateAccessibilityInstance\n  fullName: Control.CreateAccessibilityInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CreateControl*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateControl\n  nameWithType: Control.CreateControl\n  fullName: Control.CreateControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CreateControlsInstance*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateControlsInstance\n  nameWithType: Control.CreateControlsInstance\n  fullName: Control.CreateControlsInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Created*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Created\n  nameWithType: Control.Created\n  fullName: Control.Created\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CreateGraphics*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateGraphics\n  nameWithType: Control.CreateGraphics\n  fullName: Control.CreateGraphics\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CreateHandle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateHandle\n  nameWithType: Control.CreateHandle\n  fullName: Control.CreateHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.CreateParams*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateParams\n  nameWithType: Control.CreateParams\n  fullName: Control.CreateParams\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Cursor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Cursor\n  nameWithType: Control.Cursor\n  fullName: Control.Cursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DataBindings*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DataBindings\n  nameWithType: Control.DataBindings\n  fullName: Control.DataBindings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultBackColor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultBackColor\n  nameWithType: Control.DefaultBackColor\n  fullName: Control.DefaultBackColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultCursor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultCursor\n  nameWithType: Control.DefaultCursor\n  fullName: Control.DefaultCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultFont*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultFont\n  nameWithType: Control.DefaultFont\n  fullName: Control.DefaultFont\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultForeColor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultForeColor\n  nameWithType: Control.DefaultForeColor\n  fullName: Control.DefaultForeColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultImeMode*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultImeMode\n  nameWithType: Control.DefaultImeMode\n  fullName: Control.DefaultImeMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultMargin*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMargin\n  nameWithType: Control.DefaultMargin\n  fullName: Control.DefaultMargin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultMaximumSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMaximumSize\n  nameWithType: Control.DefaultMaximumSize\n  fullName: Control.DefaultMaximumSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultMinimumSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMinimumSize\n  nameWithType: Control.DefaultMinimumSize\n  fullName: Control.DefaultMinimumSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultPadding*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultPadding\n  nameWithType: Control.DefaultPadding\n  fullName: Control.DefaultPadding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefaultSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultSize\n  nameWithType: Control.DefaultSize\n  fullName: Control.DefaultSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DefWndProc*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefWndProc\n  nameWithType: Control.DefWndProc\n  fullName: Control.DefWndProc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DestroyHandle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DestroyHandle\n  nameWithType: Control.DestroyHandle\n  fullName: Control.DestroyHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DeviceDpi*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DeviceDpi\n  nameWithType: Control.DeviceDpi\n  fullName: Control.DeviceDpi\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DisplayRectangle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DisplayRectangle\n  nameWithType: Control.DisplayRectangle\n  fullName: Control.DisplayRectangle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Dispose*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Dispose\n  nameWithType: Control.Dispose\n  fullName: Control.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Disposing*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Disposing\n  nameWithType: Control.Disposing\n  fullName: Control.Disposing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Dock*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Dock\n  nameWithType: Control.Dock\n  fullName: Control.Dock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DoDragDrop*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoDragDrop\n  nameWithType: Control.DoDragDrop\n  fullName: Control.DoDragDrop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DoubleBuffered*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoubleBuffered\n  nameWithType: Control.DoubleBuffered\n  fullName: Control.DoubleBuffered\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.DrawToBitmap*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DrawToBitmap\n  nameWithType: Control.DrawToBitmap\n  fullName: Control.DrawToBitmap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Enabled*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Enabled\n  nameWithType: Control.Enabled\n  fullName: Control.Enabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.EndInvoke*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: EndInvoke\n  nameWithType: Control.EndInvoke\n  fullName: Control.EndInvoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.FindForm*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FindForm\n  nameWithType: Control.FindForm\n  fullName: Control.FindForm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Focus*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Focus\n  nameWithType: Control.Focus\n  fullName: Control.Focus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Focused*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Focused\n  nameWithType: Control.Focused\n  fullName: Control.Focused\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Font*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Font\n  nameWithType: Control.Font\n  fullName: Control.Font\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.FontHeight*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FontHeight\n  nameWithType: Control.FontHeight\n  fullName: Control.FontHeight\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ForeColor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ForeColor\n  nameWithType: Control.ForeColor\n  fullName: Control.ForeColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.FromChildHandle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FromChildHandle\n  nameWithType: Control.FromChildHandle\n  fullName: Control.FromChildHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.FromHandle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FromHandle\n  nameWithType: Control.FromHandle\n  fullName: Control.FromHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetAccessibilityObjectById*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetAccessibilityObjectById\n  nameWithType: Control.GetAccessibilityObjectById\n  fullName: Control.GetAccessibilityObjectById\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetAutoSizeMode*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetAutoSizeMode\n  nameWithType: Control.GetAutoSizeMode\n  fullName: Control.GetAutoSizeMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetChildAtPoint*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetChildAtPoint\n  nameWithType: Control.GetChildAtPoint\n  fullName: Control.GetChildAtPoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetContainerControl*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetContainerControl\n  nameWithType: Control.GetContainerControl\n  fullName: Control.GetContainerControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetNextControl*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetNextControl\n  nameWithType: Control.GetNextControl\n  fullName: Control.GetNextControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetPreferredSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetPreferredSize\n  nameWithType: Control.GetPreferredSize\n  fullName: Control.GetPreferredSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetScaledBounds*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetScaledBounds\n  nameWithType: Control.GetScaledBounds\n  fullName: Control.GetScaledBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetStyle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetStyle\n  nameWithType: Control.GetStyle\n  fullName: Control.GetStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.GetTopLevel*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetTopLevel\n  nameWithType: Control.GetTopLevel\n  fullName: Control.GetTopLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Handle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Handle\n  nameWithType: Control.Handle\n  fullName: Control.Handle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.HasChildren*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HasChildren\n  nameWithType: Control.HasChildren\n  fullName: Control.HasChildren\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Height*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Height\n  nameWithType: Control.Height\n  fullName: Control.Height\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Hide*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Hide\n  nameWithType: Control.Hide\n  fullName: Control.Hide\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ImeMode*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeMode\n  nameWithType: Control.ImeMode\n  fullName: Control.ImeMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ImeModeBase*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeModeBase\n  nameWithType: Control.ImeModeBase\n  fullName: Control.ImeModeBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.InitLayout*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InitLayout\n  nameWithType: Control.InitLayout\n  fullName: Control.InitLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Invalidate*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate\n  nameWithType: Control.Invalidate\n  fullName: Control.Invalidate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Invoke*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invoke\n  nameWithType: Control.Invoke\n  fullName: Control.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.InvokeGotFocus*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeGotFocus\n  nameWithType: Control.InvokeGotFocus\n  fullName: Control.InvokeGotFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.InvokeLostFocus*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeLostFocus\n  nameWithType: Control.InvokeLostFocus\n  fullName: Control.InvokeLostFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.InvokeOnClick*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeOnClick\n  nameWithType: Control.InvokeOnClick\n  fullName: Control.InvokeOnClick\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.InvokePaint*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokePaint\n  nameWithType: Control.InvokePaint\n  fullName: Control.InvokePaint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.InvokePaintBackground*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokePaintBackground\n  nameWithType: Control.InvokePaintBackground\n  fullName: Control.InvokePaintBackground\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.InvokeRequired*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeRequired\n  nameWithType: Control.InvokeRequired\n  fullName: Control.InvokeRequired\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.IsAccessible*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsAccessible\n  nameWithType: Control.IsAccessible\n  fullName: Control.IsAccessible\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.IsDisposed*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsDisposed\n  nameWithType: Control.IsDisposed\n  fullName: Control.IsDisposed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.IsHandleCreated*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsHandleCreated\n  nameWithType: Control.IsHandleCreated\n  fullName: Control.IsHandleCreated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.IsInputChar*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsInputChar\n  nameWithType: Control.IsInputChar\n  fullName: Control.IsInputChar\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.IsInputKey*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsInputKey\n  nameWithType: Control.IsInputKey\n  fullName: Control.IsInputKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.IsKeyLocked*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsKeyLocked\n  nameWithType: Control.IsKeyLocked\n  fullName: Control.IsKeyLocked\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.IsMirrored*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsMirrored\n  nameWithType: Control.IsMirrored\n  fullName: Control.IsMirrored\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.IsMnemonic*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsMnemonic\n  nameWithType: Control.IsMnemonic\n  fullName: Control.IsMnemonic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.LayoutEngine*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LayoutEngine\n  nameWithType: Control.LayoutEngine\n  fullName: Control.LayoutEngine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Left*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Left\n  nameWithType: Control.Left\n  fullName: Control.Left\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Location*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Location\n  nameWithType: Control.Location\n  fullName: Control.Location\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.LogicalToDeviceUnits*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LogicalToDeviceUnits\n  nameWithType: Control.LogicalToDeviceUnits\n  fullName: Control.LogicalToDeviceUnits\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Margin*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Margin\n  nameWithType: Control.Margin\n  fullName: Control.Margin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.MaximumSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MaximumSize\n  nameWithType: Control.MaximumSize\n  fullName: Control.MaximumSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.MinimumSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MinimumSize\n  nameWithType: Control.MinimumSize\n  fullName: Control.MinimumSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ModifierKeys*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: Control.ModifierKeys\n  fullName: Control.ModifierKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.MouseButtons*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseButtons\n  nameWithType: Control.MouseButtons\n  fullName: Control.MouseButtons\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.MousePosition*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MousePosition\n  nameWithType: Control.MousePosition\n  fullName: Control.MousePosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Name*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Name\n  nameWithType: Control.Name\n  fullName: Control.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.NotifyInvalidate*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: NotifyInvalidate\n  nameWithType: Control.NotifyInvalidate\n  fullName: Control.NotifyInvalidate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnAutoSizeChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnAutoSizeChanged\n  nameWithType: Control.OnAutoSizeChanged\n  fullName: Control.OnAutoSizeChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnBackColorChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackColorChanged\n  nameWithType: Control.OnBackColorChanged\n  fullName: Control.OnBackColorChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnBackgroundImageChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackgroundImageChanged\n  nameWithType: Control.OnBackgroundImageChanged\n  fullName: Control.OnBackgroundImageChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackgroundImageLayoutChanged\n  nameWithType: Control.OnBackgroundImageLayoutChanged\n  fullName: Control.OnBackgroundImageLayoutChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnBindingContextChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBindingContextChanged\n  nameWithType: Control.OnBindingContextChanged\n  fullName: Control.OnBindingContextChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnCausesValidationChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCausesValidationChanged\n  nameWithType: Control.OnCausesValidationChanged\n  fullName: Control.OnCausesValidationChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnChangeUICues*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnChangeUICues\n  nameWithType: Control.OnChangeUICues\n  fullName: Control.OnChangeUICues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnClick*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnClick\n  nameWithType: Control.OnClick\n  fullName: Control.OnClick\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnClientSizeChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnClientSizeChanged\n  nameWithType: Control.OnClientSizeChanged\n  fullName: Control.OnClientSizeChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnContextMenuChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnContextMenuChanged\n  nameWithType: Control.OnContextMenuChanged\n  fullName: Control.OnContextMenuChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnContextMenuStripChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnContextMenuStripChanged\n  nameWithType: Control.OnContextMenuStripChanged\n  fullName: Control.OnContextMenuStripChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnControlAdded*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnControlAdded\n  nameWithType: Control.OnControlAdded\n  fullName: Control.OnControlAdded\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnControlRemoved*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnControlRemoved\n  nameWithType: Control.OnControlRemoved\n  fullName: Control.OnControlRemoved\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnCreateControl*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCreateControl\n  nameWithType: Control.OnCreateControl\n  fullName: Control.OnCreateControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnCursorChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCursorChanged\n  nameWithType: Control.OnCursorChanged\n  fullName: Control.OnCursorChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnDockChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDockChanged\n  nameWithType: Control.OnDockChanged\n  fullName: Control.OnDockChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnDoubleClick*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDoubleClick\n  nameWithType: Control.OnDoubleClick\n  fullName: Control.OnDoubleClick\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnDpiChangedAfterParent*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDpiChangedAfterParent\n  nameWithType: Control.OnDpiChangedAfterParent\n  fullName: Control.OnDpiChangedAfterParent\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnDpiChangedBeforeParent*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDpiChangedBeforeParent\n  nameWithType: Control.OnDpiChangedBeforeParent\n  fullName: Control.OnDpiChangedBeforeParent\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnDragDrop*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragDrop\n  nameWithType: Control.OnDragDrop\n  fullName: Control.OnDragDrop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnDragEnter*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragEnter\n  nameWithType: Control.OnDragEnter\n  fullName: Control.OnDragEnter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnDragLeave*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragLeave\n  nameWithType: Control.OnDragLeave\n  fullName: Control.OnDragLeave\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnDragOver*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragOver\n  nameWithType: Control.OnDragOver\n  fullName: Control.OnDragOver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnEnabledChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnEnabledChanged\n  nameWithType: Control.OnEnabledChanged\n  fullName: Control.OnEnabledChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnEnter*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnEnter\n  nameWithType: Control.OnEnter\n  fullName: Control.OnEnter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnFontChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnFontChanged\n  nameWithType: Control.OnFontChanged\n  fullName: Control.OnFontChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnForeColorChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnForeColorChanged\n  nameWithType: Control.OnForeColorChanged\n  fullName: Control.OnForeColorChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnGiveFeedback*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnGiveFeedback\n  nameWithType: Control.OnGiveFeedback\n  fullName: Control.OnGiveFeedback\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnGotFocus*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnGotFocus\n  nameWithType: Control.OnGotFocus\n  fullName: Control.OnGotFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnHandleCreated*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnHandleCreated\n  nameWithType: Control.OnHandleCreated\n  fullName: Control.OnHandleCreated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnHandleDestroyed*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnHandleDestroyed\n  nameWithType: Control.OnHandleDestroyed\n  fullName: Control.OnHandleDestroyed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnHelpRequested*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnHelpRequested\n  nameWithType: Control.OnHelpRequested\n  fullName: Control.OnHelpRequested\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnImeModeChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnImeModeChanged\n  nameWithType: Control.OnImeModeChanged\n  fullName: Control.OnImeModeChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnInvalidated*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnInvalidated\n  nameWithType: Control.OnInvalidated\n  fullName: Control.OnInvalidated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnKeyDown*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyDown\n  nameWithType: Control.OnKeyDown\n  fullName: Control.OnKeyDown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnKeyPress*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyPress\n  nameWithType: Control.OnKeyPress\n  fullName: Control.OnKeyPress\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnKeyUp*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyUp\n  nameWithType: Control.OnKeyUp\n  fullName: Control.OnKeyUp\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnLayout*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLayout\n  nameWithType: Control.OnLayout\n  fullName: Control.OnLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnLeave*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLeave\n  nameWithType: Control.OnLeave\n  fullName: Control.OnLeave\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnLocationChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLocationChanged\n  nameWithType: Control.OnLocationChanged\n  fullName: Control.OnLocationChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnLostFocus*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLostFocus\n  nameWithType: Control.OnLostFocus\n  fullName: Control.OnLostFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMarginChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMarginChanged\n  nameWithType: Control.OnMarginChanged\n  fullName: Control.OnMarginChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseCaptureChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseCaptureChanged\n  nameWithType: Control.OnMouseCaptureChanged\n  fullName: Control.OnMouseCaptureChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseClick*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseClick\n  nameWithType: Control.OnMouseClick\n  fullName: Control.OnMouseClick\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseDoubleClick*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseDoubleClick\n  nameWithType: Control.OnMouseDoubleClick\n  fullName: Control.OnMouseDoubleClick\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseDown*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseDown\n  nameWithType: Control.OnMouseDown\n  fullName: Control.OnMouseDown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseEnter*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseEnter\n  nameWithType: Control.OnMouseEnter\n  fullName: Control.OnMouseEnter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseHover*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseHover\n  nameWithType: Control.OnMouseHover\n  fullName: Control.OnMouseHover\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseLeave*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseLeave\n  nameWithType: Control.OnMouseLeave\n  fullName: Control.OnMouseLeave\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseMove*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseMove\n  nameWithType: Control.OnMouseMove\n  fullName: Control.OnMouseMove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseUp*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseUp\n  nameWithType: Control.OnMouseUp\n  fullName: Control.OnMouseUp\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMouseWheel*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseWheel\n  nameWithType: Control.OnMouseWheel\n  fullName: Control.OnMouseWheel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnMove*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMove\n  nameWithType: Control.OnMove\n  fullName: Control.OnMove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnNotifyMessage*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnNotifyMessage\n  nameWithType: Control.OnNotifyMessage\n  fullName: Control.OnNotifyMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnPaddingChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPaddingChanged\n  nameWithType: Control.OnPaddingChanged\n  fullName: Control.OnPaddingChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnPaint*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPaint\n  nameWithType: Control.OnPaint\n  fullName: Control.OnPaint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnPaintBackground*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPaintBackground\n  nameWithType: Control.OnPaintBackground\n  fullName: Control.OnPaintBackground\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentBackColorChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBackColorChanged\n  nameWithType: Control.OnParentBackColorChanged\n  fullName: Control.OnParentBackColorChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBackgroundImageChanged\n  nameWithType: Control.OnParentBackgroundImageChanged\n  fullName: Control.OnParentBackgroundImageChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentBindingContextChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBindingContextChanged\n  nameWithType: Control.OnParentBindingContextChanged\n  fullName: Control.OnParentBindingContextChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentChanged\n  nameWithType: Control.OnParentChanged\n  fullName: Control.OnParentChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentCursorChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentCursorChanged\n  nameWithType: Control.OnParentCursorChanged\n  fullName: Control.OnParentCursorChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentEnabledChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentEnabledChanged\n  nameWithType: Control.OnParentEnabledChanged\n  fullName: Control.OnParentEnabledChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentFontChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentFontChanged\n  nameWithType: Control.OnParentFontChanged\n  fullName: Control.OnParentFontChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentForeColorChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentForeColorChanged\n  nameWithType: Control.OnParentForeColorChanged\n  fullName: Control.OnParentForeColorChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentRightToLeftChanged\n  nameWithType: Control.OnParentRightToLeftChanged\n  fullName: Control.OnParentRightToLeftChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnParentVisibleChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentVisibleChanged\n  nameWithType: Control.OnParentVisibleChanged\n  fullName: Control.OnParentVisibleChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnPreviewKeyDown*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPreviewKeyDown\n  nameWithType: Control.OnPreviewKeyDown\n  fullName: Control.OnPreviewKeyDown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnPrint*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPrint\n  nameWithType: Control.OnPrint\n  fullName: Control.OnPrint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnQueryContinueDrag*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnQueryContinueDrag\n  nameWithType: Control.OnQueryContinueDrag\n  fullName: Control.OnQueryContinueDrag\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnRegionChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnRegionChanged\n  nameWithType: Control.OnRegionChanged\n  fullName: Control.OnRegionChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnResize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnResize\n  nameWithType: Control.OnResize\n  fullName: Control.OnResize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnRightToLeftChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnRightToLeftChanged\n  nameWithType: Control.OnRightToLeftChanged\n  fullName: Control.OnRightToLeftChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnSizeChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnSizeChanged\n  nameWithType: Control.OnSizeChanged\n  fullName: Control.OnSizeChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnStyleChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnStyleChanged\n  nameWithType: Control.OnStyleChanged\n  fullName: Control.OnStyleChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnSystemColorsChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnSystemColorsChanged\n  nameWithType: Control.OnSystemColorsChanged\n  fullName: Control.OnSystemColorsChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnTabIndexChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTabIndexChanged\n  nameWithType: Control.OnTabIndexChanged\n  fullName: Control.OnTabIndexChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnTabStopChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTabStopChanged\n  nameWithType: Control.OnTabStopChanged\n  fullName: Control.OnTabStopChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnTextChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTextChanged\n  nameWithType: Control.OnTextChanged\n  fullName: Control.OnTextChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnValidated*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnValidated\n  nameWithType: Control.OnValidated\n  fullName: Control.OnValidated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnValidating*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnValidating\n  nameWithType: Control.OnValidating\n  fullName: Control.OnValidating\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.OnVisibleChanged*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnVisibleChanged\n  nameWithType: Control.OnVisibleChanged\n  fullName: Control.OnVisibleChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Padding*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Padding\n  nameWithType: Control.Padding\n  fullName: Control.Padding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Parent*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Parent\n  nameWithType: Control.Parent\n  fullName: Control.Parent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.PerformLayout*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PerformLayout\n  nameWithType: Control.PerformLayout\n  fullName: Control.PerformLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.PointToClient*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PointToClient\n  nameWithType: Control.PointToClient\n  fullName: Control.PointToClient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.PointToScreen*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PointToScreen\n  nameWithType: Control.PointToScreen\n  fullName: Control.PointToScreen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.PreferredSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreferredSize\n  nameWithType: Control.PreferredSize\n  fullName: Control.PreferredSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.PreProcessControlMessage*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreProcessControlMessage\n  nameWithType: Control.PreProcessControlMessage\n  fullName: Control.PreProcessControlMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.PreProcessMessage*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreProcessMessage\n  nameWithType: Control.PreProcessMessage\n  fullName: Control.PreProcessMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProcessCmdKey*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessCmdKey\n  nameWithType: Control.ProcessCmdKey\n  fullName: Control.ProcessCmdKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProcessDialogChar*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessDialogChar\n  nameWithType: Control.ProcessDialogChar\n  fullName: Control.ProcessDialogChar\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProcessDialogKey*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessDialogKey\n  nameWithType: Control.ProcessDialogKey\n  fullName: Control.ProcessDialogKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProcessKeyEventArgs*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyEventArgs\n  nameWithType: Control.ProcessKeyEventArgs\n  fullName: Control.ProcessKeyEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProcessKeyMessage*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyMessage\n  nameWithType: Control.ProcessKeyMessage\n  fullName: Control.ProcessKeyMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProcessKeyPreview*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyPreview\n  nameWithType: Control.ProcessKeyPreview\n  fullName: Control.ProcessKeyPreview\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProcessMnemonic*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessMnemonic\n  nameWithType: Control.ProcessMnemonic\n  fullName: Control.ProcessMnemonic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProductName*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProductName\n  nameWithType: Control.ProductName\n  fullName: Control.ProductName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ProductVersion*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProductVersion\n  nameWithType: Control.ProductVersion\n  fullName: Control.ProductVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.PropagatingImeMode*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PropagatingImeMode\n  nameWithType: Control.PropagatingImeMode\n  fullName: Control.PropagatingImeMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RaiseDragEvent*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseDragEvent\n  nameWithType: Control.RaiseDragEvent\n  fullName: Control.RaiseDragEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RaiseKeyEvent*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseKeyEvent\n  nameWithType: Control.RaiseKeyEvent\n  fullName: Control.RaiseKeyEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RaiseMouseEvent*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseMouseEvent\n  nameWithType: Control.RaiseMouseEvent\n  fullName: Control.RaiseMouseEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RaisePaintEvent*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaisePaintEvent\n  nameWithType: Control.RaisePaintEvent\n  fullName: Control.RaisePaintEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RecreateHandle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RecreateHandle\n  nameWithType: Control.RecreateHandle\n  fullName: Control.RecreateHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RecreatingHandle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RecreatingHandle\n  nameWithType: Control.RecreatingHandle\n  fullName: Control.RecreatingHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RectangleToClient*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RectangleToClient\n  nameWithType: Control.RectangleToClient\n  fullName: Control.RectangleToClient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RectangleToScreen*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RectangleToScreen\n  nameWithType: Control.RectangleToScreen\n  fullName: Control.RectangleToScreen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ReflectMessage*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ReflectMessage\n  nameWithType: Control.ReflectMessage\n  fullName: Control.ReflectMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Refresh*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Refresh\n  nameWithType: Control.Refresh\n  fullName: Control.Refresh\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Region*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Region\n  nameWithType: Control.Region\n  fullName: Control.Region\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RenderRightToLeft*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RenderRightToLeft\n  nameWithType: Control.RenderRightToLeft\n  fullName: Control.RenderRightToLeft\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RescaleConstantsForDpi*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RescaleConstantsForDpi\n  nameWithType: Control.RescaleConstantsForDpi\n  fullName: Control.RescaleConstantsForDpi\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetBackColor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetBackColor\n  nameWithType: Control.ResetBackColor\n  fullName: Control.ResetBackColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetBindings*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetBindings\n  nameWithType: Control.ResetBindings\n  fullName: Control.ResetBindings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetCursor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetCursor\n  nameWithType: Control.ResetCursor\n  fullName: Control.ResetCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetFont*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetFont\n  nameWithType: Control.ResetFont\n  fullName: Control.ResetFont\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetForeColor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetForeColor\n  nameWithType: Control.ResetForeColor\n  fullName: Control.ResetForeColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetImeMode*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetImeMode\n  nameWithType: Control.ResetImeMode\n  fullName: Control.ResetImeMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetMouseEventArgs*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetMouseEventArgs\n  nameWithType: Control.ResetMouseEventArgs\n  fullName: Control.ResetMouseEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetRightToLeft*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetRightToLeft\n  nameWithType: Control.ResetRightToLeft\n  fullName: Control.ResetRightToLeft\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResetText*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetText\n  nameWithType: Control.ResetText\n  fullName: Control.ResetText\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResizeRedraw*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResizeRedraw\n  nameWithType: Control.ResizeRedraw\n  fullName: Control.ResizeRedraw\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ResumeLayout*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResumeLayout\n  nameWithType: Control.ResumeLayout\n  fullName: Control.ResumeLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Right*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Right\n  nameWithType: Control.Right\n  fullName: Control.Right\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RightToLeft*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RightToLeft\n  nameWithType: Control.RightToLeft\n  fullName: Control.RightToLeft\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment\n  nameWithType: Control.RtlTranslateAlignment\n  fullName: Control.RtlTranslateAlignment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RtlTranslateContent*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateContent\n  nameWithType: Control.RtlTranslateContent\n  fullName: Control.RtlTranslateContent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RtlTranslateHorizontal*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateHorizontal\n  nameWithType: Control.RtlTranslateHorizontal\n  fullName: Control.RtlTranslateHorizontal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.RtlTranslateLeftRight*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateLeftRight\n  nameWithType: Control.RtlTranslateLeftRight\n  fullName: Control.RtlTranslateLeftRight\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Scale*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale\n  nameWithType: Control.Scale\n  fullName: Control.Scale\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ScaleBitmapLogicalToDevice*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleBitmapLogicalToDevice\n  nameWithType: Control.ScaleBitmapLogicalToDevice\n  fullName: Control.ScaleBitmapLogicalToDevice\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ScaleChildren*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleChildren\n  nameWithType: Control.ScaleChildren\n  fullName: Control.ScaleChildren\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ScaleControl*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleControl\n  nameWithType: Control.ScaleControl\n  fullName: Control.ScaleControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ScaleCore*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleCore\n  nameWithType: Control.ScaleCore\n  fullName: Control.ScaleCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Select*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Select\n  nameWithType: Control.Select\n  fullName: Control.Select\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SelectNextControl*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SelectNextControl\n  nameWithType: Control.SelectNextControl\n  fullName: Control.SelectNextControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SendToBack*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SendToBack\n  nameWithType: Control.SendToBack\n  fullName: Control.SendToBack\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SetAutoSizeMode*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetAutoSizeMode\n  nameWithType: Control.SetAutoSizeMode\n  fullName: Control.SetAutoSizeMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SetBounds*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBounds\n  nameWithType: Control.SetBounds\n  fullName: Control.SetBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SetBoundsCore*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBoundsCore\n  nameWithType: Control.SetBoundsCore\n  fullName: Control.SetBoundsCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SetClientSizeCore*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetClientSizeCore\n  nameWithType: Control.SetClientSizeCore\n  fullName: Control.SetClientSizeCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SetStyle*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetStyle\n  nameWithType: Control.SetStyle\n  fullName: Control.SetStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SetTopLevel*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetTopLevel\n  nameWithType: Control.SetTopLevel\n  fullName: Control.SetTopLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SetVisibleCore*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetVisibleCore\n  nameWithType: Control.SetVisibleCore\n  fullName: Control.SetVisibleCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Show*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Show\n  nameWithType: Control.Show\n  fullName: Control.Show\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ShowFocusCues*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ShowFocusCues\n  nameWithType: Control.ShowFocusCues\n  fullName: Control.ShowFocusCues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.ShowKeyboardCues*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ShowKeyboardCues\n  nameWithType: Control.ShowKeyboardCues\n  fullName: Control.ShowKeyboardCues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Site*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Site\n  nameWithType: Control.Site\n  fullName: Control.Site\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Size*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Size\n  nameWithType: Control.Size\n  fullName: Control.Size\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SizeFromClientSize*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SizeFromClientSize\n  nameWithType: Control.SizeFromClientSize\n  fullName: Control.SizeFromClientSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.SuspendLayout*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SuspendLayout\n  nameWithType: Control.SuspendLayout\n  fullName: Control.SuspendLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.TabIndex*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabIndex\n  nameWithType: Control.TabIndex\n  fullName: Control.TabIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.TabStop*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabStop\n  nameWithType: Control.TabStop\n  fullName: Control.TabStop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Tag*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Tag\n  nameWithType: Control.Tag\n  fullName: Control.Tag\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Text*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Text\n  nameWithType: Control.Text\n  fullName: Control.Text\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Top*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Top\n  nameWithType: Control.Top\n  fullName: Control.Top\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.TopLevelControl*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TopLevelControl\n  nameWithType: Control.TopLevelControl\n  fullName: Control.TopLevelControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Update*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Update\n  nameWithType: Control.Update\n  fullName: Control.Update\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.UpdateBounds*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds\n  nameWithType: Control.UpdateBounds\n  fullName: Control.UpdateBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.UpdateStyles*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateStyles\n  nameWithType: Control.UpdateStyles\n  fullName: Control.UpdateStyles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.UpdateZOrder*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateZOrder\n  nameWithType: Control.UpdateZOrder\n  fullName: Control.UpdateZOrder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.UseWaitCursor*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UseWaitCursor\n  nameWithType: Control.UseWaitCursor\n  fullName: Control.UseWaitCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Visible*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Visible\n  nameWithType: Control.Visible\n  fullName: Control.Visible\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.Width*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Width\n  nameWithType: Control.Width\n  fullName: Control.Width\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.WindowTarget*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: WindowTarget\n  nameWithType: Control.WindowTarget\n  fullName: Control.WindowTarget\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.WndProc*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: WndProc\n  nameWithType: Control.WndProc\n  fullName: Control.WndProc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: System.Windows.Forms.IDropTarget.OnDragDrop\n  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragDrop\n  fullName: Control.System.Windows.Forms.IDropTarget.OnDragDrop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: System.Windows.Forms.IDropTarget.OnDragEnter\n  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragEnter\n  fullName: Control.System.Windows.Forms.IDropTarget.OnDragEnter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: System.Windows.Forms.IDropTarget.OnDragLeave\n  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragLeave\n  fullName: Control.System.Windows.Forms.IDropTarget.OnDragLeave\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver*\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: System.Windows.Forms.IDropTarget.OnDragOver\n  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragOver\n  fullName: Control.System.Windows.Forms.IDropTarget.OnDragOver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Control.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.ISynchronizeInvoke\n  parent: System.ComponentModel\n  isExternal: false\n  name: ISynchronizeInvoke\n  nameWithType: ISynchronizeInvoke\n  fullName: System.ComponentModel.ISynchronizeInvoke\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Windows.Forms.IBindableComponent\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IBindableComponent\n  nameWithType: IBindableComponent\n  fullName: System.Windows.Forms.IBindableComponent\n- uid: System.Windows.Forms.IDropTarget\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IDropTarget\n  nameWithType: IDropTarget\n  fullName: System.Windows.Forms.IDropTarget\n- uid: System.Windows.Forms.IWin32Window\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IWin32Window\n  nameWithType: IWin32Window\n  fullName: System.Windows.Forms.IWin32Window\n"}