### YamlMime:ManagedReference
items:
- uid: System.BitConverter
  commentId: T:System.BitConverter
  id: BitConverter
  children:
  - System.BitConverter.DoubleToInt64Bits(System.Double)
  - System.BitConverter.GetBytes(System.Boolean)
  - System.BitConverter.GetBytes(System.Char)
  - System.BitConverter.GetBytes(System.Double)
  - System.BitConverter.GetBytes(System.Int16)
  - System.BitConverter.GetBytes(System.Int32)
  - System.BitConverter.GetBytes(System.Int64)
  - System.BitConverter.GetBytes(System.Single)
  - System.BitConverter.GetBytes(System.UInt16)
  - System.BitConverter.GetBytes(System.UInt32)
  - System.BitConverter.GetBytes(System.UInt64)
  - System.BitConverter.Int32BitsToSingle(System.Int32)
  - System.BitConverter.Int64BitsToDouble(System.Int64)
  - System.BitConverter.IsLittleEndian
  - System.BitConverter.SingleToInt32Bits(System.Single)
  - System.BitConverter.ToBoolean(System.Byte[],System.Int32)
  - System.BitConverter.ToChar(System.Byte[],System.Int32)
  - System.BitConverter.ToDouble(System.Byte[],System.Int32)
  - System.BitConverter.ToInt16(System.Byte[],System.Int32)
  - System.BitConverter.ToInt32(System.Byte[],System.Int32)
  - System.BitConverter.ToInt64(System.Byte[],System.Int32)
  - System.BitConverter.ToSingle(System.Byte[],System.Int32)
  - System.BitConverter.ToString(System.Byte[])
  - System.BitConverter.ToString(System.Byte[],System.Int32)
  - System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)
  - System.BitConverter.ToUInt16(System.Byte[],System.Int32)
  - System.BitConverter.ToUInt32(System.Byte[],System.Int32)
  - System.BitConverter.ToUInt64(System.Byte[],System.Int32)
  langs:
  - csharp
  name: BitConverter
  nameWithType: BitConverter
  fullName: System.BitConverter
  type: Class
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts base data types to an array of bytes, and an array of bytes to base data types.
  remarks: "The <xref:System.BitConverter> class helps manipulate value types in their fundamental form, as a series of bytes. A byte is defined as an 8-bit unsigned integer. The <xref:System.BitConverter> class includes static methods to convert each of the primitive types to and from an array of bytes, as the following table illustrates.  \n  \n|Type|To byte conversion|From byte conversion|  \n|----------|------------------------|--------------------------|  \n|<xref:System.Boolean>|<xref:System.BitConverter.GetBytes%28System.Boolean%29>|<xref:System.BitConverter.ToBoolean%2A>|  \n|<xref:System.Char>|<xref:System.BitConverter.GetBytes%28System.Char%29>|<xref:System.BitConverter.ToChar%2A>|  \n|<xref:System.Double>|<xref:System.BitConverter.GetBytes%28System.Double%29><br /><br /> -or-<br /><br /> <xref:System.BitConverter.DoubleToInt64Bits%28System.Double%29>|<xref:System.BitConverter.ToDouble%2A><br /><br /> -or-<br /><br /> <xref:System.BitConverter.Int64BitsToDouble%2A>|  \n|<xref:System.Int16>|<xref:System.BitConverter.GetBytes%28System.Int16%29>|<xref:System.BitConverter.ToInt16%2A>|  \n|<xref:System.Int32>|<xref:System.BitConverter.GetBytes%28System.Int32%29>|<xref:System.BitConverter.ToInt32%2A>|  \n|<xref:System.Int64>|<xref:System.BitConverter.GetBytes%28System.Int64%29>|<xref:System.BitConverter.ToInt64%2A>|  \n|<xref:System.Single>|<xref:System.BitConverter.GetBytes%28System.Single%29>|<xref:System.BitConverter.ToSingle%2A>|  \n|<xref:System.UInt16>|<xref:System.BitConverter.GetBytes%28System.UInt16%29>|<xref:System.BitConverter.ToUInt16%2A>|  \n|<xref:System.UInt32>|<xref:System.BitConverter.GetBytes%28System.UInt32%29>|<xref:System.BitConverter.ToUInt32%2A>|  \n|<xref:System.UInt64>|<xref:System.BitConverter.GetBytes%28System.UInt64%29>|<xref:System.BitConverter.ToUInt64%2A>|  \n  \n If you use <xref:System.BitConverter> methods to round-trip data, make sure that the <xref:System.BitConverter.GetBytes%2A> overload and the `To`*Type* method specify the same type. As the following example illustrates, restoring an array that represents a signed integer by calling the <xref:System.BitConverter.ToUInt32%2A> method can result in a value that is different from the original. For more information, see the entry [Working with Signed Non-Decimal and Bitwise Values](http://go.microsoft.com/fwlink/?LinkId=186999) in the BCL Team Blog.  \n  \n [!code-csharp[System.BitConverter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/example1.cs#3)]\n [!code-vb[System.BitConverter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/example1.vb#3)]  \n  \n The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method overloads (as well as the order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method and the order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29> method) depends on whether the computer architecture is little-endian or big-endian. Similarly, the order of bytes in the array and returned by the `To`*IntegerValue* methods and the <xref:System.BitConverter.ToChar%2A> method depends on whether the computer architecture is little-endian or big-endian. The endianness of an architecture is indicated by the <xref:System.BitConverter.IsLittleEndian> property, which returns `true` on little-endian systems and `false` on big-endian systems. On little-endian systems, lower-order bytes precede higher-order bytes. On big-endian system, higher-order bytes precede lower-order bytes. The following table illustrates the difference in the byte arrays that result from passing the integer 1,234,567,890 (0x499602D2) to the <xref:System.BitConverter.GetBytes%28System.Int32%29> method. The bytes are listed in order from the byte at index 0 to the byte at index 3.  \n  \n|||  \n|-|-|  \n|Little-endian|D2-02-96-49|  \n|Big-endian|49-96-02-D2|  \n  \n Because the return value of some methods depends on system architecture, be careful when transmitting byte data beyond machine boundaries:  \n  \n-   If all systems sending and receiving data are guaranteed to have the same endianness, nothing has be done to the data.  \n  \n-   If systems sending and receiving data can have different endianness, always transmit data in a particular order. This means that the order of bytes in the array may have to be reversed either before sending them or after receiving them. A common convention is to transmit data in network byte order (big-endian order). The following example provides an implementation for sending an integer value in network byte order.  \n  \n     [!code-csharp[System.BitConverter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/networkorder1.cs#4)]\n     [!code-vb[System.BitConverter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/networkorder1.vb#4)]  \n  \n-   If systems sending and receiving data can have different endianness and the data to be transmitted consists of signed integers, call the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=fullName> method to convert the data to network byte order and the <xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=fullName> method to convert it to the order required by the recipient."
  example:
  - "The following code example illustrates the use of several <xref:System.BitConverter> class methods.  \n  \n [!code-cpp[System.BitConverter.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/bitconv.cpp#1)]\n [!code-csharp[System.BitConverter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/bitconv.cs#1)]\n [!code-vb[System.BitConverter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/bitconv.vb#1)]"
  syntax:
    content: public static class BitConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.DoubleToInt64Bits(System.Double)
  commentId: M:System.BitConverter.DoubleToInt64Bits(System.Double)
  id: DoubleToInt64Bits(System.Double)
  parent: System.BitConverter
  langs:
  - csharp
  name: DoubleToInt64Bits(Double)
  nameWithType: BitConverter.DoubleToInt64Bits(Double)
  fullName: BitConverter.DoubleToInt64Bits(Double)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified double-precision floating point number to a 64-bit signed integer.
  remarks: The order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of several <xref:System.Double> values to <xref:System.Int64> values with the `DoubleToInt64Bits` method.  \n  \n [!code-cpp[System.BitConverter.DoubleInt64#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/dbltobits.cpp#2)]\n [!code-csharp[System.BitConverter.DoubleInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/dbltobits.cs#2)]\n [!code-vb[System.BitConverter.DoubleInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/dbltobits.vb#2)]"
  syntax:
    content: public static long DoubleToInt64Bits (double value);
    parameters:
    - id: value
      type: System.Double
      description: The number to convert.
    return:
      type: System.Int64
      description: A 64-bit signed integer whose value is equivalent to <code>value</code>.
  overload: System.BitConverter.DoubleToInt64Bits*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.Boolean)
  commentId: M:System.BitConverter.GetBytes(System.Boolean)
  id: GetBytes(System.Boolean)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(Boolean)
  nameWithType: BitConverter.GetBytes(Boolean)
  fullName: BitConverter.GetBytes(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified Boolean value as a byte array.
  remarks: You can convert a byte array back to a <xref:System.Boolean> value by calling the <xref:System.BitConverter.ToBoolean%2A> method.
  example:
  - "The following example converts the bit patterns of <xref:System.Boolean> values to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesbool.cpp#1)]\n [!code-csharp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesbool.cs#1)]\n [!code-vb[System.BitConverter.GetBytes.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesbool.vb#1)]"
  syntax:
    content: public static byte[] GetBytes (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: A Boolean value.
    return:
      type: System.Byte[]
      description: A byte array with length 1.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.Char)
  commentId: M:System.BitConverter.GetBytes(System.Char)
  id: GetBytes(System.Char)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(Char)
  nameWithType: BitConverter.GetBytes(Char)
  fullName: BitConverter.GetBytes(Char)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified Unicode character value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of <xref:System.Char> values (Unicode characters) to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/byteschar.cpp#2)]\n [!code-csharp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/byteschar.cs#2)]\n [!code-vb[System.BitConverter.GetBytes.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/byteschar.vb#2)]"
  syntax:
    content: public static byte[] GetBytes (char value);
    parameters:
    - id: value
      type: System.Char
      description: A character to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 2.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.Double)
  commentId: M:System.BitConverter.GetBytes(System.Double)
  id: GetBytes(System.Double)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(Double)
  nameWithType: BitConverter.GetBytes(Double)
  fullName: BitConverter.GetBytes(Double)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified double-precision floating point value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of <xref:System.Double> values to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesdouble.cpp#4)]\n [!code-csharp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesdouble.cs#4)]\n [!code-vb[System.BitConverter.GetBytes.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesdouble.vb#4)]"
  syntax:
    content: public static byte[] GetBytes (double value);
    parameters:
    - id: value
      type: System.Double
      description: The number to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 8.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.Int16)
  commentId: M:System.BitConverter.GetBytes(System.Int16)
  id: GetBytes(System.Int16)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(Int16)
  nameWithType: BitConverter.GetBytes(Int16)
  fullName: BitConverter.GetBytes(Int16)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified 16-bit signed integer value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of <xref:System.Int16> values to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint16.cpp#3)]\n [!code-csharp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint16.cs#3)]\n [!code-vb[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint16.vb#3)]"
  syntax:
    content: public static byte[] GetBytes (short value);
    parameters:
    - id: value
      type: System.Int16
      description: The number to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 2.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.Int32)
  commentId: M:System.BitConverter.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(Int32)
  nameWithType: BitConverter.GetBytes(Int32)
  fullName: BitConverter.GetBytes(Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified 32-bit signed integer value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of <xref:System.Int32> values to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint32.cpp#2)]\n [!code-csharp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint32.cs#2)]\n [!code-vb[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint32.vb#2)]"
  syntax:
    content: public static byte[] GetBytes (int value);
    parameters:
    - id: value
      type: System.Int32
      description: The number to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 4.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.Int64)
  commentId: M:System.BitConverter.GetBytes(System.Int64)
  id: GetBytes(System.Int64)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(Int64)
  nameWithType: BitConverter.GetBytes(Int64)
  fullName: BitConverter.GetBytes(Int64)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified 64-bit signed integer value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following example calls the <xref:System.BitConverter.GetBytes%2A> method to convert each element in an <xref:System.Int64> array to a<xref:System.Byte> arrays.  \n  \n [!code-cpp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint64.cpp#1)]\n [!code-csharp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint64.cs#1)]\n [!code-vb[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint64.vb#1)]"
  syntax:
    content: public static byte[] GetBytes (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The number to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 8.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.Single)
  commentId: M:System.BitConverter.GetBytes(System.Single)
  id: GetBytes(System.Single)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(Single)
  nameWithType: BitConverter.GetBytes(Single)
  fullName: BitConverter.GetBytes(Single)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified single-precision floating point value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of <xref:System.Single> values to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytessingle.cpp#3)]\n [!code-csharp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytessingle.cs#3)]\n [!code-vb[System.BitConverter.GetBytes.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytessingle.vb#3)]"
  syntax:
    content: public static byte[] GetBytes (float value);
    parameters:
    - id: value
      type: System.Single
      description: The number to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 4.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.UInt16)
  commentId: M:System.BitConverter.GetBytes(System.UInt16)
  id: GetBytes(System.UInt16)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(UInt16)
  nameWithType: BitConverter.GetBytes(UInt16)
  fullName: BitConverter.GetBytes(UInt16)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified 16-bit unsigned integer value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of <xref:System.UInt16> values to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint16.cpp#3)]\n [!code-csharp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint16.cs#3)]\n [!code-vb[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint16.vb#3)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static byte[] GetBytes (ushort value);
    parameters:
    - id: value
      type: System.UInt16
      description: The number to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 2.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.UInt32)
  commentId: M:System.BitConverter.GetBytes(System.UInt32)
  id: GetBytes(System.UInt32)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(UInt32)
  nameWithType: BitConverter.GetBytes(UInt32)
  fullName: BitConverter.GetBytes(UInt32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified 32-bit unsigned integer value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of <xref:System.UInt32> values to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint32.cpp#2)]\n [!code-csharp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint32.cs#2)]\n [!code-vb[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint32.vb#2)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static byte[] GetBytes (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: The number to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 4.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.GetBytes(System.UInt64)
  commentId: M:System.BitConverter.GetBytes(System.UInt64)
  id: GetBytes(System.UInt64)
  parent: System.BitConverter
  langs:
  - csharp
  name: GetBytes(UInt64)
  nameWithType: BitConverter.GetBytes(UInt64)
  fullName: BitConverter.GetBytes(UInt64)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the specified 64-bit unsigned integer value as an array of bytes.
  remarks: The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the bit patterns of <xref:System.UInt64> values to <xref:System.Byte> arrays with the `GetBytes` method.  \n  \n [!code-cpp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint64.cpp#1)]\n [!code-csharp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint64.cs#1)]\n [!code-vb[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint64.vb#1)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static byte[] GetBytes (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: The number to convert.
    return:
      type: System.Byte[]
      description: An array of bytes with length 8.
  overload: System.BitConverter.GetBytes*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.Int32BitsToSingle(System.Int32)
  commentId: M:System.BitConverter.Int32BitsToSingle(System.Int32)
  id: Int32BitsToSingle(System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: Int32BitsToSingle(Int32)
  nameWithType: BitConverter.Int32BitsToSingle(Int32)
  fullName: BitConverter.Int32BitsToSingle(Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  syntax:
    content: public static float Int32BitsToSingle (int value);
    parameters:
    - id: value
      type: System.Int32
      description: ''
    return:
      type: System.Single
      description: ''
  overload: System.BitConverter.Int32BitsToSingle*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.Int64BitsToDouble(System.Int64)
  commentId: M:System.BitConverter.Int64BitsToDouble(System.Int64)
  id: Int64BitsToDouble(System.Int64)
  parent: System.BitConverter
  langs:
  - csharp
  name: Int64BitsToDouble(Int64)
  nameWithType: BitConverter.Int64BitsToDouble(Int64)
  fullName: BitConverter.Int64BitsToDouble(Int64)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified 64-bit signed integer to a double-precision floating point number.
  remarks: Typically, `value` is an integer that is returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method.
  example:
  - "The following code example converts the bit patterns of several <xref:System.Int64> values to <xref:System.Double> values with the `Int64BitsToDouble` method.  \n  \n [!code-cpp[System.BitConverter.DoubleInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/bitstodbl.cpp#1)]\n [!code-csharp[System.BitConverter.DoubleInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/bitstodbl.cs#1)]\n [!code-vb[System.BitConverter.DoubleInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/bitstodbl.vb#1)]"
  syntax:
    content: public static double Int64BitsToDouble (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The number to convert.
    return:
      type: System.Double
      description: A double-precision floating point number whose value is equivalent to <code>value</code>.
  overload: System.BitConverter.Int64BitsToDouble*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.IsLittleEndian
  commentId: F:System.BitConverter.IsLittleEndian
  id: IsLittleEndian
  parent: System.BitConverter
  langs:
  - csharp
  name: IsLittleEndian
  nameWithType: BitConverter.IsLittleEndian
  fullName: BitConverter.IsLittleEndian
  type: Field
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Indicates the byte order ("endianness") in which data is stored in this computer architecture.
  remarks: "Different computer architectures store data using different byte orders. \"Big-endian\" means the most significant byte is on the left end of a word. \"Little-endian\" means the most significant byte is on the right end of a word.  \n  \n> [!NOTE]\n>  You can convert from network byte order to the byte order of the host computer without retrieving  the value of the <xref:System.BitConverter.IsLittleEndian?displayProperty=fullName> field by passing a 16-bit, 32-bit, or 64 bit integer to the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=fullName> method."
  example:
  - "The following code example illustrates the use of the `IsLittleEndian` field.  \n  \n [!code-cpp[System.BitConverter.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/littleend.cpp#2)]\n [!code-csharp[System.BitConverter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/littleend.cs#2)]\n [!code-vb[System.BitConverter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/littleend.vb#2)]"
  syntax:
    content: public static readonly bool IsLittleEndian;
    return:
      type: System.Boolean
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.SingleToInt32Bits(System.Single)
  commentId: M:System.BitConverter.SingleToInt32Bits(System.Single)
  id: SingleToInt32Bits(System.Single)
  parent: System.BitConverter
  langs:
  - csharp
  name: SingleToInt32Bits(Single)
  nameWithType: BitConverter.SingleToInt32Bits(Single)
  fullName: BitConverter.SingleToInt32Bits(Single)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  syntax:
    content: public static int SingleToInt32Bits (float value);
    parameters:
    - id: value
      type: System.Single
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: System.BitConverter.SingleToInt32Bits*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToBoolean(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)
  id: ToBoolean(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToBoolean(Byte[], Int32)
  nameWithType: BitConverter.ToBoolean(Byte[], Int32)
  fullName: BitConverter.ToBoolean(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a Boolean value converted from the byte at a specified position in a byte array.
  remarks: To convert a <xref:System.Boolean> value to its byte representation, call the <xref:System.BitConverter.ToBoolean%2A> method.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Boolean> values with the `ToBoolean` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batobool.cpp#1)]\n [!code-csharp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batobool.cs#1)]\n [!code-vb[System.BitConverter.ToXXX.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batobool.vb#1)]"
  syntax:
    content: public static bool ToBoolean (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: A byte array.
    - id: startIndex
      type: System.Int32
      description: The index of the byte within <code>value</code>.
    return:
      type: System.Boolean
      description: '`true` if the byte at <code>startIndex</code> in <code>value</code> is nonzero; otherwise, `false`.'
  overload: System.BitConverter.ToBoolean*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToChar(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToChar(System.Byte[],System.Int32)
  id: ToChar(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToChar(Byte[], Int32)
  nameWithType: BitConverter.ToChar(Byte[], Int32)
  fullName: BitConverter.ToChar(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a Unicode character converted from two bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToChar%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.Char> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Char> values (Unicode characters) with the `ToChar` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batochar.cpp#2)]\n [!code-csharp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batochar.cs#2)]\n [!code-vb[System.BitConverter.ToXXX.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batochar.vb#2)]"
  syntax:
    content: public static char ToChar (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.Char
      description: A character formed by two bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToChar*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> equals the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToDouble(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToDouble(System.Byte[],System.Int32)
  id: ToDouble(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToDouble(Byte[], Int32)
  nameWithType: BitConverter.ToDouble(Byte[], Int32)
  fullName: BitConverter.ToDouble(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a double-precision floating point number converted from eight bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToDouble%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Double> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Double> values with the `ToDouble` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batodouble.cpp#3)]\n [!code-csharp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batodouble.cs#3)]\n [!code-vb[System.BitConverter.ToXXX.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batodouble.vb#3)]"
  syntax:
    content: public static double ToDouble (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.Double
      description: A double precision floating point number formed by eight bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToDouble*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> is greater than or equal to the length of <code>value</code> minus 7, and is less than or equal to the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToInt16(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToInt16(System.Byte[],System.Int32)
  id: ToInt16(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToInt16(Byte[], Int32)
  nameWithType: BitConverter.ToInt16(Byte[], Int32)
  fullName: BitConverter.ToInt16(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to an <xref:System.Int16> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int16> values with the `ToInt16` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint16.cpp#1)]\n [!code-csharp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint16.cs#1)]\n [!code-vb[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint16.vb#1)]"
  syntax:
    content: public static short ToInt16 (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.Int16
      description: A 16-bit signed integer formed by two bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToInt16*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> equals the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToInt32(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToInt32(System.Byte[],System.Int32)
  id: ToInt32(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToInt32(Byte[], Int32)
  nameWithType: BitConverter.ToInt32(Byte[], Int32)
  fullName: BitConverter.ToInt32(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to an <xref:System.Int32> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.
  example:
  - "The following example uses the <xref:System.BitConverter.ToInt32%2A> method to create <xref:System.Int32> values from a four-byte array and from the upper four bytes of an eight-byte array. It also uses the <xref:System.BitConverter.GetBytes%28System.Int32%29> and <xref:System.BitConverter.ToInt32%2A> methods to round-trip an <xref:System.Int32> value.  \n  \n [!code-csharp[System.BitConverter.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.bitconverter.toint32/cs/toint32.cs#1)]\n [!code-vb[System.BitConverter.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.bitconverter.toint32/vb/toint32.vb#1)]"
  syntax:
    content: public static int ToInt32 (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.Int32
      description: A 32-bit signed integer formed by four bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToInt32*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> is greater than or equal to the length of <code>value</code> minus 3, and is less than or equal to the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToInt64(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToInt64(System.Byte[],System.Int32)
  id: ToInt64(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToInt64(Byte[], Int32)
  nameWithType: BitConverter.ToInt64(Byte[], Int32)
  fullName: BitConverter.ToInt64(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Int64> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int64> values with the `ToInt64` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint64.cpp#3)]\n [!code-csharp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint64.cs#3)]\n [!code-vb[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint64.vb#3)]"
  syntax:
    content: public static long ToInt64 (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.Int64
      description: A 64-bit signed integer formed by eight bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToInt64*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> is greater than or equal to the length of <code>value</code> minus 7, and is less than or equal to the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToSingle(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToSingle(System.Byte[],System.Int32)
  id: ToSingle(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToSingle(Byte[], Int32)
  nameWithType: BitConverter.ToSingle(Byte[], Int32)
  fullName: BitConverter.ToSingle(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToSingle%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.Single> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Single> values with the `ToSingle` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batosingle.cpp#4)]\n [!code-csharp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batosingle.cs#4)]\n [!code-vb[System.BitConverter.ToXXX.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batosingle.vb#4)]"
  syntax:
    content: public static float ToSingle (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.Single
      description: A single-precision floating point number formed by four bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToSingle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> is greater than or equal to the length of <code>value</code> minus 3, and is less than or equal to the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToString(System.Byte[])
  commentId: M:System.BitConverter.ToString(System.Byte[])
  id: ToString(System.Byte[])
  parent: System.BitConverter
  langs:
  - csharp
  name: ToString(Byte[])
  nameWithType: BitConverter.ToString(Byte[])
  fullName: BitConverter.ToString(Byte[])
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.
  remarks: All the elements of `value` are converted. The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts <xref:System.Byte> arrays to <xref:System.String> objects with the `ToString` method.  \n  \n [!code-cpp[System.BitConverter.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostring.cpp#1)]\n [!code-csharp[System.BitConverter.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostring.cs#1)]\n [!code-vb[System.BitConverter.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostring.vb#1)]"
  syntax:
    content: public static string ToString (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    return:
      type: System.String
      description: A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in <code>value</code>; for example, "7F-2C-4A-00".
  overload: System.BitConverter.ToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToString(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToString(System.Byte[],System.Int32)
  id: ToString(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToString(Byte[], Int32)
  nameWithType: BitConverter.ToString(Byte[], Int32)
  fullName: BitConverter.ToString(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.
  remarks: The elements from array position `startIndex` to the end of the array are converted. The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.
  example:
  - "The following code example converts the part of a <xref:System.Byte> array starting at the specified `startIndex` to a <xref:System.String> with the `ToString` method.  \n  \n [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]\n [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]\n [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]"
  syntax:
    content: public static string ToString (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.String
      description: A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <code>value</code>; for example, "7F-2C-4A-00".
  overload: System.BitConverter.ToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)
  id: ToString(System.Byte[],System.Int32,System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToString(Byte[], Int32, Int32)
  nameWithType: BitConverter.ToString(Byte[], Int32, Int32)
  fullName: BitConverter.ToString(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.
  remarks: "The `length` elements from array position `startIndex` are converted. If `length` equals zero, the method returns <xref:System.String?displayProperty=fullName>.  \n  \n The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian."
  example:
  - "The following example uses the <xref:System.BitConverter.ToString%2A> method to convert part of a byte array, starting at the specified `startIndex` and with the specified `length`, to a string.  \n  \n [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]\n [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]\n [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]"
  syntax:
    content: public static string ToString (byte[] value, int startIndex, int length);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    - id: length
      type: System.Int32
      description: The number of array elements in <code>value</code> to convert.
    return:
      type: System.String
      description: A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <code>value</code>; for example, "7F-2C-4A-00".
  overload: System.BitConverter.ToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>startIndex</code> or <code>length</code> is less than zero.  \n  \n -or-  \n  \n <code>startIndex</code> is greater than zero and is greater than or equal to the length of <code>value</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The combination of <code>startIndex</code> and <code>length</code> does not specify a position within <code>value</code>; that is, the <code>startIndex</code> parameter is greater than the length of <code>value</code> minus the <code>length</code> parameter.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToUInt16(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)
  id: ToUInt16(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToUInt16(Byte[], Int32)
  nameWithType: BitConverter.ToUInt16(Byte[], Int32)
  fullName: BitConverter.ToUInt16(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToUInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.UInt16> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt16> values with the `ToUInt16` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint16.cpp#1)]\n [!code-csharp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint16.cs#1)]\n [!code-vb[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint16.vb#1)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static ushort ToUInt16 (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: The array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer formed by two bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToUInt16*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> equals the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToUInt32(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)
  id: ToUInt32(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToUInt32(Byte[], Int32)
  nameWithType: BitConverter.ToUInt32(Byte[], Int32)
  fullName: BitConverter.ToUInt32(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToUInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.UInt32> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt32> values with the `ToUInt32` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint32.cpp#2)]\n [!code-csharp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint32.cs#2)]\n [!code-vb[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint32.vb#2)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static uint ToUInt32 (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer formed by four bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToUInt32*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> is greater than or equal to the length of <code>value</code> minus 3, and is less than or equal to the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.BitConverter.ToUInt64(System.Byte[],System.Int32)
  commentId: M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)
  id: ToUInt64(System.Byte[],System.Int32)
  parent: System.BitConverter
  langs:
  - csharp
  name: ToUInt64(Byte[], Int32)
  nameWithType: BitConverter.ToUInt64(Byte[], Int32)
  fullName: BitConverter.ToUInt64(Byte[], Int32)
  type: Method
  assemblies:
  - System.Runtime.Extensions
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a 64-bit unsigned integer converted from eight bytes at a specified position in a byte array.
  remarks: The <xref:System.BitConverter.ToUInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.UInt64> value. The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.
  example:
  - "The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt64> values with the `ToUInt64` method.  \n  \n [!code-cpp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint64.cpp#3)]\n [!code-csharp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint64.cs#3)]\n [!code-vb[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint64.vb#3)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static ulong ToUInt64 (byte[] value, int startIndex);
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of bytes.
    - id: startIndex
      type: System.Int32
      description: The starting position within <code>value</code>.
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer formed by the eight bytes beginning at <code>startIndex</code>.
  overload: System.BitConverter.ToUInt64*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>startIndex</code> is greater than or equal to the length of <code>value</code> minus 7, and is less than or equal to the length of <code>value</code> minus 1.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>startIndex</code> is less than zero or greater than the length of <code>value</code> minus 1.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.BitConverter.DoubleToInt64Bits(System.Double)
  parent: System.BitConverter
  isExternal: false
  name: DoubleToInt64Bits(Double)
  nameWithType: BitConverter.DoubleToInt64Bits(Double)
  fullName: BitConverter.DoubleToInt64Bits(Double)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.BitConverter.GetBytes(System.Boolean)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(Boolean)
  nameWithType: BitConverter.GetBytes(Boolean)
  fullName: BitConverter.GetBytes(Boolean)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.BitConverter.GetBytes(System.Char)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(Char)
  nameWithType: BitConverter.GetBytes(Char)
  fullName: BitConverter.GetBytes(Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.BitConverter.GetBytes(System.Double)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(Double)
  nameWithType: BitConverter.GetBytes(Double)
  fullName: BitConverter.GetBytes(Double)
- uid: System.BitConverter.GetBytes(System.Int16)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(Int16)
  nameWithType: BitConverter.GetBytes(Int16)
  fullName: BitConverter.GetBytes(Int16)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.BitConverter.GetBytes(System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(Int32)
  nameWithType: BitConverter.GetBytes(Int32)
  fullName: BitConverter.GetBytes(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.BitConverter.GetBytes(System.Int64)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(Int64)
  nameWithType: BitConverter.GetBytes(Int64)
  fullName: BitConverter.GetBytes(Int64)
- uid: System.BitConverter.GetBytes(System.Single)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(Single)
  nameWithType: BitConverter.GetBytes(Single)
  fullName: BitConverter.GetBytes(Single)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.BitConverter.GetBytes(System.UInt16)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(UInt16)
  nameWithType: BitConverter.GetBytes(UInt16)
  fullName: BitConverter.GetBytes(UInt16)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.BitConverter.GetBytes(System.UInt32)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(UInt32)
  nameWithType: BitConverter.GetBytes(UInt32)
  fullName: BitConverter.GetBytes(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.BitConverter.GetBytes(System.UInt64)
  parent: System.BitConverter
  isExternal: false
  name: GetBytes(UInt64)
  nameWithType: BitConverter.GetBytes(UInt64)
  fullName: BitConverter.GetBytes(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.BitConverter.Int32BitsToSingle(System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: Int32BitsToSingle(Int32)
  nameWithType: BitConverter.Int32BitsToSingle(Int32)
  fullName: BitConverter.Int32BitsToSingle(Int32)
- uid: System.BitConverter.Int64BitsToDouble(System.Int64)
  parent: System.BitConverter
  isExternal: false
  name: Int64BitsToDouble(Int64)
  nameWithType: BitConverter.Int64BitsToDouble(Int64)
  fullName: BitConverter.Int64BitsToDouble(Int64)
- uid: System.BitConverter.IsLittleEndian
  parent: System.BitConverter
  isExternal: false
  name: IsLittleEndian
  nameWithType: BitConverter.IsLittleEndian
  fullName: BitConverter.IsLittleEndian
- uid: System.BitConverter.SingleToInt32Bits(System.Single)
  parent: System.BitConverter
  isExternal: false
  name: SingleToInt32Bits(Single)
  nameWithType: BitConverter.SingleToInt32Bits(Single)
  fullName: BitConverter.SingleToInt32Bits(Single)
- uid: System.BitConverter.ToBoolean(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToBoolean(Byte[], Int32)
  nameWithType: BitConverter.ToBoolean(Byte[], Int32)
  fullName: BitConverter.ToBoolean(Byte[], Int32)
- uid: System.BitConverter.ToChar(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToChar(Byte[], Int32)
  nameWithType: BitConverter.ToChar(Byte[], Int32)
  fullName: BitConverter.ToChar(Byte[], Int32)
- uid: System.BitConverter.ToDouble(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToDouble(Byte[], Int32)
  nameWithType: BitConverter.ToDouble(Byte[], Int32)
  fullName: BitConverter.ToDouble(Byte[], Int32)
- uid: System.BitConverter.ToInt16(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToInt16(Byte[], Int32)
  nameWithType: BitConverter.ToInt16(Byte[], Int32)
  fullName: BitConverter.ToInt16(Byte[], Int32)
- uid: System.BitConverter.ToInt32(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToInt32(Byte[], Int32)
  nameWithType: BitConverter.ToInt32(Byte[], Int32)
  fullName: BitConverter.ToInt32(Byte[], Int32)
- uid: System.BitConverter.ToInt64(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToInt64(Byte[], Int32)
  nameWithType: BitConverter.ToInt64(Byte[], Int32)
  fullName: BitConverter.ToInt64(Byte[], Int32)
- uid: System.BitConverter.ToSingle(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToSingle(Byte[], Int32)
  nameWithType: BitConverter.ToSingle(Byte[], Int32)
  fullName: BitConverter.ToSingle(Byte[], Int32)
- uid: System.BitConverter.ToString(System.Byte[])
  parent: System.BitConverter
  isExternal: false
  name: ToString(Byte[])
  nameWithType: BitConverter.ToString(Byte[])
  fullName: BitConverter.ToString(Byte[])
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.BitConverter.ToString(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToString(Byte[], Int32)
  nameWithType: BitConverter.ToString(Byte[], Int32)
  fullName: BitConverter.ToString(Byte[], Int32)
- uid: System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToString(Byte[], Int32, Int32)
  nameWithType: BitConverter.ToString(Byte[], Int32, Int32)
  fullName: BitConverter.ToString(Byte[], Int32, Int32)
- uid: System.BitConverter.ToUInt16(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToUInt16(Byte[], Int32)
  nameWithType: BitConverter.ToUInt16(Byte[], Int32)
  fullName: BitConverter.ToUInt16(Byte[], Int32)
- uid: System.BitConverter.ToUInt32(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToUInt32(Byte[], Int32)
  nameWithType: BitConverter.ToUInt32(Byte[], Int32)
  fullName: BitConverter.ToUInt32(Byte[], Int32)
- uid: System.BitConverter.ToUInt64(System.Byte[],System.Int32)
  parent: System.BitConverter
  isExternal: false
  name: ToUInt64(Byte[], Int32)
  nameWithType: BitConverter.ToUInt64(Byte[], Int32)
  fullName: BitConverter.ToUInt64(Byte[], Int32)
- uid: System.BitConverter.DoubleToInt64Bits*
  parent: System.BitConverter
  isExternal: false
  name: DoubleToInt64Bits
  nameWithType: BitConverter.DoubleToInt64Bits
  fullName: BitConverter.DoubleToInt64Bits
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.GetBytes*
  parent: System.BitConverter
  isExternal: false
  name: GetBytes
  nameWithType: BitConverter.GetBytes
  fullName: BitConverter.GetBytes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.Int32BitsToSingle*
  parent: System.BitConverter
  isExternal: false
  name: Int32BitsToSingle
  nameWithType: BitConverter.Int32BitsToSingle
  fullName: BitConverter.Int32BitsToSingle
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.Int64BitsToDouble*
  parent: System.BitConverter
  isExternal: false
  name: Int64BitsToDouble
  nameWithType: BitConverter.Int64BitsToDouble
  fullName: BitConverter.Int64BitsToDouble
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.SingleToInt32Bits*
  parent: System.BitConverter
  isExternal: false
  name: SingleToInt32Bits
  nameWithType: BitConverter.SingleToInt32Bits
  fullName: BitConverter.SingleToInt32Bits
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToBoolean*
  parent: System.BitConverter
  isExternal: false
  name: ToBoolean
  nameWithType: BitConverter.ToBoolean
  fullName: BitConverter.ToBoolean
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToChar*
  parent: System.BitConverter
  isExternal: false
  name: ToChar
  nameWithType: BitConverter.ToChar
  fullName: BitConverter.ToChar
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToDouble*
  parent: System.BitConverter
  isExternal: false
  name: ToDouble
  nameWithType: BitConverter.ToDouble
  fullName: BitConverter.ToDouble
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToInt16*
  parent: System.BitConverter
  isExternal: false
  name: ToInt16
  nameWithType: BitConverter.ToInt16
  fullName: BitConverter.ToInt16
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToInt32*
  parent: System.BitConverter
  isExternal: false
  name: ToInt32
  nameWithType: BitConverter.ToInt32
  fullName: BitConverter.ToInt32
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToInt64*
  parent: System.BitConverter
  isExternal: false
  name: ToInt64
  nameWithType: BitConverter.ToInt64
  fullName: BitConverter.ToInt64
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToSingle*
  parent: System.BitConverter
  isExternal: false
  name: ToSingle
  nameWithType: BitConverter.ToSingle
  fullName: BitConverter.ToSingle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToString*
  parent: System.BitConverter
  isExternal: false
  name: ToString
  nameWithType: BitConverter.ToString
  fullName: BitConverter.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToUInt16*
  parent: System.BitConverter
  isExternal: false
  name: ToUInt16
  nameWithType: BitConverter.ToUInt16
  fullName: BitConverter.ToUInt16
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToUInt32*
  parent: System.BitConverter
  isExternal: false
  name: ToUInt32
  nameWithType: BitConverter.ToUInt32
  fullName: BitConverter.ToUInt32
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.BitConverter.ToUInt64*
  parent: System.BitConverter
  isExternal: false
  name: ToUInt64
  nameWithType: BitConverter.ToUInt64
  fullName: BitConverter.ToUInt64
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BitConverter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
