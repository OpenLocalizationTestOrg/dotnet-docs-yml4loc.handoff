{"nodes":[{"content":"An `abstract` base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.","nodes":[{"pos":[0,198],"content":"An <ph id=\"ph1\">`abstract`</ph> base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.","source":"An `abstract` base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address."}],"pos":[835,1034],"yaml":true},{"content":"The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message. Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>.  \n  \n For more information about implementing the class, see [How to: Create a Custom Client Identity Verifier](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).","nodes":[{"pos":[0,444],"content":"The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message. Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> infrastructure calls the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A&gt;</ph> method first to retrieve the service's identity from the message.","pos":[0,211],"source":"The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message."},{"content":"Next, the infrastructure calls the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A&gt;</ph> method with the returned <ph id=\"ph2\">&lt;xref:System.ServiceModel.EndpointIdentity&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph>.","pos":[212,444],"source":" Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>."}]},{"pos":[451,640],"content":"For more information about implementing the class, see <bpt id=\"p1\">[</bpt>How to: Create a Custom Client Identity Verifier<ept id=\"p1\">](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md)</ept>.","source":"For more information about implementing the class, see [How to: Create a Custom Client Identity Verifier](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md)."}],"pos":[1045,1690],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of this class.","nodes":[{"pos":[0,34],"content":"Creates an instance of this class.","nodes":[{"content":"Creates an instance of this class.","pos":[0,34]}]}],"pos":[3129,3164],"yaml":true},{"content":"Implements a method to verify an identity.","nodes":[{"pos":[0,42],"content":"Implements a method to verify an identity.","nodes":[{"content":"Implements a method to verify an identity.","pos":[0,42]}]}],"pos":[4723,4766],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointIdentity\"></xref> to verify.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointIdentity\"&gt;&lt;/xref&gt;</ph> to verify.","source":"The <xref href=\"System.ServiceModel.EndpointIdentity\"></xref> to verify."}],"pos":[5036,5109],"yaml":true},{"content":"The <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> to test the <code>identity</code> against.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext\"&gt;&lt;/xref&gt;</ph> to test the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept> against.","source":"The <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> to test the <code>identity</code> against."}],"pos":[5211,5328],"yaml":true},{"content":"`true` if the identity is verified; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,79],"content":"`true` if the identity is verified; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the identity is verified; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,55],"source":"`true` if the identity is verified; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[56,79],"source":" The default is `false`."}]}],"pos":[5386,5468],"yaml":true},{"content":"Creates a default instance of this class.","nodes":[{"pos":[0,41],"content":"Creates a default instance of this class.","nodes":[{"content":"Creates a default instance of this class.","pos":[0,41]}]}],"pos":[6597,6639],"yaml":true},{"content":"A default instance of <xref href=\"System.ServiceModel.Security.IdentityVerifier\"></xref>.","nodes":[{"pos":[0,89],"content":"A default instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.IdentityVerifier\"&gt;&lt;/xref&gt;</ph>.","source":"A default instance of <xref href=\"System.ServiceModel.Security.IdentityVerifier\"></xref>."}],"pos":[6848,6938],"yaml":true},{"content":"Tries to create an identity from an endpoint.","nodes":[{"pos":[0,45],"content":"Tries to create an identity from an endpoint.","nodes":[{"content":"Tries to create an identity from an endpoint.","pos":[0,45]}]}],"pos":[8399,8445],"yaml":true},{"content":"The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>.","nodes":[{"pos":[0,345],"content":"The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>.","nodes":[{"content":"The default <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.IdentityVerifier&gt;</ph> creates a <ph id=\"ph2\">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph> based on the hostname portion of <ph id=\"ph3\">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph> if an explicit <ph id=\"ph4\">&lt;xref:System.ServiceModel.EndpointIdentity&gt;</ph> has not been specified as part of the <ph id=\"ph5\">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>.","pos":[0,345],"source":"The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>."}]}],"pos":[8456,8802],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> to use for creating the identity.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> to use for creating the identity.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> to use for creating the identity."}],"pos":[9064,9159],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointIdentity\"></xref> that is returned.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointIdentity\"&gt;&lt;/xref&gt;</ph> that is returned.","source":"The <xref href=\"System.ServiceModel.EndpointIdentity\"></xref> that is returned."}],"pos":[9246,9326],"yaml":true},{"content":"`true` if the identity is returned; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,79],"content":"`true` if the identity is returned; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the identity is returned; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,55],"source":"`true` if the identity is returned; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[56,79],"source":" The default is `false`."}]}],"pos":[9384,9466],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.IdentityVerifier\n  commentId: T:System.ServiceModel.Security.IdentityVerifier\n  id: IdentityVerifier\n  children:\n  - System.ServiceModel.Security.IdentityVerifier.#ctor\n  - System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)\n  - System.ServiceModel.Security.IdentityVerifier.CreateDefault\n  - System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)\n  langs:\n  - csharp\n  name: IdentityVerifier\n  nameWithType: IdentityVerifier\n  fullName: System.ServiceModel.Security.IdentityVerifier\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: An `abstract` base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.\n  remarks: \"The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message. Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>.  \\n  \\n For more information about implementing the class, see [How to: Create a Custom Client Identity Verifier](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).\"\n  syntax:\n    content: public abstract class IdentityVerifier\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.IdentityVerifier.#ctor\n  commentId: M:System.ServiceModel.Security.IdentityVerifier.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Security.IdentityVerifier\n  langs:\n  - csharp\n  name: IdentityVerifier()\n  nameWithType: IdentityVerifier.IdentityVerifier()\n  fullName: IdentityVerifier.IdentityVerifier()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates an instance of this class.\n  syntax:\n    content: protected IdentityVerifier ();\n    parameters: []\n  overload: System.ServiceModel.Security.IdentityVerifier.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)\n  commentId: M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)\n  id: CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)\n  parent: System.ServiceModel.Security.IdentityVerifier\n  langs:\n  - csharp\n  name: CheckAccess(EndpointIdentity, AuthorizationContext)\n  nameWithType: IdentityVerifier.CheckAccess(EndpointIdentity, AuthorizationContext)\n  fullName: IdentityVerifier.CheckAccess(EndpointIdentity, AuthorizationContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Implements a method to verify an identity.\n  syntax:\n    content: public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);\n    parameters:\n    - id: identity\n      type: System.ServiceModel.EndpointIdentity\n      description: The <xref href=\"System.ServiceModel.EndpointIdentity\"></xref> to verify.\n    - id: authContext\n      type: System.IdentityModel.Policy.AuthorizationContext\n      description: The <xref href=\"System.IdentityModel.Policy.AuthorizationContext\"></xref> to test the <code>identity</code> against.\n    return:\n      type: System.Boolean\n      description: '`true` if the identity is verified; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Security.IdentityVerifier.CheckAccess*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault\n  commentId: M:System.ServiceModel.Security.IdentityVerifier.CreateDefault\n  id: CreateDefault\n  parent: System.ServiceModel.Security.IdentityVerifier\n  langs:\n  - csharp\n  name: CreateDefault()\n  nameWithType: IdentityVerifier.CreateDefault()\n  fullName: IdentityVerifier.CreateDefault()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates a default instance of this class.\n  syntax:\n    content: public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Security.IdentityVerifier\n      description: A default instance of <xref href=\"System.ServiceModel.Security.IdentityVerifier\"></xref>.\n  overload: System.ServiceModel.Security.IdentityVerifier.CreateDefault*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)\n  commentId: M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)\n  id: TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)\n  parent: System.ServiceModel.Security.IdentityVerifier\n  langs:\n  - csharp\n  name: TryGetIdentity(EndpointAddress, EndpointIdentity)\n  nameWithType: IdentityVerifier.TryGetIdentity(EndpointAddress, EndpointIdentity)\n  fullName: IdentityVerifier.TryGetIdentity(EndpointAddress, EndpointIdentity)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Tries to create an identity from an endpoint.\n  remarks: The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>.\n  syntax:\n    content: public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);\n    parameters:\n    - id: reference\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> to use for creating the identity.\n    - id: identity\n      type: System.ServiceModel.EndpointIdentity\n      description: The <xref href=\"System.ServiceModel.EndpointIdentity\"></xref> that is returned.\n    return:\n      type: System.Boolean\n      description: '`true` if the identity is returned; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Security.IdentityVerifier.#ctor\n  parent: System.ServiceModel.Security.IdentityVerifier\n  isExternal: false\n  name: IdentityVerifier()\n  nameWithType: IdentityVerifier.IdentityVerifier()\n  fullName: IdentityVerifier.IdentityVerifier()\n- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)\n  parent: System.ServiceModel.Security.IdentityVerifier\n  isExternal: false\n  name: CheckAccess(EndpointIdentity, AuthorizationContext)\n  nameWithType: IdentityVerifier.CheckAccess(EndpointIdentity, AuthorizationContext)\n  fullName: IdentityVerifier.CheckAccess(EndpointIdentity, AuthorizationContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.EndpointIdentity\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointIdentity\n  nameWithType: EndpointIdentity\n  fullName: System.ServiceModel.EndpointIdentity\n- uid: System.IdentityModel.Policy.AuthorizationContext\n  parent: System.IdentityModel.Policy\n  isExternal: false\n  name: AuthorizationContext\n  nameWithType: AuthorizationContext\n  fullName: System.IdentityModel.Policy.AuthorizationContext\n- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault\n  parent: System.ServiceModel.Security.IdentityVerifier\n  isExternal: false\n  name: CreateDefault()\n  nameWithType: IdentityVerifier.CreateDefault()\n  fullName: IdentityVerifier.CreateDefault()\n- uid: System.ServiceModel.Security.IdentityVerifier\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: IdentityVerifier\n  nameWithType: IdentityVerifier\n  fullName: System.ServiceModel.Security.IdentityVerifier\n- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)\n  parent: System.ServiceModel.Security.IdentityVerifier\n  isExternal: false\n  name: TryGetIdentity(EndpointAddress, EndpointIdentity)\n  nameWithType: IdentityVerifier.TryGetIdentity(EndpointAddress, EndpointIdentity)\n  fullName: IdentityVerifier.TryGetIdentity(EndpointAddress, EndpointIdentity)\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.Security.IdentityVerifier.#ctor*\n  parent: System.ServiceModel.Security.IdentityVerifier\n  isExternal: false\n  name: IdentityVerifier\n  nameWithType: IdentityVerifier.IdentityVerifier\n  fullName: IdentityVerifier.IdentityVerifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n- uid: System.ServiceModel.Security.IdentityVerifier.CheckAccess*\n  parent: System.ServiceModel.Security.IdentityVerifier\n  isExternal: false\n  name: CheckAccess\n  nameWithType: IdentityVerifier.CheckAccess\n  fullName: IdentityVerifier.CheckAccess\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n- uid: System.ServiceModel.Security.IdentityVerifier.CreateDefault*\n  parent: System.ServiceModel.Security.IdentityVerifier\n  isExternal: false\n  name: CreateDefault\n  nameWithType: IdentityVerifier.CreateDefault\n  fullName: IdentityVerifier.CreateDefault\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n- uid: System.ServiceModel.Security.IdentityVerifier.TryGetIdentity*\n  parent: System.ServiceModel.Security.IdentityVerifier\n  isExternal: false\n  name: TryGetIdentity\n  nameWithType: IdentityVerifier.TryGetIdentity\n  fullName: IdentityVerifier.TryGetIdentity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/IdentityVerifier.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}