### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.AceFlags
  commentId: T:System.Security.AccessControl.AceFlags
  id: AceFlags
  children:
  - System.Security.AccessControl.AceFlags.AuditFlags
  - System.Security.AccessControl.AceFlags.ContainerInherit
  - System.Security.AccessControl.AceFlags.FailedAccess
  - System.Security.AccessControl.AceFlags.InheritanceFlags
  - System.Security.AccessControl.AceFlags.Inherited
  - System.Security.AccessControl.AceFlags.InheritOnly
  - System.Security.AccessControl.AceFlags.None
  - System.Security.AccessControl.AceFlags.NoPropagateInherit
  - System.Security.AccessControl.AceFlags.ObjectInherit
  - System.Security.AccessControl.AceFlags.SuccessfulAccess
  langs:
  - csharp
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
  type: Enum
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Specifies the inheritance and auditing behavior of an access control entry (ACE).
  syntax:
    content: >-
      [System.Flags]

      public enum AceFlags
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.FlagsAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.AceFlags.AuditFlags
  commentId: F:System.Security.AccessControl.AceFlags.AuditFlags
  id: AuditFlags
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: AuditFlags
  nameWithType: AceFlags.AuditFlags
  fullName: AceFlags.AuditFlags
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: All access attempts are audited.
  syntax:
    content: AuditFlags
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.ContainerInherit
  commentId: F:System.Security.AccessControl.AceFlags.ContainerInherit
  id: ContainerInherit
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: ContainerInherit
  nameWithType: AceFlags.ContainerInherit
  fullName: AceFlags.ContainerInherit
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: The access mask is propagated to child container objects.
  syntax:
    content: ContainerInherit
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.FailedAccess
  commentId: F:System.Security.AccessControl.AceFlags.FailedAccess
  id: FailedAccess
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: FailedAccess
  nameWithType: AceFlags.FailedAccess
  fullName: AceFlags.FailedAccess
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Failed access attempts are audited.
  syntax:
    content: FailedAccess
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.InheritanceFlags
  commentId: F:System.Security.AccessControl.AceFlags.InheritanceFlags
  id: InheritanceFlags
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: InheritanceFlags
  nameWithType: AceFlags.InheritanceFlags
  fullName: AceFlags.InheritanceFlags
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: A logical `OR` of <xref href="System.Security.AccessControl.AceFlags.ObjectInherit"></xref>, <xref href="System.Security.AccessControl.AceFlags.ContainerInherit"></xref>, <xref href="System.Security.AccessControl.AceFlags.NoPropagateInherit"></xref>, and <xref href="System.Security.AccessControl.AceFlags.InheritOnly"></xref>.
  syntax:
    content: InheritanceFlags
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.Inherited
  commentId: F:System.Security.AccessControl.AceFlags.Inherited
  id: Inherited
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: Inherited
  nameWithType: AceFlags.Inherited
  fullName: AceFlags.Inherited
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: An ACE is inherited from a parent container rather than being explicitly set for an object.
  syntax:
    content: Inherited
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.InheritOnly
  commentId: F:System.Security.AccessControl.AceFlags.InheritOnly
  id: InheritOnly
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: InheritOnly
  nameWithType: AceFlags.InheritOnly
  fullName: AceFlags.InheritOnly
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: The access mask is propagated only to child objects. This includes both container and leaf child objects.
  syntax:
    content: InheritOnly
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.None
  commentId: F:System.Security.AccessControl.AceFlags.None
  id: None
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: None
  nameWithType: AceFlags.None
  fullName: AceFlags.None
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: No ACE flags are set.
  syntax:
    content: None
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.NoPropagateInherit
  commentId: F:System.Security.AccessControl.AceFlags.NoPropagateInherit
  id: NoPropagateInherit
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: NoPropagateInherit
  nameWithType: AceFlags.NoPropagateInherit
  fullName: AceFlags.NoPropagateInherit
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: The access checks do not apply to the object; they only apply to its children.
  syntax:
    content: NoPropagateInherit
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.ObjectInherit
  commentId: F:System.Security.AccessControl.AceFlags.ObjectInherit
  id: ObjectInherit
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: ObjectInherit
  nameWithType: AceFlags.ObjectInherit
  fullName: AceFlags.ObjectInherit
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: The access mask is propagated onto child leaf objects.
  syntax:
    content: ObjectInherit
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
- uid: System.Security.AccessControl.AceFlags.SuccessfulAccess
  commentId: F:System.Security.AccessControl.AceFlags.SuccessfulAccess
  id: SuccessfulAccess
  parent: System.Security.AccessControl.AceFlags
  langs:
  - csharp
  name: SuccessfulAccess
  nameWithType: AceFlags.SuccessfulAccess
  fullName: AceFlags.SuccessfulAccess
  type: Field
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Successful access attempts are audited.
  syntax:
    content: SuccessfulAccess
    return:
      type: System.Security.AccessControl.AceFlags
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AceFlags.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Security.AccessControl.AceFlags.AuditFlags
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: AuditFlags
  nameWithType: AceFlags.AuditFlags
  fullName: AceFlags.AuditFlags
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Security.AccessControl.AceFlags.ContainerInherit
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: ContainerInherit
  nameWithType: AceFlags.ContainerInherit
  fullName: AceFlags.ContainerInherit
- uid: System.Security.AccessControl.AceFlags.FailedAccess
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: FailedAccess
  nameWithType: AceFlags.FailedAccess
  fullName: AceFlags.FailedAccess
- uid: System.Security.AccessControl.AceFlags.InheritanceFlags
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: InheritanceFlags
  nameWithType: AceFlags.InheritanceFlags
  fullName: AceFlags.InheritanceFlags
- uid: System.Security.AccessControl.AceFlags.Inherited
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: Inherited
  nameWithType: AceFlags.Inherited
  fullName: AceFlags.Inherited
- uid: System.Security.AccessControl.AceFlags.InheritOnly
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: InheritOnly
  nameWithType: AceFlags.InheritOnly
  fullName: AceFlags.InheritOnly
- uid: System.Security.AccessControl.AceFlags.None
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: None
  nameWithType: AceFlags.None
  fullName: AceFlags.None
- uid: System.Security.AccessControl.AceFlags.NoPropagateInherit
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: NoPropagateInherit
  nameWithType: AceFlags.NoPropagateInherit
  fullName: AceFlags.NoPropagateInherit
- uid: System.Security.AccessControl.AceFlags.ObjectInherit
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: ObjectInherit
  nameWithType: AceFlags.ObjectInherit
  fullName: AceFlags.ObjectInherit
- uid: System.Security.AccessControl.AceFlags.SuccessfulAccess
  parent: System.Security.AccessControl.AceFlags
  isExternal: false
  name: SuccessfulAccess
  nameWithType: AceFlags.SuccessfulAccess
  fullName: AceFlags.SuccessfulAccess
