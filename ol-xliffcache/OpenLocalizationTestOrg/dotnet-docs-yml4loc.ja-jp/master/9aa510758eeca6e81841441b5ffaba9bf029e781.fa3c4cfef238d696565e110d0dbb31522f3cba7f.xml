{"nodes":[{"content":"Represents an HTML element inside of a Web page.","nodes":[{"pos":[0,48],"content":"Represents an HTML element inside of a Web page.","nodes":[{"content":"Represents an HTML element inside of a Web page.","pos":[0,48]}]}],"pos":[3708,3757],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElement> represents any possible type of element in an HTML document, such as `BODY`, `TABLE`, and `FORM`, among others. The class exposes the most common properties you can expect to find on all elements.  \n  \n Most elements can have *child elements*: other HTML elements that are placed underneath them. Use the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property to test whether a given element has children, and the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection to iterate through them. The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property returns the <xref:System.Windows.Forms.HtmlElement> in which the current element is nested.  \n  \n You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <xref:System.Windows.Forms.HtmlElement>, such as the `SRC` attribute on an `IMG` element or the `Submit` method on a `FORM`. The <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> methods enable you to retrieve and alter any attribute or property on a specific element, while <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> provides access to any methods not exposed in the managed Document Object Model (DOM). If your application has unmanaged code permission, you can also access unexposed properties and methods with the <xref:System.Windows.Forms.HtmlElement.DomElement%2A> attribute.  \n  \n Use the <xref:System.Windows.Forms.HtmlElement.TagName%2A> property to test whether an element is of a specific type.  \n  \n Any HTML document can be modified at run time. You can create new <xref:System.Windows.Forms.HtmlElement> objects with the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method of <xref:System.Windows.Forms.HtmlDocument>, and add them to another element using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods. You can also create the elements as HTML tags and assign them to an existing element's <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property.","nodes":[{"pos":[0,236],"content":"<xref:System.Windows.Forms.HtmlElement> represents any possible type of element in an HTML document, such as `BODY`, `TABLE`, and `FORM`, among others. The class exposes the most common properties you can expect to find on all elements.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> represents any possible type of element in an HTML document, such as <ph id=\"ph2\">`BODY`</ph>, <ph id=\"ph3\">`TABLE`</ph>, and <ph id=\"ph4\">`FORM`</ph>, among others.","pos":[0,151],"source":"<xref:System.Windows.Forms.HtmlElement> represents any possible type of element in an HTML document, such as `BODY`, `TABLE`, and `FORM`, among others."},{"content":"The class exposes the most common properties you can expect to find on all elements.","pos":[152,236]}]},{"pos":[243,709],"content":"Most elements can have *child elements*: other HTML elements that are placed underneath them. Use the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property to test whether a given element has children, and the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection to iterate through them. The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property returns the <xref:System.Windows.Forms.HtmlElement> in which the current element is nested.","nodes":[{"content":"Most elements can have <bpt id=\"p1\">*</bpt>child elements<ept id=\"p1\">*</ept>: other HTML elements that are placed underneath them.","pos":[0,93],"source":"Most elements can have *child elements*: other HTML elements that are placed underneath them."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> property to test whether a given element has children, and the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection to iterate through them.","pos":[94,311],"source":" Use the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property to test whether a given element has children, and the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection to iterate through them."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property returns the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> in which the current element is nested.","pos":[312,466],"source":" The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property returns the <xref:System.Windows.Forms.HtmlElement> in which the current element is nested."}]},{"pos":[716,1497],"content":"You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <xref:System.Windows.Forms.HtmlElement>, such as the `SRC` attribute on an `IMG` element or the `Submit` method on a `FORM`. The <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> methods enable you to retrieve and alter any attribute or property on a specific element, while <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> provides access to any methods not exposed in the managed Document Object Model (DOM). If your application has unmanaged code permission, you can also access unexposed properties and methods with the <xref:System.Windows.Forms.HtmlElement.DomElement%2A> attribute.","nodes":[{"content":"You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>, such as the <ph id=\"ph2\">`SRC`</ph> attribute on an <ph id=\"ph3\">`IMG`</ph> element or the <ph id=\"ph4\">`Submit`</ph> method on a <ph id=\"ph5\">`FORM`</ph>.","pos":[0,244],"source":"You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <xref:System.Windows.Forms.HtmlElement>, such as the `SRC` attribute on an `IMG` element or the `Submit` method on a `FORM`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> methods enable you to retrieve and alter any attribute or property on a specific element, while <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> provides access to any methods not exposed in the managed Document Object Model (DOM).","pos":[245,603],"source":" The <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> methods enable you to retrieve and alter any attribute or property on a specific element, while <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> provides access to any methods not exposed in the managed Document Object Model (DOM)."},{"content":"If your application has unmanaged code permission, you can also access unexposed properties and methods with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.DomElement%2A&gt;</ph> attribute.","pos":[604,781],"source":" If your application has unmanaged code permission, you can also access unexposed properties and methods with the <xref:System.Windows.Forms.HtmlElement.DomElement%2A> attribute."}]},{"pos":[1504,1621],"content":"Use the <xref:System.Windows.Forms.HtmlElement.TagName%2A> property to test whether an element is of a specific type.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph> property to test whether an element is of a specific type.","pos":[0,117],"source":"Use the <xref:System.Windows.Forms.HtmlElement.TagName%2A> property to test whether an element is of a specific type."}]},{"pos":[1628,2184],"content":"Any HTML document can be modified at run time. You can create new <xref:System.Windows.Forms.HtmlElement> objects with the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method of <xref:System.Windows.Forms.HtmlDocument>, and add them to another element using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods. You can also create the elements as HTML tags and assign them to an existing element's <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property.","nodes":[{"content":"Any HTML document can be modified at run time. You can create new <xref:System.Windows.Forms.HtmlElement> objects with the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method of <xref:System.Windows.Forms.HtmlDocument>, and add them to another element using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods. You can also create the elements as HTML tags and assign them to an existing element's <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property.","pos":[0,556],"nodes":[{"content":"Any HTML document can be modified at run time.","pos":[0,46]},{"content":"You can create new <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> objects with the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> method of <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>, and add them to another element using the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> methods.","pos":[47,406],"source":" You can create new <xref:System.Windows.Forms.HtmlElement> objects with the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method of <xref:System.Windows.Forms.HtmlDocument>, and add them to another element using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods."},{"content":"You can also create the elements as HTML tags and assign them to an existing element's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property.","pos":[407,556],"source":" You can also create the elements as HTML tags and assign them to an existing element's <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property."}]}]}],"pos":[3768,5963],"yaml":true,"extradata":"MT"},{"content":"Gets an <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> of all elements underneath the current element.","nodes":[{"pos":[0,119],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElementCollection\"&gt;&lt;/xref&gt;</ph> of all elements underneath the current element.","source":"Gets an <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> of all elements underneath the current element."}],"pos":[7840,7960],"yaml":true},{"content":"To access only those elements which have the current element as their direct parent, use the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection instead.  \n  \n Elements in this collection will not necessarily be returned in source order.","nodes":[{"pos":[0,164],"content":"To access only those elements which have the current element as their direct parent, use the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection instead.","nodes":[{"content":"To access only those elements which have the current element as their direct parent, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection instead.","pos":[0,164],"source":"To access only those elements which have the current element as their direct parent, use the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection instead."}]},{"pos":[171,248],"content":"Elements in this collection will not necessarily be returned in source order.","nodes":[{"content":"Elements in this collection will not necessarily be returned in source order.","pos":[0,77]}]}],"pos":[7971,8224],"yaml":true,"extradata":"MT"},{"content":"A collection of all elements that are direct or indirect children of the current element. If the current element is a <code>TABLE</code>, for example, <xref href=\"System.Windows.Forms.HtmlElement.All\"></xref> will return every <code>TH</code>, <code>TR</code>, and <code>TD</code> element within the table, as well as any other elements, such as <code>DIV</code> and <code>SPAN</code> elements, contained within the cells.","nodes":[{"pos":[0,422],"content":"A collection of all elements that are direct or indirect children of the current element. If the current element is a <code>TABLE</code>, for example, <xref href=\"System.Windows.Forms.HtmlElement.All\"></xref> will return every <code>TH</code>, <code>TR</code>, and <code>TD</code> element within the table, as well as any other elements, such as <code>DIV</code> and <code>SPAN</code> elements, contained within the cells.","nodes":[{"content":"A collection of all elements that are direct or indirect children of the current element.","pos":[0,89]},{"content":"If the current element is a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TABLE</ph><ept id=\"p1\">&lt;/code&gt;</ept>, for example, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.HtmlElement.All\"&gt;&lt;/xref&gt;</ph> will return every <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">TH</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">TR</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph5\">TD</ph><ept id=\"p4\">&lt;/code&gt;</ept> element within the table, as well as any other elements, such as <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph6\">DIV</ph><ept id=\"p5\">&lt;/code&gt;</ept> and <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph7\">SPAN</ph><ept id=\"p6\">&lt;/code&gt;</ept> elements, contained within the cells.","pos":[90,422],"source":" If the current element is a <code>TABLE</code>, for example, <xref href=\"System.Windows.Forms.HtmlElement.All\"></xref> will return every <code>TH</code>, <code>TR</code>, and <code>TD</code> element within the table, as well as any other elements, such as <code>DIV</code> and <code>SPAN</code> elements, contained within the cells."}]}],"pos":[8396,8819],"yaml":true},{"content":"Adds an element to another element's subtree.","nodes":[{"pos":[0,45],"content":"Adds an element to another element's subtree.","nodes":[{"content":"Adds an element to another element's subtree.","pos":[0,45]}]}],"pos":[9947,9993],"yaml":true},{"content":"The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways. Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> to add new elements to an existing document, or to move an element on the page.  \n  \n If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.  \n  \n Any additions made to a document at run-time using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> will not be persisted when you call the <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> method on the <xref:System.Windows.Forms.WebBrowser> control.","nodes":[{"pos":[0,255],"content":"The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways. Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> to add new elements to an existing document, or to move an element on the page.","nodes":[{"content":"The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways. Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> to add new elements to an existing document, or to move an element on the page.","pos":[0,255],"nodes":[{"content":"The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways.","pos":[0,116]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> to add new elements to an existing document, or to move an element on the page.","pos":[117,255],"source":" Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> to add new elements to an existing document, or to move an element on the page."}]}]},{"pos":[262,407],"content":"If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.","nodes":[{"content":"If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.","pos":[0,145]}]},{"pos":[414,680],"content":"Any additions made to a document at run-time using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> will not be persisted when you call the <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> method on the <xref:System.Windows.Forms.WebBrowser> control.","nodes":[{"content":"Any additions made to a document at run-time using <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> will not be persisted when you call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A&gt;</ph> method on the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.","pos":[0,266],"source":"Any additions made to a document at run-time using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> will not be persisted when you call the <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> method on the <xref:System.Windows.Forms.WebBrowser> control."}]}],"pos":[10004,10691],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> to append to this location in the tree.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> to append to this location in the tree.","source":"The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> to append to this location in the tree."}],"pos":[11554,11652],"yaml":true},{"content":"The element after it has been added to the tree.","nodes":[{"pos":[0,48],"content":"The element after it has been added to the tree.","nodes":[{"content":"The element after it has been added to the tree.","pos":[0,48]}]}],"pos":[11728,11777],"yaml":true},{"content":"Adds an event handler for a named event on the HTML Document Object Model (DOM).","nodes":[{"pos":[0,80],"content":"Adds an event handler for a named event on the HTML Document Object Model (DOM).","nodes":[{"content":"Adds an event handler for a named event on the HTML Document Object Model (DOM).","pos":[0,80]}]}],"pos":[12985,13066],"yaml":true},{"content":"The Managed Document Object Model (DOM) exposes only a select number of events. Most of the unexposed events are only defined for specific types of elements; such as the `submit` event, which is valid only on `FORM` elements. Use <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> to add an event handler to these unexposed events.  \n  \n You should not attach an event to the document or one of its objects until the document has completed loading. The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.  \n  \n For more information about the available unmanaged events, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md) and the IHTMLElement interfaces: [IHTMLElement](http://go.microsoft.com/fwlink/?LinkId=104876), [IHTMLElement2](http://go.microsoft.com/fwlink/?LinkId=104877), [IHTMLElement3](http://go.microsoft.com/fwlink/?LinkId=104878), [IHTMLElement4](http://go.microsoft.com/fwlink/?LinkId=104879).","nodes":[{"pos":[0,342],"content":"The Managed Document Object Model (DOM) exposes only a select number of events. Most of the unexposed events are only defined for specific types of elements; such as the `submit` event, which is valid only on `FORM` elements. Use <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> to add an event handler to these unexposed events.","nodes":[{"content":"The Managed Document Object Model (DOM) exposes only a select number of events.","pos":[0,79]},{"content":"Most of the unexposed events are only defined for specific types of elements; such as the <ph id=\"ph1\">`submit`</ph> event, which is valid only on <ph id=\"ph2\">`FORM`</ph> elements.","pos":[80,225],"source":" Most of the unexposed events are only defined for specific types of elements; such as the `submit` event, which is valid only on `FORM` elements."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph> to add an event handler to these unexposed events.","pos":[226,342],"source":" Use <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> to add an event handler to these unexposed events."}]},{"pos":[349,628],"content":"You should not attach an event to the document or one of its objects until the document has completed loading. The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.","nodes":[{"content":"You should not attach an event to the document or one of its objects until the document has completed loading. The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.","pos":[0,279],"nodes":[{"content":"You should not attach an event to the document or one of its objects until the document has completed loading.","pos":[0,110]},{"content":"The earliest you should call this method is in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> event of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.","pos":[111,279],"source":" The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control."}]}]},{"pos":[635,1166],"content":"For more information about the available unmanaged events, see <bpt id=\"p1\">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id=\"p1\">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept> and the IHTMLElement interfaces: <bpt id=\"p2\">[</bpt>IHTMLElement<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=104876)</ept>, <bpt id=\"p3\">[</bpt>IHTMLElement2<ept id=\"p3\">](http://go.microsoft.com/fwlink/?LinkId=104877)</ept>, <bpt id=\"p4\">[</bpt>IHTMLElement3<ept id=\"p4\">](http://go.microsoft.com/fwlink/?LinkId=104878)</ept>, <bpt id=\"p5\">[</bpt>IHTMLElement4<ept id=\"p5\">](http://go.microsoft.com/fwlink/?LinkId=104879)</ept>.","source":"For more information about the available unmanaged events, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md) and the IHTMLElement interfaces: [IHTMLElement](http://go.microsoft.com/fwlink/?LinkId=104876), [IHTMLElement2](http://go.microsoft.com/fwlink/?LinkId=104877), [IHTMLElement3](http://go.microsoft.com/fwlink/?LinkId=104878), [IHTMLElement4](http://go.microsoft.com/fwlink/?LinkId=104879)."}],"pos":[13077,14250],"yaml":true,"extradata":"MT"},{"content":"The name of the event you want to handle.","nodes":[{"pos":[0,41],"content":"The name of the event you want to handle.","nodes":[{"content":"The name of the event you want to handle.","pos":[0,41]}]}],"pos":[14432,14474],"yaml":true},{"content":"The managed code that handles the event.","nodes":[{"pos":[0,40],"content":"The managed code that handles the event.","nodes":[{"content":"The managed code that handles the event.","pos":[0,40]}]}],"pos":[14548,14589],"yaml":true},{"content":"Gets a value indicating whether this element can have child elements.","nodes":[{"pos":[0,69],"content":"Gets a value indicating whether this element can have child elements.","nodes":[{"content":"Gets a value indicating whether this element can have child elements.","pos":[0,69]}]}],"pos":[15617,15687],"yaml":true},{"content":"Some elements, such as `IMG` and `SCRIPT`, cannot have any children. Use this property before you call <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> on an arbitrary element.","nodes":[{"pos":[0,250],"content":"Some elements, such as `IMG` and `SCRIPT`, cannot have any children. Use this property before you call <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> on an arbitrary element.","nodes":[{"content":"Some elements, such as <ph id=\"ph1\">`IMG`</ph> and <ph id=\"ph2\">`SCRIPT`</ph>, cannot have any children.","pos":[0,68],"source":"Some elements, such as `IMG` and `SCRIPT`, cannot have any children."},{"content":"Use this property before you call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> on an arbitrary element.","pos":[69,250],"source":" Use this property before you call <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> on an arbitrary element."}]}],"pos":[15698,15949],"yaml":true,"extradata":"MT"},{"content":"`true` if element can have child elements; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if element can have child elements; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if element can have child elements; otherwise, `false`."}],"pos":[17038,17103],"yaml":true},{"content":"Gets an <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> of all children of the current element.","nodes":[{"pos":[0,111],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElementCollection\"&gt;&lt;/xref&gt;</ph> of all children of the current element.","source":"Gets an <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> of all children of the current element."}],"pos":[18086,18198],"yaml":true},{"content":"Many of the elements inside of an HTML file can have other HTML elements underneath them. The <xref:System.Windows.Forms.HtmlElement.Children%2A> collection provides a simple mechanism for exploring the tree structure of a document.  \n  \n <xref:System.Windows.Forms.HtmlElement.Children%2A> only exposes elements whose direct parent is the current element. If you have an <xref:System.Windows.Forms.HtmlElement> for a `TABLE` element, <xref:System.Windows.Forms.HtmlElement.Children%2A> will give you all of the `TR` (row) elements inside of the `TABLE`. To retrieve the `TD` (cell) elements contained inside of the `TR` elements, you will need to use either the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection on each individual `TR` element, or use the <xref:System.Windows.Forms.HtmlElement.All%2A> collection on <xref:System.Windows.Forms.HtmlElement>.  \n  \n Elements in this collection are not guaranteed to be in source order.  \n  \n If <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> is `false`, `Children` will always be empty.","nodes":[{"pos":[0,232],"content":"Many of the elements inside of an HTML file can have other HTML elements underneath them. The <xref:System.Windows.Forms.HtmlElement.Children%2A> collection provides a simple mechanism for exploring the tree structure of a document.","nodes":[{"content":"Many of the elements inside of an HTML file can have other HTML elements underneath them. The <xref:System.Windows.Forms.HtmlElement.Children%2A> collection provides a simple mechanism for exploring the tree structure of a document.","pos":[0,232],"nodes":[{"content":"Many of the elements inside of an HTML file can have other HTML elements underneath them.","pos":[0,89]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection provides a simple mechanism for exploring the tree structure of a document.","pos":[90,232],"source":" The <xref:System.Windows.Forms.HtmlElement.Children%2A> collection provides a simple mechanism for exploring the tree structure of a document."}]}]},{"pos":[239,871],"content":"<xref:System.Windows.Forms.HtmlElement.Children%2A> only exposes elements whose direct parent is the current element. If you have an <xref:System.Windows.Forms.HtmlElement> for a `TABLE` element, <xref:System.Windows.Forms.HtmlElement.Children%2A> will give you all of the `TR` (row) elements inside of the `TABLE`. To retrieve the `TD` (cell) elements contained inside of the `TR` elements, you will need to use either the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection on each individual `TR` element, or use the <xref:System.Windows.Forms.HtmlElement.All%2A> collection on <xref:System.Windows.Forms.HtmlElement>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> only exposes elements whose direct parent is the current element.","pos":[0,117],"source":"<xref:System.Windows.Forms.HtmlElement.Children%2A> only exposes elements whose direct parent is the current element."},{"content":"If you have an <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> for a <ph id=\"ph2\">`TABLE`</ph> element, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> will give you all of the <ph id=\"ph4\">`TR`</ph> (row) elements inside of the <ph id=\"ph5\">`TABLE`</ph>.","pos":[118,315],"source":" If you have an <xref:System.Windows.Forms.HtmlElement> for a `TABLE` element, <xref:System.Windows.Forms.HtmlElement.Children%2A> will give you all of the `TR` (row) elements inside of the `TABLE`."},{"content":"To retrieve the <ph id=\"ph1\">`TD`</ph> (cell) elements contained inside of the <ph id=\"ph2\">`TR`</ph> elements, you will need to use either the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection on each individual <ph id=\"ph4\">`TR`</ph> element, or use the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph> collection on <ph id=\"ph6\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>.","pos":[316,632],"source":" To retrieve the `TD` (cell) elements contained inside of the `TR` elements, you will need to use either the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection on each individual `TR` element, or use the <xref:System.Windows.Forms.HtmlElement.All%2A> collection on <xref:System.Windows.Forms.HtmlElement>."}]},{"pos":[878,947],"content":"Elements in this collection are not guaranteed to be in source order.","nodes":[{"content":"Elements in this collection are not guaranteed to be in source order.","pos":[0,69]}]},{"pos":[954,1060],"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">`Children`</ph> will always be empty.","source":"If <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> is `false`, `Children` will always be empty."}],"pos":[18209,19278],"yaml":true,"extradata":"MT"},{"content":"A collection of all <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects that have the current element as a parent.","nodes":[{"pos":[0,124],"content":"A collection of all <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> objects that have the current element as a parent.","source":"A collection of all <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects that have the current element as a parent."}],"pos":[20250,20375],"yaml":true},{"content":"Occurs when the user clicks on the element with the left mouse button.","nodes":[{"pos":[0,70],"content":"Occurs when the user clicks on the element with the left mouse button.","nodes":[{"content":"Occurs when the user clicks on the element with the left mouse button.","pos":[0,70]}]}],"pos":[21330,21401],"yaml":true},{"content":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Click> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.Click> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n If the user clicks on an element that does not currently have input focus, the <xref:System.Windows.Forms.HtmlElement.Click> event will occur after the <xref:System.Windows.Forms.HtmlElement.Focusing> event, but before the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for that element.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,266],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Click> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[273,621],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.Click> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[628,924],"content":"If the user clicks on an element that does not currently have input focus, the <xref:System.Windows.Forms.HtmlElement.Click> event will occur after the <xref:System.Windows.Forms.HtmlElement.Focusing> event, but before the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for that element.","nodes":[{"content":"If the user clicks on an element that does not currently have input focus, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event will occur after the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event, but before the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event for that element.","pos":[0,296],"source":"If the user clicks on an element that does not currently have input focus, the <xref:System.Windows.Forms.HtmlElement.Click> event will occur after the <xref:System.Windows.Forms.HtmlElement.Focusing> event, but before the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for that element."}]},{"pos":[931,1136],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[21412,22557],"yaml":true,"extradata":"MT"},{"content":"Gets the bounds of the client area of the element in the HTML document.","nodes":[{"pos":[0,71],"content":"Gets the bounds of the client area of the element in the HTML document.","nodes":[{"content":"Gets the bounds of the client area of the element in the HTML document.","pos":[0,71]}]}],"pos":[24882,24954],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning. A document is absolutely positioned if its position style is set to `absolute`, after which it can be positioned at any coordinate on the HTML page.","nodes":[{"pos":[0,348],"content":"<xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning. A document is absolutely positioned if its position style is set to `absolute`, after which it can be positioned at any coordinate on the HTML page.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A&gt;</ph> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning.","pos":[0,199],"source":"<xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning."},{"content":"A document is absolutely positioned if its position style is set to <ph id=\"ph1\">`absolute`</ph>, after which it can be positioned at any coordinate on the HTML page.","pos":[200,348],"source":" A document is absolutely positioned if its position style is set to `absolute`, after which it can be positioned at any coordinate on the HTML page."}]}],"pos":[24965,25314],"yaml":true,"extradata":"MT"},{"content":"The client area occupied by the element, minus any area taken by borders and scroll bars. To obtain the position and dimensions of the element inclusive of its adornments, use <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> instead.","nodes":[{"pos":[0,254],"content":"The client area occupied by the element, minus any area taken by borders and scroll bars. To obtain the position and dimensions of the element inclusive of its adornments, use <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> instead.","nodes":[{"content":"The client area occupied by the element, minus any area taken by borders and scroll bars.","pos":[0,89]},{"content":"To obtain the position and dimensions of the element inclusive of its adornments, use <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"&gt;&lt;/xref&gt;</ph> instead.","pos":[90,254],"source":" To obtain the position and dimensions of the element inclusive of its adornments, use <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> instead."}]}],"pos":[26417,26672],"yaml":true},{"content":"Removes an event handler from a named event on the HTML Document Object Model (DOM).","nodes":[{"pos":[0,84],"content":"Removes an event handler from a named event on the HTML Document Object Model (DOM).","nodes":[{"content":"Removes an event handler from a named event on the HTML Document Object Model (DOM).","pos":[0,84]}]}],"pos":[27884,27969],"yaml":true},{"content":"The name of the event you want to handle.","nodes":[{"pos":[0,41],"content":"The name of the event you want to handle.","nodes":[{"content":"The name of the event you want to handle.","pos":[0,41]}]}],"pos":[28151,28193],"yaml":true},{"content":"The managed code that handles the event.","nodes":[{"pos":[0,40],"content":"The managed code that handles the event.","nodes":[{"content":"The managed code that handles the event.","pos":[0,40]}]}],"pos":[28267,28308],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Forms.HtmlDocument\"></xref> to which this element belongs.","nodes":[{"pos":[0,94],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlDocument\"&gt;&lt;/xref&gt;</ph> to which this element belongs.","source":"Gets the <xref href=\"System.Windows.Forms.HtmlDocument\"></xref> to which this element belongs."}],"pos":[29294,29389],"yaml":true},{"content":"Some HTML pages can host frames using the `FRAMESET` tags. In this case, each individual `FRAME` element will contain its own instance of <xref:System.Windows.Forms.HtmlDocument>. This property is most useful when you have received a reference to an element in an event handler from the <xref:System.Windows.Forms.HtmlElementEventArgs>, and need to perform some action on the document in which the element resides.","nodes":[{"pos":[0,414],"content":"Some HTML pages can host frames using the `FRAMESET` tags. In this case, each individual `FRAME` element will contain its own instance of <xref:System.Windows.Forms.HtmlDocument>. This property is most useful when you have received a reference to an element in an event handler from the <xref:System.Windows.Forms.HtmlElementEventArgs>, and need to perform some action on the document in which the element resides.","nodes":[{"content":"Some HTML pages can host frames using the <ph id=\"ph1\">`FRAMESET`</ph> tags.","pos":[0,58],"source":"Some HTML pages can host frames using the `FRAMESET` tags."},{"content":"In this case, each individual <ph id=\"ph1\">`FRAME`</ph> element will contain its own instance of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.","pos":[59,179],"source":" In this case, each individual `FRAME` element will contain its own instance of <xref:System.Windows.Forms.HtmlDocument>."},{"content":"This property is most useful when you have received a reference to an element in an event handler from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>, and need to perform some action on the document in which the element resides.","pos":[180,414],"source":" This property is most useful when you have received a reference to an element in an event handler from the <xref:System.Windows.Forms.HtmlElementEventArgs>, and need to perform some action on the document in which the element resides."}]}],"pos":[29400,29815],"yaml":true,"extradata":"MT"},{"content":"The parent document of this element.","nodes":[{"pos":[0,36],"content":"The parent document of this element.","nodes":[{"content":"The parent document of this element.","pos":[0,36]}]}],"pos":[29974,30011],"yaml":true},{"content":"Gets an unmanaged interface pointer for this element.","nodes":[{"pos":[0,53],"content":"Gets an unmanaged interface pointer for this element.","nodes":[{"content":"Gets an unmanaged interface pointer for this element.","pos":[0,53]}]}],"pos":[30999,31053],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElement> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM). If you need to access unexposed properties or methods on the underlying COM interfaces, such as `IHTMLElement`, you can use this object to query for them.  \n  \n In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application. However, you can also execute unexposed properties and methods using the `Invoke` method.","nodes":[{"pos":[0,319],"content":"<xref:System.Windows.Forms.HtmlElement> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM). If you need to access unexposed properties or methods on the underlying COM interfaces, such as `IHTMLElement`, you can use this object to query for them.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM).","pos":[0,164],"source":"<xref:System.Windows.Forms.HtmlElement> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM)."},{"content":"If you need to access unexposed properties or methods on the underlying COM interfaces, such as <ph id=\"ph1\">`IHTMLElement`</ph>, you can use this object to query for them.","pos":[165,319],"source":" If you need to access unexposed properties or methods on the underlying COM interfaces, such as `IHTMLElement`, you can use this object to query for them."}]},{"pos":[326,536],"content":"In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application. However, you can also execute unexposed properties and methods using the `Invoke` method.","nodes":[{"content":"In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application.","pos":[0,120]},{"content":"However, you can also execute unexposed properties and methods using the <ph id=\"ph1\">`Invoke`</ph> method.","pos":[121,210],"source":" However, you can also execute unexposed properties and methods using the `Invoke` method."}]}],"pos":[31064,31605],"yaml":true,"extradata":"MT"},{"content":"The COM <code>IUnknown</code> pointer for the element, which you can cast to one of the HTML element interfaces, such as <code>IHTMLElement</code>.","nodes":[{"pos":[0,147],"content":"The COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IUnknown</ph><ept id=\"p1\">&lt;/code&gt;</ept> pointer for the element, which you can cast to one of the HTML element interfaces, such as <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">IHTMLElement</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The COM <code>IUnknown</code> pointer for the element, which you can cast to one of the HTML element interfaces, such as <code>IHTMLElement</code>."}],"pos":[32411,32559],"yaml":true},{"content":"Occurs when the user clicks the left mouse button over an element twice, in rapid succession.","nodes":[{"pos":[0,93],"content":"Occurs when the user clicks the left mouse button over an element twice, in rapid succession.","nodes":[{"content":"Occurs when the user clicks the left mouse button over an element twice, in rapid succession.","pos":[0,93]}]}],"pos":[33552,33646],"yaml":true},{"content":"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.  \n  \n You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,206],"content":"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.","nodes":[{"content":"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.","pos":[0,206],"nodes":[{"content":"A double-click is determined by the mouse settings of the user's operating system.","pos":[0,82]},{"content":"The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.","pos":[83,206]}]}]},{"pos":[213,485],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[492,846],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[853,1058],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[33657,34724],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user drags text to various locations.","nodes":[{"pos":[0,53],"content":"Occurs when the user drags text to various locations.","nodes":[{"content":"Occurs when the user drags text to various locations.","pos":[0,53]}]}],"pos":[36998,37052],"yaml":true},{"content":"This event occurs when text is dragged to the following locations:  \n  \n-   Within or between HTML pages hosted in the <xref:System.Windows.Forms.WebBrowser> control or Internet Explorer  \n  \n-   To another application  \n  \n-   To the Windows desktop  \n  \n You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Drag> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.Drag> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,66],"content":"This event occurs when text is dragged to the following locations:","nodes":[{"content":"This event occurs when text is dragged to the following locations:","pos":[0,66]}]},{"pos":[76,186],"content":"Within or between HTML pages hosted in the <xref:System.Windows.Forms.WebBrowser> control or Internet Explorer","nodes":[{"content":"Within or between HTML pages hosted in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control or Internet Explorer","pos":[0,110],"source":"Within or between HTML pages hosted in the <xref:System.Windows.Forms.WebBrowser> control or Internet Explorer"}]},{"pos":[196,218],"content":"To another application","nodes":[{"content":"To another application","pos":[0,22]}]},{"pos":[228,250],"content":"To the Windows desktop","nodes":[{"content":"To the Windows desktop","pos":[0,22]}]},{"pos":[257,522],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Drag> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[529,876],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.Drag> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[883,1088],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[37063,38166],"yaml":true,"extradata":"MT"},{"content":"Occurs when a user finishes a drag operation.","nodes":[{"pos":[0,45],"content":"Occurs when a user finishes a drag operation.","nodes":[{"content":"Occurs when a user finishes a drag operation.","pos":[0,45]}]}],"pos":[40437,40483],"yaml":true},{"content":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,268],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[275,625],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[632,837],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[40494,41338],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user is no longer dragging an item over this element.","nodes":[{"pos":[0,69],"content":"Occurs when the user is no longer dragging an item over this element.","nodes":[{"content":"Occurs when the user is no longer dragging an item over this element.","pos":[0,69]}]}],"pos":[43630,43700],"yaml":true},{"content":"Occurs when the user drags text over the element.","nodes":[{"pos":[0,49],"content":"Occurs when the user drags text over the element.","nodes":[{"content":"Occurs when the user drags text over the element.","pos":[0,49]}]}],"pos":[46006,46056],"yaml":true},{"content":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,269],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[276,627],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[634,839],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[46067,46913],"yaml":true,"extradata":"MT"},{"content":"Gets or sets whether the user can input data into this element.","nodes":[{"pos":[0,63],"content":"Gets or sets whether the user can input data into this element.","nodes":[{"content":"Gets or sets whether the user can input data into this element.","pos":[0,63]}]}],"pos":[49199,49263],"yaml":true},{"content":"For `FORM` elements such as text boxes and radio buttons, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will prevent the user from using these form fields. For other elements, such as `DIV` or `SPAN`, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will cause all text within the element to appear shaded; however, the text will still be selectable. To cancel selection, add an event handler for the unexposed `onselectstart` event using the <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> method.","nodes":[{"pos":[0,557],"content":"For `FORM` elements such as text boxes and radio buttons, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will prevent the user from using these form fields. For other elements, such as `DIV` or `SPAN`, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will cause all text within the element to appear shaded; however, the text will still be selectable. To cancel selection, add an event handler for the unexposed `onselectstart` event using the <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> method.","nodes":[{"content":"For <ph id=\"ph1\">`FORM`</ph> elements such as text boxes and radio buttons, setting <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph> to <ph id=\"ph3\">`false`</ph> will prevent the user from using these form fields.","pos":[0,179],"source":"For `FORM` elements such as text boxes and radio buttons, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will prevent the user from using these form fields."},{"content":"For other elements, such as <ph id=\"ph1\">`DIV`</ph> or <ph id=\"ph2\">`SPAN`</ph>, setting <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph> to <ph id=\"ph4\">`false`</ph> will cause all text within the element to appear shaded; however, the text will still be selectable.","pos":[180,395],"source":" For other elements, such as `DIV` or `SPAN`, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will cause all text within the element to appear shaded; however, the text will still be selectable."},{"content":"To cancel selection, add an event handler for the unexposed <ph id=\"ph1\">`onselectstart`</ph> event using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph> method.","pos":[396,557],"source":" To cancel selection, add an event handler for the unexposed `onselectstart` event using the <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> method."}]}],"pos":[49274,49832],"yaml":true,"extradata":"MT"},{"content":"`true` if the element allows user input; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the element allows user input; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the element allows user input; otherwise, `false`."}],"pos":[49947,50010],"yaml":true},{"content":"Tests if the supplied object is equal to the current element.","nodes":[{"pos":[0,61],"content":"Tests if the supplied object is equal to the current element.","nodes":[{"content":"Tests if the supplied object is equal to the current element.","pos":[0,61]}]}],"pos":[51040,51102],"yaml":true},{"content":"The object to test for equality.","nodes":[{"pos":[0,32],"content":"The object to test for equality.","nodes":[{"content":"The object to test for equality.","pos":[0,32]}]}],"pos":[51242,51275],"yaml":true},{"content":"`true` if <code>obj</code> is an <xref href=\"System.Windows.Forms.HtmlElement\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is an <xref href=\"System.Windows.Forms.HtmlElement\"></xref>; otherwise, `false`."}],"pos":[51333,51443],"yaml":true},{"content":"Gets the next element below this element in the document tree.","nodes":[{"pos":[0,62],"content":"Gets the next element below this element in the document tree.","nodes":[{"content":"Gets the next element below this element in the document tree.","pos":[0,62]}]}],"pos":[52429,52492],"yaml":true},{"content":"Use <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> to walk the document tree for an HTML document.","nodes":[{"pos":[0,180],"content":"Use <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> to walk the document tree for an HTML document.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph> in conjunction with <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph> to walk the document tree for an HTML document.","pos":[0,180],"source":"Use <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> to walk the document tree for an HTML document."}]}],"pos":[52503,52684],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.HtmlElement\"></xref> representing the first element contained underneath the current element, in source order.","nodes":[{"pos":[0,146],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> representing the first element contained underneath the current element, in source order.","source":"An <xref href=\"System.Windows.Forms.HtmlElement\"></xref> representing the first element contained underneath the current element, in source order."}],"pos":[52843,52990],"yaml":true},{"content":"Puts user input focus on the current element.","nodes":[{"pos":[0,45],"content":"Puts user input focus on the current element.","nodes":[{"content":"Puts user input focus on the current element.","pos":[0,45]}]}],"pos":[53954,54000],"yaml":true},{"content":"Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> property of <xref:System.Windows.Forms.HtmlDocument>.  \n  \n Any key strokes entered by a user after <xref:System.Windows.Forms.HtmlElement.Focus%2A> has been called will be sent to that element.","nodes":[{"pos":[0,270],"content":"Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> property of <xref:System.Windows.Forms.HtmlDocument>.","nodes":[{"content":"Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.","pos":[0,270],"source":"Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> property of <xref:System.Windows.Forms.HtmlDocument>."}]},{"pos":[277,411],"content":"Any key strokes entered by a user after <xref:System.Windows.Forms.HtmlElement.Focus%2A> has been called will be sent to that element.","nodes":[{"content":"Any key strokes entered by a user after <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> has been called will be sent to that element.","pos":[0,134],"source":"Any key strokes entered by a user after <xref:System.Windows.Forms.HtmlElement.Focus%2A> has been called will be sent to that element."}]}],"pos":[54011,54427],"yaml":true,"extradata":"MT"},{"content":"Occurs when the element first receives user input focus.","nodes":[{"pos":[0,56],"content":"Occurs when the element first receives user input focus.","nodes":[{"content":"Occurs when the element first receives user input focus.","pos":[0,56]}]}],"pos":[55461,55518],"yaml":true},{"content":"An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <xref:System.Windows.Forms.HtmlElement.Focusing> and <xref:System.Windows.Forms.HtmlElement.GotFocus> events again when the user switches back to your application.  \n  \n You cannot cancel the default behavior of this event. To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.  \n  \n A <xref:System.Windows.Forms.HtmlElement.Focusing> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,292],"content":"An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <xref:System.Windows.Forms.HtmlElement.Focusing> and <xref:System.Windows.Forms.HtmlElement.GotFocus> events again when the user switches back to your application.","nodes":[{"content":"An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> events again when the user switches back to your application.","pos":[0,292],"source":"An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <xref:System.Windows.Forms.HtmlElement.Focusing> and <xref:System.Windows.Forms.HtmlElement.GotFocus> events again when the user switches back to your application."}]},{"pos":[299,534],"content":"You cannot cancel the default behavior of this event. To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.","nodes":[{"content":"You cannot cancel the default behavior of this event. To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.","pos":[0,235],"nodes":[{"content":"You cannot cancel the default behavior of this event.","pos":[0,53]},{"content":"To remove focus from an element, call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> on a different element from within the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> event.","pos":[54,235],"source":" To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event."}]}]},{"pos":[541,884],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event on an element will also occur on that element's parents and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.Focusing> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[891,1096],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[55529,56634],"yaml":true,"extradata":"MT"},{"content":"Retrieves the value of the named attribute on the element.","nodes":[{"pos":[0,58],"content":"Retrieves the value of the named attribute on the element.","nodes":[{"content":"Retrieves the value of the named attribute on the element.","pos":[0,58]}]}],"pos":[58697,58756],"yaml":true},{"content":"An attribute in HTML is any valid name/value pair for that element. <xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag. Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).  \n  \n <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.","nodes":[{"pos":[0,526],"content":"An attribute in HTML is any valid name/value pair for that element. <xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag. Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).","nodes":[{"content":"An attribute in HTML is any valid name/value pair for that element.","pos":[0,67]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; <ph id=\"ph2\">`SRC`</ph> is a predefined attribute for the <ph id=\"ph3\">`IMG`</ph> tag, for example, but not for the <ph id=\"ph4\">`DIV`</ph> tag.","pos":[68,325],"source":" <xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> to manipulate attributes not exposed on the managed Document Object Model (DOM).","pos":[326,526],"source":" Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM)."}]},{"pos":[533,670],"content":"<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> are case-insensitive.","pos":[0,137],"source":"<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive."}]}],"pos":[58767,59442],"yaml":true,"extradata":"MT"},{"content":"The name of the attribute. This argument is case-insensitive.","nodes":[{"pos":[0,61],"content":"The name of the attribute. This argument is case-insensitive.","nodes":[{"content":"The name of the attribute. This argument is case-insensitive.","pos":[0,61],"nodes":[{"content":"The name of the attribute.","pos":[0,26]},{"content":"This argument is case-insensitive.","pos":[27,61]}]}]}],"pos":[60241,60303],"yaml":true},{"content":"The value of this attribute on the element, as a <xref href=\"System.String\"></xref> value. If the specified attribute does not exist on this element, returns an empty string.","nodes":[{"pos":[0,174],"content":"The value of this attribute on the element, as a <xref href=\"System.String\"></xref> value. If the specified attribute does not exist on this element, returns an empty string.","nodes":[{"content":"The value of this attribute on the element, as a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value.","pos":[0,90],"source":"The value of this attribute on the element, as a <xref href=\"System.String\"></xref> value."},{"content":"If the specified attribute does not exist on this element, returns an empty string.","pos":[91,174]}]}],"pos":[60360,60535],"yaml":true},{"content":"Retrieves a collection of elements represented in HTML by the specified <code>HTML</code> tag.","nodes":[{"pos":[0,94],"content":"Retrieves a collection of elements represented in HTML by the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">HTML</ph><ept id=\"p1\">&lt;/code&gt;</ept> tag.","source":"Retrieves a collection of elements represented in HTML by the specified <code>HTML</code> tag."}],"pos":[61654,61749],"yaml":true},{"content":"The name of the tag whose <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects you wish to retrieve.","nodes":[{"pos":[0,109],"content":"The name of the tag whose <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> objects you wish to retrieve.","source":"The name of the tag whose <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects you wish to retrieve."}],"pos":[61940,62050],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> containing all elements whose <code>HTML</code> tag name is equal to <code>tagName</code>.","nodes":[{"pos":[0,157],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElementCollection\"&gt;&lt;/xref&gt;</ph> containing all elements whose <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">HTML</ph><ept id=\"p1\">&lt;/code&gt;</ept> tag name is equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">tagName</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> containing all elements whose <code>HTML</code> tag name is equal to <code>tagName</code>."}],"pos":[62136,62294],"yaml":true},{"content":"Serves as a hash function for a particular type.","nodes":[{"pos":[0,48],"content":"Serves as a hash function for a particular type.","nodes":[{"content":"Serves as a hash function for a particular type.","pos":[0,48]}]}],"pos":[63304,63353],"yaml":true},{"content":"A hash code for the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,63],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.Object\"></xref>."}],"pos":[63487,63551],"yaml":true},{"content":"Occurs when the element has received user input focus.","nodes":[{"pos":[0,54],"content":"Occurs when the element has received user input focus.","nodes":[{"content":"Occurs when the element has received user input focus.","pos":[0,54]}]}],"pos":[64527,64582],"yaml":true},{"content":"You can neither cancel this event's default behavior, nor prevent it from bubbling. To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,265],"content":"You can neither cancel this event's default behavior, nor prevent it from bubbling. To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.","nodes":[{"content":"You can neither cancel this event's default behavior, nor prevent it from bubbling. To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.","pos":[0,265],"nodes":[{"content":"You can neither cancel this event's default behavior, nor prevent it from bubbling.","pos":[0,83]},{"content":"To remove focus from an element, call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> on a different element from within the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> event.","pos":[84,265],"source":" To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event."}]}]},{"pos":[272,477],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[64593,65075],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a label by which to identify the element.","nodes":[{"pos":[0,54],"content":"Gets or sets a label by which to identify the element.","nodes":[{"content":"Gets or sets a label by which to identify the element.","pos":[0,54]}]}],"pos":[67249,67304],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElement.Id%2A> must be unique; you cannot have two elements with the same <xref:System.Windows.Forms.HtmlElement.Id%2A> inside of the same document. Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to give the same identifier to a group of logically related elements.","nodes":[{"pos":[0,314],"content":"<xref:System.Windows.Forms.HtmlElement.Id%2A> must be unique; you cannot have two elements with the same <xref:System.Windows.Forms.HtmlElement.Id%2A> inside of the same document. Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to give the same identifier to a group of logically related elements.","nodes":[{"content":"<xref:System.Windows.Forms.HtmlElement.Id%2A> must be unique; you cannot have two elements with the same <xref:System.Windows.Forms.HtmlElement.Id%2A> inside of the same document. Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to give the same identifier to a group of logically related elements.","pos":[0,314],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> must be unique; you cannot have two elements with the same <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> inside of the same document.","pos":[0,179],"source":"<xref:System.Windows.Forms.HtmlElement.Id%2A> must be unique; you cannot have two elements with the same <xref:System.Windows.Forms.HtmlElement.Id%2A> inside of the same document."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> property to give the same identifier to a group of logically related elements.","pos":[180,314],"source":" Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to give the same identifier to a group of logically related elements."}]}]}],"pos":[67315,67630],"yaml":true,"extradata":"MT"},{"content":"The unique identifier for the element.","nodes":[{"pos":[0,38],"content":"The unique identifier for the element.","nodes":[{"content":"The unique identifier for the element.","pos":[0,38]}]}],"pos":[67741,67780],"yaml":true},{"content":"Gets or sets the HTML markup underneath this element.","nodes":[{"pos":[0,53],"content":"Gets or sets the HTML markup underneath this element.","nodes":[{"content":"Gets or sets the HTML markup underneath this element.","pos":[0,53]}]}],"pos":[68734,68788],"yaml":true},{"content":"There are several ways to add new elements to an existing HTML page, such as the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> and <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods. Using <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.  \n  \n <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> differs from <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> in that <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will not include the HTML that represents the object you are calling. See <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> for more information about the difference between these two properties.  \n  \n Setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> destroys any children previously appended to the element. If you retrieve an element from the DOM and then assign new HTML to its parents' <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.  \n  \n For some elements, setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is not a valid operation. Some HTML tags have no closing tag, such as the `IMG` tag, and therefore cannot contain nested elements. Some tags, such as the `SCRIPT` tag, can only contain text content; setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will result in an error. For both types of tags, the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property will return `false`. However, you also cannot set <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> on `TABLE` and `TR` elements, as assigning malformed HTML to these elements could corrupt the rendering of the document. Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or the `insertRow` and `insertCell` methods on the unmanaged `IHTMLTable` interface to add rows and cells to a `TABLE`.  \n  \n If you need only to assign text to an element and not HTML markup, use the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property instead.  \n  \n Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will destroy any text values previously assigned using <xref:System.Windows.Forms.HtmlElement.InnerText%2A>.","nodes":[{"pos":[0,385],"content":"There are several ways to add new elements to an existing HTML page, such as the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> and <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods. Using <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.","nodes":[{"content":"There are several ways to add new elements to an existing HTML page, such as the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> and <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods. Using <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.","pos":[0,385],"nodes":[{"content":"There are several ways to add new elements to an existing HTML page, such as the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> methods.","pos":[0,213],"source":"There are several ways to add new elements to an existing HTML page, such as the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> and <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods."},{"content":"Using <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.","pos":[214,385],"source":" Using <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is often the fastest way to add new content when you have to set many attributes or styles on your new elements."}]}]},{"pos":[392,770],"content":"<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> differs from <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> in that <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will not include the HTML that represents the object you are calling. See <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> for more information about the difference between these two properties.","nodes":[{"content":"<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> differs from <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> in that <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will not include the HTML that represents the object you are calling. See <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> for more information about the difference between these two properties.","pos":[0,378],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> differs from <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> in that <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will not include the HTML that represents the object you are calling.","pos":[0,249],"source":"<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> differs from <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> in that <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will not include the HTML that represents the object you are calling."},{"content":"See <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> for more information about the difference between these two properties.","pos":[250,378],"source":" See <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> for more information about the difference between these two properties."}]}]},{"pos":[777,1159],"content":"Setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> destroys any children previously appended to the element. If you retrieve an element from the DOM and then assign new HTML to its parents' <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.","nodes":[{"content":"Setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> destroys any children previously appended to the element. If you retrieve an element from the DOM and then assign new HTML to its parents' <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.","pos":[0,382],"nodes":[{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> destroys any children previously appended to the element.","pos":[0,118],"source":"Setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> destroys any children previously appended to the element."},{"content":"If you retrieve an element from the DOM and then assign new HTML to its parents' <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.","pos":[119,382],"source":" If you retrieve an element from the DOM and then assign new HTML to its parents' <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined."}]}]},{"pos":[1166,2029],"content":"For some elements, setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is not a valid operation. Some HTML tags have no closing tag, such as the `IMG` tag, and therefore cannot contain nested elements. Some tags, such as the `SCRIPT` tag, can only contain text content; setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will result in an error. For both types of tags, the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property will return `false`. However, you also cannot set <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> on `TABLE` and `TR` elements, as assigning malformed HTML to these elements could corrupt the rendering of the document. Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or the `insertRow` and `insertCell` methods on the unmanaged `IHTMLTable` interface to add rows and cells to a `TABLE`.","nodes":[{"content":"For some elements, setting <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> is not a valid operation.","pos":[0,105],"source":"For some elements, setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is not a valid operation."},{"content":"Some HTML tags have no closing tag, such as the <ph id=\"ph1\">`IMG`</ph> tag, and therefore cannot contain nested elements.","pos":[106,210],"source":" Some HTML tags have no closing tag, such as the `IMG` tag, and therefore cannot contain nested elements."},{"content":"Some tags, such as the <ph id=\"ph1\">`SCRIPT`</ph> tag, can only contain text content; setting <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will result in an error.","pos":[211,364],"source":" Some tags, such as the `SCRIPT` tag, can only contain text content; setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will result in an error."},{"content":"For both types of tags, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> property will return <ph id=\"ph2\">`false`</ph>.","pos":[365,481],"source":" For both types of tags, the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property will return `false`."},{"content":"However, you also cannot set <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> on <ph id=\"ph2\">`TABLE`</ph> and <ph id=\"ph3\">`TR`</ph> elements, as assigning malformed HTML to these elements could corrupt the rendering of the document.","pos":[482,684],"source":" However, you also cannot set <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> on `TABLE` and `TR` elements, as assigning malformed HTML to these elements could corrupt the rendering of the document."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or the <ph id=\"ph2\">`insertRow`</ph> and <ph id=\"ph3\">`insertCell`</ph> methods on the unmanaged <ph id=\"ph4\">`IHTMLTable`</ph> interface to add rows and cells to a <ph id=\"ph5\">`TABLE`</ph>.","pos":[685,863],"source":" Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or the `insertRow` and `insertCell` methods on the unmanaged `IHTMLTable` interface to add rows and cells to a `TABLE`."}]},{"pos":[2036,2181],"content":"If you need only to assign text to an element and not HTML markup, use the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property instead.","nodes":[{"content":"If you need only to assign text to an element and not HTML markup, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> property instead.","pos":[0,145],"source":"If you need only to assign text to an element and not HTML markup, use the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property instead."}]},{"pos":[2188,2370],"content":"Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will destroy any text values previously assigned using <xref:System.Windows.Forms.HtmlElement.InnerText%2A>.","nodes":[{"content":"Assigning a value to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will destroy any text values previously assigned using <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>.","pos":[0,182],"source":"Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will destroy any text values previously assigned using <xref:System.Windows.Forms.HtmlElement.InnerText%2A>."}]}],"pos":[68799,71182],"yaml":true,"extradata":"MT"},{"content":"The HTML markup that defines the child elements of the current element.","nodes":[{"pos":[0,71],"content":"The HTML markup that defines the child elements of the current element.","nodes":[{"content":"The HTML markup that defines the child elements of the current element.","pos":[0,71]}]}],"pos":[71300,71372],"yaml":true},{"content":"Creating child elements on this element is not allowed.","nodes":[{"pos":[0,55],"content":"Creating child elements on this element is not allowed.","nodes":[{"content":"Creating child elements on this element is not allowed.","pos":[0,55]}]}],"pos":[71544,71600],"yaml":true},{"content":"Gets or sets the text assigned to the element.","nodes":[{"pos":[0,46],"content":"Gets or sets the text assigned to the element.","nodes":[{"content":"Gets or sets the text assigned to the element.","pos":[0,46]}]}],"pos":[72510,72557],"yaml":true},{"content":"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.InnerText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file. If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will return all of the text in that HTML with the markup removed.  \n  \n Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will destroy any child elements that belong to the element.","nodes":[{"pos":[0,436],"content":"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.InnerText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file. If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will return all of the text in that HTML with the markup removed.","nodes":[{"content":"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.InnerText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file. If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will return all of the text in that HTML with the markup removed.","pos":[0,436],"nodes":[{"content":"If you attempt to assign HTML to an element with <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.","pos":[0,211],"source":"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.InnerText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file."},{"content":"If you assign HTML to an element using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> will return all of the text in that HTML with the markup removed.","pos":[212,436],"source":" If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will return all of the text in that HTML with the markup removed."}]}]},{"pos":[443,576],"content":"Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will destroy any child elements that belong to the element.","nodes":[{"content":"Assigning a value to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> will destroy any child elements that belong to the element.","pos":[0,133],"source":"Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will destroy any child elements that belong to the element."}]}],"pos":[72568,73149],"yaml":true,"extradata":"MT"},{"content":"The element's text, absent any HTML markup. If the element contains child elements, only the text in those child elements will be preserved.","nodes":[{"pos":[0,140],"content":"The element's text, absent any HTML markup. If the element contains child elements, only the text in those child elements will be preserved.","nodes":[{"content":"The element's text, absent any HTML markup. If the element contains child elements, only the text in those child elements will be preserved.","pos":[0,140],"nodes":[{"content":"The element's text, absent any HTML markup.","pos":[0,43]},{"content":"If the element contains child elements, only the text in those child elements will be preserved.","pos":[44,140]}]}]}],"pos":[73797,73938],"yaml":true},{"content":"The specified element cannot contain text (for example, an <code>IMG</code> element).","nodes":[{"pos":[0,85],"content":"The specified element cannot contain text (for example, an <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IMG</ph><ept id=\"p1\">&lt;/code&gt;</ept> element).","source":"The specified element cannot contain text (for example, an <code>IMG</code> element)."}],"pos":[74110,74196],"yaml":true},{"content":"Insert a new element into the Document Object Model (DOM).","nodes":[{"pos":[0,58],"content":"Insert a new element into the Document Object Model (DOM).","nodes":[{"content":"Insert a new element into the Document Object Model (DOM).","pos":[0,58]}]}],"pos":[75575,75634],"yaml":true},{"content":"Do not call this method until after the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event on the <xref:System.Windows.Forms.WebBrowser> control has occurred. Calling this method before then can result in an exception, as the document will not have finished loading.  \n  \n Whether a value of <xref:System.Windows.Forms.HtmlElementInsertionOrientation> is valid will depend on the type of the element. For example, <xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin> is valid if the element is a `DIV`, but not if it is a `SCRIPT` or `IMG` element, neither of which can contain child elements.","nodes":[{"pos":[0,278],"content":"Do not call this method until after the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event on the <xref:System.Windows.Forms.WebBrowser> control has occurred. Calling this method before then can result in an exception, as the document will not have finished loading.","nodes":[{"content":"Do not call this method until after the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event on the <xref:System.Windows.Forms.WebBrowser> control has occurred. Calling this method before then can result in an exception, as the document will not have finished loading.","pos":[0,278],"nodes":[{"content":"Do not call this method until after the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> event on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control has occurred.","pos":[0,170],"source":"Do not call this method until after the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event on the <xref:System.Windows.Forms.WebBrowser> control has occurred."},{"content":"Calling this method before then can result in an exception, as the document will not have finished loading.","pos":[171,278]}]}]},{"pos":[285,623],"content":"Whether a value of <xref:System.Windows.Forms.HtmlElementInsertionOrientation> is valid will depend on the type of the element. For example, <xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin> is valid if the element is a `DIV`, but not if it is a `SCRIPT` or `IMG` element, neither of which can contain child elements.","nodes":[{"content":"Whether a value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;</ph> is valid will depend on the type of the element.","pos":[0,127],"source":"Whether a value of <xref:System.Windows.Forms.HtmlElementInsertionOrientation> is valid will depend on the type of the element."},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin&gt;</ph> is valid if the element is a <ph id=\"ph2\">`DIV`</ph>, but not if it is a <ph id=\"ph3\">`SCRIPT`</ph> or <ph id=\"ph4\">`IMG`</ph> element, neither of which can contain child elements.","pos":[128,338],"source":" For example, <xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin> is valid if the element is a `DIV`, but not if it is a `SCRIPT` or `IMG` element, neither of which can contain child elements."}]}],"pos":[75645,76273],"yaml":true,"extradata":"MT"},{"content":"Where to insert this element in relation to the current element.","nodes":[{"pos":[0,64],"content":"Where to insert this element in relation to the current element.","nodes":[{"content":"Where to insert this element in relation to the current element.","pos":[0,64]}]}],"pos":[77228,77293],"yaml":true},{"content":"The new element to insert.","nodes":[{"pos":[0,26],"content":"The new element to insert.","nodes":[{"content":"The new element to insert.","pos":[0,26]}]}],"pos":[77378,77405],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> that was just inserted. If insertion failed, this will return `null`.","nodes":[{"pos":[0,127],"content":"The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> that was just inserted. If insertion failed, this will return `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> that was just inserted.","pos":[0,81],"source":"The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> that was just inserted."},{"content":"If insertion failed, this will return <ph id=\"ph1\">`null`</ph>.","pos":[82,127],"source":" If insertion failed, this will return `null`."}]}],"pos":[77481,77609],"yaml":true},{"content":"Executes a function defined in the current HTML page by a scripting language.","nodes":[{"pos":[0,77],"content":"Executes a function defined in the current HTML page by a scripting language.","nodes":[{"content":"Executes a function defined in the current HTML page by a scripting language.","pos":[0,77]}]}],"pos":[78767,78845],"yaml":true},{"content":"This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code. All arguments supplied to <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> will be converted to Win32 `VARIANT` data types before they are passed to the named scripting function.","nodes":[{"pos":[0,308],"content":"This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code. All arguments supplied to <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> will be converted to Win32 `VARIANT` data types before they are passed to the named scripting function.","nodes":[{"content":"This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.","pos":[0,122]},{"content":"All arguments supplied to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> will be converted to Win32 <ph id=\"ph2\">`VARIANT`</ph> data types before they are passed to the named scripting function.","pos":[123,308],"source":" All arguments supplied to <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> will be converted to Win32 `VARIANT` data types before they are passed to the named scripting function."}]}],"pos":[78856,79165],"yaml":true,"extradata":"MT"},{"content":"The name of the property or method to invoke.","nodes":[{"pos":[0,45],"content":"The name of the property or method to invoke.","nodes":[{"content":"The name of the property or method to invoke.","pos":[0,45]}]}],"pos":[79821,79867],"yaml":true},{"content":"A list of parameters to pass.","nodes":[{"pos":[0,29],"content":"A list of parameters to pass.","nodes":[{"content":"A list of parameters to pass.","pos":[0,29]}]}],"pos":[79934,79964],"yaml":true},{"content":"The element returned by the function, represented as an <xref href=\"System.Object\"></xref>. If this <xref href=\"System.Object\"></xref> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.","nodes":[{"pos":[0,295],"content":"The element returned by the function, represented as an <xref href=\"System.Object\"></xref>. If this <xref href=\"System.Object\"></xref> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.","nodes":[{"content":"The element returned by the function, represented as an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","pos":[0,91],"source":"The element returned by the function, represented as an <xref href=\"System.Object\"></xref>."},{"content":"If this <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.","pos":[92,295],"source":" If this <xref href=\"System.Object\"></xref> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface."}]}],"pos":[80021,80317],"yaml":true},{"content":"Executes an unexposed method on the underlying DOM element of this element.","nodes":[{"pos":[0,75],"content":"Executes an unexposed method on the underlying DOM element of this element.","nodes":[{"content":"Executes an unexposed method on the underlying DOM element of this element.","pos":[0,75]}]}],"pos":[81388,81464],"yaml":true},{"content":"This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code. Use this version of <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> to execute unexposed methods that take no arguments. For an example, see <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>.","nodes":[{"pos":[0,328],"content":"This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code. Use this version of <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> to execute unexposed methods that take no arguments. For an example, see <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>.","nodes":[{"content":"This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code. Use this version of <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> to execute unexposed methods that take no arguments. For an example, see <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>.","pos":[0,328],"nodes":[{"content":"This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.","pos":[0,122]},{"content":"Use this version of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> to execute unexposed methods that take no arguments.","pos":[123,251],"source":" Use this version of <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> to execute unexposed methods that take no arguments."},{"content":"For an example, see <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph>.","pos":[252,328],"source":" For an example, see <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>."}]}]}],"pos":[81475,81804],"yaml":true,"extradata":"MT"},{"content":"The name of the property or method to invoke.","nodes":[{"pos":[0,45],"content":"The name of the property or method to invoke.","nodes":[{"content":"The name of the property or method to invoke.","pos":[0,45]}]}],"pos":[81957,82003],"yaml":true},{"content":"The element returned by this method, represented as an <xref href=\"System.Object\"></xref>. If this <xref href=\"System.Object\"></xref> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.","nodes":[{"pos":[0,294],"content":"The element returned by this method, represented as an <xref href=\"System.Object\"></xref>. If this <xref href=\"System.Object\"></xref> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.","nodes":[{"content":"The element returned by this method, represented as an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","pos":[0,90],"source":"The element returned by this method, represented as an <xref href=\"System.Object\"></xref>."},{"content":"If this <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.","pos":[91,294],"source":" If this <xref href=\"System.Object\"></xref> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface."}]}],"pos":[82060,82355],"yaml":true},{"content":"Occurs when the user presses a key on the keyboard.","nodes":[{"pos":[0,51],"content":"Occurs when the user presses a key on the keyboard.","nodes":[{"content":"Occurs when the user presses a key on the keyboard.","pos":[0,51]}]}],"pos":[83326,83378],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElement.KeyDown> occurs before <xref:System.Windows.Forms.HtmlElement.KeyPress>, which in turns occurs before <xref:System.Windows.Forms.HtmlElement.KeyUp>.  \n  \n You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,187],"content":"<xref:System.Windows.Forms.HtmlElement.KeyDown> occurs before <xref:System.Windows.Forms.HtmlElement.KeyPress>, which in turns occurs before <xref:System.Windows.Forms.HtmlElement.KeyUp>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> occurs before <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>, which in turns occurs before <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>.","pos":[0,187],"source":"<xref:System.Windows.Forms.HtmlElement.KeyDown> occurs before <xref:System.Windows.Forms.HtmlElement.KeyPress>, which in turns occurs before <xref:System.Windows.Forms.HtmlElement.KeyUp>."}]},{"pos":[194,462],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[469,819],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[826,1031],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[83389,84429],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user presses and releases a key on the keyboard.","nodes":[{"pos":[0,64],"content":"Occurs when the user presses and releases a key on the keyboard.","nodes":[{"content":"Occurs when the user presses and releases a key on the keyboard.","pos":[0,64]}]}],"pos":[86715,86780],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElement.KeyPress> occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown> and before <xref:System.Windows.Forms.HtmlElement.KeyUp>.  \n  \n You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,167],"content":"<xref:System.Windows.Forms.HtmlElement.KeyPress> occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown> and before <xref:System.Windows.Forms.HtmlElement.KeyUp>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> occurs after <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> and before <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>.","pos":[0,167],"source":"<xref:System.Windows.Forms.HtmlElement.KeyPress> occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown> and before <xref:System.Windows.Forms.HtmlElement.KeyUp>."}]},{"pos":[174,443],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[450,801],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[808,1013],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[86791,87813],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user releases a key on the keyboard.","nodes":[{"pos":[0,52],"content":"Occurs when the user releases a key on the keyboard.","nodes":[{"content":"Occurs when the user releases a key on the keyboard.","pos":[0,52]}]}],"pos":[90084,90137],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElement.KeyUp> occurs after <xref:System.Windows.Forms.HtmlElement.KeyPress>, which occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown>.  \n  \n You cannot cancel this event.  \n  \n A <xref:System.Windows.Forms.HtmlElement.KeyUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,176],"content":"<xref:System.Windows.Forms.HtmlElement.KeyUp> occurs after <xref:System.Windows.Forms.HtmlElement.KeyPress>, which occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> occurs after <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>, which occurs after <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>.","pos":[0,176],"source":"<xref:System.Windows.Forms.HtmlElement.KeyUp> occurs after <xref:System.Windows.Forms.HtmlElement.KeyPress>, which occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown>."}]},{"pos":[183,212],"content":"You cannot cancel this event.","nodes":[{"content":"You cannot cancel this event.","pos":[0,29]}]},{"pos":[219,567],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.KeyUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[574,779],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[90148,90936],"yaml":true,"extradata":"MT"},{"content":"Occurs when the element is losing user input focus.","nodes":[{"pos":[0,51],"content":"Occurs when the element is losing user input focus.","nodes":[{"content":"Occurs when the element is losing user input focus.","pos":[0,51]}]}],"pos":[93234,93286],"yaml":true},{"content":"Occurs when the element has lost user input focus.","nodes":[{"pos":[0,50],"content":"Occurs when the element has lost user input focus.","nodes":[{"content":"Occurs when the element has lost user input focus.","pos":[0,50]}]}],"pos":[95306,95357],"yaml":true},{"content":"An element will no longer receive key stroke events after <xref:System.Windows.Forms.HtmlElement.LostFocus> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <xref:System.Windows.Forms.HtmlElement.Focus%2A> method on that element.  \n  \n You cannot cancel this event.  \n  \n An <xref:System.Windows.Forms.HtmlElement.LostFocus> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,296],"content":"An element will no longer receive key stroke events after <xref:System.Windows.Forms.HtmlElement.LostFocus> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <xref:System.Windows.Forms.HtmlElement.Focus%2A> method on that element.","nodes":[{"content":"An element will no longer receive key stroke events after <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> method on that element.","pos":[0,296],"source":"An element will no longer receive key stroke events after <xref:System.Windows.Forms.HtmlElement.LostFocus> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <xref:System.Windows.Forms.HtmlElement.Focus%2A> method on that element."}]},{"pos":[303,332],"content":"You cannot cancel this event.","nodes":[{"content":"You cannot cancel this event.","pos":[0,29]}]},{"pos":[339,684],"content":"An <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event on an element will also occur on that element's parents and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"An <xref:System.Windows.Forms.HtmlElement.LostFocus> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[691,896],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[95368,96273],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user presses a mouse button.","nodes":[{"pos":[0,44],"content":"Occurs when the user presses a mouse button.","nodes":[{"content":"Occurs when the user presses a mouse button.","pos":[0,44]}]}],"pos":[98251,98296],"yaml":true},{"content":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,270],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[277,629],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[636,841],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[98307,99155],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user first moves the mouse cursor over the current element.","nodes":[{"pos":[0,75],"content":"Occurs when the user first moves the mouse cursor over the current element.","nodes":[{"content":"Occurs when the user first moves the mouse cursor over the current element.","pos":[0,75]}]}],"pos":[101459,101535],"yaml":true},{"content":"Occurs when the user moves the mouse cursor off of the current element.","nodes":[{"pos":[0,71],"content":"Occurs when the user moves the mouse cursor off of the current element.","nodes":[{"content":"Occurs when the user moves the mouse cursor off of the current element.","pos":[0,71]}]}],"pos":[103856,103928],"yaml":true},{"content":"Occurs when the user moves the mouse cursor across the element.","nodes":[{"pos":[0,63],"content":"Occurs when the user moves the mouse cursor across the element.","nodes":[{"content":"Occurs when the user moves the mouse cursor across the element.","pos":[0,63]}]}],"pos":[106243,106307],"yaml":true},{"content":"You cannot cancel this event.  \n  \n A <xref:System.Windows.Forms.HtmlElement.MouseMove> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,29],"content":"You cannot cancel this event.","nodes":[{"content":"You cannot cancel this event.","pos":[0,29]}]},{"pos":[36,388],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.MouseMove> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[395,600],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[106318,106925],"yaml":true,"extradata":"MT"},{"content":"Occurs when the mouse cursor enters the bounds of the element.","nodes":[{"pos":[0,62],"content":"Occurs when the mouse cursor enters the bounds of the element.","nodes":[{"content":"Occurs when the mouse cursor enters the bounds of the element.","pos":[0,62]}]}],"pos":[109223,109286],"yaml":true},{"content":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,270],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[277,629],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[636,841],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[109297,110145],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user releases a mouse button.","nodes":[{"pos":[0,45],"content":"Occurs when the user releases a mouse button.","nodes":[{"content":"Occurs when the user releases a mouse button.","pos":[0,45]}]}],"pos":[112431,112477],"yaml":true},{"content":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n A <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \n  \n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).","nodes":[{"pos":[0,268],"content":"You can cancel the default action for a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event on an element by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph4\">`true`</ph>.","source":"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[275,625],"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id=\"ph5\">`true`</ph>.","source":"A <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`."},{"pos":[632,837],"content":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id=\"p1\">[</bpt>About the DHTML Object Model<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.","source":"For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx)."}],"pos":[112488,113332],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the element.","nodes":[{"pos":[0,37],"content":"Gets or sets the name of the element.","nodes":[{"content":"Gets or sets the name of the element.","pos":[0,37]}]}],"pos":[115575,115613],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to retrieve elements from a document using the <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> method on the <xref:System.Windows.Forms.HtmlElement.All%2A> property of <xref:System.Windows.Forms.HtmlDocument>.  \n  \n When applied to `INPUT` elements, <xref:System.Windows.Forms.HtmlElement.Name%2A> defines the variable name for that element's data when its form is submitted to the server.","nodes":[{"pos":[0,297],"content":"Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to retrieve elements from a document using the <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> method on the <xref:System.Windows.Forms.HtmlElement.All%2A> property of <xref:System.Windows.Forms.HtmlDocument>.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> property to retrieve elements from a document using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A&gt;</ph> method on the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph> property of <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.","pos":[0,297],"source":"Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to retrieve elements from a document using the <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> method on the <xref:System.Windows.Forms.HtmlElement.All%2A> property of <xref:System.Windows.Forms.HtmlDocument>."}]},{"pos":[304,477],"content":"When applied to <ph id=\"ph1\">`INPUT`</ph> elements, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> defines the variable name for that element's data when its form is submitted to the server.","source":"When applied to `INPUT` elements, <xref:System.Windows.Forms.HtmlElement.Name%2A> defines the variable name for that element's data when its form is submitted to the server."}],"pos":[115624,116106],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> representing the element's name.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representing the element's name.","source":"A <xref href=\"System.String\"></xref> representing the element's name."}],"pos":[116219,116289],"yaml":true},{"content":"Gets the next element at the same level as this element in the document tree.","nodes":[{"pos":[0,77],"content":"Gets the next element at the same level as this element in the document tree.","nodes":[{"content":"Gets the next element at the same level as this element in the document tree.","pos":[0,77]}]}],"pos":[117257,117335],"yaml":true},{"content":"Use <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> to walk the document tree for an HTML element.","nodes":[{"pos":[0,179],"content":"Use <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> to walk the document tree for an HTML element.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph> in conjunction with <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph> to walk the document tree for an HTML element.","pos":[0,179],"source":"Use <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> to walk the document tree for an HTML element."}]}],"pos":[117346,117526],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.HtmlElement\"></xref> representing the element to the right of the current element.","nodes":[{"pos":[0,118],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> representing the element to the right of the current element.","source":"An <xref href=\"System.Windows.Forms.HtmlElement\"></xref> representing the element to the right of the current element."}],"pos":[117686,117805],"yaml":true},{"content":"Gets the element from which <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> is calculated.","nodes":[{"pos":[0,112],"content":"Gets the element from which <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"&gt;&lt;/xref&gt;</ph> is calculated.","source":"Gets the element from which <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> is calculated."}],"pos":[118808,118921],"yaml":true},{"content":"Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.  \n  \n When a document's elements use relative or absolute positioning, you can use `OffsetParent` to calculate an element's coordinate position in the client area.  \n  \n For more information about element positioning in HTML, see [About Element Positioning](http://msdn.microsoft.com/library/ms533005.aspx).","nodes":[{"pos":[0,320],"content":"Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.","nodes":[{"content":"Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.","pos":[0,320]}]},{"pos":[327,484],"content":"When a document's elements use relative or absolute positioning, you can use <ph id=\"ph1\">`OffsetParent`</ph> to calculate an element's coordinate position in the client area.","source":"When a document's elements use relative or absolute positioning, you can use `OffsetParent` to calculate an element's coordinate position in the client area."},{"pos":[491,628],"content":"For more information about element positioning in HTML, see <bpt id=\"p1\">[</bpt>About Element Positioning<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>.","source":"For more information about element positioning in HTML, see [About Element Positioning](http://msdn.microsoft.com/library/ms533005.aspx)."}],"pos":[118932,119567],"yaml":true,"extradata":"MT"},{"content":"The element from which the offsets are calculated.  \n  \n If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, `OffsetParent` will be the first relatively or absolutely positioned element in which the current element is nested. If none of the elements above the current element are absolutely or relatively positioned, `OffsetParent` will be the <code>BODY</code> tag of the document.","nodes":[{"pos":[0,50],"content":"The element from which the offsets are calculated.","nodes":[{"content":"The element from which the offsets are calculated.","pos":[0,50]}]},{"pos":[57,438],"content":"If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, `OffsetParent` will be the first relatively or absolutely positioned element in which the current element is nested. If none of the elements above the current element are absolutely or relatively positioned, `OffsetParent` will be the <code>BODY</code> tag of the document.","nodes":[{"content":"If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, <ph id=\"ph1\">`OffsetParent`</ph> will be the first relatively or absolutely positioned element in which the current element is nested.","pos":[0,224],"source":"If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, `OffsetParent` will be the first relatively or absolutely positioned element in which the current element is nested."},{"content":"If none of the elements above the current element are absolutely or relatively positioned, <ph id=\"ph1\">`OffsetParent`</ph> will be the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">BODY</ph><ept id=\"p1\">&lt;/code&gt;</ept> tag of the document.","pos":[225,381],"source":" If none of the elements above the current element are absolutely or relatively positioned, `OffsetParent` will be the <code>BODY</code> tag of the document."}]}],"pos":[120882,121325],"yaml":true},{"content":"Gets the location of an element relative to its parent.","nodes":[{"pos":[0,55],"content":"Gets the location of an element relative to its parent.","nodes":[{"content":"Gets the location of an element relative to its parent.","pos":[0,55]}]}],"pos":[122347,122403],"yaml":true},{"content":"Elements can be positioned on an HTML page in one of three ways:  \n  \n-   Default flow positioning.  \n  \n-   Relative positioning, in which the element is offset by a fixed amount relative to its parent.  \n  \n-   Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.  \n  \n For more information about element positioning in HTML, see [About Element Positioning](http://msdn.microsoft.com/library/ms533005.aspx).","nodes":[{"pos":[0,64],"content":"Elements can be positioned on an HTML page in one of three ways:","nodes":[{"content":"Elements can be positioned on an HTML page in one of three ways:","pos":[0,64]}]},{"pos":[74,99],"content":"Default flow positioning.","nodes":[{"content":"Default flow positioning.","pos":[0,25]}]},{"pos":[109,203],"content":"Relative positioning, in which the element is offset by a fixed amount relative to its parent.","nodes":[{"content":"Relative positioning, in which the element is offset by a fixed amount relative to its parent.","pos":[0,94]}]},{"pos":[213,343],"content":"Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.","nodes":[{"content":"Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.","pos":[0,130]}]},{"pos":[350,487],"content":"For more information about element positioning in HTML, see <bpt id=\"p1\">[</bpt>About Element Positioning<ept id=\"p1\">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>.","source":"For more information about element positioning in HTML, see [About Element Positioning](http://msdn.microsoft.com/library/ms533005.aspx)."}],"pos":[122414,122912],"yaml":true,"extradata":"MT"},{"content":"The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.  \n  \n If an element's parent is relatively or absolutely positioned, <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> will return the offset of the parent element. If the element itself is relatively positioned with respect to its parent, <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> will return the offset from its parent.","nodes":[{"pos":[0,106],"content":"The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.","nodes":[{"content":"The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.","pos":[0,106]}]},{"pos":[113,476],"content":"If an element's parent is relatively or absolutely positioned, <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> will return the offset of the parent element. If the element itself is relatively positioned with respect to its parent, <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> will return the offset from its parent.","nodes":[{"content":"If an element's parent is relatively or absolutely positioned, <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"&gt;&lt;/xref&gt;</ph> will return the offset of the parent element.","pos":[0,178],"source":"If an element's parent is relatively or absolutely positioned, <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> will return the offset of the parent element."},{"content":"If the element itself is relatively positioned with respect to its parent, <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"&gt;&lt;/xref&gt;</ph> will return the offset from its parent.","pos":[179,363],"source":" If the element itself is relatively positioned with respect to its parent, <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> will return the offset from its parent."}]}],"pos":[124214,124699],"yaml":true},{"content":"Compares two elements for equality.","nodes":[{"pos":[0,35],"content":"Compares two elements for equality.","nodes":[{"content":"Compares two elements for equality.","pos":[0,35]}]}],"pos":[125979,126015],"yaml":true},{"content":"The equality operator tests the `IUnknown` pointers of the underlying COM objects wrapped by the supplied <xref:System.Windows.Forms.HtmlElement> classes.  \n  \n The equivalent method for this operator is <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName>","nodes":[{"pos":[0,154],"content":"The equality operator tests the <ph id=\"ph1\">`IUnknown`</ph> pointers of the underlying COM objects wrapped by the supplied <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> classes.","source":"The equality operator tests the `IUnknown` pointers of the underlying COM objects wrapped by the supplied <xref:System.Windows.Forms.HtmlElement> classes."},{"pos":[161,278],"content":"The equivalent method for this operator is <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName&gt;</ph>","pos":[0,117],"source":"The equivalent method for this operator is <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName>"}]}],"pos":[126026,126309],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.","nodes":[{"pos":[0,64],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph>.","source":"The first <xref href=\"System.Windows.Forms.HtmlElement\"></xref>."}],"pos":[126539,126604],"yaml":true},{"content":"The second <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.","nodes":[{"pos":[0,65],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph>.","source":"The second <xref href=\"System.Windows.Forms.HtmlElement\"></xref>."}],"pos":[126684,126750],"yaml":true},{"content":"`true` if both parameters are `null`, or if both elements have the same underlying COM interface; otherwise, `false`.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> if both parameters are <ph id=\"ph2\">`null`</ph>, or if both elements have the same underlying COM interface; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if both parameters are `null`, or if both elements have the same underlying COM interface; otherwise, `false`."}],"pos":[126808,126928],"yaml":true},{"content":"Compares two <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects for inequality.","nodes":[{"pos":[0,90],"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> objects for inequality.","source":"Compares two <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects for inequality."}],"pos":[128216,128307],"yaml":true},{"content":"The equivalent method for this operator is the negation of <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName>","nodes":[{"pos":[0,133],"content":"The equivalent method for this operator is the negation of <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is the negation of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName&gt;</ph>","pos":[0,133],"source":"The equivalent method for this operator is the negation of <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName>"}]}],"pos":[128318,128452],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.","nodes":[{"pos":[0,64],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph>.","source":"The first <xref href=\"System.Windows.Forms.HtmlElement\"></xref>."}],"pos":[128684,128749],"yaml":true},{"content":"The second <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.","nodes":[{"pos":[0,65],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph>.","source":"The second <xref href=\"System.Windows.Forms.HtmlElement\"></xref>."}],"pos":[128829,128895],"yaml":true},{"content":"`true` is only one element is `null`, or the two objects are not equal; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> is only one element is <ph id=\"ph2\">`null`</ph>, or the two objects are not equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` is only one element is `null`, or the two objects are not equal; otherwise, `false`."}],"pos":[128953,129047],"yaml":true},{"content":"Gets or sets the current element's HTML code.","nodes":[{"pos":[0,45],"content":"Gets or sets the current element's HTML code.","nodes":[{"content":"Gets or sets the current element's HTML code.","pos":[0,45]}]}],"pos":[130034,130080],"yaml":true},{"content":"Whereas <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return all HTML contained in the current element excluding the current element's surrounding tags, <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> includes the current element's tag as well as the HTML that tag contains, for example:  \n  \n `<HTML>`  \n  \n `<BODY>`  \n  \n `<DIV id=\"div1\">`  \n  \n `Hello`  \n  \n `<DIV id=\"div2\">`  \n  \n `World`  \n  \n `<DIV id=\"div3\">`  \n  \n `How are you?`  \n  \n `</DIV>`  \n  \n `</DIV>`  \n  \n `</DIV>`  \n  \n `</BODY>`  \n  \n `</HTML>`  \n  \n In this example, calling <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> on `div2` will return:  \n  \n `<DIV id=\"div2\">`  \n  \n `World`  \n  \n `<DIV id=\"div3\">`  \n  \n `How are you?`  \n  \n `</DIV>`  \n  \n `</DIV>`  \n  \n Calling <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return:  \n  \n `World`  \n  \n `<DIV id=\"div3\">`  \n  \n `How are you?`  \n  \n `</DIV>`  \n  \n If you assign a new value to <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.","nodes":[{"pos":[0,304],"content":"Whereas <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return all HTML contained in the current element excluding the current element's surrounding tags, <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> includes the current element's tag as well as the HTML that tag contains, for example:","nodes":[{"content":"Whereas <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will return all HTML contained in the current element excluding the current element's surrounding tags, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> includes the current element's tag as well as the HTML that tag contains, for example:","pos":[0,304],"source":"Whereas <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return all HTML contained in the current element excluding the current element's surrounding tags, <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> includes the current element's tag as well as the HTML that tag contains, for example:"}]},{"pos":[539,639],"content":"In this example, calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> on <ph id=\"ph2\">`div2`</ph> will return:","source":"In this example, calling <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> on `div2` will return:"},{"pos":[759,832],"content":"Calling <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return:","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will return:","pos":[0,73],"source":"Calling <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return:"}]},{"pos":[913,1141],"content":"If you assign a new value to <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.","nodes":[{"content":"If you assign a new value to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.","pos":[0,228],"source":"If you assign a new value to <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned."}]}],"pos":[130091,131299],"yaml":true,"extradata":"MT"},{"content":"The HTML code for the current element and its children.","nodes":[{"pos":[0,55],"content":"The HTML code for the current element and its children.","nodes":[{"content":"The HTML code for the current element and its children.","pos":[0,55]}]}],"pos":[131417,131473],"yaml":true},{"content":"Gets or sets the current element's text.","nodes":[{"pos":[0,40],"content":"Gets or sets the current element's text.","nodes":[{"content":"Gets or sets the current element's text.","pos":[0,40]}]}],"pos":[132456,132497],"yaml":true},{"content":"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.OuterText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file. If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will return all of the text in that HTML with the markup removed.  \n  \n Assigning a value to <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will destroy any child elements that belong to the element.","nodes":[{"pos":[0,436],"content":"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.OuterText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file. If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will return all of the text in that HTML with the markup removed.","nodes":[{"content":"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.OuterText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file. If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will return all of the text in that HTML with the markup removed.","pos":[0,436],"nodes":[{"content":"If you attempt to assign HTML to an element with <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.","pos":[0,211],"source":"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.OuterText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file."},{"content":"If you assign HTML to an element using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph> will return all of the text in that HTML with the markup removed.","pos":[212,436],"source":" If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will return all of the text in that HTML with the markup removed."}]}]},{"pos":[443,576],"content":"Assigning a value to <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will destroy any child elements that belong to the element.","nodes":[{"content":"Assigning a value to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph> will destroy any child elements that belong to the element.","pos":[0,133],"source":"Assigning a value to <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will destroy any child elements that belong to the element."}]}],"pos":[132508,133089],"yaml":true,"extradata":"MT"},{"content":"The text inside the current element, and in the element's children.","nodes":[{"pos":[0,67],"content":"The text inside the current element, and in the element's children.","nodes":[{"content":"The text inside the current element, and in the element's children.","pos":[0,67]}]}],"pos":[133207,133275],"yaml":true},{"content":"You cannot set text outside of this element.","nodes":[{"pos":[0,44],"content":"You cannot set text outside of this element.","nodes":[{"content":"You cannot set text outside of this element.","pos":[0,44]}]}],"pos":[133447,133492],"yaml":true},{"content":"Gets the current element's parent element.","nodes":[{"pos":[0,42],"content":"Gets the current element's parent element.","nodes":[{"content":"Gets the current element's parent element.","pos":[0,42]}]}],"pos":[134384,134427],"yaml":true},{"content":"The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property enables discovery of an element's context. It is most useful inside of event handlers such as <xref:System.Windows.Forms.HtmlElement.Click>, which can fire for any element anywhere in the document's object hierarchy.  \n  \n The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property of the HTML element (the top of an HTML document) points back to itself. If you call <xref:System.Windows.Forms.HtmlElement.Parent%2A> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the `Parent` property, or else your code may execute an infinite loop.","nodes":[{"pos":[0,279],"content":"The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property enables discovery of an element's context. It is most useful inside of event handlers such as <xref:System.Windows.Forms.HtmlElement.Click>, which can fire for any element anywhere in the document's object hierarchy.","nodes":[{"content":"The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property enables discovery of an element's context. It is most useful inside of event handlers such as <xref:System.Windows.Forms.HtmlElement.Click>, which can fire for any element anywhere in the document's object hierarchy.","pos":[0,279],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property enables discovery of an element's context.","pos":[0,105],"source":"The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property enables discovery of an element's context."},{"content":"It is most useful inside of event handlers such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>, which can fire for any element anywhere in the document's object hierarchy.","pos":[106,279],"source":" It is most useful inside of event handlers such as <xref:System.Windows.Forms.HtmlElement.Click>, which can fire for any element anywhere in the document's object hierarchy."}]}]},{"pos":[286,665],"content":"The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property of the HTML element (the top of an HTML document) points back to itself. If you call <xref:System.Windows.Forms.HtmlElement.Parent%2A> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the `Parent` property, or else your code may execute an infinite loop.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property of the HTML element (the top of an HTML document) points back to itself.","pos":[0,135],"source":"The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property of the HTML element (the top of an HTML document) points back to itself."},{"content":"If you call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the <ph id=\"ph2\">`Parent`</ph> property, or else your code may execute an infinite loop.","pos":[136,379],"source":" If you call <xref:System.Windows.Forms.HtmlElement.Parent%2A> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the `Parent` property, or else your code may execute an infinite loop."}]}],"pos":[134438,135108],"yaml":true,"extradata":"MT"},{"content":"The element above the current element in the HTML document's hierarchy.","nodes":[{"pos":[0,71],"content":"The element above the current element in the HTML document's hierarchy.","nodes":[{"content":"The element above the current element in the HTML document's hierarchy.","pos":[0,71]}]}],"pos":[135930,136002],"yaml":true},{"content":"Causes the named event to call all registered event handlers.","nodes":[{"pos":[0,61],"content":"Causes the named event to call all registered event handlers.","nodes":[{"content":"Causes the named event to call all registered event handlers.","pos":[0,61]}]}],"pos":[137055,137117],"yaml":true},{"content":"This method is used to access HTML Document Object Model (DOM) events. It directly calls the [IHTMLElement3::fireEvent](http://go.microsoft.com/fwlink/?LinkId=103189) method. For more information about how to use the DOM through the <xref:System.Windows.Forms.HtmlElement> class, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md).","nodes":[{"pos":[0,465],"content":"This method is used to access HTML Document Object Model (DOM) events. It directly calls the [IHTMLElement3::fireEvent](http://go.microsoft.com/fwlink/?LinkId=103189) method. For more information about how to use the DOM through the <xref:System.Windows.Forms.HtmlElement> class, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md).","nodes":[{"content":"This method is used to access HTML Document Object Model (DOM) events.","pos":[0,70]},{"content":"It directly calls the <bpt id=\"p1\">[</bpt>IHTMLElement3::fireEvent<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=103189)</ept> method.","pos":[71,174],"source":" It directly calls the [IHTMLElement3::fireEvent](http://go.microsoft.com/fwlink/?LinkId=103189) method."},{"content":"For more information about how to use the DOM through the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> class, see <bpt id=\"p1\">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id=\"p1\">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept>.","pos":[175,465],"source":" For more information about how to use the DOM through the <xref:System.Windows.Forms.HtmlElement> class, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)."}]}],"pos":[137128,137594],"yaml":true,"extradata":"MT"},{"content":"The name of the event to raise.","nodes":[{"pos":[0,31],"content":"The name of the event to raise.","nodes":[{"content":"The name of the event to raise.","pos":[0,31]}]}],"pos":[137741,137773],"yaml":true},{"content":"Removes focus from the current element, if that element has focus.","nodes":[{"pos":[0,66],"content":"Removes focus from the current element, if that element has focus.","nodes":[{"content":"Removes focus from the current element, if that element has focus.","pos":[0,66]}]}],"pos":[138773,138840],"yaml":true},{"content":"Calling this method raises the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for the element.  \n  \n When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.","nodes":[{"pos":[0,103],"content":"Calling this method raises the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for the element.","nodes":[{"content":"Calling this method raises the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event for the element.","pos":[0,103],"source":"Calling this method raises the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for the element."}]},{"pos":[110,260],"content":"When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.","nodes":[{"content":"When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.","pos":[0,150]}]}],"pos":[138851,139116],"yaml":true,"extradata":"MT"},{"content":"Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.","nodes":[{"pos":[0,136],"content":"Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.","nodes":[{"content":"Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.","pos":[0,136]}]}],"pos":[140274,140411],"yaml":true},{"content":"If `true`, the top of the object will be displayed at the top of the window. If `false`, the bottom of the object will be displayed at the bottom of the window.","nodes":[{"pos":[0,160],"content":"If `true`, the top of the object will be displayed at the top of the window. If `false`, the bottom of the object will be displayed at the bottom of the window.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the top of the object will be displayed at the top of the window.","pos":[0,76],"source":"If `true`, the top of the object will be displayed at the top of the window."},{"content":"If <ph id=\"ph1\">`false`</ph>, the bottom of the object will be displayed at the bottom of the window.","pos":[77,160],"source":" If `false`, the bottom of the object will be displayed at the bottom of the window."}]}],"pos":[141062,141223],"yaml":true},{"content":"Gets or sets the distance between the edge of the element and the left edge of its content.","nodes":[{"pos":[0,91],"content":"Gets or sets the distance between the edge of the element and the left edge of its content.","nodes":[{"content":"Gets or sets the distance between the edge of the element and the left edge of its content.","pos":[0,91]}]}],"pos":[142195,142287],"yaml":true},{"content":"The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; `ScrollLeft` and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> are exposed independently because these are the only two properties of the scroll area that developers can set.","nodes":[{"pos":[0,300],"content":"The full dimensions of the scroll area are available using <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>; <ph id=\"ph2\">`ScrollLeft`</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph> are exposed independently because these are the only two properties of the scroll area that developers can set.","source":"The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; `ScrollLeft` and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> are exposed independently because these are the only two properties of the scroll area that developers can set."}],"pos":[142298,142599],"yaml":true,"extradata":"MT"},{"content":"The distance, in pixels, between the left edge of the element and the left edge of its content.","nodes":[{"pos":[0,95],"content":"The distance, in pixels, between the left edge of the element and the left edge of its content.","nodes":[{"content":"The distance, in pixels, between the left edge of the element and the left edge of its content.","pos":[0,95]}]}],"pos":[142714,142810],"yaml":true},{"content":"Gets the dimensions of an element's scrollable region.","nodes":[{"pos":[0,54],"content":"Gets the dimensions of an element's scrollable region.","nodes":[{"content":"Gets the dimensions of an element's scrollable region.","pos":[0,54]}]}],"pos":[143830,143885],"yaml":true},{"content":"An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.  \n  \n You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element. Use the <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> properties to achieve this.","nodes":[{"pos":[0,162],"content":"An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.","nodes":[{"content":"An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.","pos":[0,162]}]},{"pos":[169,470],"content":"You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element. Use the <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> properties to achieve this.","nodes":[{"content":"You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element. Use the <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> properties to achieve this.","pos":[0,301],"nodes":[{"content":"You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element.","pos":[0,154]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph> properties to achieve this.","pos":[155,301],"source":" Use the <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> properties to achieve this."}]}]}],"pos":[143896,144371],"yaml":true,"extradata":"MT"},{"content":"The size and coordinate location of the scrollable area of an element.","nodes":[{"pos":[0,70],"content":"The size and coordinate location of the scrollable area of an element.","nodes":[{"content":"The size and coordinate location of the scrollable area of an element.","pos":[0,70]}]}],"pos":[144519,144590],"yaml":true},{"content":"Gets or sets the distance between the edge of the element and the top edge of its content.","nodes":[{"pos":[0,90],"content":"Gets or sets the distance between the edge of the element and the top edge of its content.","nodes":[{"content":"Gets or sets the distance between the edge of the element and the top edge of its content.","pos":[0,90]}]}],"pos":[145579,145670],"yaml":true},{"content":"The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and `ScrollTop` are exposed independently because these are the only two properties of the scroll area that developers can set.","nodes":[{"pos":[0,300],"content":"The full dimensions of the scroll area are available using <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>; <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph> and <ph id=\"ph3\">`ScrollTop`</ph> are exposed independently because these are the only two properties of the scroll area that developers can set.","source":"The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and `ScrollTop` are exposed independently because these are the only two properties of the scroll area that developers can set."}],"pos":[145681,145982],"yaml":true,"extradata":"MT"},{"content":"The distance, in pixels, between the top edge of the element and the top edge of its content.","nodes":[{"pos":[0,93],"content":"The distance, in pixels, between the top edge of the element and the top edge of its content.","nodes":[{"content":"The distance, in pixels, between the top edge of the element and the top edge of its content.","pos":[0,93]}]}],"pos":[146096,146190],"yaml":true},{"content":"Sets the value of the named attribute on the element.","nodes":[{"pos":[0,53],"content":"Sets the value of the named attribute on the element.","nodes":[{"content":"Sets the value of the named attribute on the element.","pos":[0,53]}]}],"pos":[147302,147356],"yaml":true},{"content":"An attribute in HTML is any valid name-value pair for that element. <xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag. Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).  \n  \n If `attributeName` is not a defined attribute on an element, <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> will define it on the element as a new attribute.  \n  \n <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.  \n  \n To set the `class` attribute on an <xref:System.Windows.Forms.HtmlElement> , you must refer to the attribute as `className` when specifying the first argument to <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>","nodes":[{"pos":[0,526],"content":"An attribute in HTML is any valid name-value pair for that element. <xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag. Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).","nodes":[{"content":"An attribute in HTML is any valid name-value pair for that element.","pos":[0,67]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; <ph id=\"ph2\">`SRC`</ph> is a predefined attribute for the <ph id=\"ph3\">`IMG`</ph> tag, for example, but not for the <ph id=\"ph4\">`DIV`</ph> tag.","pos":[68,325],"source":" <xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> to manipulate attributes not exposed on the managed Document Object Model (DOM).","pos":[326,526],"source":" Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM)."}]},{"pos":[533,699],"content":"If <ph id=\"ph1\">`attributeName`</ph> is not a defined attribute on an element, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> will define it on the element as a new attribute.","source":"If `attributeName` is not a defined attribute on an element, <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> will define it on the element as a new attribute."},{"pos":[706,843],"content":"<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> are case-insensitive.","pos":[0,137],"source":"<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive."}]},{"pos":[850,1067],"content":"To set the <ph id=\"ph1\">`class`</ph> attribute on an <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> , you must refer to the attribute as <ph id=\"ph3\">`className`</ph> when specifying the first argument to <ph id=\"ph4\">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>","source":"To set the `class` attribute on an <xref:System.Windows.Forms.HtmlElement> , you must refer to the attribute as `className` when specifying the first argument to <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>"}],"pos":[147367,148443],"yaml":true,"extradata":"MT"},{"content":"The name of the attribute to set.","nodes":[{"pos":[0,33],"content":"The name of the attribute to set.","nodes":[{"content":"The name of the attribute to set.","pos":[0,33]}]}],"pos":[149119,149153],"yaml":true},{"content":"The new value of this attribute.","nodes":[{"pos":[0,32],"content":"The new value of this attribute.","nodes":[{"content":"The new value of this attribute.","pos":[0,32]}]}],"pos":[149214,149247],"yaml":true},{"content":"Gets or sets a semicolon-delimited list of styles for the current element.","nodes":[{"pos":[0,74],"content":"Gets or sets a semicolon-delimited list of styles for the current element.","nodes":[{"content":"Gets or sets a semicolon-delimited list of styles for the current element.","pos":[0,74]}]}],"pos":[150209,150284],"yaml":true},{"content":"The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element. Styles in the <xref:System.Windows.Forms.HtmlElement.Style%2A> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:  \n  \n `style-name1:value1;...;[style-nameN:valueN;]`  \n  \n To set the font for a `DIV` element to 14-point Times New Roman bold, for example, you would assign the following string:  \n  \n `font-face:Times New Roman;font-size:14px;font-weight:bold;`  \n  \n For a full list of all available styles in the HTML DOM, see [STYLE Attribute](http://msdn.microsoft.com/library/ms534651.aspx).","nodes":[{"pos":[0,344],"content":"The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element. Styles in the <xref:System.Windows.Forms.HtmlElement.Style%2A> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:","nodes":[{"content":"The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element. Styles in the <xref:System.Windows.Forms.HtmlElement.Style%2A> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:","pos":[0,344],"nodes":[{"content":"The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element.","pos":[0,168]},{"content":"Styles in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.Style%2A&gt;</ph> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:","pos":[169,344],"source":" Styles in the <xref:System.Windows.Forms.HtmlElement.Style%2A> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:"}]}]},{"pos":[404,525],"content":"To set the font for a <ph id=\"ph1\">`DIV`</ph> element to 14-point Times New Roman bold, for example, you would assign the following string:","source":"To set the font for a `DIV` element to 14-point Times New Roman bold, for example, you would assign the following string:"},{"pos":[599,727],"content":"For a full list of all available styles in the HTML DOM, see <bpt id=\"p1\">[</bpt>STYLE Attribute<ept id=\"p1\">](http://msdn.microsoft.com/library/ms534651.aspx)</ept>.","source":"For a full list of all available styles in the HTML DOM, see [STYLE Attribute](http://msdn.microsoft.com/library/ms534651.aspx)."}],"pos":[150295,151033],"yaml":true,"extradata":"MT"},{"content":"A string consisting of all of the element's styles","nodes":[{"pos":[0,50],"content":"A string consisting of all of the element's styles","nodes":[{"content":"A string consisting of all of the element's styles","pos":[0,50]}]}],"pos":[151147,151198],"yaml":true},{"content":"Gets or sets the location of this element in the tab order.","nodes":[{"pos":[0,59],"content":"Gets or sets the location of this element in the tab order.","nodes":[{"content":"Gets or sets the location of this element in the tab order.","pos":[0,59]}]}],"pos":[152171,152231],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElement.TabIndex%2A> determines which element in an HTML document will next receive focus when the user presses the TAB key. By default, the only elements included in the tab order are `INPUT` elements, the `SELECT` control, and any element whose `contentEditable` property is set to `true`. You can include any HTML element in the tab order, such as a `DIV`, by assigning it an explicit <xref:System.Windows.Forms.HtmlElement.TabIndex%2A>.  \n  \n Valid values for <xref:System.Windows.Forms.HtmlElement.TabIndex%2A> range from -32767 to 32767.","nodes":[{"pos":[0,471],"content":"<xref:System.Windows.Forms.HtmlElement.TabIndex%2A> determines which element in an HTML document will next receive focus when the user presses the TAB key. By default, the only elements included in the tab order are `INPUT` elements, the `SELECT` control, and any element whose `contentEditable` property is set to `true`. You can include any HTML element in the tab order, such as a `DIV`, by assigning it an explicit <xref:System.Windows.Forms.HtmlElement.TabIndex%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> determines which element in an HTML document will next receive focus when the user presses the TAB key.","pos":[0,155],"source":"<xref:System.Windows.Forms.HtmlElement.TabIndex%2A> determines which element in an HTML document will next receive focus when the user presses the TAB key."},{"content":"By default, the only elements included in the tab order are <ph id=\"ph1\">`INPUT`</ph> elements, the <ph id=\"ph2\">`SELECT`</ph> control, and any element whose <ph id=\"ph3\">`contentEditable`</ph> property is set to <ph id=\"ph4\">`true`</ph>.","pos":[156,322],"source":" By default, the only elements included in the tab order are `INPUT` elements, the `SELECT` control, and any element whose `contentEditable` property is set to `true`."},{"content":"You can include any HTML element in the tab order, such as a <ph id=\"ph1\">`DIV`</ph>, by assigning it an explicit <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph>.","pos":[323,471],"source":" You can include any HTML element in the tab order, such as a `DIV`, by assigning it an explicit <xref:System.Windows.Forms.HtmlElement.TabIndex%2A>."}]},{"pos":[478,574],"content":"Valid values for <xref:System.Windows.Forms.HtmlElement.TabIndex%2A> range from -32767 to 32767.","nodes":[{"content":"Valid values for <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> range from -32767 to 32767.","pos":[0,96],"source":"Valid values for <xref:System.Windows.Forms.HtmlElement.TabIndex%2A> range from -32767 to 32767."}]}],"pos":[152242,152821],"yaml":true,"extradata":"MT"},{"content":"The numeric index of the element in the tab order.","nodes":[{"pos":[0,50],"content":"The numeric index of the element in the tab order.","nodes":[{"content":"The numeric index of the element in the tab order.","pos":[0,50]}]}],"pos":[152936,152987],"yaml":true},{"content":"Gets the name of the HTML tag.","nodes":[{"pos":[0,30],"content":"Gets the name of the HTML tag.","nodes":[{"content":"Gets the name of the HTML tag.","pos":[0,30]}]}],"pos":[153935,153966],"yaml":true},{"content":"Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the `HREF` attribute on the `A` element, or the `Submit` method on `FORM`. Use <xref:System.Windows.Forms.HtmlElement.TagName%2A> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.","nodes":[{"pos":[0,366],"content":"Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the `HREF` attribute on the `A` element, or the `Submit` method on `FORM`. Use <xref:System.Windows.Forms.HtmlElement.TagName%2A> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.","nodes":[{"content":"Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the <ph id=\"ph1\">`HREF`</ph> attribute on the <ph id=\"ph2\">`A`</ph> element, or the <ph id=\"ph3\">`Submit`</ph> method on <ph id=\"ph4\">`FORM`</ph>.","pos":[0,206],"source":"Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the `HREF` attribute on the `A` element, or the `Submit` method on `FORM`."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.","pos":[207,366],"source":" Use <xref:System.Windows.Forms.HtmlElement.TagName%2A> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation."}]}],"pos":[153977,154344],"yaml":true,"extradata":"MT"},{"content":"The name used to create this element using HTML markup.","nodes":[{"pos":[0,55],"content":"The name used to create this element using HTML markup.","nodes":[{"content":"The name used to create this element using HTML markup.","pos":[0,55]}]}],"pos":[155082,155138],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.HtmlElement\n  commentId: T:System.Windows.Forms.HtmlElement\n  id: HtmlElement\n  children:\n  - System.Windows.Forms.HtmlElement.All\n  - System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)\n  - System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)\n  - System.Windows.Forms.HtmlElement.CanHaveChildren\n  - System.Windows.Forms.HtmlElement.Children\n  - System.Windows.Forms.HtmlElement.Click\n  - System.Windows.Forms.HtmlElement.ClientRectangle\n  - System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)\n  - System.Windows.Forms.HtmlElement.Document\n  - System.Windows.Forms.HtmlElement.DomElement\n  - System.Windows.Forms.HtmlElement.DoubleClick\n  - System.Windows.Forms.HtmlElement.Drag\n  - System.Windows.Forms.HtmlElement.DragEnd\n  - System.Windows.Forms.HtmlElement.DragLeave\n  - System.Windows.Forms.HtmlElement.DragOver\n  - System.Windows.Forms.HtmlElement.Enabled\n  - System.Windows.Forms.HtmlElement.Equals(System.Object)\n  - System.Windows.Forms.HtmlElement.FirstChild\n  - System.Windows.Forms.HtmlElement.Focus\n  - System.Windows.Forms.HtmlElement.Focusing\n  - System.Windows.Forms.HtmlElement.GetAttribute(System.String)\n  - System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)\n  - System.Windows.Forms.HtmlElement.GetHashCode\n  - System.Windows.Forms.HtmlElement.GotFocus\n  - System.Windows.Forms.HtmlElement.Id\n  - System.Windows.Forms.HtmlElement.InnerHtml\n  - System.Windows.Forms.HtmlElement.InnerText\n  - System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)\n  - System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])\n  - System.Windows.Forms.HtmlElement.InvokeMember(System.String)\n  - System.Windows.Forms.HtmlElement.KeyDown\n  - System.Windows.Forms.HtmlElement.KeyPress\n  - System.Windows.Forms.HtmlElement.KeyUp\n  - System.Windows.Forms.HtmlElement.LosingFocus\n  - System.Windows.Forms.HtmlElement.LostFocus\n  - System.Windows.Forms.HtmlElement.MouseDown\n  - System.Windows.Forms.HtmlElement.MouseEnter\n  - System.Windows.Forms.HtmlElement.MouseLeave\n  - System.Windows.Forms.HtmlElement.MouseMove\n  - System.Windows.Forms.HtmlElement.MouseOver\n  - System.Windows.Forms.HtmlElement.MouseUp\n  - System.Windows.Forms.HtmlElement.Name\n  - System.Windows.Forms.HtmlElement.NextSibling\n  - System.Windows.Forms.HtmlElement.OffsetParent\n  - System.Windows.Forms.HtmlElement.OffsetRectangle\n  - System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  - System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  - System.Windows.Forms.HtmlElement.OuterHtml\n  - System.Windows.Forms.HtmlElement.OuterText\n  - System.Windows.Forms.HtmlElement.Parent\n  - System.Windows.Forms.HtmlElement.RaiseEvent(System.String)\n  - System.Windows.Forms.HtmlElement.RemoveFocus\n  - System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)\n  - System.Windows.Forms.HtmlElement.ScrollLeft\n  - System.Windows.Forms.HtmlElement.ScrollRectangle\n  - System.Windows.Forms.HtmlElement.ScrollTop\n  - System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)\n  - System.Windows.Forms.HtmlElement.Style\n  - System.Windows.Forms.HtmlElement.TabIndex\n  - System.Windows.Forms.HtmlElement.TagName\n  langs:\n  - csharp\n  name: HtmlElement\n  nameWithType: HtmlElement\n  fullName: System.Windows.Forms.HtmlElement\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Represents an HTML element inside of a Web page.\n  remarks: \"<xref:System.Windows.Forms.HtmlElement> represents any possible type of element in an HTML document, such as `BODY`, `TABLE`, and `FORM`, among others. The class exposes the most common properties you can expect to find on all elements.  \\n  \\n Most elements can have *child elements*: other HTML elements that are placed underneath them. Use the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property to test whether a given element has children, and the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection to iterate through them. The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property returns the <xref:System.Windows.Forms.HtmlElement> in which the current element is nested.  \\n  \\n You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <xref:System.Windows.Forms.HtmlElement>, such as the `SRC` attribute on an `IMG` element or the `Submit` method on a `FORM`. The <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> methods enable you to retrieve and alter any attribute or property on a specific element, while <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> provides access to any methods not exposed in the managed Document Object Model (DOM). If your application has unmanaged code permission, you can also access unexposed properties and methods with the <xref:System.Windows.Forms.HtmlElement.DomElement%2A> attribute.  \\n  \\n Use the <xref:System.Windows.Forms.HtmlElement.TagName%2A> property to test whether an element is of a specific type.  \\n  \\n Any HTML document can be modified at run time. You can create new <xref:System.Windows.Forms.HtmlElement> objects with the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method of <xref:System.Windows.Forms.HtmlDocument>, and add them to another element using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods. You can also create the elements as HTML tags and assign them to an existing element's <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property.\"\n  example:\n  - \"The following code example shows how to examine an arbitrary HTML document and derive a string describing the HTML elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document. This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#1)]\\n [!code-vb[System.Windows.Forms.HtmlElement#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#1)]\"\n  syntax:\n    content: public sealed class HtmlElement\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.All\n  commentId: P:System.Windows.Forms.HtmlElement.All\n  id: All\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: All\n  nameWithType: HtmlElement.All\n  fullName: HtmlElement.All\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> of all elements underneath the current element.\n  remarks: \"To access only those elements which have the current element as their direct parent, use the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection instead.  \\n  \\n Elements in this collection will not necessarily be returned in source order.\"\n  syntax:\n    content: public System.Windows.Forms.HtmlElementCollection All { get; }\n    return:\n      type: System.Windows.Forms.HtmlElementCollection\n      description: A collection of all elements that are direct or indirect children of the current element. If the current element is a <code>TABLE</code>, for example, <xref href=\"System.Windows.Forms.HtmlElement.All\"></xref> will return every <code>TH</code>, <code>TR</code>, and <code>TD</code> element within the table, as well as any other elements, such as <code>DIV</code> and <code>SPAN</code> elements, contained within the cells.\n  overload: System.Windows.Forms.HtmlElement.All*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)\n  commentId: M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)\n  id: AppendChild(System.Windows.Forms.HtmlElement)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: AppendChild(HtmlElement)\n  nameWithType: HtmlElement.AppendChild(HtmlElement)\n  fullName: HtmlElement.AppendChild(HtmlElement)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Adds an element to another element's subtree.\n  remarks: \"The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways. Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> to add new elements to an existing document, or to move an element on the page.  \\n  \\n If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.  \\n  \\n Any additions made to a document at run-time using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> will not be persisted when you call the <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> method on the <xref:System.Windows.Forms.WebBrowser> control.\"\n  example:\n  - \"The following code example creates a new hyperlink using the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method and adds it to end of a page using `AppendChild` on the `BODY` element. The example requires that your application contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#8)]\\n [!code-vb[System.Windows.Forms.HtmlElement#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#8)]\"\n  syntax:\n    content: public System.Windows.Forms.HtmlElement AppendChild (System.Windows.Forms.HtmlElement newElement);\n    parameters:\n    - id: newElement\n      type: System.Windows.Forms.HtmlElement\n      description: The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> to append to this location in the tree.\n    return:\n      type: System.Windows.Forms.HtmlElement\n      description: The element after it has been added to the tree.\n  overload: System.Windows.Forms.HtmlElement.AppendChild*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)\n  commentId: M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)\n  id: AttachEventHandler(System.String,System.EventHandler)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: AttachEventHandler(String, EventHandler)\n  nameWithType: HtmlElement.AttachEventHandler(String, EventHandler)\n  fullName: HtmlElement.AttachEventHandler(String, EventHandler)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Adds an event handler for a named event on the HTML Document Object Model (DOM).\n  remarks: \"The Managed Document Object Model (DOM) exposes only a select number of events. Most of the unexposed events are only defined for specific types of elements; such as the `submit` event, which is valid only on `FORM` elements. Use <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> to add an event handler to these unexposed events.  \\n  \\n You should not attach an event to the document or one of its objects until the document has completed loading. The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.  \\n  \\n For more information about the available unmanaged events, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md) and the IHTMLElement interfaces: [IHTMLElement](http://go.microsoft.com/fwlink/?LinkId=104876), [IHTMLElement2](http://go.microsoft.com/fwlink/?LinkId=104877), [IHTMLElement3](http://go.microsoft.com/fwlink/?LinkId=104878), [IHTMLElement4](http://go.microsoft.com/fwlink/?LinkId=104879).\"\n  syntax:\n    content: public void AttachEventHandler (string eventName, EventHandler eventHandler);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: The name of the event you want to handle.\n    - id: eventHandler\n      type: System.EventHandler\n      description: The managed code that handles the event.\n  overload: System.Windows.Forms.HtmlElement.AttachEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.CanHaveChildren\n  commentId: P:System.Windows.Forms.HtmlElement.CanHaveChildren\n  id: CanHaveChildren\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: CanHaveChildren\n  nameWithType: HtmlElement.CanHaveChildren\n  fullName: HtmlElement.CanHaveChildren\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether this element can have child elements.\n  remarks: Some elements, such as `IMG` and `SCRIPT`, cannot have any children. Use this property before you call <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> on an arbitrary element.\n  example:\n  - \"The following code example handles the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>. If an element was not previous selected using a mouse click, the code assigns the element to a private class variable named `MoveElement`. If an element was selected, the code attempts to append it to the element that was just clicked. This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have already added an event handler for the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#2)]\\n [!code-vb[System.Windows.Forms.HtmlElement#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#2)]\"\n  syntax:\n    content: public bool CanHaveChildren { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if element can have child elements; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElement.CanHaveChildren*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Children\n  commentId: P:System.Windows.Forms.HtmlElement.Children\n  id: Children\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Children\n  nameWithType: HtmlElement.Children\n  fullName: HtmlElement.Children\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> of all children of the current element.\n  remarks: \"Many of the elements inside of an HTML file can have other HTML elements underneath them. The <xref:System.Windows.Forms.HtmlElement.Children%2A> collection provides a simple mechanism for exploring the tree structure of a document.  \\n  \\n <xref:System.Windows.Forms.HtmlElement.Children%2A> only exposes elements whose direct parent is the current element. If you have an <xref:System.Windows.Forms.HtmlElement> for a `TABLE` element, <xref:System.Windows.Forms.HtmlElement.Children%2A> will give you all of the `TR` (row) elements inside of the `TABLE`. To retrieve the `TD` (cell) elements contained inside of the `TR` elements, you will need to use either the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection on each individual `TR` element, or use the <xref:System.Windows.Forms.HtmlElement.All%2A> collection on <xref:System.Windows.Forms.HtmlElement>.  \\n  \\n Elements in this collection are not guaranteed to be in source order.  \\n  \\n If <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> is `false`, `Children` will always be empty.\"\n  example:\n  - \"The following code example examines an arbitrary HTML document and derive a string describing the elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document. It does this by searching the `Children` collection of all elements recursively, starting with the HTML element at the top of the document. This code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#1)]\\n [!code-vb[System.Windows.Forms.HtmlElement#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.HtmlElementCollection Children { get; }\n    return:\n      type: System.Windows.Forms.HtmlElementCollection\n      description: A collection of all <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects that have the current element as a parent.\n  overload: System.Windows.Forms.HtmlElement.Children*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Click\n  commentId: E:System.Windows.Forms.HtmlElement.Click\n  id: Click\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Click\n  nameWithType: HtmlElement.Click\n  fullName: HtmlElement.Click\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user clicks on the element with the left mouse button.\n  remarks: \"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Click> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.Click> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n If the user clicks on an element that does not currently have input focus, the <xref:System.Windows.Forms.HtmlElement.Click> event will occur after the <xref:System.Windows.Forms.HtmlElement.Focusing> event, but before the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for that element.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Click> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Click> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#432](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#432)]\\n [!code-vb[System.Windows.Forms.EventExamples#432](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#432)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler Click;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.ClientRectangle\n  commentId: P:System.Windows.Forms.HtmlElement.ClientRectangle\n  id: ClientRectangle\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: ClientRectangle\n  nameWithType: HtmlElement.ClientRectangle\n  fullName: HtmlElement.ClientRectangle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the bounds of the client area of the element in the HTML document.\n  remarks: <xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning. A document is absolutely positioned if its position style is set to `absolute`, after which it can be positioned at any coordinate on the HTML page.\n  example:\n  - \"Assume you have loaded the following HTML page into a hosted instance of the <xref:System.Windows.Forms.WebBrowser> control.  \\n  \\n```  \\n<HTML>  \\n  \\n    <BODY>  \\n  \\n        <DIV id=\\\"div1\\\" style=\\\"position:absolute;top:100px;left:100px;border-      style:solid;border-width:1px;\\\">  \\n            Edit this text.  \\n        </DIV>  \\n  \\n    </BODY>  \\n  \\n</HTML>  \\n```  \\n  \\n The following code example demonstrates retrieving this element and expanding its dimensions if the client area is less than 400 pixels wide by 50 pixels high, and also sets the `DIV` to the `contentEditable` state so that the user can input text.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#3)]\\n [!code-vb[System.Windows.Forms.HtmlElement#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#3)]\"\n  syntax:\n    content: public System.Drawing.Rectangle ClientRectangle { get; }\n    return:\n      type: System.Drawing.Rectangle\n      description: The client area occupied by the element, minus any area taken by borders and scroll bars. To obtain the position and dimensions of the element inclusive of its adornments, use <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> instead.\n  overload: System.Windows.Forms.HtmlElement.ClientRectangle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)\n  commentId: M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)\n  id: DetachEventHandler(System.String,System.EventHandler)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: DetachEventHandler(String, EventHandler)\n  nameWithType: HtmlElement.DetachEventHandler(String, EventHandler)\n  fullName: HtmlElement.DetachEventHandler(String, EventHandler)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Removes an event handler from a named event on the HTML Document Object Model (DOM).\n  syntax:\n    content: public void DetachEventHandler (string eventName, EventHandler eventHandler);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: The name of the event you want to handle.\n    - id: eventHandler\n      type: System.EventHandler\n      description: The managed code that handles the event.\n  overload: System.Windows.Forms.HtmlElement.DetachEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Document\n  commentId: P:System.Windows.Forms.HtmlElement.Document\n  id: Document\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Document\n  nameWithType: HtmlElement.Document\n  fullName: HtmlElement.Document\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the <xref href=\"System.Windows.Forms.HtmlDocument\"></xref> to which this element belongs.\n  remarks: Some HTML pages can host frames using the `FRAMESET` tags. In this case, each individual `FRAME` element will contain its own instance of <xref:System.Windows.Forms.HtmlDocument>. This property is most useful when you have received a reference to an element in an event handler from the <xref:System.Windows.Forms.HtmlElementEventArgs>, and need to perform some action on the document in which the element resides.\n  syntax:\n    content: public System.Windows.Forms.HtmlDocument Document { get; }\n    return:\n      type: System.Windows.Forms.HtmlDocument\n      description: The parent document of this element.\n  overload: System.Windows.Forms.HtmlElement.Document*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.DomElement\n  commentId: P:System.Windows.Forms.HtmlElement.DomElement\n  id: DomElement\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: DomElement\n  nameWithType: HtmlElement.DomElement\n  fullName: HtmlElement.DomElement\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an unmanaged interface pointer for this element.\n  remarks: \"<xref:System.Windows.Forms.HtmlElement> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM). If you need to access unexposed properties or methods on the underlying COM interfaces, such as `IHTMLElement`, you can use this object to query for them.  \\n  \\n In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application. However, you can also execute unexposed properties and methods using the `Invoke` method.\"\n  example:\n  - \"The following code example uses unmanaged interfaces to take the currently selected text and convert it into a hyperlink, with the URL chosen by the user. This code was written under the assumption that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have added the unmanaged MSHTML library as a reference to your project.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#4)]\\n [!code-vb[System.Windows.Forms.HtmlElement#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#4)]\"\n  syntax:\n    content: public object DomElement { get; }\n    return:\n      type: System.Object\n      description: The COM <code>IUnknown</code> pointer for the element, which you can cast to one of the HTML element interfaces, such as <code>IHTMLElement</code>.\n  overload: System.Windows.Forms.HtmlElement.DomElement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.DoubleClick\n  commentId: E:System.Windows.Forms.HtmlElement.DoubleClick\n  id: DoubleClick\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: DoubleClick\n  nameWithType: HtmlElement.DoubleClick\n  fullName: HtmlElement.DoubleClick\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user clicks the left mouse button over an element twice, in rapid succession.\n  remarks: \"A double-click is determined by the mouse settings of the user's operating system. The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.  \\n  \\n You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DoubleClick> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DoubleClick> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#433](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#433)]\\n [!code-vb[System.Windows.Forms.EventExamples#433](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#433)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler DoubleClick;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Drag\n  commentId: E:System.Windows.Forms.HtmlElement.Drag\n  id: Drag\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Drag\n  nameWithType: HtmlElement.Drag\n  fullName: HtmlElement.Drag\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user drags text to various locations.\n  remarks: \"This event occurs when text is dragged to the following locations:  \\n  \\n-   Within or between HTML pages hosted in the <xref:System.Windows.Forms.WebBrowser> control or Internet Explorer  \\n  \\n-   To another application  \\n  \\n-   To the Windows desktop  \\n  \\n You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Drag> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.Drag> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Drag> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Drag> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#434](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#434)]\\n [!code-vb[System.Windows.Forms.EventExamples#434](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#434)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler Drag;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.DragEnd\n  commentId: E:System.Windows.Forms.HtmlElement.DragEnd\n  id: DragEnd\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: DragEnd\n  nameWithType: HtmlElement.DragEnd\n  fullName: HtmlElement.DragEnd\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a user finishes a drag operation.\n  remarks: \"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragEnd> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragEnd> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#435](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#435)]\\n [!code-vb[System.Windows.Forms.EventExamples#435](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#435)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler DragEnd;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.DragLeave\n  commentId: E:System.Windows.Forms.HtmlElement.DragLeave\n  id: DragLeave\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: DragLeave\n  nameWithType: HtmlElement.DragLeave\n  fullName: HtmlElement.DragLeave\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user is no longer dragging an item over this element.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragLeave> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragLeave> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#436](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#436)]\\n [!code-vb[System.Windows.Forms.EventExamples#436](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#436)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler DragLeave;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.DragOver\n  commentId: E:System.Windows.Forms.HtmlElement.DragOver\n  id: DragOver\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: DragOver\n  nameWithType: HtmlElement.DragOver\n  fullName: HtmlElement.DragOver\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user drags text over the element.\n  remarks: \"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragOver> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragOver> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#437](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#437)]\\n [!code-vb[System.Windows.Forms.EventExamples#437](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#437)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler DragOver;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Enabled\n  commentId: P:System.Windows.Forms.HtmlElement.Enabled\n  id: Enabled\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: HtmlElement.Enabled\n  fullName: HtmlElement.Enabled\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets whether the user can input data into this element.\n  remarks: For `FORM` elements such as text boxes and radio buttons, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will prevent the user from using these form fields. For other elements, such as `DIV` or `SPAN`, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will cause all text within the element to appear shaded; however, the text will still be selectable. To cancel selection, add an event handler for the unexposed `onselectstart` event using the <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> method.\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the element allows user input; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElement.Enabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Equals(System.Object)\n  commentId: M:System.Windows.Forms.HtmlElement.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: HtmlElement.Equals(Object)\n  fullName: HtmlElement.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Tests if the supplied object is equal to the current element.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test for equality.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is an <xref href=\"System.Windows.Forms.HtmlElement\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElement.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.FirstChild\n  commentId: P:System.Windows.Forms.HtmlElement.FirstChild\n  id: FirstChild\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: FirstChild\n  nameWithType: HtmlElement.FirstChild\n  fullName: HtmlElement.FirstChild\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the next element below this element in the document tree.\n  remarks: Use <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> to walk the document tree for an HTML document.\n  syntax:\n    content: public System.Windows.Forms.HtmlElement FirstChild { get; }\n    return:\n      type: System.Windows.Forms.HtmlElement\n      description: An <xref href=\"System.Windows.Forms.HtmlElement\"></xref> representing the first element contained underneath the current element, in source order.\n  overload: System.Windows.Forms.HtmlElement.FirstChild*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Focus\n  commentId: M:System.Windows.Forms.HtmlElement.Focus\n  id: Focus\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Focus()\n  nameWithType: HtmlElement.Focus()\n  fullName: HtmlElement.Focus()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Puts user input focus on the current element.\n  remarks: \"Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> property of <xref:System.Windows.Forms.HtmlDocument>.  \\n  \\n Any key strokes entered by a user after <xref:System.Windows.Forms.HtmlElement.Focus%2A> has been called will be sent to that element.\"\n  syntax:\n    content: public void Focus ();\n    parameters: []\n  overload: System.Windows.Forms.HtmlElement.Focus*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Focusing\n  commentId: E:System.Windows.Forms.HtmlElement.Focusing\n  id: Focusing\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Focusing\n  nameWithType: HtmlElement.Focusing\n  fullName: HtmlElement.Focusing\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the element first receives user input focus.\n  remarks: \"An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <xref:System.Windows.Forms.HtmlElement.Focusing> and <xref:System.Windows.Forms.HtmlElement.GotFocus> events again when the user switches back to your application.  \\n  \\n You cannot cancel the default behavior of this event. To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.Focusing> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Focusing> event. This report helps you to learn when the event occurs and can assist you in debugging.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Focusing> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#438](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#438)]\\n [!code-vb[System.Windows.Forms.EventExamples#438](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#438)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler Focusing;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElement.GetAttribute(System.String)\n  commentId: M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)\n  id: GetAttribute(System.String)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: GetAttribute(String)\n  nameWithType: HtmlElement.GetAttribute(String)\n  fullName: HtmlElement.GetAttribute(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the value of the named attribute on the element.\n  remarks: \"An attribute in HTML is any valid name/value pair for that element. <xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag. Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).  \\n  \\n <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.\"\n  example:\n  - \"The following code example retrieves all of the `META` tags within an HTML document, using <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> to find the `META` tag with the name `Description`. The example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#6)]\\n [!code-vb[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#6)]\"\n  syntax:\n    content: public string GetAttribute (string attributeName);\n    parameters:\n    - id: attributeName\n      type: System.String\n      description: The name of the attribute. This argument is case-insensitive.\n    return:\n      type: System.String\n      description: The value of this attribute on the element, as a <xref href=\"System.String\"></xref> value. If the specified attribute does not exist on this element, returns an empty string.\n  overload: System.Windows.Forms.HtmlElement.GetAttribute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)\n  commentId: M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)\n  id: GetElementsByTagName(System.String)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: GetElementsByTagName(String)\n  nameWithType: HtmlElement.GetElementsByTagName(String)\n  fullName: HtmlElement.GetElementsByTagName(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves a collection of elements represented in HTML by the specified <code>HTML</code> tag.\n  syntax:\n    content: public System.Windows.Forms.HtmlElementCollection GetElementsByTagName (string tagName);\n    parameters:\n    - id: tagName\n      type: System.String\n      description: The name of the tag whose <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects you wish to retrieve.\n    return:\n      type: System.Windows.Forms.HtmlElementCollection\n      description: An <xref href=\"System.Windows.Forms.HtmlElementCollection\"></xref> containing all elements whose <code>HTML</code> tag name is equal to <code>tagName</code>.\n  overload: System.Windows.Forms.HtmlElement.GetElementsByTagName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.GetHashCode\n  commentId: M:System.Windows.Forms.HtmlElement.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: HtmlElement.GetHashCode()\n  fullName: HtmlElement.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Serves as a hash function for a particular type.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Object\"></xref>.\n  overload: System.Windows.Forms.HtmlElement.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.GotFocus\n  commentId: E:System.Windows.Forms.HtmlElement.GotFocus\n  id: GotFocus\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: GotFocus\n  nameWithType: HtmlElement.GotFocus\n  fullName: HtmlElement.GotFocus\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the element has received user input focus.\n  remarks: \"You can neither cancel this event's default behavior, nor prevent it from bubbling. To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"Save the following HTML code into a file, and load the file into a <xref:System.Windows.Forms.WebBrowser> control in a Windows Forms project.  \\n  \\n```  \\n<HTML>  \\n    <BODY>  \\n        <FORM name=\\\"form1\\\">  \\n            <INPUT type=\\\"text\\\" size=20 name=\\\"text1\\\">  \\n            <INPUT type=\\\"text\\\" size=20 name=\\\"text2\\\">  \\n            <INPUT type=\\\"text\\\" size=20 name=\\\"text3\\\">  \\n        </FORM>  \\n    </BODY>  \\n</HTML>  \\n```  \\n  \\n The following code example prevents the next `INPUT` element in the tab order from receiving user input focus if the previous element contains less than five characters. The example requires that the previously mentioned HTML file is loaded into an instance of the <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#15)]\\n [!code-vb[System.Windows.Forms.HtmlElement#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#15)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler GotFocus;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Id\n  commentId: P:System.Windows.Forms.HtmlElement.Id\n  id: Id\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Id\n  nameWithType: HtmlElement.Id\n  fullName: HtmlElement.Id\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a label by which to identify the element.\n  remarks: <xref:System.Windows.Forms.HtmlElement.Id%2A> must be unique; you cannot have two elements with the same <xref:System.Windows.Forms.HtmlElement.Id%2A> inside of the same document. Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to give the same identifier to a group of logically related elements.\n  syntax:\n    content: public string Id { get; set; }\n    return:\n      type: System.String\n      description: The unique identifier for the element.\n  overload: System.Windows.Forms.HtmlElement.Id*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElement.InnerHtml\n  commentId: P:System.Windows.Forms.HtmlElement.InnerHtml\n  id: InnerHtml\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: InnerHtml\n  nameWithType: HtmlElement.InnerHtml\n  fullName: HtmlElement.InnerHtml\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the HTML markup underneath this element.\n  remarks: \"There are several ways to add new elements to an existing HTML page, such as the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> and <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods. Using <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.  \\n  \\n <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> differs from <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> in that <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will not include the HTML that represents the object you are calling. See <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> for more information about the difference between these two properties.  \\n  \\n Setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> destroys any children previously appended to the element. If you retrieve an element from the DOM and then assign new HTML to its parents' <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.  \\n  \\n For some elements, setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is not a valid operation. Some HTML tags have no closing tag, such as the `IMG` tag, and therefore cannot contain nested elements. Some tags, such as the `SCRIPT` tag, can only contain text content; setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will result in an error. For both types of tags, the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property will return `false`. However, you also cannot set <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> on `TABLE` and `TR` elements, as assigning malformed HTML to these elements could corrupt the rendering of the document. Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or the `insertRow` and `insertCell` methods on the unmanaged `IHTMLTable` interface to add rows and cells to a `TABLE`.  \\n  \\n If you need only to assign text to an element and not HTML markup, use the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property instead.  \\n  \\n Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will destroy any text values previously assigned using <xref:System.Windows.Forms.HtmlElement.InnerText%2A>.\"\n  syntax:\n    content: public string InnerHtml { get; set; }\n    return:\n      type: System.String\n      description: The HTML markup that defines the child elements of the current element.\n  overload: System.Windows.Forms.HtmlElement.InnerHtml*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Creating child elements on this element is not allowed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.InnerText\n  commentId: P:System.Windows.Forms.HtmlElement.InnerText\n  id: InnerText\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: InnerText\n  nameWithType: HtmlElement.InnerText\n  fullName: HtmlElement.InnerText\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text assigned to the element.\n  remarks: \"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.InnerText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file. If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will return all of the text in that HTML with the markup removed.  \\n  \\n Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will destroy any child elements that belong to the element.\"\n  example:\n  - \"The following code creates a new hyperlink using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>, and assigns text to the link using the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#8)]\\n [!code-vb[System.Windows.Forms.HtmlElement#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#8)]\"\n  syntax:\n    content: public string InnerText { get; set; }\n    return:\n      type: System.String\n      description: The element's text, absent any HTML markup. If the element contains child elements, only the text in those child elements will be preserved.\n  overload: System.Windows.Forms.HtmlElement.InnerText*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The specified element cannot contain text (for example, an <code>IMG</code> element).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)\n  commentId: M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)\n  id: InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: InsertAdjacentElement(HtmlElementInsertionOrientation, HtmlElement)\n  nameWithType: HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation, HtmlElement)\n  fullName: HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation, HtmlElement)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Insert a new element into the Document Object Model (DOM).\n  remarks: \"Do not call this method until after the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event on the <xref:System.Windows.Forms.WebBrowser> control has occurred. Calling this method before then can result in an exception, as the document will not have finished loading.  \\n  \\n Whether a value of <xref:System.Windows.Forms.HtmlElementInsertionOrientation> is valid will depend on the type of the element. For example, <xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin> is valid if the element is a `DIV`, but not if it is a `SCRIPT` or `IMG` element, neither of which can contain child elements.\"\n  example:\n  - \"The following code example inserts a `DIV` element into the top of every page that users view outside of the ADatum.com server. The example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`. Your sample must also import the namespace <xref:System.Text.RegularExpressions>.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#9)]\\n [!code-vb[System.Windows.Forms.HtmlElement#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#9)]\"\n  syntax:\n    content: public System.Windows.Forms.HtmlElement InsertAdjacentElement (System.Windows.Forms.HtmlElementInsertionOrientation orient, System.Windows.Forms.HtmlElement newElement);\n    parameters:\n    - id: orient\n      type: System.Windows.Forms.HtmlElementInsertionOrientation\n      description: Where to insert this element in relation to the current element.\n    - id: newElement\n      type: System.Windows.Forms.HtmlElement\n      description: The new element to insert.\n    return:\n      type: System.Windows.Forms.HtmlElement\n      description: The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> that was just inserted. If insertion failed, this will return `null`.\n  overload: System.Windows.Forms.HtmlElement.InsertAdjacentElement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])\n  commentId: M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])\n  id: InvokeMember(System.String,System.Object[])\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: InvokeMember(String, Object[])\n  nameWithType: HtmlElement.InvokeMember(String, Object[])\n  fullName: HtmlElement.InvokeMember(String, Object[])\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Executes a function defined in the current HTML page by a scripting language.\n  remarks: This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code. All arguments supplied to <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> will be converted to Win32 `VARIANT` data types before they are passed to the named scripting function.\n  example:\n  - \"The following code example gets a `TABLE` called `dataTable` and uses the unexposed `moveRow` method to move a row from the end of the table to the beginning.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#11)]\\n [!code-vb[System.Windows.Forms.HtmlElement#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#11)]\"\n  syntax:\n    content: public object InvokeMember (string methodName, object[] parameter);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the property or method to invoke.\n    - id: parameter\n      type: System.Object[]\n      description: A list of parameters to pass.\n    return:\n      type: System.Object\n      description: The element returned by the function, represented as an <xref href=\"System.Object\"></xref>. If this <xref href=\"System.Object\"></xref> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.\n  overload: System.Windows.Forms.HtmlElement.InvokeMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String)\n  commentId: M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)\n  id: InvokeMember(System.String)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: InvokeMember(String)\n  nameWithType: HtmlElement.InvokeMember(String)\n  fullName: HtmlElement.InvokeMember(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Executes an unexposed method on the underlying DOM element of this element.\n  remarks: This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code. Use this version of <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> to execute unexposed methods that take no arguments. For an example, see <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>.\n  syntax:\n    content: public object InvokeMember (string methodName);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the property or method to invoke.\n    return:\n      type: System.Object\n      description: The element returned by this method, represented as an <xref href=\"System.Object\"></xref>. If this <xref href=\"System.Object\"></xref> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.\n  overload: System.Windows.Forms.HtmlElement.InvokeMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.KeyDown\n  commentId: E:System.Windows.Forms.HtmlElement.KeyDown\n  id: KeyDown\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: KeyDown\n  nameWithType: HtmlElement.KeyDown\n  fullName: HtmlElement.KeyDown\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user presses a key on the keyboard.\n  remarks: \"<xref:System.Windows.Forms.HtmlElement.KeyDown> occurs before <xref:System.Windows.Forms.HtmlElement.KeyPress>, which in turns occurs before <xref:System.Windows.Forms.HtmlElement.KeyUp>.  \\n  \\n You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyDown> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyDown> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#442](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#442)]\\n [!code-vb[System.Windows.Forms.EventExamples#442](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#442)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler KeyDown;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.KeyPress\n  commentId: E:System.Windows.Forms.HtmlElement.KeyPress\n  id: KeyPress\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: KeyPress\n  nameWithType: HtmlElement.KeyPress\n  fullName: HtmlElement.KeyPress\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user presses and releases a key on the keyboard.\n  remarks: \"<xref:System.Windows.Forms.HtmlElement.KeyPress> occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown> and before <xref:System.Windows.Forms.HtmlElement.KeyUp>.  \\n  \\n You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyPress> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyPress> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#443](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#443)]\\n [!code-vb[System.Windows.Forms.EventExamples#443](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#443)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler KeyPress;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.KeyUp\n  commentId: E:System.Windows.Forms.HtmlElement.KeyUp\n  id: KeyUp\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: KeyUp\n  nameWithType: HtmlElement.KeyUp\n  fullName: HtmlElement.KeyUp\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user releases a key on the keyboard.\n  remarks: \"<xref:System.Windows.Forms.HtmlElement.KeyUp> occurs after <xref:System.Windows.Forms.HtmlElement.KeyPress>, which occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown>.  \\n  \\n You cannot cancel this event.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.KeyUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyUp> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyUp> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#444](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#444)]\\n [!code-vb[System.Windows.Forms.EventExamples#444](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#444)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler KeyUp;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.LosingFocus\n  commentId: E:System.Windows.Forms.HtmlElement.LosingFocus\n  id: LosingFocus\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: LosingFocus\n  nameWithType: HtmlElement.LosingFocus\n  fullName: HtmlElement.LosingFocus\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the element is losing user input focus.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.LosingFocus> event. This report helps you to learn when the event occurs and can assist you in debugging.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.LosingFocus> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#440](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#440)]\\n [!code-vb[System.Windows.Forms.EventExamples#440](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#440)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler LosingFocus;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.LostFocus\n  commentId: E:System.Windows.Forms.HtmlElement.LostFocus\n  id: LostFocus\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: LostFocus\n  nameWithType: HtmlElement.LostFocus\n  fullName: HtmlElement.LostFocus\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the element has lost user input focus.\n  remarks: \"An element will no longer receive key stroke events after <xref:System.Windows.Forms.HtmlElement.LostFocus> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <xref:System.Windows.Forms.HtmlElement.Focus%2A> method on that element.  \\n  \\n You cannot cancel this event.  \\n  \\n An <xref:System.Windows.Forms.HtmlElement.LostFocus> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.LostFocus> event. This report helps you to learn when the event occurs and can assist you in debugging.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.LostFocus> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#441](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#441)]\\n [!code-vb[System.Windows.Forms.EventExamples#441](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#441)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler LostFocus;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElement.MouseDown\n  commentId: E:System.Windows.Forms.HtmlElement.MouseDown\n  id: MouseDown\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: MouseDown\n  nameWithType: HtmlElement.MouseDown\n  fullName: HtmlElement.MouseDown\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user presses a mouse button.\n  remarks: \"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseDown> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseDown> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#446](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#446)]\\n [!code-vb[System.Windows.Forms.EventExamples#446](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#446)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler MouseDown;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.MouseEnter\n  commentId: E:System.Windows.Forms.HtmlElement.MouseEnter\n  id: MouseEnter\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: MouseEnter\n  nameWithType: HtmlElement.MouseEnter\n  fullName: HtmlElement.MouseEnter\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user first moves the mouse cursor over the current element.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseEnter> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseEnter> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#449](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#449)]\\n [!code-vb[System.Windows.Forms.EventExamples#449](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#449)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler MouseEnter;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.MouseLeave\n  commentId: E:System.Windows.Forms.HtmlElement.MouseLeave\n  id: MouseLeave\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: MouseLeave\n  nameWithType: HtmlElement.MouseLeave\n  fullName: HtmlElement.MouseLeave\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user moves the mouse cursor off of the current element.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseLeave> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseLeave> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#450](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#450)]\\n [!code-vb[System.Windows.Forms.EventExamples#450](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#450)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler MouseLeave;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.MouseMove\n  commentId: E:System.Windows.Forms.HtmlElement.MouseMove\n  id: MouseMove\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: MouseMove\n  nameWithType: HtmlElement.MouseMove\n  fullName: HtmlElement.MouseMove\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user moves the mouse cursor across the element.\n  remarks: \"You cannot cancel this event.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.MouseMove> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseMove> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseMove> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#445](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#445)]\\n [!code-vb[System.Windows.Forms.EventExamples#445](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#445)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler MouseMove;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.MouseOver\n  commentId: E:System.Windows.Forms.HtmlElement.MouseOver\n  id: MouseOver\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: MouseOver\n  nameWithType: HtmlElement.MouseOver\n  fullName: HtmlElement.MouseOver\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the mouse cursor enters the bounds of the element.\n  remarks: \"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseOver> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseOver> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#447](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#447)]\\n [!code-vb[System.Windows.Forms.EventExamples#447](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#447)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler MouseOver;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.MouseUp\n  commentId: E:System.Windows.Forms.HtmlElement.MouseUp\n  id: MouseUp\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: MouseUp\n  nameWithType: HtmlElement.MouseUp\n  fullName: HtmlElement.MouseUp\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user releases a mouse button.\n  remarks: \"You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n A <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.  \\n  \\n For more information about the difference between canceling event bubbling and canceling the default action on an event, see [About the DHTML Object Model](http://msdn.microsoft.com/library/ms533022.aspx).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseUp> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseUp> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#448](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#448)]\\n [!code-vb[System.Windows.Forms.EventExamples#448](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#448)]\"\n  syntax:\n    content: public event System.Windows.Forms.HtmlElementEventHandler MouseUp;\n    return:\n      type: System.Windows.Forms.HtmlElementEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElement.Name\n  commentId: P:System.Windows.Forms.HtmlElement.Name\n  id: Name\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: HtmlElement.Name\n  fullName: HtmlElement.Name\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the name of the element.\n  remarks: \"Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to retrieve elements from a document using the <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> method on the <xref:System.Windows.Forms.HtmlElement.All%2A> property of <xref:System.Windows.Forms.HtmlDocument>.  \\n  \\n When applied to `INPUT` elements, <xref:System.Windows.Forms.HtmlElement.Name%2A> defines the variable name for that element's data when its form is submitted to the server.\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> representing the element's name.\n  overload: System.Windows.Forms.HtmlElement.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElement.NextSibling\n  commentId: P:System.Windows.Forms.HtmlElement.NextSibling\n  id: NextSibling\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: NextSibling\n  nameWithType: HtmlElement.NextSibling\n  fullName: HtmlElement.NextSibling\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the next element at the same level as this element in the document tree.\n  remarks: Use <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> to walk the document tree for an HTML element.\n  syntax:\n    content: public System.Windows.Forms.HtmlElement NextSibling { get; }\n    return:\n      type: System.Windows.Forms.HtmlElement\n      description: An <xref href=\"System.Windows.Forms.HtmlElement\"></xref> representing the element to the right of the current element.\n  overload: System.Windows.Forms.HtmlElement.NextSibling*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.OffsetParent\n  commentId: P:System.Windows.Forms.HtmlElement.OffsetParent\n  id: OffsetParent\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: OffsetParent\n  nameWithType: HtmlElement.OffsetParent\n  fullName: HtmlElement.OffsetParent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the element from which <xref href=\"System.Windows.Forms.HtmlElement.OffsetRectangle\"></xref> is calculated.\n  remarks: \"Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.  \\n  \\n When a document's elements use relative or absolute positioning, you can use `OffsetParent` to calculate an element's coordinate position in the client area.  \\n  \\n For more information about element positioning in HTML, see [About Element Positioning](http://msdn.microsoft.com/library/ms533005.aspx).\"\n  example:\n  - \"The following code example shows how <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> and <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> differ for `span1`, `span2` and `span3`:  \\n  \\n```  \\n<HTML>  \\n    <BODY id=\\\"documentBody\\\">  \\n  \\n        <DIV id=\\\"div1\\\">  \\n            <SPAN id=\\\"span1\\\">Placeholder text 1.</SPAN>  \\n        </DIV>  \\n  \\n        <DIV id=\\\"div2\\\" style=\\\"position:relative;top:100px;left:100px;\\\">  \\n            <SPAN id=\\\"span2\\\">Placeholder text 2.</SPAN>  \\n        </DIV>  \\n  \\n        <DIV id=\\\"div3\\\" style=\\\"position:absolute;top:200px;left:200px;\\\">  \\n            <DIV id=\\\"div4\\\" style=\\\"position:relative;top:100px;left:100px;\\\">  \\n                <SPAN id=\\\"span3\\\">Placeholder text 3.</SPAN>  \\n            </DIV>  \\n        </DIV>  \\n  \\n    </BODY>  \\n</HTML>  \\n```  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#6)]\\n [!code-vb[System.Windows.Forms.HtmlElement#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#6)]\"\n  syntax:\n    content: public System.Windows.Forms.HtmlElement OffsetParent { get; }\n    return:\n      type: System.Windows.Forms.HtmlElement\n      description: \"The element from which the offsets are calculated.  \\n  \\n If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, `OffsetParent` will be the first relatively or absolutely positioned element in which the current element is nested. If none of the elements above the current element are absolutely or relatively positioned, `OffsetParent` will be the <code>BODY</code> tag of the document.\"\n  overload: System.Windows.Forms.HtmlElement.OffsetParent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.OffsetRectangle\n  commentId: P:System.Windows.Forms.HtmlElement.OffsetRectangle\n  id: OffsetRectangle\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: OffsetRectangle\n  nameWithType: HtmlElement.OffsetRectangle\n  fullName: HtmlElement.OffsetRectangle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the location of an element relative to its parent.\n  remarks: \"Elements can be positioned on an HTML page in one of three ways:  \\n  \\n-   Default flow positioning.  \\n  \\n-   Relative positioning, in which the element is offset by a fixed amount relative to its parent.  \\n  \\n-   Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.  \\n  \\n For more information about element positioning in HTML, see [About Element Positioning](http://msdn.microsoft.com/library/ms533005.aspx).\"\n  example:\n  - \"The following code example shows how <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> and <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> differ for `span1`, `span2` and `span3`:  \\n  \\n```  \\n<HTML>  \\n    <BODY id=\\\"documentBody\\\">  \\n  \\n        <DIV id=\\\"div1\\\">  \\n            <SPAN id=\\\"span1\\\">Placeholder text 1.</SPAN>  \\n        </DIV>  \\n  \\n        <DIV id=\\\"div2\\\" style=\\\"position:relative;top:100px;left:100px;\\\">  \\n            <SPAN id=\\\"span2\\\">Placeholder text 2.</SPAN>  \\n        </DIV>  \\n  \\n        <DIV id=\\\"div3\\\" style=\\\"position:absolute;top:200px;left:200px;\\\">  \\n            <DIV id=\\\"div4\\\" style=\\\"position:relative;top:100px;left:100px;\\\">  \\n                <SPAN id=\\\"span3\\\">Placeholder text 3.</SPAN>  \\n            </DIV>  \\n        </DIV>  \\n  \\n    </BODY>  \\n</HTML>  \\n```  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#6)]\\n [!code-vb[System.Windows.Forms.HtmlElement#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#6)]\"\n  syntax:\n    content: public System.Drawing.Rectangle OffsetRectangle { get; }\n    return:\n      type: System.Drawing.Rectangle\n      description: \"The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.  \\n  \\n If an element's parent is relatively or absolutely positioned, <xref href=\\\"System.Windows.Forms.HtmlElement.OffsetRectangle\\\"></xref> will return the offset of the parent element. If the element itself is relatively positioned with respect to its parent, <xref href=\\\"System.Windows.Forms.HtmlElement.OffsetRectangle\\\"></xref> will return the offset from its parent.\"\n  overload: System.Windows.Forms.HtmlElement.OffsetRectangle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  commentId: M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  id: op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: op_Equality(HtmlElement, HtmlElement)\n  nameWithType: HtmlElement.op_Equality(HtmlElement, HtmlElement)\n  fullName: HtmlElement.op_Equality(HtmlElement, HtmlElement)\n  type: Operator\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Compares two elements for equality.\n  remarks: \"The equality operator tests the `IUnknown` pointers of the underlying COM objects wrapped by the supplied <xref:System.Windows.Forms.HtmlElement> classes.  \\n  \\n The equivalent method for this operator is <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Equality (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);\n    parameters:\n    - id: left\n      type: System.Windows.Forms.HtmlElement\n      description: The first <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.\n    - id: right\n      type: System.Windows.Forms.HtmlElement\n      description: The second <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if both parameters are `null`, or if both elements have the same underlying COM interface; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElement.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  commentId: M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  id: op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: op_Inequality(HtmlElement, HtmlElement)\n  nameWithType: HtmlElement.op_Inequality(HtmlElement, HtmlElement)\n  fullName: HtmlElement.op_Inequality(HtmlElement, HtmlElement)\n  type: Operator\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Compares two <xref href=\"System.Windows.Forms.HtmlElement\"></xref> objects for inequality.\n  remarks: The equivalent method for this operator is the negation of <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);\n    parameters:\n    - id: left\n      type: System.Windows.Forms.HtmlElement\n      description: The first <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.\n    - id: right\n      type: System.Windows.Forms.HtmlElement\n      description: The second <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` is only one element is `null`, or the two objects are not equal; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElement.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.OuterHtml\n  commentId: P:System.Windows.Forms.HtmlElement.OuterHtml\n  id: OuterHtml\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: OuterHtml\n  nameWithType: HtmlElement.OuterHtml\n  fullName: HtmlElement.OuterHtml\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current element's HTML code.\n  remarks: \"Whereas <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return all HTML contained in the current element excluding the current element's surrounding tags, <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> includes the current element's tag as well as the HTML that tag contains, for example:  \\n  \\n `<HTML>`  \\n  \\n `<BODY>`  \\n  \\n `<DIV id=\\\"div1\\\">`  \\n  \\n `Hello`  \\n  \\n `<DIV id=\\\"div2\\\">`  \\n  \\n `World`  \\n  \\n `<DIV id=\\\"div3\\\">`  \\n  \\n `How are you?`  \\n  \\n `</DIV>`  \\n  \\n `</DIV>`  \\n  \\n `</DIV>`  \\n  \\n `</BODY>`  \\n  \\n `</HTML>`  \\n  \\n In this example, calling <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> on `div2` will return:  \\n  \\n `<DIV id=\\\"div2\\\">`  \\n  \\n `World`  \\n  \\n `<DIV id=\\\"div3\\\">`  \\n  \\n `How are you?`  \\n  \\n `</DIV>`  \\n  \\n `</DIV>`  \\n  \\n Calling <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return:  \\n  \\n `World`  \\n  \\n `<DIV id=\\\"div3\\\">`  \\n  \\n `How are you?`  \\n  \\n `</DIV>`  \\n  \\n If you assign a new value to <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.\"\n  syntax:\n    content: public string OuterHtml { get; set; }\n    return:\n      type: System.String\n      description: The HTML code for the current element and its children.\n  overload: System.Windows.Forms.HtmlElement.OuterHtml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.OuterText\n  commentId: P:System.Windows.Forms.HtmlElement.OuterText\n  id: OuterText\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: OuterText\n  nameWithType: HtmlElement.OuterText\n  fullName: HtmlElement.OuterText\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current element's text.\n  remarks: \"If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.OuterText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file. If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will return all of the text in that HTML with the markup removed.  \\n  \\n Assigning a value to <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will destroy any child elements that belong to the element.\"\n  syntax:\n    content: public string OuterText { get; set; }\n    return:\n      type: System.String\n      description: The text inside the current element, and in the element's children.\n  overload: System.Windows.Forms.HtmlElement.OuterText*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: You cannot set text outside of this element.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Parent\n  commentId: P:System.Windows.Forms.HtmlElement.Parent\n  id: Parent\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: HtmlElement.Parent\n  fullName: HtmlElement.Parent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the current element's parent element.\n  remarks: \"The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property enables discovery of an element's context. It is most useful inside of event handlers such as <xref:System.Windows.Forms.HtmlElement.Click>, which can fire for any element anywhere in the document's object hierarchy.  \\n  \\n The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property of the HTML element (the top of an HTML document) points back to itself. If you call <xref:System.Windows.Forms.HtmlElement.Parent%2A> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the `Parent` property, or else your code may execute an infinite loop.\"\n  example:\n  - \"The following code example finds all of the `IMG` tags in a document, and uses the <xref:System.Windows.Forms.HtmlElement.Parent%2A> property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#7)]\\n [!code-vb[System.Windows.Forms.HtmlElement#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#7)]\"\n  syntax:\n    content: public System.Windows.Forms.HtmlElement Parent { get; }\n    return:\n      type: System.Windows.Forms.HtmlElement\n      description: The element above the current element in the HTML document's hierarchy.\n  overload: System.Windows.Forms.HtmlElement.Parent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.RaiseEvent(System.String)\n  commentId: M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)\n  id: RaiseEvent(System.String)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: RaiseEvent(String)\n  nameWithType: HtmlElement.RaiseEvent(String)\n  fullName: HtmlElement.RaiseEvent(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Causes the named event to call all registered event handlers.\n  remarks: This method is used to access HTML Document Object Model (DOM) events. It directly calls the [IHTMLElement3::fireEvent](http://go.microsoft.com/fwlink/?LinkId=103189) method. For more information about how to use the DOM through the <xref:System.Windows.Forms.HtmlElement> class, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md).\n  syntax:\n    content: public void RaiseEvent (string eventName);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: The name of the event to raise.\n  overload: System.Windows.Forms.HtmlElement.RaiseEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.RemoveFocus\n  commentId: M:System.Windows.Forms.HtmlElement.RemoveFocus\n  id: RemoveFocus\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: RemoveFocus()\n  nameWithType: HtmlElement.RemoveFocus()\n  fullName: HtmlElement.RemoveFocus()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Removes focus from the current element, if that element has focus.\n  remarks: \"Calling this method raises the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for the element.  \\n  \\n When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.\"\n  syntax:\n    content: public void RemoveFocus ();\n    parameters: []\n  overload: System.Windows.Forms.HtmlElement.RemoveFocus*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)\n  commentId: M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)\n  id: ScrollIntoView(System.Boolean)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: ScrollIntoView(Boolean)\n  nameWithType: HtmlElement.ScrollIntoView(Boolean)\n  fullName: HtmlElement.ScrollIntoView(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.\n  remarks: ''\n  example:\n  - \"The following code example finds an element by name and scrolls through the page so that the top of the element is aligned with the top of the visible page.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#12)]\\n [!code-vb[System.Windows.Forms.HtmlElement#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#12)]\"\n  syntax:\n    content: public void ScrollIntoView (bool alignWithTop);\n    parameters:\n    - id: alignWithTop\n      type: System.Boolean\n      description: If `true`, the top of the object will be displayed at the top of the window. If `false`, the bottom of the object will be displayed at the bottom of the window.\n  overload: System.Windows.Forms.HtmlElement.ScrollIntoView*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElement.ScrollLeft\n  commentId: P:System.Windows.Forms.HtmlElement.ScrollLeft\n  id: ScrollLeft\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: ScrollLeft\n  nameWithType: HtmlElement.ScrollLeft\n  fullName: HtmlElement.ScrollLeft\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the distance between the edge of the element and the left edge of its content.\n  remarks: The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; `ScrollLeft` and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> are exposed independently because these are the only two properties of the scroll area that developers can set.\n  syntax:\n    content: public int ScrollLeft { get; set; }\n    return:\n      type: System.Int32\n      description: The distance, in pixels, between the left edge of the element and the left edge of its content.\n  overload: System.Windows.Forms.HtmlElement.ScrollLeft*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.ScrollRectangle\n  commentId: P:System.Windows.Forms.HtmlElement.ScrollRectangle\n  id: ScrollRectangle\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: ScrollRectangle\n  nameWithType: HtmlElement.ScrollRectangle\n  fullName: HtmlElement.ScrollRectangle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the dimensions of an element's scrollable region.\n  remarks: \"An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.  \\n  \\n You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element. Use the <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> properties to achieve this.\"\n  syntax:\n    content: public System.Drawing.Rectangle ScrollRectangle { get; }\n    return:\n      type: System.Drawing.Rectangle\n      description: The size and coordinate location of the scrollable area of an element.\n  overload: System.Windows.Forms.HtmlElement.ScrollRectangle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.ScrollTop\n  commentId: P:System.Windows.Forms.HtmlElement.ScrollTop\n  id: ScrollTop\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: ScrollTop\n  nameWithType: HtmlElement.ScrollTop\n  fullName: HtmlElement.ScrollTop\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the distance between the edge of the element and the top edge of its content.\n  remarks: The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and `ScrollTop` are exposed independently because these are the only two properties of the scroll area that developers can set.\n  syntax:\n    content: public int ScrollTop { get; set; }\n    return:\n      type: System.Int32\n      description: The distance, in pixels, between the top edge of the element and the top edge of its content.\n  overload: System.Windows.Forms.HtmlElement.ScrollTop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)\n  commentId: M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)\n  id: SetAttribute(System.String,System.String)\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: SetAttribute(String, String)\n  nameWithType: HtmlElement.SetAttribute(String, String)\n  fullName: HtmlElement.SetAttribute(String, String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the value of the named attribute on the element.\n  remarks: \"An attribute in HTML is any valid name-value pair for that element. <xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag. Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).  \\n  \\n If `attributeName` is not a defined attribute on an element, <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> will define it on the element as a new attribute.  \\n  \\n <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.  \\n  \\n To set the `class` attribute on an <xref:System.Windows.Forms.HtmlElement> , you must refer to the attribute as `className` when specifying the first argument to <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>\"\n  example:\n  - \"The following code example adds a new `IMG` element to the current document, using <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to set the `SRC` attribute for the image.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#13)]\\n [!code-vb[System.Windows.Forms.HtmlElement#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#13)]\"\n  syntax:\n    content: public void SetAttribute (string attributeName, string value);\n    parameters:\n    - id: attributeName\n      type: System.String\n      description: The name of the attribute to set.\n    - id: value\n      type: System.String\n      description: The new value of this attribute.\n  overload: System.Windows.Forms.HtmlElement.SetAttribute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.Style\n  commentId: P:System.Windows.Forms.HtmlElement.Style\n  id: Style\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: Style\n  nameWithType: HtmlElement.Style\n  fullName: HtmlElement.Style\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a semicolon-delimited list of styles for the current element.\n  remarks: \"The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element. Styles in the <xref:System.Windows.Forms.HtmlElement.Style%2A> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:  \\n  \\n `style-name1:value1;...;[style-nameN:valueN;]`  \\n  \\n To set the font for a `DIV` element to 14-point Times New Roman bold, for example, you would assign the following string:  \\n  \\n `font-face:Times New Roman;font-size:14px;font-weight:bold;`  \\n  \\n For a full list of all available styles in the HTML DOM, see [STYLE Attribute](http://msdn.microsoft.com/library/ms534651.aspx).\"\n  syntax:\n    content: public string Style { get; set; }\n    return:\n      type: System.String\n      description: A string consisting of all of the element's styles\n  overload: System.Windows.Forms.HtmlElement.Style*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElement.TabIndex\n  commentId: P:System.Windows.Forms.HtmlElement.TabIndex\n  id: TabIndex\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: TabIndex\n  nameWithType: HtmlElement.TabIndex\n  fullName: HtmlElement.TabIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the location of this element in the tab order.\n  remarks: \"<xref:System.Windows.Forms.HtmlElement.TabIndex%2A> determines which element in an HTML document will next receive focus when the user presses the TAB key. By default, the only elements included in the tab order are `INPUT` elements, the `SELECT` control, and any element whose `contentEditable` property is set to `true`. You can include any HTML element in the tab order, such as a `DIV`, by assigning it an explicit <xref:System.Windows.Forms.HtmlElement.TabIndex%2A>.  \\n  \\n Valid values for <xref:System.Windows.Forms.HtmlElement.TabIndex%2A> range from -32767 to 32767.\"\n  syntax:\n    content: public short TabIndex { get; set; }\n    return:\n      type: System.Int16\n      description: The numeric index of the element in the tab order.\n  overload: System.Windows.Forms.HtmlElement.TabIndex*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElement.TagName\n  commentId: P:System.Windows.Forms.HtmlElement.TagName\n  id: TagName\n  parent: System.Windows.Forms.HtmlElement\n  langs:\n  - csharp\n  name: TagName\n  nameWithType: HtmlElement.TagName\n  fullName: HtmlElement.TagName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the name of the HTML tag.\n  remarks: Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the `HREF` attribute on the `A` element, or the `Submit` method on `FORM`. Use <xref:System.Windows.Forms.HtmlElement.TagName%2A> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.\n  example:\n  - \"The following code example finds all of the `IMG` tags in a document, and uses the `TagName` property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElement#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#7)]\\n [!code-vb[System.Windows.Forms.HtmlElement#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#7)]\"\n  syntax:\n    content: public string TagName { get; }\n    return:\n      type: System.String\n      description: The name used to create this element using HTML markup.\n  overload: System.Windows.Forms.HtmlElement.TagName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Windows.Forms.HtmlElement.All\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: All\n  nameWithType: HtmlElement.All\n  fullName: HtmlElement.All\n- uid: System.Windows.Forms.HtmlElementCollection\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HtmlElementCollection\n  nameWithType: HtmlElementCollection\n  fullName: System.Windows.Forms.HtmlElementCollection\n- uid: System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: AppendChild(HtmlElement)\n  nameWithType: HtmlElement.AppendChild(HtmlElement)\n  fullName: HtmlElement.AppendChild(HtmlElement)\n- uid: System.Windows.Forms.HtmlElement\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HtmlElement\n  nameWithType: HtmlElement\n  fullName: System.Windows.Forms.HtmlElement\n- uid: System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: AttachEventHandler(String, EventHandler)\n  nameWithType: HtmlElement.AttachEventHandler(String, EventHandler)\n  fullName: HtmlElement.AttachEventHandler(String, EventHandler)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.HtmlElement.CanHaveChildren\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: CanHaveChildren\n  nameWithType: HtmlElement.CanHaveChildren\n  fullName: HtmlElement.CanHaveChildren\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.HtmlElement.Children\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Children\n  nameWithType: HtmlElement.Children\n  fullName: HtmlElement.Children\n- uid: System.Windows.Forms.HtmlElement.Click\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Click\n  nameWithType: HtmlElement.Click\n  fullName: HtmlElement.Click\n- uid: System.Windows.Forms.HtmlElementEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HtmlElementEventHandler\n  nameWithType: HtmlElementEventHandler\n  fullName: System.Windows.Forms.HtmlElementEventHandler\n- uid: System.Windows.Forms.HtmlElement.ClientRectangle\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ClientRectangle\n  nameWithType: HtmlElement.ClientRectangle\n  fullName: HtmlElement.ClientRectangle\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: DetachEventHandler(String, EventHandler)\n  nameWithType: HtmlElement.DetachEventHandler(String, EventHandler)\n  fullName: HtmlElement.DetachEventHandler(String, EventHandler)\n- uid: System.Windows.Forms.HtmlElement.Document\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Document\n  nameWithType: HtmlElement.Document\n  fullName: HtmlElement.Document\n- uid: System.Windows.Forms.HtmlDocument\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HtmlDocument\n  nameWithType: HtmlDocument\n  fullName: System.Windows.Forms.HtmlDocument\n- uid: System.Windows.Forms.HtmlElement.DomElement\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: DomElement\n  nameWithType: HtmlElement.DomElement\n  fullName: HtmlElement.DomElement\n- uid: System.Windows.Forms.HtmlElement.DoubleClick\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: DoubleClick\n  nameWithType: HtmlElement.DoubleClick\n  fullName: HtmlElement.DoubleClick\n- uid: System.Windows.Forms.HtmlElement.Drag\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Drag\n  nameWithType: HtmlElement.Drag\n  fullName: HtmlElement.Drag\n- uid: System.Windows.Forms.HtmlElement.DragEnd\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: DragEnd\n  nameWithType: HtmlElement.DragEnd\n  fullName: HtmlElement.DragEnd\n- uid: System.Windows.Forms.HtmlElement.DragLeave\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: DragLeave\n  nameWithType: HtmlElement.DragLeave\n  fullName: HtmlElement.DragLeave\n- uid: System.Windows.Forms.HtmlElement.DragOver\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: DragOver\n  nameWithType: HtmlElement.DragOver\n  fullName: HtmlElement.DragOver\n- uid: System.Windows.Forms.HtmlElement.Enabled\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Enabled\n  nameWithType: HtmlElement.Enabled\n  fullName: HtmlElement.Enabled\n- uid: System.Windows.Forms.HtmlElement.Equals(System.Object)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: HtmlElement.Equals(Object)\n  fullName: HtmlElement.Equals(Object)\n- uid: System.Windows.Forms.HtmlElement.FirstChild\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: FirstChild\n  nameWithType: HtmlElement.FirstChild\n  fullName: HtmlElement.FirstChild\n- uid: System.Windows.Forms.HtmlElement.Focus\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Focus()\n  nameWithType: HtmlElement.Focus()\n  fullName: HtmlElement.Focus()\n- uid: System.Windows.Forms.HtmlElement.Focusing\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Focusing\n  nameWithType: HtmlElement.Focusing\n  fullName: HtmlElement.Focusing\n- uid: System.Windows.Forms.HtmlElement.GetAttribute(System.String)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: GetAttribute(String)\n  nameWithType: HtmlElement.GetAttribute(String)\n  fullName: HtmlElement.GetAttribute(String)\n- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: GetElementsByTagName(String)\n  nameWithType: HtmlElement.GetElementsByTagName(String)\n  fullName: HtmlElement.GetElementsByTagName(String)\n- uid: System.Windows.Forms.HtmlElement.GetHashCode\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: HtmlElement.GetHashCode()\n  fullName: HtmlElement.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.HtmlElement.GotFocus\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: GotFocus\n  nameWithType: HtmlElement.GotFocus\n  fullName: HtmlElement.GotFocus\n- uid: System.Windows.Forms.HtmlElement.Id\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Id\n  nameWithType: HtmlElement.Id\n  fullName: HtmlElement.Id\n- uid: System.Windows.Forms.HtmlElement.InnerHtml\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InnerHtml\n  nameWithType: HtmlElement.InnerHtml\n  fullName: HtmlElement.InnerHtml\n- uid: System.Windows.Forms.HtmlElement.InnerText\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InnerText\n  nameWithType: HtmlElement.InnerText\n  fullName: HtmlElement.InnerText\n- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InsertAdjacentElement(HtmlElementInsertionOrientation, HtmlElement)\n  nameWithType: HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation, HtmlElement)\n  fullName: HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation, HtmlElement)\n- uid: System.Windows.Forms.HtmlElementInsertionOrientation\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HtmlElementInsertionOrientation\n  nameWithType: HtmlElementInsertionOrientation\n  fullName: System.Windows.Forms.HtmlElementInsertionOrientation\n- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InvokeMember(String, Object[])\n  nameWithType: HtmlElement.InvokeMember(String, Object[])\n  fullName: HtmlElement.InvokeMember(String, Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InvokeMember(String)\n  nameWithType: HtmlElement.InvokeMember(String)\n  fullName: HtmlElement.InvokeMember(String)\n- uid: System.Windows.Forms.HtmlElement.KeyDown\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: KeyDown\n  nameWithType: HtmlElement.KeyDown\n  fullName: HtmlElement.KeyDown\n- uid: System.Windows.Forms.HtmlElement.KeyPress\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: KeyPress\n  nameWithType: HtmlElement.KeyPress\n  fullName: HtmlElement.KeyPress\n- uid: System.Windows.Forms.HtmlElement.KeyUp\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: KeyUp\n  nameWithType: HtmlElement.KeyUp\n  fullName: HtmlElement.KeyUp\n- uid: System.Windows.Forms.HtmlElement.LosingFocus\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: LosingFocus\n  nameWithType: HtmlElement.LosingFocus\n  fullName: HtmlElement.LosingFocus\n- uid: System.Windows.Forms.HtmlElement.LostFocus\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: LostFocus\n  nameWithType: HtmlElement.LostFocus\n  fullName: HtmlElement.LostFocus\n- uid: System.Windows.Forms.HtmlElement.MouseDown\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: MouseDown\n  nameWithType: HtmlElement.MouseDown\n  fullName: HtmlElement.MouseDown\n- uid: System.Windows.Forms.HtmlElement.MouseEnter\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: MouseEnter\n  nameWithType: HtmlElement.MouseEnter\n  fullName: HtmlElement.MouseEnter\n- uid: System.Windows.Forms.HtmlElement.MouseLeave\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: MouseLeave\n  nameWithType: HtmlElement.MouseLeave\n  fullName: HtmlElement.MouseLeave\n- uid: System.Windows.Forms.HtmlElement.MouseMove\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: MouseMove\n  nameWithType: HtmlElement.MouseMove\n  fullName: HtmlElement.MouseMove\n- uid: System.Windows.Forms.HtmlElement.MouseOver\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: MouseOver\n  nameWithType: HtmlElement.MouseOver\n  fullName: HtmlElement.MouseOver\n- uid: System.Windows.Forms.HtmlElement.MouseUp\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: MouseUp\n  nameWithType: HtmlElement.MouseUp\n  fullName: HtmlElement.MouseUp\n- uid: System.Windows.Forms.HtmlElement.Name\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Name\n  nameWithType: HtmlElement.Name\n  fullName: HtmlElement.Name\n- uid: System.Windows.Forms.HtmlElement.NextSibling\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: NextSibling\n  nameWithType: HtmlElement.NextSibling\n  fullName: HtmlElement.NextSibling\n- uid: System.Windows.Forms.HtmlElement.OffsetParent\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: OffsetParent\n  nameWithType: HtmlElement.OffsetParent\n  fullName: HtmlElement.OffsetParent\n- uid: System.Windows.Forms.HtmlElement.OffsetRectangle\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: OffsetRectangle\n  nameWithType: HtmlElement.OffsetRectangle\n  fullName: HtmlElement.OffsetRectangle\n- uid: System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: op_Equality(HtmlElement, HtmlElement)\n  nameWithType: HtmlElement.op_Equality(HtmlElement, HtmlElement)\n  fullName: HtmlElement.op_Equality(HtmlElement, HtmlElement)\n- uid: System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: op_Inequality(HtmlElement, HtmlElement)\n  nameWithType: HtmlElement.op_Inequality(HtmlElement, HtmlElement)\n  fullName: HtmlElement.op_Inequality(HtmlElement, HtmlElement)\n- uid: System.Windows.Forms.HtmlElement.OuterHtml\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: OuterHtml\n  nameWithType: HtmlElement.OuterHtml\n  fullName: HtmlElement.OuterHtml\n- uid: System.Windows.Forms.HtmlElement.OuterText\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: OuterText\n  nameWithType: HtmlElement.OuterText\n  fullName: HtmlElement.OuterText\n- uid: System.Windows.Forms.HtmlElement.Parent\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Parent\n  nameWithType: HtmlElement.Parent\n  fullName: HtmlElement.Parent\n- uid: System.Windows.Forms.HtmlElement.RaiseEvent(System.String)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: RaiseEvent(String)\n  nameWithType: HtmlElement.RaiseEvent(String)\n  fullName: HtmlElement.RaiseEvent(String)\n- uid: System.Windows.Forms.HtmlElement.RemoveFocus\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: RemoveFocus()\n  nameWithType: HtmlElement.RemoveFocus()\n  fullName: HtmlElement.RemoveFocus()\n- uid: System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ScrollIntoView(Boolean)\n  nameWithType: HtmlElement.ScrollIntoView(Boolean)\n  fullName: HtmlElement.ScrollIntoView(Boolean)\n- uid: System.Windows.Forms.HtmlElement.ScrollLeft\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ScrollLeft\n  nameWithType: HtmlElement.ScrollLeft\n  fullName: HtmlElement.ScrollLeft\n- uid: System.Windows.Forms.HtmlElement.ScrollRectangle\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ScrollRectangle\n  nameWithType: HtmlElement.ScrollRectangle\n  fullName: HtmlElement.ScrollRectangle\n- uid: System.Windows.Forms.HtmlElement.ScrollTop\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ScrollTop\n  nameWithType: HtmlElement.ScrollTop\n  fullName: HtmlElement.ScrollTop\n- uid: System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: SetAttribute(String, String)\n  nameWithType: HtmlElement.SetAttribute(String, String)\n  fullName: HtmlElement.SetAttribute(String, String)\n- uid: System.Windows.Forms.HtmlElement.Style\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Style\n  nameWithType: HtmlElement.Style\n  fullName: HtmlElement.Style\n- uid: System.Windows.Forms.HtmlElement.TabIndex\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: TabIndex\n  nameWithType: HtmlElement.TabIndex\n  fullName: HtmlElement.TabIndex\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Windows.Forms.HtmlElement.TagName\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: TagName\n  nameWithType: HtmlElement.TagName\n  fullName: HtmlElement.TagName\n- uid: System.Windows.Forms.HtmlElement.All*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: All\n  nameWithType: HtmlElement.All\n  fullName: HtmlElement.All\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.AppendChild*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: AppendChild\n  nameWithType: HtmlElement.AppendChild\n  fullName: HtmlElement.AppendChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.AttachEventHandler*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: AttachEventHandler\n  nameWithType: HtmlElement.AttachEventHandler\n  fullName: HtmlElement.AttachEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.CanHaveChildren*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: CanHaveChildren\n  nameWithType: HtmlElement.CanHaveChildren\n  fullName: HtmlElement.CanHaveChildren\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Children*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Children\n  nameWithType: HtmlElement.Children\n  fullName: HtmlElement.Children\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.ClientRectangle*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ClientRectangle\n  nameWithType: HtmlElement.ClientRectangle\n  fullName: HtmlElement.ClientRectangle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.DetachEventHandler*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: DetachEventHandler\n  nameWithType: HtmlElement.DetachEventHandler\n  fullName: HtmlElement.DetachEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Document*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Document\n  nameWithType: HtmlElement.Document\n  fullName: HtmlElement.Document\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.DomElement*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: DomElement\n  nameWithType: HtmlElement.DomElement\n  fullName: HtmlElement.DomElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Enabled*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Enabled\n  nameWithType: HtmlElement.Enabled\n  fullName: HtmlElement.Enabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Equals*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Equals\n  nameWithType: HtmlElement.Equals\n  fullName: HtmlElement.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.FirstChild*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: FirstChild\n  nameWithType: HtmlElement.FirstChild\n  fullName: HtmlElement.FirstChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Focus*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Focus\n  nameWithType: HtmlElement.Focus\n  fullName: HtmlElement.Focus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.GetAttribute*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: GetAttribute\n  nameWithType: HtmlElement.GetAttribute\n  fullName: HtmlElement.GetAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: GetElementsByTagName\n  nameWithType: HtmlElement.GetElementsByTagName\n  fullName: HtmlElement.GetElementsByTagName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.GetHashCode*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: GetHashCode\n  nameWithType: HtmlElement.GetHashCode\n  fullName: HtmlElement.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Id*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Id\n  nameWithType: HtmlElement.Id\n  fullName: HtmlElement.Id\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.InnerHtml*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InnerHtml\n  nameWithType: HtmlElement.InnerHtml\n  fullName: HtmlElement.InnerHtml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.InnerText*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InnerText\n  nameWithType: HtmlElement.InnerText\n  fullName: HtmlElement.InnerText\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InsertAdjacentElement\n  nameWithType: HtmlElement.InsertAdjacentElement\n  fullName: HtmlElement.InsertAdjacentElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.InvokeMember*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: InvokeMember\n  nameWithType: HtmlElement.InvokeMember\n  fullName: HtmlElement.InvokeMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Name*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Name\n  nameWithType: HtmlElement.Name\n  fullName: HtmlElement.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.NextSibling*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: NextSibling\n  nameWithType: HtmlElement.NextSibling\n  fullName: HtmlElement.NextSibling\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.OffsetParent*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: OffsetParent\n  nameWithType: HtmlElement.OffsetParent\n  fullName: HtmlElement.OffsetParent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.OffsetRectangle*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: OffsetRectangle\n  nameWithType: HtmlElement.OffsetRectangle\n  fullName: HtmlElement.OffsetRectangle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.op_Equality*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: op_Equality\n  nameWithType: HtmlElement.op_Equality\n  fullName: HtmlElement.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.op_Inequality*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: op_Inequality\n  nameWithType: HtmlElement.op_Inequality\n  fullName: HtmlElement.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.OuterHtml*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: OuterHtml\n  nameWithType: HtmlElement.OuterHtml\n  fullName: HtmlElement.OuterHtml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.OuterText*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: OuterText\n  nameWithType: HtmlElement.OuterText\n  fullName: HtmlElement.OuterText\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Parent*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Parent\n  nameWithType: HtmlElement.Parent\n  fullName: HtmlElement.Parent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.RaiseEvent*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: RaiseEvent\n  nameWithType: HtmlElement.RaiseEvent\n  fullName: HtmlElement.RaiseEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.RemoveFocus*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: RemoveFocus\n  nameWithType: HtmlElement.RemoveFocus\n  fullName: HtmlElement.RemoveFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.ScrollIntoView*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ScrollIntoView\n  nameWithType: HtmlElement.ScrollIntoView\n  fullName: HtmlElement.ScrollIntoView\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.ScrollLeft*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ScrollLeft\n  nameWithType: HtmlElement.ScrollLeft\n  fullName: HtmlElement.ScrollLeft\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.ScrollRectangle*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ScrollRectangle\n  nameWithType: HtmlElement.ScrollRectangle\n  fullName: HtmlElement.ScrollRectangle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.ScrollTop*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: ScrollTop\n  nameWithType: HtmlElement.ScrollTop\n  fullName: HtmlElement.ScrollTop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.SetAttribute*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: SetAttribute\n  nameWithType: HtmlElement.SetAttribute\n  fullName: HtmlElement.SetAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.Style*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: Style\n  nameWithType: HtmlElement.Style\n  fullName: HtmlElement.Style\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.TabIndex*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: TabIndex\n  nameWithType: HtmlElement.TabIndex\n  fullName: HtmlElement.TabIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Windows.Forms.HtmlElement.TagName*\n  parent: System.Windows.Forms.HtmlElement\n  isExternal: false\n  name: TagName\n  nameWithType: HtmlElement.TagName\n  fullName: HtmlElement.TagName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElement.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}