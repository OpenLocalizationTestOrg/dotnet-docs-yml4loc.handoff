{"nodes":[{"content":"Correlates traces that are part of a logical transaction.","nodes":[{"pos":[0,57],"content":"Correlates traces that are part of a logical transaction.","nodes":[{"content":"Correlates traces that are part of a logical transaction.","pos":[0,57]}]}],"pos":[759,817],"yaml":true},{"content":"Traces generated from a single logical operation can be tagged with an operation-unique identity, in order to distinguish them from traces from a different logical operation. For example, it may be useful to group correlated traces by ASP.NET request. The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.  \n  \n Logical operations can also be nested. The <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property exposes the stack of nested logical operation identities. Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity off the stack.  \n  \n> [!NOTE]\n>  Logical operation identities are objects, allowing the use of a type for a logical operation identity.","nodes":[{"pos":[0,481],"content":"Traces generated from a single logical operation can be tagged with an operation-unique identity, in order to distinguish them from traces from a different logical operation. For example, it may be useful to group correlated traces by ASP.NET request. The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.","nodes":[{"content":"Traces generated from a single logical operation can be tagged with an operation-unique identity, in order to distinguish them from traces from a different logical operation. For example, it may be useful to group correlated traces by ASP.NET request. The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.","pos":[0,481],"nodes":[{"content":"Traces generated from a single logical operation can be tagged with an operation-unique identity, in order to distinguish them from traces from a different logical operation.","pos":[0,174]},{"content":"For example, it may be useful to group correlated traces by ASP.NET request.","pos":[175,251]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.","pos":[252,481],"source":" The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity."}]}]},{"pos":[488,959],"content":"Logical operations can also be nested. The <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property exposes the stack of nested logical operation identities. Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity off the stack.","nodes":[{"content":"Logical operations can also be nested. The <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property exposes the stack of nested logical operation identities. Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity off the stack.","pos":[0,471],"nodes":[{"content":"Logical operations can also be nested.","pos":[0,38]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A&gt;</ph> property exposes the stack of nested logical operation identities.","pos":[39,179],"source":" The <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property exposes the stack of nested logical operation identities."},{"content":"Each call to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A&gt;</ph> method pushes a new logical operation identity onto the stack.","pos":[180,329],"source":" Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack."},{"content":"Each call to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A&gt;</ph> method pops a logical operation identity off the stack.","pos":[330,471],"source":" Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity off the stack."}]}]},{"pos":[967,1080],"content":"[!NOTE]\n Logical operation identities are objects, allowing the use of a type for a logical operation identity.","leadings":["","> "],"nodes":[{"content":"Logical operation identities are objects, allowing the use of a type for a logical operation identity.","pos":[9,111]}]}],"pos":[828,1916],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the identity for a global activity.","nodes":[{"pos":[0,48],"content":"Gets or sets the identity for a global activity.","nodes":[{"content":"Gets or sets the identity for a global activity.","pos":[0,48]}]}],"pos":[4332,4381],"yaml":true},{"content":"The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property gets and sets the global activity identity in the <xref:System.Runtime.Remoting.Messaging.CallContext> for the thread. The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> is used for trace transfer operations in trace listeners that override the <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method, such as the <xref:System.Diagnostics.XmlWriterTraceListener> class.","nodes":[{"pos":[0,461],"content":"The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property gets and sets the global activity identity in the <xref:System.Runtime.Remoting.Messaging.CallContext> for the thread. The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> is used for trace transfer operations in trace listeners that override the <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method, such as the <xref:System.Diagnostics.XmlWriterTraceListener> class.","nodes":[{"content":"The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property gets and sets the global activity identity in the <xref:System.Runtime.Remoting.Messaging.CallContext> for the thread. The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> is used for trace transfer operations in trace listeners that override the <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method, such as the <xref:System.Diagnostics.XmlWriterTraceListener> class.","pos":[0,461],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager.ActivityId%2A&gt;</ph> property gets and sets the global activity identity in the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Messaging.CallContext&gt;</ph> for the thread.","pos":[0,190],"source":"The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property gets and sets the global activity identity in the <xref:System.Runtime.Remoting.Messaging.CallContext> for the thread."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager.ActivityId%2A&gt;</ph> is used for trace transfer operations in trace listeners that override the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph> method, such as the <ph id=\"ph3\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> class.","pos":[191,461],"source":" The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> is used for trace transfer operations in trace listeners that override the <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method, such as the <xref:System.Diagnostics.XmlWriterTraceListener> class."}]}]}],"pos":[4392,4854],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Guid\"></xref> structure that identifies the global activity.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> structure that identifies the global activity.","source":"A <xref href=\"System.Guid\"></xref> structure that identifies the global activity."}],"pos":[4969,5051],"yaml":true},{"content":"Gets the logical operation stack from the call context.","nodes":[{"pos":[0,55],"content":"Gets the logical operation stack from the call context.","nodes":[{"content":"Gets the logical operation stack from the call context.","pos":[0,55]}]}],"pos":[6375,6431],"yaml":true},{"content":"Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property's stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack.","nodes":[{"pos":[0,373],"content":"Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property's stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack.","nodes":[{"content":"Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property's stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack.","pos":[0,373],"nodes":[{"content":"Each call to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A&gt;</ph> method pushes a new logical operation identity onto the <ph id=\"ph2\">&lt;xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A&gt;</ph> property's stack.","pos":[0,230],"source":"Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property's stack."},{"content":"Each call to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A&gt;</ph> method pops a logical operation identity from the stack.","pos":[231,373],"source":" Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack."}]}]}],"pos":[6442,6816],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.Stack\"></xref> object that represents the logical operation stack for the call context.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Stack\"&gt;&lt;/xref&gt;</ph> object that represents the logical operation stack for the call context.","source":"A <xref href=\"System.Collections.Stack\"></xref> object that represents the logical operation stack for the call context."}],"pos":[6970,7091],"yaml":true},{"content":"Starts a logical operation on a thread.","nodes":[{"pos":[0,39],"content":"Starts a logical operation on a thread.","nodes":[{"content":"Starts a logical operation on a thread.","pos":[0,39]}]}],"pos":[8430,8470],"yaml":true},{"content":"The logical operation is started using an automatically generated GUID for a logical operation identifier.","nodes":[{"pos":[0,106],"content":"The logical operation is started using an automatically generated GUID for a logical operation identifier.","nodes":[{"content":"The logical operation is started using an automatically generated GUID for a logical operation identifier.","pos":[0,106]}]}],"pos":[8481,8588],"yaml":true,"extradata":"MT"},{"content":"Starts a logical operation with the specified identity on a thread.","nodes":[{"pos":[0,67],"content":"Starts a logical operation with the specified identity on a thread.","nodes":[{"content":"Starts a logical operation with the specified identity on a thread.","pos":[0,67]}]}],"pos":[10070,10138],"yaml":true},{"content":"The `operationId` parameter can be any object, such as a <xref:System.String> that allows the operation to be identified for tracing purposes. The object represented by `operationId` is added to the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property.","nodes":[{"pos":[0,278],"content":"The `operationId` parameter can be any object, such as a <xref:System.String> that allows the operation to be identified for tracing purposes. The object represented by `operationId` is added to the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">`operationId`</ph> parameter can be any object, such as a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> that allows the operation to be identified for tracing purposes.","pos":[0,142],"source":"The `operationId` parameter can be any object, such as a <xref:System.String> that allows the operation to be identified for tracing purposes."},{"content":"The object represented by <ph id=\"ph1\">`operationId`</ph> is added to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A&gt;</ph> property.","pos":[143,278],"source":" The object represented by `operationId` is added to the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property."}]}],"pos":[10149,10428],"yaml":true,"extradata":"MT"},{"content":"An object identifying the operation.","nodes":[{"pos":[0,36],"content":"An object identifying the operation.","nodes":[{"content":"An object identifying the operation.","pos":[0,36]}]}],"pos":[11252,11289],"yaml":true},{"content":"The <code>operationId</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">operationId</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>operationId</code> parameter is `null`."}],"pos":[11478,11528],"yaml":true},{"content":"Stops the current logical operation.","nodes":[{"pos":[0,36],"content":"Stops the current logical operation.","nodes":[{"content":"Stops the current logical operation.","pos":[0,36]}]}],"pos":[12771,12808],"yaml":true},{"content":"The logical operation is halted and the logical operation identity is removed from the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property.","nodes":[{"pos":[0,166],"content":"The logical operation is halted and the logical operation identity is removed from the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property.","nodes":[{"content":"The logical operation is halted and the logical operation identity is removed from the <ph id=\"ph1\">&lt;xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A&gt;</ph> property.","pos":[0,166],"source":"The logical operation is halted and the logical operation identity is removed from the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property."}]}],"pos":[12819,12986],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Diagnostics.CorrelationManager.LogicalOperationStack\"></xref> property is an empty stack.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CorrelationManager.LogicalOperationStack\"&gt;&lt;/xref&gt;</ph> property is an empty stack.","source":"The <xref href=\"System.Diagnostics.CorrelationManager.LogicalOperationStack\"></xref> property is an empty stack."}],"pos":[13261,13374],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.CorrelationManager\n  commentId: T:System.Diagnostics.CorrelationManager\n  id: CorrelationManager\n  children:\n  - System.Diagnostics.CorrelationManager.ActivityId\n  - System.Diagnostics.CorrelationManager.LogicalOperationStack\n  - System.Diagnostics.CorrelationManager.StartLogicalOperation\n  - System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)\n  - System.Diagnostics.CorrelationManager.StopLogicalOperation\n  langs:\n  - csharp\n  name: CorrelationManager\n  nameWithType: CorrelationManager\n  fullName: System.Diagnostics.CorrelationManager\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: Correlates traces that are part of a logical transaction.\n  remarks: \"Traces generated from a single logical operation can be tagged with an operation-unique identity, in order to distinguish them from traces from a different logical operation. For example, it may be useful to group correlated traces by ASP.NET request. The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.  \\n  \\n Logical operations can also be nested. The <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property exposes the stack of nested logical operation identities. Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity off the stack.  \\n  \\n> [!NOTE]\\n>  Logical operation identities are objects, allowing the use of a type for a logical operation identity.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Diagnostics.CorrelationManager> class by identifying the logical operation associated with a traced event. Two logical operations are started, one in the main thread and the other in a worker thread. An error event is logged in both logical operations.  \\n  \\n [!code-cpp[System.Diagnostics.CorrelationManager#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cpp/correlationmanager.cpp#1)]\\n [!code-csharp[System.Diagnostics.CorrelationManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cs/program.cs#1)]\\n [!code-vb[System.Diagnostics.CorrelationManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/vb/module1.vb#1)]\"\n  syntax:\n    content: public class CorrelationManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CorrelationManager.ActivityId\n  commentId: P:System.Diagnostics.CorrelationManager.ActivityId\n  id: ActivityId\n  parent: System.Diagnostics.CorrelationManager\n  langs:\n  - csharp\n  name: ActivityId\n  nameWithType: CorrelationManager.ActivityId\n  fullName: CorrelationManager.ActivityId\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: Gets or sets the identity for a global activity.\n  remarks: The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property gets and sets the global activity identity in the <xref:System.Runtime.Remoting.Messaging.CallContext> for the thread. The <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> is used for trace transfer operations in trace listeners that override the <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method, such as the <xref:System.Diagnostics.XmlWriterTraceListener> class.\n  syntax:\n    content: public Guid ActivityId { get; set; }\n    return:\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> structure that identifies the global activity.\n  overload: System.Diagnostics.CorrelationManager.ActivityId*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CorrelationManager.LogicalOperationStack\n  commentId: P:System.Diagnostics.CorrelationManager.LogicalOperationStack\n  id: LogicalOperationStack\n  parent: System.Diagnostics.CorrelationManager\n  langs:\n  - csharp\n  name: LogicalOperationStack\n  nameWithType: CorrelationManager.LogicalOperationStack\n  fullName: CorrelationManager.LogicalOperationStack\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: Gets the logical operation stack from the call context.\n  remarks: Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property's stack. Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack.\n  syntax:\n    content: public System.Collections.Stack LogicalOperationStack { get; }\n    return:\n      type: System.Collections.Stack\n      description: A <xref href=\"System.Collections.Stack\"></xref> object that represents the logical operation stack for the call context.\n  overload: System.Diagnostics.CorrelationManager.LogicalOperationStack*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation\n  commentId: M:System.Diagnostics.CorrelationManager.StartLogicalOperation\n  id: StartLogicalOperation\n  parent: System.Diagnostics.CorrelationManager\n  langs:\n  - csharp\n  name: StartLogicalOperation()\n  nameWithType: CorrelationManager.StartLogicalOperation()\n  fullName: CorrelationManager.StartLogicalOperation()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: Starts a logical operation on a thread.\n  remarks: The logical operation is started using an automatically generated GUID for a logical operation identifier.\n  syntax:\n    content: public void StartLogicalOperation ();\n    parameters: []\n  overload: System.Diagnostics.CorrelationManager.StartLogicalOperation*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)\n  commentId: M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)\n  id: StartLogicalOperation(System.Object)\n  parent: System.Diagnostics.CorrelationManager\n  langs:\n  - csharp\n  name: StartLogicalOperation(Object)\n  nameWithType: CorrelationManager.StartLogicalOperation(Object)\n  fullName: CorrelationManager.StartLogicalOperation(Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: Starts a logical operation with the specified identity on a thread.\n  remarks: The `operationId` parameter can be any object, such as a <xref:System.String> that allows the operation to be identified for tracing purposes. The object represented by `operationId` is added to the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%28System.Object%29> method by initializing a logical operation to be associated with the main thread. For the complete code example, see the <xref:System.Diagnostics.CorrelationManager> class.  \\n  \\n [!code-csharp[System.Diagnostics.CorrelationManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/cs/program.cs#2)]\\n [!code-vb[System.Diagnostics.CorrelationManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.CorrelationManager/vb/module1.vb#2)]\"\n  syntax:\n    content: public void StartLogicalOperation (object operationId);\n    parameters:\n    - id: operationId\n      type: System.Object\n      description: An object identifying the operation.\n  overload: System.Diagnostics.CorrelationManager.StartLogicalOperation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>operationId</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CorrelationManager.StopLogicalOperation\n  commentId: M:System.Diagnostics.CorrelationManager.StopLogicalOperation\n  id: StopLogicalOperation\n  parent: System.Diagnostics.CorrelationManager\n  langs:\n  - csharp\n  name: StopLogicalOperation()\n  nameWithType: CorrelationManager.StopLogicalOperation()\n  fullName: CorrelationManager.StopLogicalOperation()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: Stops the current logical operation.\n  remarks: The logical operation is halted and the logical operation identity is removed from the <xref:System.Diagnostics.CorrelationManager.LogicalOperationStack%2A> property.\n  syntax:\n    content: public void StopLogicalOperation ();\n    parameters: []\n  overload: System.Diagnostics.CorrelationManager.StopLogicalOperation*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Diagnostics.CorrelationManager.LogicalOperationStack\"></xref> property is an empty stack.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Diagnostics.CorrelationManager.ActivityId\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: ActivityId\n  nameWithType: CorrelationManager.ActivityId\n  fullName: CorrelationManager.ActivityId\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.CorrelationManager.LogicalOperationStack\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: LogicalOperationStack\n  nameWithType: CorrelationManager.LogicalOperationStack\n  fullName: CorrelationManager.LogicalOperationStack\n- uid: System.Collections.Stack\n  parent: System.Collections\n  isExternal: false\n  name: Stack\n  nameWithType: Stack\n  fullName: System.Collections.Stack\n- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: StartLogicalOperation()\n  nameWithType: CorrelationManager.StartLogicalOperation()\n  fullName: CorrelationManager.StartLogicalOperation()\n- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: StartLogicalOperation(Object)\n  nameWithType: CorrelationManager.StartLogicalOperation(Object)\n  fullName: CorrelationManager.StartLogicalOperation(Object)\n- uid: System.Diagnostics.CorrelationManager.StopLogicalOperation\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: StopLogicalOperation()\n  nameWithType: CorrelationManager.StopLogicalOperation()\n  fullName: CorrelationManager.StopLogicalOperation()\n- uid: System.Diagnostics.CorrelationManager.ActivityId*\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: ActivityId\n  nameWithType: CorrelationManager.ActivityId\n  fullName: CorrelationManager.ActivityId\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n- uid: System.Diagnostics.CorrelationManager.LogicalOperationStack*\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: LogicalOperationStack\n  nameWithType: CorrelationManager.LogicalOperationStack\n  fullName: CorrelationManager.LogicalOperationStack\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n- uid: System.Diagnostics.CorrelationManager.StartLogicalOperation*\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: StartLogicalOperation\n  nameWithType: CorrelationManager.StartLogicalOperation\n  fullName: CorrelationManager.StartLogicalOperation\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n- uid: System.Diagnostics.CorrelationManager.StopLogicalOperation*\n  parent: System.Diagnostics.CorrelationManager\n  isExternal: false\n  name: StopLogicalOperation\n  nameWithType: CorrelationManager.StopLogicalOperation\n  fullName: CorrelationManager.StopLogicalOperation\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CorrelationManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}