{"nodes":[{"content":"An abstract base class that represents a cache for nonces.","nodes":[{"pos":[0,58],"content":"An abstract base class that represents a cache for nonces.","nodes":[{"content":"An abstract base class that represents a cache for nonces.","pos":[0,58]}]}],"pos":[695,754],"yaml":true},{"content":"Called from constructors in derived classes to initialize the <xref href=\"System.ServiceModel.Security.NonceCache\"></xref> class.","nodes":[{"pos":[0,129],"content":"Called from constructors in derived classes to initialize the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.NonceCache\"&gt;&lt;/xref&gt;</ph> class.","source":"Called from constructors in derived classes to initialize the <xref href=\"System.ServiceModel.Security.NonceCache\"></xref> class."}],"pos":[2080,2210],"yaml":true},{"content":"Gets or sets the maximum size of the cache specified as the number of nonces that the cache can contain.","nodes":[{"pos":[0,104],"content":"Gets or sets the maximum size of the cache specified as the number of nonces that the cache can contain.","nodes":[{"content":"Gets or sets the maximum size of the cache specified as the number of nonces that the cache can contain.","pos":[0,104]}]}],"pos":[3277,3382],"yaml":true},{"content":"The maximum size of the cache specified as the number of nonces that the cache can contain.","nodes":[{"pos":[0,91],"content":"The maximum size of the cache specified as the number of nonces that the cache can contain.","nodes":[{"content":"The maximum size of the cache specified as the number of nonces that the cache can contain.","pos":[0,91]}]}],"pos":[3496,3588],"yaml":true},{"content":"An attempt to set a value that is less than zero occurs.","nodes":[{"pos":[0,56],"content":"An attempt to set a value that is less than zero occurs.","nodes":[{"content":"An attempt to set a value that is less than zero occurs.","pos":[0,56]}]}],"pos":[3779,3836],"yaml":true},{"content":"Gets or sets the maximum timespan after which a nonce is deleted from the cache.","nodes":[{"pos":[0,80],"content":"Gets or sets the maximum timespan after which a nonce is deleted from the cache.","nodes":[{"content":"Gets or sets the maximum timespan after which a nonce is deleted from the cache.","pos":[0,80]}]}],"pos":[4796,4877],"yaml":true},{"content":"The maximum timespan after which a nonce is deleted from the cache. This value should be at least twice the maximum clock skew added to the replay window size.","nodes":[{"pos":[0,159],"content":"The maximum timespan after which a nonce is deleted from the cache. This value should be at least twice the maximum clock skew added to the replay window size.","nodes":[{"content":"The maximum timespan after which a nonce is deleted from the cache. This value should be at least twice the maximum clock skew added to the replay window size.","pos":[0,159],"nodes":[{"content":"The maximum timespan after which a nonce is deleted from the cache.","pos":[0,67]},{"content":"This value should be at least twice the maximum clock skew added to the replay window size.","pos":[68,159]}]}]}],"pos":[5005,5165],"yaml":true},{"content":"An attempt to set a value that is less than <xref href=\"System.TimeSpan.Zero\"></xref> occurs.  \n  \n -or-  \n  \n An attempt to set a value greater than the allowed maximum occurs.","nodes":[{"pos":[0,93],"content":"An attempt to set a value that is less than <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan.Zero\"&gt;&lt;/xref&gt;</ph> occurs.","source":"An attempt to set a value that is less than <xref href=\"System.TimeSpan.Zero\"></xref> occurs."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,177],"content":"An attempt to set a value greater than the allowed maximum occurs.","nodes":[{"content":"An attempt to set a value greater than the allowed maximum occurs.","pos":[0,66]}]}],"pos":[5362,5548],"yaml":true},{"content":"When overridden in a derived class, returns a value that indicates whether the specified nonce is already in the cache.","nodes":[{"pos":[0,119],"content":"When overridden in a derived class, returns a value that indicates whether the specified nonce is already in the cache.","nodes":[{"content":"When overridden in a derived class, returns a value that indicates whether the specified nonce is already in the cache.","pos":[0,119]}]}],"pos":[6545,6665],"yaml":true},{"content":"The nonce to check.","nodes":[{"pos":[0,19],"content":"The nonce to check.","nodes":[{"content":"The nonce to check.","pos":[0,19]}]}],"pos":[6813,6833],"yaml":true},{"content":"`true` if the specified nonce is already in the cache; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the specified nonce is already in the cache; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified nonce is already in the cache; otherwise, `false`."}],"pos":[6891,6968],"yaml":true},{"content":"When overridden in a derived class, attempts to add the specified nonce to the cache.","nodes":[{"pos":[0,85],"content":"When overridden in a derived class, attempts to add the specified nonce to the cache.","nodes":[{"content":"When overridden in a derived class, attempts to add the specified nonce to the cache.","pos":[0,85]}]}],"pos":[8052,8138],"yaml":true},{"content":"The nonce to add to the cache.","nodes":[{"pos":[0,30],"content":"The nonce to add to the cache.","nodes":[{"content":"The nonce to add to the cache.","pos":[0,30]}]}],"pos":[8287,8318],"yaml":true},{"content":"`true` if the nonce was added to the cache; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the nonce was added to the cache; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the nonce was added to the cache; otherwise, `false`."}],"pos":[8376,8442],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.NonceCache\n  commentId: T:System.ServiceModel.Security.NonceCache\n  id: NonceCache\n  children:\n  - System.ServiceModel.Security.NonceCache.#ctor\n  - System.ServiceModel.Security.NonceCache.CacheSize\n  - System.ServiceModel.Security.NonceCache.CachingTimeSpan\n  - System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])\n  - System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])\n  langs:\n  - csharp\n  name: NonceCache\n  nameWithType: NonceCache\n  fullName: System.ServiceModel.Security.NonceCache\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: An abstract base class that represents a cache for nonces.\n  syntax:\n    content: public abstract class NonceCache\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.NonceCache.#ctor\n  commentId: M:System.ServiceModel.Security.NonceCache.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Security.NonceCache\n  langs:\n  - csharp\n  name: NonceCache()\n  nameWithType: NonceCache.NonceCache()\n  fullName: NonceCache.NonceCache()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Called from constructors in derived classes to initialize the <xref href=\"System.ServiceModel.Security.NonceCache\"></xref> class.\n  syntax:\n    content: protected NonceCache ();\n    parameters: []\n  overload: System.ServiceModel.Security.NonceCache.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.NonceCache.CacheSize\n  commentId: P:System.ServiceModel.Security.NonceCache.CacheSize\n  id: CacheSize\n  parent: System.ServiceModel.Security.NonceCache\n  langs:\n  - csharp\n  name: CacheSize\n  nameWithType: NonceCache.CacheSize\n  fullName: NonceCache.CacheSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets the maximum size of the cache specified as the number of nonces that the cache can contain.\n  syntax:\n    content: public int CacheSize { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size of the cache specified as the number of nonces that the cache can contain.\n  overload: System.ServiceModel.Security.NonceCache.CacheSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An attempt to set a value that is less than zero occurs.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan\n  commentId: P:System.ServiceModel.Security.NonceCache.CachingTimeSpan\n  id: CachingTimeSpan\n  parent: System.ServiceModel.Security.NonceCache\n  langs:\n  - csharp\n  name: CachingTimeSpan\n  nameWithType: NonceCache.CachingTimeSpan\n  fullName: NonceCache.CachingTimeSpan\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets the maximum timespan after which a nonce is deleted from the cache.\n  syntax:\n    content: public TimeSpan CachingTimeSpan { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The maximum timespan after which a nonce is deleted from the cache. This value should be at least twice the maximum clock skew added to the replay window size.\n  overload: System.ServiceModel.Security.NonceCache.CachingTimeSpan*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"An attempt to set a value that is less than <xref href=\\\"System.TimeSpan.Zero\\\"></xref> occurs.  \\n  \\n -or-  \\n  \\n An attempt to set a value greater than the allowed maximum occurs.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])\n  commentId: M:System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])\n  id: CheckNonce(System.Byte[])\n  parent: System.ServiceModel.Security.NonceCache\n  langs:\n  - csharp\n  name: CheckNonce(Byte[])\n  nameWithType: NonceCache.CheckNonce(Byte[])\n  fullName: NonceCache.CheckNonce(Byte[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: When overridden in a derived class, returns a value that indicates whether the specified nonce is already in the cache.\n  syntax:\n    content: public abstract bool CheckNonce (byte[] nonce);\n    parameters:\n    - id: nonce\n      type: System.Byte[]\n      description: The nonce to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified nonce is already in the cache; otherwise, `false`.'\n  overload: System.ServiceModel.Security.NonceCache.CheckNonce*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])\n  commentId: M:System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])\n  id: TryAddNonce(System.Byte[])\n  parent: System.ServiceModel.Security.NonceCache\n  langs:\n  - csharp\n  name: TryAddNonce(Byte[])\n  nameWithType: NonceCache.TryAddNonce(Byte[])\n  fullName: NonceCache.TryAddNonce(Byte[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: When overridden in a derived class, attempts to add the specified nonce to the cache.\n  syntax:\n    content: public abstract bool TryAddNonce (byte[] nonce);\n    parameters:\n    - id: nonce\n      type: System.Byte[]\n      description: The nonce to add to the cache.\n    return:\n      type: System.Boolean\n      description: '`true` if the nonce was added to the cache; otherwise, `false`.'\n  overload: System.ServiceModel.Security.NonceCache.TryAddNonce*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.Security.NonceCache.#ctor\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: NonceCache()\n  nameWithType: NonceCache.NonceCache()\n  fullName: NonceCache.NonceCache()\n- uid: System.ServiceModel.Security.NonceCache.CacheSize\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: CacheSize\n  nameWithType: NonceCache.CacheSize\n  fullName: NonceCache.CacheSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: CachingTimeSpan\n  nameWithType: NonceCache.CachingTimeSpan\n  fullName: NonceCache.CachingTimeSpan\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: CheckNonce(Byte[])\n  nameWithType: NonceCache.CheckNonce(Byte[])\n  fullName: NonceCache.CheckNonce(Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: TryAddNonce(Byte[])\n  nameWithType: NonceCache.TryAddNonce(Byte[])\n  fullName: NonceCache.TryAddNonce(Byte[])\n- uid: System.ServiceModel.Security.NonceCache.#ctor*\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: NonceCache\n  nameWithType: NonceCache.NonceCache\n  fullName: NonceCache.NonceCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n- uid: System.ServiceModel.Security.NonceCache.CacheSize*\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: CacheSize\n  nameWithType: NonceCache.CacheSize\n  fullName: NonceCache.CacheSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan*\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: CachingTimeSpan\n  nameWithType: NonceCache.CachingTimeSpan\n  fullName: NonceCache.CachingTimeSpan\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n- uid: System.ServiceModel.Security.NonceCache.CheckNonce*\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: CheckNonce\n  nameWithType: NonceCache.CheckNonce\n  fullName: NonceCache.CheckNonce\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n- uid: System.ServiceModel.Security.NonceCache.TryAddNonce*\n  parent: System.ServiceModel.Security.NonceCache\n  isExternal: false\n  name: TryAddNonce\n  nameWithType: NonceCache.TryAddNonce\n  fullName: NonceCache.TryAddNonce\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/NonceCache.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}