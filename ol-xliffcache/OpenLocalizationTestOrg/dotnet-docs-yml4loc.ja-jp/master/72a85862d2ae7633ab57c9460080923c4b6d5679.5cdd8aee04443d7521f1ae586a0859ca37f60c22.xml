{"nodes":[{"content":"Represents the result of mapping a string to its sort key.","nodes":[{"pos":[0,58],"content":"Represents the result of mapping a string to its sort key.","nodes":[{"content":"Represents the result of mapping a string to its sort key.","pos":[0,58]}]}],"pos":[695,754],"yaml":true},{"content":"A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights. A sort key serves as the repository of these weights for a particular string.  \n  \n The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string. The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property. This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options. A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.  For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions?displayProperty=fullName>, a string comparison operation that uses the sort key is case-insensitive.  \n  \n After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName> method. This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=fullName> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method.  \n  \n## Performance considerations  \n When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> methods yield the same results, but they target different scenarios.  \n  \n At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison. However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method actually doesn't generate an entire sort key to perform the comparison. Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string. The method then compares the key data for the corresponding text elements. The operation terminates as soon as the ultimate result of the comparison is determined. Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created. This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.  \n  \n The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison. This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects. However, it becomes economical if the same sort keys are compared many times.  \n  \n For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string. The table contains thousands of rows, and comparing the search string to the index in each row will take a long time. Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance. When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.  \n  \n## Security considerations  \n The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object. If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.  \n  \n Use the following steps to obtain a sort key:  \n  \n1.  Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName> property.  \n  \n2.  Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName> property.  \n  \n3.  Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method.  \n  \n Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified. However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters.  \n  \n <xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects. If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.  \n  \n For more information about sort keys, see Unicode Technical Standard #10, \"Unicode Collation Algorithm\" on the [Unicode Consortium website](http://go.microsoft.com/fwlink/?linkid=37123).","nodes":[{"pos":[0,266],"content":"A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights. A sort key serves as the repository of these weights for a particular string.","nodes":[{"content":"A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights. A sort key serves as the repository of these weights for a particular string.","pos":[0,266],"nodes":[{"content":"A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights.","pos":[0,188]},{"content":"A sort key serves as the repository of these weights for a particular string.","pos":[189,266]}]}]},{"pos":[273,1246],"content":"The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string. The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property. This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options. A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.  For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions?displayProperty=fullName>, a string comparison operation that uses the sort key is case-insensitive.","nodes":[{"content":"The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string. The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property. This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options. A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.  For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions?displayProperty=fullName>, a string comparison operation that uses the sort key is case-insensitive.","pos":[0,973],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName&gt;</ph> method returns an instance of the <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey&gt;</ph> class that reflects the culture-sensitive mapping of characters in a specified string.","pos":[0,239],"source":"The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string."},{"content":"The value of a <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> object is its key data, which is returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> property.","pos":[240,396],"source":" The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property."},{"content":"This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options.","pos":[397,535]},{"content":"A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.","pos":[536,645]},{"content":"For example, if you create a sort key by calling the <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29&gt;</ph> method with a value of <ph id=\"ph2\">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph>, a string comparison operation that uses the sort key is case-insensitive.","pos":[647,973],"source":"  For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions?displayProperty=fullName>, a string comparison operation that uses the sort key is case-insensitive."}]}]},{"pos":[1253,1647],"content":"After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName> method. This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=fullName> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method.","nodes":[{"content":"After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName> method. This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=fullName> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method.","pos":[0,394],"nodes":[{"content":"After you create a sort key for a string, you compare sort keys by calling the static <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,165],"source":"After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName> method."},{"content":"This method performs a simple byte-by-byte comparison, so it is much faster than the <ph id=\"ph1\">&lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> method.","pos":[166,394],"source":" This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=fullName> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method."}]}]},{"pos":[1656,1682],"content":"Performance considerations","linkify":"Performance considerations","nodes":[{"content":"Performance considerations","pos":[0,26]}]},{"pos":[1686,1922],"content":"When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> methods yield the same results, but they target different scenarios.","nodes":[{"content":"When performing a string comparison, the <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> methods yield the same results, but they target different scenarios.","pos":[0,236],"source":"When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> methods yield the same results, but they target different scenarios."}]},{"pos":[1929,2908],"content":"At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison. However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method actually doesn't generate an entire sort key to perform the comparison. Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string. The method then compares the key data for the corresponding text elements. The operation terminates as soon as the ultimate result of the comparison is determined. Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created. This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.","nodes":[{"content":"At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison. However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method actually doesn't generate an entire sort key to perform the comparison. Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string. The method then compares the key data for the corresponding text elements. The operation terminates as soon as the ultimate result of the comparison is determined. Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created. This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.","pos":[0,979],"nodes":[{"content":"At a high level, the <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison.","pos":[0,241],"source":"At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> method actually doesn't generate an entire sort key to perform the comparison.","pos":[242,409],"source":" However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method actually doesn't generate an entire sort key to perform the comparison."},{"content":"Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string.","pos":[410,565]},{"content":"The method then compares the key data for the corresponding text elements.","pos":[566,640]},{"content":"The operation terminates as soon as the ultimate result of the comparison is determined.","pos":[641,729]},{"content":"Sort key information is computed, but no <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> object is created.","pos":[730,825],"source":" Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created."},{"content":"This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.","pos":[826,979]}]}]},{"pos":[2915,3345],"content":"The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison. This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects. However, it becomes economical if the same sort keys are compared many times.","nodes":[{"content":"The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison. This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects. However, it becomes economical if the same sort keys are compared many times.","pos":[0,430],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method requires generation of a <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey&gt;</ph> object for each string before performing the comparison.","pos":[0,175],"source":"The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison."},{"content":"This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> objects.","pos":[176,352],"source":" This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects."},{"content":"However, it becomes economical if the same sort keys are compared many times.","pos":[353,430]}]}]},{"pos":[3352,4003],"content":"For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string. The table contains thousands of rows, and comparing the search string to the index in each row will take a long time. Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance. When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.","nodes":[{"content":"For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string. The table contains thousands of rows, and comparing the search string to the index in each row will take a long time. Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance. When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.","pos":[0,651],"nodes":[{"content":"For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string.","pos":[0,162]},{"content":"The table contains thousands of rows, and comparing the search string to the index in each row will take a long time.","pos":[163,280]},{"content":"Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance.","pos":[281,458]},{"content":"When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.","pos":[459,651]}]}]},{"pos":[4012,4035],"content":"Security considerations","linkify":"Security considerations","nodes":[{"content":"Security considerations","pos":[0,23]}]},{"pos":[4039,4801],"content":"The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object. If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.","nodes":[{"content":"The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object. If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.","pos":[0,762],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey&gt;</ph> object with the value based on a specified string and <ph id=\"ph3\">&lt;xref:System.Globalization.CompareOptions&gt;</ph> value, and the culture associated with the underlying <ph id=\"ph4\">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object.","pos":[0,388],"source":"The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object."},{"content":"If a security decision depends on a string comparison or case change, you should use the <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName&gt;</ph> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.","pos":[389,762],"source":" If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system."}]}]},{"pos":[4808,4853],"content":"Use the following steps to obtain a sort key:","nodes":[{"content":"Use the following steps to obtain a sort key:","pos":[0,45]}]},{"pos":[4863,4994],"content":"Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName> property.","nodes":[{"content":"Retrieve the invariant culture from the <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName&gt;</ph> property.","pos":[0,131],"source":"Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName> property."}]},{"pos":[5004,5186],"content":"Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName> property.","nodes":[{"content":"Retrieve a <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object for the invariant culture from the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,182],"source":"Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName> property."}]},{"pos":[5196,5345],"content":"Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName&gt;</ph> method.","pos":[0,149],"source":"Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method."}]},{"pos":[5352,5663],"content":"Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified. However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters.","nodes":[{"content":"Working with the value of a <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> object is equivalent to calling the Windows <ph id=\"ph2\">`LCMapString`</ph> method with the LCMAP_SORTKEY value specified.","pos":[0,168],"source":"Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified."},{"content":"However, for the <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> object, the sort keys for English characters precede the sort keys for Korean characters.","pos":[169,311],"source":" However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters."}]},{"pos":[5670,5973],"content":"<xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects. If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.","nodes":[{"content":"<xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects. If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.","pos":[0,303],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> objects can be serialized, but only so that they can cross <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph> objects.","pos":[0,127],"source":"<xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects."},{"content":"If an application serializes a <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.","pos":[128,303],"source":" If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework."}]}]},{"pos":[5980,6166],"content":"For more information about sort keys, see Unicode Technical Standard #10, \"Unicode Collation Algorithm\" on the <bpt id=\"p1\">[</bpt>Unicode Consortium website<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.","source":"For more information about sort keys, see Unicode Technical Standard #10, \"Unicode Collation Algorithm\" on the [Unicode Consortium website](http://go.microsoft.com/fwlink/?linkid=37123)."}],"pos":[765,6966],"yaml":true,"extradata":"MT"},{"content":"Compares two sort keys.","nodes":[{"pos":[0,23],"content":"Compares two sort keys.","nodes":[{"content":"Compares two sort keys.","pos":[0,23]}]}],"pos":[10749,10773],"yaml":true},{"content":"The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters. The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method.  \n  \n For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic.","nodes":[{"pos":[0,299],"content":"The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters. The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method compares the <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> properties of the <ph id=\"ph3\">`sortkey1`</ph> and <ph id=\"ph4\">`sortkey2`</ph> parameters.","pos":[0,173],"source":"The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters."},{"content":"The method yields the same results as the <ph id=\"ph1\">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName&gt;</ph> method.","pos":[174,299],"source":" The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method."}]},{"pos":[306,480],"content":"For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic.","nodes":[{"content":"For more information about the <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method and the comparison of sort keys, see the <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey&gt;</ph> class topic.","pos":[0,174],"source":"For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic."}]}],"pos":[10784,11269],"yaml":true,"extradata":"MT"},{"content":"The first sort key to compare.","nodes":[{"pos":[0,30],"content":"The first sort key to compare.","nodes":[{"content":"The first sort key to compare.","pos":[0,30]}]}],"pos":[12056,12087],"yaml":true},{"content":"The second sort key to compare.","nodes":[{"pos":[0,31],"content":"The second sort key to compare.","nodes":[{"content":"The second sort key to compare.","pos":[0,31]}]}],"pos":[12166,12198],"yaml":true},{"content":"A signed integer that indicates the relationship between <code>sortkey1</code> and <code>sortkey2</code>.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>sortkey1</code> is less than <code>sortkey2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>sortkey1</code> is equal to <code>sortkey2</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>sortkey1</code> is greater than <code>sortkey2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,105],"content":"A signed integer that indicates the relationship between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortkey1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">sortkey2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A signed integer that indicates the relationship between <code>sortkey1</code> and <code>sortkey2</code>."},{"pos":[112,549],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>sortkey1</code> is less than <code>sortkey2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>sortkey1</code> is equal to <code>sortkey2</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>sortkey1</code> is greater than <code>sortkey2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Condition","pos":[45,59],"source":" Condition  \n  \n "},{"content":"Less than zero","pos":[95,114],"source":" Less than zero  \n  \n "},{"content":"<code>sortkey1</code> is less than <code>sortkey2</code>.  \n  \n ","pos":[125,189],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;sortkey1&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;code&gt;sortkey2&lt;/code&gt;</ph>.","pos":[0,57],"source":"<code>sortkey1</code> is less than <code>sortkey2</code>."}]},{"content":"Zero","pos":[208,217],"source":" Zero  \n  \n "},{"content":"<code>sortkey1</code> is equal to <code>sortkey2</code>.  \n  \n ","pos":[228,291],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;sortkey1&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;code&gt;sortkey2&lt;/code&gt;</ph>.","pos":[0,56],"source":"<code>sortkey1</code> is equal to <code>sortkey2</code>."}]},{"content":"Greater than zero","pos":[310,332],"source":" Greater than zero  \n  \n "},{"content":"<code>sortkey1</code> is greater than <code>sortkey2</code>.  \n  \n ","pos":[343,410],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;sortkey1&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;sortkey2&lt;/code&gt;</ph>.","pos":[0,60],"source":"<code>sortkey1</code> is greater than <code>sortkey2</code>."}]}]}],"pos":[12254,12823],"yaml":true},{"content":"<code>sortkey1</code> or <code>sortkey2</code> is `null`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;sortkey1&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;sortkey2&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>sortkey1</code> or <code>sortkey2</code> is `null`."}],"pos":[12989,13047],"yaml":true},{"content":"Determines whether the specified object is equal to the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,121],"content":"Determines whether the specified object is equal to the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the specified object is equal to the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[14202,14324],"yaml":true},{"content":"Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal.  \n  \n This method overrides <xref:System.Object.Equals%2A?displayProperty=fullName>.","nodes":[{"pos":[0,146],"content":"Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> objects are considered equal if their <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> properties are equal.","pos":[0,146],"source":"Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal."}]},{"pos":[153,231],"content":"This method overrides <xref:System.Object.Equals%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.","pos":[0,78],"source":"This method overrides <xref:System.Object.Equals%2A?displayProperty=fullName>."}]}],"pos":[14335,14571],"yaml":true,"extradata":"MT"},{"content":"The object to compare with the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,96],"content":"The object to compare with the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"The object to compare with the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[15398,15495],"yaml":true},{"content":"`true` if the <code>value</code> parameter is equal to the current <xref href=\"System.Globalization.SortKey\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>value</code> parameter is equal to the current <xref href=\"System.Globalization.SortKey\"></xref> object; otherwise, `false`."}],"pos":[15553,15700],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[15865,15895],"yaml":true},{"content":"Serves as a hash function for the current <xref href=\"System.Globalization.SortKey\"></xref> object that is suitable for hashing algorithms and data structures such as a hash table.","nodes":[{"pos":[0,180],"content":"Serves as a hash function for the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object that is suitable for hashing algorithms and data structures such as a hash table.","source":"Serves as a hash function for the current <xref href=\"System.Globalization.SortKey\"></xref> object that is suitable for hashing algorithms and data structures such as a hash table."}],"pos":[17017,17198],"yaml":true},{"content":"This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method.  \n  \n This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.","nodes":[{"pos":[0,142],"content":"This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method.","nodes":[{"content":"This method generates the same hash code for two objects that are equal according to the <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey.Equals%2A&gt;</ph> method.","pos":[0,142],"source":"This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method."}]},{"pos":[149,232],"content":"This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</ph>.","pos":[0,83],"source":"This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=fullName>."}]}],"pos":[17209,17446],"yaml":true,"extradata":"MT"},{"content":"A hash code for the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,85],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"A hash code for the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[17580,17666],"yaml":true},{"content":"Gets the byte array representing the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,102],"content":"Gets the byte array representing the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the byte array representing the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[18831,18934],"yaml":true},{"content":"For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic.","nodes":[{"pos":[0,197],"content":"For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic.","nodes":[{"content":"For more information about the use of the data returned by the <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> property in comparing strings, see the <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey&gt;</ph> class topic.","pos":[0,197],"source":"For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic."}]}],"pos":[18945,19143],"yaml":true,"extradata":"MT"},{"content":"A byte array representing the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,95],"content":"A byte array representing the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"A byte array representing the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[19695,19791],"yaml":true},{"content":"Gets the original string used to create the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,109],"content":"Gets the original string used to create the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the original string used to create the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[20994,21104],"yaml":true},{"content":"The original string used to create the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,104],"content":"The original string used to create the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"The original string used to create the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[21677,21782],"yaml":true},{"content":"Returns a string that represents the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,102],"content":"Returns a string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a string that represents the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[22960,23063],"yaml":true},{"content":"The return value is the concatenation of the string \"SortKey - \", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property.  \n  \n This method overrides <xref:System.Object.ToString%2A?displayProperty=fullName>.","nodes":[{"pos":[0,252],"content":"The return value is the concatenation of the string \"SortKey - \", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property.","nodes":[{"content":"The return value is the concatenation of the string \"SortKey - \", the culture identifier and compare options of the current <ph id=\"ph1\">&lt;xref:System.Globalization.SortKey&gt;</ph> object, and the value of the <ph id=\"ph2\">&lt;xref:System.Globalization.SortKey.OriginalString%2A&gt;</ph> property.","pos":[0,252],"source":"The return value is the concatenation of the string \"SortKey - \", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property."}]},{"pos":[259,339],"content":"This method overrides <xref:System.Object.ToString%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.Object.ToString%2A?displayProperty=fullName&gt;</ph>.","pos":[0,80],"source":"This method overrides <xref:System.Object.ToString%2A?displayProperty=fullName>."}]}],"pos":[23074,23420],"yaml":true,"extradata":"MT"},{"content":"A string that represents the current <xref href=\"System.Globalization.SortKey\"></xref> object.","nodes":[{"pos":[0,94],"content":"A string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.SortKey\"&gt;&lt;/xref&gt;</ph> object.","source":"A string that represents the current <xref href=\"System.Globalization.SortKey\"></xref> object."}],"pos":[24088,24183],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.SortKey\n  commentId: T:System.Globalization.SortKey\n  id: SortKey\n  children:\n  - System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)\n  - System.Globalization.SortKey.Equals(System.Object)\n  - System.Globalization.SortKey.GetHashCode\n  - System.Globalization.SortKey.KeyData\n  - System.Globalization.SortKey.OriginalString\n  - System.Globalization.SortKey.ToString\n  langs:\n  - csharp\n  name: SortKey\n  nameWithType: SortKey\n  fullName: System.Globalization.SortKey\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Represents the result of mapping a string to its sort key.\n  remarks: \"A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights. A sort key serves as the repository of these weights for a particular string.  \\n  \\n The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string. The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property. This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options. A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.  For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions?displayProperty=fullName>, a string comparison operation that uses the sort key is case-insensitive.  \\n  \\n After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName> method. This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=fullName> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method.  \\n  \\n## Performance considerations  \\n When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> methods yield the same results, but they target different scenarios.  \\n  \\n At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison. However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method actually doesn't generate an entire sort key to perform the comparison. Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string. The method then compares the key data for the corresponding text elements. The operation terminates as soon as the ultimate result of the comparison is determined. Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created. This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.  \\n  \\n The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison. This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects. However, it becomes economical if the same sort keys are compared many times.  \\n  \\n For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string. The table contains thousands of rows, and comparing the search string to the index in each row will take a long time. Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance. When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.  \\n  \\n## Security considerations  \\n The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object. If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.  \\n  \\n Use the following steps to obtain a sort key:  \\n  \\n1.  Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName> property.  \\n  \\n2.  Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName> property.  \\n  \\n3.  Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method.  \\n  \\n Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified. However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters.  \\n  \\n <xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects. If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.  \\n  \\n For more information about sort keys, see Unicode Technical Standard #10, \\\"Unicode Collation Algorithm\\\" on the [Unicode Consortium website](http://go.microsoft.com/fwlink/?linkid=37123).\"\n  example:\n  - \"The following example compares the string \\\"llama\\\" using the \\\"en-US\\\" and \\\"es-ES\\\" cultures, and the \\\"en-US\\\" and \\\"es-ES\\\" traditional cultures.  \\n  \\n [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]\\n [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]\\n [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  \\n  \\n The following example shows how you can use the <xref:System.Globalization.SortKey> class to improve performance in an application that relies extensively on sorting and searching a large array. The example creates an unordered array of names, which in this case has 13 elements. It then stores the sort key of each name in a parallel array, which it passes to the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=fullName> method. The result is a sorted array. The example then searches the array for three strings. For each search string, it calls the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method to retrieve the string's sort key, and then calls the <xref:System.Array.FindIndex%2A?displayProperty=fullName> method to retrieve the index of that sort key in the array of sort keys. Because the name and sort key arrays are parallel, the returned index is also the index of the name in the `names` array.  \\n  \\n [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]\\n [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SortKey\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)\n  commentId: M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)\n  id: Compare(System.Globalization.SortKey,System.Globalization.SortKey)\n  parent: System.Globalization.SortKey\n  langs:\n  - csharp\n  name: Compare(SortKey, SortKey)\n  nameWithType: SortKey.Compare(SortKey, SortKey)\n  fullName: SortKey.Compare(SortKey, SortKey)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Compares two sort keys.\n  remarks: \"The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters. The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> method.  \\n  \\n For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic.\"\n  example:\n  - \"The following code example compares two strings using the <xref:System.Globalization.SortKey.Compare%2A> method and the equivalent <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method.  \\n  \\n [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]\\n [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]\"\n  syntax:\n    content: public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);\n    parameters:\n    - id: sortkey1\n      type: System.Globalization.SortKey\n      description: The first sort key to compare.\n    - id: sortkey2\n      type: System.Globalization.SortKey\n      description: The second sort key to compare.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relationship between <code>sortkey1</code> and <code>sortkey2</code>.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td><code>sortkey1</code> is less than <code>sortkey2</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td><code>sortkey1</code> is equal to <code>sortkey2</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td><code>sortkey1</code> is greater than <code>sortkey2</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Globalization.SortKey.Compare*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sortkey1</code> or <code>sortkey2</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.SortKey.Equals(System.Object)\n  commentId: M:System.Globalization.SortKey.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Globalization.SortKey\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SortKey.Equals(Object)\n  fullName: SortKey.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Determines whether the specified object is equal to the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n  remarks: \"Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal.  \\n  \\n This method overrides <xref:System.Object.Equals%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following code example shows the results of <xref:System.Globalization.SortKey.Equals%2A> when compared with different <xref:System.Globalization.SortKey> objects.  \\n  \\n [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]\\n [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]\\n [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]\"\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to compare with the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>value</code> parameter is equal to the current <xref href=\"System.Globalization.SortKey\"></xref> object; otherwise, `false`.'\n  overload: System.Globalization.SortKey.Equals*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.SortKey.GetHashCode\n  commentId: M:System.Globalization.SortKey.GetHashCode\n  id: GetHashCode\n  parent: System.Globalization.SortKey\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SortKey.GetHashCode()\n  fullName: SortKey.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Serves as a hash function for the current <xref href=\"System.Globalization.SortKey\"></xref> object that is suitable for hashing algorithms and data structures such as a hash table.\n  remarks: \"This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method.  \\n  \\n This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n  overload: System.Globalization.SortKey.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.SortKey.KeyData\n  commentId: P:System.Globalization.SortKey.KeyData\n  id: KeyData\n  parent: System.Globalization.SortKey\n  langs:\n  - csharp\n  name: KeyData\n  nameWithType: SortKey.KeyData\n  fullName: SortKey.KeyData\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the byte array representing the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n  remarks: For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic.\n  example:\n  - \"The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.  \\n  \\n [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]\\n [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]\"\n  syntax:\n    content: public virtual byte[] KeyData { get; }\n    return:\n      type: System.Byte[]\n      description: A byte array representing the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n  overload: System.Globalization.SortKey.KeyData*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.SortKey.OriginalString\n  commentId: P:System.Globalization.SortKey.OriginalString\n  id: OriginalString\n  parent: System.Globalization.SortKey\n  langs:\n  - csharp\n  name: OriginalString\n  nameWithType: SortKey.OriginalString\n  fullName: SortKey.OriginalString\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the original string used to create the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.  \\n  \\n [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]\\n [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]\"\n  syntax:\n    content: public virtual string OriginalString { get; }\n    return:\n      type: System.String\n      description: The original string used to create the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n  overload: System.Globalization.SortKey.OriginalString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.SortKey.ToString\n  commentId: M:System.Globalization.SortKey.ToString\n  id: ToString\n  parent: System.Globalization.SortKey\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SortKey.ToString()\n  fullName: SortKey.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a string that represents the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n  remarks: \"The return value is the concatenation of the string \\\"SortKey - \\\", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property.  \\n  \\n This method overrides <xref:System.Object.ToString%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following code example displays an original string, the strings yielded by the <xref:System.Globalization.SortKey.ToString%2A> method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.  \\n  \\n [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]\\n [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.Globalization.SortKey\"></xref> object.\n  overload: System.Globalization.SortKey.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: Compare(SortKey, SortKey)\n  nameWithType: SortKey.Compare(SortKey, SortKey)\n  fullName: SortKey.Compare(SortKey, SortKey)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.SortKey\n  parent: System.Globalization\n  isExternal: false\n  name: SortKey\n  nameWithType: SortKey\n  fullName: System.Globalization.SortKey\n- uid: System.Globalization.SortKey.Equals(System.Object)\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SortKey.Equals(Object)\n  fullName: SortKey.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Globalization.SortKey.GetHashCode\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SortKey.GetHashCode()\n  fullName: SortKey.GetHashCode()\n- uid: System.Globalization.SortKey.KeyData\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: KeyData\n  nameWithType: SortKey.KeyData\n  fullName: SortKey.KeyData\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Globalization.SortKey.OriginalString\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: OriginalString\n  nameWithType: SortKey.OriginalString\n  fullName: SortKey.OriginalString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Globalization.SortKey.ToString\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: ToString()\n  nameWithType: SortKey.ToString()\n  fullName: SortKey.ToString()\n- uid: System.Globalization.SortKey.Compare*\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: Compare\n  nameWithType: SortKey.Compare\n  fullName: SortKey.Compare\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n- uid: System.Globalization.SortKey.Equals*\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: Equals\n  nameWithType: SortKey.Equals\n  fullName: SortKey.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n- uid: System.Globalization.SortKey.GetHashCode*\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SortKey.GetHashCode\n  fullName: SortKey.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n- uid: System.Globalization.SortKey.KeyData*\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: KeyData\n  nameWithType: SortKey.KeyData\n  fullName: SortKey.KeyData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n- uid: System.Globalization.SortKey.OriginalString*\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: OriginalString\n  nameWithType: SortKey.OriginalString\n  fullName: SortKey.OriginalString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n- uid: System.Globalization.SortKey.ToString*\n  parent: System.Globalization.SortKey\n  isExternal: false\n  name: ToString\n  nameWithType: SortKey.ToString\n  fullName: SortKey.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/SortKey.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}