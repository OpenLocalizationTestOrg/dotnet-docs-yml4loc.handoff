{"nodes":[{"content":"An abstract base class used to create composite activities from pre-existing <xref href=\"System.Activities.Activity\"></xref> objects, which specifies a result type using the activity’s type specifier.","nodes":[{"pos":[0,200],"content":"An abstract base class used to create composite activities from pre-existing <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity\"&gt;&lt;/xref&gt;</ph> objects, which specifies a result type using the activity’s type specifier.","source":"An abstract base class used to create composite activities from pre-existing <xref href=\"System.Activities.Activity\"></xref> objects, which specifies a result type using the activity’s type specifier."}],"pos":[969,1170],"yaml":true},{"content":"<xref:System.Activities.Activity%601> is the base class in the activity type hierarchy. All other activity types with generic type definitions such as <xref:System.Activities.CodeActivity%601>, <xref:System.Activities.NativeActivity%601>, <xref:System.Activities.AsyncCodeActivity%601>, and <xref:System.Activities.DynamicActivity%601> derive from this class.","nodes":[{"pos":[0,359],"content":"<xref:System.Activities.Activity%601> is the base class in the activity type hierarchy. All other activity types with generic type definitions such as <xref:System.Activities.CodeActivity%601>, <xref:System.Activities.NativeActivity%601>, <xref:System.Activities.AsyncCodeActivity%601>, and <xref:System.Activities.DynamicActivity%601> derive from this class.","nodes":[{"content":"<xref:System.Activities.Activity%601> is the base class in the activity type hierarchy. All other activity types with generic type definitions such as <xref:System.Activities.CodeActivity%601>, <xref:System.Activities.NativeActivity%601>, <xref:System.Activities.AsyncCodeActivity%601>, and <xref:System.Activities.DynamicActivity%601> derive from this class.","pos":[0,359],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Activity%601&gt;</ph> is the base class in the activity type hierarchy.","pos":[0,87],"source":"<xref:System.Activities.Activity%601> is the base class in the activity type hierarchy."},{"content":"All other activity types with generic type definitions such as <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivity%601&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Activities.NativeActivity%601&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Activities.AsyncCodeActivity%601&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Activities.DynamicActivity%601&gt;</ph> derive from this class.","pos":[88,359],"source":" All other activity types with generic type definitions such as <xref:System.Activities.CodeActivity%601>, <xref:System.Activities.NativeActivity%601>, <xref:System.Activities.AsyncCodeActivity%601>, and <xref:System.Activities.DynamicActivity%601> derive from this class."}]}]}],"pos":[1181,1541],"yaml":true,"extradata":"MT"},{"content":"The type of the return value of the activity.","nodes":[{"pos":[0,45],"content":"The type of the return value of the activity.","nodes":[{"content":"The type of the return value of the activity.","pos":[0,45]}]}],"pos":[2048,2094],"yaml":true},{"content":"When implemented in a derived class, creates a new instance of the derived class.","nodes":[{"pos":[0,81],"content":"When implemented in a derived class, creates a new instance of the derived class.","nodes":[{"content":"When implemented in a derived class, creates a new instance of the derived class.","pos":[0,81]}]}],"pos":[4353,4435],"yaml":true},{"content":"Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given value.","nodes":[{"pos":[0,105],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph> expression that evaluates to the given value.","source":"Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given value."}],"pos":[5498,5604],"yaml":true},{"content":"The value used to create the <xref href=\"System.Activities.Activity`1\"></xref> expression.","nodes":[{"pos":[0,90],"content":"The value used to create the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph> expression.","source":"The value used to create the <xref href=\"System.Activities.Activity`1\"></xref> expression."}],"pos":[5785,5876],"yaml":true},{"content":"A workflow expression that evaluates to the given value.","nodes":[{"pos":[0,56],"content":"A workflow expression that evaluates to the given value.","nodes":[{"content":"A workflow expression that evaluates to the given value.","pos":[0,56]}]}],"pos":[5948,6005],"yaml":true},{"content":"Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given <xref href=\"System.Activities.Variable\"></xref>.","nodes":[{"pos":[0,147],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph> expression that evaluates to the given <ph id=\"ph2\">&lt;xref href=\"System.Activities.Variable\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given <xref href=\"System.Activities.Variable\"></xref>."}],"pos":[7100,7248],"yaml":true},{"content":"If the type of the <xref:System.Activities.Variable> is not compatible with the type of the <xref:System.Activities.Activity%601>, then an <xref:System.ArgumentException> is thrown.","nodes":[{"pos":[0,181],"content":"If the type of the <xref:System.Activities.Variable> is not compatible with the type of the <xref:System.Activities.Activity%601>, then an <xref:System.ArgumentException> is thrown.","nodes":[{"content":"If the type of the <ph id=\"ph1\">&lt;xref:System.Activities.Variable&gt;</ph> is not compatible with the type of the <ph id=\"ph2\">&lt;xref:System.Activities.Activity%601&gt;</ph>, then an <ph id=\"ph3\">&lt;xref:System.ArgumentException&gt;</ph> is thrown.","pos":[0,181],"source":"If the type of the <xref:System.Activities.Variable> is not compatible with the type of the <xref:System.Activities.Activity%601>, then an <xref:System.ArgumentException> is thrown."}]}],"pos":[7259,7441],"yaml":true,"extradata":"MT"},{"content":"The value for the expression.","nodes":[{"pos":[0,29],"content":"The value for the expression.","nodes":[{"content":"The value for the expression.","pos":[0,29]}]}],"pos":[7659,7689],"yaml":true},{"content":"A workflow expression that evaluates to the given variable.","nodes":[{"pos":[0,59],"content":"A workflow expression that evaluates to the given variable.","nodes":[{"content":"A workflow expression that evaluates to the given variable.","pos":[0,59]}]}],"pos":[7761,7821],"yaml":true},{"content":"Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given <xref href=\"System.Activities.Variable`1\"></xref>.","nodes":[{"pos":[0,149],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph> expression that evaluates to the given <ph id=\"ph2\">&lt;xref href=\"System.Activities.Variable`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given <xref href=\"System.Activities.Variable`1\"></xref>."}],"pos":[8958,9108],"yaml":true},{"content":"The value for the expression.","nodes":[{"pos":[0,29],"content":"The value for the expression.","nodes":[{"content":"The value for the expression.","pos":[0,29]}]}],"pos":[9344,9374],"yaml":true},{"content":"A workflow expression that evaluates to the given variable.","nodes":[{"pos":[0,59],"content":"A workflow expression that evaluates to the given variable.","nodes":[{"content":"A workflow expression that evaluates to the given variable.","pos":[0,59]}]}],"pos":[9446,9506],"yaml":true},{"content":"Gets or sets the result argument for the <xref href=\"System.Activities.Activity`1\"></xref>.","nodes":[{"pos":[0,91],"content":"Gets or sets the result argument for the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the result argument for the <xref href=\"System.Activities.Activity`1\"></xref>."}],"pos":[14795,14887],"yaml":true},{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,124],"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","pos":[0,124],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime, an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,124],"source":" If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[14898,15023],"yaml":true,"extradata":"MT"},{"content":"The result argument for the <xref href=\"System.Activities.Activity`1\"></xref>.","nodes":[{"pos":[0,78],"content":"The result argument for the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph>.","source":"The result argument for the <xref href=\"System.Activities.Activity`1\"></xref>."}],"pos":[15195,15274],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Activity`1\n  commentId: T:System.Activities.Activity`1\n  id: Activity`1\n  children:\n  - System.Activities.Activity`1.#ctor\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.Result\n  langs:\n  - csharp\n  name: Activity<TResult>\n  nameWithType: Activity<TResult>\n  fullName: System.Activities.Activity<TResult>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: An abstract base class used to create composite activities from pre-existing <xref href=\"System.Activities.Activity\"></xref> objects, which specifies a result type using the activity’s type specifier.\n  remarks: <xref:System.Activities.Activity%601> is the base class in the activity type hierarchy. All other activity types with generic type definitions such as <xref:System.Activities.CodeActivity%601>, <xref:System.Activities.NativeActivity%601>, <xref:System.Activities.AsyncCodeActivity%601>, and <xref:System.Activities.DynamicActivity%601> derive from this class.\n  example:\n  - \"The following example shows how to derive a class from <xref:System.Activities.Activity%601>.  \\n  \\n [!code-csharp[HelloWorld#0](~/samples/snippets/csharp/VS_Snippets_CFX/helloworld/cs/appendstring.cs#0)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.ActivityWithResultConverter))]\n\n      public abstract class Activity<TResult> : System.Activities.ActivityWithResult\n    typeParameters:\n    - id: TResult\n      description: The type of the return value of the activity.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  derivedClasses:\n  - System.Activities.AsyncCodeActivity`1\n  - System.Activities.CodeActivity`1\n  - System.Activities.DynamicActivity`1\n  - System.Activities.NativeActivity`1\n  - System.Activities.Expressions.AndAlso\n  - System.Activities.Expressions.OrElse\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.Implementation\n  - System.Activities.Activity.ImplementationVersion\n  - System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Activity`1.#ctor\n  commentId: M:System.Activities.Activity`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Activity`1\n  langs:\n  - csharp\n  name: Activity<TResult>()\n  nameWithType: Activity<TResult>.Activity<TResult>()\n  fullName: Activity<TResult>.Activity<TResult>()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, creates a new instance of the derived class.\n  syntax:\n    content: protected Activity ();\n    parameters: []\n  overload: System.Activities.Activity`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Activity`1.FromValue(`0)\n  commentId: M:System.Activities.Activity`1.FromValue(`0)\n  id: FromValue(`0)\n  parent: System.Activities.Activity`1\n  langs:\n  - csharp\n  name: FromValue(TResult)\n  nameWithType: Activity<TResult>.FromValue(TResult)\n  fullName: Activity<TResult>.FromValue(TResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given value.\n  syntax:\n    content: public static System.Activities.Activity<TResult> FromValue (TResult constValue);\n    parameters:\n    - id: constValue\n      type: TResult\n      description: The value used to create the <xref href=\"System.Activities.Activity`1\"></xref> expression.\n    return:\n      type: System.Activities.Activity`1\n      description: A workflow expression that evaluates to the given value.\n  overload: System.Activities.Activity`1.FromValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  commentId: M:System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  id: FromVariable(System.Activities.Variable)\n  parent: System.Activities.Activity`1\n  langs:\n  - csharp\n  name: FromVariable(Variable)\n  nameWithType: Activity<TResult>.FromVariable(Variable)\n  fullName: Activity<TResult>.FromVariable(Variable)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given <xref href=\"System.Activities.Variable\"></xref>.\n  remarks: If the type of the <xref:System.Activities.Variable> is not compatible with the type of the <xref:System.Activities.Activity%601>, then an <xref:System.ArgumentException> is thrown.\n  syntax:\n    content: public static System.Activities.Activity<TResult> FromVariable (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: The value for the expression.\n    return:\n      type: System.Activities.Activity`1\n      description: A workflow expression that evaluates to the given variable.\n  overload: System.Activities.Activity`1.FromVariable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  commentId: M:System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  id: FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.Activity`1\n  langs:\n  - csharp\n  name: FromVariable(Variable<TResult>)\n  nameWithType: Activity<TResult>.FromVariable(Variable<TResult>)\n  fullName: Activity<TResult>.FromVariable(Variable<TResult>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a <xref href=\"System.Activities.Activity`1\"></xref> expression that evaluates to the given <xref href=\"System.Activities.Variable`1\"></xref>.\n  syntax:\n    content: public static System.Activities.Activity<TResult> FromVariable (System.Activities.Variable<TResult> variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable{TResult}\n      description: The value for the expression.\n    return:\n      type: System.Activities.Activity`1\n      description: A workflow expression that evaluates to the given variable.\n  overload: System.Activities.Activity`1.FromVariable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  commentId: M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable)~System.Activities.Activity{`0}\n  id: op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  langs:\n  - csharp\n  name: op_Implicit(Variable to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.Activity<TResult> op_Implicit (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: ''\n    return:\n      type: System.Activities.Activity`1\n      description: ''\n  overload: System.Activities.Activity`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  commentId: M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.Activity{`0}\n  id: op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  langs:\n  - csharp\n  name: op_Implicit(Variable<TResult> to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.Activity<TResult> op_Implicit (System.Activities.Variable<TResult> variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable{TResult}\n      description: ''\n    return:\n      type: System.Activities.Activity`1\n      description: ''\n  overload: System.Activities.Activity`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n- uid: System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  commentId: M:System.Activities.Activity`1.op_Implicit(`0)~System.Activities.Activity{`0}\n  id: op_Implicit(TResult to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  langs:\n  - csharp\n  name: op_Implicit(TResult to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.Activity<TResult> op_Implicit (TResult constValue);\n    parameters:\n    - id: constValue\n      type: TResult\n      description: ''\n    return:\n      type: System.Activities.Activity`1\n      description: ''\n  overload: System.Activities.Activity`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n- uid: System.Activities.Activity`1.Result\n  commentId: P:System.Activities.Activity`1.Result\n  id: Result\n  parent: System.Activities.Activity`1\n  langs:\n  - csharp\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the result argument for the <xref href=\"System.Activities.Activity`1\"></xref>.\n  remarks: This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public System.Activities.OutArgument<TResult> Result { get; set; }\n    return:\n      type: System.Activities.OutArgument{TResult}\n      description: The result argument for the <xref href=\"System.Activities.Activity`1\"></xref>.\n  overload: System.Activities.Activity`1.Result*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.ActivityWithResult\n  parent: System.Activities\n  isExternal: false\n  name: ActivityWithResult\n  nameWithType: ActivityWithResult\n  fullName: System.Activities.ActivityWithResult\n- uid: System.Activities.Activity`1.#ctor\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Activity<TResult>()\n  nameWithType: Activity<TResult>.Activity<TResult>()\n  fullName: Activity<TResult>.Activity<TResult>()\n- uid: System.Activities.Activity`1.FromValue(`0)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromValue(TResult)\n  nameWithType: Activity<TResult>.FromValue(TResult)\n  fullName: Activity<TResult>.FromValue(TResult)\n- uid: System.Activities.Activity`1\n  parent: System.Activities\n  isExternal: false\n  name: Activity<TResult>\n  nameWithType: Activity<TResult>\n  fullName: System.Activities.Activity<TResult>\n- uid: TResult\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: Activity<TResult>.FromVariable(Variable)\n  fullName: Activity<TResult>.FromVariable(Variable)\n- uid: System.Activities.Variable\n  parent: System.Activities\n  isExternal: false\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable<TResult>)\n  nameWithType: Activity<TResult>.FromVariable(Variable<TResult>)\n  fullName: Activity<TResult>.FromVariable(Variable<TResult>)\n- uid: System.Activities.Variable`1\n  name: Variable<T>\n  nameWithType: Variable<T>\n  fullName: System.Activities.Variable<T>\n- uid: System.Activities.Variable{TResult}\n  parent: System.Activities\n  isExternal: false\n  name: Variable<TResult>\n  nameWithType: Variable<TResult>\n  fullName: System.Activities.Variable<TResult>\n  spec.csharp:\n  - uid: System.Activities.Variable`1\n    name: Variable\n    nameWithType: Variable\n    fullName: System.Activities.Variable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable<TResult> to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(TResult to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n- uid: System.Activities.Activity`1.Result\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n- uid: System.Activities.OutArgument`1\n  name: OutArgument<T>\n  nameWithType: OutArgument<T>\n  fullName: System.Activities.OutArgument<T>\n- uid: System.Activities.OutArgument{TResult}\n  parent: System.Activities\n  isExternal: false\n  name: OutArgument<TResult>\n  nameWithType: OutArgument<TResult>\n  fullName: System.Activities.OutArgument<TResult>\n  spec.csharp:\n  - uid: System.Activities.OutArgument`1\n    name: OutArgument\n    nameWithType: OutArgument\n    fullName: System.Activities.OutArgument\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Activity`1.#ctor*\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Activity<TResult>\n  nameWithType: Activity<TResult>.Activity<TResult>\n  fullName: Activity<TResult>.Activity<TResult>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n- uid: System.Activities.Activity`1.FromValue*\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromValue\n  nameWithType: Activity<TResult>.FromValue\n  fullName: Activity<TResult>.FromValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n- uid: System.Activities.Activity`1.FromVariable*\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable\n  nameWithType: Activity<TResult>.FromVariable\n  fullName: Activity<TResult>.FromVariable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n- uid: System.Activities.Activity`1.op_Implicit*\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: Activity<TResult>.op_Implicit\n  fullName: Activity<TResult>.op_Implicit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n- uid: System.Activities.Activity`1.Result*\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/Activity`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: Activity.CacheMetadata(ActivityMetadata)\n  fullName: Activity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.Activity.Implementation\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Implementation\n  nameWithType: Activity.Implementation\n  fullName: Activity.Implementation\n- uid: System.Activities.Activity.ImplementationVersion\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: Activity.ImplementationVersion\n  fullName: Activity.ImplementationVersion\n- uid: System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Activity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.ActivityWithResult.ResultType\n  parent: System.Activities.ActivityWithResult\n  isExternal: false\n  name: ResultType\n  nameWithType: ActivityWithResult.ResultType\n  fullName: ActivityWithResult.ResultType\n"}