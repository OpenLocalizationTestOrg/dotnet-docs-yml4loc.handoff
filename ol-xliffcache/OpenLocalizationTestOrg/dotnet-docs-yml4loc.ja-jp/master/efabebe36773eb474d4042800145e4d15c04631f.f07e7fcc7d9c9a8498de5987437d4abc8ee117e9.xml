{"nodes":[{"content":"Specifies the name of a cryptographic hash algorithm.","nodes":[{"pos":[0,53],"content":"Specifies the name of a cryptographic hash algorithm.","nodes":[{"content":"Specifies the name of a cryptographic hash algorithm.","pos":[0,53]}]}],"pos":[1515,1569],"yaml":true},{"content":"The <xref:System.Security.Cryptography.HashAlgorithmName> structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string. Hash algorithm names are case-sensitive.  \n  \n Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).  \n  \n Asymmetric algorithms implemented using other technologies:  \n  \n-   Must recognize at least \"MD5\", \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\".  \n  \n-   Should recognize additional CNG identifiers for any additional hash algorithms that they support.","nodes":[{"pos":[0,345],"content":"The <xref:System.Security.Cryptography.HashAlgorithmName> structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string. Hash algorithm names are case-sensitive.","nodes":[{"content":"The <xref:System.Security.Cryptography.HashAlgorithmName> structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string. Hash algorithm names are case-sensitive.","pos":[0,345],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithmName&gt;</ph> structure includes some static properties that return predefined hash algorithm names, as well as a <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A&gt;</ph> property that can represent a custom hash algorithm name as a strongly-typed string.","pos":[0,304],"source":"The <xref:System.Security.Cryptography.HashAlgorithmName> structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string."},{"content":"Hash algorithm names are case-sensitive.","pos":[305,345]}]}]},{"pos":[352,580],"content":"Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a <bpt id=\"p1\">[</bpt>CNG algorithm identifier<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx)</ept>.","source":"Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx)."},{"pos":[587,646],"content":"Asymmetric algorithms implemented using other technologies:","nodes":[{"content":"Asymmetric algorithms implemented using other technologies:","pos":[0,59]}]},{"pos":[656,728],"content":"Must recognize at least \"MD5\", \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\".","nodes":[{"content":"Must recognize at least \"MD5\", \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\".","pos":[0,72]}]},{"pos":[738,835],"content":"Should recognize additional CNG identifiers for any additional hash algorithms that they support.","nodes":[{"content":"Should recognize additional CNG identifiers for any additional hash algorithms that they support.","pos":[0,97]}]}],"pos":[1580,2436],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> structure with a custom name.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;&lt;/xref&gt;</ph> structure with a custom name.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> structure with a custom name."}],"pos":[4056,4188],"yaml":true},{"content":"The constructor performs no validation on `name`.","nodes":[{"pos":[0,49],"content":"The constructor performs no validation on <ph id=\"ph1\">`name`</ph>.","source":"The constructor performs no validation on `name`."}],"pos":[4199,4249],"yaml":true,"extradata":"MT"},{"content":"The custom hash algorithm name.","nodes":[{"pos":[0,31],"content":"The custom hash algorithm name.","nodes":[{"content":"The custom hash algorithm name.","pos":[0,31]}]}],"pos":[4388,4420],"yaml":true},{"content":"Returns a value that indicates whether the current instance and a specified object are equal.","nodes":[{"pos":[0,93],"content":"Returns a value that indicates whether the current instance and a specified object are equal.","nodes":[{"content":"Returns a value that indicates whether the current instance and a specified object are equal.","pos":[0,93]}]}],"pos":[5830,5924],"yaml":true},{"content":"The object to compare with the current instance.","nodes":[{"pos":[0,48],"content":"The object to compare with the current instance.","nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]}],"pos":[6064,6113],"yaml":true},{"content":"`true` if <code>obj</code> is a <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> object and its <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property is equal to that of the current instance. The comparison is ordinal and case-sensitive.","nodes":[{"pos":[0,284],"content":"`true` if <code>obj</code> is a <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> object and its <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property is equal to that of the current instance. The comparison is ordinal and case-sensitive.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;&lt;/xref&gt;</ph> object and its <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph> property is equal to that of the current instance.","pos":[0,238],"source":"`true` if <code>obj</code> is a <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> object and its <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property is equal to that of the current instance."},{"content":"The comparison is ordinal and case-sensitive.","pos":[239,284]}]}],"pos":[6171,6458],"yaml":true},{"content":"Returns a value that indicates whether two <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instances are equal.","nodes":[{"pos":[0,131],"content":"Returns a value that indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;&lt;/xref&gt;</ph> instances are equal.","source":"Returns a value that indicates whether two <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instances are equal."}],"pos":[8001,8133],"yaml":true},{"content":"The object to compare with the current instance.","nodes":[{"pos":[0,48],"content":"The object to compare with the current instance.","nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]}],"pos":[8341,8390],"yaml":true},{"content":"`true` if the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>other</code> is equal to that of the current instance. The comparison is ordinal and case-sensitive.","nodes":[{"pos":[0,205],"content":"`true` if the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>other</code> is equal to that of the current instance. The comparison is ordinal and case-sensitive.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph> property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to that of the current instance.","pos":[0,159],"source":"`true` if the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>other</code> is equal to that of the current instance."},{"content":"The comparison is ordinal and case-sensitive.","pos":[160,205]}]}],"pos":[8448,8656],"yaml":true},{"content":"Returns the hash code for the current instance.","nodes":[{"pos":[0,47],"content":"Returns the hash code for the current instance.","nodes":[{"content":"Returns the hash code for the current instance.","pos":[0,47]}]}],"pos":[10034,10082],"yaml":true},{"content":"The hash code for the current instance, or 0 if no <code>name</code> value was supplied to the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> constructor.","nodes":[{"pos":[0,175],"content":"The hash code for the current instance, or 0 if no <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> value was supplied to the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;&lt;/xref&gt;</ph> constructor.","source":"The hash code for the current instance, or 0 if no <code>name</code> value was supplied to the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> constructor."}],"pos":[10216,10392],"yaml":true},{"content":"Gets a hash algorithm name that represents \"MD5\".","nodes":[{"pos":[0,49],"content":"Gets a hash algorithm name that represents \"MD5\".","nodes":[{"content":"Gets a hash algorithm name that represents \"MD5\".","pos":[0,49]}]}],"pos":[11723,11773],"yaml":true},{"content":"A hash algorithm name that represents \"MD5\".","nodes":[{"pos":[0,44],"content":"A hash algorithm name that represents \"MD5\".","nodes":[{"content":"A hash algorithm name that represents \"MD5\".","pos":[0,44]}]}],"pos":[11960,12005],"yaml":true},{"content":"Gets the underlying string representation of the algorithm name.","nodes":[{"pos":[0,64],"content":"Gets the underlying string representation of the algorithm name.","nodes":[{"content":"Gets the underlying string representation of the algorithm name.","pos":[0,64]}]}],"pos":[13334,13399],"yaml":true},{"content":"The string representation of the algorithm name, or `null` or <xref href=\"System.String.Empty\"></xref> if no hash algorithm is available.","nodes":[{"pos":[0,137],"content":"The string representation of the algorithm name, or <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph> if no hash algorithm is available.","source":"The string representation of the algorithm name, or `null` or <xref href=\"System.String.Empty\"></xref> if no hash algorithm is available."}],"pos":[13507,13645],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are equal.","nodes":[{"pos":[0,119],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;&lt;/xref&gt;</ph> objects are equal.","source":"Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are equal."}],"pos":[15416,15536],"yaml":true},{"content":"The <xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.","nodes":[{"pos":[0,192],"content":"The <xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.HashAlgorithmName&gt;</ph> values.","pos":[0,192],"source":"The <xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values."}]}],"pos":[15547,15740],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[16012,16041],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[16135,16165],"yaml":true},{"content":"`true` if both <code>left</code> and <code>right</code> have the same <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> value; otherwise, `false`.","nodes":[{"pos":[0,169],"content":"<ph id=\"ph1\">`true`</ph> if both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept> have the same <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph> value; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if both <code>left</code> and <code>right</code> have the same <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> value; otherwise, `false`."}],"pos":[16223,16395],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are not equal.","nodes":[{"pos":[0,123],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;&lt;/xref&gt;</ph> objects are not equal.","source":"Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are not equal."}],"pos":[18185,18309],"yaml":true},{"content":"The <xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.","nodes":[{"pos":[0,196],"content":"The <xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.HashAlgorithmName&gt;</ph> values.","pos":[0,196],"source":"The <xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values."}]}],"pos":[18320,18517],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[18791,18820],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[18914,18944],"yaml":true},{"content":"`true` if both <code>left</code> and <code>right</code> do not have the same <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> value; otherwise, `false`.","nodes":[{"pos":[0,176],"content":"<ph id=\"ph1\">`true`</ph> if both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept> do not have the same <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph> value; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if both <code>left</code> and <code>right</code> do not have the same <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> value; otherwise, `false`."}],"pos":[19002,19181],"yaml":true},{"content":"Gets a hash algorithm name that represents \"SHA1\".","nodes":[{"pos":[0,50],"content":"Gets a hash algorithm name that represents \"SHA1\".","nodes":[{"content":"Gets a hash algorithm name that represents \"SHA1\".","pos":[0,50]}]}],"pos":[20520,20571],"yaml":true},{"content":"A hash algorithm name that represents \"SHA1\".","nodes":[{"pos":[0,45],"content":"A hash algorithm name that represents \"SHA1\".","nodes":[{"content":"A hash algorithm name that represents \"SHA1\".","pos":[0,45]}]}],"pos":[20759,20805],"yaml":true},{"content":"Gets a hash algorithm name that represents \"SHA256\".","nodes":[{"pos":[0,52],"content":"Gets a hash algorithm name that represents \"SHA256\".","nodes":[{"content":"Gets a hash algorithm name that represents \"SHA256\".","pos":[0,52]}]}],"pos":[22147,22200],"yaml":true},{"content":"A hash algorithm name that represents \"SHA256\".","nodes":[{"pos":[0,47],"content":"A hash algorithm name that represents \"SHA256\".","nodes":[{"content":"A hash algorithm name that represents \"SHA256\".","pos":[0,47]}]}],"pos":[22390,22438],"yaml":true},{"content":"Gets a hash algorithm name that represents \"SHA384\".","nodes":[{"pos":[0,52],"content":"Gets a hash algorithm name that represents \"SHA384\".","nodes":[{"content":"Gets a hash algorithm name that represents \"SHA384\".","pos":[0,52]}]}],"pos":[23782,23835],"yaml":true},{"content":"A hash algorithm name that represents \"SHA384\".","nodes":[{"pos":[0,47],"content":"A hash algorithm name that represents \"SHA384\".","nodes":[{"content":"A hash algorithm name that represents \"SHA384\".","pos":[0,47]}]}],"pos":[24025,24073],"yaml":true},{"content":"Gets a hash algorithm name that represents \"SHA512\".","nodes":[{"pos":[0,52],"content":"Gets a hash algorithm name that represents \"SHA512\".","nodes":[{"content":"Gets a hash algorithm name that represents \"SHA512\".","pos":[0,52]}]}],"pos":[25417,25470],"yaml":true},{"content":"A hash algorithm name that represents \"SHA512\".","nodes":[{"pos":[0,47],"content":"A hash algorithm name that represents \"SHA512\".","nodes":[{"content":"A hash algorithm name that represents \"SHA512\".","pos":[0,47]}]}],"pos":[25660,25708],"yaml":true},{"content":"Returns the string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance.","nodes":[{"pos":[0,126],"content":"Returns the string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns the string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance."}],"pos":[27068,27195],"yaml":true},{"content":"The <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned. Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"pos":[0,260],"content":"The <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned. Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"content":"The <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned. Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>.","pos":[0,260],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name%2A&gt;</ph> property, if it has been assigned.","pos":[0,185],"source":"The <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned."},{"content":"Otherwise, it returns <ph id=\"ph1\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.","pos":[186,260],"source":" Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>."}]}]}],"pos":[27206,27467],"yaml":true,"extradata":"MT"},{"content":"The string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance.","nodes":[{"pos":[0,118],"content":"The string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName\"&gt;&lt;/xref&gt;</ph> instance.","source":"The string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance."}],"pos":[27602,27721],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.HashAlgorithmName\n  commentId: T:System.Security.Cryptography.HashAlgorithmName\n  id: HashAlgorithmName\n  children:\n  - System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)\n  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)\n  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.HashAlgorithmName.GetHashCode\n  - System.Security.Cryptography.HashAlgorithmName.MD5\n  - System.Security.Cryptography.HashAlgorithmName.Name\n  - System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.HashAlgorithmName.SHA1\n  - System.Security.Cryptography.HashAlgorithmName.SHA256\n  - System.Security.Cryptography.HashAlgorithmName.SHA384\n  - System.Security.Cryptography.HashAlgorithmName.SHA512\n  - System.Security.Cryptography.HashAlgorithmName.ToString\n  langs:\n  - csharp\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n  type: Struct\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Specifies the name of a cryptographic hash algorithm.\n  remarks: \"The <xref:System.Security.Cryptography.HashAlgorithmName> structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string. Hash algorithm names are case-sensitive.  \\n  \\n Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).  \\n  \\n Asymmetric algorithms implemented using other technologies:  \\n  \\n-   Must recognize at least \\\"MD5\\\", \\\"SHA1\\\", \\\"SHA256\\\", \\\"SHA384\\\", and \\\"SHA512\\\".  \\n  \\n-   Should recognize additional CNG identifiers for any additional hash algorithms that they support.\"\n  syntax:\n    content: 'public struct HashAlgorithmName : IEquatable<System.Security.Cryptography.HashAlgorithmName>'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable{System.Security.Cryptography.HashAlgorithmName}\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)\n  commentId: M:System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: HashAlgorithmName(String)\n  nameWithType: HashAlgorithmName.HashAlgorithmName(String)\n  fullName: HashAlgorithmName.HashAlgorithmName(String)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> structure with a custom name.\n  remarks: The constructor performs no validation on `name`.\n  syntax:\n    content: public HashAlgorithmName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The custom hash algorithm name.\n  overload: System.Security.Cryptography.HashAlgorithmName.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)\n  commentId: M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: HashAlgorithmName.Equals(Object)\n  fullName: HashAlgorithmName.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Returns a value that indicates whether the current instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is a <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> object and its <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property is equal to that of the current instance. The comparison is ordinal and case-sensitive.'\n  overload: System.Security.Cryptography.HashAlgorithmName.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)\n  commentId: M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)\n  id: Equals(System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: Equals(HashAlgorithmName)\n  nameWithType: HashAlgorithmName.Equals(HashAlgorithmName)\n  fullName: HashAlgorithmName.Equals(HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Returns a value that indicates whether two <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instances are equal.\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.HashAlgorithmName other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>other</code> is equal to that of the current instance. The comparison is ordinal and case-sensitive.'\n  overload: System.Security.Cryptography.HashAlgorithmName.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode\n  commentId: M:System.Security.Cryptography.HashAlgorithmName.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: HashAlgorithmName.GetHashCode()\n  fullName: HashAlgorithmName.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Returns the hash code for the current instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current instance, or 0 if no <code>name</code> value was supplied to the <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> constructor.\n  overload: System.Security.Cryptography.HashAlgorithmName.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.MD5\n  commentId: P:System.Security.Cryptography.HashAlgorithmName.MD5\n  id: MD5\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: MD5\n  nameWithType: HashAlgorithmName.MD5\n  fullName: HashAlgorithmName.MD5\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"MD5\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName MD5 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"MD5\".\n  overload: System.Security.Cryptography.HashAlgorithmName.MD5*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.Name\n  commentId: P:System.Security.Cryptography.HashAlgorithmName.Name\n  id: Name\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: Name\n  nameWithType: HashAlgorithmName.Name\n  fullName: HashAlgorithmName.Name\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets the underlying string representation of the algorithm name.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The string representation of the algorithm name, or `null` or <xref href=\"System.String.Empty\"></xref> if no hash algorithm is available.\n  overload: System.Security.Cryptography.HashAlgorithmName.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  commentId: M:System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  id: op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: op_Equality(HashAlgorithmName, HashAlgorithmName)\n  nameWithType: HashAlgorithmName.op_Equality(HashAlgorithmName, HashAlgorithmName)\n  fullName: HashAlgorithmName.op_Equality(HashAlgorithmName, HashAlgorithmName)\n  type: Operator\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are equal.\n  remarks: The <xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The first object to compare.\n    - id: right\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if both <code>left</code> and <code>right</code> have the same <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> value; otherwise, `false`.'\n  overload: System.Security.Cryptography.HashAlgorithmName.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  commentId: M:System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  id: op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: op_Inequality(HashAlgorithmName, HashAlgorithmName)\n  nameWithType: HashAlgorithmName.op_Inequality(HashAlgorithmName, HashAlgorithmName)\n  fullName: HashAlgorithmName.op_Inequality(HashAlgorithmName, HashAlgorithmName)\n  type: Operator\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Determines whether two specified <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> objects are not equal.\n  remarks: The <xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The first object to compare.\n    - id: right\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if both <code>left</code> and <code>right</code> do not have the same <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> value; otherwise, `false`.'\n  overload: System.Security.Cryptography.HashAlgorithmName.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA1\n  commentId: P:System.Security.Cryptography.HashAlgorithmName.SHA1\n  id: SHA1\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: SHA1\n  nameWithType: HashAlgorithmName.SHA1\n  fullName: HashAlgorithmName.SHA1\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"SHA1\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName SHA1 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"SHA1\".\n  overload: System.Security.Cryptography.HashAlgorithmName.SHA1*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA256\n  commentId: P:System.Security.Cryptography.HashAlgorithmName.SHA256\n  id: SHA256\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: SHA256\n  nameWithType: HashAlgorithmName.SHA256\n  fullName: HashAlgorithmName.SHA256\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"SHA256\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName SHA256 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"SHA256\".\n  overload: System.Security.Cryptography.HashAlgorithmName.SHA256*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA384\n  commentId: P:System.Security.Cryptography.HashAlgorithmName.SHA384\n  id: SHA384\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: SHA384\n  nameWithType: HashAlgorithmName.SHA384\n  fullName: HashAlgorithmName.SHA384\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"SHA384\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName SHA384 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"SHA384\".\n  overload: System.Security.Cryptography.HashAlgorithmName.SHA384*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA512\n  commentId: P:System.Security.Cryptography.HashAlgorithmName.SHA512\n  id: SHA512\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: SHA512\n  nameWithType: HashAlgorithmName.SHA512\n  fullName: HashAlgorithmName.SHA512\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a hash algorithm name that represents \"SHA512\".\n  syntax:\n    content: public static System.Security.Cryptography.HashAlgorithmName SHA512 { get; }\n    return:\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: A hash algorithm name that represents \"SHA512\".\n  overload: System.Security.Cryptography.HashAlgorithmName.SHA512*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.HashAlgorithmName.ToString\n  commentId: M:System.Security.Cryptography.HashAlgorithmName.ToString\n  id: ToString\n  parent: System.Security.Cryptography.HashAlgorithmName\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: HashAlgorithmName.ToString()\n  fullName: HashAlgorithmName.ToString()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Returns the string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance.\n  remarks: The <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned. Otherwise, it returns <xref:System.String.Empty?displayProperty=fullName>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the current <xref href=\"System.Security.Cryptography.HashAlgorithmName\"></xref> instance.\n  overload: System.Security.Cryptography.HashAlgorithmName.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: HashAlgorithmName(String)\n  nameWithType: HashAlgorithmName.HashAlgorithmName(String)\n  fullName: HashAlgorithmName.HashAlgorithmName(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: HashAlgorithmName.Equals(Object)\n  fullName: HashAlgorithmName.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Equals(HashAlgorithmName)\n  nameWithType: HashAlgorithmName.Equals(HashAlgorithmName)\n  fullName: HashAlgorithmName.Equals(HashAlgorithmName)\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: HashAlgorithmName.GetHashCode()\n  fullName: HashAlgorithmName.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.HashAlgorithmName.MD5\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: MD5\n  nameWithType: HashAlgorithmName.MD5\n  fullName: HashAlgorithmName.MD5\n- uid: System.Security.Cryptography.HashAlgorithmName.Name\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Name\n  nameWithType: HashAlgorithmName.Name\n  fullName: HashAlgorithmName.Name\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: op_Equality(HashAlgorithmName, HashAlgorithmName)\n  nameWithType: HashAlgorithmName.op_Equality(HashAlgorithmName, HashAlgorithmName)\n  fullName: HashAlgorithmName.op_Equality(HashAlgorithmName, HashAlgorithmName)\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: op_Inequality(HashAlgorithmName, HashAlgorithmName)\n  nameWithType: HashAlgorithmName.op_Inequality(HashAlgorithmName, HashAlgorithmName)\n  fullName: HashAlgorithmName.op_Inequality(HashAlgorithmName, HashAlgorithmName)\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA1\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA1\n  nameWithType: HashAlgorithmName.SHA1\n  fullName: HashAlgorithmName.SHA1\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA256\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA256\n  nameWithType: HashAlgorithmName.SHA256\n  fullName: HashAlgorithmName.SHA256\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA384\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA384\n  nameWithType: HashAlgorithmName.SHA384\n  fullName: HashAlgorithmName.SHA384\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA512\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA512\n  nameWithType: HashAlgorithmName.SHA512\n  fullName: HashAlgorithmName.SHA512\n- uid: System.Security.Cryptography.HashAlgorithmName.ToString\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: ToString()\n  nameWithType: HashAlgorithmName.ToString()\n  fullName: HashAlgorithmName.ToString()\n- uid: System.Security.Cryptography.HashAlgorithmName.#ctor*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName.HashAlgorithmName\n  fullName: HashAlgorithmName.HashAlgorithmName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.Equals*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Equals\n  nameWithType: HashAlgorithmName.Equals\n  fullName: HashAlgorithmName.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: GetHashCode\n  nameWithType: HashAlgorithmName.GetHashCode\n  fullName: HashAlgorithmName.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.MD5*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: MD5\n  nameWithType: HashAlgorithmName.MD5\n  fullName: HashAlgorithmName.MD5\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.Name*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: Name\n  nameWithType: HashAlgorithmName.Name\n  fullName: HashAlgorithmName.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: op_Equality\n  nameWithType: HashAlgorithmName.op_Equality\n  fullName: HashAlgorithmName.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: op_Inequality\n  nameWithType: HashAlgorithmName.op_Inequality\n  fullName: HashAlgorithmName.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA1*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA1\n  nameWithType: HashAlgorithmName.SHA1\n  fullName: HashAlgorithmName.SHA1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA256*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA256\n  nameWithType: HashAlgorithmName.SHA256\n  fullName: HashAlgorithmName.SHA256\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA384*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA384\n  nameWithType: HashAlgorithmName.SHA384\n  fullName: HashAlgorithmName.SHA384\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.SHA512*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: SHA512\n  nameWithType: HashAlgorithmName.SHA512\n  fullName: HashAlgorithmName.SHA512\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.Security.Cryptography.HashAlgorithmName.ToString*\n  parent: System.Security.Cryptography.HashAlgorithmName\n  isExternal: false\n  name: ToString\n  nameWithType: HashAlgorithmName.ToString\n  fullName: HashAlgorithmName.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/HashAlgorithmName.xml\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Security.Cryptography.HashAlgorithmName}\n  parent: System\n  isExternal: false\n  name: IEquatable<HashAlgorithmName>\n  nameWithType: IEquatable<HashAlgorithmName>\n  fullName: System.IEquatable<System.Security.Cryptography.HashAlgorithmName>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Cryptography.HashAlgorithmName\n    name: HashAlgorithmName\n    nameWithType: HashAlgorithmName\n    fullName: System.Security.Cryptography.HashAlgorithmName\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}