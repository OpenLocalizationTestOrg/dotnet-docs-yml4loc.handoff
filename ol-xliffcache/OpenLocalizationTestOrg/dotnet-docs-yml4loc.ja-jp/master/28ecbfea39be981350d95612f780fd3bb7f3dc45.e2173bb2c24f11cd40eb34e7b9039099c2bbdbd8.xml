{"nodes":[{"content":"Provides enumeration support for the local values of any dependency properties that exist on a <xref href=\"System.Windows.DependencyObject\"></xref>.","nodes":[{"pos":[0,148],"content":"Provides enumeration support for the local values of any dependency properties that exist on a <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;&lt;/xref&gt;</ph>.","source":"Provides enumeration support for the local values of any dependency properties that exist on a <xref href=\"System.Windows.DependencyObject\"></xref>."}],"pos":[1021,1170],"yaml":true},{"content":"A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally. Examples of other property system determinants that are not local values are values set through styles, or dependency property default values. For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  \n  \n A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface. A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.  \n  \n Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values. If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations. Also, the enumerator view is a snapshot. A change to the collection is not guaranteed to be thread safe, and no lock is enforced. Other threads still have free access to the local values from a context other than the enumerator.  \n  \n Use this type if you have operations in your class where it is important to know whether a property's value came from a local value. For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.","nodes":[{"pos":[0,634],"content":"A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally. Examples of other property system determinants that are not local values are values set through styles, or dependency property default values. For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).","nodes":[{"content":"A <bpt id=\"p1\">*</bpt>local value<ept id=\"p1\">*</ept> is a value for a dependency property that was set directly on a dependency property, by calling <ph id=\"ph1\">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph>, or more typically by using the set accessor of a <ph id=\"ph2\">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> property wrapper that calls <ph id=\"ph3\">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> internally.","pos":[0,363],"source":"A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally."},{"content":"Examples of other property system determinants that are not local values are values set through styles, or dependency property default values.","pos":[364,506]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Dependency Property Value Precedence<ept id=\"p1\">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.","pos":[507,634],"source":" For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)."}]},{"pos":[641,1053],"content":"A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface. A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.","nodes":[{"content":"A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface. A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.","pos":[0,412],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> is returned by the <ph id=\"ph2\">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph> method and implements the <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.","pos":[0,204],"source":"A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface."},{"content":"A public <ph id=\"ph1\">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> constructor does not exist; therefore, you must call <ph id=\"ph2\">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph> to obtain an instance of this class.","pos":[205,412],"source":" A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class."}]}]},{"pos":[1060,1722],"content":"Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values. If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations. Also, the enumerator view is a snapshot. A change to the collection is not guaranteed to be thread safe, and no lock is enforced. Other threads still have free access to the local values from a context other than the enumerator.","nodes":[{"content":"Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values. If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations. Also, the enumerator view is a snapshot. A change to the collection is not guaranteed to be thread safe, and no lock is enforced. Other threads still have free access to the local values from a context other than the enumerator.","pos":[0,662],"nodes":[{"content":"Do not modify local values (by calling <ph id=\"ph1\">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph>) while enumerating local values.","pos":[0,178],"source":"Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values."},{"content":"If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator&gt;</ph> implementations.","pos":[179,433],"source":" If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations."},{"content":"Also, the enumerator view is a snapshot.","pos":[434,474]},{"content":"A change to the collection is not guaranteed to be thread safe, and no lock is enforced.","pos":[475,563]},{"content":"Other threads still have free access to the local values from a context other than the enumerator.","pos":[564,662]}]}]},{"pos":[1729,2041],"content":"Use this type if you have operations in your class where it is important to know whether a property's value came from a local value. For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.","nodes":[{"content":"Use this type if you have operations in your class where it is important to know whether a property's value came from a local value. For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.","pos":[0,312],"nodes":[{"content":"Use this type if you have operations in your class where it is important to know whether a property's value came from a local value.","pos":[0,132]},{"content":"For example, use this type in an <ph id=\"ph1\">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implementation, or where you want to query the metadata on all locally set properties.","pos":[133,312],"source":" For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties."}]}]}],"pos":[1181,3231],"yaml":true,"extradata":"MT"},{"content":"Gets the number of items that are represented in the collection.","nodes":[{"pos":[0,64],"content":"Gets the number of items that are represented in the collection.","nodes":[{"content":"Gets the number of items that are represented in the collection.","pos":[0,64]}]}],"pos":[4323,4388],"yaml":true},{"content":"This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.","nodes":[{"pos":[0,112],"content":"This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.","nodes":[{"content":"This property is not a defined member of <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator&gt;</ph> but is provided as a convenience.","pos":[0,112],"source":"This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience."}]}],"pos":[4399,4512],"yaml":true,"extradata":"MT"},{"content":"The number of items in the collection.","nodes":[{"pos":[0,38],"content":"The number of items in the collection.","nodes":[{"content":"The number of items in the collection.","pos":[0,38]}]}],"pos":[4617,4656],"yaml":true},{"content":"Gets the current element in the collection.","nodes":[{"pos":[0,43],"content":"Gets the current element in the collection.","nodes":[{"content":"Gets the current element in the collection.","pos":[0,43]}]}],"pos":[5636,5680],"yaml":true},{"content":"This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.","nodes":[{"pos":[0,115],"content":"This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.","nodes":[{"content":"This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.","pos":[0,115]}]}],"pos":[5691,5807],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.Windows.LocalValueEntry\"></xref> in the collection.","nodes":[{"pos":[0,82],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Windows.LocalValueEntry\"&gt;&lt;/xref&gt;</ph> in the collection.","source":"The current <xref href=\"System.Windows.LocalValueEntry\"></xref> in the collection."}],"pos":[5959,6042],"yaml":true},{"content":"Determines whether the provided <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equivalent to this <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.","nodes":[{"pos":[0,168],"content":"Determines whether the provided <ph id=\"ph1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph> is equivalent to this <ph id=\"ph2\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the provided <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equivalent to this <xref href=\"System.Windows.LocalValueEnumerator\"></xref>."}],"pos":[7063,7232],"yaml":true},{"content":"This implementation supports reference equality only.","nodes":[{"pos":[0,53],"content":"This implementation supports reference equality only.","nodes":[{"content":"This implementation supports reference equality only.","pos":[0,53]}]}],"pos":[7243,7297],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.LocalValueEnumerator\"></xref> to compare with the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.","nodes":[{"pos":[0,146],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.LocalValueEnumerator\"></xref> to compare with the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>."}],"pos":[7437,7584],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,182],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, `false`."}],"pos":[7642,7827],"yaml":true},{"content":"Returns a hash code for the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.","nodes":[{"pos":[0,93],"content":"Returns a hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a hash code for the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>."}],"pos":[8836,8930],"yaml":true},{"content":"A 32-bit integer hash code.","nodes":[{"pos":[0,27],"content":"A 32-bit integer hash code.","nodes":[{"content":"A 32-bit integer hash code.","pos":[0,27]}]}],"pos":[9064,9092],"yaml":true},{"content":"Advances the enumerator to the next element of the collection.","nodes":[{"pos":[0,62],"content":"Advances the enumerator to the next element of the collection.","nodes":[{"content":"Advances the enumerator to the next element of the collection.","pos":[0,62]}]}],"pos":[10088,10151],"yaml":true},{"content":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">`true`</ph> if the enumerator was successfully advanced to the next element; <ph id=\"ph2\">`false`</ph> if the enumerator has passed the end of the collection.","source":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection."}],"pos":[10276,10414],"yaml":true},{"content":"Compares whether two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects are the same.","nodes":[{"pos":[0,109],"content":"Compares whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph> objects are the same.","source":"Compares whether two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects are the same."}],"pos":[11750,11860],"yaml":true},{"content":"This implementation supports reference equality only.","nodes":[{"pos":[0,53],"content":"This implementation supports reference equality only.","nodes":[{"content":"This implementation supports reference equality only.","pos":[0,53]}]}],"pos":[11871,11925],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[12163,12192],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[12274,12304],"yaml":true},{"content":"`true` if the <code>obj1</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the <code>obj2</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,198],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj1</ph><ept id=\"p1\">&lt;/code&gt;</ept><ph id=\"ph3\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph> is equal to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">obj2</ph><ept id=\"p2\">&lt;/code&gt;</ept><ph id=\"ph5\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if the <code>obj1</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the <code>obj2</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, `false`."}],"pos":[12362,12563],"yaml":true},{"content":"Compares two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects to determine whether they are not the same.","nodes":[{"pos":[0,131],"content":"Compares two specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.LocalValueEnumerator\"&gt;&lt;/xref&gt;</ph> objects to determine whether they are not the same.","source":"Compares two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects to determine whether they are not the same."}],"pos":[13936,14068],"yaml":true},{"content":"This implementation supports reference equality only.","nodes":[{"pos":[0,53],"content":"This implementation supports reference equality only.","nodes":[{"content":"This implementation supports reference equality only.","pos":[0,53]}]}],"pos":[14079,14133],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[14373,14402],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[14484,14514],"yaml":true},{"content":"`true` if the instances are not equal; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the instances are not equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the instances are not equal; otherwise, `false`."}],"pos":[14572,14633],"yaml":true},{"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","nodes":[{"pos":[0,97],"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","nodes":[{"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","pos":[0,97]}]}],"pos":[15591,15689],"yaml":true},{"content":"For a description of this members, see <xref href=\"System.Collections.IEnumerator.Current\"></xref>.","nodes":[{"pos":[0,99],"content":"For a description of this members, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator.Current\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this members, see <xref href=\"System.Collections.IEnumerator.Current\"></xref>."}],"pos":[16876,16976],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.","nodes":[{"pos":[0,203],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.","pos":[0,203],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.","pos":[60,203],"source":" It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface."}]}]}],"pos":[16987,17191],"yaml":true,"extradata":"MT"},{"content":"The current element in the collection.","nodes":[{"pos":[0,38],"content":"The current element in the collection.","nodes":[{"content":"The current element in the collection.","pos":[0,38]}]}],"pos":[17326,17365],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.LocalValueEnumerator\n  commentId: T:System.Windows.LocalValueEnumerator\n  id: LocalValueEnumerator\n  children:\n  - System.Windows.LocalValueEnumerator.Count\n  - System.Windows.LocalValueEnumerator.Current\n  - System.Windows.LocalValueEnumerator.Equals(System.Object)\n  - System.Windows.LocalValueEnumerator.GetHashCode\n  - System.Windows.LocalValueEnumerator.MoveNext\n  - System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  - System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  - System.Windows.LocalValueEnumerator.Reset\n  - System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current\n  langs:\n  - csharp\n  name: LocalValueEnumerator\n  nameWithType: LocalValueEnumerator\n  fullName: System.Windows.LocalValueEnumerator\n  type: Struct\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Provides enumeration support for the local values of any dependency properties that exist on a <xref href=\"System.Windows.DependencyObject\"></xref>.\n  remarks: \"A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally. Examples of other property system determinants that are not local values are values set through styles, or dependency property default values. For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  \\n  \\n A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface. A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.  \\n  \\n Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values. If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations. Also, the enumerator view is a snapshot. A change to the collection is not guaranteed to be thread safe, and no lock is enforced. Other threads still have free access to the local values from a context other than the enumerator.  \\n  \\n Use this type if you have operations in your class where it is important to know whether a property's value came from a local value. For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.\"\n  syntax:\n    content: 'public struct LocalValueEnumerator : System.Collections.IEnumerator'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IEnumerator\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LocalValueEnumerator.Count\n  commentId: P:System.Windows.LocalValueEnumerator.Count\n  id: Count\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: Count\n  nameWithType: LocalValueEnumerator.Count\n  fullName: LocalValueEnumerator.Count\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the number of items that are represented in the collection.\n  remarks: This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of items in the collection.\n  overload: System.Windows.LocalValueEnumerator.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LocalValueEnumerator.Current\n  commentId: P:System.Windows.LocalValueEnumerator.Current\n  id: Current\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: LocalValueEnumerator.Current\n  fullName: LocalValueEnumerator.Current\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the current element in the collection.\n  remarks: This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.\n  syntax:\n    content: public System.Windows.LocalValueEntry Current { get; }\n    return:\n      type: System.Windows.LocalValueEntry\n      description: The current <xref href=\"System.Windows.LocalValueEntry\"></xref> in the collection.\n  overload: System.Windows.LocalValueEnumerator.Current*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)\n  commentId: M:System.Windows.LocalValueEnumerator.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: LocalValueEnumerator.Equals(Object)\n  fullName: LocalValueEnumerator.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether the provided <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equivalent to this <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.\n  remarks: This implementation supports reference equality only.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.Windows.LocalValueEnumerator\"></xref> to compare with the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, `false`.'\n  overload: System.Windows.LocalValueEnumerator.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LocalValueEnumerator.GetHashCode\n  commentId: M:System.Windows.LocalValueEnumerator.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: LocalValueEnumerator.GetHashCode()\n  fullName: LocalValueEnumerator.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Returns a hash code for the current <xref href=\"System.Windows.LocalValueEnumerator\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit integer hash code.\n  overload: System.Windows.LocalValueEnumerator.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LocalValueEnumerator.MoveNext\n  commentId: M:System.Windows.LocalValueEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: LocalValueEnumerator.MoveNext()\n  fullName: LocalValueEnumerator.MoveNext()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Advances the enumerator to the next element of the collection.\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'\n  overload: System.Windows.LocalValueEnumerator.MoveNext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  commentId: M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  id: op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: op_Equality(LocalValueEnumerator, LocalValueEnumerator)\n  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator, LocalValueEnumerator)\n  fullName: LocalValueEnumerator.op_Equality(LocalValueEnumerator, LocalValueEnumerator)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares whether two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects are the same.\n  remarks: This implementation supports reference equality only.\n  syntax:\n    content: public static bool op_Equality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);\n    parameters:\n    - id: obj1\n      type: System.Windows.LocalValueEnumerator\n      description: The first object to compare.\n    - id: obj2\n      type: System.Windows.LocalValueEnumerator\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>obj1</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref> is equal to the <code>obj2</code><xref href=\"System.Windows.LocalValueEnumerator\"></xref>; otherwise, `false`.'\n  overload: System.Windows.LocalValueEnumerator.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  commentId: M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  id: op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: op_Inequality(LocalValueEnumerator, LocalValueEnumerator)\n  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator, LocalValueEnumerator)\n  fullName: LocalValueEnumerator.op_Inequality(LocalValueEnumerator, LocalValueEnumerator)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Compares two specified <xref href=\"System.Windows.LocalValueEnumerator\"></xref> objects to determine whether they are not the same.\n  remarks: This implementation supports reference equality only.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);\n    parameters:\n    - id: obj1\n      type: System.Windows.LocalValueEnumerator\n      description: The first object to compare.\n    - id: obj2\n      type: System.Windows.LocalValueEnumerator\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the instances are not equal; otherwise, `false`.'\n  overload: System.Windows.LocalValueEnumerator.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LocalValueEnumerator.Reset\n  commentId: M:System.Windows.LocalValueEnumerator.Reset\n  id: Reset\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: LocalValueEnumerator.Reset()\n  fullName: LocalValueEnumerator.Reset()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Sets the enumerator to its initial position, which is before the first element in the collection.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Windows.LocalValueEnumerator.Reset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Windows.LocalValueEnumerator\n  langs:\n  - csharp\n  name: IEnumerator.Current\n  nameWithType: LocalValueEnumerator.IEnumerator.Current\n  fullName: LocalValueEnumerator.IEnumerator.Current\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: For a description of this members, see <xref href=\"System.Collections.IEnumerator.Current\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: The current element in the collection.\n  overload: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Windows.LocalValueEnumerator.Count\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Count\n  nameWithType: LocalValueEnumerator.Count\n  fullName: LocalValueEnumerator.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.LocalValueEnumerator.Current\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Current\n  nameWithType: LocalValueEnumerator.Current\n  fullName: LocalValueEnumerator.Current\n- uid: System.Windows.LocalValueEntry\n  parent: System.Windows\n  isExternal: false\n  name: LocalValueEntry\n  nameWithType: LocalValueEntry\n  fullName: System.Windows.LocalValueEntry\n- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: LocalValueEnumerator.Equals(Object)\n  fullName: LocalValueEnumerator.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.LocalValueEnumerator.GetHashCode\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: LocalValueEnumerator.GetHashCode()\n  fullName: LocalValueEnumerator.GetHashCode()\n- uid: System.Windows.LocalValueEnumerator.MoveNext\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: LocalValueEnumerator.MoveNext()\n  fullName: LocalValueEnumerator.MoveNext()\n- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: op_Equality(LocalValueEnumerator, LocalValueEnumerator)\n  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator, LocalValueEnumerator)\n  fullName: LocalValueEnumerator.op_Equality(LocalValueEnumerator, LocalValueEnumerator)\n- uid: System.Windows.LocalValueEnumerator\n  parent: System.Windows\n  isExternal: false\n  name: LocalValueEnumerator\n  nameWithType: LocalValueEnumerator\n  fullName: System.Windows.LocalValueEnumerator\n- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: op_Inequality(LocalValueEnumerator, LocalValueEnumerator)\n  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator, LocalValueEnumerator)\n  fullName: LocalValueEnumerator.op_Inequality(LocalValueEnumerator, LocalValueEnumerator)\n- uid: System.Windows.LocalValueEnumerator.Reset\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Reset()\n  nameWithType: LocalValueEnumerator.Reset()\n  fullName: LocalValueEnumerator.Reset()\n- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: IEnumerator.Current\n  nameWithType: LocalValueEnumerator.IEnumerator.Current\n  fullName: LocalValueEnumerator.IEnumerator.Current\n- uid: System.Windows.LocalValueEnumerator.Count*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Count\n  nameWithType: LocalValueEnumerator.Count\n  fullName: LocalValueEnumerator.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Windows.LocalValueEnumerator.Current*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Current\n  nameWithType: LocalValueEnumerator.Current\n  fullName: LocalValueEnumerator.Current\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Windows.LocalValueEnumerator.Equals*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Equals\n  nameWithType: LocalValueEnumerator.Equals\n  fullName: LocalValueEnumerator.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Windows.LocalValueEnumerator.GetHashCode*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: GetHashCode\n  nameWithType: LocalValueEnumerator.GetHashCode\n  fullName: LocalValueEnumerator.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Windows.LocalValueEnumerator.MoveNext*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: MoveNext\n  nameWithType: LocalValueEnumerator.MoveNext\n  fullName: LocalValueEnumerator.MoveNext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Windows.LocalValueEnumerator.op_Equality*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: op_Equality\n  nameWithType: LocalValueEnumerator.op_Equality\n  fullName: LocalValueEnumerator.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Windows.LocalValueEnumerator.op_Inequality*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: op_Inequality\n  nameWithType: LocalValueEnumerator.op_Inequality\n  fullName: LocalValueEnumerator.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Windows.LocalValueEnumerator.Reset*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: Reset\n  nameWithType: LocalValueEnumerator.Reset\n  fullName: LocalValueEnumerator.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*\n  parent: System.Windows.LocalValueEnumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current\n  fullName: LocalValueEnumerator.System.Collections.IEnumerator.Current\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LocalValueEnumerator.xml\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n"}