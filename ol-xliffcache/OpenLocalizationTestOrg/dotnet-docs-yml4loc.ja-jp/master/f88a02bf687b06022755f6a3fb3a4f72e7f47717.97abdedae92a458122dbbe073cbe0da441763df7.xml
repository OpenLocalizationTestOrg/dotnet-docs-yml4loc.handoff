{"nodes":[{"content":"Represents Digital Rights Management (DRM) information that is stored in an <xref href=\"System.IO.Packaging.EncryptedPackageEnvelope\"></xref>.","nodes":[{"pos":[0,142],"content":"Represents Digital Rights Management (DRM) information that is stored in an <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.EncryptedPackageEnvelope\"&gt;&lt;/xref&gt;</ph>.","source":"Represents Digital Rights Management (DRM) information that is stored in an <xref href=\"System.IO.Packaging.EncryptedPackageEnvelope\"></xref>."}],"pos":[1166,1309],"yaml":true},{"content":"<xref:System.IO.Packaging.RightsManagementInformation> provides access to the <xref:System.Security.RightsManagement.PublishLicense> and <xref:System.Security.RightsManagement.UseLicense> data stored in a rights managed protected <xref:System.IO.Packaging.Package>.","nodes":[{"pos":[0,265],"content":"<xref:System.IO.Packaging.RightsManagementInformation> provides access to the <xref:System.Security.RightsManagement.PublishLicense> and <xref:System.Security.RightsManagement.UseLicense> data stored in a rights managed protected <xref:System.IO.Packaging.Package>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> provides access to the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> data stored in a rights managed protected <ph id=\"ph4\">&lt;xref:System.IO.Packaging.Package&gt;</ph>.","pos":[0,265],"source":"<xref:System.IO.Packaging.RightsManagementInformation> provides access to the <xref:System.Security.RightsManagement.PublishLicense> and <xref:System.Security.RightsManagement.UseLicense> data stored in a rights managed protected <xref:System.IO.Packaging.Package>."}]}],"pos":[1320,1586],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the package's encrypted rights management data stream.","nodes":[{"pos":[0,154],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider\"&gt;&lt;/xref&gt;</ph> for accessing the package's encrypted rights management data stream.","source":"Gets or sets the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the package's encrypted rights management data stream."}],"pos":[4005,4160],"yaml":true},{"content":"The <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the rights management information.","nodes":[{"pos":[0,121],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider\"&gt;&lt;/xref&gt;</ph> for accessing the rights management information.","source":"The <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the rights management information."}],"pos":[5352,5474],"yaml":true},{"content":"Deletes the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user from the encrypted rights management data stream.","nodes":[{"pos":[0,147],"content":"Deletes the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> for a specified user from the encrypted rights management data stream.","source":"Deletes the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user from the encrypted rights management data stream."}],"pos":[6776,6924],"yaml":true},{"content":"The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> to be deleted.","nodes":[{"pos":[0,95],"content":"The user of the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> to be deleted.","source":"The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> to be deleted."}],"pos":[7142,7238],"yaml":true},{"content":"Returns a dictionary collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs from the encrypted rights management data stream.","nodes":[{"pos":[0,174],"content":"Returns a dictionary collection of user and <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> key/value pairs from the encrypted rights management data stream.","source":"Returns a dictionary collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs from the encrypted rights management data stream."}],"pos":[8407,8582],"yaml":true},{"content":"<xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A> only returns those use licenses that are currently embedded in the package.  It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.","nodes":[{"pos":[0,330],"content":"<xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A> only returns those use licenses that are currently embedded in the package.  It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.","nodes":[{"content":"<xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A> only returns those use licenses that are currently embedded in the package.  It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.","pos":[0,330],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A&gt;</ph> only returns those use licenses that are currently embedded in the package.","pos":[0,156],"source":"<xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A> only returns those use licenses that are currently embedded in the package."},{"content":"It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.","pos":[158,330]}]}]}],"pos":[8593,8924],"yaml":true,"extradata":"MT"},{"content":"A collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs that are contained in the rights managed protected package.","nodes":[{"pos":[0,165],"content":"A collection of user and <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> key/value pairs that are contained in the rights managed protected package.","source":"A collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs that are contained in the rights managed protected package."}],"pos":[9301,9467],"yaml":true},{"content":"Returns the embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> from the encrypted rights management data stream.","nodes":[{"pos":[0,139],"content":"Returns the embedded <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;&lt;/xref&gt;</ph> from the encrypted rights management data stream.","source":"Returns the embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> from the encrypted rights management data stream."}],"pos":[10618,10758],"yaml":true},{"content":"The embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>; or `null`, if the package does not contain a <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.","nodes":[{"pos":[0,197],"content":"The embedded <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;&lt;/xref&gt;</ph>; or <ph id=\"ph2\">`null`</ph>, if the package does not contain a <ph id=\"ph3\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;&lt;/xref&gt;</ph>.","source":"The embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>; or `null`, if the package does not contain a <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>."}],"pos":[11484,11682],"yaml":true},{"content":"The rights management information in this package cannot be read by the current version of this class.","nodes":[{"pos":[0,102],"content":"The rights management information in this package cannot be read by the current version of this class.","nodes":[{"content":"The rights management information in this package cannot be read by the current version of this class.","pos":[0,102]}]}],"pos":[11880,11983],"yaml":true},{"content":"Returns a specified user's embedded <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> from the encrypted rights management data stream.","nodes":[{"pos":[0,150],"content":"Returns a specified user's embedded <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> from the encrypted rights management data stream.","source":"Returns a specified user's embedded <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> from the encrypted rights management data stream."}],"pos":[13180,13331],"yaml":true},{"content":"The user or user group to return the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for.","nodes":[{"pos":[0,106],"content":"The user or user group to return the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> for.","source":"The user or user group to return the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for."}],"pos":[14097,14204],"yaml":true},{"content":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the specified user; or `null`, if the package does not contain a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> that matches the given <code>userKey</code>.","nodes":[{"pos":[0,247],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> for the specified user; or <ph id=\"ph2\">`null`</ph>, if the package does not contain a <ph id=\"ph3\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> that matches the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">userKey</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the specified user; or `null`, if the package does not contain a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> that matches the given <code>userKey</code>."}],"pos":[14291,14539],"yaml":true},{"content":"The <code>userKey</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">userKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>userKey</code> parameter is `null`."}],"pos":[14731,14777],"yaml":true},{"content":"The rights management information in this package cannot be read by the current version of this class.","nodes":[{"pos":[0,102],"content":"The rights management information in this package cannot be read by the current version of this class.","nodes":[{"content":"The rights management information in this package cannot be read by the current version of this class.","pos":[0,102]}]}],"pos":[14881,14984],"yaml":true},{"content":"Saves a given <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> to the encrypted rights management data stream.","nodes":[{"pos":[0,130],"content":"Saves a given <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.PublishLicense\"&gt;&lt;/xref&gt;</ph> to the encrypted rights management data stream.","source":"Saves a given <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> to the encrypted rights management data stream."}],"pos":[16223,16354],"yaml":true},{"content":"Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>.  Each call to <xref:System.IO.Packaging.RightsManagementInformation.SavePublishLicense%2A> will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.","nodes":[{"pos":[0,374],"content":"Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>.  Each call to <xref:System.IO.Packaging.RightsManagementInformation.SavePublishLicense%2A> will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.","nodes":[{"content":"Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>.  Each call to <xref:System.IO.Packaging.RightsManagementInformation.SavePublishLicense%2A> will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.","pos":[0,374],"nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> can contain only one <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.","pos":[0,133],"source":"Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>."},{"content":"Each call to <ph id=\"ph1\">&lt;xref:System.IO.Packaging.RightsManagementInformation.SavePublishLicense%2A&gt;</ph> will overwrite any prior <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph> contained in the <ph id=\"ph3\">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.","pos":[135,374],"source":"  Each call to <xref:System.IO.Packaging.RightsManagementInformation.SavePublishLicense%2A> will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>."}]}]}],"pos":[16365,16740],"yaml":true,"extradata":"MT"},{"content":"The publish license to store and embed in the package.","nodes":[{"pos":[0,54],"content":"The publish license to store and embed in the package.","nodes":[{"content":"The publish license to store and embed in the package.","pos":[0,54]}]}],"pos":[16980,17035],"yaml":true},{"content":"The <code>publishLicense</code> parameter is `null`.","nodes":[{"pos":[0,52],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">publishLicense</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>publishLicense</code> parameter is `null`."}],"pos":[17231,17284],"yaml":true},{"content":"The rights management information in this package cannot be read by the current version of this class.","nodes":[{"pos":[0,102],"content":"The rights management information in this package cannot be read by the current version of this class.","nodes":[{"content":"The rights management information in this package cannot be read by the current version of this class.","pos":[0,102]}]}],"pos":[17388,17491],"yaml":true},{"content":"Saves a given <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user to the encrypted rights management data stream.","nodes":[{"pos":[0,147],"content":"Saves a given <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> for a specified user to the encrypted rights management data stream.","source":"Saves a given <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user to the encrypted rights management data stream."}],"pos":[18856,19004],"yaml":true},{"content":"After the <xref:System.Security.RightsManagement.UseLicense> for the specified user has been saved, it can be retrieved through the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method and from the collection returned by <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>.  \n  \n A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users.  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>.  If <xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A> is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license.","nodes":[{"pos":[0,329],"content":"After the <xref:System.Security.RightsManagement.UseLicense> for the specified user has been saved, it can be retrieved through the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method and from the collection returned by <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>.","nodes":[{"content":"After the <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> for the specified user has been saved, it can be retrieved through the <ph id=\"ph2\">&lt;xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A&gt;</ph> method and from the collection returned by <ph id=\"ph3\">&lt;xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A&gt;</ph>.","pos":[0,329],"source":"After the <xref:System.Security.RightsManagement.UseLicense> for the specified user has been saved, it can be retrieved through the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method and from the collection returned by <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>."}]},{"pos":[336,920],"content":"A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users.  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>.  If <xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A> is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license.","nodes":[{"content":"A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users.  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>.  If <xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A> is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license.","pos":[0,584],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.IO.Packaging.Package&gt;</ph> can store the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> rights information for multiple content users.","pos":[0,148],"source":"A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users."},{"content":"Each ContentUser can have at most one <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>.","pos":[150,239],"source":"  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>."},{"content":"If <ph id=\"ph1\">&lt;xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A&gt;</ph> is called to store a new <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> for a <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.ContentUser&gt;</ph> that already has a <ph id=\"ph4\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>, the previous license will be overwritten with the new license.","pos":[241,584],"source":"  If <xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A> is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license."}]}]}],"pos":[19015,19940],"yaml":true,"extradata":"MT"},{"content":"The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.","nodes":[{"pos":[0,81],"content":"The user of the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph>.","source":"The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>."}],"pos":[20712,20794],"yaml":true},{"content":"The use license to store and embed in the package.","nodes":[{"pos":[0,50],"content":"The use license to store and embed in the package.","nodes":[{"content":"The use license to store and embed in the package.","pos":[0,50]}]}],"pos":[20890,20941],"yaml":true},{"content":"Either the <code>userKey</code> or <code>useLicense</code> parameter is `null`.","nodes":[{"pos":[0,79],"content":"Either the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">userKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">useLicense</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"Either the <code>userKey</code> or <code>useLicense</code> parameter is `null`."}],"pos":[21133,21213],"yaml":true},{"content":"The rights management information in this package cannot be read by the current version of this class.","nodes":[{"pos":[0,102],"content":"The rights management information in this package cannot be read by the current version of this class.","nodes":[{"content":"The rights management information in this package cannot be read by the current version of this class.","pos":[0,102]}]}],"pos":[21317,21420],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Packaging.RightsManagementInformation\n  commentId: T:System.IO.Packaging.RightsManagementInformation\n  id: RightsManagementInformation\n  children:\n  - System.IO.Packaging.RightsManagementInformation.CryptoProvider\n  - System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  - System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses\n  - System.IO.Packaging.RightsManagementInformation.LoadPublishLicense\n  - System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  - System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  - System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  langs:\n  - csharp\n  name: RightsManagementInformation\n  nameWithType: RightsManagementInformation\n  fullName: System.IO.Packaging.RightsManagementInformation\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Represents Digital Rights Management (DRM) information that is stored in an <xref href=\"System.IO.Packaging.EncryptedPackageEnvelope\"></xref>.\n  remarks: <xref:System.IO.Packaging.RightsManagementInformation> provides access to the <xref:System.Security.RightsManagement.PublishLicense> and <xref:System.Security.RightsManagement.UseLicense> data stored in a rights managed protected <xref:System.IO.Packaging.Package>.\n  example:\n  - \"The following example shows how to initialize a <xref:System.IO.Packaging.RightsManagementInformation> object for encryption.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  \\n  \\n The following example shows how to initialize a <xref:System.IO.Packaging.RightsManagementInformation> object for decryption.  \\n  \\n [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopenpkg)]\\n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopenpkg)]\"\n  syntax:\n    content: public class RightsManagementInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.RightsManagementInformation.CryptoProvider\n  commentId: P:System.IO.Packaging.RightsManagementInformation.CryptoProvider\n  id: CryptoProvider\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: CryptoProvider\n  nameWithType: RightsManagementInformation.CryptoProvider\n  fullName: RightsManagementInformation.CryptoProvider\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets or sets the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the package's encrypted rights management data stream.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the <xref:System.IO.Packaging.RightsManagementInformation.CryptoProvider%2A> property.  \\n  \\n [!code-csharp[RightsManagedPackageViewer#RmPkgViewBind](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewbind)]\\n [!code-vb[RightsManagedPackageViewer#RmPkgViewBind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewbind)]  \\n  \\n The following example shows how to access the <xref:System.IO.Packaging.RightsManagementInformation.CryptoProvider%2A> property.  \\n  \\n [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]\\n [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]\"\n  syntax:\n    content: public System.Security.RightsManagement.CryptoProvider CryptoProvider { get; set; }\n    return:\n      type: System.Security.RightsManagement.CryptoProvider\n      description: The <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> for accessing the rights management information.\n  overload: System.IO.Packaging.RightsManagementInformation.CryptoProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  commentId: M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  id: DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: DeleteUseLicense(ContentUser)\n  nameWithType: RightsManagementInformation.DeleteUseLicense(ContentUser)\n  fullName: RightsManagementInformation.DeleteUseLicense(ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Deletes the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user from the encrypted rights management data stream.\n  syntax:\n    content: public void DeleteUseLicense (System.Security.RightsManagement.ContentUser userKey);\n    parameters:\n    - id: userKey\n      type: System.Security.RightsManagement.ContentUser\n      description: The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> to be deleted.\n  overload: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses\n  commentId: M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses\n  id: GetEmbeddedUseLicenses\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: GetEmbeddedUseLicenses()\n  nameWithType: RightsManagementInformation.GetEmbeddedUseLicenses()\n  fullName: RightsManagementInformation.GetEmbeddedUseLicenses()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Returns a dictionary collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs from the encrypted rights management data stream.\n  remarks: <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A> only returns those use licenses that are currently embedded in the package.  It does not include any other use licenses that the application might have acquired separately from a rights management server but that are not yet embedded in the package.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense> GetEmbeddedUseLicenses ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IDictionary{System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense}\n      description: A collection of user and <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> key/value pairs that are contained in the rights managed protected package.\n  overload: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense\n  commentId: M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense\n  id: LoadPublishLicense\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: LoadPublishLicense()\n  nameWithType: RightsManagementInformation.LoadPublishLicense()\n  fullName: RightsManagementInformation.LoadPublishLicense()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Returns the embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> from the encrypted rights management data stream.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense%2A> method.  \\n  \\n [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopenpkg)]\\n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopenpkg)]\"\n  syntax:\n    content: public System.Security.RightsManagement.PublishLicense LoadPublishLicense ();\n    parameters: []\n    return:\n      type: System.Security.RightsManagement.PublishLicense\n      description: The embedded <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>; or `null`, if the package does not contain a <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref>.\n  overload: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense*\n  exceptions:\n  - type: System.IO.FileFormatException\n    commentId: T:System.IO.FileFormatException\n    description: The rights management information in this package cannot be read by the current version of this class.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  commentId: M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  id: LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: LoadUseLicense(ContentUser)\n  nameWithType: RightsManagementInformation.LoadUseLicense(ContentUser)\n  fullName: RightsManagementInformation.LoadUseLicense(ContentUser)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Returns a specified user's embedded <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> from the encrypted rights management data stream.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method.  \\n  \\n [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopenpkg)]\\n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenPkg](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopenpkg)]\"\n  syntax:\n    content: public System.Security.RightsManagement.UseLicense LoadUseLicense (System.Security.RightsManagement.ContentUser userKey);\n    parameters:\n    - id: userKey\n      type: System.Security.RightsManagement.ContentUser\n      description: The user or user group to return the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for.\n    return:\n      type: System.Security.RightsManagement.UseLicense\n      description: The <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for the specified user; or `null`, if the package does not contain a <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> that matches the given <code>userKey</code>.\n  overload: System.IO.Packaging.RightsManagementInformation.LoadUseLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>userKey</code> parameter is `null`.\n  - type: System.IO.FileFormatException\n    commentId: T:System.IO.FileFormatException\n    description: The rights management information in this package cannot be read by the current version of this class.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  commentId: M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  id: SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: SavePublishLicense(PublishLicense)\n  nameWithType: RightsManagementInformation.SavePublishLicense(PublishLicense)\n  fullName: RightsManagementInformation.SavePublishLicense(PublishLicense)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Saves a given <xref href=\"System.Security.RightsManagement.PublishLicense\"></xref> to the encrypted rights management data stream.\n  remarks: Each <xref:System.IO.Packaging.EncryptedPackageEnvelope> can contain only one <xref:System.Security.RightsManagement.PublishLicense>.  Each call to <xref:System.IO.Packaging.RightsManagementInformation.SavePublishLicense%2A> will overwrite any prior <xref:System.Security.RightsManagement.PublishLicense> contained in the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.\n  syntax:\n    content: public void SavePublishLicense (System.Security.RightsManagement.PublishLicense publishLicense);\n    parameters:\n    - id: publishLicense\n      type: System.Security.RightsManagement.PublishLicense\n      description: The publish license to store and embed in the package.\n  overload: System.IO.Packaging.RightsManagementInformation.SavePublishLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>publishLicense</code> parameter is `null`.\n  - type: System.IO.FileFormatException\n    commentId: T:System.IO.FileFormatException\n    description: The rights management information in this package cannot be read by the current version of this class.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  commentId: M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  id: SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  parent: System.IO.Packaging.RightsManagementInformation\n  langs:\n  - csharp\n  name: SaveUseLicense(ContentUser, UseLicense)\n  nameWithType: RightsManagementInformation.SaveUseLicense(ContentUser, UseLicense)\n  fullName: RightsManagementInformation.SaveUseLicense(ContentUser, UseLicense)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Saves a given <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> for a specified user to the encrypted rights management data stream.\n  remarks: \"After the <xref:System.Security.RightsManagement.UseLicense> for the specified user has been saved, it can be retrieved through the <xref:System.IO.Packaging.RightsManagementInformation.LoadUseLicense%2A> method and from the collection returned by <xref:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses%2A>.  \\n  \\n A <xref:System.IO.Packaging.Package> can store the <xref:System.Security.RightsManagement.UseLicense> rights information for multiple content users.  Each ContentUser can have at most one <xref:System.Security.RightsManagement.UseLicense>.  If <xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A> is called to store a new <xref:System.Security.RightsManagement.UseLicense> for a <xref:System.Security.RightsManagement.ContentUser> that already has a <xref:System.Security.RightsManagement.UseLicense>, the previous license will be overwritten with the new license.\"\n  example:\n  - \"The following example shows how to use of the <xref:System.IO.Packaging.RightsManagementInformation.SaveUseLicense%2A> method.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]\"\n  syntax:\n    content: public void SaveUseLicense (System.Security.RightsManagement.ContentUser userKey, System.Security.RightsManagement.UseLicense useLicense);\n    parameters:\n    - id: userKey\n      type: System.Security.RightsManagement.ContentUser\n      description: The user of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref>.\n    - id: useLicense\n      type: System.Security.RightsManagement.UseLicense\n      description: The use license to store and embed in the package.\n  overload: System.IO.Packaging.RightsManagementInformation.SaveUseLicense*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either the <code>userKey</code> or <code>useLicense</code> parameter is `null`.\n  - type: System.IO.FileFormatException\n    commentId: T:System.IO.FileFormatException\n    description: The rights management information in this package cannot be read by the current version of this class.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.FileFormatException\n  parent: System.IO\n  isExternal: false\n  name: FileFormatException\n  nameWithType: FileFormatException\n  fullName: System.IO.FileFormatException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IO.Packaging.RightsManagementInformation.CryptoProvider\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: RightsManagementInformation.CryptoProvider\n  fullName: RightsManagementInformation.CryptoProvider\n- uid: System.Security.RightsManagement.CryptoProvider\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: CryptoProvider\n  fullName: System.Security.RightsManagement.CryptoProvider\n- uid: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: DeleteUseLicense(ContentUser)\n  nameWithType: RightsManagementInformation.DeleteUseLicense(ContentUser)\n  fullName: RightsManagementInformation.DeleteUseLicense(ContentUser)\n- uid: System.Security.RightsManagement.ContentUser\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: ContentUser\n  nameWithType: ContentUser\n  fullName: System.Security.RightsManagement.ContentUser\n- uid: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: GetEmbeddedUseLicenses()\n  nameWithType: RightsManagementInformation.GetEmbeddedUseLicenses()\n  fullName: RightsManagementInformation.GetEmbeddedUseLicenses()\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Security.RightsManagement.UseLicense\n  name: UseLicense\n  nameWithType: UseLicense\n  fullName: System.Security.RightsManagement.UseLicense\n- uid: System.Collections.Generic.IDictionary{System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<ContentUser,UseLicense>\n  nameWithType: IDictionary<ContentUser,UseLicense>\n  fullName: System.Collections.Generic.IDictionary<System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.RightsManagement.ContentUser\n    name: ContentUser\n    nameWithType: ContentUser\n    fullName: System.Security.RightsManagement.ContentUser\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Security.RightsManagement.UseLicense\n    name: UseLicense\n    nameWithType: UseLicense\n    fullName: System.Security.RightsManagement.UseLicense\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: LoadPublishLicense()\n  nameWithType: RightsManagementInformation.LoadPublishLicense()\n  fullName: RightsManagementInformation.LoadPublishLicense()\n- uid: System.Security.RightsManagement.PublishLicense\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: PublishLicense\n  nameWithType: PublishLicense\n  fullName: System.Security.RightsManagement.PublishLicense\n- uid: System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: LoadUseLicense(ContentUser)\n  nameWithType: RightsManagementInformation.LoadUseLicense(ContentUser)\n  fullName: RightsManagementInformation.LoadUseLicense(ContentUser)\n- uid: System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: SavePublishLicense(PublishLicense)\n  nameWithType: RightsManagementInformation.SavePublishLicense(PublishLicense)\n  fullName: RightsManagementInformation.SavePublishLicense(PublishLicense)\n- uid: System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: SaveUseLicense(ContentUser, UseLicense)\n  nameWithType: RightsManagementInformation.SaveUseLicense(ContentUser, UseLicense)\n  fullName: RightsManagementInformation.SaveUseLicense(ContentUser, UseLicense)\n- uid: System.IO.Packaging.RightsManagementInformation.CryptoProvider*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: RightsManagementInformation.CryptoProvider\n  fullName: RightsManagementInformation.CryptoProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n- uid: System.IO.Packaging.RightsManagementInformation.DeleteUseLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: DeleteUseLicense\n  nameWithType: RightsManagementInformation.DeleteUseLicense\n  fullName: RightsManagementInformation.DeleteUseLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n- uid: System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: GetEmbeddedUseLicenses\n  nameWithType: RightsManagementInformation.GetEmbeddedUseLicenses\n  fullName: RightsManagementInformation.GetEmbeddedUseLicenses\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n- uid: System.IO.Packaging.RightsManagementInformation.LoadPublishLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: LoadPublishLicense\n  nameWithType: RightsManagementInformation.LoadPublishLicense\n  fullName: RightsManagementInformation.LoadPublishLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n- uid: System.IO.Packaging.RightsManagementInformation.LoadUseLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: LoadUseLicense\n  nameWithType: RightsManagementInformation.LoadUseLicense\n  fullName: RightsManagementInformation.LoadUseLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n- uid: System.IO.Packaging.RightsManagementInformation.SavePublishLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: SavePublishLicense\n  nameWithType: RightsManagementInformation.SavePublishLicense\n  fullName: RightsManagementInformation.SavePublishLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n- uid: System.IO.Packaging.RightsManagementInformation.SaveUseLicense*\n  parent: System.IO.Packaging.RightsManagementInformation\n  isExternal: false\n  name: SaveUseLicense\n  nameWithType: RightsManagementInformation.SaveUseLicense\n  fullName: RightsManagementInformation.SaveUseLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/RightsManagementInformation.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}