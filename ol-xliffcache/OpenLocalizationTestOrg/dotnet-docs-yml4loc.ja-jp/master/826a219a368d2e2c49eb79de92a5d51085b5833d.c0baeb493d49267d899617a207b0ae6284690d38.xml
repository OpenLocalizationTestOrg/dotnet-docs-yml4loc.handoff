{"nodes":[{"content":"Defines a structure that holds the raw data for a performance counter.","nodes":[{"pos":[0,70],"content":"Defines a structure that holds the raw data for a performance counter.","nodes":[{"content":"Defines a structure that holds the raw data for a performance counter.","pos":[0,70]}]}],"pos":[1801,1872],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and sets the <xref href=\"System.Diagnostics.CounterSample.CounterTimeStamp\"></xref> property to 0 (zero).","nodes":[{"pos":[0,203],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure and sets the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.CounterSample.CounterTimeStamp\"&gt;&lt;/xref&gt;</ph> property to 0 (zero).","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and sets the <xref href=\"System.Diagnostics.CounterSample.CounterTimeStamp\"></xref> property to 0 (zero)."}],"pos":[4239,4443],"yaml":true},{"content":"Use this constructor to take an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method for the first time.","nodes":[{"pos":[0,248],"content":"Use this constructor to take an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method for the first time.","nodes":[{"content":"Use this constructor to take an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method for the first time.","pos":[0,248],"nodes":[{"content":"Use this constructor to take an initial sample of the performance counter.","pos":[0,74]},{"content":"The System Monitor supplies values for these parameters automatically when you call the <ph id=\"ph1\">&lt;xref:System.Diagnostics.PerformanceCounter.NextSample%2A&gt;</ph> method for the first time.","pos":[75,248],"source":" The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method for the first time."}]}]}],"pos":[4454,4703],"yaml":true,"extradata":"MT"},{"content":"The numeric value associated with the performance counter sample.","nodes":[{"pos":[0,65],"content":"The numeric value associated with the performance counter sample.","nodes":[{"content":"The numeric value associated with the performance counter sample.","pos":[0,65]}]}],"pos":[4998,5064],"yaml":true},{"content":"An optional, base raw value for the counter, to use only if the sample is based on multiple counters.","nodes":[{"pos":[0,101],"content":"An optional, base raw value for the counter, to use only if the sample is based on multiple counters.","nodes":[{"content":"An optional, base raw value for the counter, to use only if the sample is based on multiple counters.","pos":[0,101]}]}],"pos":[5128,5230],"yaml":true},{"content":"The frequency with which the counter is read.","nodes":[{"pos":[0,45],"content":"The frequency with which the counter is read.","nodes":[{"content":"The frequency with which the counter is read.","pos":[0,45]}]}],"pos":[5301,5347],"yaml":true},{"content":"The frequency with which the system reads from the counter.","nodes":[{"pos":[0,59],"content":"The frequency with which the system reads from the counter.","nodes":[{"content":"The frequency with which the system reads from the counter.","pos":[0,59]}]}],"pos":[5417,5477],"yaml":true},{"content":"The raw time stamp.","nodes":[{"pos":[0,19],"content":"The raw time stamp.","nodes":[{"content":"The raw time stamp.","pos":[0,19]}]}],"pos":[5541,5561],"yaml":true},{"content":"The raw, high-fidelity time stamp.","nodes":[{"pos":[0,34],"content":"The raw, high-fidelity time stamp.","nodes":[{"content":"The raw, high-fidelity time stamp.","pos":[0,34]}]}],"pos":[5632,5667],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterType\"&gt;&lt;/xref&gt;</ph> object that indicates the type of the counter for which this sample is a snapshot.","source":"A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot."}],"pos":[5762,5910],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and sets the <xref href=\"System.Diagnostics.CounterSample.CounterTimeStamp\"></xref> property to the value that is passed in.","nodes":[{"pos":[0,222],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure and sets the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.CounterSample.CounterTimeStamp\"&gt;&lt;/xref&gt;</ph> property to the value that is passed in.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and sets the <xref href=\"System.Diagnostics.CounterSample.CounterTimeStamp\"></xref> property to the value that is passed in."}],"pos":[7613,7836],"yaml":true},{"content":"Use this constructor to take samples after you have already taken an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method.","nodes":[{"pos":[0,266],"content":"Use this constructor to take samples after you have already taken an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method.","nodes":[{"content":"Use this constructor to take samples after you have already taken an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method.","pos":[0,266],"nodes":[{"content":"Use this constructor to take samples after you have already taken an initial sample of the performance counter.","pos":[0,111]},{"content":"The System Monitor supplies values for these parameters automatically when you call the <ph id=\"ph1\">&lt;xref:System.Diagnostics.PerformanceCounter.NextSample%2A&gt;</ph> method.","pos":[112,266],"source":" The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method."}]}]}],"pos":[7847,8114],"yaml":true,"extradata":"MT"},{"content":"The numeric value associated with the performance counter sample.","nodes":[{"pos":[0,65],"content":"The numeric value associated with the performance counter sample.","nodes":[{"content":"The numeric value associated with the performance counter sample.","pos":[0,65]}]}],"pos":[9717,9783],"yaml":true},{"content":"An optional, base raw value for the counter, to use only if the sample is based on multiple counters.","nodes":[{"pos":[0,101],"content":"An optional, base raw value for the counter, to use only if the sample is based on multiple counters.","nodes":[{"content":"An optional, base raw value for the counter, to use only if the sample is based on multiple counters.","pos":[0,101]}]}],"pos":[9847,9949],"yaml":true},{"content":"The frequency with which the counter is read.","nodes":[{"pos":[0,45],"content":"The frequency with which the counter is read.","nodes":[{"content":"The frequency with which the counter is read.","pos":[0,45]}]}],"pos":[10020,10066],"yaml":true},{"content":"The frequency with which the system reads from the counter.","nodes":[{"pos":[0,59],"content":"The frequency with which the system reads from the counter.","nodes":[{"content":"The frequency with which the system reads from the counter.","pos":[0,59]}]}],"pos":[10136,10196],"yaml":true},{"content":"The raw time stamp.","nodes":[{"pos":[0,19],"content":"The raw time stamp.","nodes":[{"content":"The raw time stamp.","pos":[0,19]}]}],"pos":[10260,10280],"yaml":true},{"content":"The raw, high-fidelity time stamp.","nodes":[{"pos":[0,34],"content":"The raw, high-fidelity time stamp.","nodes":[{"content":"The raw, high-fidelity time stamp.","pos":[0,34]}]}],"pos":[10351,10386],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterType\"&gt;&lt;/xref&gt;</ph> object that indicates the type of the counter for which this sample is a snapshot.","source":"A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot."}],"pos":[10481,10629],"yaml":true},{"content":"The time at which the sample was taken.","nodes":[{"pos":[0,39],"content":"The time at which the sample was taken.","nodes":[{"content":"The time at which the sample was taken.","pos":[0,39]}]}],"pos":[10700,10740],"yaml":true},{"content":"Gets an optional, base raw value for the counter.","nodes":[{"pos":[0,49],"content":"Gets an optional, base raw value for the counter.","nodes":[{"content":"Gets an optional, base raw value for the counter.","pos":[0,49]}]}],"pos":[11817,11867],"yaml":true},{"content":"The base raw value, which is used only if the sample is based on multiple counters.","nodes":[{"pos":[0,83],"content":"The base raw value, which is used only if the sample is based on multiple counters.","nodes":[{"content":"The base raw value, which is used only if the sample is based on multiple counters.","pos":[0,83]}]}],"pos":[12634,12718],"yaml":true},{"content":"Calculates the performance data of the counter, using a single sample point. This method is generally used for uncalculated performance counter types.","nodes":[{"pos":[0,150],"content":"Calculates the performance data of the counter, using a single sample point. This method is generally used for uncalculated performance counter types.","nodes":[{"content":"Calculates the performance data of the counter, using a single sample point. This method is generally used for uncalculated performance counter types.","pos":[0,150],"nodes":[{"content":"Calculates the performance data of the counter, using a single sample point.","pos":[0,76]},{"content":"This method is generally used for uncalculated performance counter types.","pos":[77,150]}]}]}],"pos":[13944,14095],"yaml":true},{"content":"The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as a base point for calculating performance data.","nodes":[{"pos":[0,124],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure to use as a base point for calculating performance data.","source":"The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as a base point for calculating performance data."}],"pos":[14302,14427],"yaml":true},{"content":"The calculated performance value.","nodes":[{"pos":[0,33],"content":"The calculated performance value.","nodes":[{"content":"The calculated performance value.","pos":[0,33]}]}],"pos":[14484,14518],"yaml":true},{"content":"Calculates the performance data of the counter, using two sample points. This method is generally used for calculated performance counter types, such as averages.","nodes":[{"pos":[0,162],"content":"Calculates the performance data of the counter, using two sample points. This method is generally used for calculated performance counter types, such as averages.","nodes":[{"content":"Calculates the performance data of the counter, using two sample points. This method is generally used for calculated performance counter types, such as averages.","pos":[0,162],"nodes":[{"content":"Calculates the performance data of the counter, using two sample points.","pos":[0,72]},{"content":"This method is generally used for calculated performance counter types, such as averages.","pos":[73,162]}]}]}],"pos":[15888,16051],"yaml":true},{"content":"The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as a base point for calculating performance data.","nodes":[{"pos":[0,124],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure to use as a base point for calculating performance data.","source":"The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as a base point for calculating performance data."}],"pos":[16310,16435],"yaml":true},{"content":"The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as an ending point for calculating performance data.","nodes":[{"pos":[0,127],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure to use as an ending point for calculating performance data.","source":"The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as an ending point for calculating performance data."}],"pos":[16527,16655],"yaml":true},{"content":"The calculated performance value.","nodes":[{"pos":[0,33],"content":"The calculated performance value.","nodes":[{"content":"The calculated performance value.","pos":[0,33]}]}],"pos":[16712,16746],"yaml":true},{"content":"Gets the raw counter frequency.","nodes":[{"pos":[0,31],"content":"Gets the raw counter frequency.","nodes":[{"content":"Gets the raw counter frequency.","pos":[0,31]}]}],"pos":[17869,17901],"yaml":true},{"content":"The frequency with which the counter is read.","nodes":[{"pos":[0,45],"content":"The frequency with which the counter is read.","nodes":[{"content":"The frequency with which the counter is read.","pos":[0,45]}]}],"pos":[18682,18728],"yaml":true},{"content":"Gets the counter's time stamp.","nodes":[{"pos":[0,30],"content":"Gets the counter's time stamp.","nodes":[{"content":"Gets the counter's time stamp.","pos":[0,30]}]}],"pos":[19858,19889],"yaml":true},{"content":"The time at which the sample was taken.","nodes":[{"pos":[0,39],"content":"The time at which the sample was taken.","nodes":[{"content":"The time at which the sample was taken.","pos":[0,39]}]}],"pos":[20670,20710],"yaml":true},{"content":"Gets the performance counter type.","nodes":[{"pos":[0,34],"content":"Gets the performance counter type.","nodes":[{"content":"Gets the performance counter type.","pos":[0,34]}]}],"pos":[21810,21845],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterType\"&gt;&lt;/xref&gt;</ph> object that indicates the type of the counter for which this sample is a snapshot.","source":"A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot."}],"pos":[22023,22171],"yaml":true},{"content":"Defines an empty, uninitialized performance counter sample of type `NumberOfItems32`.","nodes":[{"pos":[0,85],"content":"Defines an empty, uninitialized performance counter sample of type <ph id=\"ph1\">`NumberOfItems32`</ph>.","source":"Defines an empty, uninitialized performance counter sample of type `NumberOfItems32`."}],"pos":[23227,23313],"yaml":true},{"content":"Indicates whether the specified <xref href=\"System.Diagnostics.CounterSample\"></xref> structure is equal to the current <xref href=\"System.Diagnostics.CounterSample\"></xref> structure.","nodes":[{"pos":[0,184],"content":"Indicates whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure is equal to the current <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure.","source":"Indicates whether the specified <xref href=\"System.Diagnostics.CounterSample\"></xref> structure is equal to the current <xref href=\"System.Diagnostics.CounterSample\"></xref> structure."}],"pos":[24621,24806],"yaml":true},{"content":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.","nodes":[{"pos":[0,104],"content":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Diagnostics.CounterSample&gt;</ph> structures are equal if they have identical property values.","pos":[0,104],"source":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values."}]}],"pos":[24817,24922],"yaml":true,"extradata":"MT"},{"content":"`true` if <code>other</code> is equal to the current instance; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to the current instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>other</code> is equal to the current instance; otherwise, `false`."}],"pos":[25164,25249],"yaml":true},{"content":"Indicates whether the specified structure is a <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and is identical to the current <xref href=\"System.Diagnostics.CounterSample\"></xref> structure.","nodes":[{"pos":[0,207],"content":"Indicates whether the specified structure is a <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure and is identical to the current <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure.","source":"Indicates whether the specified structure is a <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and is identical to the current <xref href=\"System.Diagnostics.CounterSample\"></xref> structure."}],"pos":[26376,26584],"yaml":true},{"content":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.","nodes":[{"pos":[0,104],"content":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Diagnostics.CounterSample&gt;</ph> structures are equal if they have identical property values.","pos":[0,104],"source":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values."}]}],"pos":[26595,26700],"yaml":true,"extradata":"MT"},{"content":"`true` if <code>obj</code> is a <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and is identical to the current instance; otherwise, `false`.","nodes":[{"pos":[0,157],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structure and is identical to the current instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is a <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and is identical to the current instance; otherwise, `false`."}],"pos":[26899,27059],"yaml":true},{"content":"Gets a hash code for the current counter sample.","nodes":[{"pos":[0,48],"content":"Gets a hash code for the current counter sample.","nodes":[{"content":"Gets a hash code for the current counter sample.","pos":[0,48]}]}],"pos":[28153,28202],"yaml":true},{"content":"A hash code for the current counter sample.","nodes":[{"pos":[0,43],"content":"A hash code for the current counter sample.","nodes":[{"content":"A hash code for the current counter sample.","pos":[0,43]}]}],"pos":[28336,28380],"yaml":true},{"content":"Returns a value that indicates whether two <xref href=\"System.Diagnostics.CounterSample\"></xref> structures are equal.","nodes":[{"pos":[0,118],"content":"Returns a value that indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structures are equal.","source":"Returns a value that indicates whether two <xref href=\"System.Diagnostics.CounterSample\"></xref> structures are equal."}],"pos":[29766,29885],"yaml":true},{"content":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.  \n  \n The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>","nodes":[{"pos":[0,104],"content":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Diagnostics.CounterSample&gt;</ph> structures are equal if they have identical property values.","pos":[0,104],"source":"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values."}]},{"pos":[111,298],"content":"The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName&gt;</ph>","pos":[0,187],"source":"The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>"}]}],"pos":[29896,30199],"yaml":true,"extradata":"MT"},{"content":"`true` if <code>a</code> and <code>b</code> are equal; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept> are equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>a</code> and <code>b</code> are equal; otherwise, `false`."}],"pos":[30565,30642],"yaml":true},{"content":"Returns a value that indicates whether two <xref href=\"System.Diagnostics.CounterSample\"></xref> structures are not equal.","nodes":[{"pos":[0,122],"content":"Returns a value that indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> structures are not equal.","source":"Returns a value that indicates whether two <xref href=\"System.Diagnostics.CounterSample\"></xref> structures are not equal."}],"pos":[32040,32163],"yaml":true},{"content":"Two <xref:System.Diagnostics.CounterSample> structures are not equal if any of their property values are different.  \n  \n The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Compare%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>","nodes":[{"pos":[0,115],"content":"Two <xref:System.Diagnostics.CounterSample> structures are not equal if any of their property values are different.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Diagnostics.CounterSample&gt;</ph> structures are not equal if any of their property values are different.","pos":[0,115],"source":"Two <xref:System.Diagnostics.CounterSample> structures are not equal if any of their property values are different."}]},{"pos":[122,310],"content":"The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Compare%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Diagnostics.CounterSample.Compare%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName&gt;</ph>","pos":[0,188],"source":"The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Compare%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>"}]}],"pos":[32174,32489],"yaml":true,"extradata":"MT"},{"content":"`true` if <code>a</code> and <code>b</code> are not equal; otherwise, `false`","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not equal; otherwise, <ph id=\"ph4\">`false`</ph>","source":"`true` if <code>a</code> and <code>b</code> are not equal; otherwise, `false`"}],"pos":[32857,32937],"yaml":true},{"content":"Gets the raw value of the counter.","nodes":[{"pos":[0,34],"content":"Gets the raw value of the counter.","nodes":[{"content":"Gets the raw value of the counter.","pos":[0,34]}]}],"pos":[34016,34051],"yaml":true},{"content":"The numeric value that is associated with the performance counter sample.","nodes":[{"pos":[0,73],"content":"The numeric value that is associated with the performance counter sample.","nodes":[{"content":"The numeric value that is associated with the performance counter sample.","pos":[0,73]}]}],"pos":[34816,34890],"yaml":true},{"content":"Gets the raw system frequency.","nodes":[{"pos":[0,30],"content":"Gets the raw system frequency.","nodes":[{"content":"Gets the raw system frequency.","pos":[0,30]}]}],"pos":[36006,36037],"yaml":true},{"content":"The frequency with which the system reads from the counter.","nodes":[{"pos":[0,59],"content":"The frequency with which the system reads from the counter.","nodes":[{"content":"The frequency with which the system reads from the counter.","pos":[0,59]}]}],"pos":[36817,36877],"yaml":true},{"content":"Gets the raw time stamp.","nodes":[{"pos":[0,24],"content":"Gets the raw time stamp.","nodes":[{"content":"Gets the raw time stamp.","pos":[0,24]}]}],"pos":[37964,37989],"yaml":true},{"content":"The system time stamp.","nodes":[{"pos":[0,22],"content":"The system time stamp.","nodes":[{"content":"The system time stamp.","pos":[0,22]}]}],"pos":[38756,38779],"yaml":true},{"content":"Gets the raw, high-fidelity time stamp.","nodes":[{"pos":[0,39],"content":"Gets the raw, high-fidelity time stamp.","nodes":[{"content":"Gets the raw, high-fidelity time stamp.","pos":[0,39]}]}],"pos":[39902,39942],"yaml":true},{"content":"The system time stamp, represented within 0.1 millisecond.","nodes":[{"pos":[0,58],"content":"The system time stamp, represented within 0.1 millisecond.","nodes":[{"content":"The system time stamp, represented within 0.1 millisecond.","pos":[0,58]}]}],"pos":[40723,40782],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.CounterSample\n  commentId: T:System.Diagnostics.CounterSample\n  id: CounterSample\n  children:\n  - System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)\n  - System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)\n  - System.Diagnostics.CounterSample.BaseValue\n  - System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)\n  - System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  - System.Diagnostics.CounterSample.CounterFrequency\n  - System.Diagnostics.CounterSample.CounterTimeStamp\n  - System.Diagnostics.CounterSample.CounterType\n  - System.Diagnostics.CounterSample.Empty\n  - System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)\n  - System.Diagnostics.CounterSample.Equals(System.Object)\n  - System.Diagnostics.CounterSample.GetHashCode\n  - System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  - System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  - System.Diagnostics.CounterSample.RawValue\n  - System.Diagnostics.CounterSample.SystemFrequency\n  - System.Diagnostics.CounterSample.TimeStamp\n  - System.Diagnostics.CounterSample.TimeStamp100nSec\n  langs:\n  - csharp\n  name: CounterSample\n  nameWithType: CounterSample\n  fullName: System.Diagnostics.CounterSample\n  type: Struct\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Defines a structure that holds the raw data for a performance counter.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.CounterSample> class to display data for a performance counter.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: public struct CounterSample\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)\n  commentId: M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)\n  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)'\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)\n  nameWithType: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)\n  fullName: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and sets the <xref href=\"System.Diagnostics.CounterSample.CounterTimeStamp\"></xref> property to 0 (zero).\n  remarks: Use this constructor to take an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method for the first time.\n  syntax:\n    content: public CounterSample (long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType);\n    parameters:\n    - id: rawValue\n      type: System.Int64\n      description: The numeric value associated with the performance counter sample.\n    - id: baseValue\n      type: System.Int64\n      description: An optional, base raw value for the counter, to use only if the sample is based on multiple counters.\n    - id: counterFrequency\n      type: System.Int64\n      description: The frequency with which the counter is read.\n    - id: systemFrequency\n      type: System.Int64\n      description: The frequency with which the system reads from the counter.\n    - id: timeStamp\n      type: System.Int64\n      description: The raw time stamp.\n    - id: timeStamp100nSec\n      type: System.Int64\n      description: The raw, high-fidelity time stamp.\n    - id: counterType\n      type: System.Diagnostics.PerformanceCounterType\n      description: A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot.\n  overload: System.Diagnostics.CounterSample.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)\n  commentId: M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)\n  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)'\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)\n  nameWithType: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)\n  fullName: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and sets the <xref href=\"System.Diagnostics.CounterSample.CounterTimeStamp\"></xref> property to the value that is passed in.\n  remarks: Use this constructor to take samples after you have already taken an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method.\n  example:\n  - \"The following example demonstrates how to initialize a new <xref:System.Diagnostics.CounterSample> structure, passing in values for the `rawValue`, `baseValue`, `counterFrequency`, `systemFrequency`, `timeStamp`, `timeStamp100nSec`, `counterType`, and `counterTimeStamp` parameters. After creating the <xref:System.Diagnostics.CounterSample> structure, the example displays the property values for the <xref:System.Diagnostics.CounterSample> in the console window.  \\n  \\n [!code-cpp[CounterSample_Ctor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CounterSample_Ctor_2/CPP/countersample_ctor_2.cpp#1)]\\n [!code-csharp[CounterSample_Ctor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CounterSample_Ctor_2/CS/countersample_ctor_2.cs#1)]\\n [!code-vb[CounterSample_Ctor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CounterSample_Ctor_2/VB/countersample_ctor_2.vb#1)]  \\n[!code-cpp[CounterSample_Ctor_2#2](~/samples/snippets/cpp/VS_Snippets_CLR/CounterSample_Ctor_2/CPP/countersample_ctor_2.cpp#2)]\\n[!code-csharp[CounterSample_Ctor_2#2](~/samples/snippets/csharp/VS_Snippets_CLR/CounterSample_Ctor_2/CS/countersample_ctor_2.cs#2)]\\n[!code-vb[CounterSample_Ctor_2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CounterSample_Ctor_2/VB/countersample_ctor_2.vb#2)]\"\n  syntax:\n    content: public CounterSample (long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType, long counterTimeStamp);\n    parameters:\n    - id: rawValue\n      type: System.Int64\n      description: The numeric value associated with the performance counter sample.\n    - id: baseValue\n      type: System.Int64\n      description: An optional, base raw value for the counter, to use only if the sample is based on multiple counters.\n    - id: counterFrequency\n      type: System.Int64\n      description: The frequency with which the counter is read.\n    - id: systemFrequency\n      type: System.Int64\n      description: The frequency with which the system reads from the counter.\n    - id: timeStamp\n      type: System.Int64\n      description: The raw time stamp.\n    - id: timeStamp100nSec\n      type: System.Int64\n      description: The raw, high-fidelity time stamp.\n    - id: counterType\n      type: System.Diagnostics.PerformanceCounterType\n      description: A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot.\n    - id: counterTimeStamp\n      type: System.Int64\n      description: The time at which the sample was taken.\n  overload: System.Diagnostics.CounterSample.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.BaseValue\n  commentId: P:System.Diagnostics.CounterSample.BaseValue\n  id: BaseValue\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: BaseValue\n  nameWithType: CounterSample.BaseValue\n  fullName: CounterSample.BaseValue\n  type: Property\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets an optional, base raw value for the counter.\n  remarks: ''\n  example:\n  - \"The following example displays the value of the <xref:System.Diagnostics.CounterSample.BaseValue%2A> property for a counter.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: public long BaseValue { get; }\n    return:\n      type: System.Int64\n      description: The base raw value, which is used only if the sample is based on multiple counters.\n  overload: System.Diagnostics.CounterSample.BaseValue*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)\n  commentId: M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)\n  id: Calculate(System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: Calculate(CounterSample)\n  nameWithType: CounterSample.Calculate(CounterSample)\n  fullName: CounterSample.Calculate(CounterSample)\n  type: Method\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Calculates the performance data of the counter, using a single sample point. This method is generally used for uncalculated performance counter types.\n  syntax:\n    content: public static float Calculate (System.Diagnostics.CounterSample counterSample);\n    parameters:\n    - id: counterSample\n      type: System.Diagnostics.CounterSample\n      description: The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as a base point for calculating performance data.\n    return:\n      type: System.Single\n      description: The calculated performance value.\n  overload: System.Diagnostics.CounterSample.Calculate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  commentId: M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  id: Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: Calculate(CounterSample, CounterSample)\n  nameWithType: CounterSample.Calculate(CounterSample, CounterSample)\n  fullName: CounterSample.Calculate(CounterSample, CounterSample)\n  type: Method\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Calculates the performance data of the counter, using two sample points. This method is generally used for calculated performance counter types, such as averages.\n  syntax:\n    content: public static float Calculate (System.Diagnostics.CounterSample counterSample, System.Diagnostics.CounterSample nextCounterSample);\n    parameters:\n    - id: counterSample\n      type: System.Diagnostics.CounterSample\n      description: The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as a base point for calculating performance data.\n    - id: nextCounterSample\n      type: System.Diagnostics.CounterSample\n      description: The <xref href=\"System.Diagnostics.CounterSample\"></xref> structure to use as an ending point for calculating performance data.\n    return:\n      type: System.Single\n      description: The calculated performance value.\n  overload: System.Diagnostics.CounterSample.Calculate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.CounterFrequency\n  commentId: P:System.Diagnostics.CounterSample.CounterFrequency\n  id: CounterFrequency\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: CounterFrequency\n  nameWithType: CounterSample.CounterFrequency\n  fullName: CounterSample.CounterFrequency\n  type: Property\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets the raw counter frequency.\n  remarks: ''\n  example:\n  - \"The following example displays the value of the <xref:System.Diagnostics.CounterSample.CounterFrequency%2A> property for a counter.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: public long CounterFrequency { get; }\n    return:\n      type: System.Int64\n      description: The frequency with which the counter is read.\n  overload: System.Diagnostics.CounterSample.CounterFrequency*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.CounterTimeStamp\n  commentId: P:System.Diagnostics.CounterSample.CounterTimeStamp\n  id: CounterTimeStamp\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: CounterTimeStamp\n  nameWithType: CounterSample.CounterTimeStamp\n  fullName: CounterSample.CounterTimeStamp\n  type: Property\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets the counter's time stamp.\n  remarks: ''\n  example:\n  - \"The following example displays the value of the <xref:System.Diagnostics.CounterSample.CounterTimeStamp%2A> property for a counter.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: public long CounterTimeStamp { get; }\n    return:\n      type: System.Int64\n      description: The time at which the sample was taken.\n  overload: System.Diagnostics.CounterSample.CounterTimeStamp*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.CounterType\n  commentId: P:System.Diagnostics.CounterSample.CounterType\n  id: CounterType\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: CounterType\n  nameWithType: CounterSample.CounterType\n  fullName: CounterSample.CounterType\n  type: Property\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets the performance counter type.\n  syntax:\n    content: public System.Diagnostics.PerformanceCounterType CounterType { get; }\n    return:\n      type: System.Diagnostics.PerformanceCounterType\n      description: A <xref href=\"System.Diagnostics.PerformanceCounterType\"></xref> object that indicates the type of the counter for which this sample is a snapshot.\n  overload: System.Diagnostics.CounterSample.CounterType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.Empty\n  commentId: F:System.Diagnostics.CounterSample.Empty\n  id: Empty\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: CounterSample.Empty\n  fullName: CounterSample.Empty\n  type: Field\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Defines an empty, uninitialized performance counter sample of type `NumberOfItems32`.\n  syntax:\n    content: public static System.Diagnostics.CounterSample Empty;\n    return:\n      type: System.Diagnostics.CounterSample\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)\n  commentId: M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)\n  id: Equals(System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: Equals(CounterSample)\n  nameWithType: CounterSample.Equals(CounterSample)\n  fullName: CounterSample.Equals(CounterSample)\n  type: Method\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Indicates whether the specified <xref href=\"System.Diagnostics.CounterSample\"></xref> structure is equal to the current <xref href=\"System.Diagnostics.CounterSample\"></xref> structure.\n  remarks: Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.\n  syntax:\n    content: public bool Equals (System.Diagnostics.CounterSample other);\n    parameters:\n    - id: sample\n      type: System.Diagnostics.CounterSample\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>other</code> is equal to the current instance; otherwise, `false`.'\n  overload: System.Diagnostics.CounterSample.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.Equals(System.Object)\n  commentId: M:System.Diagnostics.CounterSample.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CounterSample.Equals(Object)\n  fullName: CounterSample.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Indicates whether the specified structure is a <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and is identical to the current <xref href=\"System.Diagnostics.CounterSample\"></xref> structure.\n  remarks: Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: o\n      type: System.Object\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is a <xref href=\"System.Diagnostics.CounterSample\"></xref> structure and is identical to the current instance; otherwise, `false`.'\n  overload: System.Diagnostics.CounterSample.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.GetHashCode\n  commentId: M:System.Diagnostics.CounterSample.GetHashCode\n  id: GetHashCode\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CounterSample.GetHashCode()\n  fullName: CounterSample.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets a hash code for the current counter sample.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current counter sample.\n  overload: System.Diagnostics.CounterSample.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  commentId: M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  id: op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: op_Equality(CounterSample, CounterSample)\n  nameWithType: CounterSample.op_Equality(CounterSample, CounterSample)\n  fullName: CounterSample.op_Equality(CounterSample, CounterSample)\n  type: Operator\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Returns a value that indicates whether two <xref href=\"System.Diagnostics.CounterSample\"></xref> structures are equal.\n  remarks: \"Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.  \\n  \\n The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Equality (System.Diagnostics.CounterSample obj1, System.Diagnostics.CounterSample obj2);\n    parameters:\n    - id: a\n      type: System.Diagnostics.CounterSample\n      description: ''\n    - id: b\n      type: System.Diagnostics.CounterSample\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>a</code> and <code>b</code> are equal; otherwise, `false`.'\n  overload: System.Diagnostics.CounterSample.op_Equality*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  commentId: M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  id: op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: op_Inequality(CounterSample, CounterSample)\n  nameWithType: CounterSample.op_Inequality(CounterSample, CounterSample)\n  fullName: CounterSample.op_Inequality(CounterSample, CounterSample)\n  type: Operator\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Returns a value that indicates whether two <xref href=\"System.Diagnostics.CounterSample\"></xref> structures are not equal.\n  remarks: \"Two <xref:System.Diagnostics.CounterSample> structures are not equal if any of their property values are different.  \\n  \\n The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Compare%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Inequality (System.Diagnostics.CounterSample obj1, System.Diagnostics.CounterSample obj2);\n    parameters:\n    - id: a\n      type: System.Diagnostics.CounterSample\n      description: ''\n    - id: b\n      type: System.Diagnostics.CounterSample\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>a</code> and <code>b</code> are not equal; otherwise, `false`'\n  overload: System.Diagnostics.CounterSample.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.RawValue\n  commentId: P:System.Diagnostics.CounterSample.RawValue\n  id: RawValue\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: RawValue\n  nameWithType: CounterSample.RawValue\n  fullName: CounterSample.RawValue\n  type: Property\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets the raw value of the counter.\n  remarks: ''\n  example:\n  - \"The following example displays the value of the <xref:System.Diagnostics.CounterSample.RawValue%2A> property for a counter.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: public long RawValue { get; }\n    return:\n      type: System.Int64\n      description: The numeric value that is associated with the performance counter sample.\n  overload: System.Diagnostics.CounterSample.RawValue*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.SystemFrequency\n  commentId: P:System.Diagnostics.CounterSample.SystemFrequency\n  id: SystemFrequency\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: SystemFrequency\n  nameWithType: CounterSample.SystemFrequency\n  fullName: CounterSample.SystemFrequency\n  type: Property\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets the raw system frequency.\n  remarks: ''\n  example:\n  - \"The following example displays the value of the <xref:System.Diagnostics.CounterSample.SystemFrequency%2A> property for a counter..  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: public long SystemFrequency { get; }\n    return:\n      type: System.Int64\n      description: The frequency with which the system reads from the counter.\n  overload: System.Diagnostics.CounterSample.SystemFrequency*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.TimeStamp\n  commentId: P:System.Diagnostics.CounterSample.TimeStamp\n  id: TimeStamp\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: TimeStamp\n  nameWithType: CounterSample.TimeStamp\n  fullName: CounterSample.TimeStamp\n  type: Property\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets the raw time stamp.\n  remarks: ''\n  example:\n  - \"The following example displays the value of the <xref:System.Diagnostics.CounterSample.TimeStamp%2A> property for a counter.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: public long TimeStamp { get; }\n    return:\n      type: System.Int64\n      description: The system time stamp.\n  overload: System.Diagnostics.CounterSample.TimeStamp*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSample.TimeStamp100nSec\n  commentId: P:System.Diagnostics.CounterSample.TimeStamp100nSec\n  id: TimeStamp100nSec\n  parent: System.Diagnostics.CounterSample\n  langs:\n  - csharp\n  name: TimeStamp100nSec\n  nameWithType: CounterSample.TimeStamp100nSec\n  fullName: CounterSample.TimeStamp100nSec\n  type: Property\n  assemblies:\n  - System\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: Gets the raw, high-fidelity time stamp.\n  remarks: ''\n  example:\n  - \"The following example displays the value of the <xref:System.Diagnostics.CounterSample.TimeStamp100nSec%2A> property for a counter.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: public long TimeStamp100nSec { get; }\n    return:\n      type: System.Int64\n      description: The system time stamp, represented within 0.1 millisecond.\n  overload: System.Diagnostics.CounterSample.TimeStamp100nSec*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)\n  nameWithType: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)\n  fullName: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.PerformanceCounterType\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterType\n  nameWithType: PerformanceCounterType\n  fullName: System.Diagnostics.PerformanceCounterType\n- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)\n  nameWithType: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)\n  fullName: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)\n- uid: System.Diagnostics.CounterSample.BaseValue\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: BaseValue\n  nameWithType: CounterSample.BaseValue\n  fullName: CounterSample.BaseValue\n- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: Calculate(CounterSample)\n  nameWithType: CounterSample.Calculate(CounterSample)\n  fullName: CounterSample.Calculate(CounterSample)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Diagnostics.CounterSample\n  parent: System.Diagnostics\n  isExternal: false\n  name: CounterSample\n  nameWithType: CounterSample\n  fullName: System.Diagnostics.CounterSample\n- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: Calculate(CounterSample, CounterSample)\n  nameWithType: CounterSample.Calculate(CounterSample, CounterSample)\n  fullName: CounterSample.Calculate(CounterSample, CounterSample)\n- uid: System.Diagnostics.CounterSample.CounterFrequency\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterFrequency\n  nameWithType: CounterSample.CounterFrequency\n  fullName: CounterSample.CounterFrequency\n- uid: System.Diagnostics.CounterSample.CounterTimeStamp\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterTimeStamp\n  nameWithType: CounterSample.CounterTimeStamp\n  fullName: CounterSample.CounterTimeStamp\n- uid: System.Diagnostics.CounterSample.CounterType\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterType\n  nameWithType: CounterSample.CounterType\n  fullName: CounterSample.CounterType\n- uid: System.Diagnostics.CounterSample.Empty\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: Empty\n  nameWithType: CounterSample.Empty\n  fullName: CounterSample.Empty\n- uid: System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: Equals(CounterSample)\n  nameWithType: CounterSample.Equals(CounterSample)\n  fullName: CounterSample.Equals(CounterSample)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.CounterSample.Equals(System.Object)\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CounterSample.Equals(Object)\n  fullName: CounterSample.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.CounterSample.GetHashCode\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CounterSample.GetHashCode()\n  fullName: CounterSample.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: op_Equality(CounterSample, CounterSample)\n  nameWithType: CounterSample.op_Equality(CounterSample, CounterSample)\n  fullName: CounterSample.op_Equality(CounterSample, CounterSample)\n- uid: System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: op_Inequality(CounterSample, CounterSample)\n  nameWithType: CounterSample.op_Inequality(CounterSample, CounterSample)\n  fullName: CounterSample.op_Inequality(CounterSample, CounterSample)\n- uid: System.Diagnostics.CounterSample.RawValue\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: RawValue\n  nameWithType: CounterSample.RawValue\n  fullName: CounterSample.RawValue\n- uid: System.Diagnostics.CounterSample.SystemFrequency\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: SystemFrequency\n  nameWithType: CounterSample.SystemFrequency\n  fullName: CounterSample.SystemFrequency\n- uid: System.Diagnostics.CounterSample.TimeStamp\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: TimeStamp\n  nameWithType: CounterSample.TimeStamp\n  fullName: CounterSample.TimeStamp\n- uid: System.Diagnostics.CounterSample.TimeStamp100nSec\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: TimeStamp100nSec\n  nameWithType: CounterSample.TimeStamp100nSec\n  fullName: CounterSample.TimeStamp100nSec\n- uid: System.Diagnostics.CounterSample.#ctor*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterSample\n  nameWithType: CounterSample.CounterSample\n  fullName: CounterSample.CounterSample\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.BaseValue*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: BaseValue\n  nameWithType: CounterSample.BaseValue\n  fullName: CounterSample.BaseValue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.Calculate*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: Calculate\n  nameWithType: CounterSample.Calculate\n  fullName: CounterSample.Calculate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.CounterFrequency*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterFrequency\n  nameWithType: CounterSample.CounterFrequency\n  fullName: CounterSample.CounterFrequency\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.CounterTimeStamp*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterTimeStamp\n  nameWithType: CounterSample.CounterTimeStamp\n  fullName: CounterSample.CounterTimeStamp\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.CounterType*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: CounterType\n  nameWithType: CounterSample.CounterType\n  fullName: CounterSample.CounterType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.Equals*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: Equals\n  nameWithType: CounterSample.Equals\n  fullName: CounterSample.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.GetHashCode*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CounterSample.GetHashCode\n  fullName: CounterSample.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.op_Equality*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: op_Equality\n  nameWithType: CounterSample.op_Equality\n  fullName: CounterSample.op_Equality\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.op_Inequality*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CounterSample.op_Inequality\n  fullName: CounterSample.op_Inequality\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.RawValue*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: RawValue\n  nameWithType: CounterSample.RawValue\n  fullName: CounterSample.RawValue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.SystemFrequency*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: SystemFrequency\n  nameWithType: CounterSample.SystemFrequency\n  fullName: CounterSample.SystemFrequency\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.TimeStamp*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: TimeStamp\n  nameWithType: CounterSample.TimeStamp\n  fullName: CounterSample.TimeStamp\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n- uid: System.Diagnostics.CounterSample.TimeStamp100nSec*\n  parent: System.Diagnostics.CounterSample\n  isExternal: false\n  name: TimeStamp100nSec\n  nameWithType: CounterSample.TimeStamp100nSec\n  fullName: CounterSample.TimeStamp100nSec\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml\n"}