{"nodes":[{"content":"Provides an interface for managing designer transactions and components.","nodes":[{"pos":[0,72],"content":"Provides an interface for managing designer transactions and components.","nodes":[{"content":"Provides an interface for managing designer transactions and components.","pos":[0,72]}]}],"pos":[1895,1968],"yaml":true},{"content":"<xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.  \n  \n The .NET Framework does not provide an implementation of this interface. The interface is implemented by development tools that support designers.","nodes":[{"pos":[0,198],"content":"<xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.","pos":[0,198],"source":"<xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management."}]},{"pos":[205,351],"content":"The .NET Framework does not provide an implementation of this interface. The interface is implemented by development tools that support designers.","nodes":[{"content":"The .NET Framework does not provide an implementation of this interface. The interface is implemented by development tools that support designers.","pos":[0,146],"nodes":[{"content":"The .NET Framework does not provide an implementation of this interface.","pos":[0,72]},{"content":"The interface is implemented by development tools that support designers.","pos":[73,146]}]}]}],"pos":[1979,2335],"yaml":true,"extradata":"MT"},{"content":"Activates the designer that this host is hosting.","nodes":[{"pos":[0,49],"content":"Activates the designer that this host is hosting.","nodes":[{"content":"Activates the designer that this host is hosting.","pos":[0,49]}]}],"pos":[5114,5164],"yaml":true},{"content":"Designers should be activated before they display their user interface.","nodes":[{"pos":[0,71],"content":"Designers should be activated before they display their user interface.","nodes":[{"content":"Designers should be activated before they display their user interface.","pos":[0,71]}]}],"pos":[5175,5247],"yaml":true,"extradata":"MT"},{"content":"Occurs when this designer is activated.","nodes":[{"pos":[0,39],"content":"Occurs when this designer is activated.","nodes":[{"content":"Occurs when this designer is activated.","pos":[0,39]}]}],"pos":[6593,6633],"yaml":true},{"content":"A designer is activated before it is displayed.","nodes":[{"pos":[0,47],"content":"A designer is activated before it is displayed.","nodes":[{"content":"A designer is activated before it is displayed.","pos":[0,47]}]}],"pos":[6644,6692],"yaml":true,"extradata":"MT"},{"content":"Gets the container for this designer host.","nodes":[{"pos":[0,42],"content":"Gets the container for this designer host.","nodes":[{"content":"Gets the container for this designer host.","pos":[0,42]}]}],"pos":[8035,8078],"yaml":true},{"content":"This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document. You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.","nodes":[{"pos":[0,308],"content":"This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document. You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.","nodes":[{"content":"This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document. You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.","pos":[0,308],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.ComponentModel.IContainer&gt;</ph> contains the components of the current design mode document.","pos":[0,105],"source":"This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document."},{"content":"You can list or access any of the components of the current design mode document through the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IContainer.Components%2A&gt;</ph> member of this <ph id=\"ph2\">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.","pos":[106,308],"source":" You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>."}]}]}],"pos":[8089,8398],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.IContainer\"></xref> for this host.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IContainer\"&gt;&lt;/xref&gt;</ph> for this host.","source":"The <xref href=\"System.ComponentModel.IContainer\"></xref> for this host."}],"pos":[8556,8629],"yaml":true},{"content":"Creates a component of the specified type and adds it to the design document.","nodes":[{"pos":[0,77],"content":"Creates a component of the specified type and adds it to the design document.","nodes":[{"content":"Creates a component of the specified type and adds it to the design document.","pos":[0,77]}]}],"pos":[10003,10081],"yaml":true},{"content":"If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.  \n  \n This method does not specify a name for the component. The method creates the component and adds it to the designer container.","nodes":[{"pos":[0,126],"content":"If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.","nodes":[{"content":"If the type cannot be resolved into an object that implements <ph id=\"ph1\">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, an exception is thrown.","pos":[0,126],"source":"If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown."}]},{"pos":[133,259],"content":"This method does not specify a name for the component. The method creates the component and adds it to the designer container.","nodes":[{"content":"This method does not specify a name for the component. The method creates the component and adds it to the designer container.","pos":[0,126],"nodes":[{"content":"This method does not specify a name for the component.","pos":[0,54]},{"content":"The method creates the component and adds it to the designer container.","pos":[55,126]}]}]}],"pos":[10092,10356],"yaml":true,"extradata":"MT"},{"content":"The type of the component to create.","nodes":[{"pos":[0,36],"content":"The type of the component to create.","nodes":[{"content":"The type of the component to create.","pos":[0,36]}]}],"pos":[10542,10579],"yaml":true},{"content":"The newly created component.","nodes":[{"pos":[0,28],"content":"The newly created component.","nodes":[{"content":"The newly created component.","pos":[0,28]}]}],"pos":[10655,10684],"yaml":true},{"content":"Creates a component of the specified type and name, and adds it to the design document.","nodes":[{"pos":[0,87],"content":"Creates a component of the specified type and name, and adds it to the design document.","nodes":[{"content":"Creates a component of the specified type and name, and adds it to the design document.","pos":[0,87]}]}],"pos":[12130,12218],"yaml":true},{"content":"If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.  \n  \n This method creates the component and adds it to the designer container.","nodes":[{"pos":[0,126],"content":"If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.","nodes":[{"content":"If the type cannot be resolved into an object that implements <ph id=\"ph1\">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, an exception is thrown.","pos":[0,126],"source":"If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown."}]},{"pos":[133,205],"content":"This method creates the component and adds it to the designer container.","nodes":[{"content":"This method creates the component and adds it to the designer container.","pos":[0,72]}]}],"pos":[12229,12439],"yaml":true,"extradata":"MT"},{"content":"The type of the component to create.","nodes":[{"pos":[0,36],"content":"The type of the component to create.","nodes":[{"content":"The type of the component to create.","pos":[0,36]}]}],"pos":[12638,12675],"yaml":true},{"content":"The name for the component.","nodes":[{"pos":[0,27],"content":"The name for the component.","nodes":[{"content":"The name for the component.","pos":[0,27]}]}],"pos":[12735,12763],"yaml":true},{"content":"The newly created component.","nodes":[{"pos":[0,28],"content":"The newly created component.","nodes":[{"content":"The newly created component.","pos":[0,28]}]}],"pos":[12839,12868],"yaml":true},{"content":"Creates a <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.","nodes":[{"pos":[0,187],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerTransaction\"&gt;&lt;/xref&gt;</ph> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.","source":"Creates a <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref> that can encapsulate event sequences to improve performance and enable undo and redo support functionality."}],"pos":[14209,14397],"yaml":true},{"content":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.  \n  \n Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.","nodes":[{"pos":[0,295],"content":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.","nodes":[{"content":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.","pos":[0,295],"nodes":[{"content":"This method creates a <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> that can be used to encapsulate a series of operations.","pos":[0,133],"source":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations."},{"content":"Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.","pos":[134,295]}]}]},{"pos":[302,1000],"content":"Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.","nodes":[{"content":"Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.","pos":[0,698],"nodes":[{"content":"Lengthy operations that involve multiple components can raise many events.","pos":[0,74]},{"content":"These events can cause side effects, such as flicker or degraded performance.","pos":[75,152]},{"content":"When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.","pos":[153,335]},{"content":"Some operations handle the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph> events and perform work only when a transaction is not in progress.","pos":[336,571],"source":" Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress."},{"content":"For more information on using transactions, see the documentation for <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.","pos":[572,698],"source":" For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>."}]}]}],"pos":[14408,15413],"yaml":true,"extradata":"MT"},{"content":"A new instance of <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref>. When you complete the steps in your transaction, you should call <xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"></xref> on this object.","nodes":[{"pos":[0,246],"content":"A new instance of <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref>. When you complete the steps in your transaction, you should call <xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"></xref> on this object.","nodes":[{"content":"A new instance of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerTransaction\"&gt;&lt;/xref&gt;</ph>.","pos":[0,88],"source":"A new instance of <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref>."},{"content":"When you complete the steps in your transaction, you should call <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"&gt;&lt;/xref&gt;</ph> on this object.","pos":[89,246],"source":" When you complete the steps in your transaction, you should call <xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"></xref> on this object."}]}],"pos":[15625,15872],"yaml":true},{"content":"Creates a <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.","nodes":[{"pos":[0,232],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerTransaction\"&gt;&lt;/xref&gt;</ph> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.","source":"Creates a <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description."}],"pos":[17278,17511],"yaml":true},{"content":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.  \n  \n Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.","nodes":[{"pos":[0,295],"content":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.","nodes":[{"content":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.","pos":[0,295],"nodes":[{"content":"This method creates a <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> that can be used to encapsulate a series of operations.","pos":[0,133],"source":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations."},{"content":"Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.","pos":[134,295]}]}]},{"pos":[302,1000],"content":"Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.","nodes":[{"content":"Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.","pos":[0,698],"nodes":[{"content":"Lengthy operations that involve multiple components can raise many events.","pos":[0,74]},{"content":"These events can cause side effects, such as flicker or degraded performance.","pos":[75,152]},{"content":"When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.","pos":[153,335]},{"content":"Some operations handle the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;</ph> events and perform work only when a transaction is not in progress.","pos":[336,571],"source":" Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress."},{"content":"For more information on using transactions, see the documentation for <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.","pos":[572,698],"source":" For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>."}]}]}],"pos":[17522,18527],"yaml":true,"extradata":"MT"},{"content":"A title or description for the newly created transaction.","nodes":[{"pos":[0,57],"content":"A title or description for the newly created transaction.","nodes":[{"content":"A title or description for the newly created transaction.","pos":[0,57]}]}],"pos":[18729,18787],"yaml":true},{"content":"A new <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref>. When you have completed the steps in your transaction, you should call <xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"></xref> on this object.","nodes":[{"pos":[0,240],"content":"A new <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref>. When you have completed the steps in your transaction, you should call <xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"></xref> on this object.","nodes":[{"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerTransaction\"&gt;&lt;/xref&gt;</ph>.","pos":[0,76],"source":"A new <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref>."},{"content":"When you have completed the steps in your transaction, you should call <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"&gt;&lt;/xref&gt;</ph> on this object.","pos":[77,240],"source":" When you have completed the steps in your transaction, you should call <xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"></xref> on this object."}]}],"pos":[18879,19120],"yaml":true},{"content":"Occurs when this designer is deactivated.","nodes":[{"pos":[0,41],"content":"Occurs when this designer is deactivated.","nodes":[{"content":"Occurs when this designer is deactivated.","pos":[0,41]}]}],"pos":[20420,20462],"yaml":true},{"content":"A designer is deactivated just before it is no longer displayed.","nodes":[{"pos":[0,64],"content":"A designer is deactivated just before it is no longer displayed.","nodes":[{"content":"A designer is deactivated just before it is no longer displayed.","pos":[0,64]}]}],"pos":[20473,20538],"yaml":true,"extradata":"MT"},{"content":"Destroys the specified component and removes it from the designer container.","nodes":[{"pos":[0,76],"content":"Destroys the specified component and removes it from the designer container.","nodes":[{"content":"Destroys the specified component and removes it from the designer container.","pos":[0,76]}]}],"pos":[22061,22138],"yaml":true},{"content":"The component to destroy.","nodes":[{"pos":[0,25],"content":"The component to destroy.","nodes":[{"content":"The component to destroy.","pos":[0,25]}]}],"pos":[22336,22362],"yaml":true},{"content":"Gets the designer instance that contains the specified component.","nodes":[{"pos":[0,65],"content":"Gets the designer instance that contains the specified component.","nodes":[{"content":"Gets the designer instance that contains the specified component.","pos":[0,65]}]}],"pos":[23800,23866],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.IComponent\"></xref> to retrieve the designer for.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;&lt;/xref&gt;</ph> to retrieve the designer for.","source":"The <xref href=\"System.ComponentModel.IComponent\"></xref> to retrieve the designer for."}],"pos":[24093,24181],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.Design.IDesigner\"></xref>, or `null` if there is no designer for the specified component.","nodes":[{"pos":[0,126],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesigner\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph2\">`null`</ph> if there is no designer for the specified component.","source":"An <xref href=\"System.ComponentModel.Design.IDesigner\"></xref>, or `null` if there is no designer for the specified component."}],"pos":[24263,24390],"yaml":true},{"content":"Gets an instance of the specified, fully qualified type name.","nodes":[{"pos":[0,61],"content":"Gets an instance of the specified, fully qualified type name.","nodes":[{"content":"Gets an instance of the specified, fully qualified type name.","pos":[0,61]}]}],"pos":[25730,25792],"yaml":true},{"content":"The name of the type to load.","nodes":[{"pos":[0,29],"content":"The name of the type to load.","nodes":[{"content":"The name of the type to load.","pos":[0,29]}]}],"pos":[25934,25964],"yaml":true},{"content":"The type object for the specified type name, or `null` if the type cannot be found.","nodes":[{"pos":[0,83],"content":"The type object for the specified type name, or <ph id=\"ph1\">`null`</ph> if the type cannot be found.","source":"The type object for the specified type name, or `null` if the type cannot be found."}],"pos":[26019,26103],"yaml":true},{"content":"Gets a value indicating whether the designer host is currently in a transaction.","nodes":[{"pos":[0,80],"content":"Gets a value indicating whether the designer host is currently in a transaction.","nodes":[{"content":"Gets a value indicating whether the designer host is currently in a transaction.","pos":[0,80]}]}],"pos":[27408,27489],"yaml":true},{"content":"`true` if a transaction is in progress; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if a transaction is in progress; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a transaction is in progress; otherwise, `false`."}],"pos":[27605,27667],"yaml":true},{"content":"Occurs when this designer completes loading its document.","nodes":[{"pos":[0,57],"content":"Occurs when this designer completes loading its document.","nodes":[{"content":"Occurs when this designer completes loading its document.","pos":[0,57]}]}],"pos":[28969,29027],"yaml":true},{"content":"This event occurs after a designer completes loading its document.","nodes":[{"pos":[0,66],"content":"This event occurs after a designer completes loading its document.","nodes":[{"content":"This event occurs after a designer completes loading its document.","pos":[0,66]}]}],"pos":[29038,29105],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the designer host is currently loading the document.","nodes":[{"pos":[0,84],"content":"Gets a value indicating whether the designer host is currently loading the document.","nodes":[{"content":"Gets a value indicating whether the designer host is currently loading the document.","pos":[0,84]}]}],"pos":[30439,30524],"yaml":true},{"content":"`true` if the designer host is currently loading the document; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the designer host is currently loading the document; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the designer host is currently loading the document; otherwise, `false`."}],"pos":[30634,30719],"yaml":true},{"content":"Gets the instance of the base class used as the root component for the current design.","nodes":[{"pos":[0,86],"content":"Gets the instance of the base class used as the root component for the current design.","nodes":[{"content":"Gets the instance of the base class used as the root component for the current design.","pos":[0,86]}]}],"pos":[32024,32111],"yaml":true},{"content":"This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.","nodes":[{"pos":[0,181],"content":"This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.","nodes":[{"content":"This base class is typically a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> instance; it defines the class for which the user's derived class extends.","pos":[0,181],"source":"This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends."}]}],"pos":[32122,32304],"yaml":true,"extradata":"MT"},{"content":"The instance of the root component class.","nodes":[{"pos":[0,41],"content":"The instance of the root component class.","nodes":[{"content":"The instance of the root component class.","pos":[0,41]}]}],"pos":[32466,32508],"yaml":true},{"content":"Gets the fully qualified name of the class being designed.","nodes":[{"pos":[0,58],"content":"Gets the fully qualified name of the class being designed.","nodes":[{"content":"Gets the fully qualified name of the class being designed.","pos":[0,58]}]}],"pos":[33873,33932],"yaml":true},{"content":"The fully qualified name of the base component class.","nodes":[{"pos":[0,53],"content":"The fully qualified name of the base component class.","nodes":[{"content":"The fully qualified name of the base component class.","pos":[0,53]}]}],"pos":[34058,34112],"yaml":true},{"content":"Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionClosed\"></xref> event.","nodes":[{"pos":[0,118],"content":"Adds an event handler for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionClosed\"&gt;&lt;/xref&gt;</ph> event.","source":"Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionClosed\"></xref> event."}],"pos":[35453,35572],"yaml":true},{"content":"This event occurs after a transaction is closed.  \n  \n A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","nodes":[{"pos":[0,48],"content":"This event occurs after a transaction is closed.","nodes":[{"content":"This event occurs after a transaction is closed.","pos":[0,48]}]},{"pos":[55,294],"content":"A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","nodes":[{"content":"A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","pos":[0,239],"nodes":[{"content":"A transaction can sometimes change multiple values.","pos":[0,51]},{"content":"The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.","pos":[52,168]},{"content":"These methods defer processing until after the transaction has closed.","pos":[169,239]}]}]}],"pos":[35583,35882],"yaml":true,"extradata":"MT"},{"content":"Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionClosing\"></xref> event.","nodes":[{"pos":[0,119],"content":"Adds an event handler for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionClosing\"&gt;&lt;/xref&gt;</ph> event.","source":"Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionClosing\"></xref> event."}],"pos":[37383,37503],"yaml":true},{"content":"This event occurs just before a transaction is completed.  \n  \n A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","nodes":[{"pos":[0,57],"content":"This event occurs just before a transaction is completed.","nodes":[{"content":"This event occurs just before a transaction is completed.","pos":[0,57]}]},{"pos":[64,303],"content":"A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","nodes":[{"content":"A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","pos":[0,239],"nodes":[{"content":"A transaction can sometimes change multiple values.","pos":[0,51]},{"content":"The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.","pos":[52,168]},{"content":"These methods defer processing until after the transaction has closed.","pos":[169,239]}]}]}],"pos":[37514,37822],"yaml":true,"extradata":"MT"},{"content":"Gets the description of the current transaction.","nodes":[{"pos":[0,48],"content":"Gets the description of the current transaction.","nodes":[{"content":"Gets the description of the current transaction.","pos":[0,48]}]}],"pos":[39351,39400],"yaml":true},{"content":"The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.","nodes":[{"pos":[0,126],"content":"The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.","nodes":[{"content":"The description is the last description specified with <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph>.","pos":[0,126],"source":"The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>."}]}],"pos":[39411,39538],"yaml":true,"extradata":"MT"},{"content":"A description of the current transaction.","nodes":[{"pos":[0,41],"content":"A description of the current transaction.","nodes":[{"content":"A description of the current transaction.","pos":[0,41]}]}],"pos":[39664,39706],"yaml":true},{"content":"Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionOpened\"></xref> event.","nodes":[{"pos":[0,118],"content":"Adds an event handler for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionOpened\"&gt;&lt;/xref&gt;</ph> event.","source":"Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionOpened\"></xref> event."}],"pos":[41047,41166],"yaml":true},{"content":"This event occurs when a transaction has begun.  \n  \n A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","nodes":[{"pos":[0,47],"content":"This event occurs when a transaction has begun.","nodes":[{"content":"This event occurs when a transaction has begun.","pos":[0,47]}]},{"pos":[54,293],"content":"A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","nodes":[{"content":"A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.","pos":[0,239],"nodes":[{"content":"A transaction can sometimes change multiple values.","pos":[0,51]},{"content":"The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.","pos":[52,168]},{"content":"These methods defer processing until after the transaction has closed.","pos":[169,239]}]}]}],"pos":[41177,41475],"yaml":true,"extradata":"MT"},{"content":"Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionOpening\"></xref> event.","nodes":[{"pos":[0,119],"content":"Adds an event handler for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionOpening\"&gt;&lt;/xref&gt;</ph> event.","source":"Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionOpening\"></xref> event."}],"pos":[42877,42997],"yaml":true},{"content":"This event occurs when a transaction is about to begin.  \n  \n This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun. The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made. Subsequent calls do not generate this event until all transaction objects have been disposed.","nodes":[{"pos":[0,55],"content":"This event occurs when a transaction is about to begin.","nodes":[{"content":"This event occurs when a transaction is about to begin.","pos":[0,55]}]},{"pos":[62,423],"content":"This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun. The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made. Subsequent calls do not generate this event until all transaction objects have been disposed.","nodes":[{"content":"This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun. The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made. Subsequent calls do not generate this event until all transaction objects have been disposed.","pos":[0,361],"nodes":[{"content":"This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.","pos":[0,127]},{"content":"The specified handler is called only when the first call to <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</ph> is made.","pos":[128,267],"source":" The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made."},{"content":"Subsequent calls do not generate this event until all transaction objects have been disposed.","pos":[268,361]}]}]}],"pos":[43008,43436],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IDesignerHost\n  commentId: T:System.ComponentModel.Design.IDesignerHost\n  id: IDesignerHost\n  children:\n  - System.ComponentModel.Design.IDesignerHost.Activate\n  - System.ComponentModel.Design.IDesignerHost.Activated\n  - System.ComponentModel.Design.IDesignerHost.Container\n  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)\n  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)\n  - System.ComponentModel.Design.IDesignerHost.CreateTransaction\n  - System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)\n  - System.ComponentModel.Design.IDesignerHost.Deactivated\n  - System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)\n  - System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)\n  - System.ComponentModel.Design.IDesignerHost.GetType(System.String)\n  - System.ComponentModel.Design.IDesignerHost.InTransaction\n  - System.ComponentModel.Design.IDesignerHost.LoadComplete\n  - System.ComponentModel.Design.IDesignerHost.Loading\n  - System.ComponentModel.Design.IDesignerHost.RootComponent\n  - System.ComponentModel.Design.IDesignerHost.RootComponentClassName\n  - System.ComponentModel.Design.IDesignerHost.TransactionClosed\n  - System.ComponentModel.Design.IDesignerHost.TransactionClosing\n  - System.ComponentModel.Design.IDesignerHost.TransactionDescription\n  - System.ComponentModel.Design.IDesignerHost.TransactionOpened\n  - System.ComponentModel.Design.IDesignerHost.TransactionOpening\n  langs:\n  - csharp\n  name: IDesignerHost\n  nameWithType: IDesignerHost\n  fullName: System.ComponentModel.Design.IDesignerHost\n  type: Interface\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Provides an interface for managing designer transactions and components.\n  remarks: \"<xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.  \\n  \\n The .NET Framework does not provide an implementation of this interface. The interface is implemented by development tools that support designers.\"\n  example:\n  - \"The following example code demonstrates how to obtain the <xref:System.ComponentModel.Design.IDesignerHost> service interface from a designer or sited component.  \\n  \\n [!code-cpp[DesignerHostAcquisition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]\\n [!code-csharp[DesignerHostAcquisition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]\\n [!code-vb[DesignerHostAcquisition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  \\n  \\n The following example code demonstrates using the <xref:System.ComponentModel.Design.IDesignerHost> interface to list project components.  \\n  \\n [!code-cpp[IDesignerHostExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]\\n [!code-csharp[IDesignerHostExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]\\n [!code-vb[IDesignerHostExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer\n  derivedClasses:\n  - System.ComponentModel.Design.Serialization.IDesignerLoaderHost\n  implements:\n  - System.ComponentModel.Design.IServiceContainer\n  - System.IServiceProvider\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.Activate\n  commentId: M:System.ComponentModel.Design.IDesignerHost.Activate\n  id: Activate\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: Activate()\n  nameWithType: IDesignerHost.Activate()\n  fullName: IDesignerHost.Activate()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Activates the designer that this host is hosting.\n  remarks: Designers should be activated before they display their user interface.\n  syntax:\n    content: public void Activate ();\n    parameters: []\n  overload: System.ComponentModel.Design.IDesignerHost.Activate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.Activated\n  commentId: E:System.ComponentModel.Design.IDesignerHost.Activated\n  id: Activated\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: Activated\n  nameWithType: IDesignerHost.Activated\n  fullName: IDesignerHost.Activated\n  type: Event\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Occurs when this designer is activated.\n  remarks: A designer is activated before it is displayed.\n  syntax:\n    content: public event EventHandler Activated;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.Container\n  commentId: P:System.ComponentModel.Design.IDesignerHost.Container\n  id: Container\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: Container\n  nameWithType: IDesignerHost.Container\n  fullName: IDesignerHost.Container\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the container for this designer host.\n  remarks: This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document. You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.\n  syntax:\n    content: public System.ComponentModel.IContainer Container { get; }\n    return:\n      type: System.ComponentModel.IContainer\n      description: The <xref href=\"System.ComponentModel.IContainer\"></xref> for this host.\n  overload: System.ComponentModel.Design.IDesignerHost.Container*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)\n  commentId: M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)\n  id: CreateComponent(System.Type)\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: CreateComponent(Type)\n  nameWithType: IDesignerHost.CreateComponent(Type)\n  fullName: IDesignerHost.CreateComponent(Type)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Creates a component of the specified type and adds it to the design document.\n  remarks: \"If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.  \\n  \\n This method does not specify a name for the component. The method creates the component and adds it to the designer container.\"\n  syntax:\n    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass);\n    parameters:\n    - id: componentClass\n      type: System.Type\n      description: The type of the component to create.\n    return:\n      type: System.ComponentModel.IComponent\n      description: The newly created component.\n  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)\n  commentId: M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)\n  id: CreateComponent(System.Type,System.String)\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: CreateComponent(Type, String)\n  nameWithType: IDesignerHost.CreateComponent(Type, String)\n  fullName: IDesignerHost.CreateComponent(Type, String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Creates a component of the specified type and name, and adds it to the design document.\n  remarks: \"If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.  \\n  \\n This method creates the component and adds it to the designer container.\"\n  syntax:\n    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);\n    parameters:\n    - id: componentClass\n      type: System.Type\n      description: The type of the component to create.\n    - id: name\n      type: System.String\n      description: The name for the component.\n    return:\n      type: System.ComponentModel.IComponent\n      description: The newly created component.\n  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction\n  commentId: M:System.ComponentModel.Design.IDesignerHost.CreateTransaction\n  id: CreateTransaction\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: CreateTransaction()\n  nameWithType: IDesignerHost.CreateTransaction()\n  fullName: IDesignerHost.CreateTransaction()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Creates a <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.\n  remarks: \"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.  \\n  \\n Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.\"\n  syntax:\n    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Design.DesignerTransaction\n      description: A new instance of <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref>. When you complete the steps in your transaction, you should call <xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"></xref> on this object.\n  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)\n  commentId: M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)\n  id: CreateTransaction(System.String)\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: CreateTransaction(String)\n  nameWithType: IDesignerHost.CreateTransaction(String)\n  fullName: IDesignerHost.CreateTransaction(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Creates a <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.\n  remarks: \"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations. Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.  \\n  \\n Lengthy operations that involve multiple components can raise many events. These events can cause side effects, such as flicker or degraded performance. When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction. Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress. For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.\"\n  syntax:\n    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);\n    parameters:\n    - id: description\n      type: System.String\n      description: A title or description for the newly created transaction.\n    return:\n      type: System.ComponentModel.Design.DesignerTransaction\n      description: A new <xref href=\"System.ComponentModel.Design.DesignerTransaction\"></xref>. When you have completed the steps in your transaction, you should call <xref href=\"System.ComponentModel.Design.DesignerTransaction.Commit\"></xref> on this object.\n  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.Deactivated\n  commentId: E:System.ComponentModel.Design.IDesignerHost.Deactivated\n  id: Deactivated\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: Deactivated\n  nameWithType: IDesignerHost.Deactivated\n  fullName: IDesignerHost.Deactivated\n  type: Event\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Occurs when this designer is deactivated.\n  remarks: A designer is deactivated just before it is no longer displayed.\n  syntax:\n    content: public event EventHandler Deactivated;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)\n  commentId: M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)\n  id: DestroyComponent(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: DestroyComponent(IComponent)\n  nameWithType: IDesignerHost.DestroyComponent(IComponent)\n  fullName: IDesignerHost.DestroyComponent(IComponent)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Destroys the specified component and removes it from the designer container.\n  syntax:\n    content: public void DestroyComponent (System.ComponentModel.IComponent component);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component to destroy.\n  overload: System.ComponentModel.Design.IDesignerHost.DestroyComponent*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)\n  commentId: M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)\n  id: GetDesigner(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: GetDesigner(IComponent)\n  nameWithType: IDesignerHost.GetDesigner(IComponent)\n  fullName: IDesignerHost.GetDesigner(IComponent)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the designer instance that contains the specified component.\n  syntax:\n    content: public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The <xref href=\"System.ComponentModel.IComponent\"></xref> to retrieve the designer for.\n    return:\n      type: System.ComponentModel.Design.IDesigner\n      description: An <xref href=\"System.ComponentModel.Design.IDesigner\"></xref>, or `null` if there is no designer for the specified component.\n  overload: System.ComponentModel.Design.IDesignerHost.GetDesigner*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)\n  commentId: M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)\n  id: GetType(System.String)\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: GetType(String)\n  nameWithType: IDesignerHost.GetType(String)\n  fullName: IDesignerHost.GetType(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets an instance of the specified, fully qualified type name.\n  syntax:\n    content: public Type GetType (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to load.\n    return:\n      type: System.Type\n      description: The type object for the specified type name, or `null` if the type cannot be found.\n  overload: System.ComponentModel.Design.IDesignerHost.GetType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.InTransaction\n  commentId: P:System.ComponentModel.Design.IDesignerHost.InTransaction\n  id: InTransaction\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: InTransaction\n  nameWithType: IDesignerHost.InTransaction\n  fullName: IDesignerHost.InTransaction\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether the designer host is currently in a transaction.\n  syntax:\n    content: public bool InTransaction { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a transaction is in progress; otherwise, `false`.'\n  overload: System.ComponentModel.Design.IDesignerHost.InTransaction*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete\n  commentId: E:System.ComponentModel.Design.IDesignerHost.LoadComplete\n  id: LoadComplete\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: LoadComplete\n  nameWithType: IDesignerHost.LoadComplete\n  fullName: IDesignerHost.LoadComplete\n  type: Event\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Occurs when this designer completes loading its document.\n  remarks: This event occurs after a designer completes loading its document.\n  syntax:\n    content: public event EventHandler LoadComplete;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.Loading\n  commentId: P:System.ComponentModel.Design.IDesignerHost.Loading\n  id: Loading\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: Loading\n  nameWithType: IDesignerHost.Loading\n  fullName: IDesignerHost.Loading\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether the designer host is currently loading the document.\n  syntax:\n    content: public bool Loading { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the designer host is currently loading the document; otherwise, `false`.'\n  overload: System.ComponentModel.Design.IDesignerHost.Loading*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.RootComponent\n  commentId: P:System.ComponentModel.Design.IDesignerHost.RootComponent\n  id: RootComponent\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: RootComponent\n  nameWithType: IDesignerHost.RootComponent\n  fullName: IDesignerHost.RootComponent\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the instance of the base class used as the root component for the current design.\n  remarks: This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.\n  syntax:\n    content: public System.ComponentModel.IComponent RootComponent { get; }\n    return:\n      type: System.ComponentModel.IComponent\n      description: The instance of the root component class.\n  overload: System.ComponentModel.Design.IDesignerHost.RootComponent*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName\n  commentId: P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName\n  id: RootComponentClassName\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: RootComponentClassName\n  nameWithType: IDesignerHost.RootComponentClassName\n  fullName: IDesignerHost.RootComponentClassName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the fully qualified name of the class being designed.\n  syntax:\n    content: public string RootComponentClassName { get; }\n    return:\n      type: System.String\n      description: The fully qualified name of the base component class.\n  overload: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed\n  commentId: E:System.ComponentModel.Design.IDesignerHost.TransactionClosed\n  id: TransactionClosed\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: TransactionClosed\n  nameWithType: IDesignerHost.TransactionClosed\n  fullName: IDesignerHost.TransactionClosed\n  type: Event\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionClosed\"></xref> event.\n  remarks: \"This event occurs after a transaction is closed.  \\n  \\n A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.\"\n  syntax:\n    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;\n    return:\n      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing\n  commentId: E:System.ComponentModel.Design.IDesignerHost.TransactionClosing\n  id: TransactionClosing\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: TransactionClosing\n  nameWithType: IDesignerHost.TransactionClosing\n  fullName: IDesignerHost.TransactionClosing\n  type: Event\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionClosing\"></xref> event.\n  remarks: \"This event occurs just before a transaction is completed.  \\n  \\n A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.\"\n  syntax:\n    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;\n    return:\n      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription\n  commentId: P:System.ComponentModel.Design.IDesignerHost.TransactionDescription\n  id: TransactionDescription\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: TransactionDescription\n  nameWithType: IDesignerHost.TransactionDescription\n  fullName: IDesignerHost.TransactionDescription\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the description of the current transaction.\n  remarks: The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.\n  syntax:\n    content: public string TransactionDescription { get; }\n    return:\n      type: System.String\n      description: A description of the current transaction.\n  overload: System.ComponentModel.Design.IDesignerHost.TransactionDescription*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened\n  commentId: E:System.ComponentModel.Design.IDesignerHost.TransactionOpened\n  id: TransactionOpened\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: TransactionOpened\n  nameWithType: IDesignerHost.TransactionOpened\n  fullName: IDesignerHost.TransactionOpened\n  type: Event\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionOpened\"></xref> event.\n  remarks: \"This event occurs when a transaction has begun.  \\n  \\n A transaction can sometimes change multiple values. The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing. These methods defer processing until after the transaction has closed.\"\n  syntax:\n    content: public event EventHandler TransactionOpened;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening\n  commentId: E:System.ComponentModel.Design.IDesignerHost.TransactionOpening\n  id: TransactionOpening\n  parent: System.ComponentModel.Design.IDesignerHost\n  langs:\n  - csharp\n  name: TransactionOpening\n  nameWithType: IDesignerHost.TransactionOpening\n  fullName: IDesignerHost.TransactionOpening\n  type: Event\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds an event handler for the <xref href=\"System.ComponentModel.Design.IDesignerHost.TransactionOpening\"></xref> event.\n  remarks: \"This event occurs when a transaction is about to begin.  \\n  \\n This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun. The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made. Subsequent calls do not generate this event until all transaction objects have been disposed.\"\n  syntax:\n    content: public event EventHandler TransactionOpening;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Design.IDesignerHost.Activate\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: Activate()\n  nameWithType: IDesignerHost.Activate()\n  fullName: IDesignerHost.Activate()\n- uid: System.ComponentModel.Design.IDesignerHost.Activated\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: Activated\n  nameWithType: IDesignerHost.Activated\n  fullName: IDesignerHost.Activated\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.IDesignerHost.Container\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: Container\n  nameWithType: IDesignerHost.Container\n  fullName: IDesignerHost.Container\n- uid: System.ComponentModel.IContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: IContainer\n  nameWithType: IContainer\n  fullName: System.ComponentModel.IContainer\n- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: CreateComponent(Type)\n  nameWithType: IDesignerHost.CreateComponent(Type)\n  fullName: IDesignerHost.CreateComponent(Type)\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: CreateComponent(Type, String)\n  nameWithType: IDesignerHost.CreateComponent(Type, String)\n  fullName: IDesignerHost.CreateComponent(Type, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: CreateTransaction()\n  nameWithType: IDesignerHost.CreateTransaction()\n  fullName: IDesignerHost.CreateTransaction()\n- uid: System.ComponentModel.Design.DesignerTransaction\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerTransaction\n  nameWithType: DesignerTransaction\n  fullName: System.ComponentModel.Design.DesignerTransaction\n- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: CreateTransaction(String)\n  nameWithType: IDesignerHost.CreateTransaction(String)\n  fullName: IDesignerHost.CreateTransaction(String)\n- uid: System.ComponentModel.Design.IDesignerHost.Deactivated\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: Deactivated\n  nameWithType: IDesignerHost.Deactivated\n  fullName: IDesignerHost.Deactivated\n- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: DestroyComponent(IComponent)\n  nameWithType: IDesignerHost.DestroyComponent(IComponent)\n  fullName: IDesignerHost.DestroyComponent(IComponent)\n- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: GetDesigner(IComponent)\n  nameWithType: IDesignerHost.GetDesigner(IComponent)\n  fullName: IDesignerHost.GetDesigner(IComponent)\n- uid: System.ComponentModel.Design.IDesigner\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IDesigner\n  nameWithType: IDesigner\n  fullName: System.ComponentModel.Design.IDesigner\n- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: GetType(String)\n  nameWithType: IDesignerHost.GetType(String)\n  fullName: IDesignerHost.GetType(String)\n- uid: System.ComponentModel.Design.IDesignerHost.InTransaction\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: InTransaction\n  nameWithType: IDesignerHost.InTransaction\n  fullName: IDesignerHost.InTransaction\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: LoadComplete\n  nameWithType: IDesignerHost.LoadComplete\n  fullName: IDesignerHost.LoadComplete\n- uid: System.ComponentModel.Design.IDesignerHost.Loading\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: Loading\n  nameWithType: IDesignerHost.Loading\n  fullName: IDesignerHost.Loading\n- uid: System.ComponentModel.Design.IDesignerHost.RootComponent\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: RootComponent\n  nameWithType: IDesignerHost.RootComponent\n  fullName: IDesignerHost.RootComponent\n- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: RootComponentClassName\n  nameWithType: IDesignerHost.RootComponentClassName\n  fullName: IDesignerHost.RootComponentClassName\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: TransactionClosed\n  nameWithType: IDesignerHost.TransactionClosed\n  fullName: IDesignerHost.TransactionClosed\n- uid: System.ComponentModel.Design.DesignerTransactionCloseEventHandler\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerTransactionCloseEventHandler\n  nameWithType: DesignerTransactionCloseEventHandler\n  fullName: System.ComponentModel.Design.DesignerTransactionCloseEventHandler\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: TransactionClosing\n  nameWithType: IDesignerHost.TransactionClosing\n  fullName: IDesignerHost.TransactionClosing\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: TransactionDescription\n  nameWithType: IDesignerHost.TransactionDescription\n  fullName: IDesignerHost.TransactionDescription\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: TransactionOpened\n  nameWithType: IDesignerHost.TransactionOpened\n  fullName: IDesignerHost.TransactionOpened\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: TransactionOpening\n  nameWithType: IDesignerHost.TransactionOpening\n  fullName: IDesignerHost.TransactionOpening\n- uid: System.ComponentModel.Design.IDesignerHost.Activate*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: Activate\n  nameWithType: IDesignerHost.Activate\n  fullName: IDesignerHost.Activate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.Container*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: Container\n  nameWithType: IDesignerHost.Container\n  fullName: IDesignerHost.Container\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: CreateComponent\n  nameWithType: IDesignerHost.CreateComponent\n  fullName: IDesignerHost.CreateComponent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: CreateTransaction\n  nameWithType: IDesignerHost.CreateTransaction\n  fullName: IDesignerHost.CreateTransaction\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: DestroyComponent\n  nameWithType: IDesignerHost.DestroyComponent\n  fullName: IDesignerHost.DestroyComponent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: GetDesigner\n  nameWithType: IDesignerHost.GetDesigner\n  fullName: IDesignerHost.GetDesigner\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.GetType*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: GetType\n  nameWithType: IDesignerHost.GetType\n  fullName: IDesignerHost.GetType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.InTransaction*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: InTransaction\n  nameWithType: IDesignerHost.InTransaction\n  fullName: IDesignerHost.InTransaction\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.Loading*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: Loading\n  nameWithType: IDesignerHost.Loading\n  fullName: IDesignerHost.Loading\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.RootComponent*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: RootComponent\n  nameWithType: IDesignerHost.RootComponent\n  fullName: IDesignerHost.RootComponent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: RootComponentClassName\n  nameWithType: IDesignerHost.RootComponentClassName\n  fullName: IDesignerHost.RootComponentClassName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription*\n  parent: System.ComponentModel.Design.IDesignerHost\n  isExternal: false\n  name: TransactionDescription\n  nameWithType: IDesignerHost.TransactionDescription\n  fullName: IDesignerHost.TransactionDescription\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IDesignerHost.xml\n- uid: System.ComponentModel.Design.IServiceContainer\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IServiceContainer\n  nameWithType: IServiceContainer\n  fullName: System.ComponentModel.Design.IServiceContainer\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n"}