{"nodes":[{"content":"Represents a `catch` exception block of a `try/catch` statement.","nodes":[{"pos":[0,64],"content":"Represents a <ph id=\"ph1\">`catch`</ph> exception block of a <ph id=\"ph2\">`try/catch`</ph> statement.","source":"Represents a `catch` exception block of a `try/catch` statement."}],"pos":[821,886],"yaml":true},{"content":"<xref:System.CodeDom.CodeCatchClause> can be used to represent a `catch` exception block of a `try/catch` statement.  \n  \n The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch. The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught. The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;xref:System.CodeDom.CodeCatchClause&gt;</ph> can be used to represent a <ph id=\"ph2\">`catch`</ph> exception block of a <ph id=\"ph3\">`try/catch`</ph> statement.","source":"<xref:System.CodeDom.CodeCatchClause> can be used to represent a `catch` exception block of a `try/catch` statement."},{"pos":[123,507],"content":"The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch. The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught. The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A&gt;</ph> property specifies the type of exception to catch.","pos":[0,114],"source":"The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeCatchClause.LocalName%2A&gt;</ph> property specifies a name for the variable representing the exception that has been caught.","pos":[115,261],"source":" The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeCatchClause.Statements%2A&gt;</ph> collection property contains the statements for the <ph id=\"ph2\">`catch`</ph> block.","pos":[262,384],"source":" The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block."}]}],"pos":[897,1409],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class.","nodes":[{"pos":[0,92],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCatchClause\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class."}],"pos":[3756,3849],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCatchClause\"&gt;&lt;/xref&gt;</ph> class using the specified local variable name for the exception.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception."}],"pos":[5045,5196],"yaml":true},{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","nodes":[{"pos":[0,96],"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","nodes":[{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","pos":[0,96],"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception.","pos":[0,78]},{"content":"This is optional.","pos":[79,96]}]}]}],"pos":[5343,5440],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception and exception type.","nodes":[{"pos":[0,169],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCatchClause\"&gt;&lt;/xref&gt;</ph> class using the specified local variable name for the exception and exception type.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception and exception type."}],"pos":[6723,6893],"yaml":true},{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","nodes":[{"pos":[0,96],"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","nodes":[{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","pos":[0,96],"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception.","pos":[0,78]},{"content":"This is optional.","pos":[79,96]}]}]}],"pos":[7093,7190],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch.","nodes":[{"pos":[0,102],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> that indicates the type of exception to catch.","source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch."}],"pos":[7283,7386],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception, exception type and statement collection.","nodes":[{"pos":[0,191],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCatchClause\"&gt;&lt;/xref&gt;</ph> class using the specified local variable name for the exception, exception type and statement collection.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception, exception type and statement collection."}],"pos":[8813,9005],"yaml":true},{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","nodes":[{"pos":[0,96],"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","nodes":[{"content":"The name of the local variable declared in the catch clause for the exception. This is optional.","pos":[0,96],"nodes":[{"content":"The name of the local variable declared in the catch clause for the exception.","pos":[0,78]},{"content":"This is optional.","pos":[79,96]}]}]}],"pos":[9248,9345],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch.","nodes":[{"pos":[0,102],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> that indicates the type of exception to catch.","source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch."}],"pos":[9438,9541],"yaml":true},{"content":"An array of <xref href=\"System.CodeDom.CodeStatement\"></xref> objects that represent the contents of the catch block.","nodes":[{"pos":[0,117],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatement\"&gt;&lt;/xref&gt;</ph> objects that represent the contents of the catch block.","source":"An array of <xref href=\"System.CodeDom.CodeStatement\"></xref> objects that represent the contents of the catch block."}],"pos":[9624,9742],"yaml":true},{"content":"Gets or sets the type of the exception to handle with the catch block.","nodes":[{"pos":[0,70],"content":"Gets or sets the type of the exception to handle with the catch block.","nodes":[{"content":"Gets or sets the type of the exception to handle with the catch block.","pos":[0,70]}]}],"pos":[10843,10914],"yaml":true},{"content":"If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>.","nodes":[{"pos":[0,110],"content":"If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>.","nodes":[{"content":"If a value for this property is not specified, the value of this property defaults to <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph>.","pos":[0,110],"source":"If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>."}]}],"pos":[10925,11036],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the exception to handle.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> that indicates the type of the exception to handle.","source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the exception to handle."}],"pos":[11208,11316],"yaml":true},{"content":"Gets or sets the variable name of the exception that the `catch` clause handles.","nodes":[{"pos":[0,80],"content":"Gets or sets the variable name of the exception that the <ph id=\"ph1\">`catch`</ph> clause handles.","source":"Gets or sets the variable name of the exception that the `catch` clause handles."}],"pos":[12376,12457],"yaml":true},{"content":"This property specifies the name of the local variable for the exception. This local variable is optional. By default, the clause does not have this variable.","nodes":[{"pos":[0,158],"content":"This property specifies the name of the local variable for the exception. This local variable is optional. By default, the clause does not have this variable.","nodes":[{"content":"This property specifies the name of the local variable for the exception. This local variable is optional. By default, the clause does not have this variable.","pos":[0,158],"nodes":[{"content":"This property specifies the name of the local variable for the exception.","pos":[0,73]},{"content":"This local variable is optional.","pos":[74,106]},{"content":"By default, the clause does not have this variable.","pos":[107,158]}]}]}],"pos":[12468,12627],"yaml":true,"extradata":"MT"},{"content":"The name for the exception variable that the `catch` clause handles.","nodes":[{"pos":[0,68],"content":"The name for the exception variable that the <ph id=\"ph1\">`catch`</ph> clause handles.","source":"The name for the exception variable that the `catch` clause handles."}],"pos":[12745,12814],"yaml":true},{"content":"Gets the statements within the catch block.","nodes":[{"pos":[0,43],"content":"Gets the statements within the catch block.","nodes":[{"content":"Gets the statements within the catch block.","pos":[0,43]}]}],"pos":[13871,13915],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements within the catch block.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeStatementCollection\"&gt;&lt;/xref&gt;</ph> containing the statements within the catch block.","source":"A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements within the catch block."}],"pos":[14086,14198],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeCatchClause\n  commentId: T:System.CodeDom.CodeCatchClause\n  id: CodeCatchClause\n  children:\n  - System.CodeDom.CodeCatchClause.#ctor\n  - System.CodeDom.CodeCatchClause.#ctor(System.String)\n  - System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)\n  - System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])\n  - System.CodeDom.CodeCatchClause.CatchExceptionType\n  - System.CodeDom.CodeCatchClause.LocalName\n  - System.CodeDom.CodeCatchClause.Statements\n  langs:\n  - csharp\n  name: CodeCatchClause\n  nameWithType: CodeCatchClause\n  fullName: System.CodeDom.CodeCatchClause\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Represents a `catch` exception block of a `try/catch` statement.\n  remarks: \"<xref:System.CodeDom.CodeCatchClause> can be used to represent a `catch` exception block of a `try/catch` statement.  \\n  \\n The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch. The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught. The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block.\"\n  example:\n  - \"The following example code demonstrates using <xref:System.CodeDom.CodeCatchClause> objects to define exception handling clauses of a try...catch block.  \\n  \\n [!code-cpp[CodeTryCatchFinallyExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTryCatchFinallyExample/CPP/codetrycatchfinallyexample.cpp#2)]\\n [!code-csharp[CodeTryCatchFinallyExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTryCatchFinallyExample/CS/codetrycatchfinallyexample.cs#2)]\\n [!code-vb[CodeTryCatchFinallyExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTryCatchFinallyExample/VB/codetrycatchfinallyexample.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeCatchClause\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeCatchClause.#ctor\n  commentId: M:System.CodeDom.CodeCatchClause.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CodeCatchClause()\n  nameWithType: CodeCatchClause.CodeCatchClause()\n  fullName: CodeCatchClause.CodeCatchClause()\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class.\n  syntax:\n    content: public CodeCatchClause ();\n    parameters: []\n  overload: System.CodeDom.CodeCatchClause.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String)\n  commentId: M:System.CodeDom.CodeCatchClause.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CodeCatchClause(String)\n  nameWithType: CodeCatchClause.CodeCatchClause(String)\n  fullName: CodeCatchClause.CodeCatchClause(String)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception.\n  syntax:\n    content: public CodeCatchClause (string localName);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The name of the local variable declared in the catch clause for the exception. This is optional.\n  overload: System.CodeDom.CodeCatchClause.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)\n  commentId: M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)\n  id: '#ctor(System.String,System.CodeDom.CodeTypeReference)'\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CodeCatchClause(String, CodeTypeReference)\n  nameWithType: CodeCatchClause.CodeCatchClause(String, CodeTypeReference)\n  fullName: CodeCatchClause.CodeCatchClause(String, CodeTypeReference)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception and exception type.\n  syntax:\n    content: public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The name of the local variable declared in the catch clause for the exception. This is optional.\n    - id: catchExceptionType\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch.\n  overload: System.CodeDom.CodeCatchClause.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])\n  commentId: M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])\n  id: '#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])'\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CodeCatchClause(String, CodeTypeReference, CodeStatement[])\n  nameWithType: CodeCatchClause.CodeCatchClause(String, CodeTypeReference, CodeStatement[])\n  fullName: CodeCatchClause.CodeCatchClause(String, CodeTypeReference, CodeStatement[])\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeCatchClause\"></xref> class using the specified local variable name for the exception, exception type and statement collection.\n  syntax:\n    content: public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType, System.CodeDom.CodeStatement[] statements);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The name of the local variable declared in the catch clause for the exception. This is optional.\n    - id: catchExceptionType\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of exception to catch.\n    - id: statements\n      type: System.CodeDom.CodeStatement[]\n      description: An array of <xref href=\"System.CodeDom.CodeStatement\"></xref> objects that represent the contents of the catch block.\n  overload: System.CodeDom.CodeCatchClause.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeCatchClause.CatchExceptionType\n  commentId: P:System.CodeDom.CodeCatchClause.CatchExceptionType\n  id: CatchExceptionType\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: CatchExceptionType\n  nameWithType: CodeCatchClause.CatchExceptionType\n  fullName: CodeCatchClause.CatchExceptionType\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the type of the exception to handle with the catch block.\n  remarks: If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>.\n  syntax:\n    content: public System.CodeDom.CodeTypeReference CatchExceptionType { get; set; }\n    return:\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the exception to handle.\n  overload: System.CodeDom.CodeCatchClause.CatchExceptionType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeCatchClause.LocalName\n  commentId: P:System.CodeDom.CodeCatchClause.LocalName\n  id: LocalName\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: LocalName\n  nameWithType: CodeCatchClause.LocalName\n  fullName: CodeCatchClause.LocalName\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the variable name of the exception that the `catch` clause handles.\n  remarks: This property specifies the name of the local variable for the exception. This local variable is optional. By default, the clause does not have this variable.\n  syntax:\n    content: public string LocalName { get; set; }\n    return:\n      type: System.String\n      description: The name for the exception variable that the `catch` clause handles.\n  overload: System.CodeDom.CodeCatchClause.LocalName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeCatchClause.Statements\n  commentId: P:System.CodeDom.CodeCatchClause.Statements\n  id: Statements\n  parent: System.CodeDom.CodeCatchClause\n  langs:\n  - csharp\n  name: Statements\n  nameWithType: CodeCatchClause.Statements\n  fullName: CodeCatchClause.Statements\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets the statements within the catch block.\n  syntax:\n    content: public System.CodeDom.CodeStatementCollection Statements { get; }\n    return:\n      type: System.CodeDom.CodeStatementCollection\n      description: A <xref href=\"System.CodeDom.CodeStatementCollection\"></xref> containing the statements within the catch block.\n  overload: System.CodeDom.CodeCatchClause.Statements*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.CodeDom.CodeCatchClause.#ctor\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause()\n  nameWithType: CodeCatchClause.CodeCatchClause()\n  fullName: CodeCatchClause.CodeCatchClause()\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String)\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause(String)\n  nameWithType: CodeCatchClause.CodeCatchClause(String)\n  fullName: CodeCatchClause.CodeCatchClause(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause(String, CodeTypeReference)\n  nameWithType: CodeCatchClause.CodeCatchClause(String, CodeTypeReference)\n  fullName: CodeCatchClause.CodeCatchClause(String, CodeTypeReference)\n- uid: System.CodeDom.CodeTypeReference\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause(String, CodeTypeReference, CodeStatement[])\n  nameWithType: CodeCatchClause.CodeCatchClause(String, CodeTypeReference, CodeStatement[])\n  fullName: CodeCatchClause.CodeCatchClause(String, CodeTypeReference, CodeStatement[])\n- uid: System.CodeDom.CodeStatement\n  name: CodeStatement\n  nameWithType: CodeStatement\n  fullName: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeStatement[]\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatement[]\n  nameWithType: CodeStatement[]\n  fullName: System.CodeDom.CodeStatement[]\n  spec.csharp:\n  - uid: System.CodeDom.CodeStatement\n    name: CodeStatement\n    nameWithType: CodeStatement\n    fullName: System.CodeDom.CodeStatement\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.CodeCatchClause.CatchExceptionType\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CatchExceptionType\n  nameWithType: CodeCatchClause.CatchExceptionType\n  fullName: CodeCatchClause.CatchExceptionType\n- uid: System.CodeDom.CodeCatchClause.LocalName\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: LocalName\n  nameWithType: CodeCatchClause.LocalName\n  fullName: CodeCatchClause.LocalName\n- uid: System.CodeDom.CodeCatchClause.Statements\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: Statements\n  nameWithType: CodeCatchClause.Statements\n  fullName: CodeCatchClause.Statements\n- uid: System.CodeDom.CodeStatementCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatementCollection\n  nameWithType: CodeStatementCollection\n  fullName: System.CodeDom.CodeStatementCollection\n- uid: System.CodeDom.CodeCatchClause.#ctor*\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CodeCatchClause\n  nameWithType: CodeCatchClause.CodeCatchClause\n  fullName: CodeCatchClause.CodeCatchClause\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n- uid: System.CodeDom.CodeCatchClause.CatchExceptionType*\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: CatchExceptionType\n  nameWithType: CodeCatchClause.CatchExceptionType\n  fullName: CodeCatchClause.CatchExceptionType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n- uid: System.CodeDom.CodeCatchClause.LocalName*\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: LocalName\n  nameWithType: CodeCatchClause.LocalName\n  fullName: CodeCatchClause.LocalName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n- uid: System.CodeDom.CodeCatchClause.Statements*\n  parent: System.CodeDom.CodeCatchClause\n  isExternal: false\n  name: Statements\n  nameWithType: CodeCatchClause.Statements\n  fullName: CodeCatchClause.Statements\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeCatchClause.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}