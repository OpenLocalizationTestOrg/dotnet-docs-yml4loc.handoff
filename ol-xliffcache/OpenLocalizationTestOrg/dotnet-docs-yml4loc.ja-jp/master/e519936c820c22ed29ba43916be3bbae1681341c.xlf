<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e519936c820c22ed29ba43916be3bbae1681341c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Schema.XmlSchemaSet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0927c1a95b29c43e5b783079b748517bbed29dd0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">869bff44685f1b14c9b123a4495149de3f233fae</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains a cache of XML Schema definition language (XSD) schemas.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Doing so will compromise the security of your code.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be careful not to expose this information to untrusted callers.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional security considerations are covered in the "Security Considerations" section.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is a cache or library where you can store XML Schema definition language (XSD) schemas.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName&gt;</ph> property to assign the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object an XML reader should use for data validation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security Considerations</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use schemas from unknown or untrusted sources.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Doing so will compromise the security of your code.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to resolve external schemas by default.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;</ph> class to parse and match regular expressions in an XML schema.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions raised as a result of using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> class may contain sensitive information that should not be exposed in untrusted scenarios.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> returns the URI path to the schema file that caused the exception.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property should not be exposed in untrusted scenarios.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> class with the specified <ph id="ph2">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> object to use.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> object passed as a parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Adds the given <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> to the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object already exists in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method does nothing.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The functionality of this method is identical to that of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object to add to the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object if the schema is valid.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the schema is not valid and a <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> is specified, then <ph id="ph2">`null`</ph> is returned and the appropriate validation event is raised.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Otherwise, an <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;&lt;/xref&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The schema is not valid.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object passed as a parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Adds all the XML Schema definition language (XSD) schemas in the given <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> to the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Preprocessing performs the following basic tasks.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>References to internal and external schema components are resolved.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add is <ph id="ph3">`true`</ph>, all schemas in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add are added to the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add is <ph id="ph3">`false`</ph>, each schema added is preprocessed before being added.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of the schemas in the newly added <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> fails to be preprocessed, no schemas are added; instead, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the following two code example are not equivalent.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The previous two code examples are not equivalent.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the first example, if an invalid schema exists in <ph id="ph1">`schemaSet1`</ph> and its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>, no schemas are added to <ph id="ph4">`schemaSet`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the second example, a number of schemas can be added to <ph id="ph1">`schemaSet`</ph> before an invalid schema is encountered and an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A schema in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> object passed as a parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Adds the XML Schema definition language (XSD) schema at the URL specified to the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Preprocessing performs the following basic tasks.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>References to internal and external schema components are resolved.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> with the same target namespace and schema location URL as a schema already contained within the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> will return the original schema object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new schema is successfully added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any include or import elements encountered in an XML schema are resolved when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failure to resolve include and import elements results in a schema validation warning and if no <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> has been specified for the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object, these warning will not be reported.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a schema with the same target namespace as a schema that already exists in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, both schemas are added.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior differs from the obsolete <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying <ph id="ph1">`null`</ph> in the <ph id="ph2">`targetNamespace`</ph> parameter of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method instructs the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use the target namespace defined in the schema, as illustrated in the following code example.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the code example above, <ph id="ph1">`null`</ph> is specified as the <ph id="ph2">`targetNamespace`</ph> parameter to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the <ph id="ph1">`targetNamespace`</ph> defined in the books.xml file is used.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the result of calling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method would be identical if http://www.contoso.com/books had been specified as the <ph id="ph2">`targetNamespace`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The included schema is treated as if it had that target namespace defined.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, schemas without a target namespace can be added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and coerced into the target namespace specified by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method, as illustrated in the following example.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema above is added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was <ph id="ph2">`http://www.contoso.com/new/targetnamespace`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The schema <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetNamespace</ph><ept id="p1">&lt;/code&gt;</ept> property, or <ph id="ph2">`null`</ph> to use the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">targetNamespace</ph><ept id="p2">&lt;/code&gt;</ept> specified in the schema.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The URL that specifies the schema to load.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object if the schema is valid.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If the schema is not valid and a <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> is specified, then <ph id="ph2">`null`</ph> is returned and the appropriate validation event is raised.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Otherwise, an <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;&lt;/xref&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The schema is not valid.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The URL passed as a parameter is <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Adds the XML Schema definition language (XSD) schema contained in the <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> to the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Preprocessing performs the following basic tasks.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>References to internal and external schema components are resolved.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Successfully retrieved schemas imported or included by the schemas contained in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> are also added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is not positioned on the root element, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown unless the current item is an element.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current item is an <ph id="ph1">`xs:schema`</ph> element, the schema document is read into the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>; otherwise, an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown because the schema is not valid.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the schema was created from a <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName&gt;</ph> method call, the value of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is not used to resolve references to namespaces or schema locations in include and import elements.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method instructs the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use the target namespace defined in the schema.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of this behavior, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remaining functionality of this method is identical to that of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The schema <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetNamespace</ph><ept id="p1">&lt;/code&gt;</ept> property, or <ph id="ph2">`null`</ph> to use the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">targetNamespace</ph><ept id="p2">&lt;/code&gt;</ept> specified in the schema.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object if the schema is valid.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If the schema is not valid and a <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> is specified, then <ph id="ph2">`null`</ph> is returned and the appropriate validation event is raised.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Otherwise, an <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;&lt;/xref&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The schema is not valid.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object passed as a parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;</ph> class specifies Unique Particle Attribution (UPA) validation options for the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about enabling UPA validation checks, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default is an <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings"&gt;&lt;/xref&gt;</ph> instance with the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck"&gt;&lt;/xref&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Compiles the XML Schema definition language (XSD) schemas added to the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> into one logical schema.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called automatically when validation is needed and the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has not been previously compiled—for example, when an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used as an input to create an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property of an <ph id="ph5">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is already in the compiled state, this method will not recompile the schemas.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method executes successfully, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schemas that have been previously compiled by an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not recompiled.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, schemas that were compiled using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> will be recompiled.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need to call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method if you have changed a schema (or one of its includes/imports) after adding it to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it will not perform a full validation check.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will also resolve references to internal and external schema components.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects while included schemas are made part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the call to reprocess is successful, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to false.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An error occurred when validating and compiling the schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schemas that are indirectly added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are detected by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> method; for example, imported schemas.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, calling <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> with <ph id="ph3">`http://www.contoso.com/books`</ph> as a parameter, it returns <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The schema <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetNamespace</ph><ept id="p1">&lt;/code&gt;</ept> property.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a schema with the specified target namespace URI is in the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified XML Schema definition language (XSD) <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object is in the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object is in the <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> passed as a parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Copies all the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> objects from the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> to the given array, starting at the given index.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The array to copy the objects to.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The index in the array where copying will begin.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets the number of logical XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are two schemas for the namespace <ph id="ph1">`http://www.contoso.com`</ph> in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if a schema for the namespace <ph id="ph1">`http://www.contoso.com/retail`</ph> imported a schema for the <ph id="ph2">`http://www.contoso.com/books`</ph> namespace, the value of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> property would be 2.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The number of logical schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The collection of global attributes.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The collection of global elements.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A&gt;</ph> property always returns a type that represents the <ph id="ph2">`xs:anyType`</ph> complex type.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The collection of global simple and complex types.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> have been compiled.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is not affected if schemas are edited while in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Updates of the individual schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not tracked.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property can be <ph id="ph2">`true`</ph> even though one of the schemas contained in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been altered, as long as no schemas were added or removed from the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the schemas in the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> have been compiled since the last time a schema was added or removed from the <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the default <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> used by the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> when loading new XML Schema definition language (XSD) schemas.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A table of atomized string objects.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Removes the specified XML Schema definition language (XSD) schema from the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Removing a schema from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> sets the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object to remove from the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object removed from the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">`null`</ph> if the schema was not found in the <ph id="ph4">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The schema is not a valid schema.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> passed as a parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method removes the specified schema and all the schemas it imports from the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, as long as there are no dependencies on the schema or its imported schemas.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are dependencies on the schema or its imported schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, nothing is removed and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`false`</ph> is returned and a <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> is defined, a warning is sent to the event handler describing the dependencies.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified schema imports other schemas and the specified schema was previously removed with the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method will not remove the imported schemas and will return <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`parentSchema`</ph> imports <ph id="ph2">`childSchema1`</ph> and <ph id="ph3">`childSchema2`</ph> the following code will only remove <ph id="ph4">`parentSchema`</ph>, but not the imported <ph id="ph5">`childSchema1`</ph> and <ph id="ph6">`childSchema2`</ph> schemas:</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code will remove the <ph id="ph1">`parentSchema`</ph> and the imported schemas:</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method has no effect on the state of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object to remove from the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object and all its imports were successfully removed; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> passed as a parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Reprocesses an XML Schema definition language (XSD) schema that already exists in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reprocessing a schema performs all the preprocessing steps performed on a schema when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the call to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> is successful, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Reprocess method should be used after a schema in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified, after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has performed compilation.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need to call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method if you have changed a schema (or one of its includes/imports) after adding it to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it will not perform a full validation check.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will also resolve references to internal and external schema components.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects while included schemas are made part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the call to reprocess is successful, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to false.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The schema to reprocess.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object if the schema is a valid schema.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If the schema is not valid and a <ph id="ph1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;&lt;/xref&gt;</ph> is specified, <ph id="ph2">`null`</ph> is returned and the appropriate validation event is raised.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Otherwise, an <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaException"&gt;&lt;/xref&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The schema is not valid.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object passed as a parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchema"&gt;&lt;/xref&gt;</ph> object passed as a parameter does not already exist in the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns schemas that were added indirectly to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> because they were imported.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> method is the equivalent of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;</ph> method of the obsolete <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> object containing all the schemas that have been added to the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>If no schemas have been added to the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>, an empty <ph id="ph2">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> object is returned.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> that belong to the given namespace.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`targetNamespace`</ph> parameter is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>, then all schemas without a namespace are returned.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns schemas that were added indirectly to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> because they were imported.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> method is the equivalent of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;</ph> method of the obsolete <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The schema <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetNamespace</ph><ept id="p1">&lt;/code&gt;</ept> property.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> object containing all the schemas that have been added to the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph> that belong to the given namespace.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>If no schemas have been added to the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;&lt;/xref&gt;</ph>, an empty <ph id="ph2">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> object is returned.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sets an event handler for receiving information about schema validation errors when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are called.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an event handler is not defined, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown on any validation errors where the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> is <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions are not thrown for validation errors with an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> of <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to resolve external schemas by default.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>