### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  id: IEnumerator`1
  children:
  - System.Collections.Generic.IEnumerator`1.Current
  langs:
  - csharp
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  type: Interface
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.Collections.Generic
  summary: Supports a simple iteration over a generic collection.
  remarks: "<xref:System.Collections.Generic.IEnumerator%601> is the base interface for all generic enumerators.  \n  \n The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.  \n  \n <xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.  \n  \n The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability. It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>. However, if you choose to do this, you should make sure no callers are relying on the <xref:System.Collections.IEnumerator.Reset%2A> functionality.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=fullName> namespace are not synchronized."
  example:
  - "The following example shows an implementation of the <xref:System.Collections.Generic.IEnumerator%601> interface for a collection class of custom objects. The custom object is an instance of the type `Box`, and the collection class is `BoxCollection`. This code example is part of a larger example provided for the <xref:System.Collections.Generic.ICollection%601> interface.  \n  \n [!code-csharp[System.Collections.Generic.BoxExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxexamples/cs/program.cs#3)]\n [!code-vb[System.Collections.Generic.BoxExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxexamples/vb/program.vb#3)]"
  syntax:
    content: 'public interface IEnumerator<out T> : IDisposable, System.Collections.IEnumerator'
    typeParameters:
    - id: T
      description: The type of objects to enumerate.
  derivedClasses:
  - Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1
  - Microsoft.VisualC.StlClr.DequeEnumerator`1
  - Microsoft.VisualC.StlClr.HashEnumerator`2
  - Microsoft.VisualC.StlClr.ListEnumerator`1
  - Microsoft.VisualC.StlClr.TreeEnumerator`2
  - Microsoft.VisualC.StlClr.VectorEnumerator`1
  - System.ArraySegment`1.Enumerator
  - System.CharEnumerator
  - System.Collections.Generic.Dictionary`2.Enumerator
  - System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator
  - System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator
  - System.Collections.Generic.HashSet`1.Enumerator
  - System.Collections.Generic.LinkedList`1.Enumerator
  - System.Collections.Generic.List`1.Enumerator
  - System.Collections.Generic.Queue`1.Enumerator
  - System.Collections.Generic.SortedDictionary`2.Enumerator
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator
  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  - System.Collections.Generic.SortedSet`1.Enumerator
  - System.Collections.Generic.Stack`1.Enumerator
  - System.Collections.Immutable.ImmutableDictionary`2.Enumerator
  - System.Collections.Immutable.ImmutableHashSet`1.Enumerator
  - System.Collections.Immutable.ImmutableList`1.Enumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator
  - System.Collections.Immutable.ImmutableSortedSet`1.Enumerator
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator
  - System.Reflection.Metadata.AssemblyFileHandleCollection.Enumerator
  - System.Reflection.Metadata.AssemblyReferenceHandleCollection.Enumerator
  - System.Reflection.Metadata.BlobBuilder.Blobs
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  - System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator
  - System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.Enumerator
  - System.Reflection.Metadata.DocumentHandleCollection.Enumerator
  - System.Reflection.Metadata.EventDefinitionHandleCollection.Enumerator
  - System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator
  - System.Reflection.Metadata.FieldDefinitionHandleCollection.Enumerator
  - System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Enumerator
  - System.Reflection.Metadata.GenericParameterHandleCollection.Enumerator
  - System.Reflection.Metadata.ImportDefinitionCollection.Enumerator
  - System.Reflection.Metadata.ImportScopeCollection.Enumerator
  - System.Reflection.Metadata.InterfaceImplementationHandleCollection.Enumerator
  - System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator
  - System.Reflection.Metadata.LocalScopeHandleCollection.ChildrenEnumerator
  - System.Reflection.Metadata.LocalScopeHandleCollection.Enumerator
  - System.Reflection.Metadata.LocalVariableHandleCollection.Enumerator
  - System.Reflection.Metadata.ManifestResourceHandleCollection.Enumerator
  - System.Reflection.Metadata.MemberReferenceHandleCollection.Enumerator
  - System.Reflection.Metadata.MethodDebugInformationHandleCollection.Enumerator
  - System.Reflection.Metadata.MethodDefinitionHandleCollection.Enumerator
  - System.Reflection.Metadata.MethodImplementationHandleCollection.Enumerator
  - System.Reflection.Metadata.ParameterHandleCollection.Enumerator
  - System.Reflection.Metadata.PropertyDefinitionHandleCollection.Enumerator
  - System.Reflection.Metadata.SequencePointCollection.Enumerator
  - System.Reflection.Metadata.TypeDefinitionHandleCollection.Enumerator
  - System.Reflection.Metadata.TypeReferenceHandleCollection.Enumerator
  - System.Web.Services.Description.BasicProfileViolationEnumerator
  - System.Windows.FreezableCollection`1.Enumerator
  - System.Windows.TextDecorationCollection.Enumerator
  - System.Windows.Media.DoubleCollection.Enumerator
  - System.Windows.Media.DrawingCollection.Enumerator
  - System.Windows.Media.GeneralTransformCollection.Enumerator
  - System.Windows.Media.GeometryCollection.Enumerator
  - System.Windows.Media.GradientStopCollection.Enumerator
  - System.Windows.Media.Int32Collection.Enumerator
  - System.Windows.Media.PathFigureCollection.Enumerator
  - System.Windows.Media.PathSegmentCollection.Enumerator
  - System.Windows.Media.PointCollection.Enumerator
  - System.Windows.Media.TextEffectCollection.Enumerator
  - System.Windows.Media.TransformCollection.Enumerator
  - System.Windows.Media.VectorCollection.Enumerator
  - System.Windows.Media.Animation.TimelineCollection.Enumerator
  - System.Windows.Media.Effects.BitmapEffectCollection.Enumerator
  - System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator
  - System.Windows.Media.Media3D.MaterialCollection.Enumerator
  - System.Windows.Media.Media3D.Model3DCollection.Enumerator
  - System.Windows.Media.Media3D.Point3DCollection.Enumerator
  - System.Windows.Media.Media3D.Transform3DCollection.Enumerator
  - System.Windows.Media.Media3D.Vector3DCollection.Enumerator
  - System.Windows.Media.Media3D.Visual3DCollection.Enumerator
  - System.Xml.Serialization.XmlSchemaEnumerator
  implements:
  - System.Collections.IEnumerator
  - System.IDisposable
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/IEnumerator`1.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  id: Current
  parent: System.Collections.Generic.IEnumerator`1
  langs:
  - csharp
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: IEnumerator<T>.Current
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.Collections.Generic
  summary: Gets the element in the collection at the current position of the enumerator.
  remarks: "<xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined under any of the following conditions:  \n  \n-   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.   <xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.  \n  \n-   The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.  \n  \n-   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.  \n  \n <xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element."
  syntax:
    content: public T Current { get; }
    return:
      type: T
      description: The element in the collection at the current position of the enumerator.
  overload: System.Collections.Generic.IEnumerator`1.Current*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/IEnumerator`1.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Collections.Generic.IEnumerator`1.Current
  parent: System.Collections.Generic.IEnumerator`1
  isExternal: false
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: IEnumerator<T>.Current
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerator`1.Current*
  parent: System.Collections.Generic.IEnumerator`1
  isExternal: false
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: IEnumerator<T>.Current
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/IEnumerator`1.xml
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
