{"nodes":[{"content":"An abstract base class that encapsulates functionality that is common to file dialogs, including <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.","nodes":[{"pos":[0,205],"content":"An abstract base class that encapsulates functionality that is common to file dialogs, including <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"An abstract base class that encapsulates functionality that is common to file dialogs, including <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."}],"pos":[1463,1669],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"Microsoft.Win32.FileDialog\"></xref> class.","nodes":[{"pos":[0,88],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.FileDialog\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.Win32.FileDialog\"></xref> class."}],"pos":[3288,3377],"yaml":true},{"content":"Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.","nodes":[{"pos":[0,132],"content":"Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.","nodes":[{"content":"Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.","pos":[0,132]}]}],"pos":[4622,4755],"yaml":true},{"content":"`true` if extensions are added; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,74],"content":"`true` if extensions are added; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if extensions are added; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,51],"source":"`true` if extensions are added; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[52,74],"source":" The default is `true`."}]}],"pos":[4931,5008],"yaml":true},{"content":"Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.","nodes":[{"pos":[0,127],"content":"Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.","nodes":[{"content":"Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.","pos":[0,127]}]}],"pos":[6058,6186],"yaml":true},{"content":"The <xref:Microsoft.Win32.OpenFileDialog> class sets this property to `true` in its constructor.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.Win32.OpenFileDialog&gt;</ph> class sets this property to <ph id=\"ph2\">`true`</ph> in its constructor.","source":"The <xref:Microsoft.Win32.OpenFileDialog> class sets this property to `true` in its constructor."}],"pos":[6197,6294],"yaml":true,"extradata":"MT"},{"content":"`true` if warnings are displayed; otherwise, `false`. The default in this base class is `false`.","nodes":[{"pos":[0,96],"content":"`true` if warnings are displayed; otherwise, `false`. The default in this base class is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if warnings are displayed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,53],"source":"`true` if warnings are displayed; otherwise, `false`."},{"content":"The default in this base class is <ph id=\"ph1\">`false`</ph>.","pos":[54,96],"source":" The default in this base class is `false`."}]}],"pos":[6481,6580],"yaml":true},{"content":"Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.","nodes":[{"pos":[0,114],"content":"Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.","nodes":[{"content":"Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.","pos":[0,114]}]}],"pos":[7633,7748],"yaml":true},{"content":"`true` if warnings are displayed; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,76],"content":"`true` if warnings are displayed; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if warnings are displayed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,53],"source":"`true` if warnings are displayed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[54,76],"source":" The default is `true`."}]}],"pos":[7927,8006],"yaml":true},{"content":"Gets or sets the list of custom places for file dialog boxes.","nodes":[{"pos":[0,61],"content":"Gets or sets the list of custom places for file dialog boxes.","nodes":[{"content":"Gets or sets the list of custom places for file dialog boxes.","pos":[0,61]}]}],"pos":[9041,9103],"yaml":true},{"content":"Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. This property allows you to modify the list that appears when your application uses a file dialog box.","nodes":[{"pos":[0,388],"content":"Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. This property allows you to modify the list that appears when your application uses a file dialog box.","nodes":[{"content":"Starting in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)]</ph>, open and save file dialog boxes have a <bpt id=\"p1\">**</bpt>Favorite Links<ept id=\"p1\">**</ept> panel on the left side of the dialog box that allows the user to quickly navigate to a different location.","pos":[0,247],"source":"Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location."},{"content":"These links are called custom places.","pos":[248,285]},{"content":"This property allows you to modify the list that appears when your application uses a file dialog box.","pos":[286,388]}]}],"pos":[9114,9503],"yaml":true,"extradata":"MT"},{"content":"The list of custom places.","nodes":[{"pos":[0,26],"content":"The list of custom places.","nodes":[{"content":"The list of custom places.","pos":[0,26]}]}],"pos":[9747,9774],"yaml":true},{"content":"Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.","nodes":[{"pos":[0,119],"content":"Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.","nodes":[{"content":"Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.","pos":[0,119]}]}],"pos":[10730,10850],"yaml":true},{"content":"The extension string must contain the leading period. For example, set the <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> property to \".txt\" to select all text files.  \n  \n By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> will be used instead.","nodes":[{"pos":[0,167],"content":"The extension string must contain the leading period. For example, set the <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> property to \".txt\" to select all text files.","nodes":[{"content":"The extension string must contain the leading period. For example, set the <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> property to \".txt\" to select all text files.","pos":[0,167],"nodes":[{"content":"The extension string must contain the leading period.","pos":[0,53]},{"content":"For example, set the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.DefaultExt%2A&gt;</ph> property to \".txt\" to select all text files.","pos":[54,167],"source":" For example, set the <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> property to \".txt\" to select all text files."}]}]},{"pos":[174,552],"content":"By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> will be used instead.","nodes":[{"content":"By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> will be used instead.","pos":[0,378],"nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.AddExtension%2A&gt;</ph> property attempts to determine the extension to filter the displayed file list from the <ph id=\"ph2\">&lt;xref:Microsoft.Win32.FileDialog.Filter%2A&gt;</ph> property.","pos":[0,207],"source":"By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property."},{"content":"If the extension cannot be determined from the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.Filter%2A&gt;</ph> property, <ph id=\"ph2\">&lt;xref:Microsoft.Win32.FileDialog.DefaultExt%2A&gt;</ph> will be used instead.","pos":[208,378],"source":" If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> will be used instead."}]}]}],"pos":[10861,11420],"yaml":true,"extradata":"MT"},{"content":"The default extension string. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,86],"content":"The default extension string. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"The default extension string.","pos":[0,29]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[30,86],"source":" The default is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[12097,12184],"yaml":true},{"content":"Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).","nodes":[{"pos":[0,163],"content":"Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).","nodes":[{"content":"Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).","pos":[0,163]}]}],"pos":[13174,13338],"yaml":true},{"content":"`true` to return the location referenced; `false` to return the shortcut location. The default is `false`.","nodes":[{"pos":[0,106],"content":"`true` to return the location referenced; `false` to return the shortcut location. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to return the location referenced; <ph id=\"ph2\">`false`</ph> to return the shortcut location.","pos":[0,82],"source":"`true` to return the location referenced; `false` to return the shortcut location."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[83,106],"source":" The default is `false`."}]}],"pos":[13518,13627],"yaml":true},{"content":"Gets or sets a string containing the full path of the file selected in a file dialog.","nodes":[{"pos":[0,85],"content":"Gets or sets a string containing the full path of the file selected in a file dialog.","nodes":[{"content":"Gets or sets a string containing the full path of the file selected in a file dialog.","pos":[0,85]}]}],"pos":[14639,14725],"yaml":true},{"content":"If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.FileNames%2A> is greater than one) then <xref:Microsoft.Win32.FileDialog.FileName%2A> contains the first selected file name. If no file name is selected, this property contains <xref:System.String.Empty> rather than `null`.","nodes":[{"pos":[0,306],"content":"If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.FileNames%2A> is greater than one) then <xref:Microsoft.Win32.FileDialog.FileName%2A> contains the first selected file name. If no file name is selected, this property contains <xref:System.String.Empty> rather than `null`.","nodes":[{"content":"If more than one file name is selected (length of <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.FileNames%2A&gt;</ph> is greater than one) then <ph id=\"ph2\">&lt;xref:Microsoft.Win32.FileDialog.FileName%2A&gt;</ph> contains the first selected file name.","pos":[0,207],"source":"If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.FileNames%2A> is greater than one) then <xref:Microsoft.Win32.FileDialog.FileName%2A> contains the first selected file name."},{"content":"If no file name is selected, this property contains <ph id=\"ph1\">&lt;xref:System.String.Empty&gt;</ph> rather than <ph id=\"ph2\">`null`</ph>.","pos":[208,306],"source":" If no file name is selected, this property contains <xref:System.String.Empty> rather than `null`."}]}],"pos":[14736,15043],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that is the full path of the file selected in the file dialog. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,156],"content":"A <xref href=\"System.String\"></xref> that is the full path of the file selected in the file dialog. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that is the full path of the file selected in the file dialog.","pos":[0,99],"source":"A <xref href=\"System.String\"></xref> that is the full path of the file selected in the file dialog."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[100,156],"source":" The default is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[15263,15420],"yaml":true},{"content":"Gets an array that contains one file name for each selected file.","nodes":[{"pos":[0,65],"content":"Gets an array that contains one file name for each selected file.","nodes":[{"content":"Gets an array that contains one file name for each selected file.","pos":[0,65]}]}],"pos":[16480,16546],"yaml":true},{"content":"An array of <xref href=\"System.String\"></xref> that contains one file name for each selected file. The default is an array with a single item whose value is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,198],"content":"An array of <xref href=\"System.String\"></xref> that contains one file name for each selected file. The default is an array with a single item whose value is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains one file name for each selected file.","pos":[0,98],"source":"An array of <xref href=\"System.String\"></xref> that contains one file name for each selected file."},{"content":"The default is an array with a single item whose value is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[99,198],"source":" The default is an array with a single item whose value is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[16719,16918],"yaml":true},{"content":"Occurs when the user selects a file name by either clicking the **Open** button of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or the **Save** button of the <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.","nodes":[{"pos":[0,221],"content":"Occurs when the user selects a file name by either clicking the <bpt id=\"p1\">**</bpt>Open<ept id=\"p1\">**</ept> button of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> or the <bpt id=\"p2\">**</bpt>Save<ept id=\"p2\">**</ept> button of the <ph id=\"ph2\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"Occurs when the user selects a file name by either clicking the **Open** button of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or the **Save** button of the <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."}],"pos":[17908,18130],"yaml":true},{"content":"<xref:Microsoft.Win32.FileDialog.FileOk> is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection. If required, the user's selection can be cancelled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.","nodes":[{"pos":[0,361],"content":"<xref:Microsoft.Win32.FileDialog.FileOk> is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection. If required, the user's selection can be cancelled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.FileOk&gt;</ph> is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection.","pos":[0,159],"source":"<xref:Microsoft.Win32.FileDialog.FileOk> is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection."},{"content":"If required, the user's selection can be cancelled by setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> argument to <ph id=\"ph3\">`true`</ph>.","pos":[160,361],"source":" If required, the user's selection can be cancelled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`."}]}],"pos":[18141,18503],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the filter string that determines what types of files are displayed from either the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.","nodes":[{"pos":[0,204],"content":"Gets or sets the filter string that determines what types of files are displayed from either the <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the filter string that determines what types of files are displayed from either the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."}],"pos":[19554,19759],"yaml":true},{"content":"If <xref:Microsoft.Win32.FileDialog.Filter%2A> is either `null` or <xref:System.String.Empty>, all files are displayed, and folders are always displayed.  \n  \n You can specify a subset of file types to be displayed by setting the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. Each file type can represent a specific type of file, such as the following:  \n  \n-   Word Documents (*.doc)  \n  \n-   Excel Worksheets (*.xls)  \n  \n-   PowerPoint Presentations (*.ppt)  \n  \n Alternatively, a file type can represent a group of related file types, such as the following:  \n  \n-   Office Files (*.doc, *.xls, *.ppt)  \n  \n-   All Files (*.\\*)  \n  \n To specify a subset of the types of files that are displayed, you set the <xref:Microsoft.Win32.FileDialog.Filter%2A> property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \n  \n `FileType1[[|FileType2]...[|FileTypeN]]`  \n  \n You use the following format to describe each file type:  \n  \n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \n  \n The *Label* part is a human-readable string value that describes the file type, such as the following:  \n  \n-   \"Word Documents\"  \n  \n-   \"Excel Worksheets\"  \n  \n-   \"PowerPoint Presentations\"  \n  \n-   \"Office Files\"  \n  \n-   \"All Files\"  \n  \n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\"). For example:  \n  \n-   \"*.doc\"  \n  \n-   \"*.xls;\"  \n  \n-   \"*.ppt\"  \n  \n-   \"*.doc;\\*.xls;\\*.ppt\"  \n  \n-   \"*.\\*\"  \n  \n The following are complete examples of valid <xref:Microsoft.Win32.FileDialog.Filter%2A> string values:  \n  \n-   `Word Documents|*.doc`  \n  \n-   `Excel Worksheets|*.xls`  \n  \n-   `PowerPoint Presentations|*.ppt`  \n  \n-   `Office Files|*.doc;*.xls;*.ppt`  \n  \n-   `All Files|*.*`  \n  \n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \n  \n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \n  \n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \"Using the FileDialog.Filter in the Open Dialog Box\")  \n  \n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>).","nodes":[{"pos":[0,153],"content":"If <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.Filter%2A&gt;</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">&lt;xref:System.String.Empty&gt;</ph>, all files are displayed, and folders are always displayed.","source":"If <xref:Microsoft.Win32.FileDialog.Filter%2A> is either `null` or <xref:System.String.Empty>, all files are displayed, and folders are always displayed."},{"pos":[160,360],"content":"You can specify a subset of file types to be displayed by setting the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. Each file type can represent a specific type of file, such as the following:","nodes":[{"content":"You can specify a subset of file types to be displayed by setting the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. Each file type can represent a specific type of file, such as the following:","pos":[0,200],"nodes":[{"content":"You can specify a subset of file types to be displayed by setting the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.Filter%2A&gt;</ph> property.","pos":[0,123],"source":"You can specify a subset of file types to be displayed by setting the <xref:Microsoft.Win32.FileDialog.Filter%2A> property."},{"content":"Each file type can represent a specific type of file, such as the following:","pos":[124,200]}]}]},{"pos":[370,392],"content":"Word Documents (*.doc)","nodes":[{"content":"Word Documents (*.doc)","pos":[0,22]}]},{"pos":[402,426],"content":"Excel Worksheets (*.xls)","nodes":[{"content":"Excel Worksheets (*.xls)","pos":[0,24]}]},{"pos":[436,468],"content":"PowerPoint Presentations (*.ppt)","nodes":[{"content":"PowerPoint Presentations (*.ppt)","pos":[0,32]}]},{"pos":[475,569],"content":"Alternatively, a file type can represent a group of related file types, such as the following:","nodes":[{"content":"Alternatively, a file type can represent a group of related file types, such as the following:","pos":[0,94]}]},{"pos":[579,613],"content":"Office Files (*.doc, *.xls, *.ppt)","nodes":[{"content":"Office Files (*.doc, *.xls, *.ppt)","pos":[0,34]}]},{"pos":[623,639],"content":"All Files (*.\\*)","nodes":[{"content":"All Files (*.<ph id=\"ph1\">\\*</ph>)","pos":[0,16],"source":"All Files (*.\\*)"}]},{"pos":[646,932],"content":"To specify a subset of the types of files that are displayed, you set the <xref:Microsoft.Win32.FileDialog.Filter%2A> property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:","nodes":[{"content":"To specify a subset of the types of files that are displayed, you set the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.Filter%2A&gt;</ph> property with a string value (the <bpt id=\"p1\">*</bpt>filter string<ept id=\"p1\">*</ept>) that specifies one or more types of files to filter by.","pos":[0,224],"source":"To specify a subset of the types of files that are displayed, you set the <xref:Microsoft.Win32.FileDialog.Filter%2A> property with a string value (the *filter string*) that specifies one or more types of files to filter by."},{"content":"The following shows the expected format of the filter string:","pos":[225,286]}]},{"pos":[986,1042],"content":"You use the following format to describe each file type:","nodes":[{"content":"You use the following format to describe each file type:","pos":[0,56]}]},{"pos":[1105,1207],"content":"The <bpt id=\"p1\">*</bpt>Label<ept id=\"p1\">*</ept> part is a human-readable string value that describes the file type, such as the following:","source":"The *Label* part is a human-readable string value that describes the file type, such as the following:"},{"pos":[1217,1233],"content":"\"Word Documents\"","nodes":[{"content":"\"Word Documents\"","pos":[0,16]}]},{"pos":[1243,1261],"content":"\"Excel Worksheets\"","nodes":[{"content":"\"Excel Worksheets\"","pos":[0,18]}]},{"pos":[1271,1297],"content":"\"PowerPoint Presentations\"","nodes":[{"content":"\"PowerPoint Presentations\"","pos":[0,26]}]},{"pos":[1307,1321],"content":"\"Office Files\"","nodes":[{"content":"\"Office Files\"","pos":[0,14]}]},{"pos":[1331,1342],"content":"\"All Files\"","nodes":[{"content":"\"All Files\"","pos":[0,11]}]},{"pos":[1349,1518],"content":"Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\"). For example:","nodes":[{"content":"Each file type must be described by at least one <bpt id=\"p1\">*</bpt>Extension<ept id=\"p1\">*</ept>.","pos":[0,61],"source":"Each file type must be described by at least one *Extension*."},{"content":"If more than one <bpt id=\"p1\">*</bpt>Extension<ept id=\"p1\">*</ept> is used, each <bpt id=\"p2\">*</bpt>Extension<ept id=\"p2\">*</ept> must be separated by a semicolon (\";\").","pos":[62,156],"source":" If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\")."},{"content":"For example:","pos":[157,169]}]},{"pos":[1528,1535],"content":"\"*.doc\"","nodes":[{"content":"\"*.doc\"","pos":[0,7]}]},{"pos":[1545,1553],"content":"\"*.xls;\"","nodes":[{"content":"\"*.xls;\"","pos":[0,8]}]},{"pos":[1563,1570],"content":"\"*.ppt\"","nodes":[{"content":"\"*.ppt\"","pos":[0,7]}]},{"pos":[1580,1601],"content":"\"*.doc;\\*.xls;\\*.ppt\"","nodes":[{"content":"\"*.doc;<ph id=\"ph1\">\\*</ph>.xls;<ph id=\"ph2\">\\*</ph>.ppt\"","pos":[0,21],"source":"\"*.doc;\\*.xls;\\*.ppt\""}]},{"pos":[1611,1617],"content":"\"*.\\*\"","nodes":[{"content":"\"*.<ph id=\"ph1\">\\*</ph>\"","pos":[0,6],"source":"\"*.\\*\""}]},{"pos":[1624,1727],"content":"The following are complete examples of valid <xref:Microsoft.Win32.FileDialog.Filter%2A> string values:","nodes":[{"content":"The following are complete examples of valid <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.Filter%2A&gt;</ph> string values:","pos":[0,103],"source":"The following are complete examples of valid <xref:Microsoft.Win32.FileDialog.Filter%2A> string values:"}]},{"pos":[2040,2275],"content":"Each file type that is included in the filter is added as a separate item to the <bpt id=\"p1\">**</bpt>Files of type:<ept id=\"p1\">**</ept> drop-down list in the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.OpenFileDialog&gt;</ph> or <ph id=\"ph2\">&lt;xref:Microsoft.Win32.SaveFileDialog&gt;</ph>, as shown in the following figure.","source":"Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure."},{"pos":[2282,2429],"content":"<bpt id=\"p1\">![</bpt>Using the FileDialog.Filter in the Open Dialog Box<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/filedialogfilterfigure1.png \"</bpt>Using the FileDialog.Filter in the Open Dialog Box<ept id=\"p2\">\")</ept>","source":"![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \"Using the FileDialog.Filter in the Open Dialog Box\")"},{"pos":[2436,2966],"content":"The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>).","nodes":[{"content":"The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>).","pos":[0,530],"nodes":[{"content":"The user can choose a file type from this list to filter by.","pos":[0,60]},{"content":"By default, the first item in the list (for example, the first file type) is selected when the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.OpenFileDialog&gt;</ph> or <ph id=\"ph2\">&lt;xref:Microsoft.Win32.SaveFileDialog&gt;</ph> is displayed.","pos":[61,248],"source":" By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed."},{"content":"To specify that another file type to be selected, you set the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.FilterIndex%2A&gt;</ph> property before showing the <ph id=\"ph2\">&lt;xref:Microsoft.Win32.OpenFileDialog&gt;</ph> or <ph id=\"ph3\">&lt;xref:Microsoft.Win32.SaveFileDialog&gt;</ph> (by calling <ph id=\"ph4\">&lt;xref:Microsoft.Win32.CommonDialog.ShowDialog%2A&gt;</ph>).","pos":[249,530],"source":" To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>)."}]}]}],"pos":[19770,22833],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the filter. The default is <xref href=\"System.String.Empty\"></xref>, which means that no filter is applied and all file types are displayed.","nodes":[{"pos":[0,191],"content":"A <xref href=\"System.String\"></xref> that contains the filter. The default is <xref href=\"System.String.Empty\"></xref>, which means that no filter is applied and all file types are displayed.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the filter.","pos":[0,62],"source":"A <xref href=\"System.String\"></xref> that contains the filter."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>, which means that no filter is applied and all file types are displayed.","pos":[63,191],"source":" The default is <xref href=\"System.String.Empty\"></xref>, which means that no filter is applied and all file types are displayed."}]}],"pos":[25795,25987],"yaml":true},{"content":"The filter string is invalid.","nodes":[{"pos":[0,29],"content":"The filter string is invalid.","nodes":[{"content":"The filter string is invalid.","pos":[0,29]}]}],"pos":[26142,26172],"yaml":true},{"content":"Gets or sets the index of the filter currently selected in a file dialog.","nodes":[{"pos":[0,73],"content":"Gets or sets the index of the filter currently selected in a file dialog.","nodes":[{"content":"Gets or sets the index of the filter currently selected in a file dialog.","pos":[0,73]}]}],"pos":[27064,27138],"yaml":true},{"content":"This index is 1-based, not 0-based, due to compatibility requirements with the underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)].","nodes":[{"pos":[0,210],"content":"This index is 1-based, not 0-based, due to compatibility requirements with the underlying <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> <ph id=\"ph2\">[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]</ph>.","source":"This index is 1-based, not 0-based, due to compatibility requirements with the underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]."}],"pos":[27149,27360],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Int32\"></xref> that is the index of the selected filter. The default is 1.","nodes":[{"pos":[0,97],"content":"The <xref href=\"System.Int32\"></xref> that is the index of the selected filter. The default is 1.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that is the index of the selected filter.","pos":[0,79],"source":"The <xref href=\"System.Int32\"></xref> that is the index of the selected filter."},{"content":"The default is 1.","pos":[80,97]}]}],"pos":[27476,27574],"yaml":true},{"content":"Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.","nodes":[{"pos":[0,110],"content":"Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.","nodes":[{"content":"Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.","pos":[0,110]}]}],"pos":[28776,28887],"yaml":true},{"content":"Window handle for the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dialog.","nodes":[{"pos":[0,93],"content":"Window handle for the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> dialog.","source":"Window handle for the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dialog."}],"pos":[29126,29220],"yaml":true},{"content":"Message to be processed by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dialog.","nodes":[{"pos":[0,102],"content":"Message to be processed by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> dialog.","source":"Message to be processed by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dialog."}],"pos":[29278,29381],"yaml":true},{"content":"Parameters for dialog actions.","nodes":[{"pos":[0,30],"content":"Parameters for dialog actions.","nodes":[{"content":"Parameters for dialog actions.","pos":[0,30]}]}],"pos":[29443,29474],"yaml":true},{"content":"Parameters for dialog actions.","nodes":[{"pos":[0,30],"content":"Parameters for dialog actions.","nodes":[{"content":"Parameters for dialog actions.","pos":[0,30]}]}],"pos":[29536,29567],"yaml":true},{"content":"Returns <xref href=\"System.IntPtr.Zero\"></xref> to indicate success; otherwise, a non-zero value is returned to indicate failure.","nodes":[{"pos":[0,129],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.IntPtr.Zero\"&gt;&lt;/xref&gt;</ph> to indicate success; otherwise, a non-zero value is returned to indicate failure.","source":"Returns <xref href=\"System.IntPtr.Zero\"></xref> to indicate success; otherwise, a non-zero value is returned to indicate failure."}],"pos":[29624,29754],"yaml":true},{"content":"Gets or sets the initial directory that is displayed by a file dialog.","nodes":[{"pos":[0,70],"content":"Gets or sets the initial directory that is displayed by a file dialog.","nodes":[{"content":"Gets or sets the initial directory that is displayed by a file dialog.","pos":[0,70]}]}],"pos":[30808,30879],"yaml":true},{"content":"If there is no initial directory set, this property will contain <xref:System.String.Empty> rather than a null string.","nodes":[{"pos":[0,118],"content":"If there is no initial directory set, this property will contain <xref:System.String.Empty> rather than a null string.","nodes":[{"content":"If there is no initial directory set, this property will contain <ph id=\"ph1\">&lt;xref:System.String.Empty&gt;</ph> rather than a null string.","pos":[0,118],"source":"If there is no initial directory set, this property will contain <xref:System.String.Empty> rather than a null string."}]}],"pos":[30890,31009],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the initial directory. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,130],"content":"A <xref href=\"System.String\"></xref> that contains the initial directory. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the initial directory.","pos":[0,73],"source":"A <xref href=\"System.String\"></xref> that contains the initial directory."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[74,130],"source":" The default is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[31190,31321],"yaml":true},{"content":"Raises the <xref href=\"Microsoft.Win32.FileDialog.FileOk\"></xref> event.","nodes":[{"pos":[0,72],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.FileDialog.FileOk\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"Microsoft.Win32.FileDialog.FileOk\"></xref> event."}],"pos":[32499,32572],"yaml":true},{"content":"<xref:Microsoft.Win32.FileDialog.OnFileOk%2A> raises the <xref:Microsoft.Win32.FileDialog.FileOk> event.  \n  \n A type that derives from <xref:Microsoft.Win32.FileDialog> may override <xref:Microsoft.Win32.FileDialog.OnFileOk%2A>. The overridden method must call <xref:Microsoft.Win32.FileDialog.OnFileOk%2A> on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised.","nodes":[{"pos":[0,104],"content":"<xref:Microsoft.Win32.FileDialog.OnFileOk%2A> raises the <xref:Microsoft.Win32.FileDialog.FileOk> event.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.OnFileOk%2A&gt;</ph> raises the <ph id=\"ph2\">&lt;xref:Microsoft.Win32.FileDialog.FileOk&gt;</ph> event.","pos":[0,104],"source":"<xref:Microsoft.Win32.FileDialog.OnFileOk%2A> raises the <xref:Microsoft.Win32.FileDialog.FileOk> event."}]},{"pos":[111,389],"content":"A type that derives from <xref:Microsoft.Win32.FileDialog> may override <xref:Microsoft.Win32.FileDialog.OnFileOk%2A>. The overridden method must call <xref:Microsoft.Win32.FileDialog.OnFileOk%2A> on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised.","nodes":[{"content":"A type that derives from <xref:Microsoft.Win32.FileDialog> may override <xref:Microsoft.Win32.FileDialog.OnFileOk%2A>. The overridden method must call <xref:Microsoft.Win32.FileDialog.OnFileOk%2A> on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised.","pos":[0,278],"nodes":[{"content":"A type that derives from <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog&gt;</ph> may override <ph id=\"ph2\">&lt;xref:Microsoft.Win32.FileDialog.OnFileOk%2A&gt;</ph>.","pos":[0,118],"source":"A type that derives from <xref:Microsoft.Win32.FileDialog> may override <xref:Microsoft.Win32.FileDialog.OnFileOk%2A>."},{"content":"The overridden method must call <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.OnFileOk%2A&gt;</ph> on the base class if <ph id=\"ph2\">&lt;xref:Microsoft.Win32.FileDialog.FileOk&gt;</ph> needs to be raised.","pos":[119,278],"source":" The overridden method must call <xref:Microsoft.Win32.FileDialog.OnFileOk%2A> on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised."}]}]}],"pos":[32583,32977],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.CancelEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data."}],"pos":[33164,33255],"yaml":true},{"content":"Gets the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization.","nodes":[{"pos":[0,145],"content":"Gets the <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> common file dialog flags that are used by file dialogs for initialization.","source":"Gets the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization."}],"pos":[34189,34335],"yaml":true},{"content":"This value is used to display a file dialog with the current set of property values. The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>.","nodes":[{"pos":[0,387],"content":"This value is used to display a file dialog with the current set of property values. The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>.","nodes":[{"content":"This value is used to display a file dialog with the current set of property values. The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>.","pos":[0,387],"nodes":[{"content":"This value is used to display a file dialog with the current set of property values.","pos":[0,84]},{"content":"The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <ph id=\"ph1\">&lt;xref:Microsoft.Win32.OpenFileDialog&gt;</ph> and <ph id=\"ph2\">&lt;xref:Microsoft.Win32.SaveFileDialog&gt;</ph>.","pos":[85,387],"source":" The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>."}]}]}],"pos":[34346,34734],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> that contains the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization.","nodes":[{"pos":[0,190],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> common file dialog flags that are used by file dialogs for initialization.","source":"A <xref href=\"System.Int32\"></xref> that contains the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization."}],"pos":[34844,35035],"yaml":true},{"content":"Sets all properties of a file dialog back to their initial values.","nodes":[{"pos":[0,66],"content":"Sets all properties of a file dialog back to their initial values.","nodes":[{"content":"Sets all properties of a file dialog back to their initial values.","pos":[0,66]}]}],"pos":[35960,36027],"yaml":true},{"content":"This property is not implemented.","nodes":[{"pos":[0,33],"content":"This property is not implemented.","nodes":[{"content":"This property is not implemented.","pos":[0,33]}]}],"pos":[37202,37236],"yaml":true},{"content":"Not implemented.","nodes":[{"pos":[0,16],"content":"Not implemented.","nodes":[{"content":"Not implemented.","pos":[0,16]}]}],"pos":[37416,37433],"yaml":true},{"content":"<xref href=\"Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)\"></xref> is called to display a file dialog in a derived class, such as <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.","nodes":[{"pos":[0,246],"content":"<ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)\"&gt;&lt;/xref&gt;</ph> is called to display a file dialog in a derived class, such as <ph id=\"ph2\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)\"></xref> is called to display a file dialog in a derived class, such as <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."}],"pos":[38518,38765],"yaml":true},{"content":"The dialog that is eventually shown is assigned an owner window, which is specified by the `hwndOwner` parameter.","nodes":[{"pos":[0,113],"content":"The dialog that is eventually shown is assigned an owner window, which is specified by the <ph id=\"ph1\">`hwndOwner`</ph> parameter.","source":"The dialog that is eventually shown is assigned an owner window, which is specified by the `hwndOwner` parameter."}],"pos":[38776,38890],"yaml":true,"extradata":"MT"},{"content":"Handle to the window that owns the dialog.","nodes":[{"pos":[0,42],"content":"Handle to the window that owns the dialog.","nodes":[{"content":"Handle to the window that owns the dialog.","pos":[0,42]}]}],"pos":[39099,39142],"yaml":true},{"content":"`true` if the user clicks the **OK** button of the dialog that is displayed (for example, <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>); otherwise, `false`.","nodes":[{"pos":[0,216],"content":"<ph id=\"ph1\">`true`</ph> if the user clicks the <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept> button of the dialog that is displayed (for example, <ph id=\"ph2\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;&lt;/xref&gt;</ph>); otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the user clicks the **OK** button of the dialog that is displayed (for example, <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>); otherwise, `false`."}],"pos":[39200,39419],"yaml":true},{"content":"Gets a string that only contains the file name for the selected file.","nodes":[{"pos":[0,69],"content":"Gets a string that only contains the file name for the selected file.","nodes":[{"content":"Gets a string that only contains the file name for the selected file.","pos":[0,69]}]}],"pos":[40450,40520],"yaml":true},{"content":"This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed. Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.  \n  \n If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> is greater than one) then this property contains only the first selected file name.  \n  \n See [Safe File Upload from an XBAP Sample](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c).","nodes":[{"pos":[0,273],"content":"This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed. Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.","nodes":[{"content":"This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed. Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.","pos":[0,273],"nodes":[{"content":"This value is the <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.FileName%2A&gt;</ph> with all path information removed.","pos":[0,98],"source":"This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed."},{"content":"Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.","pos":[99,273]}]}]},{"pos":[280,464],"content":"If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> is greater than one) then this property contains only the first selected file name.","nodes":[{"content":"If more than one file name is selected (length of <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.SafeFileNames%2A&gt;</ph> is greater than one) then this property contains only the first selected file name.","pos":[0,184],"source":"If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> is greater than one) then this property contains only the first selected file name."}]},{"pos":[471,584],"content":"See <bpt id=\"p1\">[</bpt>Safe File Upload from an XBAP Sample<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)</ept>.","source":"See [Safe File Upload from an XBAP Sample](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)."}],"pos":[40531,41122],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that only contains the file name for the selected file. The default is <xref href=\"System.String.Empty\"></xref>, which is also the value when either no file is selected or a directory is selected.","nodes":[{"pos":[0,233],"content":"A <xref href=\"System.String\"></xref> that only contains the file name for the selected file. The default is <xref href=\"System.String.Empty\"></xref>, which is also the value when either no file is selected or a directory is selected.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that only contains the file name for the selected file.","pos":[0,92],"source":"A <xref href=\"System.String\"></xref> that only contains the file name for the selected file."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>, which is also the value when either no file is selected or a directory is selected.","pos":[93,233],"source":" The default is <xref href=\"System.String.Empty\"></xref>, which is also the value when either no file is selected or a directory is selected."}]}],"pos":[41294,41528],"yaml":true},{"content":"Gets an array that contains one safe file name for each selected file.","nodes":[{"pos":[0,70],"content":"Gets an array that contains one safe file name for each selected file.","nodes":[{"content":"Gets an array that contains one safe file name for each selected file.","pos":[0,70]}]}],"pos":[42566,42637],"yaml":true},{"content":"See <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.","nodes":[{"pos":[0,54],"content":"See <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.","nodes":[{"content":"See <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.SafeFileName%2A&gt;</ph>.","pos":[0,54],"source":"See <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>."}]}],"pos":[42648,42703],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.String\"></xref> that contains one safe file name for each selected file. The default is an array with a single item whose value is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,203],"content":"An array of <xref href=\"System.String\"></xref> that contains one safe file name for each selected file. The default is an array with a single item whose value is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains one safe file name for each selected file.","pos":[0,103],"source":"An array of <xref href=\"System.String\"></xref> that contains one safe file name for each selected file."},{"content":"The default is an array with a single item whose value is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[104,203],"source":" The default is an array with a single item whose value is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[42880,43084],"yaml":true},{"content":"Gets or sets the text that appears in the title bar of a file dialog.","nodes":[{"pos":[0,69],"content":"Gets or sets the text that appears in the title bar of a file dialog.","nodes":[{"content":"Gets or sets the text that appears in the title bar of a file dialog.","pos":[0,69]}]}],"pos":[44075,44145],"yaml":true},{"content":"If <xref:Microsoft.Win32.FileDialog.Title%2A> is null or <xref:System.String.Empty>, a default, localized value is used, such as \"Save As\" or \"Open\".","nodes":[{"pos":[0,149],"content":"If <xref:Microsoft.Win32.FileDialog.Title%2A> is null or <xref:System.String.Empty>, a default, localized value is used, such as \"Save As\" or \"Open\".","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:Microsoft.Win32.FileDialog.Title%2A&gt;</ph> is null or <ph id=\"ph2\">&lt;xref:System.String.Empty&gt;</ph>, a default, localized value is used, such as \"Save As\" or \"Open\".","pos":[0,149],"source":"If <xref:Microsoft.Win32.FileDialog.Title%2A> is null or <xref:System.String.Empty>, a default, localized value is used, such as \"Save As\" or \"Open\"."}]}],"pos":[44156,44306],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that is the text that appears in the title bar of a file dialog. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,158],"content":"A <xref href=\"System.String\"></xref> that is the text that appears in the title bar of a file dialog. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that is the text that appears in the title bar of a file dialog.","pos":[0,101],"source":"A <xref href=\"System.String\"></xref> that is the text that appears in the title bar of a file dialog."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[102,158],"source":" The default is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[44476,44635],"yaml":true},{"content":"Returns a string that represents a file dialog.","nodes":[{"pos":[0,47],"content":"Returns a string that represents a file dialog.","nodes":[{"content":"Returns a string that represents a file dialog.","pos":[0,47]}]}],"pos":[45640,45688],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> representation of <xref href=\"Microsoft.Win32.FileDialog\"></xref> that contains the full pathname for any files selected from either <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.","nodes":[{"pos":[0,275],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representation of <ph id=\"ph2\">&lt;xref href=\"Microsoft.Win32.FileDialog\"&gt;&lt;/xref&gt;</ph> that contains the full pathname for any files selected from either <ph id=\"ph3\">&lt;xref href=\"Microsoft.Win32.OpenFileDialog\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"Microsoft.Win32.SaveFileDialog\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.String\"></xref> representation of <xref href=\"Microsoft.Win32.FileDialog\"></xref> that contains the full pathname for any files selected from either <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>."}],"pos":[45823,46099],"yaml":true},{"content":"Gets or sets a value indicating whether the dialog accepts only valid [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] file names.","nodes":[{"pos":[0,145],"content":"Gets or sets a value indicating whether the dialog accepts only valid <ph id=\"ph1\">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> file names.","source":"Gets or sets a value indicating whether the dialog accepts only valid [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] file names."}],"pos":[47069,47215],"yaml":true},{"content":"`true` if warnings will be shown when an invalid file name is provided; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,115],"content":"`true` if warnings will be shown when an invalid file name is provided; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if warnings will be shown when an invalid file name is provided; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,91],"source":"`true` if warnings will be shown when an invalid file name is provided; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[92,115],"source":" The default is `false`."}]}],"pos":[47392,47510],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Win32.FileDialog\n  commentId: T:Microsoft.Win32.FileDialog\n  id: FileDialog\n  children:\n  - Microsoft.Win32.FileDialog.#ctor\n  - Microsoft.Win32.FileDialog.AddExtension\n  - Microsoft.Win32.FileDialog.CheckFileExists\n  - Microsoft.Win32.FileDialog.CheckPathExists\n  - Microsoft.Win32.FileDialog.CustomPlaces\n  - Microsoft.Win32.FileDialog.DefaultExt\n  - Microsoft.Win32.FileDialog.DereferenceLinks\n  - Microsoft.Win32.FileDialog.FileName\n  - Microsoft.Win32.FileDialog.FileNames\n  - Microsoft.Win32.FileDialog.FileOk\n  - Microsoft.Win32.FileDialog.Filter\n  - Microsoft.Win32.FileDialog.FilterIndex\n  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - Microsoft.Win32.FileDialog.InitialDirectory\n  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  - Microsoft.Win32.FileDialog.Options\n  - Microsoft.Win32.FileDialog.Reset\n  - Microsoft.Win32.FileDialog.RestoreDirectory\n  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  - Microsoft.Win32.FileDialog.SafeFileName\n  - Microsoft.Win32.FileDialog.SafeFileNames\n  - Microsoft.Win32.FileDialog.Title\n  - Microsoft.Win32.FileDialog.ToString\n  - Microsoft.Win32.FileDialog.ValidateNames\n  langs:\n  - csharp\n  name: FileDialog\n  nameWithType: FileDialog\n  fullName: Microsoft.Win32.FileDialog\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: An abstract base class that encapsulates functionality that is common to file dialogs, including <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  syntax:\n    content: 'public abstract class FileDialog : Microsoft.Win32.CommonDialog'\n  inheritance:\n  - System.Object\n  - Microsoft.Win32.CommonDialog\n  derivedClasses:\n  - Microsoft.Win32.OpenFileDialog\n  - Microsoft.Win32.SaveFileDialog\n  implements: []\n  inheritedMembers:\n  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog\n  - Microsoft.Win32.CommonDialog.ShowDialog\n  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  - Microsoft.Win32.CommonDialog.Tag\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.#ctor\n  commentId: M:Microsoft.Win32.FileDialog.#ctor\n  id: '#ctor'\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FileDialog()\n  nameWithType: FileDialog.FileDialog()\n  fullName: FileDialog.FileDialog()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Win32.FileDialog\"></xref> class.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      [System.Security.SecurityTreatAsSafe]\n\n      protected FileDialog ();\n    parameters: []\n  overload: Microsoft.Win32.FileDialog.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  - type: System.Security.SecurityTreatAsSafeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.AddExtension\n  commentId: P:Microsoft.Win32.FileDialog.AddExtension\n  id: AddExtension\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: FileDialog.AddExtension\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether a file dialog automatically adds an extension to a file name if the user omits an extension.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool AddExtension { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if extensions are added; otherwise, `false`. The default is `true`.'\n  overload: Microsoft.Win32.FileDialog.AddExtension*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.CheckFileExists\n  commentId: P:Microsoft.Win32.FileDialog.CheckFileExists\n  id: CheckFileExists\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: FileDialog.CheckFileExists\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a file name that does not exist.\n  remarks: The <xref:Microsoft.Win32.OpenFileDialog> class sets this property to `true` in its constructor.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public virtual bool CheckFileExists { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if warnings are displayed; otherwise, `false`. The default in this base class is `false`.'\n  overload: Microsoft.Win32.FileDialog.CheckFileExists*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.CheckPathExists\n  commentId: P:Microsoft.Win32.FileDialog.CheckPathExists\n  id: CheckPathExists\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: FileDialog.CheckPathExists\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and file names.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool CheckPathExists { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if warnings are displayed; otherwise, `false`. The default is `true`.'\n  overload: Microsoft.Win32.FileDialog.CheckPathExists*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.CustomPlaces\n  commentId: P:Microsoft.Win32.FileDialog.CustomPlaces\n  id: CustomPlaces\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: FileDialog.CustomPlaces\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the list of custom places for file dialog boxes.\n  remarks: Starting in [!INCLUDE[TLA2#tla_winvista](~/includes/tla2sharptla-winvista-md.md)], open and save file dialog boxes have a **Favorite Links** panel on the left side of the dialog box that allows the user to quickly navigate to a different location. These links are called custom places. This property allows you to modify the list that appears when your application uses a file dialog box.\n  syntax:\n    content: public System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace> CustomPlaces { get; set; }\n    return:\n      type: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}\n      description: The list of custom places.\n  overload: Microsoft.Win32.FileDialog.CustomPlaces*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.DefaultExt\n  commentId: P:Microsoft.Win32.FileDialog.DefaultExt\n  id: DefaultExt\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: FileDialog.DefaultExt\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.\n  remarks: \"The extension string must contain the leading period. For example, set the <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> property to \\\".txt\\\" to select all text files.  \\n  \\n By default, the <xref:Microsoft.Win32.FileDialog.AddExtension%2A> property attempts to determine the extension to filter the displayed file list from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. If the extension cannot be determined from the <xref:Microsoft.Win32.FileDialog.Filter%2A> property, <xref:Microsoft.Win32.FileDialog.DefaultExt%2A> will be used instead.\"\n  example:\n  - \"The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \\n  \\n [!code-csharp[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/DialogBoxesOverviewSnippets/CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DialogBoxesOverviewSnippets/VisualBasic/window1.xaml.vb#openfiledialogboxcodebehind)]\"\n  syntax:\n    content: public string DefaultExt { get; set; }\n    return:\n      type: System.String\n      description: The default extension string. The default is <xref href=\"System.String.Empty\"></xref>.\n  overload: Microsoft.Win32.FileDialog.DefaultExt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.DereferenceLinks\n  commentId: P:Microsoft.Win32.FileDialog.DereferenceLinks\n  id: DereferenceLinks\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: FileDialog.DereferenceLinks\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool DereferenceLinks { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to return the location referenced; `false` to return the shortcut location. The default is `false`.'\n  overload: Microsoft.Win32.FileDialog.DereferenceLinks*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.FileName\n  commentId: P:Microsoft.Win32.FileDialog.FileName\n  id: FileName\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: FileDialog.FileName\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a string containing the full path of the file selected in a file dialog.\n  remarks: If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.FileNames%2A> is greater than one) then <xref:Microsoft.Win32.FileDialog.FileName%2A> contains the first selected file name. If no file name is selected, this property contains <xref:System.String.Empty> rather than `null`.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      [set: System.Security.SecurityCritical]\n\n      public string FileName { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that is the full path of the file selected in the file dialog. The default is <xref href=\"System.String.Empty\"></xref>.\n  overload: Microsoft.Win32.FileDialog.FileName*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.FileNames\n  commentId: P:Microsoft.Win32.FileDialog.FileNames\n  id: FileNames\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: FileDialog.FileNames\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets an array that contains one file name for each selected file.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public string[] FileNames { get; }\n    return:\n      type: System.String[]\n      description: An array of <xref href=\"System.String\"></xref> that contains one file name for each selected file. The default is an array with a single item whose value is <xref href=\"System.String.Empty\"></xref>.\n  overload: Microsoft.Win32.FileDialog.FileNames*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.FileOk\n  commentId: E:Microsoft.Win32.FileDialog.FileOk\n  id: FileOk\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FileOk\n  nameWithType: FileDialog.FileOk\n  fullName: FileDialog.FileOk\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Occurs when the user selects a file name by either clicking the **Open** button of the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or the **Save** button of the <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  remarks: <xref:Microsoft.Win32.FileDialog.FileOk> is raised after the user selects a file name, but before the dialog closes, which allows you to process the selection. If required, the user's selection can be cancelled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.\n  syntax:\n    content: public event System.ComponentModel.CancelEventHandler FileOk;\n    return:\n      type: System.ComponentModel.CancelEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.Filter\n  commentId: P:Microsoft.Win32.FileDialog.Filter\n  id: Filter\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: FileDialog.Filter\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the filter string that determines what types of files are displayed from either the <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> or <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  remarks: \"If <xref:Microsoft.Win32.FileDialog.Filter%2A> is either `null` or <xref:System.String.Empty>, all files are displayed, and folders are always displayed.  \\n  \\n You can specify a subset of file types to be displayed by setting the <xref:Microsoft.Win32.FileDialog.Filter%2A> property. Each file type can represent a specific type of file, such as the following:  \\n  \\n-   Word Documents (*.doc)  \\n  \\n-   Excel Worksheets (*.xls)  \\n  \\n-   PowerPoint Presentations (*.ppt)  \\n  \\n Alternatively, a file type can represent a group of related file types, such as the following:  \\n  \\n-   Office Files (*.doc, *.xls, *.ppt)  \\n  \\n-   All Files (*.\\\\*)  \\n  \\n To specify a subset of the types of files that are displayed, you set the <xref:Microsoft.Win32.FileDialog.Filter%2A> property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \\n  \\n `FileType1[[|FileType2]...[|FileTypeN]]`  \\n  \\n You use the following format to describe each file type:  \\n  \\n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \\n  \\n The *Label* part is a human-readable string value that describes the file type, such as the following:  \\n  \\n-   \\\"Word Documents\\\"  \\n  \\n-   \\\"Excel Worksheets\\\"  \\n  \\n-   \\\"PowerPoint Presentations\\\"  \\n  \\n-   \\\"Office Files\\\"  \\n  \\n-   \\\"All Files\\\"  \\n  \\n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\\\";\\\"). For example:  \\n  \\n-   \\\"*.doc\\\"  \\n  \\n-   \\\"*.xls;\\\"  \\n  \\n-   \\\"*.ppt\\\"  \\n  \\n-   \\\"*.doc;\\\\*.xls;\\\\*.ppt\\\"  \\n  \\n-   \\\"*.\\\\*\\\"  \\n  \\n The following are complete examples of valid <xref:Microsoft.Win32.FileDialog.Filter%2A> string values:  \\n  \\n-   `Word Documents|*.doc`  \\n  \\n-   `Excel Worksheets|*.xls`  \\n  \\n-   `PowerPoint Presentations|*.ppt`  \\n  \\n-   `Office Files|*.doc;*.xls;*.ppt`  \\n  \\n-   `All Files|*.*`  \\n  \\n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \\n  \\n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \\n  \\n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \\\"Using the FileDialog.Filter in the Open Dialog Box\\\")  \\n  \\n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>).\"\n  example:\n  - \"The following examples demonstrate several types of filter strings that can be set by using the <xref:Microsoft.Win32.FileDialog.Filter%2A> property.  \\n  \\n[!code-csharp[FileDialogFilterSnippets#FilterString1](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring1)] \\n[!code-vb[FileDialogFilterSnippets#FilterString1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring1)]  \\n  \\n[!code-csharp[FileDialogFilterSnippets#FilterString2](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring2)] \\n[!code-vb[FileDialogFilterSnippets#FilterString2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring2)]  \\n  \\n[!code-csharp[FileDialogFilterSnippets#FilterString3](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring3)] \\n[!code-vb[FileDialogFilterSnippets#FilterString3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring3)]  \\n  \\n[!code-csharp[FileDialogFilterSnippets#FilterString4](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring4)] \\n[!code-vb[FileDialogFilterSnippets#FilterString4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring4)]  \\n  \\n[!code-csharp[FileDialogFilterSnippets#FilterString5](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring5)] \\n[!code-vb[FileDialogFilterSnippets#FilterString5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring5)]  \\n  \\n[!code-csharp[FileDialogFilterSnippets#FilterString6](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring6)] \\n[!code-vb[FileDialogFilterSnippets#FilterString6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring6)]  \\n  \\n[!code-csharp[FileDialogFilterSnippets#FilterString7](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring7)] \\n[!code-vb[FileDialogFilterSnippets#FilterString7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring7)]  \\n  \\n[!code-csharp[FileDialogFilterSnippets#FilterString8](~/samples/snippets/csharp/VS_Snippets_Wpf/FileDialogFilterSnippets/CSharp/Window1.xaml.cs#filterstring8)] \\n[!code-vb[FileDialogFilterSnippets#FilterString8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FileDialogFilterSnippets/visualbasic/window1.xaml.vb#filterstring8)]\"\n  syntax:\n    content: public string Filter { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the filter. The default is <xref href=\"System.String.Empty\"></xref>, which means that no filter is applied and all file types are displayed.\n  overload: Microsoft.Win32.FileDialog.Filter*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The filter string is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.FilterIndex\n  commentId: P:Microsoft.Win32.FileDialog.FilterIndex\n  id: FilterIndex\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: FileDialog.FilterIndex\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the index of the filter currently selected in a file dialog.\n  remarks: This index is 1-based, not 0-based, due to compatibility requirements with the underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)].\n  syntax:\n    content: public int FilterIndex { get; set; }\n    return:\n      type: System.Int32\n      description: The <xref href=\"System.Int32\"></xref> that is the index of the selected filter. The default is 1.\n  overload: Microsoft.Win32.FileDialog.FilterIndex*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  commentId: M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  nameWithType: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  fullName: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);\n    parameters:\n    - id: hwnd\n      type: System.IntPtr\n      description: Window handle for the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dialog.\n    - id: msg\n      type: System.Int32\n      description: Message to be processed by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] dialog.\n    - id: wParam\n      type: System.IntPtr\n      description: Parameters for dialog actions.\n    - id: lParam\n      type: System.IntPtr\n      description: Parameters for dialog actions.\n    return:\n      type: System.IntPtr\n      description: Returns <xref href=\"System.IntPtr.Zero\"></xref> to indicate success; otherwise, a non-zero value is returned to indicate failure.\n  overload: Microsoft.Win32.FileDialog.HookProc*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.InitialDirectory\n  commentId: P:Microsoft.Win32.FileDialog.InitialDirectory\n  id: InitialDirectory\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: FileDialog.InitialDirectory\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the initial directory that is displayed by a file dialog.\n  remarks: If there is no initial directory set, this property will contain <xref:System.String.Empty> rather than a null string.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public string InitialDirectory { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the initial directory. The default is <xref href=\"System.String.Empty\"></xref>.\n  overload: Microsoft.Win32.FileDialog.InitialDirectory*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  commentId: M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  id: OnFileOk(System.ComponentModel.CancelEventArgs)\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: OnFileOk(CancelEventArgs)\n  nameWithType: FileDialog.OnFileOk(CancelEventArgs)\n  fullName: FileDialog.OnFileOk(CancelEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Raises the <xref href=\"Microsoft.Win32.FileDialog.FileOk\"></xref> event.\n  remarks: \"<xref:Microsoft.Win32.FileDialog.OnFileOk%2A> raises the <xref:Microsoft.Win32.FileDialog.FileOk> event.  \\n  \\n A type that derives from <xref:Microsoft.Win32.FileDialog> may override <xref:Microsoft.Win32.FileDialog.OnFileOk%2A>. The overridden method must call <xref:Microsoft.Win32.FileDialog.OnFileOk%2A> on the base class if <xref:Microsoft.Win32.FileDialog.FileOk> needs to be raised.\"\n  syntax:\n    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.CancelEventArgs\n      description: A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.\n  overload: Microsoft.Win32.FileDialog.OnFileOk*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.Options\n  commentId: P:Microsoft.Win32.FileDialog.Options\n  id: Options\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: FileDialog.Options\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization.\n  remarks: This value is used to display a file dialog with the current set of property values. The actual options are exposed as properties on the specific dialogs, but not documented as public flag values at this level, so the uses of this property are mainly internal, for use when implementing the derived classes <xref:Microsoft.Win32.OpenFileDialog> and <xref:Microsoft.Win32.SaveFileDialog>.\n  syntax:\n    content: protected int Options { get; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that contains the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] common file dialog flags that are used by file dialogs for initialization.\n  overload: Microsoft.Win32.FileDialog.Options*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.Reset\n  commentId: M:Microsoft.Win32.FileDialog.Reset\n  id: Reset\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: FileDialog.Reset()\n  fullName: FileDialog.Reset()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Sets all properties of a file dialog back to their initial values.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void Reset ();\n    parameters: []\n  overload: Microsoft.Win32.FileDialog.Reset*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.RestoreDirectory\n  commentId: P:Microsoft.Win32.FileDialog.RestoreDirectory\n  id: RestoreDirectory\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: FileDialog.RestoreDirectory\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: This property is not implemented.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool RestoreDirectory { get; set; }\n    return:\n      type: System.Boolean\n      description: Not implemented.\n  overload: Microsoft.Win32.FileDialog.RestoreDirectory*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  commentId: M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  id: RunDialog(System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: RunDialog(IntPtr)\n  nameWithType: FileDialog.RunDialog(IntPtr)\n  fullName: FileDialog.RunDialog(IntPtr)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: <xref href=\"Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)\"></xref> is called to display a file dialog in a derived class, such as <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref> and <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  remarks: The dialog that is eventually shown is assigned an owner window, which is specified by the `hwndOwner` parameter.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      protected override bool RunDialog (IntPtr hwndOwner);\n    parameters:\n    - id: hwndOwner\n      type: System.IntPtr\n      description: Handle to the window that owns the dialog.\n    return:\n      type: System.Boolean\n      description: '`true` if the user clicks the **OK** button of the dialog that is displayed (for example, <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>); otherwise, `false`.'\n  overload: Microsoft.Win32.FileDialog.RunDialog*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.SafeFileName\n  commentId: P:Microsoft.Win32.FileDialog.SafeFileName\n  id: SafeFileName\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: SafeFileName\n  nameWithType: FileDialog.SafeFileName\n  fullName: FileDialog.SafeFileName\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets a string that only contains the file name for the selected file.\n  remarks: \"This value is the <xref:Microsoft.Win32.FileDialog.FileName%2A> with all path information removed. Removing the paths makes the value appropriate for use in partial trust applications, since it prevents applications from discovering information about the local file system.  \\n  \\n If more than one file name is selected (length of <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A> is greater than one) then this property contains only the first selected file name.  \\n  \\n See [Safe File Upload from an XBAP Sample](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c).\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public string SafeFileName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that only contains the file name for the selected file. The default is <xref href=\"System.String.Empty\"></xref>, which is also the value when either no file is selected or a directory is selected.\n  overload: Microsoft.Win32.FileDialog.SafeFileName*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.SafeFileNames\n  commentId: P:Microsoft.Win32.FileDialog.SafeFileNames\n  id: SafeFileNames\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: SafeFileNames\n  nameWithType: FileDialog.SafeFileNames\n  fullName: FileDialog.SafeFileNames\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets an array that contains one safe file name for each selected file.\n  remarks: See <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public string[] SafeFileNames { get; }\n    return:\n      type: System.String[]\n      description: An array of <xref href=\"System.String\"></xref> that contains one safe file name for each selected file. The default is an array with a single item whose value is <xref href=\"System.String.Empty\"></xref>.\n  overload: Microsoft.Win32.FileDialog.SafeFileNames*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.Title\n  commentId: P:Microsoft.Win32.FileDialog.Title\n  id: Title\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: FileDialog.Title\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets the text that appears in the title bar of a file dialog.\n  remarks: If <xref:Microsoft.Win32.FileDialog.Title%2A> is null or <xref:System.String.Empty>, a default, localized value is used, such as \"Save As\" or \"Open\".\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public string Title { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that is the text that appears in the title bar of a file dialog. The default is <xref href=\"System.String.Empty\"></xref>.\n  overload: Microsoft.Win32.FileDialog.Title*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.ToString\n  commentId: M:Microsoft.Win32.FileDialog.ToString\n  id: ToString\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FileDialog.ToString()\n  fullName: FileDialog.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Returns a string that represents a file dialog.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> representation of <xref href=\"Microsoft.Win32.FileDialog\"></xref> that contains the full pathname for any files selected from either <xref href=\"Microsoft.Win32.OpenFileDialog\"></xref>, <xref href=\"Microsoft.Win32.SaveFileDialog\"></xref>.\n  overload: Microsoft.Win32.FileDialog.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.Win32.FileDialog.ValidateNames\n  commentId: P:Microsoft.Win32.FileDialog.ValidateNames\n  id: ValidateNames\n  parent: Microsoft.Win32.FileDialog\n  langs:\n  - csharp\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: FileDialog.ValidateNames\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: Microsoft.Win32\n  summary: Gets or sets a value indicating whether the dialog accepts only valid [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] file names.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public bool ValidateNames { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if warnings will be shown when an invalid file name is provided; otherwise, `false`. The default is `false`.'\n  overload: Microsoft.Win32.FileDialog.ValidateNames*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: Microsoft.Win32.CommonDialog\n  parent: Microsoft.Win32\n  isExternal: false\n  name: CommonDialog\n  nameWithType: CommonDialog\n  fullName: Microsoft.Win32.CommonDialog\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: Microsoft.Win32.FileDialog.#ctor\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileDialog()\n  nameWithType: FileDialog.FileDialog()\n  fullName: FileDialog.FileDialog()\n- uid: Microsoft.Win32.FileDialog.AddExtension\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: FileDialog.AddExtension\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Win32.FileDialog.CheckFileExists\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: FileDialog.CheckFileExists\n- uid: Microsoft.Win32.FileDialog.CheckPathExists\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: FileDialog.CheckPathExists\n- uid: Microsoft.Win32.FileDialog.CustomPlaces\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: FileDialog.CustomPlaces\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: Microsoft.Win32.FileDialogCustomPlace\n  name: FileDialogCustomPlace\n  nameWithType: FileDialogCustomPlace\n  fullName: Microsoft.Win32.FileDialogCustomPlace\n- uid: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<FileDialogCustomPlace>\n  nameWithType: IList<FileDialogCustomPlace>\n  fullName: System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Win32.FileDialogCustomPlace\n    name: FileDialogCustomPlace\n    nameWithType: FileDialogCustomPlace\n    fullName: Microsoft.Win32.FileDialogCustomPlace\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Win32.FileDialog.DefaultExt\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: FileDialog.DefaultExt\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Win32.FileDialog.DereferenceLinks\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: FileDialog.DereferenceLinks\n- uid: Microsoft.Win32.FileDialog.FileName\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: FileDialog.FileName\n- uid: Microsoft.Win32.FileDialog.FileNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: FileDialog.FileNames\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Win32.FileDialog.FileOk\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileOk\n  nameWithType: FileDialog.FileOk\n  fullName: FileDialog.FileOk\n- uid: System.ComponentModel.CancelEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventHandler\n  nameWithType: CancelEventHandler\n  fullName: System.ComponentModel.CancelEventHandler\n- uid: Microsoft.Win32.FileDialog.Filter\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: FileDialog.Filter\n- uid: Microsoft.Win32.FileDialog.FilterIndex\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: FileDialog.FilterIndex\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  nameWithType: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  fullName: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: Microsoft.Win32.FileDialog.InitialDirectory\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: FileDialog.InitialDirectory\n- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: OnFileOk(CancelEventArgs)\n  nameWithType: FileDialog.OnFileOk(CancelEventArgs)\n  fullName: FileDialog.OnFileOk(CancelEventArgs)\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: Microsoft.Win32.FileDialog.Options\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: FileDialog.Options\n- uid: Microsoft.Win32.FileDialog.Reset\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Reset()\n  nameWithType: FileDialog.Reset()\n  fullName: FileDialog.Reset()\n- uid: Microsoft.Win32.FileDialog.RestoreDirectory\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: FileDialog.RestoreDirectory\n- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RunDialog(IntPtr)\n  nameWithType: FileDialog.RunDialog(IntPtr)\n  fullName: FileDialog.RunDialog(IntPtr)\n- uid: Microsoft.Win32.FileDialog.SafeFileName\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileName\n  nameWithType: FileDialog.SafeFileName\n  fullName: FileDialog.SafeFileName\n- uid: Microsoft.Win32.FileDialog.SafeFileNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileNames\n  nameWithType: FileDialog.SafeFileNames\n  fullName: FileDialog.SafeFileNames\n- uid: Microsoft.Win32.FileDialog.Title\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: FileDialog.Title\n- uid: Microsoft.Win32.FileDialog.ToString\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ToString()\n  nameWithType: FileDialog.ToString()\n  fullName: FileDialog.ToString()\n- uid: Microsoft.Win32.FileDialog.ValidateNames\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: FileDialog.ValidateNames\n- uid: Microsoft.Win32.FileDialog.#ctor*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileDialog\n  nameWithType: FileDialog.FileDialog\n  fullName: FileDialog.FileDialog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.AddExtension*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: FileDialog.AddExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.CheckFileExists*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: FileDialog.CheckFileExists\n  fullName: FileDialog.CheckFileExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.CheckPathExists*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: FileDialog.CheckPathExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.CustomPlaces*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: FileDialog.CustomPlaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.DefaultExt*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: FileDialog.DefaultExt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.DereferenceLinks*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: FileDialog.DereferenceLinks\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.FileName*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: FileDialog.FileName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.FileNames*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: FileDialog.FileNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.Filter*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: FileDialog.Filter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.FilterIndex*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: FileDialog.FilterIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.HookProc*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: HookProc\n  nameWithType: FileDialog.HookProc\n  fullName: FileDialog.HookProc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.InitialDirectory*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: FileDialog.InitialDirectory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.OnFileOk*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: OnFileOk\n  nameWithType: FileDialog.OnFileOk\n  fullName: FileDialog.OnFileOk\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.Options*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: FileDialog.Options\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.Reset*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Reset\n  nameWithType: FileDialog.Reset\n  fullName: FileDialog.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.RestoreDirectory*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: FileDialog.RestoreDirectory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.RunDialog*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: RunDialog\n  nameWithType: FileDialog.RunDialog\n  fullName: FileDialog.RunDialog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.SafeFileName*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileName\n  nameWithType: FileDialog.SafeFileName\n  fullName: FileDialog.SafeFileName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.SafeFileNames*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: SafeFileNames\n  nameWithType: FileDialog.SafeFileNames\n  fullName: FileDialog.SafeFileNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.Title*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: FileDialog.Title\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.ToString*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ToString\n  nameWithType: FileDialog.ToString\n  fullName: FileDialog.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: Microsoft.Win32.FileDialog.ValidateNames*\n  parent: Microsoft.Win32.FileDialog\n  isExternal: false\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: FileDialog.ValidateNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/FileDialog.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: CheckPermissionsToShowDialog()\n  nameWithType: CommonDialog.CheckPermissionsToShowDialog()\n  fullName: CommonDialog.CheckPermissionsToShowDialog()\n- uid: Microsoft.Win32.CommonDialog.ShowDialog\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: ShowDialog()\n  nameWithType: CommonDialog.ShowDialog()\n  fullName: CommonDialog.ShowDialog()\n- uid: Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: ShowDialog(Window)\n  nameWithType: CommonDialog.ShowDialog(Window)\n  fullName: CommonDialog.ShowDialog(Window)\n- uid: Microsoft.Win32.CommonDialog.Tag\n  parent: Microsoft.Win32.CommonDialog\n  isExternal: false\n  name: Tag\n  nameWithType: CommonDialog.Tag\n  fullName: CommonDialog.Tag\n"}