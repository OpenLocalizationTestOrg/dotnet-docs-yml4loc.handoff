{"nodes":[{"content":"Metadata Interface for all CLR types types","nodes":[{"pos":[0,42],"content":"Metadata Interface for all CLR types types","nodes":[{"content":"Metadata Interface for all CLR types types","pos":[0,42]}]}],"pos":[1613,1656],"yaml":true},{"content":"No content here will be updated; please do not add material here.","nodes":[{"pos":[0,65],"content":"No content here will be updated; please do not add material here.","nodes":[{"content":"No content here will be updated; please do not add material here.","pos":[0,65]}]}],"pos":[1667,1733],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.Common.DbProviderManifest\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbProviderManifest\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Common.DbProviderManifest\"></xref> class."}],"pos":[3179,3279],"yaml":true},{"content":"Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion.","nodes":[{"pos":[0,77],"content":"Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion.","nodes":[{"content":"Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion.","pos":[0,77]}]}],"pos":[4469,4547],"yaml":true},{"content":"Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion3.","nodes":[{"pos":[0,78],"content":"Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion3.","nodes":[{"content":"Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion3.","pos":[0,78]}]}],"pos":[5794,5873],"yaml":true},{"content":"Provider writers should override this method to return the argument with the wildcards and the escape character escaped. This method is only used if SupportsEscapingLikeArgument returns true.","nodes":[{"pos":[0,191],"content":"Provider writers should override this method to return the argument with the wildcards and the escape character escaped. This method is only used if SupportsEscapingLikeArgument returns true.","nodes":[{"content":"Provider writers should override this method to return the argument with the wildcards and the escape character escaped. This method is only used if SupportsEscapingLikeArgument returns true.","pos":[0,191],"nodes":[{"content":"Provider writers should override this method to return the argument with the wildcards and the escape character escaped.","pos":[0,120]},{"content":"This method is only used if SupportsEscapingLikeArgument returns true.","pos":[121,191]}]}]}],"pos":[7102,7294],"yaml":true},{"content":"The argument to be escaped.","nodes":[{"pos":[0,27],"content":"The argument to be escaped.","nodes":[{"content":"The argument to be escaped.","pos":[0,27]}]}],"pos":[7457,7485],"yaml":true},{"content":"The argument with the wildcards and the escape character escaped.","nodes":[{"pos":[0,65],"content":"The argument with the wildcards and the escape character escaped.","nodes":[{"content":"The argument with the wildcards and the escape character escaped.","pos":[0,65]}]}],"pos":[7542,7608],"yaml":true},{"content":"When overridden in a derived class, this method returns provider-specific information.","nodes":[{"pos":[0,86],"content":"When overridden in a derived class, this method returns provider-specific information.","nodes":[{"content":"When overridden in a derived class, this method returns provider-specific information.","pos":[0,86]}]}],"pos":[8746,8833],"yaml":true},{"content":"The type of the information to return.","nodes":[{"pos":[0,38],"content":"The type of the information to return.","nodes":[{"content":"The type of the information to return.","pos":[0,38]}]}],"pos":[9026,9065],"yaml":true},{"content":"The XmlReader object that represents the mapping to the underlying data store catalog.","nodes":[{"pos":[0,86],"content":"The XmlReader object that represents the mapping to the underlying data store catalog.","nodes":[{"content":"The XmlReader object that represents the mapping to the underlying data store catalog.","pos":[0,86]}]}],"pos":[9129,9216],"yaml":true},{"content":"When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.","nodes":[{"pos":[0,129],"content":"When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.","nodes":[{"content":"When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.","pos":[0,129]}]}],"pos":[10388,10518],"yaml":true},{"content":"The TypeUsage instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.","nodes":[{"pos":[0,116],"content":"The TypeUsage instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.","nodes":[{"content":"The TypeUsage instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.","pos":[0,116]}]}],"pos":[10753,10870],"yaml":true},{"content":"The <xref href=\"System.Data.Metadata.Edm.TypeUsage\"></xref> instance that describes an EDM type and a set of facets for that type.","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Metadata.Edm.TypeUsage\"&gt;&lt;/xref&gt;</ph> instance that describes an EDM type and a set of facets for that type.","source":"The <xref href=\"System.Data.Metadata.Edm.TypeUsage\"></xref> instance that describes an EDM type and a set of facets for that type."}],"pos":[10948,11079],"yaml":true},{"content":"Returns the FacetDescription objects for a particular type.","nodes":[{"pos":[0,59],"content":"Returns the FacetDescription objects for a particular type.","nodes":[{"content":"Returns the FacetDescription objects for a particular type.","pos":[0,59]}]}],"pos":[12293,12353],"yaml":true},{"content":"The EDM type to return the facet description for.","nodes":[{"pos":[0,49],"content":"The EDM type to return the facet description for.","nodes":[{"content":"The EDM type to return the facet description for.","pos":[0,49]}]}],"pos":[12648,12698],"yaml":true},{"content":"The FacetDescription objects for the specified EDM type.","nodes":[{"pos":[0,56],"content":"The FacetDescription objects for the specified EDM type.","nodes":[{"content":"The FacetDescription objects for the specified EDM type.","pos":[0,56]}]}],"pos":[12834,12891],"yaml":true},{"content":"Gets the provider-specific information.","nodes":[{"pos":[0,39],"content":"Gets the provider-specific information.","nodes":[{"content":"Gets the provider-specific information.","pos":[0,39]}]}],"pos":[14019,14059],"yaml":true},{"content":"The type of the information to return.","nodes":[{"pos":[0,38],"content":"The type of the information to return.","nodes":[{"content":"The type of the information to return.","pos":[0,38]}]}],"pos":[14238,14277],"yaml":true},{"content":"The provider-specific information.","nodes":[{"pos":[0,34],"content":"The provider-specific information.","nodes":[{"content":"The provider-specific information.","pos":[0,34]}]}],"pos":[14341,14376],"yaml":true},{"content":"When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.","nodes":[{"pos":[0,109],"content":"When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.","nodes":[{"content":"When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.","pos":[0,109]}]}],"pos":[15453,15563],"yaml":true},{"content":"A collection of EDM functions.","nodes":[{"pos":[0,30],"content":"A collection of EDM functions.","nodes":[{"content":"A collection of EDM functions.","pos":[0,30]}]}],"pos":[15862,15893],"yaml":true},{"content":"When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.","nodes":[{"pos":[0,128],"content":"When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.","nodes":[{"content":"When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.","pos":[0,128]}]}],"pos":[17078,17207],"yaml":true},{"content":"The TypeUsage instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.","nodes":[{"pos":[0,116],"content":"The TypeUsage instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.","nodes":[{"content":"The TypeUsage instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.","pos":[0,116]}]}],"pos":[17440,17557],"yaml":true},{"content":"The TypeUsage instance that describes a storage type and a set of facets for that type.","nodes":[{"pos":[0,87],"content":"The TypeUsage instance that describes a storage type and a set of facets for that type.","nodes":[{"content":"The TypeUsage instance that describes a storage type and a set of facets for that type.","pos":[0,87]}]}],"pos":[17635,17723],"yaml":true},{"content":"When overridden in a derived class, returns the set of primitive types supported by the data source.","nodes":[{"pos":[0,100],"content":"When overridden in a derived class, returns the set of primitive types supported by the data source.","nodes":[{"content":"When overridden in a derived class, returns the set of primitive types supported by the data source.","pos":[0,100]}]}],"pos":[18774,18875],"yaml":true},{"content":"The set of types supported by the data source.","nodes":[{"pos":[0,46],"content":"The set of types supported by the data source.","nodes":[{"content":"The set of types supported by the data source.","pos":[0,46]}]}],"pos":[19174,19221],"yaml":true},{"content":"Gets the namespace used by this provider manifest.","nodes":[{"pos":[0,50],"content":"Gets the namespace used by this provider manifest.","nodes":[{"content":"Gets the namespace used by this provider manifest.","pos":[0,50]}]}],"pos":[20269,20320],"yaml":true},{"content":"The namespace used by this provider manifest.","nodes":[{"pos":[0,45],"content":"The namespace used by this provider manifest.","nodes":[{"content":"The namespace used by this provider manifest.","pos":[0,45]}]}],"pos":[20446,20492],"yaml":true},{"content":"Value to pass to GetInformation to get the StoreSchemaDefinitionVersion.","nodes":[{"pos":[0,72],"content":"Value to pass to GetInformation to get the StoreSchemaDefinitionVersion.","nodes":[{"content":"Value to pass to GetInformation to get the StoreSchemaDefinitionVersion.","pos":[0,72]}]}],"pos":[21585,21658],"yaml":true},{"content":"Value to pass to GetInformation to get the StoreSchemaDefinitionVersion3.","nodes":[{"pos":[0,73],"content":"Value to pass to GetInformation to get the StoreSchemaDefinitionVersion3.","nodes":[{"content":"Value to pass to GetInformation to get the StoreSchemaDefinitionVersion3.","pos":[0,73]}]}],"pos":[22870,22944],"yaml":true},{"content":"Value to pass to GetInformation to get the StoreSchemaMappingVersion.","nodes":[{"pos":[0,69],"content":"Value to pass to GetInformation to get the StoreSchemaMappingVersion.","nodes":[{"content":"Value to pass to GetInformation to get the StoreSchemaMappingVersion.","pos":[0,69]}]}],"pos":[24098,24168],"yaml":true},{"content":"Value to pass to GetInformation to get the StoreSchemaMappingVersion3.","nodes":[{"pos":[0,70],"content":"Value to pass to GetInformation to get the StoreSchemaMappingVersion3.","nodes":[{"content":"Value to pass to GetInformation to get the StoreSchemaMappingVersion3.","pos":[0,70]}]}],"pos":[25359,25430],"yaml":true},{"content":"Indicates if the provider supports escaping strings to be used as patterns in a Like expression.","nodes":[{"pos":[0,96],"content":"Indicates if the provider supports escaping strings to be used as patterns in a Like expression.","nodes":[{"content":"Indicates if the provider supports escaping strings to be used as patterns in a Like expression.","pos":[0,96]}]}],"pos":[26702,26799],"yaml":true},{"content":"If the provider supports escaping, the character that would be used as the escape character.","nodes":[{"pos":[0,92],"content":"If the provider supports escaping, the character that would be used as the escape character.","nodes":[{"content":"If the provider supports escaping, the character that would be used as the escape character.","pos":[0,92]}]}],"pos":[26984,27077],"yaml":true},{"content":"`True` if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`True`</ph> if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, `false`."}],"pos":[27135,27252],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.DbProviderManifest\n  commentId: T:System.Data.Common.DbProviderManifest\n  id: DbProviderManifest\n  children:\n  - System.Data.Common.DbProviderManifest.#ctor\n  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition\n  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  - System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)\n  - System.Data.Common.DbProviderManifest.GetDbInformation(System.String)\n  - System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  - System.Data.Common.DbProviderManifest.GetInformation(System.String)\n  - System.Data.Common.DbProviderManifest.GetStoreFunctions\n  - System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.DbProviderManifest.GetStoreTypes\n  - System.Data.Common.DbProviderManifest.NamespaceName\n  - System.Data.Common.DbProviderManifest.StoreSchemaDefinition\n  - System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3\n  - System.Data.Common.DbProviderManifest.StoreSchemaMapping\n  - System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3\n  - System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)\n  langs:\n  - csharp\n  name: DbProviderManifest\n  nameWithType: DbProviderManifest\n  fullName: System.Data.Common.DbProviderManifest\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Metadata Interface for all CLR types types\n  remarks: No content here will be updated; please do not add material here.\n  syntax:\n    content: public abstract class DbProviderManifest\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Data.Common.DbXmlEnabledProviderManifest\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.#ctor\n  commentId: M:System.Data.Common.DbProviderManifest.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: DbProviderManifest()\n  nameWithType: DbProviderManifest.DbProviderManifest()\n  fullName: DbProviderManifest.DbProviderManifest()\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Initializes a new instance of the <xref href=\"System.Data.Common.DbProviderManifest\"></xref> class.\n  syntax:\n    content: protected DbProviderManifest ();\n    parameters: []\n  overload: System.Data.Common.DbProviderManifest.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition\n  commentId: F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition\n  id: ConceptualSchemaDefinition\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: ConceptualSchemaDefinition\n  nameWithType: DbProviderManifest.ConceptualSchemaDefinition\n  fullName: DbProviderManifest.ConceptualSchemaDefinition\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion.\n  syntax:\n    content: public static readonly string ConceptualSchemaDefinition;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  commentId: F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  id: ConceptualSchemaDefinitionVersion3\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: ConceptualSchemaDefinitionVersion3\n  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  fullName: DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion3.\n  syntax:\n    content: public static readonly string ConceptualSchemaDefinitionVersion3;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)\n  commentId: M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)\n  id: EscapeLikeArgument(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: EscapeLikeArgument(String)\n  nameWithType: DbProviderManifest.EscapeLikeArgument(String)\n  fullName: DbProviderManifest.EscapeLikeArgument(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Provider writers should override this method to return the argument with the wildcards and the escape character escaped. This method is only used if SupportsEscapingLikeArgument returns true.\n  syntax:\n    content: public virtual string EscapeLikeArgument (string argument);\n    parameters:\n    - id: argument\n      type: System.String\n      description: The argument to be escaped.\n    return:\n      type: System.String\n      description: The argument with the wildcards and the escape character escaped.\n  overload: System.Data.Common.DbProviderManifest.EscapeLikeArgument*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)\n  commentId: M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)\n  id: GetDbInformation(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: GetDbInformation(String)\n  nameWithType: DbProviderManifest.GetDbInformation(String)\n  fullName: DbProviderManifest.GetDbInformation(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: When overridden in a derived class, this method returns provider-specific information.\n  syntax:\n    content: protected abstract System.Xml.XmlReader GetDbInformation (string informationType);\n    parameters:\n    - id: informationType\n      type: System.String\n      description: The type of the information to return.\n    return:\n      type: System.Xml.XmlReader\n      description: The XmlReader object that represents the mapping to the underlying data store catalog.\n  overload: System.Data.Common.DbProviderManifest.GetDbInformation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)\n  id: GetEdmType(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: GetEdmType(TypeUsage)\n  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)\n  fullName: DbProviderManifest.GetEdmType(TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.\n  syntax:\n    content: public abstract System.Data.Metadata.Edm.TypeUsage GetEdmType (System.Data.Metadata.Edm.TypeUsage storeType);\n    parameters:\n    - id: storeType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The TypeUsage instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.\n    return:\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The <xref href=\"System.Data.Metadata.Edm.TypeUsage\"></xref> instance that describes an EDM type and a set of facets for that type.\n  overload: System.Data.Common.DbProviderManifest.GetEdmType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  commentId: M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  id: GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: GetFacetDescriptions(EdmType)\n  nameWithType: DbProviderManifest.GetFacetDescriptions(EdmType)\n  fullName: DbProviderManifest.GetFacetDescriptions(EdmType)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Returns the FacetDescription objects for a particular type.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription> GetFacetDescriptions (System.Data.Metadata.Edm.EdmType edmType);\n    parameters:\n    - id: edmType\n      type: System.Data.Metadata.Edm.EdmType\n      description: The EDM type to return the facet description for.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}\n      description: The FacetDescription objects for the specified EDM type.\n  overload: System.Data.Common.DbProviderManifest.GetFacetDescriptions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)\n  commentId: M:System.Data.Common.DbProviderManifest.GetInformation(System.String)\n  id: GetInformation(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: GetInformation(String)\n  nameWithType: DbProviderManifest.GetInformation(String)\n  fullName: DbProviderManifest.GetInformation(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Gets the provider-specific information.\n  syntax:\n    content: public System.Xml.XmlReader GetInformation (string informationType);\n    parameters:\n    - id: informationType\n      type: System.String\n      description: The type of the information to return.\n    return:\n      type: System.Xml.XmlReader\n      description: The provider-specific information.\n  overload: System.Data.Common.DbProviderManifest.GetInformation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions\n  commentId: M:System.Data.Common.DbProviderManifest.GetStoreFunctions\n  id: GetStoreFunctions\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: GetStoreFunctions()\n  nameWithType: DbProviderManifest.GetStoreFunctions()\n  fullName: DbProviderManifest.GetStoreFunctions()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetStoreFunctions ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}\n      description: A collection of EDM functions.\n  overload: System.Data.Common.DbProviderManifest.GetStoreFunctions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)\n  id: GetStoreType(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: GetStoreType(TypeUsage)\n  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)\n  fullName: DbProviderManifest.GetStoreType(TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.\n  syntax:\n    content: public abstract System.Data.Metadata.Edm.TypeUsage GetStoreType (System.Data.Metadata.Edm.TypeUsage edmType);\n    parameters:\n    - id: edmType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The TypeUsage instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.\n    return:\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The TypeUsage instance that describes a storage type and a set of facets for that type.\n  overload: System.Data.Common.DbProviderManifest.GetStoreType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.GetStoreTypes\n  commentId: M:System.Data.Common.DbProviderManifest.GetStoreTypes\n  id: GetStoreTypes\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: GetStoreTypes()\n  nameWithType: DbProviderManifest.GetStoreTypes()\n  fullName: DbProviderManifest.GetStoreTypes()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: When overridden in a derived class, returns the set of primitive types supported by the data source.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetStoreTypes ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}\n      description: The set of types supported by the data source.\n  overload: System.Data.Common.DbProviderManifest.GetStoreTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.NamespaceName\n  commentId: P:System.Data.Common.DbProviderManifest.NamespaceName\n  id: NamespaceName\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: NamespaceName\n  nameWithType: DbProviderManifest.NamespaceName\n  fullName: DbProviderManifest.NamespaceName\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Gets the namespace used by this provider manifest.\n  syntax:\n    content: public abstract string NamespaceName { get; }\n    return:\n      type: System.String\n      description: The namespace used by this provider manifest.\n  overload: System.Data.Common.DbProviderManifest.NamespaceName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition\n  commentId: F:System.Data.Common.DbProviderManifest.StoreSchemaDefinition\n  id: StoreSchemaDefinition\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: StoreSchemaDefinition\n  nameWithType: DbProviderManifest.StoreSchemaDefinition\n  fullName: DbProviderManifest.StoreSchemaDefinition\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Value to pass to GetInformation to get the StoreSchemaDefinitionVersion.\n  syntax:\n    content: public static readonly string StoreSchemaDefinition;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3\n  commentId: F:System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3\n  id: StoreSchemaDefinitionVersion3\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: StoreSchemaDefinitionVersion3\n  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3\n  fullName: DbProviderManifest.StoreSchemaDefinitionVersion3\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Value to pass to GetInformation to get the StoreSchemaDefinitionVersion3.\n  syntax:\n    content: public static readonly string StoreSchemaDefinitionVersion3;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping\n  commentId: F:System.Data.Common.DbProviderManifest.StoreSchemaMapping\n  id: StoreSchemaMapping\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: StoreSchemaMapping\n  nameWithType: DbProviderManifest.StoreSchemaMapping\n  fullName: DbProviderManifest.StoreSchemaMapping\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Value to pass to GetInformation to get the StoreSchemaMappingVersion.\n  syntax:\n    content: public static readonly string StoreSchemaMapping;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3\n  commentId: F:System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3\n  id: StoreSchemaMappingVersion3\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: StoreSchemaMappingVersion3\n  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3\n  fullName: DbProviderManifest.StoreSchemaMappingVersion3\n  type: Field\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Value to pass to GetInformation to get the StoreSchemaMappingVersion3.\n  syntax:\n    content: public static readonly string StoreSchemaMappingVersion3;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)\n  commentId: M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)\n  id: SupportsEscapingLikeArgument(System.Char@)\n  parent: System.Data.Common.DbProviderManifest\n  langs:\n  - csharp\n  name: SupportsEscapingLikeArgument(Char)\n  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)\n  fullName: DbProviderManifest.SupportsEscapingLikeArgument(Char)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Indicates if the provider supports escaping strings to be used as patterns in a Like expression.\n  syntax:\n    content: public virtual bool SupportsEscapingLikeArgument (out char escapeCharacter);\n    parameters:\n    - id: escapeCharacter\n      type: System.Char\n      description: If the provider supports escaping, the character that would be used as the escape character.\n    return:\n      type: System.Boolean\n      description: '`True` if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, `false`.'\n  overload: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Common.DbProviderManifest.#ctor\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: DbProviderManifest()\n  nameWithType: DbProviderManifest.DbProviderManifest()\n  fullName: DbProviderManifest.DbProviderManifest()\n- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: ConceptualSchemaDefinition\n  nameWithType: DbProviderManifest.ConceptualSchemaDefinition\n  fullName: DbProviderManifest.ConceptualSchemaDefinition\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: ConceptualSchemaDefinitionVersion3\n  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  fullName: DbProviderManifest.ConceptualSchemaDefinitionVersion3\n- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: EscapeLikeArgument(String)\n  nameWithType: DbProviderManifest.EscapeLikeArgument(String)\n  fullName: DbProviderManifest.EscapeLikeArgument(String)\n- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetDbInformation(String)\n  nameWithType: DbProviderManifest.GetDbInformation(String)\n  fullName: DbProviderManifest.GetDbInformation(String)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetEdmType(TypeUsage)\n  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)\n  fullName: DbProviderManifest.GetEdmType(TypeUsage)\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetFacetDescriptions(EdmType)\n  nameWithType: DbProviderManifest.GetFacetDescriptions(EdmType)\n  fullName: DbProviderManifest.GetFacetDescriptions(EdmType)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Data.Metadata.Edm.FacetDescription\n  name: FacetDescription\n  nameWithType: FacetDescription\n  fullName: System.Data.Metadata.Edm.FacetDescription\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<FacetDescription>\n  nameWithType: ReadOnlyCollection<FacetDescription>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Metadata.Edm.FacetDescription\n    name: FacetDescription\n    nameWithType: FacetDescription\n    fullName: System.Data.Metadata.Edm.FacetDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Metadata.Edm.EdmType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmType\n  nameWithType: EdmType\n  fullName: System.Data.Metadata.Edm.EdmType\n- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetInformation(String)\n  nameWithType: DbProviderManifest.GetInformation(String)\n  fullName: DbProviderManifest.GetInformation(String)\n- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetStoreFunctions()\n  nameWithType: DbProviderManifest.GetStoreFunctions()\n  fullName: DbProviderManifest.GetStoreFunctions()\n- uid: System.Data.Metadata.Edm.EdmFunction\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<EdmFunction>\n  nameWithType: ReadOnlyCollection<EdmFunction>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Metadata.Edm.EdmFunction\n    name: EdmFunction\n    nameWithType: EdmFunction\n    fullName: System.Data.Metadata.Edm.EdmFunction\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetStoreType(TypeUsage)\n  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)\n  fullName: DbProviderManifest.GetStoreType(TypeUsage)\n- uid: System.Data.Common.DbProviderManifest.GetStoreTypes\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetStoreTypes()\n  nameWithType: DbProviderManifest.GetStoreTypes()\n  fullName: DbProviderManifest.GetStoreTypes()\n- uid: System.Data.Metadata.Edm.PrimitiveType\n  name: PrimitiveType\n  nameWithType: PrimitiveType\n  fullName: System.Data.Metadata.Edm.PrimitiveType\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<PrimitiveType>\n  nameWithType: ReadOnlyCollection<PrimitiveType>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Metadata.Edm.PrimitiveType\n    name: PrimitiveType\n    nameWithType: PrimitiveType\n    fullName: System.Data.Metadata.Edm.PrimitiveType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbProviderManifest.NamespaceName\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: NamespaceName\n  nameWithType: DbProviderManifest.NamespaceName\n  fullName: DbProviderManifest.NamespaceName\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: StoreSchemaDefinition\n  nameWithType: DbProviderManifest.StoreSchemaDefinition\n  fullName: DbProviderManifest.StoreSchemaDefinition\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: StoreSchemaDefinitionVersion3\n  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3\n  fullName: DbProviderManifest.StoreSchemaDefinitionVersion3\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: StoreSchemaMapping\n  nameWithType: DbProviderManifest.StoreSchemaMapping\n  fullName: DbProviderManifest.StoreSchemaMapping\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: StoreSchemaMappingVersion3\n  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3\n  fullName: DbProviderManifest.StoreSchemaMappingVersion3\n- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: SupportsEscapingLikeArgument(Char)\n  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)\n  fullName: DbProviderManifest.SupportsEscapingLikeArgument(Char)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Data.Common.DbProviderManifest.#ctor*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: DbProviderManifest\n  nameWithType: DbProviderManifest.DbProviderManifest\n  fullName: DbProviderManifest.DbProviderManifest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: EscapeLikeArgument\n  nameWithType: DbProviderManifest.EscapeLikeArgument\n  fullName: DbProviderManifest.EscapeLikeArgument\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.GetDbInformation*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetDbInformation\n  nameWithType: DbProviderManifest.GetDbInformation\n  fullName: DbProviderManifest.GetDbInformation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.GetEdmType*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetEdmType\n  nameWithType: DbProviderManifest.GetEdmType\n  fullName: DbProviderManifest.GetEdmType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetFacetDescriptions\n  nameWithType: DbProviderManifest.GetFacetDescriptions\n  fullName: DbProviderManifest.GetFacetDescriptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.GetInformation*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetInformation\n  nameWithType: DbProviderManifest.GetInformation\n  fullName: DbProviderManifest.GetInformation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetStoreFunctions\n  nameWithType: DbProviderManifest.GetStoreFunctions\n  fullName: DbProviderManifest.GetStoreFunctions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.GetStoreType*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetStoreType\n  nameWithType: DbProviderManifest.GetStoreType\n  fullName: DbProviderManifest.GetStoreType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.GetStoreTypes*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetStoreTypes\n  nameWithType: DbProviderManifest.GetStoreTypes\n  fullName: DbProviderManifest.GetStoreTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.NamespaceName*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: NamespaceName\n  nameWithType: DbProviderManifest.NamespaceName\n  fullName: DbProviderManifest.NamespaceName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument*\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: SupportsEscapingLikeArgument\n  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument\n  fullName: DbProviderManifest.SupportsEscapingLikeArgument\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbProviderManifest.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}