### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.NamedPipeServerStream
  commentId: T:System.IO.Pipes.NamedPipeServerStream
  id: NamedPipeServerStream
  children:
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)
  - System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)
  - System.IO.Pipes.NamedPipeServerStream.Disconnect
  - System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)
  - System.IO.Pipes.NamedPipeServerStream.Finalize
  - System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName
  - System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
  - System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  - System.IO.Pipes.NamedPipeServerStream.WaitForConnection
  - System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync
  - System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  name: NamedPipeServerStream
  nameWithType: NamedPipeServerStream
  fullName: System.IO.Pipes.NamedPipeServerStream
  type: Class
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Exposes a <xref href="System.IO.Stream"></xref> around a named pipe, supporting both synchronous and asynchronous read and write operations.
  remarks: "Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients. Named pipes can be used for interprocess communication locally or over a network. A single pipe name can be shared by multiple <xref:System.IO.Pipes.NamedPipeClientStream> objects.  \n  \n Any process can act as either a named pipe server or client, or both.  \n  \n> [!NOTE]\n>  For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process on the same computer using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>. The server then waits for a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process to connect to it. In this example, both processes are on the same computer and the <xref:System.IO.Pipes.NamedPipeClientStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the server process, which uses the <xref:System.IO.Pipes.NamedPipeServerStream> class. For the entire code example, including the code for both the pipe client and server, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).  \n  \n [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]"
  syntax:
    content: 'public sealed class NamedPipeServerStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.Object
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.Stream.Null
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteTimeout
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)
  - System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name.
  remarks: "This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has the following characteristics:  \n  \n-   A default pipe direction of <xref:System.IO.Pipes.PipeDirection.InOut>.  \n  \n-   The maximum number of server instances that share the same name set to 1.  \n  \n-   A <xref:System.IO.Pipes.PipeTransmissionMode> value of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.  \n  \n-   A <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   Default input and output buffer sizes.  \n  \n-   No pipe security.  \n  \n-   A <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.  \n  \n-   No specified additional <xref:System.IO.Pipes.PipeAccessRights>."
  syntax:
    content: public NamedPipeServerStream (string pipeName);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>pipeName</code> is set to "anonymous".
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, pipe options, recommended in and out buffer sizes, pipe security, and inheritability mode.
  remarks: This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has no specified additional <xref:System.IO.Pipes.PipeAccessRights>.
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: The maximum number of server instances that share the same name. You can pass <xref href="System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances"></xref> for this value.
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the enumeration values that determines the transmission mode of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
    - id: inBufferSize
      type: System.Int32
      description: A positive value greater than 0 that indicates the input buffer size.
    - id: outBufferSize
      type: System.Int32
      description: A positive value greater than 0 that indicates the output buffer size.
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: An object that determines the access control and audit security for the pipe.
    - id: inheritability
      type: System.IO.HandleInheritability
      description: One of the enumeration values that determines whether the underlying handle can be inherited by child processes.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>maxNumberofServerInstances</code> is less than -1 or greater than 254 (-1 indicates <xref href=\"System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances\"></xref>)  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>inBufferSize</code> is negative.  \n  \n -or-  \n  \n <code>inheritability</code> is not a valid <xref href=\"System.IO.HandleInheritability\"></xref> value."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, pipe options, recommended in and out buffer sizes, and pipe security.
  remarks: "This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has the following characteristics:  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.  \n  \n-   No specified additional <xref:System.IO.Pipes.PipeAccessRights>."
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: The maximum number of server instances that share the same name. You can pass <xref href="System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances"></xref> for this value.
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the enumeration values that determines the transmission mode of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
    - id: inBufferSize
      type: System.Int32
      description: A positive value greater than 0 that indicates the input buffer size.
    - id: outBufferSize
      type: System.Int32
      description: A positive value greater than 0 that indicates the output buffer size.
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: An object that determines the access control and audit security for the pipe.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>maxNumberofServerInstances</code> is less than -1 or greater than 254 (-1 indicates <xref href=\"System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances\"></xref>)  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>inBufferSize</code> is negative."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, pipe options, and recommended in and out buffer sizes.
  remarks: "This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has the following characteristics:  \n  \n-   No additional pipe security.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.  \n  \n-   No specified additional <xref:System.IO.Pipes.PipeAccessRights>."
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: The maximum number of server instances that share the same name. You can pass <xref href="System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances"></xref> for this value.
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the enumeration values that determines the transmission mode of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
    - id: inBufferSize
      type: System.Int32
      description: A positive value greater than 0 that indicates the input buffer size.
    - id: outBufferSize
      type: System.Int32
      description: A positive value greater than 0 that indicates the output buffer size.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>maxNumberofServerInstances</code> is less than -1 or greater than 254 (-1 indicates <xref href=\"System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances\"></xref>)  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>inBufferSize</code> is negative."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, and pipe options.
  remarks: "This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has the following characteristics:  \n  \n-   Default input and output buffer sizes.  \n  \n-   No pipe security.  \n  \n-   A <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.  \n  \n-   No specified additional <xref:System.IO.Pipes.PipeAccessRights>."
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: The maximum number of server instances that share the same name. You can pass <xref href="System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances"></xref> for this value.
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the enumeration values that determines the transmission mode of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>maxNumberofServerInstances</code> is less than -1 or greater than 254 (-1 indicates <xref href=\"System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances\"></xref>)  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability, PipeAccessRights)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability, PipeAccessRights)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability, PipeAccessRights)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, pipe options, recommended in and out buffer sizes, pipe security, inheritability mode, and pipe access rights.
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability, System.IO.Pipes.PipeAccessRights additionalAccessRights);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: The maximum number of server instances that share the same name. You can pass <xref href="System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances"></xref> for this value.
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the enumeration values that determines the transmission mode of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
    - id: inBufferSize
      type: System.Int32
      description: The input buffer size.
    - id: outBufferSize
      type: System.Int32
      description: The output buffer size.
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: An object that determines the access control and audit security for the pipe.
    - id: inheritability
      type: System.IO.HandleInheritability
      description: One of the enumeration values that determines whether the underlying handle can be inherited by child processes.
    - id: additionalAccessRights
      type: System.IO.Pipes.PipeAccessRights
      description: One of the enumeration values that specifies the access rights of the pipe.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>maxNumberofServerInstances</code> is less than -1 or greater than 254 (-1 indicates <xref href=\"System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances\"></xref>)  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>inBufferSize</code> is negative.  \n  \n -or-  \n  \n <code>inheritability</code> is not a valid <xref href=\"System.IO.HandleInheritability\"></xref> value.  \n  \n -or-  \n  \n <code>additionalAccessRights</code> is not a valid <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> value."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  fullName: NamedPipeServerStream.NamedPipeServerStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class from the specified pipe handle.
  syntax:
    content: public NamedPipeServerStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: isAsync
      type: System.Boolean
      description: '`true` to indicate that the handle was opened asynchronously; otherwise, `false`.'
    - id: isConnected
      type: System.Boolean
      description: '`true` to indicate that the pipe is connected; otherwise, `false`.'
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: A safe handle for the pipe that this <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> object will encapsulate.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>direction</code> is not a valid <xref href="System.IO.Pipes.PipeDirection"></xref> value.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>safePipeHandle</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>safePipeHandle</code> is an invalid handle.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>safePipeHandle</code> is not a valid pipe handle.  \n  \n -or-  \n  \n The maximum number of server instances has been exceeded."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String, PipeDirection, Int32)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name, pipe direction, and maximum number of server instances.
  remarks: "This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has the following characteristics:  \n  \n-   A default value of 1 for the maximum number of server instances that share the same name.  \n  \n-   A default <xref:System.IO.Pipes.PipeTransmissionMode> value of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.  \n  \n-   A <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   Default input and output buffer sizes.  \n  \n-   No pipe security.  \n  \n-   A <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.  \n  \n-   No specified additional <xref:System.IO.Pipes.PipeAccessRights>."
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: The maximum number of server instances that share the same name. You can pass <xref href="System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances"></xref> for this value.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n A non-negative number is required.  \n  \n -or-  \n  \n <code>maxNumberofServerInstances</code> is less than -1 or greater than 254 (-1 indicates <xref href=\"System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances\"></xref>)  \n  \n -or-  \n  \n <xref href=\"System.IO.HandleInheritability.None\"></xref> or <xref href=\"System.IO.HandleInheritability.Inheritable\"></xref> is required.  \n  \n -or-  \n  \n Access rights is limited to the <xref href=\"System.IO.Pipes.PipeAccessRights.ChangePermissions\"></xref> , <xref href=\"System.IO.Pipes.PipeAccessRights.TakeOwnership\"></xref> , and <xref href=\"System.IO.Pipes.PipeAccessRights.AccessSystemSecurity\"></xref> flags."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String, PipeDirection)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name and pipe direction.
  remarks: "This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has the following characteristics:  \n  \n-   A <xref:System.IO.Pipes.PipeTransmissionMode> value of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.  \n  \n-   A <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   Default input and output buffer sizes.  \n  \n-   No pipe security.  \n  \n-   A <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.  \n  \n-   No specified additional <xref:System.IO.Pipes.PipeAccessRights>."
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. The <xref:System.IO.Pipes.NamedPipeServerStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>, which then blocks until a <xref:System.IO.Pipes.NamedPipeClientStream> object establishes a connection to the current <xref:System.IO.Pipes.NamedPipeServerStream> object.  \n  \n [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]"
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> class with the specified pipe name, pipe direction, maximum number of server instances, and transmission mode.
  remarks: "This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has the following characteristics:  \n  \n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   Default input and output buffer sizes.  \n  \n-   No pipe security.  \n  \n-   A <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.  \n  \n-   No specified additional <xref:System.IO.Pipes.PipeAccessRights>."
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: The maximum number of server instances that share the same name. You can pass <xref href="System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances"></xref> for this value.
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the enumeration values that determines the transmission mode of the pipe.
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>maxNumberofServerInstances</code> is less than -1 or greater than 254 (-1 indicates <xref href=\"System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances\"></xref>)"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>pipeName</code> contains a colon (":").
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: The operating system is Windows Millennium Edition, Windows 98, or Windows 95, which are not supported.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The maximum number of server instances has been exceeded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)
  id: BeginWaitForConnection(System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: BeginWaitForConnection(AsyncCallback, Object)
  nameWithType: NamedPipeServerStream.BeginWaitForConnection(AsyncCallback, Object)
  fullName: NamedPipeServerStream.BeginWaitForConnection(AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Begins an asynchronous operation to wait for a client to connect.
  remarks: "This is the asynchronous equivalent of <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.  \n  \n <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A> must be called exactly once for every call to <xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>."
  syntax:
    content: public IAsyncResult BeginWaitForConnection (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: The method to call when a client connects to the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> object.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous request from other requests.
    return:
      type: System.IAsyncResult
      description: An object that references the asynchronous request.
  overload: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The pipe was not opened asynchronously.  \n  \n -or-  \n  \n A pipe connection has already been established.  \n  \n -or-  \n  \n The pipe handle has not been set."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe connection has been broken.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.Disconnect
  commentId: M:System.IO.Pipes.NamedPipeServerStream.Disconnect
  id: Disconnect
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: Disconnect()
  nameWithType: NamedPipeServerStream.Disconnect()
  fullName: NamedPipeServerStream.Disconnect()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Disconnects the current connection.
  remarks: Calling the <xref:System.IO.Pipes.NamedPipeServerStream.Disconnect%2A> method will block until all the sent characters have been read unless the transmission mode of the pipe is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message> and the buffer size is set in the constructor that created the <xref:System.IO.Pipes.NamedPipeServerStream> object. In this case, not all of the messages will be received. Calling <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> causes the server to block until all the data has been read from the pipe.
  syntax:
    content: public void Disconnect ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeServerStream.Disconnect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No pipe connections have been made yet.  \n  \n -or-  \n  \n The connected pipe has already disconnected.  \n  \n -or-  \n  \n The pipe handle has not been set."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)
  id: EndWaitForConnection(System.IAsyncResult)
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: EndWaitForConnection(IAsyncResult)
  nameWithType: NamedPipeServerStream.EndWaitForConnection(IAsyncResult)
  fullName: NamedPipeServerStream.EndWaitForConnection(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Ends an asynchronous operation to wait for a client to connect.
  remarks: <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A> must be called exactly once for every call to <xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>.
  syntax:
    content: public void EndWaitForConnection (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The pending asynchronous request.
  overload: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>asyncResult</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The pipe was not opened asynchronously.  \n  \n -or-  \n  \n The pipe handle has not been set."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe connection has been broken.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.Finalize
  commentId: M:System.IO.Pipes.NamedPipeServerStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: NamedPipeServerStream.Finalize()
  fullName: NamedPipeServerStream.Finalize()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  namespace: System.IO.Pipes
  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> instance is reclaimed by garbage collection.
  syntax:
    content: ~NamedPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeServerStream.Finalize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName
  commentId: M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName
  id: GetImpersonationUserName
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: GetImpersonationUserName()
  nameWithType: NamedPipeServerStream.GetImpersonationUserName()
  fullName: NamedPipeServerStream.GetImpersonationUserName()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets the user name of the client on the other end of the pipe.
  remarks: The <xref:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName%2A> method returns `null` if the client has not yet written to the pipe or if the connected client did not connect with a <xref:System.Security.Principal.TokenImpersonationLevel> of <xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.
  example:
  - "The following example demonstrates a method to create a pipe server that can respond to multiple simultaneous client requests, and a method for client impersonation. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process, which then creates multiple threads that wait for <xref:System.IO.Pipes.NamedPipeClientStream> objects to connect. After a client is connected, it supplies a file name to the server and the contents of that file are read and sent back to the client. Because the <xref:System.IO.Pipes.NamedPipeServerStream> impersonates the client when opening the file, the client can request only files that it has sufficient permissions to open.  \n  \n [!code-cpp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cpp/program.cpp#01)]\n [!code-csharp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/vb/program.vb#01)]"
  syntax:
    content: public string GetImpersonationUserName ();
    parameters: []
    return:
      type: System.String
      description: The user name of the client on the other end of the pipe.
  overload: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No pipe connections have been made yet.  \n  \n -or-  \n  \n The connected pipe has already disconnected.  \n  \n -or-  \n  \n The pipe handle has not been set."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The pipe connection has been broken.  \n  \n -or-  \n  \n The user name of the client is longer than 19 characters."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
  commentId: F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
  id: MaxAllowedServerInstances
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: MaxAllowedServerInstances
  nameWithType: NamedPipeServerStream.MaxAllowedServerInstances
  fullName: NamedPipeServerStream.MaxAllowedServerInstances
  type: Field
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Represents the maximum number of server instances that the system resources allow.
  remarks: Use the <xref:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances> when creating a <xref:System.IO.Pipes.NamedPipeServerStream> object to set the maximum number of server instances that the system resources allow.
  syntax:
    content: public const int MaxAllowedServerInstances = -1;
    return:
      type: System.Int32
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  id: RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: RunAsClient(PipeStreamImpersonationWorker)
  nameWithType: NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker)
  fullName: NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker)
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Calls a delegate while impersonating the client.
  remarks: The connecting client's permissions are applied to the remote server. For example, if the connecting client tries to request the contents of a file on the server, the client can request only files that it has sufficient permissions to open.
  example:
  - "The following example demonstrates a method to create a pipe server that can respond to multiple simultaneous client requests, and a method for client impersonation. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process, which then creates multiple threads that wait for <xref:System.IO.Pipes.NamedPipeClientStream> objects to connect. After a client is connected, it supplies a file name to the server and the contents of that file are read and sent back to the client. Because the <xref:System.IO.Pipes.NamedPipeServerStream> impersonates the client when opening the file, the client can request only files that it has sufficient permissions to open.  \n  \n [!code-cpp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cpp/program.cpp#01)]\n [!code-csharp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/vb/program.vb#01)]"
  syntax:
    content: public void RunAsClient (System.IO.Pipes.PipeStreamImpersonationWorker impersonationWorker);
    parameters:
    - id: impersonationWorker
      type: System.IO.Pipes.PipeStreamImpersonationWorker
      description: The delegate that specifies a method to call.
  overload: System.IO.Pipes.NamedPipeServerStream.RunAsClient*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No pipe connections have been made yet.  \n  \n -or-  \n  \n The connected pipe has already disconnected.  \n  \n -or-  \n  \n The pipe handle has not been set."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The pipe connection has been broken.  \n  \n -or-  \n  \n An I/O error occurred."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnection
  commentId: M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection
  id: WaitForConnection
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: WaitForConnection()
  nameWithType: NamedPipeServerStream.WaitForConnection()
  fullName: NamedPipeServerStream.WaitForConnection()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Waits for a client to connect to this <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> object.
  remarks: Calling this method causes the <xref:System.IO.Pipes.NamedPipeServerStream> object to block until a client connects.
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. This object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>, which then blocks until a <xref:System.IO.Pipes.NamedPipeClientStream> object establishes a connection to the <xref:System.IO.Pipes.NamedPipeServerStream> object. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]"
  syntax:
    content: public void WaitForConnection ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeServerStream.WaitForConnection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A pipe connection has already been established.  \n  \n -or-  \n  \n The pipe handle has not been set."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe connection has been broken.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync
  commentId: M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync
  id: WaitForConnectionAsync
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: WaitForConnectionAsync()
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync()
  fullName: NamedPipeServerStream.WaitForConnectionAsync()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Asynchronously waits for a client to connect to this <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> object.
  remarks: Because it is asynchronous, this method returns immediately, but the connection process is completed when the client calls <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> or <xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>.
  syntax:
    content: public System.Threading.Tasks.Task WaitForConnectionAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous wait operation.
  overload: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)
  commentId: M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)
  id: WaitForConnectionAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: WaitForConnectionAsync(CancellationToken)
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync(CancellationToken)
  fullName: NamedPipeServerStream.WaitForConnectionAsync(CancellationToken)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Asynchronously waits for a client to connect to this <xref href="System.IO.Pipes.NamedPipeServerStream"></xref> object and monitors cancellation requests.
  remarks: "Because it is asynchronous, this method returns immediately, but the connection process is completed when the client calls <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> or <xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>.  \n  \n Cancellation requests using the cancellation token will only work if   the <xref:System.IO.Pipes.NamedPipeServerStream> object was created with a pipe option value of <xref:System.IO.Pipes.PipeOptions?displayProperty=fullName> or if the cancellation occurs before the <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync%2A> method is called."
  syntax:
    content: public System.Threading.Tasks.Task WaitForConnectionAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous wait operation.
  overload: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.IO.Pipes.PipeStream
  parent: System.IO.Pipes
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.PlatformNotSupportedException
  parent: System
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeOptions
  parent: System.IO.Pipes
  isExternal: false
  name: PipeOptions
  nameWithType: PipeOptions
  fullName: System.IO.Pipes.PipeOptions
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: false
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity)
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32)
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions)
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability, PipeAccessRights)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability, PipeAccessRights)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode, PipeOptions, Int32, Int32, PipeSecurity, HandleInheritability, PipeAccessRights)
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  fullName: NamedPipeServerStream.NamedPipeServerStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String, PipeDirection, Int32)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32)
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String, PipeDirection)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection)
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode)
  fullName: NamedPipeServerStream.NamedPipeServerStream(String, PipeDirection, Int32, PipeTransmissionMode)
- uid: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: BeginWaitForConnection(AsyncCallback, Object)
  nameWithType: NamedPipeServerStream.BeginWaitForConnection(AsyncCallback, Object)
  fullName: NamedPipeServerStream.BeginWaitForConnection(AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.NamedPipeServerStream.Disconnect
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: Disconnect()
  nameWithType: NamedPipeServerStream.Disconnect()
  fullName: NamedPipeServerStream.Disconnect()
- uid: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: EndWaitForConnection(IAsyncResult)
  nameWithType: NamedPipeServerStream.EndWaitForConnection(IAsyncResult)
  fullName: NamedPipeServerStream.EndWaitForConnection(IAsyncResult)
- uid: System.IO.Pipes.NamedPipeServerStream.Finalize
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: Finalize()
  nameWithType: NamedPipeServerStream.Finalize()
  fullName: NamedPipeServerStream.Finalize()
- uid: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: GetImpersonationUserName()
  nameWithType: NamedPipeServerStream.GetImpersonationUserName()
  fullName: NamedPipeServerStream.GetImpersonationUserName()
- uid: System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: MaxAllowedServerInstances
  nameWithType: NamedPipeServerStream.MaxAllowedServerInstances
  fullName: NamedPipeServerStream.MaxAllowedServerInstances
- uid: System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: RunAsClient(PipeStreamImpersonationWorker)
  nameWithType: NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker)
  fullName: NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker)
- uid: System.IO.Pipes.PipeStreamImpersonationWorker
  parent: System.IO.Pipes
  isExternal: false
  name: PipeStreamImpersonationWorker
  nameWithType: PipeStreamImpersonationWorker
  fullName: System.IO.Pipes.PipeStreamImpersonationWorker
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnection
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnection()
  nameWithType: NamedPipeServerStream.WaitForConnection()
  fullName: NamedPipeServerStream.WaitForConnection()
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnectionAsync()
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync()
  fullName: NamedPipeServerStream.WaitForConnectionAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnectionAsync(CancellationToken)
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync(CancellationToken)
  fullName: NamedPipeServerStream.WaitForConnectionAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream
  nameWithType: NamedPipeServerStream.NamedPipeServerStream
  fullName: NamedPipeServerStream.NamedPipeServerStream
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: BeginWaitForConnection
  nameWithType: NamedPipeServerStream.BeginWaitForConnection
  fullName: NamedPipeServerStream.BeginWaitForConnection
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.IO.Pipes.NamedPipeServerStream.Disconnect*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: Disconnect
  nameWithType: NamedPipeServerStream.Disconnect
  fullName: NamedPipeServerStream.Disconnect
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: EndWaitForConnection
  nameWithType: NamedPipeServerStream.EndWaitForConnection
  fullName: NamedPipeServerStream.EndWaitForConnection
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.IO.Pipes.NamedPipeServerStream.Finalize*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: Finalize
  nameWithType: NamedPipeServerStream.Finalize
  fullName: NamedPipeServerStream.Finalize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: GetImpersonationUserName
  nameWithType: NamedPipeServerStream.GetImpersonationUserName
  fullName: NamedPipeServerStream.GetImpersonationUserName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.IO.Pipes.NamedPipeServerStream.RunAsClient*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: RunAsClient
  nameWithType: NamedPipeServerStream.RunAsClient
  fullName: NamedPipeServerStream.RunAsClient
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnection*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnection
  nameWithType: NamedPipeServerStream.WaitForConnection
  fullName: NamedPipeServerStream.WaitForConnection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnectionAsync
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync
  fullName: NamedPipeServerStream.WaitForConnectionAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeServerStream.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: PipeStream.CanSeek
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: false
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: Stream.CanTimeout
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: PipeStream.CanWrite
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: false
  name: Close()
  nameWithType: Stream.Close()
  fullName: Stream.Close()
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: Stream.CopyTo(Stream, Int32)
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: Stream.CopyTo(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: Stream.CopyToAsync(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: Stream.CopyToAsync(Stream, Int32)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: false
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: Stream.CreateWaitHandle()
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: false
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: Stream.Dispose()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: PipeStream.Flush()
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: Stream.FlushAsync()
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: Stream.FlushAsync(CancellationToken)
  fullName: Stream.FlushAsync(CancellationToken)
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: PipeStream.Length
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: false
  name: "Null"
  nameWithType: Stream.Null
  fullName: Stream.Null
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: false
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: Stream.ObjectInvariant()
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[], Int32, Int32)
  nameWithType: PipeStream.Read(Byte[], Int32, Int32)
  fullName: PipeStream.Read(Byte[], Int32, Int32)
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: Stream.ReadAsync(Byte[], Int32, Int32)
- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: PipeStream.ReadByte()
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: false
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: Stream.ReadTimeout
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64, SeekOrigin)
  nameWithType: PipeStream.Seek(Int64, SeekOrigin)
  fullName: PipeStream.Seek(Int64, SeekOrigin)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: PipeStream.SetLength(Int64)
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: Stream.Synchronized(Stream)
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[], Int32, Int32)
  nameWithType: PipeStream.Write(Byte[], Int32, Int32)
  fullName: PipeStream.Write(Byte[], Int32, Int32)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: Stream.WriteAsync(Byte[], Int32, Int32)
- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: PipeStream.WriteByte(Byte)
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: false
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: Stream.WriteTimeout
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle, Boolean, Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)
  fullName: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)
  parent: System.IO.Pipes.PipesAclExtensions
  isExternal: false
  name: GetAccessControl(PipeStream)
  nameWithType: PipesAclExtensions.GetAccessControl(PipeStream)
  fullName: PipesAclExtensions.GetAccessControl(PipeStream)
- uid: System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipesAclExtensions
  isExternal: false
  name: SetAccessControl(PipeStream, PipeSecurity)
  nameWithType: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)
  fullName: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)
