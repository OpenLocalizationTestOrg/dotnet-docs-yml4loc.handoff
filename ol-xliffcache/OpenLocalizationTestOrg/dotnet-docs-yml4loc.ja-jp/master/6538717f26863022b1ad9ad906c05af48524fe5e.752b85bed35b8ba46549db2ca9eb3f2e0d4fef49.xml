{"nodes":[{"content":"Represents an abstraction of an access control entry (ACE) that defines an access rule for a file or directory. This class cannot be inherited.","nodes":[{"pos":[0,143],"content":"Represents an abstraction of an access control entry (ACE) that defines an access rule for a file or directory. This class cannot be inherited.","nodes":[{"content":"Represents an abstraction of an access control entry (ACE) that defines an access rule for a file or directory. This class cannot be inherited.","pos":[0,143],"nodes":[{"content":"Represents an abstraction of an access control entry (ACE) that defines an access rule for a file or directory.","pos":[0,111]},{"content":"This class cannot be inherited.","pos":[112,143]}]}]}],"pos":[1486,1630],"yaml":true},{"content":"The <xref:System.Security.AccessControl.FileSystemAccessRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to allow or deny that right.  This class can also specify how access rules are propagated to child objects.  \n  \n Use the <xref:System.Security.AccessControl.FileSystemAccessRule> class to create a new access rule.  You can persist the rule using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.","nodes":[{"pos":[0,344],"content":"The <xref:System.Security.AccessControl.FileSystemAccessRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to allow or deny that right.  This class can also specify how access rules are propagated to child objects.","nodes":[{"content":"The <xref:System.Security.AccessControl.FileSystemAccessRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to allow or deny that right.  This class can also specify how access rules are propagated to child objects.","pos":[0,344],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to allow or deny that right.","pos":[0,265],"source":"The <xref:System.Security.AccessControl.FileSystemAccessRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to allow or deny that right."},{"content":"This class can also specify how access rules are propagated to child objects.","pos":[267,344]}]}]},{"pos":[351,602],"content":"Use the <xref:System.Security.AccessControl.FileSystemAccessRule> class to create a new access rule.  You can persist the rule using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.","nodes":[{"content":"Use the <xref:System.Security.AccessControl.FileSystemAccessRule> class to create a new access rule.  You can persist the rule using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.","pos":[0,251],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemAccessRule&gt;</ph> class to create a new access rule.","pos":[0,100],"source":"Use the <xref:System.Security.AccessControl.FileSystemAccessRule> class to create a new access rule."},{"content":"You can persist the rule using the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> class.","pos":[102,251],"source":"  You can persist the rule using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class."}]}]}],"pos":[1641,2248],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, and a value that specifies whether to allow or deny the operation.","nodes":[{"pos":[0,293],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, and a value that specifies whether to allow or deny the operation.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, and a value that specifies whether to allow or deny the operation."}],"pos":[5796,6090],"yaml":true},{"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","nodes":[{"pos":[0,343],"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","nodes":[{"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","pos":[0,343],"nodes":[{"content":"Use this constructor to create an access control rule that you can persist using the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> class.","pos":[0,199],"source":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class."},{"content":"Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","pos":[201,343]}]}]}],"pos":[6101,6445],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object that encapsulates a reference to a user account.","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account."}],"pos":[6781,6905],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule.","nodes":[{"pos":[0,155],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemRights\"&gt;&lt;/xref&gt;</ph> values that specifies the type of operation associated with the access rule.","source":"One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule."}],"pos":[7010,7166],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation.","nodes":[{"pos":[0,141],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> values that specifies whether to allow or deny the operation.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation."}],"pos":[7260,7402],"yaml":true},{"content":"The <code>identity</code> parameter is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.","nodes":[{"pos":[0,118],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not an <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object.","source":"The <code>identity</code> parameter is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> object."}],"pos":[7580,7699],"yaml":true},{"content":"The <code>identity</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>identity</code> parameter is `null`."}],"pos":[7801,7848],"yaml":true},{"content":"An incorrect enumeration was passed to the <code>type</code> parameter.","nodes":[{"pos":[0,71],"content":"An incorrect enumeration was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An incorrect enumeration was passed to the <code>type</code> parameter."}],"pos":[7962,8034],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, and a value that describes whether to allow or deny the operation.","nodes":[{"pos":[0,290],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> class using the name of a user account, a value that specifies the type of operation associated with the access rule, and a value that describes whether to allow or deny the operation.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, and a value that describes whether to allow or deny the operation."}],"pos":[9779,10070],"yaml":true},{"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`.","nodes":[{"pos":[0,343],"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","nodes":[{"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","pos":[0,343],"nodes":[{"content":"Use this constructor to create an access control rule that you can persist using the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> class.","pos":[0,199],"source":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class."},{"content":"Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","pos":[201,343]}]}]},{"pos":[350,632],"content":"The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`.","nodes":[{"content":"The <ph id=\"ph1\">`identity`</ph> parameter must identify a valid account on the current computer or domain.","pos":[0,89],"source":"The `identity` parameter must identify a valid account on the current computer or domain."},{"content":"The string takes the following form, where <ph id=\"ph1\">`DOMAIN`</ph> is the name of a valid domain or computer name and <ph id=\"ph2\">`account`</ph> is the name of a valid user account on a domain or computer: <ph id=\"ph3\">`DOMAIN\\account`</ph>.","pos":[91,282],"source":"  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."}]}],"pos":[10081,10719],"yaml":true,"extradata":"MT"},{"content":"The name of a user account.","nodes":[{"pos":[0,27],"content":"The name of a user account.","nodes":[{"content":"The name of a user account.","pos":[0,27]}]}],"pos":[11720,11748],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule.","nodes":[{"pos":[0,155],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemRights\"&gt;&lt;/xref&gt;</ph> values that specifies the type of operation associated with the access rule.","source":"One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule."}],"pos":[11853,12009],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation.","nodes":[{"pos":[0,141],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> values that specifies whether to allow or deny the operation.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation."}],"pos":[12103,12245],"yaml":true},{"content":"The <code>identity</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>identity</code> parameter is `null`."}],"pos":[12431,12478],"yaml":true},{"content":"An incorrect enumeration was passed to the <code>type</code> parameter.","nodes":[{"pos":[0,71],"content":"An incorrect enumeration was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An incorrect enumeration was passed to the <code>type</code> parameter."}],"pos":[12592,12664],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.","nodes":[{"pos":[0,394],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation."}],"pos":[14922,15317],"yaml":true},{"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","nodes":[{"pos":[0,343],"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","nodes":[{"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","pos":[0,343],"nodes":[{"content":"Use this constructor to create an access control rule that you can persist using the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> class.","pos":[0,199],"source":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class."},{"content":"Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","pos":[201,343]}]}]}],"pos":[15328,15672],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object that encapsulates a reference to a user account.","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account."}],"pos":[16138,16262],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule.","nodes":[{"pos":[0,155],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemRights\"&gt;&lt;/xref&gt;</ph> values that specifies the type of operation associated with the access rule.","source":"One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule."}],"pos":[16367,16523],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how access masks are propagated to child objects.","nodes":[{"pos":[0,150],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> values that specifies how access masks are propagated to child objects.","source":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how access masks are propagated to child objects."}],"pos":[16628,16779],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.","nodes":[{"pos":[0,167],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> values that specifies how Access Control Entries (ACEs) are propagated to child objects.","source":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects."}],"pos":[16884,17052],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation.","nodes":[{"pos":[0,141],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> values that specifies whether to allow or deny the operation.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation."}],"pos":[17146,17288],"yaml":true},{"content":"The <code>identity</code> parameter is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.","nodes":[{"pos":[0,118],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not an <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object.","source":"The <code>identity</code> parameter is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> object."}],"pos":[17466,17585],"yaml":true},{"content":"The <code>identity</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>identity</code> parameter is `null`."}],"pos":[17687,17734],"yaml":true},{"content":"An incorrect enumeration was passed to the <code>type</code> parameter.  \n  \n -or-  \n  \n An incorrect enumeration was passed to the <code>inheritanceFlags</code> parameter.  \n  \n -or-  \n  \n An incorrect enumeration was passed to the <code>propagationFlags</code> parameter.","nodes":[{"pos":[0,71],"content":"An incorrect enumeration was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An incorrect enumeration was passed to the <code>type</code> parameter."},{"pos":[78,82],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[89,172],"content":"An incorrect enumeration was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An incorrect enumeration was passed to the <code>inheritanceFlags</code> parameter."},{"pos":[179,183],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[190,273],"content":"An incorrect enumeration was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">propagationFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An incorrect enumeration was passed to the <code>propagationFlags</code> parameter."}],"pos":[17848,18132],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.","nodes":[{"pos":[0,391],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> class using the name of a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation."}],"pos":[20267,20659],"yaml":true},{"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`.","nodes":[{"pos":[0,343],"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","nodes":[{"content":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","pos":[0,343],"nodes":[{"content":"Use this constructor to create an access control rule that you can persist using the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> class.","pos":[0,199],"source":"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class."},{"content":"Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.","pos":[201,343]}]}]},{"pos":[350,632],"content":"The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`.","nodes":[{"content":"The <ph id=\"ph1\">`identity`</ph> parameter must identify a valid account on the current computer or domain.","pos":[0,89],"source":"The `identity` parameter must identify a valid account on the current computer or domain."},{"content":"The string takes the following form, where <ph id=\"ph1\">`DOMAIN`</ph> is the name of a valid domain or computer name and <ph id=\"ph2\">`account`</ph> is the name of a valid user account on a domain or computer: <ph id=\"ph3\">`DOMAIN\\account`</ph>.","pos":[91,282],"source":"  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."}]}],"pos":[20670,21308],"yaml":true,"extradata":"MT"},{"content":"The name of a user account.","nodes":[{"pos":[0,27],"content":"The name of a user account.","nodes":[{"content":"The name of a user account.","pos":[0,27]}]}],"pos":[21707,21735],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule.","nodes":[{"pos":[0,155],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemRights\"&gt;&lt;/xref&gt;</ph> values that specifies the type of operation associated with the access rule.","source":"One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule."}],"pos":[21840,21996],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how access masks are propagated to child objects.","nodes":[{"pos":[0,150],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> values that specifies how access masks are propagated to child objects.","source":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how access masks are propagated to child objects."}],"pos":[22101,22252],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.","nodes":[{"pos":[0,167],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> values that specifies how Access Control Entries (ACEs) are propagated to child objects.","source":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects."}],"pos":[22357,22525],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation.","nodes":[{"pos":[0,141],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlType\"&gt;&lt;/xref&gt;</ph> values that specifies whether to allow or deny the operation.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation."}],"pos":[22619,22761],"yaml":true},{"content":"The <code>identity</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>identity</code> parameter is `null`."}],"pos":[22947,22994],"yaml":true},{"content":"An incorrect enumeration was passed to the <code>type</code> parameter.  \n  \n -or-  \n  \n An incorrect enumeration was passed to the <code>inheritanceFlags</code> parameter.  \n  \n -or-  \n  \n An incorrect enumeration was passed to the <code>propagationFlags</code> parameter.","nodes":[{"pos":[0,71],"content":"An incorrect enumeration was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An incorrect enumeration was passed to the <code>type</code> parameter."},{"pos":[78,82],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[89,172],"content":"An incorrect enumeration was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An incorrect enumeration was passed to the <code>inheritanceFlags</code> parameter."},{"pos":[179,183],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[190,273],"content":"An incorrect enumeration was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">propagationFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An incorrect enumeration was passed to the <code>propagationFlags</code> parameter."}],"pos":[23108,23392],"yaml":true},{"content":"Gets the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> flags associated with the current <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object.","nodes":[{"pos":[0,190],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemRights\"&gt;&lt;/xref&gt;</ph> flags associated with the current <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> flags associated with the current <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object."}],"pos":[24688,24879],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> flags associated with the current <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object.","nodes":[{"pos":[0,185],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSystemRights\"&gt;&lt;/xref&gt;</ph> flags associated with the current <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.FileSystemAccessRule\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> flags associated with the current <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object."}],"pos":[25072,25258],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.FileSystemAccessRule\n  commentId: T:System.Security.AccessControl.FileSystemAccessRule\n  id: FileSystemAccessRule\n  children:\n  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemAccessRule.FileSystemRights\n  langs:\n  - csharp\n  name: FileSystemAccessRule\n  nameWithType: FileSystemAccessRule\n  fullName: System.Security.AccessControl.FileSystemAccessRule\n  type: Class\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents an abstraction of an access control entry (ACE) that defines an access rule for a file or directory. This class cannot be inherited.\n  remarks: \"The <xref:System.Security.AccessControl.FileSystemAccessRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to allow or deny that right.  This class can also specify how access rules are propagated to child objects.  \\n  \\n Use the <xref:System.Security.AccessControl.FileSystemAccessRule> class to create a new access rule.  You can persist the rule using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: 'public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  name: FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)\n  fullName: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, and a value that specifies whether to allow or deny the operation.\n  remarks: Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.\n  syntax:\n    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account.\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation.\n  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>identity</code> parameter is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>identity</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An incorrect enumeration was passed to the <code>type</code> parameter.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  name: FileSystemAccessRule(String, FileSystemRights, AccessControlType)\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, AccessControlType)\n  fullName: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, AccessControlType)\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, and a value that describes whether to allow or deny the operation.\n  remarks: \"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \\n  \\n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\\\account`.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: The name of a user account.\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation.\n  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>identity</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: An incorrect enumeration was passed to the <code>type</code> parameter.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  name: FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.\n  remarks: Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.\n  syntax:\n    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account.\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how access masks are propagated to child objects.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation.\n  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>identity</code> parameter is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>identity</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"An incorrect enumeration was passed to the <code>type</code> parameter.  \\n  \\n -or-  \\n  \\n An incorrect enumeration was passed to the <code>inheritanceFlags</code> parameter.  \\n  \\n -or-  \\n  \\n An incorrect enumeration was passed to the <code>propagationFlags</code> parameter.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  name: FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.\n  remarks: \"Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \\n  \\n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\\\account`.\"\n  syntax:\n    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: The name of a user account.\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: One of the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> values that specifies the type of operation associated with the access rule.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies how access masks are propagated to child objects.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlType\"></xref> values that specifies whether to allow or deny the operation.\n  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>identity</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"An incorrect enumeration was passed to the <code>type</code> parameter.  \\n  \\n -or-  \\n  \\n An incorrect enumeration was passed to the <code>inheritanceFlags</code> parameter.  \\n  \\n -or-  \\n  \\n An incorrect enumeration was passed to the <code>propagationFlags</code> parameter.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights\n  commentId: P:System.Security.AccessControl.FileSystemAccessRule.FileSystemRights\n  id: FileSystemRights\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  name: FileSystemRights\n  nameWithType: FileSystemAccessRule.FileSystemRights\n  fullName: FileSystemAccessRule.FileSystemRights\n  type: Property\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> flags associated with the current <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object.\n  syntax:\n    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }\n    return:\n      type: System.Security.AccessControl.FileSystemRights\n      description: The <xref href=\"System.Security.AccessControl.FileSystemRights\"></xref> flags associated with the current <xref href=\"System.Security.AccessControl.FileSystemAccessRule\"></xref> object.\n  overload: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemAccessRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  isExternal: false\n  name: FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)\n  fullName: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Security.AccessControl.FileSystemRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: FileSystemRights\n  nameWithType: FileSystemRights\n  fullName: System.Security.AccessControl.FileSystemRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  isExternal: false\n  name: FileSystemAccessRule(String, FileSystemRights, AccessControlType)\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, AccessControlType)\n  fullName: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, AccessControlType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  isExternal: false\n  name: FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  isExternal: false\n  name: FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  isExternal: false\n  name: FileSystemRights\n  nameWithType: FileSystemAccessRule.FileSystemRights\n  fullName: FileSystemAccessRule.FileSystemRights\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor*\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  isExternal: false\n  name: FileSystemAccessRule\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule\n  fullName: FileSystemAccessRule.FileSystemAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemAccessRule.xml\n- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  isExternal: false\n  name: FileSystemRights\n  nameWithType: FileSystemAccessRule.FileSystemRights\n  fullName: FileSystemAccessRule.FileSystemRights\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/FileSystemAccessRule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n  fullName: AuthorizationRule.AccessMask\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n  fullName: AuthorizationRule.IdentityReference\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n  fullName: AuthorizationRule.InheritanceFlags\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n  fullName: AuthorizationRule.IsInherited\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n  fullName: AuthorizationRule.PropagationFlags\n- uid: System.Security.AccessControl.AccessRule.AccessControlType\n  parent: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessRule.AccessControlType\n  fullName: AccessRule.AccessControlType\n"}