{"nodes":[{"content":"Allows security actions for <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","nodes":[{"pos":[0,183],"content":"Allows security actions for <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","nodes":[{"content":"Allows security actions for <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermission\"&gt;&lt;/xref&gt;</ph> to be applied to code using declarative security.","pos":[0,151],"source":"Allows security actions for <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> to be applied to code using declarative security."},{"content":"This class cannot be inherited.","pos":[152,183]}]}],"pos":[1111,1295],"yaml":true},{"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.  \n  \n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. <xref:System.Security.Permissions.DataProtectionPermissionAttribute> is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.DataProtectionPermission> class.","nodes":[{"pos":[0,129],"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.","nodes":[{"content":"The scope of the declaration that is allowed depends on the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> value that is used.","pos":[0,129],"source":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used."}]},{"pos":[136,494],"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. <xref:System.Security.Permissions.DataProtectionPermissionAttribute> is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.DataProtectionPermission> class.","nodes":[{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. <xref:System.Security.Permissions.DataProtectionPermissionAttribute> is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.DataProtectionPermission> class.","pos":[0,358],"nodes":[{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[0,150]},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Permissions.DataProtectionPermissionAttribute&gt;</ph> is used only for declarative security.","pos":[151,258],"source":" <xref:System.Security.Permissions.DataProtectionPermissionAttribute> is used only for declarative security."},{"content":"For imperative security, use the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.DataProtectionPermission&gt;</ph> class.","pos":[259,358],"source":" For imperative security, use the <xref:System.Security.Permissions.DataProtectionPermission> class."}]}]}],"pos":[1306,1805],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.DataProtectionPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.","nodes":[{"pos":[0,206],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermissionAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.DataProtectionPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."}],"pos":[7536,7743],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.","nodes":[{"pos":[0,82],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."}],"pos":[7967,8050],"yaml":true},{"content":"Creates and returns a new <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref>.","nodes":[{"pos":[0,100],"content":"Creates and returns a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermission\"&gt;&lt;/xref&gt;</ph>.","source":"Creates and returns a new <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref>."}],"pos":[9302,9403],"yaml":true},{"content":"This method should only be called by the security system, never by application code.  \n  \n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns.","nodes":[{"pos":[0,84],"content":"This method should only be called by the security system, never by application code.","nodes":[{"content":"This method should only be called by the security system, never by application code.","pos":[0,84]}]},{"pos":[91,277],"content":"At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns.","nodes":[{"content":"At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns.","pos":[0,186],"nodes":[{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[0,91]},{"content":"Declarative security data in metadata is created from the permission that this method returns.","pos":[92,186]}]}]}],"pos":[9414,9696],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> that corresponds to the attribute.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermission\"&gt;&lt;/xref&gt;</ph> that corresponds to the attribute.","source":"A <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> that corresponds to the attribute."}],"pos":[9874,9985],"yaml":true},{"content":"Gets or sets the data protection permissions.","nodes":[{"pos":[0,45],"content":"Gets or sets the data protection permissions.","nodes":[{"content":"Gets or sets the data protection permissions.","pos":[0,45]}]}],"pos":[11178,11224],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags.NoFlags\"></xref>.","nodes":[{"pos":[0,218],"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags.NoFlags\"></xref>.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,115],"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.DataProtectionPermissionFlags.NoFlags\"&gt;&lt;/xref&gt;</ph>.","pos":[116,218],"source":" The default is <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags.NoFlags\"></xref>."}]}],"pos":[11433,11652],"yaml":true},{"content":"Gets or sets a value indicating whether data can be encrypted using the <xref href=\"System.Security.Cryptography.ProtectedData\"></xref> class.","nodes":[{"pos":[0,142],"content":"Gets or sets a value indicating whether data can be encrypted using the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ProtectedData\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets or sets a value indicating whether data can be encrypted using the <xref href=\"System.Security.Cryptography.ProtectedData\"></xref> class."}],"pos":[12870,13013],"yaml":true},{"content":"If the value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName> method is called.","nodes":[{"pos":[0,187],"content":"If the value is <ph id=\"ph1\">`false`</ph>, a <ph id=\"ph2\">&lt;xref:System.Security.SecurityException&gt;</ph> occurs when the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName&gt;</ph> method is called.","source":"If the value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName> method is called."}],"pos":[13024,13212],"yaml":true,"extradata":"MT"},{"content":"`true` if data can be encrypted; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if data can be encrypted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if data can be encrypted; otherwise, `false`."}],"pos":[13331,13386],"yaml":true},{"content":"Gets or sets a value indicating whether memory can be encrypted using the <xref href=\"System.Security.Cryptography.ProtectedMemory\"></xref> class.","nodes":[{"pos":[0,146],"content":"Gets or sets a value indicating whether memory can be encrypted using the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ProtectedMemory\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets or sets a value indicating whether memory can be encrypted using the <xref href=\"System.Security.Cryptography.ProtectedMemory\"></xref> class."}],"pos":[14622,14769],"yaml":true},{"content":"If the value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A?displayProperty=fullName> method is called.","nodes":[{"pos":[0,189],"content":"If the value is <ph id=\"ph1\">`false`</ph>, a <ph id=\"ph2\">&lt;xref:System.Security.SecurityException&gt;</ph> occurs when the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.ProtectedMemory.Protect%2A?displayProperty=fullName&gt;</ph> method is called.","source":"If the value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A?displayProperty=fullName> method is called."}],"pos":[14780,14970],"yaml":true,"extradata":"MT"},{"content":"`true` if memory can be encrypted; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if memory can be encrypted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if memory can be encrypted; otherwise, `false`."}],"pos":[15091,15148],"yaml":true},{"content":"Gets or sets a value indicating whether data can be unencrypted using the <xref href=\"System.Security.Cryptography.ProtectedData\"></xref> class.","nodes":[{"pos":[0,144],"content":"Gets or sets a value indicating whether data can be unencrypted using the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ProtectedData\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets or sets a value indicating whether data can be unencrypted using the <xref href=\"System.Security.Cryptography.ProtectedData\"></xref> class."}],"pos":[16386,16531],"yaml":true},{"content":"If this value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A?displayProperty=fullName> method is called.","nodes":[{"pos":[0,190],"content":"If this value is <ph id=\"ph1\">`false`</ph>, a <ph id=\"ph2\">&lt;xref:System.Security.SecurityException&gt;</ph> occurs when the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.ProtectedData.Unprotect%2A?displayProperty=fullName&gt;</ph> method is called.","source":"If this value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A?displayProperty=fullName> method is called."}],"pos":[16542,16733],"yaml":true,"extradata":"MT"},{"content":"`true` if data can be unencrypted; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if data can be unencrypted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if data can be unencrypted; otherwise, `false`."}],"pos":[16854,16911],"yaml":true},{"content":"Gets or sets a value indicating whether memory can be unencrypted using the <xref href=\"System.Security.Cryptography.ProtectedMemory\"></xref> class.","nodes":[{"pos":[0,148],"content":"Gets or sets a value indicating whether memory can be unencrypted using the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ProtectedMemory\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets or sets a value indicating whether memory can be unencrypted using the <xref href=\"System.Security.Cryptography.ProtectedMemory\"></xref> class."}],"pos":[18161,18310],"yaml":true},{"content":"If this value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A?displayProperty=fullName> method is called.","nodes":[{"pos":[0,192],"content":"If this value is <ph id=\"ph1\">`false`</ph>, a <ph id=\"ph2\">&lt;xref:System.Security.SecurityException&gt;</ph> occurs when the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A?displayProperty=fullName&gt;</ph> method is called.","source":"If this value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A?displayProperty=fullName> method is called."}],"pos":[18321,18514],"yaml":true,"extradata":"MT"},{"content":"`true` if memory can be unencrypted; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if memory can be unencrypted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if memory can be unencrypted; otherwise, `false`."}],"pos":[18637,18696],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute\n  commentId: T:System.Security.Permissions.DataProtectionPermissionAttribute\n  id: DataProtectionPermissionAttribute\n  children:\n  - System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission\n  - System.Security.Permissions.DataProtectionPermissionAttribute.Flags\n  - System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData\n  - System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory\n  - System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData\n  - System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory\n  langs:\n  - csharp\n  name: DataProtectionPermissionAttribute\n  nameWithType: DataProtectionPermissionAttribute\n  fullName: System.Security.Permissions.DataProtectionPermissionAttribute\n  type: Class\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Allows security actions for <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.\n  remarks: \"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. <xref:System.Security.Permissions.DataProtectionPermissionAttribute> is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.DataProtectionPermission> class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      public sealed class DataProtectionPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  commentId: M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  langs:\n  - csharp\n  name: DataProtectionPermissionAttribute(SecurityAction)\n  nameWithType: DataProtectionPermissionAttribute.DataProtectionPermissionAttribute(SecurityAction)\n  fullName: DataProtectionPermissionAttribute.DataProtectionPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.DataProtectionPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  syntax:\n    content: public DataProtectionPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.DataProtectionPermissionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission\n  commentId: M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: DataProtectionPermissionAttribute.CreatePermission()\n  fullName: DataProtectionPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref>.\n  remarks: \"This method should only be called by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Security.Permissions.DataProtectionPermission\"></xref> that corresponds to the attribute.\n  overload: System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.Flags\n  commentId: P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags\n  id: Flags\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: DataProtectionPermissionAttribute.Flags\n  fullName: DataProtectionPermissionAttribute.Flags\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Gets or sets the data protection permissions.\n  syntax:\n    content: public System.Security.Permissions.DataProtectionPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.DataProtectionPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.DataProtectionPermissionFlags.NoFlags\"></xref>.\n  overload: System.Security.Permissions.DataProtectionPermissionAttribute.Flags*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData\n  commentId: P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData\n  id: ProtectData\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  langs:\n  - csharp\n  name: ProtectData\n  nameWithType: DataProtectionPermissionAttribute.ProtectData\n  fullName: DataProtectionPermissionAttribute.ProtectData\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether data can be encrypted using the <xref href=\"System.Security.Cryptography.ProtectedData\"></xref> class.\n  remarks: If the value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName> method is called.\n  syntax:\n    content: public bool ProtectData { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if data can be encrypted; otherwise, `false`.'\n  overload: System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory\n  commentId: P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory\n  id: ProtectMemory\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  langs:\n  - csharp\n  name: ProtectMemory\n  nameWithType: DataProtectionPermissionAttribute.ProtectMemory\n  fullName: DataProtectionPermissionAttribute.ProtectMemory\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether memory can be encrypted using the <xref href=\"System.Security.Cryptography.ProtectedMemory\"></xref> class.\n  remarks: If the value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A?displayProperty=fullName> method is called.\n  syntax:\n    content: public bool ProtectMemory { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if memory can be encrypted; otherwise, `false`.'\n  overload: System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData\n  commentId: P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData\n  id: UnprotectData\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  langs:\n  - csharp\n  name: UnprotectData\n  nameWithType: DataProtectionPermissionAttribute.UnprotectData\n  fullName: DataProtectionPermissionAttribute.UnprotectData\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether data can be unencrypted using the <xref href=\"System.Security.Cryptography.ProtectedData\"></xref> class.\n  remarks: If this value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A?displayProperty=fullName> method is called.\n  syntax:\n    content: public bool UnprotectData { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if data can be unencrypted; otherwise, `false`.'\n  overload: System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory\n  commentId: P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory\n  id: UnprotectMemory\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  langs:\n  - csharp\n  name: UnprotectMemory\n  nameWithType: DataProtectionPermissionAttribute.UnprotectMemory\n  fullName: DataProtectionPermissionAttribute.UnprotectMemory\n  type: Property\n  assemblies:\n  - System.Security\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether memory can be unencrypted using the <xref href=\"System.Security.Cryptography.ProtectedMemory\"></xref> class.\n  remarks: If this value is `false`, a <xref:System.Security.SecurityException> occurs when the <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A?displayProperty=fullName> method is called.\n  syntax:\n    content: public bool UnprotectMemory { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if memory can be unencrypted; otherwise, `false`.'\n  overload: System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  parent: System.Security.Permissions\n  isExternal: false\n  name: CodeAccessSecurityAttribute\n  nameWithType: CodeAccessSecurityAttribute\n  fullName: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: DataProtectionPermissionAttribute(SecurityAction)\n  nameWithType: DataProtectionPermissionAttribute.DataProtectionPermissionAttribute(SecurityAction)\n  fullName: DataProtectionPermissionAttribute.DataProtectionPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: DataProtectionPermissionAttribute.CreatePermission()\n  fullName: DataProtectionPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.Flags\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: DataProtectionPermissionAttribute.Flags\n  fullName: DataProtectionPermissionAttribute.Flags\n- uid: System.Security.Permissions.DataProtectionPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: DataProtectionPermissionFlags\n  nameWithType: DataProtectionPermissionFlags\n  fullName: System.Security.Permissions.DataProtectionPermissionFlags\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: ProtectData\n  nameWithType: DataProtectionPermissionAttribute.ProtectData\n  fullName: DataProtectionPermissionAttribute.ProtectData\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: ProtectMemory\n  nameWithType: DataProtectionPermissionAttribute.ProtectMemory\n  fullName: DataProtectionPermissionAttribute.ProtectMemory\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: UnprotectData\n  nameWithType: DataProtectionPermissionAttribute.UnprotectData\n  fullName: DataProtectionPermissionAttribute.UnprotectData\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: UnprotectMemory\n  nameWithType: DataProtectionPermissionAttribute.UnprotectMemory\n  fullName: DataProtectionPermissionAttribute.UnprotectMemory\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.#ctor*\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: DataProtectionPermissionAttribute\n  nameWithType: DataProtectionPermissionAttribute.DataProtectionPermissionAttribute\n  fullName: DataProtectionPermissionAttribute.DataProtectionPermissionAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission*\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: DataProtectionPermissionAttribute.CreatePermission\n  fullName: DataProtectionPermissionAttribute.CreatePermission\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.Flags*\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: DataProtectionPermissionAttribute.Flags\n  fullName: DataProtectionPermissionAttribute.Flags\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData*\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: ProtectData\n  nameWithType: DataProtectionPermissionAttribute.ProtectData\n  fullName: DataProtectionPermissionAttribute.ProtectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory*\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: ProtectMemory\n  nameWithType: DataProtectionPermissionAttribute.ProtectMemory\n  fullName: DataProtectionPermissionAttribute.ProtectMemory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData*\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: UnprotectData\n  nameWithType: DataProtectionPermissionAttribute.UnprotectData\n  fullName: DataProtectionPermissionAttribute.UnprotectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n- uid: System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory*\n  parent: System.Security.Permissions.DataProtectionPermissionAttribute\n  isExternal: false\n  name: UnprotectMemory\n  nameWithType: DataProtectionPermissionAttribute.UnprotectMemory\n  fullName: DataProtectionPermissionAttribute.UnprotectMemory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/DataProtectionPermissionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Security.Permissions.SecurityAttribute.Action\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Action\n  nameWithType: SecurityAttribute.Action\n  fullName: SecurityAttribute.Action\n- uid: System.Security.Permissions.SecurityAttribute.Unrestricted\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Unrestricted\n  nameWithType: SecurityAttribute.Unrestricted\n  fullName: SecurityAttribute.Unrestricted\n"}