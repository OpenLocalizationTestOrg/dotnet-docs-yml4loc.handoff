{"nodes":[{"content":"Specifies how to read XML data and a relational schema into a <xref href=\"System.Data.DataSet\"></xref>.","nodes":[{"pos":[0,103],"content":"Specifies how to read XML data and a relational schema into a <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies how to read XML data and a relational schema into a <xref href=\"System.Data.DataSet\"></xref>."}],"pos":[630,734],"yaml":true},{"content":"Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method.  \n  \n> [!NOTE]\n>  `Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.","nodes":[{"pos":[0,126],"content":"Use the members of this enumeration when setting the <ph id=\"ph1\">`ReadMode`</ph> parameter of the <ph id=\"ph2\">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method.","source":"Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method."},{"pos":[134,237],"content":"[!NOTE]\n `Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\"> `Auto`</ph> mode may be slower than setting <ph id=\"ph2\">&lt;xref:System.Data.XmlReadMode&gt;</ph> to an explicit option.","pos":[8,101],"source":" `Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option."}]}],"pos":[745,988],"yaml":true,"extradata":"MT"},{"content":"Default.","nodes":[{"pos":[0,8],"content":"Default.","nodes":[{"content":"Default.","pos":[0,8]}]}],"pos":[2165,2174],"yaml":true},{"content":"Performs the most appropriate of these actions:  \n  \n If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`.  \n  \n -or-  \n  \n If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`.  \n  \n -or-  \n  \n If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`.","nodes":[{"pos":[0,47],"content":"Performs the most appropriate of these actions:","nodes":[{"content":"Performs the most appropriate of these actions:","pos":[0,47]}]},{"pos":[54,114],"content":"If the data is a DiffGram, sets <ph id=\"ph1\">`XmlReadMode`</ph> to <ph id=\"ph2\">`DiffGram`</ph>.","source":"If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`."},{"pos":[121,125],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[132,248],"content":"If the dataset already has a schema, or the document contains an in-line schema, sets <ph id=\"ph1\">`XmlReadMode`</ph> to <ph id=\"ph2\">`ReadSchema`</ph>.","source":"If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`."},{"pos":[255,259],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[266,401],"content":"If the dataset does not already have a schema and the document does not contain an in-line schema, sets <ph id=\"ph1\">`XmlReadMode`</ph> to <ph id=\"ph2\">`InferSchema`</ph>.","source":"If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`."}],"pos":[2185,2599],"yaml":true,"extradata":"MT"},{"content":"Reads a DiffGram, applying changes from the DiffGram to the <xref href=\"System.Data.DataSet\"></xref>. The semantics are identical to those of a <xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"></xref> operation. As with the <xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"></xref> operation, <xref href=\"System.Data.DataRow.RowState\"></xref> values are preserved. Input to <xref href=\"System.Data.DataSet.ReadXml(System.Xml.XmlReader)\"></xref> with DiffGrams should only be obtained using the output from <xref href=\"System.Data.DataSet.WriteXml(System.IO.Stream)\"></xref> as a DiffGram.","nodes":[{"pos":[0,609],"content":"Reads a DiffGram, applying changes from the DiffGram to the <xref href=\"System.Data.DataSet\"></xref>. The semantics are identical to those of a <xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"></xref> operation. As with the <xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"></xref> operation, <xref href=\"System.Data.DataRow.RowState\"></xref> values are preserved. Input to <xref href=\"System.Data.DataSet.ReadXml(System.Xml.XmlReader)\"></xref> with DiffGrams should only be obtained using the output from <xref href=\"System.Data.DataSet.WriteXml(System.IO.Stream)\"></xref> as a DiffGram.","nodes":[{"content":"Reads a DiffGram, applying changes from the DiffGram to the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph>.","pos":[0,101],"source":"Reads a DiffGram, applying changes from the DiffGram to the <xref href=\"System.Data.DataSet\"></xref>."},{"content":"The semantics are identical to those of a <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"&gt;&lt;/xref&gt;</ph> operation.","pos":[102,222],"source":" The semantics are identical to those of a <xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"></xref> operation."},{"content":"As with the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"&gt;&lt;/xref&gt;</ph> operation, <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow.RowState\"&gt;&lt;/xref&gt;</ph> values are preserved.","pos":[223,385],"source":" As with the <xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"></xref> operation, <xref href=\"System.Data.DataRow.RowState\"></xref> values are preserved."},{"content":"Input to <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet.ReadXml(System.Xml.XmlReader)\"&gt;&lt;/xref&gt;</ph> with DiffGrams should only be obtained using the output from <ph id=\"ph2\">&lt;xref href=\"System.Data.DataSet.WriteXml(System.IO.Stream)\"&gt;&lt;/xref&gt;</ph> as a DiffGram.","pos":[386,609],"source":" Input to <xref href=\"System.Data.DataSet.ReadXml(System.Xml.XmlReader)\"></xref> with DiffGrams should only be obtained using the output from <xref href=\"System.Data.DataSet.WriteXml(System.IO.Stream)\"></xref> as a DiffGram."}]}],"pos":[3700,4310],"yaml":true},{"content":"The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called. Otherwise the DiffGram merge operation fails, and an exception is thrown.","nodes":[{"pos":[0,242],"content":"The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called. Otherwise the DiffGram merge operation fails, and an exception is thrown.","nodes":[{"content":"The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called. Otherwise the DiffGram merge operation fails, and an exception is thrown.","pos":[0,242],"nodes":[{"content":"The target <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> must have the same schema as the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph> on which <ph id=\"ph3\">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> as DiffGram is called.","pos":[0,168],"source":"The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called."},{"content":"Otherwise the DiffGram merge operation fails, and an exception is thrown.","pos":[169,242]}]}]}],"pos":[4321,4564],"yaml":true,"extradata":"MT"},{"content":"Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When <xref href=\"System.Data.XmlReadMode\"></xref> is set to `Fragment`, the default namespace is read as the inline schema.","nodes":[{"pos":[0,233],"content":"Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When <xref href=\"System.Data.XmlReadMode\"></xref> is set to `Fragment`, the default namespace is read as the inline schema.","nodes":[{"content":"Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.","pos":[0,109]},{"content":"When <ph id=\"ph1\">&lt;xref href=\"System.Data.XmlReadMode\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph2\">`Fragment`</ph>, the default namespace is read as the inline schema.","pos":[110,233],"source":" When <xref href=\"System.Data.XmlReadMode\"></xref> is set to `Fragment`, the default namespace is read as the inline schema."}]}],"pos":[5669,5903],"yaml":true},{"content":"Ignores any inline schema and reads data into the existing <xref href=\"System.Data.DataSet\"></xref> schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <xref href=\"System.Data.DataSet\"></xref>). If the data is a DiffGram, `IgnoreSchema` has the same functionality as `DiffGram`.","nodes":[{"pos":[0,356],"content":"Ignores any inline schema and reads data into the existing <xref href=\"System.Data.DataSet\"></xref> schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <xref href=\"System.Data.DataSet\"></xref>). If the data is a DiffGram, `IgnoreSchema` has the same functionality as `DiffGram`.","nodes":[{"content":"Ignores any inline schema and reads data into the existing <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph> schema.","pos":[0,107],"source":"Ignores any inline schema and reads data into the existing <xref href=\"System.Data.DataSet\"></xref> schema."},{"content":"If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph>).","pos":[108,272],"source":" If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <xref href=\"System.Data.DataSet\"></xref>)."},{"content":"If the data is a DiffGram, <ph id=\"ph1\">`IgnoreSchema`</ph> has the same functionality as <ph id=\"ph2\">`DiffGram`</ph>.","pos":[273,356],"source":" If the data is a DiffGram, `IgnoreSchema` has the same functionality as `DiffGram`."}]}],"pos":[7032,7389],"yaml":true},{"content":"Ignores any inline schema, infers schema from the data and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","nodes":[{"pos":[0,397],"content":"Ignores any inline schema, infers schema from the data and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","nodes":[{"content":"Ignores any inline schema, infers schema from the data and loads the data.","pos":[0,74]},{"content":"If the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.","pos":[75,239],"source":" If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables."},{"content":"An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","pos":[240,397]}]}],"pos":[8516,8914],"yaml":true},{"content":"Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","nodes":[{"pos":[0,506],"content":"Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","nodes":[{"content":"Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.","pos":[0,92]},{"content":"If the type cannot be inferred from the data, it is interpreted as string data.","pos":[93,172]},{"content":"If the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.","pos":[173,348],"source":" If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables."},{"content":"An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.","pos":[349,506]}]}],"pos":[10070,10577],"yaml":true},{"content":"Reads any inline schema and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <xref href=\"System.Data.DataSet\"></xref>.","nodes":[{"pos":[0,280],"content":"Reads any inline schema and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <xref href=\"System.Data.DataSet\"></xref>.","nodes":[{"content":"Reads any inline schema and loads the data.","pos":[0,43]},{"content":"If the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph>.","pos":[44,280],"source":" If the <xref href=\"System.Data.DataSet\"></xref> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <xref href=\"System.Data.DataSet\"></xref>."}]}],"pos":[11702,11983],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.XmlReadMode\n  commentId: T:System.Data.XmlReadMode\n  id: XmlReadMode\n  children:\n  - System.Data.XmlReadMode.Auto\n  - System.Data.XmlReadMode.DiffGram\n  - System.Data.XmlReadMode.Fragment\n  - System.Data.XmlReadMode.IgnoreSchema\n  - System.Data.XmlReadMode.InferSchema\n  - System.Data.XmlReadMode.InferTypedSchema\n  - System.Data.XmlReadMode.ReadSchema\n  langs:\n  - csharp\n  name: XmlReadMode\n  nameWithType: XmlReadMode\n  fullName: System.Data.XmlReadMode\n  type: Enum\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Specifies how to read XML data and a relational schema into a <xref href=\"System.Data.DataSet\"></xref>.\n  remarks: \"Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method.  \\n  \\n> [!NOTE]\\n>  `Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.\"\n  syntax:\n    content: public enum XmlReadMode\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/XmlReadMode.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.XmlReadMode.Auto\n  commentId: F:System.Data.XmlReadMode.Auto\n  id: Auto\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: Auto\n  nameWithType: XmlReadMode.Auto\n  fullName: XmlReadMode.Auto\n  type: Field\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Default.\n  remarks: \"Performs the most appropriate of these actions:  \\n  \\n If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`.  \\n  \\n -or-  \\n  \\n If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`.  \\n  \\n -or-  \\n  \\n If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`.\"\n  syntax:\n    content: Auto\n    return:\n      type: System.Data.XmlReadMode\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/XmlReadMode.xml\n- uid: System.Data.XmlReadMode.DiffGram\n  commentId: F:System.Data.XmlReadMode.DiffGram\n  id: DiffGram\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: DiffGram\n  nameWithType: XmlReadMode.DiffGram\n  fullName: XmlReadMode.DiffGram\n  type: Field\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Reads a DiffGram, applying changes from the DiffGram to the <xref href=\"System.Data.DataSet\"></xref>. The semantics are identical to those of a <xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"></xref> operation. As with the <xref href=\"System.Data.DataSet.Merge(System.Data.DataSet)\"></xref> operation, <xref href=\"System.Data.DataRow.RowState\"></xref> values are preserved. Input to <xref href=\"System.Data.DataSet.ReadXml(System.Xml.XmlReader)\"></xref> with DiffGrams should only be obtained using the output from <xref href=\"System.Data.DataSet.WriteXml(System.IO.Stream)\"></xref> as a DiffGram.\n  remarks: The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called. Otherwise the DiffGram merge operation fails, and an exception is thrown.\n  syntax:\n    content: DiffGram\n    return:\n      type: System.Data.XmlReadMode\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/XmlReadMode.xml\n- uid: System.Data.XmlReadMode.Fragment\n  commentId: F:System.Data.XmlReadMode.Fragment\n  id: Fragment\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: Fragment\n  nameWithType: XmlReadMode.Fragment\n  fullName: XmlReadMode.Fragment\n  type: Field\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When <xref href=\"System.Data.XmlReadMode\"></xref> is set to `Fragment`, the default namespace is read as the inline schema.\n  syntax:\n    content: Fragment\n    return:\n      type: System.Data.XmlReadMode\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/XmlReadMode.xml\n- uid: System.Data.XmlReadMode.IgnoreSchema\n  commentId: F:System.Data.XmlReadMode.IgnoreSchema\n  id: IgnoreSchema\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: IgnoreSchema\n  nameWithType: XmlReadMode.IgnoreSchema\n  fullName: XmlReadMode.IgnoreSchema\n  type: Field\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Ignores any inline schema and reads data into the existing <xref href=\"System.Data.DataSet\"></xref> schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <xref href=\"System.Data.DataSet\"></xref>). If the data is a DiffGram, `IgnoreSchema` has the same functionality as `DiffGram`.\n  syntax:\n    content: IgnoreSchema\n    return:\n      type: System.Data.XmlReadMode\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/XmlReadMode.xml\n- uid: System.Data.XmlReadMode.InferSchema\n  commentId: F:System.Data.XmlReadMode.InferSchema\n  id: InferSchema\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: InferSchema\n  nameWithType: XmlReadMode.InferSchema\n  fullName: XmlReadMode.InferSchema\n  type: Field\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Ignores any inline schema, infers schema from the data and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.\n  syntax:\n    content: InferSchema\n    return:\n      type: System.Data.XmlReadMode\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/XmlReadMode.xml\n- uid: System.Data.XmlReadMode.InferTypedSchema\n  commentId: F:System.Data.XmlReadMode.InferTypedSchema\n  id: InferTypedSchema\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: InferTypedSchema\n  nameWithType: XmlReadMode.InferTypedSchema\n  fullName: XmlReadMode.InferTypedSchema\n  type: Field\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the <xref href=\"System.Data.DataSet\"></xref> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.\n  syntax:\n    content: InferTypedSchema\n    return:\n      type: System.Data.XmlReadMode\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/XmlReadMode.xml\n- uid: System.Data.XmlReadMode.ReadSchema\n  commentId: F:System.Data.XmlReadMode.ReadSchema\n  id: ReadSchema\n  parent: System.Data.XmlReadMode\n  langs:\n  - csharp\n  name: ReadSchema\n  nameWithType: XmlReadMode.ReadSchema\n  fullName: XmlReadMode.ReadSchema\n  type: Field\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Reads any inline schema and loads the data. If the <xref href=\"System.Data.DataSet\"></xref> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <xref href=\"System.Data.DataSet\"></xref>.\n  syntax:\n    content: ReadSchema\n    return:\n      type: System.Data.XmlReadMode\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/XmlReadMode.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Data.XmlReadMode.Auto\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: Auto\n  nameWithType: XmlReadMode.Auto\n  fullName: XmlReadMode.Auto\n- uid: System.Data.XmlReadMode\n  parent: System.Data\n  isExternal: false\n  name: XmlReadMode\n  nameWithType: XmlReadMode\n  fullName: System.Data.XmlReadMode\n- uid: System.Data.XmlReadMode.DiffGram\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: DiffGram\n  nameWithType: XmlReadMode.DiffGram\n  fullName: XmlReadMode.DiffGram\n- uid: System.Data.XmlReadMode.Fragment\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: Fragment\n  nameWithType: XmlReadMode.Fragment\n  fullName: XmlReadMode.Fragment\n- uid: System.Data.XmlReadMode.IgnoreSchema\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: IgnoreSchema\n  nameWithType: XmlReadMode.IgnoreSchema\n  fullName: XmlReadMode.IgnoreSchema\n- uid: System.Data.XmlReadMode.InferSchema\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: InferSchema\n  nameWithType: XmlReadMode.InferSchema\n  fullName: XmlReadMode.InferSchema\n- uid: System.Data.XmlReadMode.InferTypedSchema\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: InferTypedSchema\n  nameWithType: XmlReadMode.InferTypedSchema\n  fullName: XmlReadMode.InferTypedSchema\n- uid: System.Data.XmlReadMode.ReadSchema\n  parent: System.Data.XmlReadMode\n  isExternal: false\n  name: ReadSchema\n  nameWithType: XmlReadMode.ReadSchema\n  fullName: XmlReadMode.ReadSchema\n"}