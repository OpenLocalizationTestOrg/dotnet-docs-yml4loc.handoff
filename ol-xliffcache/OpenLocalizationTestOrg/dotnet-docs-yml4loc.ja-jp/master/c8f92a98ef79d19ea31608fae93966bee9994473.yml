### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.HttpTransportBindingElement
  commentId: T:System.ServiceModel.Channels.HttpTransportBindingElement
  id: HttpTransportBindingElement
  children:
  - System.ServiceModel.Channels.HttpTransportBindingElement.#ctor
  - System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)
  - System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies
  - System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme
  - System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal
  - System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.HttpTransportBindingElement.Clone
  - System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled
  - System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  - System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode
  - System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled
  - System.ServiceModel.Channels.HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  - System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize
  - System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts
  - System.ServiceModel.Channels.HttpTransportBindingElement.MessageHandlerFactory
  - System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress
  - System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme
  - System.ServiceModel.Channels.HttpTransportBindingElement.Realm
  - System.ServiceModel.Channels.HttpTransportBindingElement.RequestInitializationTimeout
  - System.ServiceModel.Channels.HttpTransportBindingElement.Scheme
  - System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  - System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory
  - System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeWebSocketSettings
  - System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode
  - System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  - System.ServiceModel.Channels.HttpTransportBindingElement.UpdateAuthenticationSchemes(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy
  - System.ServiceModel.Channels.HttpTransportBindingElement.WebSocketSettings
  - System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  - System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  - System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  langs:
  - csharp
  name: HttpTransportBindingElement
  nameWithType: HttpTransportBindingElement
  fullName: System.ServiceModel.Channels.HttpTransportBindingElement
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Represents the binding element used to specify an HTTP transport for transmitting messages.
  remarks: "The <xref:System.ServiceModel.Channels.HttpTransportBindingElement> class is the starting point for creating a custom binding that implements the HTTP transport protocol. HTTP is the primary transport used for interoperability purposes. This transport is supported by [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to ensure interoperability with other non-[!INCLUDE[indigo2](~/includes/indigo2-md.md)] Web services stacks.  \n  \n The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service model uses this class to create factory objects that implement the <xref:System.ServiceModel.Channels.IChannelFactory> and <xref:System.ServiceModel.Channels.IChannelListener> interfaces. These factory objects, in turn, create the channels and listeners that transmit SOAP messages using the HTTP protocol.  \n  \n You configure the factories that this class creates by setting its properties, such as <xref:System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme%2A>, <xref:System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode%2A>, and <xref:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize%2A>.  \n  \n You can also set properties on the base class, <xref:System.ServiceModel.Channels.TransportBindingElement>, such as <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A>, <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>, and <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>. For a complete list of properties, see <xref:System.ServiceModel.Channels.TransportBindingElement>."
  example:
  - "The following code shows how to imperatively use the <xref:System.ServiceModel.Channels.HttpTransportBindingElement>.  \n  \n [!code-csharp[S_Imperative#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_imperative/cs/service.cs#1)]\n [!code-vb[S_Imperative#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_imperative/vb/service.vb#1)]  \n  \n `HttpTransportBindingElement` can also be used in a configuration file as shown in the following configuration.  \n  \n```xml  \n<bindings>  \n  <customBinding>  \n    <binding name=\"Binding1\">  \n      <reliableSession acknowledgementInterval=\"00:00:00.2000000\" enableFlowControl=\"true\"  \n                        maxTransferWindowSize=\"32\" inactivityTimeout=\"00:10:00\" maxPendingChannels=\"128\"  \n                        maxRetryCount=\"8\" ordered=\"true\" />  \n      <security mode=\"None\"/>  \n      <httpTransport authenticationScheme=\"Anonymous\" bypassProxyOnLocal=\"false\"  \n                    hostNameComparisonMode=\"StrongWildcard\"   \n                    proxyAuthenticationScheme=\"Anonymous\" realm=\"\"   \n                    useDefaultWebProxy=\"true\" />  \n    </binding>  \n  </customBinding>  \n</bindings>  \n```"
  syntax:
    content: 'public class HttpTransportBindingElement : System.ServiceModel.Channels.TransportBindingElement, System.ServiceModel.Description.IPolicyExportExtension, System.ServiceModel.Description.IWsdlExportExtension'
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.BindingElement
  - System.ServiceModel.Channels.TransportBindingElement
  derivedClasses:
  - System.ServiceModel.Channels.HttpsTransportBindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  - System.ServiceModel.Description.IWsdlExportExtension
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.TransportBindingElement.ManualAddressing
  - System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize
  - System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.#ctor
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: HttpTransportBindingElement()
  nameWithType: HttpTransportBindingElement.HttpTransportBindingElement()
  fullName: HttpTransportBindingElement.HttpTransportBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.HttpTransportBindingElement"></xref> class.
  syntax:
    content: public HttpTransportBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)
  id: '#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)'
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: HttpTransportBindingElement(HttpTransportBindingElement)
  nameWithType: HttpTransportBindingElement.HttpTransportBindingElement(HttpTransportBindingElement)
  fullName: HttpTransportBindingElement.HttpTransportBindingElement(HttpTransportBindingElement)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.HttpTransportBindingElement"></xref> class using another binding element.
  remarks: This method is a copy constructor used to clone the binding.
  example:
  - "The following example shows how to use the copy constructor in a derived class.  \n  \n```csharp  \npublic class MyBindingElement : HttpTransportBindingElement  \n{  \n    public MyBindingElement(MyBindingElement elementToBeCloned) : base(elementToBeCloned)  \n    {  \n    }  \n}  \n```"
  syntax:
    content: protected HttpTransportBindingElement (System.ServiceModel.Channels.HttpTransportBindingElement elementToBeCloned);
    parameters:
    - id: elementToBeCloned
      type: System.ServiceModel.Channels.HttpTransportBindingElement
      description: An <xref href="System.ServiceModel.Channels.HttpTransportBindingElement"></xref> object used to initialize this instance.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: AllowCookies
  nameWithType: HttpTransportBindingElement.AllowCookies
  fullName: HttpTransportBindingElement.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.
  remarks: This property is provided as a convenience for interacting with ASMX Web services that use cookies to make sure that the cookies returned from the server are automatically copied to all future client requests for that service.
  example:
  - "The following example sets this property to indicate that all cookies from the server should be copied to future client requests.  \n  \n```csharp  \nHttpTransportBindingElement httpBindingElement = new HttpBindingElement();  \nhttpBindingElement.AllowCookies = true;  \n```"
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: '`true` if cookies are allowed; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme
  id: AuthenticationScheme
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: AuthenticationScheme
  nameWithType: HttpTransportBindingElement.AuthenticationScheme
  fullName: HttpTransportBindingElement.AuthenticationScheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP listener.
  remarks: The authentication scheme can only be set once.
  example:
  - "The following example sets this property to use when authenticating client requests.  \n  \n```csharp  \n[ServiceContract]  \ninterface ICalculator  \n{  \n     [OperationContract]  \n            Int Add(int a, int b);  \n}  \n  \nHttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  \nhttpBinding.AuthenticationScheme = AuthenticationSchemes.Digest;  \nCustomBinding binding = new CustomBinding(new TextMessageEncodingBindingElement(), httpBinding);  \n  \nEndpointAddress endpoint = new EndpointAddress(address);  \nChannelFactory<ICalculator> proxy = new ChannelFactory<ICalculator>(binding, endpoint);  \n  \nproxy.Credentials.Windows.ClientCredential = new NetworkCredential(\"user\", \"password\", \"domain\");  \nproxy.Credentials.Windows.AllowedImpersonationLevel = System.Security.Principal.TokenImpersonationLevel.Impersonation;  \nproxy.Open();  \n  \nICalculator calc = proxy.CreateChannel();  \n  \nint odd=calc.Add(5,4);  \n```"
  syntax:
    content: public System.Net.AuthenticationSchemes AuthenticationScheme { get; set; }
    return:
      type: System.Net.AuthenticationSchemes
      description: One of the enumeration values of the <xref href="System.Net.AuthenticationSchemes"></xref> enumeration that specifies the protocols used for client authentication. The default is <xref href="System.Net.AuthenticationSchemes.Anonymous"></xref>.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The value for the <xref href="System.Net.AuthenticationSchemes"></xref> was already set.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: HttpTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a channel factory that can be used to create a channel.
  remarks: This method can be used to get a channel factory for sending messages based on the configuration of the transport binding element.
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: <xref href="System.ServiceModel.Channels.BindingContext"></xref> members that describe bindings, behaviors, contracts and other information required to create the channel factory.
    typeParameters:
    - id: TChannel
      description: The type of channel factory.
    return:
      type: System.ServiceModel.Channels.IChannelFactory`1
      description: A channel factory of the specified type.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> cannot be `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An invalid argument was passed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: HttpTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a channel listener of the specified type.
  remarks: This method can be used to get a channel listener for receiving messages based on the configuration of the transport binding element.
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: <xref href="System.ServiceModel.Channels.BindingContext"></xref> members that describe bindings, behaviors, contracts and other information required to create the channel factory.
    typeParameters:
    - id: TChannel
      description: The type of channel factory.
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: A channel listener of the specified type.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> cannot be `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An invalid argument was passed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: HttpTransportBindingElement.BypassProxyOnLocal
  fullName: HttpTransportBindingElement.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a value that indicates whether proxies are ignored for local addresses.
  remarks: "A local address is one that is on the local LAN or intranet.  \n  \n [!INCLUDE[indigo2](~/includes/indigo2-md.md)] always ignores the proxy if the service address begins with `http://localhost`. You should use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine."
  example:
  - "The following example sets this property to use when performing requests on the binding.  \n  \n```csharp  \nHttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  \nhttpBinding.BypassProxyOnLocal = true;  \n```"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: '`true` if proxies are ignored for local addresses; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: HttpTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Determines whether a channel factory of the specified type can be built.
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> for the channel.
    typeParameters:
    - id: TChannel
      description: The type of channel to check.
    return:
      type: System.Boolean
      description: '`true` if a channel factory can be built; otherwise `false`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: HttpTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Determines whether a channel listener of the specified type can be built.
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> for the channel.
    typeParameters:
    - id: TChannel
      description: The type of channel to check.
    return:
      type: System.Boolean
      description: '`true` if a channel listener can be built; otherwise `false`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Clone
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: HttpTransportBindingElement.Clone()
  fullName: HttpTransportBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a new instance that is a copy of the current binding element.
  remarks: ''
  example:
  - "The following example clones the specified binding element.  \n  \n```csharp  \nHttpBindingElement bindingElement = elementToClone.Clone();  \n```"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: A new instance that is a copy of the current binding element.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled
  id: DecompressionEnabled
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: DecompressionEnabled
  nameWithType: HttpTransportBindingElement.DecompressionEnabled
  fullName: HttpTransportBindingElement.DecompressionEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets whether the process for returning compressed message data to its original size and format is enabled.
  syntax:
    content: public bool DecompressionEnabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if decompression is enabled; otherwise, `false`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  id: ExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: ExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.ExtendedProtectionPolicy
  fullName: HttpTransportBindingElement.ExtendedProtectionPolicy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the value of the extended security policy used by the server to validate incoming client connections.
  syntax:
    content: public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }
    return:
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: The value of the extended security policy used by the server to validate incoming client connections.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: GetProperty<T>(BindingContext)
  nameWithType: HttpTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: HttpTransportBindingElement.GetProperty<T>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets a property from the specified <xref href="System.ServiceModel.Channels.BindingContext"></xref>.
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: A <xref href="System.ServiceModel.Channels.BindingContext"></xref>.
    typeParameters:
    - id: T
      description: The type of the property to get.
    return:
      type: T
      description: The property from the specified <xref href="System.ServiceModel.Channels.BindingContext"></xref>.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: HttpTransportBindingElement.HostNameComparisonMode
  fullName: HttpTransportBindingElement.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: The <xref href="System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode"></xref> enumeration value that indicates whether the hostname is included when routing incoming requests to an endpoint URI. The default value is <xref href="System.ServiceModel.HostNameComparisonMode.StrongWildcard"></xref>, which ignores the hostname in the match.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value set is not defined.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled
  id: KeepAliveEnabled
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: KeepAliveEnabled
  nameWithType: HttpTransportBindingElement.KeepAliveEnabled
  fullName: HttpTransportBindingElement.KeepAliveEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a value that indicates whether to make a persistent connection to a service endpoint.
  remarks: Set this property to `true` to send a Connection HTTP header with the value `Keep-alive`. A client uses this property to indicate a preference for persistent connections. When this property is `true`, the connection that the client makes to a service endpoint is persistent if the service endpoint supports that.
  example:
  - "The following code shows how to set this property.  \n  \n [!code-csharp[PoxSample#1](~/samples/snippets/csharp/VS_Snippets_CFX/poxsample/cs/client/httpclient.cs#1)]"
  syntax:
    content: public bool KeepAliveEnabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the request to the service endpoint should contain a Connection HTTP header with the value `Keep-alive`; otherwise, `false`. The default is `true`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  id: LegacyExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: LegacyExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  fullName: HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: >-
      [System.Obsolete("Use ExtendedProtectionPolicy")]

      public object LegacyExtendedProtectionPolicy { get; set; }
    return:
      type: System.Object
      description: ''
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.LegacyExtendedProtectionPolicy*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize
  id: MaxBufferSize
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: MaxBufferSize
  nameWithType: HttpTransportBindingElement.MaxBufferSize
  fullName: HttpTransportBindingElement.MaxBufferSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the maximum size of the buffer to use. For buffered messages this value is the same as <xref href="System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize"></xref>. For streamed messages, this value is the maximum size of the SOAP headers, which must be read in buffered mode.
  remarks: "For streamed messages, if the size of the message headers is greater than this property, then a <xref:System.ServiceModel.QuotaExceededException> is thrown. For a non-streamed message, if the message size is greater than this property, then the message is dropped.  \n  \n If not specified, this defaults to 65536."
  example:
  - "The following example sets this property to use when performing requests on the binding.  \n  \n```csharp  \nHttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  \nhttpBinding.MaxBufferSize = 16384;  \n```"
  syntax:
    content: public int MaxBufferSize { get; set; }
    return:
      type: System.Int32
      description: The maximum size, in bytes, of the buffer.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts
  id: MaxPendingAccepts
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: MaxPendingAccepts
  nameWithType: HttpTransportBindingElement.MaxPendingAccepts
  fullName: HttpTransportBindingElement.MaxPendingAccepts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the maximum number of connections the service can accept simultaneously.
  remarks: The default value of <xref:System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts%2A> is 0, which means WCF will configure the value for you. You can increase the number for better scalability. In the self-hosted case, this property controls the maximum number of simultaneous BeginGetContext calls WCF will invoke. Each time BeginGetContext is called some memory is pinned within the managed heap for buffering. If too many buffers are pinned, excessive heap fragmentation may result. This property is ignored in the web-hosted case.
  syntax:
    content: public int MaxPendingAccepts { get; set; }
    return:
      type: System.Int32
      description: The maximum number of connections the service can accept simultaneously.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MessageHandlerFactory
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.MessageHandlerFactory
  id: MessageHandlerFactory
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: MessageHandlerFactory
  nameWithType: HttpTransportBindingElement.MessageHandlerFactory
  fullName: HttpTransportBindingElement.MessageHandlerFactory
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the Http transport message handler factory.
  syntax:
    content: public System.ServiceModel.Channels.HttpMessageHandlerFactory MessageHandlerFactory { get; set; }
    return:
      type: System.ServiceModel.Channels.HttpMessageHandlerFactory
      description: The Http transport message handler factory.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.MessageHandlerFactory*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: HttpTransportBindingElement.ProxyAddress
  fullName: HttpTransportBindingElement.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a URI that contains the address of the proxy to use for HTTP requests.
  remarks: ''
  example:
  - "The following example sets this property to use when performing requests on the binding. All requests are routed through this proxy, unless <xref:System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal%2A> is set to `true` and the endpoint is a local endpoint.  \n  \n```csharp  \nHttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  \nhttpBinding.ProxyAddress = new Uri(http://proxyserver);  \n```"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]

      public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the address for the proxy. The default value is `null`.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress*
  exceptions: []
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme
  id: ProxyAuthenticationScheme
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: ProxyAuthenticationScheme
  nameWithType: HttpTransportBindingElement.ProxyAuthenticationScheme
  fullName: HttpTransportBindingElement.ProxyAuthenticationScheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP proxy.
  remarks: ''
  example:
  - "The following example sets this property to use when sending requests to the proxy specified in the <xref:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress%2A> property.  \n  \n```csharp  \nHttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  \nhttpBinding.ProxyAddress = new Uri(http://proxyserver);  \nhttpBinding.ProxyAuthenticationScheme = AuthenticationSchemes.Digest;  \n```"
  syntax:
    content: public System.Net.AuthenticationSchemes ProxyAuthenticationScheme { get; set; }
    return:
      type: System.Net.AuthenticationSchemes
      description: The <xref href="System.Net.AuthenticationSchemes"></xref> enumeration that specifies the protocols used for client authentication on the proxy. The default is <xref href="System.Net.AuthenticationSchemes.Anonymous"></xref>.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Realm
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.Realm
  id: Realm
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: Realm
  nameWithType: HttpTransportBindingElement.Realm
  fullName: HttpTransportBindingElement.Realm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the authentication realm.
  remarks: Servers use realms to partition protected resources; each partition can have its own authentication scheme or authorization database. Realms are used only for basic and digest authentication. After a client successfully authenticates, the authentication is valid for all resources in a given realm. For a detailed description of realms, see [RFC 2617](http://go.microsoft.com/fwlink/?LinkID=95943).
  syntax:
    content: public string Realm { get; set; }
    return:
      type: System.String
      description: The authentication realm. The default value is "".
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.Realm*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.RequestInitializationTimeout
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.RequestInitializationTimeout
  id: RequestInitializationTimeout
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: RequestInitializationTimeout
  nameWithType: HttpTransportBindingElement.RequestInitializationTimeout
  fullName: HttpTransportBindingElement.RequestInitializationTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the requested initialization time out.
  syntax:
    content: public TimeSpan RequestInitializationTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: The requested initialization time out.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.RequestInitializationTimeout*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Scheme
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme
  id: Scheme
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: Scheme
  nameWithType: HttpTransportBindingElement.Scheme
  fullName: HttpTransportBindingElement.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the URI scheme for the transport.
  remarks: This property is used to validate bindings against base addresses.
  example:
  - "The following example outputs the scheme of the binding to the console.  \n  \n```csharp  \nHttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  \nConsole.WriteLine(\"The scheme of the binding is {0}.\",httpBinding.Scheme);  \n```  \n  \n The output is: \"The scheme of the binding is http.\""
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: A <xref href="System.Uri.UriSchemeHttp"></xref> object that represents the URI scheme for the transport.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.Scheme*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  id: ShouldSerializeExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: ShouldSerializeExtendedProtectionPolicy()
  nameWithType: HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy()
  fullName: HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns a valueindicating that it is not possible to XAML serialize the extended protection policy.
  syntax:
    content: public bool ShouldSerializeExtendedProtectionPolicy ();
    parameters: []
    return:
      type: System.Boolean
      description: '`false`'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory
  id: ShouldSerializeMessageHandlerFactory
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: ShouldSerializeMessageHandlerFactory()
  nameWithType: HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory()
  fullName: HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Determines whether the message handler factory should be serialized.
  syntax:
    content: public bool ShouldSerializeMessageHandlerFactory ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the message handler factory should be serialized; otherwise, `false`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeWebSocketSettings
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeWebSocketSettings
  id: ShouldSerializeWebSocketSettings
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: ShouldSerializeWebSocketSettings()
  nameWithType: HttpTransportBindingElement.ShouldSerializeWebSocketSettings()
  fullName: HttpTransportBindingElement.ShouldSerializeWebSocketSettings()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Determines whether the web socket settings should be serialized.
  syntax:
    content: public bool ShouldSerializeWebSocketSettings ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the web socket settings should be serialized; otherwise, `false`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeWebSocketSettings*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode
  id: TransferMode
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: TransferMode
  nameWithType: HttpTransportBindingElement.TransferMode
  fullName: HttpTransportBindingElement.TransferMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the transfer mode.
  remarks: Specifying <xref:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode%2A> = Streamed implies both `StreamedRequest` and `StreamedResponse`.
  syntax:
    content: public System.ServiceModel.TransferMode TransferMode { get; set; }
    return:
      type: System.ServiceModel.TransferMode
      description: "One of the following member values of <xref href=\"System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode\"></xref>:  \n  \n-   Buffered  \n  \n-   Streamed  \n  \n-   StreamedRequest  \n  \n-   StreamedResponse"
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  id: UnsafeConnectionNtlmAuthentication
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: UnsafeConnectionNtlmAuthentication
  nameWithType: HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  fullName: HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a value that indicates whether Unsafe Connection Sharing is enabled on the server. If enabled, NTLM authentication is performed once on each TCP connection.
  remarks: "When this property is set to `true` and the first request over a particular connection is authenticated using NTLM, subsequent requests over the same connection are processed using the authentication information in <xref:System.Security.Principal.IIdentity> of the initial request.  \n  \n This property has no effect when NTLM is not the authentication protocol.  \n  \n> [!NOTE]\n>  While setting this property to `true` increases performance because additional NTLM authentication challenges are not sent, there is a security risk in not requiring all requests to provide authentication information. You must determine whether the increase in performance is worth this risk.  \n  \n [!INCLUDE[crdefault](~/includes/crdefault-md.md)] <xref:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication%2A>."
  example:
  - "The following example sets the property to enable Unsafe Connection Sharing.  \n  \n```csharp  \nHttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  \nhttpBinding.AuthenticationScheme = AuthenticationSchemes.Ntlm;  \nhttpBinding.UnsafeConnectionNtlmAuthentication = true;  \n```"
  syntax:
    content: public bool UnsafeConnectionNtlmAuthentication { get; set; }
    return:
      type: System.Boolean
      description: '`true` if Unsafe Connection Sharing is enabled; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UpdateAuthenticationSchemes(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.UpdateAuthenticationSchemes(System.ServiceModel.Channels.BindingContext)
  id: UpdateAuthenticationSchemes(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: UpdateAuthenticationSchemes(BindingContext)
  nameWithType: HttpTransportBindingElement.UpdateAuthenticationSchemes(BindingContext)
  fullName: HttpTransportBindingElement.UpdateAuthenticationSchemes(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Updates the transport authentication schemes that contains the binding context.
  syntax:
    content: protected void UpdateAuthenticationSchemes (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The binding context.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.UpdateAuthenticationSchemes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: HttpTransportBindingElement.UseDefaultWebProxy
  fullName: HttpTransportBindingElement.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.
  remarks: ''
  example:
  - "The following example causes user-specific proxy settings to be used.  \n  \n```csharp  \nHttpTransportBindingElement httpBinding = new HttpTransportBindingElement();  \nhttpBinding.UseDefaultWebProxy = false;  \n```"
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the machine-wide proxy settings are used; otherwise, `false`. The default is `true`.'
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.WebSocketSettings
  commentId: P:System.ServiceModel.Channels.HttpTransportBindingElement.WebSocketSettings
  id: WebSocketSettings
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: WebSocketSettings
  nameWithType: HttpTransportBindingElement.WebSocketSettings
  fullName: HttpTransportBindingElement.WebSocketSettings
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the web socket configuration of the binding element.
  syntax:
    content: public System.ServiceModel.Channels.WebSocketTransportSettings WebSocketSettings { get; set; }
    return:
      type: System.ServiceModel.Channels.WebSocketTransportSettings
      description: The web socket settings.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.WebSocketSettings*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: HttpTransportBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: HttpTransportBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Exports a custom policy assertion about bindings.
  remarks: "This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to communicate to clients the existence of this custom binding element in the binding stack.  \n  \n This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.  \n  \n The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This allows this method to correctly scope their exported policy assertions. For example, security attributes in code may add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.  \n  \n Once custom policy assertions have been attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface."
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: The <xref href="System.ServiceModel.Description.MetadataExporter"></xref> that you can use to modify the exporting process.
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: The <xref href="System.ServiceModel.Description.PolicyConversionContext"></xref> that you can use to insert your custom policy assertion.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  id: System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  nameWithType: HttpTransportBindingElement.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  fullName: HttpTransportBindingElement.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.
  syntax:
    content: void IWsdlExportExtension.ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.WsdlExporter
      description: The <xref href="System.ServiceModel.Description.WsdlExporter"></xref> that exports the contract information.
    - id: context
      type: System.ServiceModel.Description.WsdlContractConversionContext
      description: A context that provides mappings from exported WSDL elements to the contract description.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  commentId: M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  id: System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  langs:
  - csharp
  name: IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  nameWithType: HttpTransportBindingElement.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  fullName: HttpTransportBindingElement.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.
  syntax:
    content: void IWsdlExportExtension.ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext endpointContext);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.WsdlExporter
      description: The <xref href="System.ServiceModel.Description.WsdlExporter"></xref> that exports the contract information.
    - id: endpointContext
      type: System.ServiceModel.Description.WsdlEndpointConversionContext
      description: An endpoint context that provides mappings from exported WSDL elements to the endpoint description.
  overload: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Channels.TransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: System.ServiceModel.Channels.TransportBindingElement
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.#ctor
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: HttpTransportBindingElement()
  nameWithType: HttpTransportBindingElement.HttpTransportBindingElement()
  fullName: HttpTransportBindingElement.HttpTransportBindingElement()
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: HttpTransportBindingElement(HttpTransportBindingElement)
  nameWithType: HttpTransportBindingElement.HttpTransportBindingElement(HttpTransportBindingElement)
  fullName: HttpTransportBindingElement.HttpTransportBindingElement(HttpTransportBindingElement)
- uid: System.ServiceModel.Channels.HttpTransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: HttpTransportBindingElement
  nameWithType: HttpTransportBindingElement
  fullName: System.ServiceModel.Channels.HttpTransportBindingElement
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: AllowCookies
  nameWithType: HttpTransportBindingElement.AllowCookies
  fullName: HttpTransportBindingElement.AllowCookies
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: AuthenticationScheme
  nameWithType: HttpTransportBindingElement.AuthenticationScheme
  fullName: HttpTransportBindingElement.AuthenticationScheme
- uid: System.Net.AuthenticationSchemes
  parent: System.Net
  isExternal: false
  name: AuthenticationSchemes
  nameWithType: AuthenticationSchemes
  fullName: System.Net.AuthenticationSchemes
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: HttpTransportBindingElement.BuildChannelFactory<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: HttpTransportBindingElement.BuildChannelListener<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: HttpTransportBindingElement.BypassProxyOnLocal
  fullName: HttpTransportBindingElement.BypassProxyOnLocal
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: HttpTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: HttpTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: HttpTransportBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Clone
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: Clone()
  nameWithType: HttpTransportBindingElement.Clone()
  fullName: HttpTransportBindingElement.Clone()
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: DecompressionEnabled
  nameWithType: HttpTransportBindingElement.DecompressionEnabled
  fullName: HttpTransportBindingElement.DecompressionEnabled
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.ExtendedProtectionPolicy
  fullName: HttpTransportBindingElement.ExtendedProtectionPolicy
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: GetProperty<T>(BindingContext)
  nameWithType: HttpTransportBindingElement.GetProperty<T>(BindingContext)
  fullName: HttpTransportBindingElement.GetProperty<T>(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HttpTransportBindingElement.HostNameComparisonMode
  fullName: HttpTransportBindingElement.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: KeepAliveEnabled
  nameWithType: HttpTransportBindingElement.KeepAliveEnabled
  fullName: HttpTransportBindingElement.KeepAliveEnabled
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: LegacyExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  fullName: HttpTransportBindingElement.LegacyExtendedProtectionPolicy
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: MaxBufferSize
  nameWithType: HttpTransportBindingElement.MaxBufferSize
  fullName: HttpTransportBindingElement.MaxBufferSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: MaxPendingAccepts
  nameWithType: HttpTransportBindingElement.MaxPendingAccepts
  fullName: HttpTransportBindingElement.MaxPendingAccepts
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MessageHandlerFactory
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: MessageHandlerFactory
  nameWithType: HttpTransportBindingElement.MessageHandlerFactory
  fullName: HttpTransportBindingElement.MessageHandlerFactory
- uid: System.ServiceModel.Channels.HttpMessageHandlerFactory
  parent: System.ServiceModel.Channels
  isExternal: false
  name: HttpMessageHandlerFactory
  nameWithType: HttpMessageHandlerFactory
  fullName: System.ServiceModel.Channels.HttpMessageHandlerFactory
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ProxyAddress
  nameWithType: HttpTransportBindingElement.ProxyAddress
  fullName: HttpTransportBindingElement.ProxyAddress
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ProxyAuthenticationScheme
  nameWithType: HttpTransportBindingElement.ProxyAuthenticationScheme
  fullName: HttpTransportBindingElement.ProxyAuthenticationScheme
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Realm
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: Realm
  nameWithType: HttpTransportBindingElement.Realm
  fullName: HttpTransportBindingElement.Realm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.RequestInitializationTimeout
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: RequestInitializationTimeout
  nameWithType: HttpTransportBindingElement.RequestInitializationTimeout
  fullName: HttpTransportBindingElement.RequestInitializationTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Scheme
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: Scheme
  nameWithType: HttpTransportBindingElement.Scheme
  fullName: HttpTransportBindingElement.Scheme
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ShouldSerializeExtendedProtectionPolicy()
  nameWithType: HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy()
  fullName: HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy()
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ShouldSerializeMessageHandlerFactory()
  nameWithType: HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory()
  fullName: HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory()
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeWebSocketSettings
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ShouldSerializeWebSocketSettings()
  nameWithType: HttpTransportBindingElement.ShouldSerializeWebSocketSettings()
  fullName: HttpTransportBindingElement.ShouldSerializeWebSocketSettings()
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: TransferMode
  nameWithType: HttpTransportBindingElement.TransferMode
  fullName: HttpTransportBindingElement.TransferMode
- uid: System.ServiceModel.TransferMode
  parent: System.ServiceModel
  isExternal: false
  name: TransferMode
  nameWithType: TransferMode
  fullName: System.ServiceModel.TransferMode
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: UnsafeConnectionNtlmAuthentication
  nameWithType: HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  fullName: HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UpdateAuthenticationSchemes(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: UpdateAuthenticationSchemes(BindingContext)
  nameWithType: HttpTransportBindingElement.UpdateAuthenticationSchemes(BindingContext)
  fullName: HttpTransportBindingElement.UpdateAuthenticationSchemes(BindingContext)
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: HttpTransportBindingElement.UseDefaultWebProxy
  fullName: HttpTransportBindingElement.UseDefaultWebProxy
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.WebSocketSettings
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: WebSocketSettings
  nameWithType: HttpTransportBindingElement.WebSocketSettings
  fullName: HttpTransportBindingElement.WebSocketSettings
- uid: System.ServiceModel.Channels.WebSocketTransportSettings
  parent: System.ServiceModel.Channels
  isExternal: false
  name: WebSocketTransportSettings
  nameWithType: WebSocketTransportSettings
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: HttpTransportBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: HttpTransportBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  nameWithType: HttpTransportBindingElement.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
  fullName: HttpTransportBindingElement.IWsdlExportExtension.ExportContract(WsdlExporter, WsdlContractConversionContext)
- uid: System.ServiceModel.Description.WsdlExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlExporter
  nameWithType: WsdlExporter
  fullName: System.ServiceModel.Description.WsdlExporter
- uid: System.ServiceModel.Description.WsdlContractConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlContractConversionContext
  nameWithType: WsdlContractConversionContext
  fullName: System.ServiceModel.Description.WsdlContractConversionContext
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  nameWithType: HttpTransportBindingElement.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
  fullName: HttpTransportBindingElement.IWsdlExportExtension.ExportEndpoint(WsdlExporter, WsdlEndpointConversionContext)
- uid: System.ServiceModel.Description.WsdlEndpointConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlEndpointConversionContext
  nameWithType: WsdlEndpointConversionContext
  fullName: System.ServiceModel.Description.WsdlEndpointConversionContext
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.#ctor*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: HttpTransportBindingElement
  nameWithType: HttpTransportBindingElement.HttpTransportBindingElement
  fullName: HttpTransportBindingElement.HttpTransportBindingElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: AllowCookies
  nameWithType: HttpTransportBindingElement.AllowCookies
  fullName: HttpTransportBindingElement.AllowCookies
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: AuthenticationScheme
  nameWithType: HttpTransportBindingElement.AuthenticationScheme
  fullName: HttpTransportBindingElement.AuthenticationScheme
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: HttpTransportBindingElement.BuildChannelFactory<TChannel>
  fullName: HttpTransportBindingElement.BuildChannelFactory<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: HttpTransportBindingElement.BuildChannelListener<TChannel>
  fullName: HttpTransportBindingElement.BuildChannelListener<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: HttpTransportBindingElement.BypassProxyOnLocal
  fullName: HttpTransportBindingElement.BypassProxyOnLocal
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: HttpTransportBindingElement.CanBuildChannelFactory<TChannel>
  fullName: HttpTransportBindingElement.CanBuildChannelFactory<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: HttpTransportBindingElement.CanBuildChannelListener<TChannel>
  fullName: HttpTransportBindingElement.CanBuildChannelListener<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Clone*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: Clone
  nameWithType: HttpTransportBindingElement.Clone
  fullName: HttpTransportBindingElement.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: DecompressionEnabled
  nameWithType: HttpTransportBindingElement.DecompressionEnabled
  fullName: HttpTransportBindingElement.DecompressionEnabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.ExtendedProtectionPolicy
  fullName: HttpTransportBindingElement.ExtendedProtectionPolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: HttpTransportBindingElement.GetProperty<T>
  fullName: HttpTransportBindingElement.GetProperty<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HttpTransportBindingElement.HostNameComparisonMode
  fullName: HttpTransportBindingElement.HostNameComparisonMode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: KeepAliveEnabled
  nameWithType: HttpTransportBindingElement.KeepAliveEnabled
  fullName: HttpTransportBindingElement.KeepAliveEnabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.LegacyExtendedProtectionPolicy*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: LegacyExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  fullName: HttpTransportBindingElement.LegacyExtendedProtectionPolicy
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: MaxBufferSize
  nameWithType: HttpTransportBindingElement.MaxBufferSize
  fullName: HttpTransportBindingElement.MaxBufferSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MaxPendingAccepts*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: MaxPendingAccepts
  nameWithType: HttpTransportBindingElement.MaxPendingAccepts
  fullName: HttpTransportBindingElement.MaxPendingAccepts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.MessageHandlerFactory*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: MessageHandlerFactory
  nameWithType: HttpTransportBindingElement.MessageHandlerFactory
  fullName: HttpTransportBindingElement.MessageHandlerFactory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ProxyAddress
  nameWithType: HttpTransportBindingElement.ProxyAddress
  fullName: HttpTransportBindingElement.ProxyAddress
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ProxyAuthenticationScheme
  nameWithType: HttpTransportBindingElement.ProxyAuthenticationScheme
  fullName: HttpTransportBindingElement.ProxyAuthenticationScheme
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Realm*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: Realm
  nameWithType: HttpTransportBindingElement.Realm
  fullName: HttpTransportBindingElement.Realm
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.RequestInitializationTimeout*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: RequestInitializationTimeout
  nameWithType: HttpTransportBindingElement.RequestInitializationTimeout
  fullName: HttpTransportBindingElement.RequestInitializationTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.Scheme*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: Scheme
  nameWithType: HttpTransportBindingElement.Scheme
  fullName: HttpTransportBindingElement.Scheme
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ShouldSerializeExtendedProtectionPolicy
  nameWithType: HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  fullName: HttpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ShouldSerializeMessageHandlerFactory
  nameWithType: HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory
  fullName: HttpTransportBindingElement.ShouldSerializeMessageHandlerFactory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.ShouldSerializeWebSocketSettings*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: ShouldSerializeWebSocketSettings
  nameWithType: HttpTransportBindingElement.ShouldSerializeWebSocketSettings
  fullName: HttpTransportBindingElement.ShouldSerializeWebSocketSettings
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: TransferMode
  nameWithType: HttpTransportBindingElement.TransferMode
  fullName: HttpTransportBindingElement.TransferMode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: UnsafeConnectionNtlmAuthentication
  nameWithType: HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  fullName: HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UpdateAuthenticationSchemes*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: UpdateAuthenticationSchemes
  nameWithType: HttpTransportBindingElement.UpdateAuthenticationSchemes
  fullName: HttpTransportBindingElement.UpdateAuthenticationSchemes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: HttpTransportBindingElement.UseDefaultWebProxy
  fullName: HttpTransportBindingElement.UseDefaultWebProxy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.WebSocketSettings*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: WebSocketSettings
  nameWithType: HttpTransportBindingElement.WebSocketSettings
  fullName: HttpTransportBindingElement.WebSocketSettings
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: HttpTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  fullName: HttpTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IWsdlExportExtension.ExportContract
  nameWithType: HttpTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportContract
  fullName: HttpTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportContract
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint*
  parent: System.ServiceModel.Channels.HttpTransportBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint
  nameWithType: HttpTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint
  fullName: HttpTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/HttpTransportBindingElement.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.TransportBindingElement.ManualAddressing
  parent: System.ServiceModel.Channels.TransportBindingElement
  isExternal: false
  name: ManualAddressing
  nameWithType: TransportBindingElement.ManualAddressing
  fullName: TransportBindingElement.ManualAddressing
- uid: System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize
  parent: System.ServiceModel.Channels.TransportBindingElement
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: TransportBindingElement.MaxBufferPoolSize
  fullName: TransportBindingElement.MaxBufferPoolSize
- uid: System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize
  parent: System.ServiceModel.Channels.TransportBindingElement
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: TransportBindingElement.MaxReceivedMessageSize
  fullName: TransportBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Description.IPolicyExportExtension
  parent: System.ServiceModel.Description
  isExternal: false
  name: IPolicyExportExtension
  nameWithType: IPolicyExportExtension
  fullName: System.ServiceModel.Description.IPolicyExportExtension
- uid: System.ServiceModel.Description.IWsdlExportExtension
  parent: System.ServiceModel.Description
  isExternal: false
  name: IWsdlExportExtension
  nameWithType: IWsdlExportExtension
  fullName: System.ServiceModel.Description.IWsdlExportExtension
