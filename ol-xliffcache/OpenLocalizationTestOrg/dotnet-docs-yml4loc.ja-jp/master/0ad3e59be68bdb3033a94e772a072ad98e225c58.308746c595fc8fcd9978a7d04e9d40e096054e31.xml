{"nodes":[{"content":"Defines the constraints set on a certificate. This class cannot be inherited.","nodes":[{"pos":[0,77],"content":"Defines the constraints set on a certificate. This class cannot be inherited.","nodes":[{"content":"Defines the constraints set on a certificate. This class cannot be inherited.","pos":[0,77],"nodes":[{"content":"Defines the constraints set on a certificate.","pos":[0,45]},{"content":"This class cannot be inherited.","pos":[46,77]}]}]}],"pos":[1442,1520],"yaml":true},{"content":"This class provides properties that define the basic constraints set on a certificate.","nodes":[{"pos":[0,86],"content":"This class provides properties that define the basic constraints set on a certificate.","nodes":[{"content":"This class provides properties that define the basic constraints set on a certificate.","pos":[0,86]}]}],"pos":[1531,1618],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class."}],"pos":[4908,5046],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object and a value that identifies whether the extension is critical.","nodes":[{"pos":[0,280],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"&gt;&lt;/xref&gt;</ph> class using an <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.AsnEncodedData\"&gt;&lt;/xref&gt;</ph> object and a value that identifies whether the extension is critical.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object and a value that identifies whether the extension is critical."}],"pos":[7949,8230],"yaml":true},{"content":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.","nodes":[{"pos":[0,138],"content":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.","nodes":[{"content":"Use this constructor if the information to create an extension is already in an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AsnEncodedData&gt;</ph> object.","pos":[0,138],"source":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object."}]}],"pos":[8241,8380],"yaml":true,"extradata":"MT"},{"content":"The encoded data to use to create the extension.","nodes":[{"pos":[0,48],"content":"The encoded data to use to create the extension.","nodes":[{"content":"The encoded data to use to create the extension.","pos":[0,48]}]}],"pos":[8651,8700],"yaml":true},{"content":"`true` if the extension is critical; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the extension is critical; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the extension is critical; otherwise, `false`."}],"pos":[8765,8824],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class. Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.","nodes":[{"pos":[0,467],"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class. Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,137],"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class."},{"content":"Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.","pos":[138,467]}]}],"pos":[10841,11309],"yaml":true},{"content":"`true` if the certificate is a certificate authority (CA) certificate; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the certificate is a certificate authority (CA) certificate; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the certificate is a certificate authority (CA) certificate; otherwise, `false`."}],"pos":[11562,11655],"yaml":true},{"content":"`true` if the certificate has a restriction on the number of path levels it allows; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if the certificate has a restriction on the number of path levels it allows; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the certificate has a restriction on the number of path levels it allows; otherwise, `false`."}],"pos":[11735,11841],"yaml":true},{"content":"The number of levels allowed in a certificate's path.","nodes":[{"pos":[0,53],"content":"The number of levels allowed in a certificate's path.","nodes":[{"content":"The number of levels allowed in a certificate's path.","pos":[0,53]}]}],"pos":[11916,11970],"yaml":true},{"content":"`true` if the extension is critical; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the extension is critical; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the extension is critical; otherwise, `false`."}],"pos":[12035,12094],"yaml":true},{"content":"Gets a value indicating whether a certificate is a certificate authority (CA) certificate.","nodes":[{"pos":[0,90],"content":"Gets a value indicating whether a certificate is a certificate authority (CA) certificate.","nodes":[{"content":"Gets a value indicating whether a certificate is a certificate authority (CA) certificate.","pos":[0,90]}]}],"pos":[13845,13936],"yaml":true},{"content":"Use this property to determine if the certificate is a certificate authority (CA) certificate.","nodes":[{"pos":[0,94],"content":"Use this property to determine if the certificate is a certificate authority (CA) certificate.","nodes":[{"content":"Use this property to determine if the certificate is a certificate authority (CA) certificate.","pos":[0,94]}]}],"pos":[13947,14042],"yaml":true,"extradata":"MT"},{"content":"`true` if the certificate is a certificate authority (CA) certificate, otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the certificate is a certificate authority (CA) certificate, otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the certificate is a certificate authority (CA) certificate, otherwise, `false`."}],"pos":[14978,15071],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object.","nodes":[{"pos":[0,218],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"&gt;&lt;/xref&gt;</ph> class using an <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.AsnEncodedData\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object."}],"pos":[16946,17165],"yaml":true},{"content":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.","nodes":[{"pos":[0,138],"content":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.","nodes":[{"content":"Use this constructor if the information to create an extension is already in an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AsnEncodedData&gt;</ph> object.","pos":[0,138],"source":"Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object."}]}],"pos":[17176,17315],"yaml":true,"extradata":"MT"},{"content":"The encoded data to use to create the extension.","nodes":[{"pos":[0,48],"content":"The encoded data to use to create the extension.","nodes":[{"content":"The encoded data to use to create the extension.","pos":[0,48]}]}],"pos":[17546,17595],"yaml":true},{"content":"Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.","nodes":[{"pos":[0,103],"content":"Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.","nodes":[{"content":"Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.","pos":[0,103]}]}],"pos":[19367,19471],"yaml":true},{"content":"A certificate issuer can restrict the number of levels in a certificate path. This property indicates whether the certificate has this restriction. If this value is `true`, you can use the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> property to determine the number of levels allowed.","nodes":[{"pos":[0,347],"content":"A certificate issuer can restrict the number of levels in a certificate path. This property indicates whether the certificate has this restriction. If this value is `true`, you can use the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> property to determine the number of levels allowed.","nodes":[{"content":"A certificate issuer can restrict the number of levels in a certificate path.","pos":[0,77]},{"content":"This property indicates whether the certificate has this restriction.","pos":[78,147]},{"content":"If this value is <ph id=\"ph1\">`true`</ph>, you can use the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A&gt;</ph> property to determine the number of levels allowed.","pos":[148,347],"source":" If this value is `true`, you can use the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> property to determine the number of levels allowed."}]}],"pos":[19482,19830],"yaml":true,"extradata":"MT"},{"content":"`true` if the certificate has a restriction on the number of path levels it allows, otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if the certificate has a restriction on the number of path levels it allows, otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the certificate has a restriction on the number of path levels it allows, otherwise, `false`."}],"pos":[20769,20875],"yaml":true},{"content":"The extension cannot be decoded.","nodes":[{"pos":[0,32],"content":"The extension cannot be decoded.","nodes":[{"content":"The extension cannot be decoded.","pos":[0,32]}]}],"pos":[21150,21183],"yaml":true},{"content":"Gets the number of levels allowed in a certificate's path.","nodes":[{"pos":[0,58],"content":"Gets the number of levels allowed in a certificate's path.","nodes":[{"content":"Gets the number of levels allowed in a certificate's path.","pos":[0,58]}]}],"pos":[22822,22881],"yaml":true},{"content":"If a certificate has a constraint on the number of path levels it allows, this property indicates how many levels are allowed.","nodes":[{"pos":[0,126],"content":"If a certificate has a constraint on the number of path levels it allows, this property indicates how many levels are allowed.","nodes":[{"content":"If a certificate has a constraint on the number of path levels it allows, this property indicates how many levels are allowed.","pos":[0,126]}]}],"pos":[22892,23019],"yaml":true,"extradata":"MT"},{"content":"An integer indicating the number of levels allowed in a certificate's path.","nodes":[{"pos":[0,75],"content":"An integer indicating the number of levels allowed in a certificate's path.","nodes":[{"content":"An integer indicating the number of levels allowed in a certificate's path.","pos":[0,75]}]}],"pos":[23952,24028],"yaml":true},{"content":"The extension cannot be decoded.","nodes":[{"pos":[0,32],"content":"The extension cannot be decoded.","nodes":[{"content":"The extension cannot be decoded.","pos":[0,32]}]}],"pos":[24300,24333],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  commentId: T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  id: X509BasicConstraintsExtension\n  children:\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n  langs:\n  - csharp\n  name: X509BasicConstraintsExtension\n  nameWithType: X509BasicConstraintsExtension\n  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Defines the constraints set on a certificate. This class cannot be inherited.\n  remarks: This class provides properties that define the basic constraints set on a certificate.\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]\"\n  syntax:\n    content: 'public sealed class X509BasicConstraintsExtension : System.Security.Cryptography.X509Certificates.X509Extension'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsnEncodedData\n  - System.Security.Cryptography.X509Certificates.X509Extension\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)\n  - System.Security.Cryptography.AsnEncodedData.Oid\n  - System.Security.Cryptography.AsnEncodedData.RawData\n  - System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor\n  commentId: M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: X509BasicConstraintsExtension()\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension()\n  fullName: X509BasicConstraintsExtension.X509BasicConstraintsExtension()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]\"\n  syntax:\n    content: public X509BasicConstraintsExtension ();\n    parameters: []\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  id: '#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)'\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: X509BasicConstraintsExtension(AsnEncodedData, Boolean)\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData, Boolean)\n  fullName: X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object and a value that identifies whether the extension is critical.\n  remarks: Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.\n  syntax:\n    content: public X509BasicConstraintsExtension (System.Security.Cryptography.AsnEncodedData encodedBasicConstraints, bool critical);\n    parameters:\n    - id: encodedBasicConstraints\n      type: System.Security.Cryptography.AsnEncodedData\n      description: The encoded data to use to create the extension.\n    - id: critical\n      type: System.Boolean\n      description: '`true` if the extension is critical; otherwise, `false`.'\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)\n  id: '#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)'\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: X509BasicConstraintsExtension(Boolean, Boolean, Int32, Boolean)\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean, Boolean, Int32, Boolean)\n  fullName: X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean, Boolean, Int32, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class. Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.\n  syntax:\n    content: public X509BasicConstraintsExtension (bool certificateAuthority, bool hasPathLengthConstraint, int pathLengthConstraint, bool critical);\n    parameters:\n    - id: certificateAuthority\n      type: System.Boolean\n      description: '`true` if the certificate is a certificate authority (CA) certificate; otherwise, `false`.'\n    - id: hasPathLengthConstraint\n      type: System.Boolean\n      description: '`true` if the certificate has a restriction on the number of path levels it allows; otherwise, `false`.'\n    - id: pathLengthConstraint\n      type: System.Int32\n      description: The number of levels allowed in a certificate's path.\n    - id: critical\n      type: System.Boolean\n      description: '`true` if the extension is critical; otherwise, `false`.'\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n  commentId: P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n  id: CertificateAuthority\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: CertificateAuthority\n  nameWithType: X509BasicConstraintsExtension.CertificateAuthority\n  fullName: X509BasicConstraintsExtension.CertificateAuthority\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets a value indicating whether a certificate is a certificate authority (CA) certificate.\n  remarks: Use this property to determine if the certificate is a certificate authority (CA) certificate.\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]\"\n  syntax:\n    content: public bool CertificateAuthority { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the certificate is a certificate authority (CA) certificate, otherwise, `false`.'\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  id: CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: CopyFrom(AsnEncodedData)\n  nameWithType: X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)\n  fullName: X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\"></xref> object.\n  remarks: Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.\n  syntax:\n    content: public override void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);\n    parameters:\n    - id: asnEncodedData\n      type: System.Security.Cryptography.AsnEncodedData\n      description: The encoded data to use to create the extension.\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n  commentId: P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n  id: HasPathLengthConstraint\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: HasPathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.HasPathLengthConstraint\n  fullName: X509BasicConstraintsExtension.HasPathLengthConstraint\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.\n  remarks: A certificate issuer can restrict the number of levels in a certificate path. This property indicates whether the certificate has this restriction. If this value is `true`, you can use the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> property to determine the number of levels allowed.\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]\"\n  syntax:\n    content: public bool HasPathLengthConstraint { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the certificate has a restriction on the number of path levels it allows, otherwise, `false`.'\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The extension cannot be decoded.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n  commentId: P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n  id: PathLengthConstraint\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  langs:\n  - csharp\n  name: PathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.PathLengthConstraint\n  fullName: X509BasicConstraintsExtension.PathLengthConstraint\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets the number of levels allowed in a certificate's path.\n  remarks: If a certificate has a constraint on the number of path levels it allows, this property indicates how many levels are allowed.\n  example:\n  - \"The following code example demonstrates how to open a user’s personal certificate store and display information about each certificate in the store.  This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]\"\n  syntax:\n    content: public int PathLengthConstraint { get; }\n    return:\n      type: System.Int32\n      description: An integer indicating the number of levels allowed in a certificate's path.\n  overload: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The extension cannot be decoded.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.X509Certificates.X509Extension\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Extension\n  nameWithType: X509Extension\n  fullName: System.Security.Cryptography.X509Certificates.X509Extension\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: X509BasicConstraintsExtension()\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension()\n  fullName: X509BasicConstraintsExtension.X509BasicConstraintsExtension()\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: X509BasicConstraintsExtension(AsnEncodedData, Boolean)\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData, Boolean)\n  fullName: X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData, Boolean)\n- uid: System.Security.Cryptography.AsnEncodedData\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsnEncodedData\n  nameWithType: AsnEncodedData\n  fullName: System.Security.Cryptography.AsnEncodedData\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: X509BasicConstraintsExtension(Boolean, Boolean, Int32, Boolean)\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean, Boolean, Int32, Boolean)\n  fullName: X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean, Boolean, Int32, Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: CertificateAuthority\n  nameWithType: X509BasicConstraintsExtension.CertificateAuthority\n  fullName: X509BasicConstraintsExtension.CertificateAuthority\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: CopyFrom(AsnEncodedData)\n  nameWithType: X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)\n  fullName: X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: HasPathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.HasPathLengthConstraint\n  fullName: X509BasicConstraintsExtension.HasPathLengthConstraint\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: PathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.PathLengthConstraint\n  fullName: X509BasicConstraintsExtension.PathLengthConstraint\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: X509BasicConstraintsExtension\n  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension\n  fullName: X509BasicConstraintsExtension.X509BasicConstraintsExtension\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: CertificateAuthority\n  nameWithType: X509BasicConstraintsExtension.CertificateAuthority\n  fullName: X509BasicConstraintsExtension.CertificateAuthority\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: CopyFrom\n  nameWithType: X509BasicConstraintsExtension.CopyFrom\n  fullName: X509BasicConstraintsExtension.CopyFrom\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: HasPathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.HasPathLengthConstraint\n  fullName: X509BasicConstraintsExtension.HasPathLengthConstraint\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint*\n  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\n  isExternal: false\n  name: PathLengthConstraint\n  nameWithType: X509BasicConstraintsExtension.PathLengthConstraint\n  fullName: X509BasicConstraintsExtension.PathLengthConstraint\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509BasicConstraintsExtension.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)\n  parent: System.Security.Cryptography.AsnEncodedData\n  isExternal: false\n  name: Format(Boolean)\n  nameWithType: AsnEncodedData.Format(Boolean)\n  fullName: AsnEncodedData.Format(Boolean)\n- uid: System.Security.Cryptography.AsnEncodedData.Oid\n  parent: System.Security.Cryptography.AsnEncodedData\n  isExternal: false\n  name: Oid\n  nameWithType: AsnEncodedData.Oid\n  fullName: AsnEncodedData.Oid\n- uid: System.Security.Cryptography.AsnEncodedData.RawData\n  parent: System.Security.Cryptography.AsnEncodedData\n  isExternal: false\n  name: RawData\n  nameWithType: AsnEncodedData.RawData\n  fullName: AsnEncodedData.RawData\n- uid: System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  parent: System.Security.Cryptography.X509Certificates.X509Extension\n  isExternal: false\n  name: Critical\n  nameWithType: X509Extension.Critical\n  fullName: X509Extension.Critical\n"}