### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs
  commentId: T:System.Diagnostics.Contracts.ContractFailedEventArgs
  id: ContractFailedEventArgs
  children:
  - System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  - System.Diagnostics.Contracts.ContractFailedEventArgs.Condition
  - System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind
  - System.Diagnostics.Contracts.ContractFailedEventArgs.Handled
  - System.Diagnostics.Contracts.ContractFailedEventArgs.Message
  - System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException
  - System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled
  - System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind
  - System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind
  langs:
  - csharp
  name: ContractFailedEventArgs
  nameWithType: ContractFailedEventArgs
  fullName: System.Diagnostics.Contracts.ContractFailedEventArgs
  type: Class
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Provides methods and data for the <xref href="System.Diagnostics.Contracts.Contract.ContractFailed"></xref> event.
  remarks: A <xref:System.Diagnostics.Contracts.ContractFailedEventArgs> object is passed to the <xref:System.Diagnostics.Contracts.Contract.ContractFailed?displayProperty=fullName> event when a contract fails. The <xref:System.Diagnostics.Contracts.Contract.ContractFailed> event enables a managed application environment such as an interactive interpreter, a Web browser host, a test harness, or a logging infrastructure to be notified of contract failures. The event requires full trust.
  syntax:
    content: 'public sealed class ContractFailedEventArgs : EventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  id: '#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)'
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: ContractFailedEventArgs(ContractFailureKind, String, String, Exception)
  nameWithType: ContractFailedEventArgs.ContractFailedEventArgs(ContractFailureKind, String, String, Exception)
  fullName: ContractFailedEventArgs.ContractFailedEventArgs(ContractFailureKind, String, String, Exception)
  type: Constructor
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Provides data for the <xref href="System.Diagnostics.Contracts.Contract.ContractFailed"></xref> event.
  syntax:
    content: public ContractFailedEventArgs (System.Diagnostics.Contracts.ContractFailureKind failureKind, string message, string condition, Exception originalException);
    parameters:
    - id: failureKind
      type: System.Diagnostics.Contracts.ContractFailureKind
      description: One of the enumeration values that specifies the contract that failed.
    - id: message
      type: System.String
      description: The message for the event.
    - id: condition
      type: System.String
      description: The condition for the event.
    - id: originalException
      type: System.Exception
      description: The exception that caused the event.
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Condition
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Condition
  id: Condition
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: Condition
  nameWithType: ContractFailedEventArgs.Condition
  fullName: ContractFailedEventArgs.Condition
  type: Property
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Gets the condition for the failure of the contract.
  syntax:
    content: public string Condition { get; }
    return:
      type: System.String
      description: The condition for the failure.
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.Condition*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind
  id: FailureKind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: FailureKind
  nameWithType: ContractFailedEventArgs.FailureKind
  fullName: ContractFailedEventArgs.FailureKind
  type: Property
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Gets the type of contract that failed.
  syntax:
    content: public System.Diagnostics.Contracts.ContractFailureKind FailureKind { get; }
    return:
      type: System.Diagnostics.Contracts.ContractFailureKind
      description: One of the enumeration values that specifies the type of contract that failed.
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Handled
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Handled
  id: Handled
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: ContractFailedEventArgs.Handled
  fullName: ContractFailedEventArgs.Handled
  type: Property
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Indicates whether the <xref href="System.Diagnostics.Contracts.Contract.ContractFailed"></xref> event has been handled.
  remarks: If the <xref:System.Diagnostics.Contracts.Contract.ContractFailed?displayProperty=fullName> event has not been handled, the debugger is notified. If no debugger is attached, an **Assert** dialog box is displayed.
  syntax:
    content: public bool Handled { get; }
    return:
      type: System.Boolean
      description: '`true` if the event has been handled; otherwise, `false`.'
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.Handled*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Message
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Message
  id: Message
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: Message
  nameWithType: ContractFailedEventArgs.Message
  fullName: ContractFailedEventArgs.Message
  type: Property
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Gets the message that describes the <xref href="System.Diagnostics.Contracts.Contract.ContractFailed"></xref> event.
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: The message that describes the event.
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.Message*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException
  id: OriginalException
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: OriginalException
  nameWithType: ContractFailedEventArgs.OriginalException
  fullName: ContractFailedEventArgs.OriginalException
  type: Property
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Gets the original exception that caused the <xref href="System.Diagnostics.Contracts.Contract.ContractFailed"></xref> event.
  syntax:
    content: public Exception OriginalException { get; }
    return:
      type: System.Exception
      description: The exception that caused the event.
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled
  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled
  id: SetHandled
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: SetHandled()
  nameWithType: ContractFailedEventArgs.SetHandled()
  fullName: ContractFailedEventArgs.SetHandled()
  type: Method
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Sets the <xref href="System.Diagnostics.Contracts.ContractFailedEventArgs.Handled"></xref> property to `true`.
  remarks: The <xref:System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled%2A> method provides a way for the runtime analysis checker to indicate that a contract exception has been handled. See the <xref:System.Diagnostics.Contracts.ContractFailedEventArgs.Handled%2A?displayProperty=fullName> property for more information.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void SetHandled ();
    parameters: []
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind
  commentId: M:System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind
  id: SetUnwind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: SetUnwind()
  nameWithType: ContractFailedEventArgs.SetUnwind()
  fullName: ContractFailedEventArgs.SetUnwind()
  type: Method
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Sets the <xref href="System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind"></xref> property to `true`.
  remarks: The <xref:System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind%2A> method provides a way to indicate that the escalation policy for the code contract should be applied. See the <xref:System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind%2A?displayProperty=fullName> property for more information.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void SetUnwind ();
    parameters: []
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind
  commentId: P:System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind
  id: Unwind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  langs:
  - csharp
  name: Unwind
  nameWithType: ContractFailedEventArgs.Unwind
  fullName: ContractFailedEventArgs.Unwind
  type: Property
  assemblies:
  - System.Diagnostics.Contracts
  - mscorlib
  - netstandard
  namespace: System.Diagnostics.Contracts
  summary: Indicates whether the code contract escalation policy should be applied.
  remarks: "If the return value is `true`, the escalation policy is to notify the attached debugger about a contract failure or to display an **Assert** dialog box if a debugger is not attached.  \n  \n> [!WARNING]\n>  This value should be set to `false` for analysis tools that run on a server (for example, ASP.NET)."
  syntax:
    content: public bool Unwind { get; }
    return:
      type: System.Boolean
      description: '`true` to apply the escalation policy; otherwise, `false`. The default is `false`.'
  overload: System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: ContractFailedEventArgs(ContractFailureKind, String, String, Exception)
  nameWithType: ContractFailedEventArgs.ContractFailedEventArgs(ContractFailureKind, String, String, Exception)
  fullName: ContractFailedEventArgs.ContractFailedEventArgs(ContractFailureKind, String, String, Exception)
- uid: System.Diagnostics.Contracts.ContractFailureKind
  parent: System.Diagnostics.Contracts
  isExternal: false
  name: ContractFailureKind
  nameWithType: ContractFailureKind
  fullName: System.Diagnostics.Contracts.ContractFailureKind
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Condition
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: Condition
  nameWithType: ContractFailedEventArgs.Condition
  fullName: ContractFailedEventArgs.Condition
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: FailureKind
  nameWithType: ContractFailedEventArgs.FailureKind
  fullName: ContractFailedEventArgs.FailureKind
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Handled
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: Handled
  nameWithType: ContractFailedEventArgs.Handled
  fullName: ContractFailedEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Message
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: Message
  nameWithType: ContractFailedEventArgs.Message
  fullName: ContractFailedEventArgs.Message
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: OriginalException
  nameWithType: ContractFailedEventArgs.OriginalException
  fullName: ContractFailedEventArgs.OriginalException
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: SetHandled()
  nameWithType: ContractFailedEventArgs.SetHandled()
  fullName: ContractFailedEventArgs.SetHandled()
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: SetUnwind()
  nameWithType: ContractFailedEventArgs.SetUnwind()
  fullName: ContractFailedEventArgs.SetUnwind()
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: Unwind
  nameWithType: ContractFailedEventArgs.Unwind
  fullName: ContractFailedEventArgs.Unwind
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.#ctor*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: ContractFailedEventArgs
  nameWithType: ContractFailedEventArgs.ContractFailedEventArgs
  fullName: ContractFailedEventArgs.ContractFailedEventArgs
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Condition*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: Condition
  nameWithType: ContractFailedEventArgs.Condition
  fullName: ContractFailedEventArgs.Condition
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.FailureKind*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: FailureKind
  nameWithType: ContractFailedEventArgs.FailureKind
  fullName: ContractFailedEventArgs.FailureKind
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Handled*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: Handled
  nameWithType: ContractFailedEventArgs.Handled
  fullName: ContractFailedEventArgs.Handled
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Message*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: Message
  nameWithType: ContractFailedEventArgs.Message
  fullName: ContractFailedEventArgs.Message
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.OriginalException*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: OriginalException
  nameWithType: ContractFailedEventArgs.OriginalException
  fullName: ContractFailedEventArgs.OriginalException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: SetHandled
  nameWithType: ContractFailedEventArgs.SetHandled
  fullName: ContractFailedEventArgs.SetHandled
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: SetUnwind
  nameWithType: ContractFailedEventArgs.SetUnwind
  fullName: ContractFailedEventArgs.SetUnwind
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Diagnostics.Contracts.ContractFailedEventArgs.Unwind*
  parent: System.Diagnostics.Contracts.ContractFailedEventArgs
  isExternal: false
  name: Unwind
  nameWithType: ContractFailedEventArgs.Unwind
  fullName: ContractFailedEventArgs.Unwind
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractFailedEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
