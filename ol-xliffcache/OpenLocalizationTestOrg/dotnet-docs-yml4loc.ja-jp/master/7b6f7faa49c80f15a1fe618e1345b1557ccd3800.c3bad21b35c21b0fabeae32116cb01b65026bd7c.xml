{"nodes":[{"content":"Enables you to set contract and tool options at assembly, type, or method granularity.","nodes":[{"pos":[0,86],"content":"Enables you to set contract and tool options at assembly, type, or method granularity.","nodes":[{"content":"Enables you to set contract and tool options at assembly, type, or method granularity.","pos":[0,86]}]}],"pos":[978,1065],"yaml":true},{"content":"The following table shows the currently supported options.  \n  \n|Category|Setting|Value/effect|  \n|--------------|-------------|-------------------|  \n|contract|inheritance|`true` to turn contract inheritance on; `false` to turn it off.  The default is `true`.|  \n|runtime|checking|`true` to turn run-time checking on; `false` to turn it off. The default is `true`.|  \n  \n You can use this attribute as illustrated in the following examples.  \n  \n To turn off run-time checking for the entire assembly:  \n  \n```  \n[assembly:ContractOption(\"runtime\", \"checking\", false)]  \n```  \n  \n To turn run-time contract checking on for a specific type:  \n  \n```  \n   [ContractOption(\"runtime\", \"checking\", true)]  \n   class TypeWithRuntimeChecking {  \n  \n       ...  \n  \n```  \n  \n To turn run-time checking off for a specific method:  \n  \n```  \n// Turn off all contract inheritance from interface IList<T>  \n[ContractOption(\"contract\", \"inheritance\", false)]  \nclass MyConcurrentList<T> : IList<T> {  \n   ...  \n}  \n  \n[ContractOption(\"runtime\", \"checking\", false)]  \npublic override MyMethod(int x) {  \n   // no inherited contracts checked at runtime,  \n   // no invariants checked at runtime.  \n   ...  \n}  \n  \n       [ContractOption(\"runtime\", \"checking\", false)]  \n       public void MethodWithoutRuntimeChecking(...) {  \n          ...  \n       }  \n   }  \n  \n```","nodes":[{"pos":[0,58],"content":"The following table shows the currently supported options.","nodes":[{"content":"The following table shows the currently supported options.","pos":[0,58]}]},{"pos":[65,73],"content":"Category","nodes":[{"content":"Category","pos":[0,8]}]},{"pos":[74,81],"content":"Setting","nodes":[{"content":"Setting","pos":[0,7]}]},{"pos":[82,94],"content":"Value/effect","nodes":[{"content":"Value/effect","pos":[0,12]}]},{"pos":[152,160],"content":"contract","nodes":[{"content":"contract","pos":[0,8]}]},{"pos":[161,172],"content":"inheritance","nodes":[{"content":"inheritance","pos":[0,11]}]},{"pos":[173,260],"content":"`true` to turn contract inheritance on; `false` to turn it off.  The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to turn contract inheritance on; <ph id=\"ph2\">`false`</ph> to turn it off.","pos":[0,63],"source":"`true` to turn contract inheritance on; `false` to turn it off."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[65,87],"source":"  The default is `true`."}]},{"pos":[265,272],"content":"runtime","nodes":[{"content":"runtime","pos":[0,7]}]},{"pos":[273,281],"content":"checking","nodes":[{"content":"checking","pos":[0,8]}]},{"pos":[282,365],"content":"`true` to turn run-time checking on; `false` to turn it off. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to turn run-time checking on; <ph id=\"ph2\">`false`</ph> to turn it off.","pos":[0,60],"source":"`true` to turn run-time checking on; `false` to turn it off."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[61,83],"source":" The default is `true`."}]},{"pos":[373,441],"content":"You can use this attribute as illustrated in the following examples.","nodes":[{"content":"You can use this attribute as illustrated in the following examples.","pos":[0,68]}]},{"pos":[448,502],"content":"To turn off run-time checking for the entire assembly:","nodes":[{"content":"To turn off run-time checking for the entire assembly:","pos":[0,54]}]},{"pos":[582,640],"content":"To turn run-time contract checking on for a specific type:","nodes":[{"content":"To turn run-time contract checking on for a specific type:","pos":[0,58]}]},{"pos":[769,821],"content":"To turn run-time checking off for a specific method:","nodes":[{"content":"To turn run-time checking off for a specific method:","pos":[0,52]}]}],"pos":[1076,2499],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Contracts.ContractOptionAttribute\"></xref> class by using the provided category, setting, and enable/disable value.","nodes":[{"pos":[0,180],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Contracts.ContractOptionAttribute\"&gt;&lt;/xref&gt;</ph> class by using the provided category, setting, and enable/disable value.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Contracts.ContractOptionAttribute\"></xref> class by using the provided category, setting, and enable/disable value."}],"pos":[8120,8301],"yaml":true},{"content":"The category for the option to be set.","nodes":[{"pos":[0,38],"content":"The category for the option to be set.","nodes":[{"content":"The category for the option to be set.","pos":[0,38]}]}],"pos":[8484,8523],"yaml":true},{"content":"The option setting.","nodes":[{"pos":[0,19],"content":"The option setting.","nodes":[{"content":"The option setting.","pos":[0,19]}]}],"pos":[8586,8606],"yaml":true},{"content":"`true` to enable the option; `false` to disable the option.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> to enable the option; <ph id=\"ph2\">`false`</ph> to disable the option.","source":"`true` to enable the option; `false` to disable the option."}],"pos":[8670,8732],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Contracts.ContractOptionAttribute\"></xref> class by using the provided category, setting, and value.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Contracts.ContractOptionAttribute\"&gt;&lt;/xref&gt;</ph> class by using the provided category, setting, and value.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Contracts.ContractOptionAttribute\"></xref> class by using the provided category, setting, and value."}],"pos":[10377,10543],"yaml":true},{"content":"There are only two category/setting options, and they can be set by either of the constructor overloads. You can use this overload with the same settings as the <xref:System.Diagnostics.Contracts.ContractOptionAttribute.%23ctor%28System.String%2CSystem.String%2CSystem.Boolean%29> overload by specifying \"true\" or \"false\" in string format; for example:  \n  \n```  \n[ContractOption(\"contract\", \"inheritance\", \"false\")]  \nclass MyConcurrentList<T> : IList<T> {  \n   ...  \n}  \n  \n```","nodes":[{"pos":[0,352],"content":"There are only two category/setting options, and they can be set by either of the constructor overloads. You can use this overload with the same settings as the <xref:System.Diagnostics.Contracts.ContractOptionAttribute.%23ctor%28System.String%2CSystem.String%2CSystem.Boolean%29> overload by specifying \"true\" or \"false\" in string format; for example:","nodes":[{"content":"There are only two category/setting options, and they can be set by either of the constructor overloads. You can use this overload with the same settings as the <xref:System.Diagnostics.Contracts.ContractOptionAttribute.%23ctor%28System.String%2CSystem.String%2CSystem.Boolean%29> overload by specifying \"true\" or \"false\" in string format; for example:","pos":[0,352],"nodes":[{"content":"There are only two category/setting options, and they can be set by either of the constructor overloads.","pos":[0,104]},{"content":"You can use this overload with the same settings as the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Contracts.ContractOptionAttribute.%23ctor%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload by specifying \"true\" or \"false\" in string format; for example:","pos":[105,352],"source":" You can use this overload with the same settings as the <xref:System.Diagnostics.Contracts.ContractOptionAttribute.%23ctor%28System.String%2CSystem.String%2CSystem.Boolean%29> overload by specifying \"true\" or \"false\" in string format; for example:"}]}]}],"pos":[10554,11054],"yaml":true,"extradata":"MT"},{"content":"The category of the option to be set.","nodes":[{"pos":[0,37],"content":"The category of the option to be set.","nodes":[{"content":"The category of the option to be set.","pos":[0,37]}]}],"pos":[11237,11275],"yaml":true},{"content":"The option setting.","nodes":[{"pos":[0,19],"content":"The option setting.","nodes":[{"content":"The option setting.","pos":[0,19]}]}],"pos":[11338,11358],"yaml":true},{"content":"The value for the setting.","nodes":[{"pos":[0,26],"content":"The value for the setting.","nodes":[{"content":"The value for the setting.","pos":[0,26]}]}],"pos":[11419,11446],"yaml":true},{"content":"Gets the category of the option.","nodes":[{"pos":[0,32],"content":"Gets the category of the option.","nodes":[{"content":"Gets the category of the option.","pos":[0,32]}]}],"pos":[12849,12882],"yaml":true},{"content":"The category of the option.","nodes":[{"pos":[0,27],"content":"The category of the option.","nodes":[{"content":"The category of the option.","pos":[0,27]}]}],"pos":[12994,13022],"yaml":true},{"content":"Determines if an option is enabled.","nodes":[{"pos":[0,35],"content":"Determines if an option is enabled.","nodes":[{"content":"Determines if an option is enabled.","pos":[0,35]}]}],"pos":[14422,14458],"yaml":true},{"content":"`true` if the option is enabled; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if the option is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the option is enabled; otherwise, `false`."}],"pos":[14568,14623],"yaml":true},{"content":"Gets the setting for the option.","nodes":[{"pos":[0,32],"content":"Gets the setting for the option.","nodes":[{"content":"Gets the setting for the option.","pos":[0,32]}]}],"pos":[16022,16055],"yaml":true},{"content":"The setting for the option.","nodes":[{"pos":[0,27],"content":"The setting for the option.","nodes":[{"content":"The setting for the option.","pos":[0,27]}]}],"pos":[16166,16194],"yaml":true},{"content":"Gets the value for the option.","nodes":[{"pos":[0,30],"content":"Gets the value for the option.","nodes":[{"content":"Gets the value for the option.","pos":[0,30]}]}],"pos":[17581,17612],"yaml":true},{"content":"The value for the option.","nodes":[{"pos":[0,25],"content":"The value for the option.","nodes":[{"content":"The value for the option.","pos":[0,25]}]}],"pos":[17721,17747],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute\n  commentId: T:System.Diagnostics.Contracts.ContractOptionAttribute\n  id: ContractOptionAttribute\n  children:\n  - System.Diagnostics.Contracts.ContractOptionAttribute.#ctor(System.String,System.String,System.Boolean)\n  - System.Diagnostics.Contracts.ContractOptionAttribute.#ctor(System.String,System.String,System.String)\n  - System.Diagnostics.Contracts.ContractOptionAttribute.Category\n  - System.Diagnostics.Contracts.ContractOptionAttribute.Enabled\n  - System.Diagnostics.Contracts.ContractOptionAttribute.Setting\n  - System.Diagnostics.Contracts.ContractOptionAttribute.Value\n  langs:\n  - csharp\n  name: ContractOptionAttribute\n  nameWithType: ContractOptionAttribute\n  fullName: System.Diagnostics.Contracts.ContractOptionAttribute\n  type: Class\n  assemblies:\n  - System.Diagnostics.Contracts\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Contracts\n  summary: Enables you to set contract and tool options at assembly, type, or method granularity.\n  remarks: \"The following table shows the currently supported options.  \\n  \\n|Category|Setting|Value/effect|  \\n|--------------|-------------|-------------------|  \\n|contract|inheritance|`true` to turn contract inheritance on; `false` to turn it off.  The default is `true`.|  \\n|runtime|checking|`true` to turn run-time checking on; `false` to turn it off. The default is `true`.|  \\n  \\n You can use this attribute as illustrated in the following examples.  \\n  \\n To turn off run-time checking for the entire assembly:  \\n  \\n```  \\n[assembly:ContractOption(\\\"runtime\\\", \\\"checking\\\", false)]  \\n```  \\n  \\n To turn run-time contract checking on for a specific type:  \\n  \\n```  \\n   [ContractOption(\\\"runtime\\\", \\\"checking\\\", true)]  \\n   class TypeWithRuntimeChecking {  \\n  \\n       ...  \\n  \\n```  \\n  \\n To turn run-time checking off for a specific method:  \\n  \\n```  \\n// Turn off all contract inheritance from interface IList<T>  \\n[ContractOption(\\\"contract\\\", \\\"inheritance\\\", false)]  \\nclass MyConcurrentList<T> : IList<T> {  \\n   ...  \\n}  \\n  \\n[ContractOption(\\\"runtime\\\", \\\"checking\\\", false)]  \\npublic override MyMethod(int x) {  \\n   // no inherited contracts checked at runtime,  \\n   // no invariants checked at runtime.  \\n   ...  \\n}  \\n  \\n       [ContractOption(\\\"runtime\\\", \\\"checking\\\", false)]  \\n       public void MethodWithoutRuntimeChecking(...) {  \\n          ...  \\n       }  \\n   }  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=false)]\n\n      [System.Diagnostics.Conditional(\"CONTRACTS_FULL\")]\n\n      public sealed class ContractOptionAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.#ctor(System.String,System.String,System.Boolean)\n  commentId: M:System.Diagnostics.Contracts.ContractOptionAttribute.#ctor(System.String,System.String,System.Boolean)\n  id: '#ctor(System.String,System.String,System.Boolean)'\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  langs:\n  - csharp\n  name: ContractOptionAttribute(String, String, Boolean)\n  nameWithType: ContractOptionAttribute.ContractOptionAttribute(String, String, Boolean)\n  fullName: ContractOptionAttribute.ContractOptionAttribute(String, String, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.Contracts\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Contracts\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Contracts.ContractOptionAttribute\"></xref> class by using the provided category, setting, and enable/disable value.\n  syntax:\n    content: public ContractOptionAttribute (string category, string setting, bool enabled);\n    parameters:\n    - id: category\n      type: System.String\n      description: The category for the option to be set.\n    - id: setting\n      type: System.String\n      description: The option setting.\n    - id: enabled\n      type: System.Boolean\n      description: '`true` to enable the option; `false` to disable the option.'\n  overload: System.Diagnostics.Contracts.ContractOptionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Diagnostics.Contracts.ContractOptionAttribute.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  langs:\n  - csharp\n  name: ContractOptionAttribute(String, String, String)\n  nameWithType: ContractOptionAttribute.ContractOptionAttribute(String, String, String)\n  fullName: ContractOptionAttribute.ContractOptionAttribute(String, String, String)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.Contracts\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Contracts\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Contracts.ContractOptionAttribute\"></xref> class by using the provided category, setting, and value.\n  remarks: \"There are only two category/setting options, and they can be set by either of the constructor overloads. You can use this overload with the same settings as the <xref:System.Diagnostics.Contracts.ContractOptionAttribute.%23ctor%28System.String%2CSystem.String%2CSystem.Boolean%29> overload by specifying \\\"true\\\" or \\\"false\\\" in string format; for example:  \\n  \\n```  \\n[ContractOption(\\\"contract\\\", \\\"inheritance\\\", \\\"false\\\")]  \\nclass MyConcurrentList<T> : IList<T> {  \\n   ...  \\n}  \\n  \\n```\"\n  syntax:\n    content: public ContractOptionAttribute (string category, string setting, string value);\n    parameters:\n    - id: category\n      type: System.String\n      description: The category of the option to be set.\n    - id: setting\n      type: System.String\n      description: The option setting.\n    - id: value\n      type: System.String\n      description: The value for the setting.\n  overload: System.Diagnostics.Contracts.ContractOptionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Category\n  commentId: P:System.Diagnostics.Contracts.ContractOptionAttribute.Category\n  id: Category\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  langs:\n  - csharp\n  name: Category\n  nameWithType: ContractOptionAttribute.Category\n  fullName: ContractOptionAttribute.Category\n  type: Property\n  assemblies:\n  - System.Diagnostics.Contracts\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Contracts\n  summary: Gets the category of the option.\n  syntax:\n    content: public string Category { get; }\n    return:\n      type: System.String\n      description: The category of the option.\n  overload: System.Diagnostics.Contracts.ContractOptionAttribute.Category*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Enabled\n  commentId: P:System.Diagnostics.Contracts.ContractOptionAttribute.Enabled\n  id: Enabled\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: ContractOptionAttribute.Enabled\n  fullName: ContractOptionAttribute.Enabled\n  type: Property\n  assemblies:\n  - System.Diagnostics.Contracts\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Contracts\n  summary: Determines if an option is enabled.\n  syntax:\n    content: public bool Enabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the option is enabled; otherwise, `false`.'\n  overload: System.Diagnostics.Contracts.ContractOptionAttribute.Enabled*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Setting\n  commentId: P:System.Diagnostics.Contracts.ContractOptionAttribute.Setting\n  id: Setting\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  langs:\n  - csharp\n  name: Setting\n  nameWithType: ContractOptionAttribute.Setting\n  fullName: ContractOptionAttribute.Setting\n  type: Property\n  assemblies:\n  - System.Diagnostics.Contracts\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Contracts\n  summary: Gets the setting for the option.\n  syntax:\n    content: public string Setting { get; }\n    return:\n      type: System.String\n      description: The setting for the option.\n  overload: System.Diagnostics.Contracts.ContractOptionAttribute.Setting*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Value\n  commentId: P:System.Diagnostics.Contracts.ContractOptionAttribute.Value\n  id: Value\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  langs:\n  - csharp\n  name: Value\n  nameWithType: ContractOptionAttribute.Value\n  fullName: ContractOptionAttribute.Value\n  type: Property\n  assemblies:\n  - System.Diagnostics.Contracts\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Contracts\n  summary: Gets the value for the option.\n  syntax:\n    content: public string Value { get; }\n    return:\n      type: System.String\n      description: The value for the option.\n  overload: System.Diagnostics.Contracts.ContractOptionAttribute.Value*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.#ctor(System.String,System.String,System.Boolean)\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: ContractOptionAttribute(String, String, Boolean)\n  nameWithType: ContractOptionAttribute.ContractOptionAttribute(String, String, Boolean)\n  fullName: ContractOptionAttribute.ContractOptionAttribute(String, String, Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.#ctor(System.String,System.String,System.String)\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: ContractOptionAttribute(String, String, String)\n  nameWithType: ContractOptionAttribute.ContractOptionAttribute(String, String, String)\n  fullName: ContractOptionAttribute.ContractOptionAttribute(String, String, String)\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Category\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: Category\n  nameWithType: ContractOptionAttribute.Category\n  fullName: ContractOptionAttribute.Category\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Enabled\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: Enabled\n  nameWithType: ContractOptionAttribute.Enabled\n  fullName: ContractOptionAttribute.Enabled\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Setting\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: Setting\n  nameWithType: ContractOptionAttribute.Setting\n  fullName: ContractOptionAttribute.Setting\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Value\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: Value\n  nameWithType: ContractOptionAttribute.Value\n  fullName: ContractOptionAttribute.Value\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.#ctor*\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: ContractOptionAttribute\n  nameWithType: ContractOptionAttribute.ContractOptionAttribute\n  fullName: ContractOptionAttribute.ContractOptionAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Category*\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: Category\n  nameWithType: ContractOptionAttribute.Category\n  fullName: ContractOptionAttribute.Category\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Enabled*\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: Enabled\n  nameWithType: ContractOptionAttribute.Enabled\n  fullName: ContractOptionAttribute.Enabled\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Setting*\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: Setting\n  nameWithType: ContractOptionAttribute.Setting\n  fullName: ContractOptionAttribute.Setting\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n- uid: System.Diagnostics.Contracts.ContractOptionAttribute.Value*\n  parent: System.Diagnostics.Contracts.ContractOptionAttribute\n  isExternal: false\n  name: Value\n  nameWithType: ContractOptionAttribute.Value\n  fullName: ContractOptionAttribute.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Contracts/ContractOptionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}