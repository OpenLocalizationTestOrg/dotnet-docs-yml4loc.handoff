{"nodes":[{"content":"Provides HTTP content based on a stream.","nodes":[{"pos":[0,40],"content":"Provides HTTP content based on a stream.","nodes":[{"content":"Provides HTTP content based on a stream.","pos":[0,40]}]}],"pos":[787,828],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Net.Http.StreamContent\"></xref> class.","nodes":[{"pos":[0,87],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.StreamContent\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Net.Http.StreamContent\"></xref> class."}],"pos":[3181,3269],"yaml":true},{"content":"The content used to initialize the <xref href=\"System.Net.Http.StreamContent\"></xref>.","nodes":[{"pos":[0,86],"content":"The content used to initialize the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.StreamContent\"&gt;&lt;/xref&gt;</ph>.","source":"The content used to initialize the <xref href=\"System.Net.Http.StreamContent\"></xref>."}],"pos":[3423,3510],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Net.Http.StreamContent\"></xref> class.","nodes":[{"pos":[0,87],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.StreamContent\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Net.Http.StreamContent\"></xref> class."}],"pos":[5028,5116],"yaml":true},{"content":"The content used to initialize the <xref href=\"System.Net.Http.StreamContent\"></xref>.","nodes":[{"pos":[0,86],"content":"The content used to initialize the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.StreamContent\"&gt;&lt;/xref&gt;</ph>.","source":"The content used to initialize the <xref href=\"System.Net.Http.StreamContent\"></xref>."}],"pos":[5286,5373],"yaml":true},{"content":"The size, in bytes, of the buffer for the <xref href=\"System.Net.Http.StreamContent\"></xref>.","nodes":[{"pos":[0,93],"content":"The size, in bytes, of the buffer for the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.StreamContent\"&gt;&lt;/xref&gt;</ph>.","source":"The size, in bytes, of the buffer for the <xref href=\"System.Net.Http.StreamContent\"></xref>."}],"pos":[5438,5532],"yaml":true},{"content":"The <code>content</code> was `null`.","nodes":[{"pos":[0,36],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">content</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <ph id=\"ph2\">`null`</ph>.","source":"The <code>content</code> was `null`."}],"pos":[5697,5734],"yaml":true},{"content":"The <code>bufferSize</code> was less than or equal to zero.","nodes":[{"pos":[0,59],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">bufferSize</ph><ept id=\"p1\">&lt;/code&gt;</ept> was less than or equal to zero.","source":"The <code>bufferSize</code> was less than or equal to zero."}],"pos":[5848,5908],"yaml":true},{"content":"Write the HTTP stream content to a memory stream as an asynchronous operation.","nodes":[{"pos":[0,78],"content":"Write the HTTP stream content to a memory stream as an asynchronous operation.","nodes":[{"content":"Write the HTTP stream content to a memory stream as an asynchronous operation.","pos":[0,78]}]}],"pos":[7335,7414],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.  \n  \n The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream. Derived classes can override this behavior if there is a better way to retrieve the content as stream. For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)","nodes":[{"pos":[0,167],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.","pos":[0,167],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after all of the content has been written to the memory stream.","pos":[31,167],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream."}]}]},{"pos":[174,560],"content":"The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream. Derived classes can override this behavior if there is a better way to retrieve the content as stream. For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)","nodes":[{"content":"The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream. Derived classes can override this behavior if there is a better way to retrieve the content as stream. For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)","pos":[0,386],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A&gt;</ph> method buffers the content to a memory stream.","pos":[0,119],"source":"The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream."},{"content":"Derived classes can override this behavior if there is a better way to retrieve the content as stream.","pos":[120,222]},{"content":"For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <ph id=\"ph1\">&lt;xref:System.IO.MemoryStream&gt;</ph> around the bytes or string.)","pos":[223,386],"source":" For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)"}]}]}],"pos":[7425,7990],"yaml":true,"extradata":"MT"},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[8219,8276],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.StreamContent\"></xref> and optionally disposes of the managed resources.","nodes":[{"pos":[0,145],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.StreamContent\"&gt;&lt;/xref&gt;</ph> and optionally disposes of the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.StreamContent\"></xref> and optionally disposes of the managed resources."}],"pos":[9735,9881],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.StreamContent> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,526],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.StreamContent> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.When the <ph id=\"ph5\">`disposing`</ph> parameter is <ph id=\"ph6\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph7\">&lt;xref:System.Net.Http.StreamContent&gt;</ph> references.","pos":[210,456],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.StreamContent> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[457,526],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[9892,10419],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to releases only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources."}],"pos":[10574,10678],"yaml":true},{"content":"Serialize the HTTP content to a stream as an asynchronous operation.","nodes":[{"pos":[0,68],"content":"Serialize the HTTP content to a stream as an asynchronous operation.","nodes":[{"content":"Serialize the HTTP content to a stream as an asynchronous operation.","pos":[0,68]}]}],"pos":[12347,12416],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.","nodes":[{"pos":[0,166],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.","pos":[0,166],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after all of the content has been serialized to the target stream.","pos":[31,166],"source":" The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream."}]}]}],"pos":[12427,12594],"yaml":true,"extradata":"MT"},{"content":"The target stream.","nodes":[{"pos":[0,18],"content":"The target stream.","nodes":[{"content":"The target stream.","pos":[0,18]}]}],"pos":[12832,12851],"yaml":true},{"content":"Information about the transport (channel binding token, for example). This parameter may be `null`.","nodes":[{"pos":[0,99],"content":"Information about the transport (channel binding token, for example). This parameter may be `null`.","nodes":[{"content":"Information about the transport (channel binding token, for example).","pos":[0,69]},{"content":"This parameter may be <ph id=\"ph1\">`null`</ph>.","pos":[70,99],"source":" This parameter may be `null`."}]}],"pos":[12928,13028],"yaml":true},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[13099,13156],"yaml":true},{"content":"Determines whether the stream content has a valid length in bytes.","nodes":[{"pos":[0,66],"content":"Determines whether the stream content has a valid length in bytes.","nodes":[{"content":"Determines whether the stream content has a valid length in bytes.","pos":[0,66]}]}],"pos":[14654,14721],"yaml":true},{"content":"The <xref:System.Net.Http.StreamContent.TryComputeLength%2A> method gives HTTP stream content the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`. If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.","nodes":[{"pos":[0,618],"content":"The <xref:System.Net.Http.StreamContent.TryComputeLength%2A> method gives HTTP stream content the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`. If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.StreamContent.TryComputeLength%2A&gt;</ph> method gives HTTP stream content the ability to calculate the content length.","pos":[0,138],"source":"The <xref:System.Net.Http.StreamContent.TryComputeLength%2A> method gives HTTP stream content the ability to calculate the content length."},{"content":"This is useful for content types which are able to easily calculate the content length.","pos":[139,226]},{"content":"If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id=\"ph1\">`false`</ph>.","pos":[227,468],"source":" If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`."},{"content":"If this method returns <ph id=\"ph1\">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.","pos":[469,618],"source":" If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server."}]}],"pos":[14732,15351],"yaml":true,"extradata":"MT"},{"content":"The length in bytes of the stream content.","nodes":[{"pos":[0,42],"content":"The length in bytes of the stream content.","nodes":[{"content":"The length in bytes of the stream content.","pos":[0,42]}]}],"pos":[15511,15554],"yaml":true},{"content":"`true` if <code>length</code> is a valid length; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">length</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a valid length; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>length</code> is a valid length; otherwise, `false`."}],"pos":[15612,15683],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.StreamContent\n  commentId: T:System.Net.Http.StreamContent\n  id: StreamContent\n  children:\n  - System.Net.Http.StreamContent.#ctor(System.IO.Stream)\n  - System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)\n  - System.Net.Http.StreamContent.CreateContentReadStreamAsync\n  - System.Net.Http.StreamContent.Dispose(System.Boolean)\n  - System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.StreamContent.TryComputeLength(System.Int64@)\n  langs:\n  - csharp\n  name: StreamContent\n  nameWithType: StreamContent\n  fullName: System.Net.Http.StreamContent\n  type: Class\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Provides HTTP content based on a stream.\n  syntax:\n    content: 'public class StreamContent : System.Net.Http.HttpContent'\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpContent\n  implements: []\n  inheritedMembers:\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.HttpContent.Dispose\n  - System.Net.Http.HttpContent.Headers\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  - System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - System.Net.Http.HttpContent.ReadAsStreamAsync\n  - System.Net.Http.HttpContent.ReadAsStringAsync\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream)\n  commentId: M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  name: StreamContent(Stream)\n  nameWithType: StreamContent.StreamContent(Stream)\n  fullName: StreamContent.StreamContent(Stream)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Creates a new instance of the <xref href=\"System.Net.Http.StreamContent\"></xref> class.\n  syntax:\n    content: public StreamContent (System.IO.Stream content);\n    parameters:\n    - id: content\n      type: System.IO.Stream\n      description: The content used to initialize the <xref href=\"System.Net.Http.StreamContent\"></xref>.\n  overload: System.Net.Http.StreamContent.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)\n  commentId: M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)\n  id: '#ctor(System.IO.Stream,System.Int32)'\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  name: StreamContent(Stream, Int32)\n  nameWithType: StreamContent.StreamContent(Stream, Int32)\n  fullName: StreamContent.StreamContent(Stream, Int32)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Creates a new instance of the <xref href=\"System.Net.Http.StreamContent\"></xref> class.\n  syntax:\n    content: public StreamContent (System.IO.Stream content, int bufferSize);\n    parameters:\n    - id: content\n      type: System.IO.Stream\n      description: The content used to initialize the <xref href=\"System.Net.Http.StreamContent\"></xref>.\n    - id: bufferSize\n      type: System.Int32\n      description: The size, in bytes, of the buffer for the <xref href=\"System.Net.Http.StreamContent\"></xref>.\n  overload: System.Net.Http.StreamContent.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>content</code> was `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>bufferSize</code> was less than or equal to zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync\n  commentId: M:System.Net.Http.StreamContent.CreateContentReadStreamAsync\n  id: CreateContentReadStreamAsync\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  name: CreateContentReadStreamAsync()\n  nameWithType: StreamContent.CreateContentReadStreamAsync()\n  fullName: StreamContent.CreateContentReadStreamAsync()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Write the HTTP stream content to a memory stream as an asynchronous operation.\n  remarks: \"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.  \\n  \\n The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream. Derived classes can override this behavior if there is a better way to retrieve the content as stream. For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)\"\n  syntax:\n    content: protected override System.Threading.Tasks.Task<System.IO.Stream> CreateContentReadStreamAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.IO.Stream}\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.StreamContent.CreateContentReadStreamAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.StreamContent.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.StreamContent.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: StreamContent.Dispose(Boolean)\n  fullName: StreamContent.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Http.StreamContent\"></xref> and optionally disposes of the managed resources.\n  remarks: This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.StreamContent> references. This method invokes the `Dispose()` method of each referenced object.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.'\n  overload: System.Net.Http.StreamContent.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  commentId: M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  name: SerializeToStreamAsync(Stream, TransportContext)\n  nameWithType: StreamContent.SerializeToStreamAsync(Stream, TransportContext)\n  fullName: StreamContent.SerializeToStreamAsync(Stream, TransportContext)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Serialize the HTTP content to a stream as an asynchronous operation.\n  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.\n  syntax:\n    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The target stream.\n    - id: context\n      type: System.Net.TransportContext\n      description: Information about the transport (channel binding token, for example). This parameter may be `null`.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.StreamContent.SerializeToStreamAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.StreamContent.TryComputeLength(System.Int64@)\n  commentId: M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)\n  id: TryComputeLength(System.Int64@)\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  name: TryComputeLength(Int64)\n  nameWithType: StreamContent.TryComputeLength(Int64)\n  fullName: StreamContent.TryComputeLength(Int64)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Determines whether the stream content has a valid length in bytes.\n  remarks: The <xref:System.Net.Http.StreamContent.TryComputeLength%2A> method gives HTTP stream content the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`. If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.\n  syntax:\n    content: protected override bool TryComputeLength (out long length);\n    parameters:\n    - id: length\n      type: System.Int64\n      description: The length in bytes of the stream content.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>length</code> is a valid length; otherwise, `false`.'\n  overload: System.Net.Http.StreamContent.TryComputeLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.Http.HttpContent\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpContent\n  nameWithType: HttpContent\n  fullName: System.Net.Http.HttpContent\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream)\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: StreamContent(Stream)\n  nameWithType: StreamContent.StreamContent(Stream)\n  fullName: StreamContent.StreamContent(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: StreamContent(Stream, Int32)\n  nameWithType: StreamContent.StreamContent(Stream, Int32)\n  fullName: StreamContent.StreamContent(Stream, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: CreateContentReadStreamAsync()\n  nameWithType: StreamContent.CreateContentReadStreamAsync()\n  fullName: StreamContent.CreateContentReadStreamAsync()\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.IO.Stream}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Stream>\n  nameWithType: Task<Stream>\n  fullName: System.Threading.Tasks.Task<System.IO.Stream>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IO.Stream\n    name: Stream\n    nameWithType: Stream\n    fullName: System.IO.Stream\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.StreamContent.Dispose(System.Boolean)\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: StreamContent.Dispose(Boolean)\n  fullName: StreamContent.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: SerializeToStreamAsync(Stream, TransportContext)\n  nameWithType: StreamContent.SerializeToStreamAsync(Stream, TransportContext)\n  fullName: StreamContent.SerializeToStreamAsync(Stream, TransportContext)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Net.TransportContext\n  parent: System.Net\n  isExternal: false\n  name: TransportContext\n  nameWithType: TransportContext\n  fullName: System.Net.TransportContext\n- uid: System.Net.Http.StreamContent.TryComputeLength(System.Int64@)\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: TryComputeLength(Int64)\n  nameWithType: StreamContent.TryComputeLength(Int64)\n  fullName: StreamContent.TryComputeLength(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.Http.StreamContent.#ctor*\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: StreamContent\n  nameWithType: StreamContent.StreamContent\n  fullName: StreamContent.StreamContent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync*\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: CreateContentReadStreamAsync\n  nameWithType: StreamContent.CreateContentReadStreamAsync\n  fullName: StreamContent.CreateContentReadStreamAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n- uid: System.Net.Http.StreamContent.Dispose*\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: Dispose\n  nameWithType: StreamContent.Dispose\n  fullName: StreamContent.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n- uid: System.Net.Http.StreamContent.SerializeToStreamAsync*\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: SerializeToStreamAsync\n  nameWithType: StreamContent.SerializeToStreamAsync\n  fullName: StreamContent.SerializeToStreamAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n- uid: System.Net.Http.StreamContent.TryComputeLength*\n  parent: System.Net.Http.StreamContent\n  isExternal: false\n  name: TryComputeLength\n  nameWithType: StreamContent.TryComputeLength\n  fullName: StreamContent.TryComputeLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/StreamContent.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: HttpContent.CopyToAsync(Stream)\n  fullName: HttpContent.CopyToAsync(Stream)\n- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: CopyToAsync(Stream, TransportContext)\n  nameWithType: HttpContent.CopyToAsync(Stream, TransportContext)\n  fullName: HttpContent.CopyToAsync(Stream, TransportContext)\n- uid: System.Net.Http.HttpContent.Dispose\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Dispose()\n  nameWithType: HttpContent.Dispose()\n  fullName: HttpContent.Dispose()\n- uid: System.Net.Http.HttpContent.Headers\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Headers\n  nameWithType: HttpContent.Headers\n  fullName: HttpContent.Headers\n- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: LoadIntoBufferAsync()\n  nameWithType: HttpContent.LoadIntoBufferAsync()\n  fullName: HttpContent.LoadIntoBufferAsync()\n- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: LoadIntoBufferAsync(Int64)\n  nameWithType: HttpContent.LoadIntoBufferAsync(Int64)\n  fullName: HttpContent.LoadIntoBufferAsync(Int64)\n- uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsByteArrayAsync()\n  nameWithType: HttpContent.ReadAsByteArrayAsync()\n  fullName: HttpContent.ReadAsByteArrayAsync()\n- uid: System.Net.Http.HttpContent.ReadAsStreamAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsStreamAsync()\n  nameWithType: HttpContent.ReadAsStreamAsync()\n  fullName: HttpContent.ReadAsStreamAsync()\n- uid: System.Net.Http.HttpContent.ReadAsStringAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsStringAsync()\n  nameWithType: HttpContent.ReadAsStringAsync()\n  fullName: HttpContent.ReadAsStringAsync()\n"}