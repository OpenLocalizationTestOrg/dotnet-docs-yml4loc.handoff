### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.ThrowActivity
  commentId: T:System.Workflow.ComponentModel.ThrowActivity
  id: ThrowActivity
  children:
  - System.Workflow.ComponentModel.ThrowActivity.#ctor
  - System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)
  - System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.ThrowActivity.Fault
  - System.Workflow.ComponentModel.ThrowActivity.FaultProperty
  - System.Workflow.ComponentModel.ThrowActivity.FaultType
  - System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
  - System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: ThrowActivity
  nameWithType: ThrowActivity
  fullName: System.Workflow.ComponentModel.ThrowActivity
  type: Class
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Models the throwing of an exception. This class cannot be inherited.
  remarks: "> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n The purpose of the <xref:System.Workflow.ComponentModel.ThrowActivity> is to allow declarative modeling of the throwing of an exception. The <xref:System.Workflow.ComponentModel.ThrowActivity> is functionally equivalent to a <xref:System.Workflow.Activities.CodeActivity> activity whose code-beside handler throws the indicated exception."
  example:
  - "The following code shows the use of a single throw activity in a workflow to implement exception handling. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]\n [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]"
  syntax:
    content: >-
      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.ThrowActivity), "Resources.Throw.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ThrowActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.Design.ITypeFilterProvider, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.ComponentModel.Design.ITypeFilterProvider
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  attributes:
  - type: System.Drawing.ToolboxBitmapAttribute
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor
  commentId: M:System.Workflow.ComponentModel.ThrowActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: ThrowActivity()
  nameWithType: ThrowActivity.ThrowActivity()
  fullName: ThrowActivity.ThrowActivity()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Initializes a new instance of the <xref href="System.Workflow.ComponentModel.ThrowActivity"></xref> class.
  remarks: ''
  example:
  - "The following code shows the use of a single throw activity in a workflow to implement exception handling. This example includes invoking the constructor. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]\n [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]"
  syntax:
    content: public ThrowActivity ();
    parameters: []
  overload: System.Workflow.ComponentModel.ThrowActivity.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)
  commentId: M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: ThrowActivity(String)
  nameWithType: ThrowActivity.ThrowActivity(String)
  fullName: ThrowActivity.ThrowActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Initializes a new instance of the <xref href="System.Workflow.ComponentModel.ThrowActivity"></xref> class, and initializes its name.
  syntax:
    content: public ThrowActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: The user-defined name of the activity.
  overload: System.Workflow.ComponentModel.ThrowActivity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>identifier</code> is a null reference (`Nothing` in Visual Basic).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  commentId: M:System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ThrowActivity.Execute(ActivityExecutionContext)
  fullName: ThrowActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: ''
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: ''
  overload: System.Workflow.ComponentModel.ThrowActivity.Execute*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.Fault
  commentId: P:System.Workflow.ComponentModel.ThrowActivity.Fault
  id: Fault
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: Fault
  nameWithType: ThrowActivity.Fault
  fullName: ThrowActivity.Fault
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Gets or sets the exception object that should be thrown by the <xref href="System.Workflow.ComponentModel.ThrowActivity"></xref>.
  remarks: You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.ThrowActivity/FaultConverter))]

      public Exception Fault { get; set; }
    return:
      type: System.Exception
      description: The <xref href="System.Exception"></xref> associated with this instance.
  overload: System.Workflow.ComponentModel.ThrowActivity.Fault*
  exceptions: []
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultProperty
  commentId: F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty
  id: FaultProperty
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: FaultProperty
  nameWithType: ThrowActivity.FaultProperty
  fullName: ThrowActivity.FaultProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: The <xref href="System.Workflow.ComponentModel.DependencyProperty"></xref> representing the <xref href="System.Workflow.ComponentModel.ThrowActivity.Fault"></xref> property for this instance.
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public static readonly System.Workflow.ComponentModel.DependencyProperty FaultProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: ''
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType
  commentId: P:System.Workflow.ComponentModel.ThrowActivity.FaultType
  id: FaultType
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: FaultType
  nameWithType: ThrowActivity.FaultType
  fullName: ThrowActivity.FaultType
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Gets or sets the type of exception that should be thrown by the <xref href="System.Workflow.ComponentModel.ThrowActivity"></xref>.
  remarks: ''
  example:
  - "The following code shows the usage of a single throw activity within a workflow to implement exception handling. This example shows setting the <xref:System.Workflow.ComponentModel.ThrowActivity.FaultType%2A> to `null`. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]\n [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.ThrowActivity/FaultTypeConverter))]

      public Type FaultType { get; set; }
    return:
      type: System.Type
      description: The type representing the fault associated with this instance.
  overload: System.Workflow.ComponentModel.ThrowActivity.FaultType*
  exceptions: []
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
  commentId: F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
  id: FaultTypeProperty
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: FaultTypeProperty
  nameWithType: ThrowActivity.FaultTypeProperty
  fullName: ThrowActivity.FaultTypeProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: The <xref href="System.Workflow.ComponentModel.DependencyProperty"></xref> representing the <xref href="System.Workflow.ComponentModel.ThrowActivity.FaultType"></xref> property for this instance.
  remarks: "You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \n  \n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public static readonly System.Workflow.ComponentModel.DependencyProperty FaultTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: ''
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)
  commentId: M:System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: ThrowActivity.Initialize(IServiceProvider)
  fullName: ThrowActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: ''
  overload: System.Workflow.ComponentModel.ThrowActivity.Initialize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  commentId: M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  id: System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  isEii: true
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: ITypeFilterProvider.CanFilterType(Type, Boolean)
  nameWithType: ThrowActivity.ITypeFilterProvider.CanFilterType(Type, Boolean)
  fullName: ThrowActivity.ITypeFilterProvider.CanFilterType(Type, Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Returns a value that indicates whether the specified <xref href="System.Type"></xref> can be filtered.
  syntax:
    content: bool ITypeFilterProvider.CanFilterType (Type type, bool throwOnError);
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> to check for filtering
    - id: throwOnError
      type: System.Boolean
      description: '`true` to throw an exception when the <xref href="System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)"></xref> is processed; otherwise, `false`.'
    return:
      type: System.Boolean
      description: '`true` if the specified type can be filtered; otherwise, `false`.'
  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  commentId: P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  id: System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  isEii: true
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: ITypeFilterProvider.FilterDescription
  nameWithType: ThrowActivity.ITypeFilterProvider.FilterDescription
  fullName: ThrowActivity.ITypeFilterProvider.FilterDescription
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Gets the description for the filter to be displayed on the class browser dialog box.
  syntax:
    content: string System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the description of the filter.
  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  commentId: M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)
  nameWithType: ThrowActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)
  fullName: ThrowActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Returns the access type for the specified property.
  remarks: Used at compile time to validate if the properties are correctly bound to one other. Without this interface this information is inferred directly from property getter/setters.
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: An object that implements <xref href="System.IServiceProvider"></xref> to provide access to design time services if they are needed.
    - id: propertyName
      type: System.String
      description: The name of the property.
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: An <xref href="System.Workflow.ComponentModel.Compiler.AccessTypes"></xref> enumeration value denoting the access level of the property.
  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  commentId: M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.ComponentModel.ThrowActivity
  langs:
  - csharp
  name: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)
  nameWithType: ThrowActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)
  fullName: ThrowActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Returns the <xref href="System.Type"></xref> of the specified property.
  remarks: Used at compile time to validate if the properties are correctly bound to one other.
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: An object that implements <xref href="System.IServiceProvider"></xref> to provide access to design time services if they are needed.
    - id: propertyName
      type: System.String
      description: The name of the property.
    return:
      type: System.Type
      description: The <xref href="System.Type"></xref> for the property whose name is passed as the <code>propertyName</code> parameter.
  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: ThrowActivity()
  nameWithType: ThrowActivity.ThrowActivity()
  fullName: ThrowActivity.ThrowActivity()
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: ThrowActivity(String)
  nameWithType: ThrowActivity.ThrowActivity(String)
  fullName: ThrowActivity.ThrowActivity(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ThrowActivity.Execute(ActivityExecutionContext)
  fullName: ThrowActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.ComponentModel.ThrowActivity.Fault
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Fault
  nameWithType: ThrowActivity.Fault
  fullName: ThrowActivity.Fault
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultProperty
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: FaultProperty
  nameWithType: ThrowActivity.FaultProperty
  fullName: ThrowActivity.FaultProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: FaultType
  nameWithType: ThrowActivity.FaultType
  fullName: ThrowActivity.FaultType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: FaultTypeProperty
  nameWithType: ThrowActivity.FaultTypeProperty
  fullName: ThrowActivity.FaultTypeProperty
- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: ThrowActivity.Initialize(IServiceProvider)
  fullName: ThrowActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: false
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: ITypeFilterProvider.CanFilterType(Type, Boolean)
  nameWithType: ThrowActivity.ITypeFilterProvider.CanFilterType(Type, Boolean)
  fullName: ThrowActivity.ITypeFilterProvider.CanFilterType(Type, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: ITypeFilterProvider.FilterDescription
  nameWithType: ThrowActivity.ITypeFilterProvider.FilterDescription
  fullName: ThrowActivity.ITypeFilterProvider.FilterDescription
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)
  nameWithType: ThrowActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)
  fullName: ThrowActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)
  nameWithType: ThrowActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)
  fullName: ThrowActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)
- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: ThrowActivity
  nameWithType: ThrowActivity.ThrowActivity
  fullName: ThrowActivity.ThrowActivity
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.Execute*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Execute
  nameWithType: ThrowActivity.Execute
  fullName: ThrowActivity.Execute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.Fault*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Fault
  nameWithType: ThrowActivity.Fault
  fullName: ThrowActivity.Fault
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: FaultType
  nameWithType: ThrowActivity.FaultType
  fullName: ThrowActivity.FaultType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: Initialize
  nameWithType: ThrowActivity.Initialize
  fullName: ThrowActivity.Initialize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType
  fullName: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  fullName: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  fullName: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.ComponentModel.ThrowActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  fullName: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Workflow.ComponentModel.Activity.ToString
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: Activity.ToString()
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler(DependencyProperty, Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)
  fullName: DependencyObject.AddHandler(DependencyProperty, Object)
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: DependencyObject.DesignMode
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: DependencyObject.Dispose()
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: DependencyObject.Dispose(Boolean)
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: DependencyObject.GetBinding(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue(ActivityBind, Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)
  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList<T>(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)
  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: DependencyObject.GetValue(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: DependencyObject.GetValueBase(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: DependencyObject.InitializeProperties()
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: DependencyObject.IsBindingSet(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: DependencyObject.MetaEquals(DependencyObject)
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler(DependencyProperty, Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)
  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: DependencyObject.RemoveProperty(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding(DependencyProperty, ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)
  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue(ActivityBind, Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)
  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)
  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: DependencyObject.SetValue(DependencyProperty, Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)
  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
  fullName: DependencyObject.Site
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: DependencyObject.UserData
- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ActivityContextGuidProperty
  nameWithType: Activity.ActivityContextGuidProperty
  fullName: Activity.ActivityContextGuidProperty
- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: Activity.Cancel(ActivityExecutionContext)
  fullName: Activity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.Activity.Canceling
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Canceling
  nameWithType: Activity.Canceling
  fullName: Activity.Canceling
- uid: System.Workflow.ComponentModel.Activity.CancelingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: CancelingEvent
  nameWithType: Activity.CancelingEvent
  fullName: Activity.CancelingEvent
- uid: System.Workflow.ComponentModel.Activity.Clone
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Clone()
  nameWithType: Activity.Clone()
  fullName: Activity.Clone()
- uid: System.Workflow.ComponentModel.Activity.Closed
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Closed
  nameWithType: Activity.Closed
  fullName: Activity.Closed
- uid: System.Workflow.ComponentModel.Activity.ClosedEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ClosedEvent
  nameWithType: Activity.ClosedEvent
  fullName: Activity.ClosedEvent
- uid: System.Workflow.ComponentModel.Activity.Compensating
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Compensating
  nameWithType: Activity.Compensating
  fullName: Activity.Compensating
- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: CompensatingEvent
  nameWithType: Activity.CompensatingEvent
  fullName: Activity.CompensatingEvent
- uid: System.Workflow.ComponentModel.Activity.Description
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Description
  nameWithType: Activity.Description
  fullName: Activity.Description
- uid: System.Workflow.ComponentModel.Activity.Enabled
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Enabled
  nameWithType: Activity.Enabled
  fullName: Activity.Enabled
- uid: System.Workflow.ComponentModel.Activity.Executing
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Executing
  nameWithType: Activity.Executing
  fullName: Activity.Executing
- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutingEvent
  nameWithType: Activity.ExecutingEvent
  fullName: Activity.ExecutingEvent
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
  fullName: Activity.ExecutionResult
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
  fullName: Activity.ExecutionStatus
- uid: System.Workflow.ComponentModel.Activity.Faulting
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Faulting
  nameWithType: Activity.Faulting
  fullName: Activity.Faulting
- uid: System.Workflow.ComponentModel.Activity.FaultingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: FaultingEvent
  nameWithType: Activity.FaultingEvent
  fullName: Activity.FaultingEvent
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName(String)
  nameWithType: Activity.GetActivityByName(String)
  fullName: Activity.GetActivityByName(String)
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName(String, Boolean)
  nameWithType: Activity.GetActivityByName(String, Boolean)
  fullName: Activity.GetActivityByName(String, Boolean)
- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: HandleFault(ActivityExecutionContext, Exception)
  nameWithType: Activity.HandleFault(ActivityExecutionContext, Exception)
  fullName: Activity.HandleFault(ActivityExecutionContext, Exception)
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke<T>(EventHandler<T>, T)
  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)
  fullName: Activity.Invoke<T>(EventHandler<T>, T)
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke<T>(IActivityEventListener<T>, T)
  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)
  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
  fullName: Activity.IsDynamicActivity
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load(Stream, Activity)
  nameWithType: Activity.Load(Stream, Activity)
  fullName: Activity.Load(Stream, Activity)
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load(Stream, Activity, IFormatter)
  nameWithType: Activity.Load(Stream, Activity, IFormatter)
  fullName: Activity.Load(Stream, Activity, IFormatter)
- uid: System.Workflow.ComponentModel.Activity.Name
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Name
  nameWithType: Activity.Name
  fullName: Activity.Name
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: Activity.OnActivityExecutionContextLoad(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: Activity.OnActivityExecutionContextUnload(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: Activity.OnClosed(IServiceProvider)
  fullName: Activity.OnClosed(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.Parent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Parent
  nameWithType: Activity.Parent
  fullName: Activity.Parent
- uid: System.Workflow.ComponentModel.Activity.QualifiedName
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: QualifiedName
  nameWithType: Activity.QualifiedName
  fullName: Activity.QualifiedName
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseEvent(DependencyProperty, Object, EventArgs)
  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)
  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)
  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)
  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save(Stream)
  nameWithType: Activity.Save(Stream)
  fullName: Activity.Save(Stream)
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save(Stream, IFormatter)
  nameWithType: Activity.Save(Stream, IFormatter)
  fullName: Activity.Save(Stream, IFormatter)
- uid: System.Workflow.ComponentModel.Activity.StatusChanged
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: StatusChanged
  nameWithType: Activity.StatusChanged
  fullName: Activity.StatusChanged
- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: StatusChangedEvent
  nameWithType: Activity.StatusChangedEvent
  fullName: Activity.StatusChangedEvent
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData(Object)
  nameWithType: Activity.TrackData(Object)
  fullName: Activity.TrackData(Object)
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData(String, Object)
  nameWithType: Activity.TrackData(String, Object)
  fullName: Activity.TrackData(String, Object)
- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Uninitialize(IServiceProvider)
  nameWithType: Activity.Uninitialize(IServiceProvider)
  fullName: Activity.Uninitialize(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
  fullName: Activity.WorkflowInstanceId
- uid: System.Workflow.ComponentModel.Design.ITypeFilterProvider
  parent: System.Workflow.ComponentModel.Design
  isExternal: false
  name: ITypeFilterProvider
  nameWithType: ITypeFilterProvider
  fullName: System.Workflow.ComponentModel.Design.ITypeFilterProvider
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IDynamicPropertyTypeProvider
  nameWithType: IDynamicPropertyTypeProvider
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
