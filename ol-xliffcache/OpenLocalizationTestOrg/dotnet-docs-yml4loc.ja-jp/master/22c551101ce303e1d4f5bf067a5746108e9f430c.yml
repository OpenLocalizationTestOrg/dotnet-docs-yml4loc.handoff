### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.HttpListenerElement
  commentId: T:System.Net.Configuration.HttpListenerElement
  id: HttpListenerElement
  children:
  - System.Net.Configuration.HttpListenerElement.#ctor
  - System.Net.Configuration.HttpListenerElement.Properties
  - System.Net.Configuration.HttpListenerElement.Timeouts
  - System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  langs:
  - csharp
  name: HttpListenerElement
  nameWithType: HttpListenerElement
  fullName: System.Net.Configuration.HttpListenerElement
  type: Class
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Represents the HttpListener element in the configuration file. This class cannot be inherited.
  remarks: "This class corresponds to the \\<httpListener> Element (Network Settings) configuration element. This class provides programmatic access to information that can be stored in configuration files.  \n  \n The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.  \n  \n When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> property.  \n  \n The `http.sys` service exposes two request URI strings:  \n  \n-   Raw URI  \n  \n-   Converted URI  \n  \n The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:  \n  \n `GET /path/`  \n  \n `Host: www.contoso.com`  \n  \n The raw URI provided by `http.sys` for the request mentioned above, is \"/path/\". This represents the string following the HTTP verb as it was sent over the network.  \n  \n The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to. This is done by comparing the information from the request with a set of registered URI prefixes. The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) structure.  \n  \n In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done. For the sample above the converted URI would be as follows:  \n  \n `http://www.contoso.com/path/`  \n  \n The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI. In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:  \n  \n-   Un-escapes all percent encoded values.  \n  \n-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).  \n  \n-   Executes other normalization steps, like path compression.  \n  \n Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.  \n  \n Therefore `http.sys` provides two registry keys for modifying the process:  \n  \n|Registry Key|Default Value|Description|  \n|------------------|-------------------|-----------------|  \n|EnableNonUTF8|1|If zero, `http.sys` accepts only UTF-8-encoded URLs.<br /><br /> If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.|  \n|FavorUTF8|1|If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.<br /><br /> If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|  \n  \n When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.  \n  \n There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":  \n  \n `http://www.contoso.com/Customer('1%2F3812')/`  \n  \n Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.  \n  \n Passing the string to Uri constructor will lead to the following URI:  \n  \n `http://www.contoso.com/Customer('1/3812')/`  \n  \n Splitting the path into its segments would result in the following elements:  \n  \n `Customer('1`  \n  \n `3812')`  \n  \n This is not the intent of the sender of the request.  \n  \n If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property."
  syntax:
    content: 'public sealed class HttpListenerElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Configuration.HttpListenerElement.#ctor
  commentId: M:System.Net.Configuration.HttpListenerElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: HttpListenerElement()
  nameWithType: HttpListenerElement.HttpListenerElement()
  fullName: HttpListenerElement.HttpListenerElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Initializes a new instance of the <xref href="System.Net.Configuration.HttpListenerElement"></xref> class.
  syntax:
    content: public HttpListenerElement ();
    parameters: []
  overload: System.Net.Configuration.HttpListenerElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Configuration.HttpListenerElement.Properties
  commentId: P:System.Net.Configuration.HttpListenerElement.Properties
  id: Properties
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: HttpListenerElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: ''
  overload: System.Net.Configuration.HttpListenerElement.Properties*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
- uid: System.Net.Configuration.HttpListenerElement.Timeouts
  commentId: P:System.Net.Configuration.HttpListenerElement.Timeouts
  id: Timeouts
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: HttpListenerElement.Timeouts
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Gets the default timeout elements used for an <xref href="System.Net.HttpListener"></xref> object.
  syntax:
    content: >-
      [System.Configuration.ConfigurationProperty("timeouts")]

      public System.Net.Configuration.HttpListenerTimeoutsElement Timeouts { get; }
    return:
      type: System.Net.Configuration.HttpListenerTimeoutsElement
      description: "Returns <xref href=\"System.Net.Configuration.HttpListenerTimeoutsElement\"></xref>.  \n  \n The timeout elements used for an <xref href=\"System.Net.HttpListener\"></xref> object."
  overload: System.Net.Configuration.HttpListenerElement.Timeouts*
  exceptions: []
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  commentId: P:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  id: UnescapeRequestUrl
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: HttpListenerElement.UnescapeRequestUrl
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: Gets a value that indicates if <xref href="System.Net.HttpListener"></xref> uses the raw unescaped URI instead of the converted URI.
  remarks: "The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.  \n  \n When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> property.  \n  \n The `http.sys` service exposes two request URI strings:  \n  \n-   Raw URI  \n  \n-   Converted URI  \n  \n The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:  \n  \n `GET /path/`  \n  \n `Host: www.contoso.com`  \n  \n The raw URI provided by `http.sys` for the request mentioned above, is \"/path/\". This represents the string following the HTTP verb as it was sent over the network.  \n  \n The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to. This is done by comparing the information from the request with a set of registered URI prefixes. The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) structure.  \n  \n In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done. For the sample above the converted URI would be as follows:  \n  \n `http://www.contoso.com/path/`  \n  \n The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI. In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:  \n  \n-   Un-escapes all percent encoded values.  \n  \n-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).  \n  \n-   Executes other normalization steps, like path compression.  \n  \n Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.  \n  \n Therefore `http.sys` provides two registry keys for modifying the process:  \n  \n|Registry Key|Default Value|Description|  \n|------------------|-------------------|-----------------|  \n|EnableNonUTF8|1|If zero, `http.sys` accepts only UTF-8-encoded URLs.<br /><br /> If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.|  \n|FavorUTF8|1|If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.<br /><br /> If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|  \n  \n When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.  \n  \n There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":  \n  \n `http://www.contoso.com/Customer('1%2F3812')/`  \n  \n Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.  \n  \n Passing the string to Uri constructor will lead to the following URI:  \n  \n `http://www.contoso.com/Customer('1/3812')/`  \n  \n Splitting the path into its segments would result in the following elements:  \n  \n `Customer('1`  \n  \n `3812')`  \n  \n This is not the intent of the sender of the request.  \n  \n If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property."
  syntax:
    content: >-
      [System.Configuration.ConfigurationProperty("unescapeRequestUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)]

      public bool UnescapeRequestUrl { get; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates if <xref href="System.Net.HttpListener"></xref> uses the raw unescaped URI, rather than the converted URI.
  overload: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl*
  exceptions: []
  attributes:
  - type: System.Configuration.ConfigurationPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.HttpListenerElement.#ctor
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: HttpListenerElement()
  nameWithType: HttpListenerElement.HttpListenerElement()
  fullName: HttpListenerElement.HttpListenerElement()
- uid: System.Net.Configuration.HttpListenerElement.Properties
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: HttpListenerElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.HttpListenerElement.Timeouts
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: HttpListenerElement.Timeouts
- uid: System.Net.Configuration.HttpListenerTimeoutsElement
  parent: System.Net.Configuration
  isExternal: false
  name: HttpListenerTimeoutsElement
  nameWithType: HttpListenerTimeoutsElement
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: HttpListenerElement.UnescapeRequestUrl
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Configuration.HttpListenerElement.#ctor*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: HttpListenerElement
  nameWithType: HttpListenerElement.HttpListenerElement
  fullName: HttpListenerElement.HttpListenerElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
- uid: System.Net.Configuration.HttpListenerElement.Properties*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: HttpListenerElement.Properties
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
- uid: System.Net.Configuration.HttpListenerElement.Timeouts*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: HttpListenerElement.Timeouts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: HttpListenerElement.UnescapeRequestUrl
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/HttpListenerElement.xml
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: ConfigurationElement.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Configuration.ConfigurationElement.GetHashCode
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: ConfigurationElement.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: ConfigurationElement.CurrentConfiguration
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: DeserializeElement(XmlReader, Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)
  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)
- uid: System.Configuration.ConfigurationElement.ElementInformation
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: ConfigurationElement.ElementInformation
- uid: System.Configuration.ConfigurationElement.ElementProperty
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: ConfigurationElement.EvaluationContext
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: ConfigurationElement.GetTransformedAssemblyString(String)
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: ConfigurationElement.GetTransformedTypeString(String)
- uid: System.Configuration.ConfigurationElement.HasContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.Init
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: ConfigurationElement.Init()
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: ConfigurationElement.InitializeDefault()
- uid: System.Configuration.ConfigurationElement.IsModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: ConfigurationElement.IsModified()
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: ConfigurationElement.IsReadOnly()
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(ConfigurationProperty)
  nameWithType: ConfigurationElement.Item(ConfigurationProperty)
  fullName: ConfigurationElement.Item(ConfigurationProperty)
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(String)
  nameWithType: ConfigurationElement.Item(String)
  fullName: ConfigurationElement.Item(String)
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: ConfigurationElement.ListErrors(IList)
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockAttributes
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockElements
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockItem
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedAttribute(String, String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)
  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String, XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)
  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: ConfigurationElement.PostDeserialize()
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: ConfigurationElement.PreSerialize(XmlWriter)
- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElement.Reset(ConfigurationElement)
  fullName: ConfigurationElement.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElement.ResetModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: ConfigurationElement.ResetModified()
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeElement(XmlWriter, Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)
  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeToXmlElement(XmlWriter, String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)
  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)
  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: ConfigurationElement.SetReadOnly()
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)
