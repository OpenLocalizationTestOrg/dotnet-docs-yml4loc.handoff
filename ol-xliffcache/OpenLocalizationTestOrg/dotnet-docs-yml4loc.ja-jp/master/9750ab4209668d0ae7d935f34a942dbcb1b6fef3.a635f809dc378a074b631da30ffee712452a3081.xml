{"nodes":[{"content":"Represents an abstraction of an access control entry (ACE) that defines an audit rule for a pipe.","nodes":[{"pos":[0,97],"content":"Represents an abstraction of an access control entry (ACE) that defines an audit rule for a pipe.","nodes":[{"content":"Represents an abstraction of an access control entry (ACE) that defines an audit rule for a pipe.","pos":[0,97]}]}],"pos":[721,819],"yaml":true},{"content":"Audit rules determine when and how actions performed on system objects are logged.  \n  \n The <xref:System.IO.Pipes.PipeAuditRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing. This class can specify how audit rules are inherited from and propagated to objects.  \n  \n To allow file auditing on computers that are running Windows NT or later operating systems, the Audit Access Security policy must be enabled; by default, this policy is set to **No Auditing**.  \n  \n To enable the Audit Access Security policy, perform the following steps:  \n  \n1.  Click the **Start** button and then point to **All Programs**. Point to **Administrative Tools** and then click **Local Security Policy**.  \n  \n2.  In the Local Security Settings window, expand the Local Policies folder and left-click the Audit Policy folder.  \n  \n3.  Double-click the **Audit object access** entry in the right pane of the Local Security Settings window to display the **Audit object access Properties** dialog box.  \n  \n4.  Select the **Success** or **Failure** boxes to log successes or failures.  \n  \n Note that an audit rule for a user account requires a corresponding access rule for the same user account.  \n  \n Use the <xref:System.IO.Pipes.PipeAuditRule> class to create a new audit rule. You can persist this rule using the <xref:System.IO.Pipes.PipeSecurity> class.","nodes":[{"pos":[0,82],"content":"Audit rules determine when and how actions performed on system objects are logged.","nodes":[{"content":"Audit rules determine when and how actions performed on system objects are logged.","pos":[0,82]}]},{"pos":[89,410],"content":"The <xref:System.IO.Pipes.PipeAuditRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing. This class can specify how audit rules are inherited from and propagated to objects.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeAuditRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing. This class can specify how audit rules are inherited from and propagated to objects.","pos":[0,321],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing.","pos":[0,236],"source":"The <xref:System.IO.Pipes.PipeAuditRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing."},{"content":"This class can specify how audit rules are inherited from and propagated to objects.","pos":[237,321]}]}]},{"pos":[417,609],"content":"To allow file auditing on computers that are running Windows NT or later operating systems, the Audit Access Security policy must be enabled; by default, this policy is set to <bpt id=\"p1\">**</bpt>No Auditing<ept id=\"p1\">**</ept>.","source":"To allow file auditing on computers that are running Windows NT or later operating systems, the Audit Access Security policy must be enabled; by default, this policy is set to **No Auditing**."},{"pos":[616,688],"content":"To enable the Audit Access Security policy, perform the following steps:","nodes":[{"content":"To enable the Audit Access Security policy, perform the following steps:","pos":[0,72]}]},{"pos":[698,836],"content":"Click the **Start** button and then point to **All Programs**. Point to **Administrative Tools** and then click **Local Security Policy**.","nodes":[{"content":"Click the <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> button and then point to <bpt id=\"p2\">**</bpt>All Programs<ept id=\"p2\">**</ept>.","pos":[0,62],"source":"Click the **Start** button and then point to **All Programs**."},{"content":"Point to <bpt id=\"p1\">**</bpt>Administrative Tools<ept id=\"p1\">**</ept> and then click <bpt id=\"p2\">**</bpt>Local Security Policy<ept id=\"p2\">**</ept>.","pos":[63,138],"source":" Point to **Administrative Tools** and then click **Local Security Policy**."}]},{"pos":[846,957],"content":"In the Local Security Settings window, expand the Local Policies folder and left-click the Audit Policy folder.","nodes":[{"content":"In the Local Security Settings window, expand the Local Policies folder and left-click the Audit Policy folder.","pos":[0,111]}]},{"pos":[967,1131],"content":"Double-click the <bpt id=\"p1\">**</bpt>Audit object access<ept id=\"p1\">**</ept> entry in the right pane of the Local Security Settings window to display the <bpt id=\"p2\">**</bpt>Audit object access Properties<ept id=\"p2\">**</ept> dialog box.","source":"Double-click the **Audit object access** entry in the right pane of the Local Security Settings window to display the **Audit object access Properties** dialog box."},{"pos":[1141,1214],"content":"Select the <bpt id=\"p1\">**</bpt>Success<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Failure<ept id=\"p2\">**</ept> boxes to log successes or failures.","source":"Select the **Success** or **Failure** boxes to log successes or failures."},{"pos":[1221,1327],"content":"Note that an audit rule for a user account requires a corresponding access rule for the same user account.","nodes":[{"content":"Note that an audit rule for a user account requires a corresponding access rule for the same user account.","pos":[0,106]}]},{"pos":[1334,1491],"content":"Use the <xref:System.IO.Pipes.PipeAuditRule> class to create a new audit rule. You can persist this rule using the <xref:System.IO.Pipes.PipeSecurity> class.","nodes":[{"content":"Use the <xref:System.IO.Pipes.PipeAuditRule> class to create a new audit rule. You can persist this rule using the <xref:System.IO.Pipes.PipeSecurity> class.","pos":[0,157],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> class to create a new audit rule.","pos":[0,78],"source":"Use the <xref:System.IO.Pipes.PipeAuditRule> class to create a new audit rule."},{"content":"You can persist this rule using the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class.","pos":[79,157],"source":" You can persist this rule using the <xref:System.IO.Pipes.PipeSecurity> class."}]}]}],"pos":[830,2342],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> class for a user account specified in a <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.","nodes":[{"pos":[0,197],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeAuditRule\"&gt;&lt;/xref&gt;</ph> class for a user account specified in a <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> class for a user account specified in a <xref href=\"System.Security.Principal.IdentityReference\"></xref> object."}],"pos":[4890,5088],"yaml":true},{"content":"Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class. Audit rules determine when and how actions performed on system objects are logged.","nodes":[{"pos":[0,202],"content":"Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class. Audit rules determine when and how actions performed on system objects are logged.","nodes":[{"content":"Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class. Audit rules determine when and how actions performed on system objects are logged.","pos":[0,202],"nodes":[{"content":"Use this constructor to create an audit rule that can be persisted using the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class.","pos":[0,119],"source":"Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class."},{"content":"Audit rules determine when and how actions performed on system objects are logged.","pos":[120,202]}]}]}],"pos":[5099,5302],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> object that encapsulates a reference to a user account.","source":"An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account."}],"pos":[5601,5725],"yaml":true},{"content":"One of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values that specifies the type of operation associated with the access rule.","nodes":[{"pos":[0,141],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeAccessRights\"&gt;&lt;/xref&gt;</ph> values that specifies the type of operation associated with the access rule.","source":"One of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values that specifies the type of operation associated with the access rule."}],"pos":[5806,5948],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies when to perform auditing.","nodes":[{"pos":[0,120],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;&lt;/xref&gt;</ph> values that specifies when to perform auditing.","source":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies when to perform auditing."}],"pos":[6036,6157],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> class for a named user account.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeAuditRule\"&gt;&lt;/xref&gt;</ph> class for a named user account.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> class for a named user account."}],"pos":[7717,7834],"yaml":true},{"content":"Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class. Audit rules determine when and how actions performed on system objects are logged.","nodes":[{"pos":[0,202],"content":"Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class. Audit rules determine when and how actions performed on system objects are logged.","nodes":[{"content":"Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class. Audit rules determine when and how actions performed on system objects are logged.","pos":[0,202],"nodes":[{"content":"Use this constructor to create an audit rule that can be persisted using the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class.","pos":[0,119],"source":"Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class."},{"content":"Audit rules determine when and how actions performed on system objects are logged.","pos":[120,202]}]}]}],"pos":[7845,8048],"yaml":true,"extradata":"MT"},{"content":"The name of the user account.","nodes":[{"pos":[0,29],"content":"The name of the user account.","nodes":[{"content":"The name of the user account.","pos":[0,29]}]}],"pos":[8280,8310],"yaml":true},{"content":"One of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values that specifies the type of operation associated with the access rule.","nodes":[{"pos":[0,141],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeAccessRights\"&gt;&lt;/xref&gt;</ph> values that specifies the type of operation associated with the access rule.","source":"One of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values that specifies the type of operation associated with the access rule."}],"pos":[8391,8533],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies when to perform auditing.","nodes":[{"pos":[0,120],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;&lt;/xref&gt;</ph> values that specifies when to perform auditing.","source":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies when to perform auditing."}],"pos":[8621,8742],"yaml":true},{"content":"Gets the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> flags that are associated with the current <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> object.","nodes":[{"pos":[0,164],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeAccessRights\"&gt;&lt;/xref&gt;</ph> flags that are associated with the current <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeAuditRule\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> flags that are associated with the current <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> object."}],"pos":[9958,10123],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values.","nodes":[{"pos":[0,90],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeAccessRights\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values."}],"pos":[10288,10379],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Pipes.PipeAuditRule\n  commentId: T:System.IO.Pipes.PipeAuditRule\n  id: PipeAuditRule\n  children:\n  - System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  - System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  - System.IO.Pipes.PipeAuditRule.PipeAccessRights\n  langs:\n  - csharp\n  name: PipeAuditRule\n  nameWithType: PipeAuditRule\n  fullName: System.IO.Pipes.PipeAuditRule\n  type: Class\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Represents an abstraction of an access control entry (ACE) that defines an audit rule for a pipe.\n  remarks: \"Audit rules determine when and how actions performed on system objects are logged.  \\n  \\n The <xref:System.IO.Pipes.PipeAuditRule> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing. This class can specify how audit rules are inherited from and propagated to objects.  \\n  \\n To allow file auditing on computers that are running Windows NT or later operating systems, the Audit Access Security policy must be enabled; by default, this policy is set to **No Auditing**.  \\n  \\n To enable the Audit Access Security policy, perform the following steps:  \\n  \\n1.  Click the **Start** button and then point to **All Programs**. Point to **Administrative Tools** and then click **Local Security Policy**.  \\n  \\n2.  In the Local Security Settings window, expand the Local Policies folder and left-click the Audit Policy folder.  \\n  \\n3.  Double-click the **Audit object access** entry in the right pane of the Local Security Settings window to display the **Audit object access Properties** dialog box.  \\n  \\n4.  Select the **Success** or **Failure** boxes to log successes or failures.  \\n  \\n Note that an audit rule for a user account requires a corresponding access rule for the same user account.  \\n  \\n Use the <xref:System.IO.Pipes.PipeAuditRule> class to create a new audit rule. You can persist this rule using the <xref:System.IO.Pipes.PipeSecurity> class.\"\n  syntax:\n    content: 'public sealed class PipeAuditRule : System.Security.AccessControl.AuditRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AuditRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeAuditRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.IO.Pipes.PipeAuditRule\n  langs:\n  - csharp\n  name: PipeAuditRule(IdentityReference, PipeAccessRights, AuditFlags)\n  nameWithType: PipeAuditRule.PipeAuditRule(IdentityReference, PipeAccessRights, AuditFlags)\n  fullName: PipeAuditRule.PipeAuditRule(IdentityReference, PipeAccessRights, AuditFlags)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> class for a user account specified in a <xref href=\"System.Security.Principal.IdentityReference\"></xref> object.\n  remarks: Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class. Audit rules determine when and how actions performed on system objects are logged.\n  syntax:\n    content: public PipeAuditRule (System.Security.Principal.IdentityReference identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: An <xref href=\"System.Security.Principal.IdentityReference\"></xref> object that encapsulates a reference to a user account.\n    - id: rights\n      type: System.IO.Pipes.PipeAccessRights\n      description: One of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values that specifies the type of operation associated with the access rule.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies when to perform auditing.\n  overload: System.IO.Pipes.PipeAuditRule.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeAuditRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.IO.Pipes.PipeAuditRule\n  langs:\n  - csharp\n  name: PipeAuditRule(String, PipeAccessRights, AuditFlags)\n  nameWithType: PipeAuditRule.PipeAuditRule(String, PipeAccessRights, AuditFlags)\n  fullName: PipeAuditRule.PipeAuditRule(String, PipeAccessRights, AuditFlags)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> class for a named user account.\n  remarks: Use this constructor to create an audit rule that can be persisted using the <xref:System.IO.Pipes.PipeSecurity> class. Audit rules determine when and how actions performed on system objects are logged.\n  syntax:\n    content: public PipeAuditRule (string identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.String\n      description: The name of the user account.\n    - id: rights\n      type: System.IO.Pipes.PipeAccessRights\n      description: One of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values that specifies the type of operation associated with the access rule.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies when to perform auditing.\n  overload: System.IO.Pipes.PipeAuditRule.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeAuditRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights\n  commentId: P:System.IO.Pipes.PipeAuditRule.PipeAccessRights\n  id: PipeAccessRights\n  parent: System.IO.Pipes.PipeAuditRule\n  langs:\n  - csharp\n  name: PipeAccessRights\n  nameWithType: PipeAuditRule.PipeAccessRights\n  fullName: PipeAuditRule.PipeAccessRights\n  type: Property\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Gets the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> flags that are associated with the current <xref href=\"System.IO.Pipes.PipeAuditRule\"></xref> object.\n  syntax:\n    content: public System.IO.Pipes.PipeAccessRights PipeAccessRights { get; }\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n      description: A bitwise combination of the <xref href=\"System.IO.Pipes.PipeAccessRights\"></xref> values.\n  overload: System.IO.Pipes.PipeAuditRule.PipeAccessRights*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeAuditRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeAuditRule\n  isExternal: false\n  name: PipeAuditRule(IdentityReference, PipeAccessRights, AuditFlags)\n  nameWithType: PipeAuditRule.PipeAuditRule(IdentityReference, PipeAccessRights, AuditFlags)\n  fullName: PipeAuditRule.PipeAuditRule(IdentityReference, PipeAccessRights, AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeAuditRule\n  isExternal: false\n  name: PipeAuditRule(String, PipeAccessRights, AuditFlags)\n  nameWithType: PipeAuditRule.PipeAuditRule(String, PipeAccessRights, AuditFlags)\n  fullName: PipeAuditRule.PipeAuditRule(String, PipeAccessRights, AuditFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights\n  parent: System.IO.Pipes.PipeAuditRule\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAuditRule.PipeAccessRights\n  fullName: PipeAuditRule.PipeAccessRights\n- uid: System.IO.Pipes.PipeAuditRule.#ctor*\n  parent: System.IO.Pipes.PipeAuditRule\n  isExternal: false\n  name: PipeAuditRule\n  nameWithType: PipeAuditRule.PipeAuditRule\n  fullName: PipeAuditRule.PipeAuditRule\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeAuditRule.xml\n- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights*\n  parent: System.IO.Pipes.PipeAuditRule\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAuditRule.PipeAccessRights\n  fullName: PipeAuditRule.PipeAccessRights\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeAuditRule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n  fullName: AuthorizationRule.AccessMask\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n  fullName: AuthorizationRule.IdentityReference\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n  fullName: AuthorizationRule.InheritanceFlags\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n  fullName: AuthorizationRule.IsInherited\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n  fullName: AuthorizationRule.PropagationFlags\n- uid: System.Security.AccessControl.AuditRule.AuditFlags\n  parent: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditRule.AuditFlags\n  fullName: AuditRule.AuditFlags\n"}