{"nodes":[{"content":"Defines methods for obtaining and releasing an existing handle to a Windows device context.","nodes":[{"pos":[0,91],"content":"Defines methods for obtaining and releasing an existing handle to a Windows device context.","nodes":[{"content":"Defines methods for obtaining and releasing an existing handle to a Windows device context.","pos":[0,91]}]}],"pos":[443,535],"yaml":true},{"content":"A device context defines the graphics object for drawing on a Windows-based device. An example of a class that implements the <xref:System.Drawing.IDeviceContext> interface is the <xref:System.Drawing.Graphics> class.","nodes":[{"pos":[0,217],"content":"A device context defines the graphics object for drawing on a Windows-based device. An example of a class that implements the <xref:System.Drawing.IDeviceContext> interface is the <xref:System.Drawing.Graphics> class.","nodes":[{"content":"A device context defines the graphics object for drawing on a Windows-based device. An example of a class that implements the <xref:System.Drawing.IDeviceContext> interface is the <xref:System.Drawing.Graphics> class.","pos":[0,217],"nodes":[{"content":"A device context defines the graphics object for drawing on a Windows-based device.","pos":[0,83]},{"content":"An example of a class that implements the <ph id=\"ph1\">&lt;xref:System.Drawing.IDeviceContext&gt;</ph> interface is the <ph id=\"ph2\">&lt;xref:System.Drawing.Graphics&gt;</ph> class.","pos":[84,217],"source":" An example of a class that implements the <xref:System.Drawing.IDeviceContext> interface is the <xref:System.Drawing.Graphics> class."}]}]}],"pos":[546,764],"yaml":true,"extradata":"MT"},{"content":"Returns the handle to a Windows device context.","nodes":[{"pos":[0,47],"content":"Returns the handle to a Windows device context.","nodes":[{"content":"Returns the handle to a Windows device context.","pos":[0,47]}]}],"pos":[1796,1844],"yaml":true},{"content":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.  \n  \n <xref:System.Drawing.IDeviceContext.GetHdc%2A> is not designed to obtain handles created using Windows GDI methods such as `CreateDC` or `CreateCompatibleDC`.","nodes":[{"pos":[0,385],"content":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.","nodes":[{"content":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.","pos":[0,385],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> are two methods that allow you to get and release the handle for a Windows-based device.","pos":[0,190],"source":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device."},{"content":"You should always follow a call to <ph id=\"ph1\">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> with a call to <ph id=\"ph2\">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> when you are finished with the Windows handle.","pos":[191,385],"source":" You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle."}]}]},{"pos":[392,550],"content":"<ph id=\"ph1\">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> is not designed to obtain handles created using Windows GDI methods such as <ph id=\"ph2\">`CreateDC`</ph> or <ph id=\"ph3\">`CreateCompatibleDC`</ph>.","source":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> is not designed to obtain handles created using Windows GDI methods such as `CreateDC` or `CreateCompatibleDC`."}],"pos":[1855,2410],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IntPtr\"></xref> representing the handle of a device context.","nodes":[{"pos":[0,82],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> representing the handle of a device context.","source":"An <xref href=\"System.IntPtr\"></xref> representing the handle of a device context."}],"pos":[2534,2617],"yaml":true},{"content":"Releases the handle of a Windows device context.","nodes":[{"pos":[0,48],"content":"Releases the handle of a Windows device context.","nodes":[{"content":"Releases the handle of a Windows device context.","pos":[0,48]}]}],"pos":[3586,3635],"yaml":true},{"content":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.","nodes":[{"pos":[0,385],"content":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.","nodes":[{"content":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.","pos":[0,385],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> are two methods that allow you to get and release the handle for a Windows-based device.","pos":[0,190],"source":"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device."},{"content":"You should always follow a call to <ph id=\"ph1\">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> with a call to <ph id=\"ph2\">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> when you are finished with the Windows handle.","pos":[191,385],"source":" You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle."}]}]}],"pos":[3646,4032],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.IDeviceContext\n  commentId: T:System.Drawing.IDeviceContext\n  id: IDeviceContext\n  children:\n  - System.Drawing.IDeviceContext.GetHdc\n  - System.Drawing.IDeviceContext.ReleaseHdc\n  langs:\n  - csharp\n  name: IDeviceContext\n  nameWithType: IDeviceContext\n  fullName: System.Drawing.IDeviceContext\n  type: Interface\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Defines methods for obtaining and releasing an existing handle to a Windows device context.\n  remarks: A device context defines the graphics object for drawing on a Windows-based device. An example of a class that implements the <xref:System.Drawing.IDeviceContext> interface is the <xref:System.Drawing.Graphics> class.\n  syntax:\n    content: 'public interface IDeviceContext : IDisposable'\n  derivedClasses:\n  - System.Drawing.Graphics\n  implements:\n  - System.IDisposable\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IDeviceContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.IDeviceContext.GetHdc\n  commentId: M:System.Drawing.IDeviceContext.GetHdc\n  id: GetHdc\n  parent: System.Drawing.IDeviceContext\n  langs:\n  - csharp\n  name: GetHdc()\n  nameWithType: IDeviceContext.GetHdc()\n  fullName: IDeviceContext.GetHdc()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the handle to a Windows device context.\n  remarks: \"<xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.  \\n  \\n <xref:System.Drawing.IDeviceContext.GetHdc%2A> is not designed to obtain handles created using Windows GDI methods such as `CreateDC` or `CreateCompatibleDC`.\"\n  syntax:\n    content: public IntPtr GetHdc ();\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: An <xref href=\"System.IntPtr\"></xref> representing the handle of a device context.\n  overload: System.Drawing.IDeviceContext.GetHdc*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IDeviceContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.IDeviceContext.ReleaseHdc\n  commentId: M:System.Drawing.IDeviceContext.ReleaseHdc\n  id: ReleaseHdc\n  parent: System.Drawing.IDeviceContext\n  langs:\n  - csharp\n  name: ReleaseHdc()\n  nameWithType: IDeviceContext.ReleaseHdc()\n  fullName: IDeviceContext.ReleaseHdc()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases the handle of a Windows device context.\n  remarks: <xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device. You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.\n  syntax:\n    content: public void ReleaseHdc ();\n    parameters: []\n  overload: System.Drawing.IDeviceContext.ReleaseHdc*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IDeviceContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Drawing.IDeviceContext.GetHdc\n  parent: System.Drawing.IDeviceContext\n  isExternal: false\n  name: GetHdc()\n  nameWithType: IDeviceContext.GetHdc()\n  fullName: IDeviceContext.GetHdc()\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.IDeviceContext.ReleaseHdc\n  parent: System.Drawing.IDeviceContext\n  isExternal: false\n  name: ReleaseHdc()\n  nameWithType: IDeviceContext.ReleaseHdc()\n  fullName: IDeviceContext.ReleaseHdc()\n- uid: System.Drawing.IDeviceContext.GetHdc*\n  parent: System.Drawing.IDeviceContext\n  isExternal: false\n  name: GetHdc\n  nameWithType: IDeviceContext.GetHdc\n  fullName: IDeviceContext.GetHdc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IDeviceContext.xml\n- uid: System.Drawing.IDeviceContext.ReleaseHdc*\n  parent: System.Drawing.IDeviceContext\n  isExternal: false\n  name: ReleaseHdc\n  nameWithType: IDeviceContext.ReleaseHdc\n  fullName: IDeviceContext.ReleaseHdc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IDeviceContext.xml\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}