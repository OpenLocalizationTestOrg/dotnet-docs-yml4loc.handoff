{"nodes":[{"content":"Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.","nodes":[{"pos":[0,162],"content":"Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.","nodes":[{"content":"Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.","pos":[0,162]}]}],"pos":[740,903],"yaml":true},{"content":"This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object. Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation. This interface is implemented by <xref:System.ServiceModel.Channels.ChannelBase>, the base implementation for writing custom channels, and the <xref:System.ServiceModel.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from<xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase>. The interface is also implemented by the <xref:System.ServiceModel.Channels.Binding> class and then inherited from there by <xref:System.ServiceModel.Channels.CustomBinding> and the system-provided bindings, such as <xref:System.ServiceModel.BasicHttpBinding>.  \n  \n When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis. When using the channel model, timeouts are quite accessible when you want to control them.  \n  \n When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background. They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf. <xref:System.ServiceModel.IDefaultCommunicationTimeouts> is one mechanism for providing that flow.","nodes":[{"pos":[0,952],"content":"This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object. Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation. This interface is implemented by <xref:System.ServiceModel.Channels.ChannelBase>, the base implementation for writing custom channels, and the <xref:System.ServiceModel.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from<xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase>. The interface is also implemented by the <xref:System.ServiceModel.Channels.Binding> class and then inherited from there by <xref:System.ServiceModel.Channels.CustomBinding> and the system-provided bindings, such as <xref:System.ServiceModel.BasicHttpBinding>.","nodes":[{"content":"This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object. Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation. This interface is implemented by <xref:System.ServiceModel.Channels.ChannelBase>, the base implementation for writing custom channels, and the <xref:System.ServiceModel.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from<xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase>. The interface is also implemented by the <xref:System.ServiceModel.Channels.Binding> class and then inherited from there by <xref:System.ServiceModel.Channels.CustomBinding> and the system-provided bindings, such as <xref:System.ServiceModel.BasicHttpBinding>.","pos":[0,952],"nodes":[{"content":"This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object.","pos":[0,173]},{"content":"Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation.","pos":[174,299]},{"content":"This interface is implemented by <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph>, the base implementation for writing custom channels, and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase&gt;</ph>, the base implementation for writing custom channel managers which derive from<ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph>.","pos":[300,691],"source":" This interface is implemented by <xref:System.ServiceModel.Channels.ChannelBase>, the base implementation for writing custom channels, and the <xref:System.ServiceModel.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from<xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase>."},{"content":"The interface is also implemented by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> class and then inherited from there by <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.CustomBinding&gt;</ph> and the system-provided bindings, such as <ph id=\"ph3\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.","pos":[692,952],"source":" The interface is also implemented by the <xref:System.ServiceModel.Channels.Binding> class and then inherited from there by <xref:System.ServiceModel.Channels.CustomBinding> and the system-provided bindings, such as <xref:System.ServiceModel.BasicHttpBinding>."}]}]},{"pos":[959,1204],"content":"When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis. When using the channel model, timeouts are quite accessible when you want to control them.","nodes":[{"content":"When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis. When using the channel model, timeouts are quite accessible when you want to control them.","pos":[0,245],"nodes":[{"content":"When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis.","pos":[0,154]},{"content":"When using the channel model, timeouts are quite accessible when you want to control them.","pos":[155,245]}]}]},{"pos":[1211,1552],"content":"When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background. They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf. <xref:System.ServiceModel.IDefaultCommunicationTimeouts> is one mechanism for providing that flow.","nodes":[{"content":"When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background. They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf. <xref:System.ServiceModel.IDefaultCommunicationTimeouts> is one mechanism for providing that flow.","pos":[0,341],"nodes":[{"content":"When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background.","pos":[0,133]},{"content":"They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf.","pos":[134,242]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts&gt;</ph> is one mechanism for providing that flow.","pos":[243,341],"source":" <xref:System.ServiceModel.IDefaultCommunicationTimeouts> is one mechanism for providing that flow."}]}]}],"pos":[914,2473],"yaml":true,"extradata":"MT"},{"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","nodes":[{"pos":[0,101],"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","pos":[0,101]}]}],"pos":[3866,3968],"yaml":true},{"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","nodes":[{"pos":[0,366],"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","pos":[0,366],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.","pos":[65,197]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","pos":[198,366]}]}]}],"pos":[3979,4346],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the close method to time out.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the close method to time out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the close method to time out."}],"pos":[4466,4585],"yaml":true},{"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","nodes":[{"pos":[0,100],"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","pos":[0,100]}]}],"pos":[5822,5923],"yaml":true},{"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","nodes":[{"pos":[0,366],"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","pos":[0,366],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.","pos":[65,197]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","pos":[198,366]}]}]}],"pos":[5934,6301],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the open method to time out.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the open method to time out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the open method to time out."}],"pos":[6420,6538],"yaml":true},{"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","nodes":[{"pos":[0,103],"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","pos":[0,103]}]}],"pos":[7792,7896],"yaml":true},{"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","nodes":[{"pos":[0,366],"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","pos":[0,366],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.","pos":[65,197]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","pos":[198,366]}]}]}],"pos":[7907,8274],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the receive method to time out.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the receive method to time out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the receive method to time out."}],"pos":[8396,8517],"yaml":true},{"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","nodes":[{"pos":[0,100],"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","pos":[0,100]}]}],"pos":[9756,9857],"yaml":true},{"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","nodes":[{"pos":[0,366],"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","pos":[0,366],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.","pos":[65,197]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.","pos":[198,366]}]}]}],"pos":[9868,10235],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the send method to time out.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the send method to time out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the send method to time out."}],"pos":[10354,10472],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  commentId: T:System.ServiceModel.IDefaultCommunicationTimeouts\n  id: IDefaultCommunicationTimeouts\n  children:\n  - System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  - System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  - System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  - System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.\n  remarks: \"This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object. Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation. This interface is implemented by <xref:System.ServiceModel.Channels.ChannelBase>, the base implementation for writing custom channels, and the <xref:System.ServiceModel.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from<xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase>. The interface is also implemented by the <xref:System.ServiceModel.Channels.Binding> class and then inherited from there by <xref:System.ServiceModel.Channels.CustomBinding> and the system-provided bindings, such as <xref:System.ServiceModel.BasicHttpBinding>.  \\n  \\n When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis. When using the channel model, timeouts are quite accessible when you want to control them.  \\n  \\n When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background. They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf. <xref:System.ServiceModel.IDefaultCommunicationTimeouts> is one mechanism for providing that flow.\"\n  syntax:\n    content: public interface IDefaultCommunicationTimeouts\n  derivedClasses:\n  - System.ServiceModel.Channels.Binding\n  - System.ServiceModel.Channels.ChannelBase\n  - System.ServiceModel.Channels.ChannelManagerBase\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  id: CloseTimeout\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  langs:\n  - csharp\n  name: CloseTimeout\n  nameWithType: IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: IDefaultCommunicationTimeouts.CloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the interval of time after which the close method, invoked by a communication object, times out.\n  remarks: All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.\n  syntax:\n    content: public TimeSpan CloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the close method to time out.\n  overload: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  id: OpenTimeout\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  langs:\n  - csharp\n  name: OpenTimeout\n  nameWithType: IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: IDefaultCommunicationTimeouts.OpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the interval of time after which the open method, invoked by a communication object, times out.\n  remarks: All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.\n  syntax:\n    content: public TimeSpan OpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the open method to time out.\n  overload: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  id: ReceiveTimeout\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  langs:\n  - csharp\n  name: ReceiveTimeout\n  nameWithType: IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: IDefaultCommunicationTimeouts.ReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the interval of time after which the receive method, invoked by a communication object, times out.\n  remarks: All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.\n  syntax:\n    content: public TimeSpan ReceiveTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the receive method to time out.\n  overload: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  id: SendTimeout\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  langs:\n  - csharp\n  name: SendTimeout\n  nameWithType: IDefaultCommunicationTimeouts.SendTimeout\n  fullName: IDefaultCommunicationTimeouts.SendTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the interval of time after which the send method, invoked by a communication object, times out.\n  remarks: All operations that are potentially lengthy must have a timeout. Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.\n  syntax:\n    content: public TimeSpan SendTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time to wait for the send method to time out.\n  overload: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: IDefaultCommunicationTimeouts.CloseTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: IDefaultCommunicationTimeouts.OpenTimeout\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: IDefaultCommunicationTimeouts.ReceiveTimeout\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  isExternal: false\n  name: SendTimeout\n  nameWithType: IDefaultCommunicationTimeouts.SendTimeout\n  fullName: IDefaultCommunicationTimeouts.SendTimeout\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout*\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: IDefaultCommunicationTimeouts.CloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout*\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: IDefaultCommunicationTimeouts.OpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout*\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: IDefaultCommunicationTimeouts.ReceiveTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout*\n  parent: System.ServiceModel.IDefaultCommunicationTimeouts\n  isExternal: false\n  name: SendTimeout\n  nameWithType: IDefaultCommunicationTimeouts.SendTimeout\n  fullName: IDefaultCommunicationTimeouts.SendTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IDefaultCommunicationTimeouts.xml\n"}