{"nodes":[{"content":"Provides the generic implementation of a filter table.","nodes":[{"pos":[0,54],"content":"Provides the generic implementation of a filter table.","nodes":[{"content":"Provides the generic implementation of a filter table.","pos":[0,54]}]}],"pos":[4002,4057],"yaml":true},{"content":"A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepts filters of any type. It groups them internally into tables that contain all the filters of a given type. When a filter is added, it is put into an internal filter table, if one already exists, which contains filters of its type. If no such table exists, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> is called to allocate a new filter table of the appropriate type. Its default operation is to call <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>.  \n  \n This default behavior can be overridden to explicitly specify the type of filter table associated with a type of filter. The first time a filter type is added to the table, the filter table type created is permanently associated with the filter type.  \n  \n The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches. A filter table assigns a default priority that can be set to filters being added.","nodes":[{"pos":[0,579],"content":"A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepts filters of any type. It groups them internally into tables that contain all the filters of a given type. When a filter is added, it is put into an internal filter table, if one already exists, which contains filters of its type. If no such table exists, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> is called to allocate a new filter table of the appropriate type. Its default operation is to call <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>.","nodes":[{"content":"A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepts filters of any type. It groups them internally into tables that contain all the filters of a given type. When a filter is added, it is put into an internal filter table, if one already exists, which contains filters of its type. If no such table exists, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> is called to allocate a new filter table of the appropriate type. Its default operation is to call <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>.","pos":[0,579],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt;</ph> accepts filters of any type.","pos":[0,91],"source":"A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepts filters of any type."},{"content":"It groups them internally into tables that contain all the filters of a given type.","pos":[92,175]},{"content":"When a filter is added, it is put into an internal filter table, if one already exists, which contains filters of its type.","pos":[176,299]},{"content":"If no such table exists, <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A&gt;</ph> is called to allocate a new filter table of the appropriate type.","pos":[300,472],"source":" If no such table exists, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> is called to allocate a new filter table of the appropriate type."},{"content":"Its default operation is to call <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A&gt;</ph>.","pos":[473,579],"source":" Its default operation is to call <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>."}]}]},{"pos":[586,836],"content":"This default behavior can be overridden to explicitly specify the type of filter table associated with a type of filter. The first time a filter type is added to the table, the filter table type created is permanently associated with the filter type.","nodes":[{"content":"This default behavior can be overridden to explicitly specify the type of filter table associated with a type of filter. The first time a filter type is added to the table, the filter table type created is permanently associated with the filter type.","pos":[0,250],"nodes":[{"content":"This default behavior can be overridden to explicitly specify the type of filter table associated with a type of filter.","pos":[0,120]},{"content":"The first time a filter type is added to the table, the filter table type created is permanently associated with the filter type.","pos":[121,250]}]}]},{"pos":[843,1283],"content":"The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches. A filter table assigns a default priority that can be set to filters being added.","nodes":[{"content":"The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches. A filter table assigns a default priority that can be set to filters being added.","pos":[0,440],"nodes":[{"content":"The priority is an integer value used to group filters into priority buckets and order their processing.","pos":[0,104]},{"content":"The larger the integer assigned to a filter type, the higher its priority for processing.","pos":[105,194]},{"content":"All the filter tables in a priority bucket are evaluated together.","pos":[195,261]},{"content":"Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","pos":[262,358]},{"content":"A filter table assigns a default priority that can be set to filters being added.","pos":[359,440]}]}]}],"pos":[4068,5358],"yaml":true,"extradata":"MT"},{"content":"The type of the <code>FilterData</code> associated with the filter.","nodes":[{"pos":[0,67],"content":"The type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> associated with the filter.","source":"The type of the <code>FilterData</code> associated with the filter."}],"pos":[5989,6057],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilterTable`1\"></xref> class with a default priority of 0.","nodes":[{"pos":[0,142],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilterTable`1\"&gt;&lt;/xref&gt;</ph> class with a default priority of 0.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilterTable`1\"></xref> class with a default priority of 0."}],"pos":[35170,35313],"yaml":true},{"content":"The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match. The default priority can be specified using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>.","nodes":[{"pos":[0,235],"content":"The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match. The default priority can be specified using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>.","nodes":[{"content":"The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match. The default priority can be specified using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>.","pos":[0,235],"nodes":[{"content":"The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match.","pos":[0,118]},{"content":"The default priority can be specified using <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A&gt;</ph>.","pos":[119,235],"source":" The default priority can be specified using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>."}]}]}],"pos":[35324,35560],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilterTable`1\"></xref> class with the specified initial default priority.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilterTable`1\"&gt;&lt;/xref&gt;</ph> class with the specified initial default priority.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilterTable`1\"></xref> class with the specified initial default priority."}],"pos":[36911,37069],"yaml":true},{"content":"The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match. The default constructor assigns a `defaultPriority` of 0.","nodes":[{"pos":[0,176],"content":"The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match. The default constructor assigns a `defaultPriority` of 0.","nodes":[{"content":"The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match.","pos":[0,118]},{"content":"The default constructor assigns a <ph id=\"ph1\">`defaultPriority`</ph> of 0.","pos":[119,176],"source":" The default constructor assigns a `defaultPriority` of 0."}]}],"pos":[37080,37257],"yaml":true,"extradata":"MT"},{"content":"Adds a filter/<code>FilterData</code> (key/value) pair to the filter table.","nodes":[{"pos":[0,75],"content":"Adds a filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> (key/value) pair to the filter table.","source":"Adds a filter/<code>FilterData</code> (key/value) pair to the filter table."}],"pos":[38931,39007],"yaml":true},{"content":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> added to the table.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph> &lt;Filter, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt; added to the table.","source":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> added to the table."}],"pos":[39312,39433],"yaml":true},{"content":"<code>item</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;item&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>item</code> is `null`."}],"pos":[39618,39647],"yaml":true},{"content":"Adds a filter and its associated <code>FilterData</code> to the filter table.","nodes":[{"pos":[0,77],"content":"Adds a filter and its associated <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the filter table.","source":"Adds a filter and its associated <code>FilterData</code> to the filter table."}],"pos":[40909,40987],"yaml":true},{"content":"This assigns the filter a default priority. To specify the priority, use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>.","nodes":[{"pos":[0,141],"content":"This assigns the filter a default priority. To specify the priority, use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>.","nodes":[{"content":"This assigns the filter a default priority. To specify the priority, use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>.","pos":[0,141],"nodes":[{"content":"This assigns the filter a default priority.","pos":[0,43]},{"content":"To specify the priority, use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A&gt;</ph>.","pos":[44,141],"source":" To specify the priority, use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>."}]}]}],"pos":[40998,41140],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> used as the key of the pair added.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added."}],"pos":[41361,41466],"yaml":true},{"content":"The <code>FilterData</code> associated with the filter used as the value of the pair added.","nodes":[{"pos":[0,91],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> associated with the filter used as the value of the pair added.","source":"The <code>FilterData</code> associated with the filter used as the value of the pair added."}],"pos":[41524,41616],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[41801,41832],"yaml":true},{"content":"<code>filter</code> is already in the table.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is already in the table.","source":"<code>filter</code> is already in the table."}],"pos":[41926,41971],"yaml":true},{"content":"Adds a filter and its associated <code>FilterData</code> to the action filter table with a specified priority.","nodes":[{"pos":[0,110],"content":"Adds a filter and its associated <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the action filter table with a specified priority.","source":"Adds a filter and its associated <code>FilterData</code> to the action filter table with a specified priority."}],"pos":[43293,43404],"yaml":true},{"content":"The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches. Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> to add a filter with the default priority. The default priority can be set using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>. The default is initially set to 0.","nodes":[{"pos":[0,627],"content":"The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches. Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> to add a filter with the default priority. The default priority can be set using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>. The default is initially set to 0.","nodes":[{"content":"The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches. Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> to add a filter with the default priority. The default priority can be set using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>. The default is initially set to 0.","pos":[0,627],"nodes":[{"content":"The priority is an integer value used to group filters into priority buckets and order their processing.","pos":[0,104]},{"content":"The larger the integer assigned to a filter type, the higher its priority for processing.","pos":[105,194]},{"content":"All the filter tables in a priority bucket are evaluated together.","pos":[195,261]},{"content":"Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","pos":[262,358]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A&gt;</ph> to add a filter with the default priority.","pos":[359,473],"source":" Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> to add a filter with the default priority."},{"content":"The default priority can be set using <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A&gt;</ph>.","pos":[474,592],"source":" The default priority can be set using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>."},{"content":"The default is initially set to 0.","pos":[593,627]}]}]}],"pos":[43415,44043],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> used as the key of the pair added.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added."}],"pos":[44278,44383],"yaml":true},{"content":"The <code>FilterData</code> associated with the filter used as the value of the pair added.","nodes":[{"pos":[0,91],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> associated with the filter used as the value of the pair added.","source":"The <code>FilterData</code> associated with the filter used as the value of the pair added."}],"pos":[44441,44533],"yaml":true},{"content":"The priority of the filter added.","nodes":[{"pos":[0,33],"content":"The priority of the filter added.","nodes":[{"content":"The priority of the filter added.","pos":[0,33]}]}],"pos":[44596,44630],"yaml":true},{"content":"<code>filter</code> cannot be `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> cannot be <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> cannot be `null`."}],"pos":[44815,44853],"yaml":true},{"content":"<code>filter</code> already exists in the table.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> already exists in the table.","source":"<code>filter</code> already exists in the table."}],"pos":[44947,44996],"yaml":true},{"content":"<code>filter</code> type does not match table type.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> type does not match table type.","source":"<code>filter</code> type does not match table type."}],"pos":[45106,45158],"yaml":true},{"content":"Removes all filters and their associated data from the filter table.","nodes":[{"pos":[0,68],"content":"Removes all filters and their associated data from the filter table.","nodes":[{"content":"Removes all filters and their associated data from the filter table.","pos":[0,68]}]}],"pos":[46207,46276],"yaml":true},{"content":"This method implements <xref:System.Collections.Generic.ICollection%601.Clear%2A>.","nodes":[{"pos":[0,82],"content":"This method implements <xref:System.Collections.Generic.ICollection%601.Clear%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.ICollection%601.Clear%2A&gt;</ph>.","pos":[0,82],"source":"This method implements <xref:System.Collections.Generic.ICollection%601.Clear%2A>."}]}],"pos":[46287,46370],"yaml":true,"extradata":"MT"},{"content":"Determines whether the filter table contains a specified filter and its associated <code>FilterData</code>.","nodes":[{"pos":[0,107],"content":"Determines whether the filter table contains a specified filter and its associated <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Determines whether the filter table contains a specified filter and its associated <code>FilterData</code>."}],"pos":[47976,48084],"yaml":true},{"content":"This method implements the `Contains` method of <xref:System.Collections.Generic.ICollection%601>.","nodes":[{"pos":[0,98],"content":"This method implements the <ph id=\"ph1\">`Contains`</ph> method of <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","source":"This method implements the `Contains` method of <xref:System.Collections.Generic.ICollection%601>."}],"pos":[48095,48194],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <<xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref>, <code>FilterData</code>> to find in the table.","nodes":[{"pos":[0,181],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\"> &lt;</ph><ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph>, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt; to find in the table.","source":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <<xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref>, <code>FilterData</code>> to find in the table."}],"pos":[48504,48686],"yaml":true},{"content":"`true` if the <code>filter</code>/<code>FilterData</code> pair is contained in the filter table; otherwise `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept><ph id=\"ph3\">/</ph><bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">FilterData</ph><ept id=\"p2\">&lt;/code&gt;</ept> pair is contained in the filter table; otherwise <ph id=\"ph5\">`false`</ph>.","source":"`true` if the <code>filter</code>/<code>FilterData</code> pair is contained in the filter table; otherwise `false`."}],"pos":[48744,48862],"yaml":true},{"content":"Determines whether the filter table contains a specified filter.","nodes":[{"pos":[0,64],"content":"Determines whether the filter table contains a specified filter.","nodes":[{"content":"Determines whether the filter table contains a specified filter.","pos":[0,64]}]}],"pos":[50215,50280],"yaml":true},{"content":"This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.","nodes":[{"pos":[0,101],"content":"This method implements the <ph id=\"ph1\">`ContainsKey`</ph> method of <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>.","source":"This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>."}],"pos":[50291,50393],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> being tested for.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> being tested for.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> being tested for."}],"pos":[50604,50692],"yaml":true},{"content":"`true` if the <code>filter</code> is contained in the filter table; otherwise `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept> is contained in the filter table; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>filter</code> is contained in the filter table; otherwise `false`."}],"pos":[50750,50839],"yaml":true},{"content":"Copies the filter/<code>FilterData</code> pairs to an array that starts at a specified index.","nodes":[{"pos":[0,93],"content":"Copies the filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> pairs to an array that starts at a specified index.","source":"Copies the filter/<code>FilterData</code> pairs to an array that starts at a specified index."}],"pos":[52447,52541],"yaml":true},{"content":"This method implements the `CopyTo` method of <xref:System.Collections.Generic.ICollection%601>.","nodes":[{"pos":[0,96],"content":"This method implements the <ph id=\"ph1\">`CopyTo`</ph> method of <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","source":"This method implements the `CopyTo` method of <xref:System.Collections.Generic.ICollection%601>."}],"pos":[52552,52649],"yaml":true,"extradata":"MT"},{"content":"The zero-based array of type <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to which the pairs are being copied.","nodes":[{"pos":[0,162],"content":"The zero-based array of type <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph> &lt;Filter, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt; to which the pairs are being copied.","source":"The zero-based array of type <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to which the pairs are being copied."}],"pos":[52974,53137],"yaml":true},{"content":"Gets the number of filter/<code>FilterData</code> pairs in the filter table.","nodes":[{"pos":[0,76],"content":"Gets the number of filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> pairs in the filter table.","source":"Gets the number of filter/<code>FilterData</code> pairs in the filter table."}],"pos":[54339,54416],"yaml":true},{"content":"This property implements <xref:System.Collections.Generic.ICollection%601.Count%2A>.","nodes":[{"pos":[0,84],"content":"This property implements <xref:System.Collections.Generic.ICollection%601.Count%2A>.","nodes":[{"content":"This property implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.ICollection%601.Count%2A&gt;</ph>.","pos":[0,84],"source":"This property implements <xref:System.Collections.Generic.ICollection%601.Count%2A>."}]}],"pos":[54427,54512],"yaml":true,"extradata":"MT"},{"content":"The number of filter/<code>FilterData</code> pairs items in the filter table.","nodes":[{"pos":[0,77],"content":"The number of filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> pairs items in the filter table.","source":"The number of filter/<code>FilterData</code> pairs items in the filter table."}],"pos":[54617,54695],"yaml":true},{"content":"Instantiates a filter table for a specified type of filter.","nodes":[{"pos":[0,59],"content":"Instantiates a filter table for a specified type of filter.","nodes":[{"content":"Instantiates a filter table for a specified type of filter.","pos":[0,59]}]}],"pos":[56081,56141],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to be contained in the filter table created.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> to be contained in the filter table created.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to be contained in the filter table created."}],"pos":[56428,56543],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> that is created that contains the specified filter.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph> that is created that contains the specified filter.","source":"The <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> that is created that contains the specified filter."}],"pos":[56639,56769],"yaml":true},{"content":"Gets or sets the default priority for the filter table.","nodes":[{"pos":[0,55],"content":"Gets or sets the default priority for the filter table.","nodes":[{"content":"Gets or sets the default priority for the filter table.","pos":[0,55]}]}],"pos":[57974,58030],"yaml":true},{"content":"The default priority is the priority automatically assigned a filter added to the filter table if no priority is explicitly specified. The priority of a filter is an integer value used to group filters into buckets that are used to order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","nodes":[{"pos":[0,509],"content":"The default priority is the priority automatically assigned a filter added to the filter table if no priority is explicitly specified. The priority of a filter is an integer value used to group filters into buckets that are used to order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","nodes":[{"content":"The default priority is the priority automatically assigned a filter added to the filter table if no priority is explicitly specified. The priority of a filter is an integer value used to group filters into buckets that are used to order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","pos":[0,509],"nodes":[{"content":"The default priority is the priority automatically assigned a filter added to the filter table if no priority is explicitly specified.","pos":[0,134]},{"content":"The priority of a filter is an integer value used to group filters into buckets that are used to order their processing.","pos":[135,255]},{"content":"The larger the integer assigned to a filter type, the higher its priority for processing.","pos":[256,345]},{"content":"All the filter tables in a priority bucket are evaluated together.","pos":[346,412]},{"content":"Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","pos":[413,509]}]}]}],"pos":[58041,58551],"yaml":true,"extradata":"MT"},{"content":"The default priority assigned by filters added to the filter table. The default value for the default priority is 0.","nodes":[{"pos":[0,116],"content":"The default priority assigned by filters added to the filter table. The default value for the default priority is 0.","nodes":[{"content":"The default priority assigned by filters added to the filter table. The default value for the default priority is 0.","pos":[0,116],"nodes":[{"content":"The default priority assigned by filters added to the filter table.","pos":[0,67]},{"content":"The default value for the default priority is 0.","pos":[68,116]}]}]}],"pos":[58729,58846],"yaml":true},{"content":"Returns an enumerator that iterates through the filter table.","nodes":[{"pos":[0,61],"content":"Returns an enumerator that iterates through the filter table.","nodes":[{"content":"Returns an enumerator that iterates through the filter table.","pos":[0,61]}]}],"pos":[60114,60176],"yaml":true},{"content":"This method implements the `GetEnumerator` method of <xref:System.Collections.IEnumerable>.","nodes":[{"pos":[0,91],"content":"This method implements the <ph id=\"ph1\">`GetEnumerator`</ph> method of <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable&gt;</ph>.","source":"This method implements the `GetEnumerator` method of <xref:System.Collections.IEnumerable>."}],"pos":[60187,60279],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, <code>FilterData</code>>> that can be used to iterate through the filter table.","nodes":[{"pos":[0,165],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph>&lt;KeyValuePair&lt;Filter, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt;&gt; that can be used to iterate through the filter table.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, <code>FilterData</code>>> that can be used to iterate through the filter table."}],"pos":[60665,60831],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter.","nodes":[{"pos":[0,178],"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <ph id=\"ph1\">`out`</ph> parameter.","source":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter."}],"pos":[62402,62581],"yaml":true},{"content":"Use this method when a single filter is expected to match the message and the matching filter must be returned.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"pos":[0,111],"content":"Use this method when a single filter is expected to match the message and the matching filter must be returned.","nodes":[{"content":"Use this method when a single filter is expected to match the message and the matching filter must be returned.","pos":[0,111]}]},{"pos":[118,224],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>."}]}],"pos":[62592,62821],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test."}],"pos":[63091,63168],"yaml":true},{"content":"`true` if match criterion of exactly one filter in the table is satisfied by the message; `false` if no filter is satisfied.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if match criterion of exactly one filter in the table is satisfied by the message; <ph id=\"ph2\">`false`</ph> if no filter is satisfied.","source":"`true` if match criterion of exactly one filter in the table is satisfied by the message; `false` if no filter is satisfied."}],"pos":[63322,63449],"yaml":true},{"content":"More than one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> matches the <code>messageBuffer</code>.","nodes":[{"pos":[0,125],"content":"More than one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"&gt;&lt;/xref&gt;</ph> matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> matches the <code>messageBuffer</code>."}],"pos":[63714,63840],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter.","nodes":[{"pos":[0,178],"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <ph id=\"ph1\">`out`</ph> parameter.","source":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter."}],"pos":[65279,65458],"yaml":true},{"content":"Use this method when a single filter is expected to match the message and the matching filter is required.  \n  \n If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.","nodes":[{"pos":[0,106],"content":"Use this method when a single filter is expected to match the message and the matching filter is required.","nodes":[{"content":"Use this method when a single filter is expected to match the message and the matching filter is required.","pos":[0,106]}]},{"pos":[113,304],"content":"If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.","nodes":[{"content":"If the body of the message must be inspected by a filter in the filter table, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph> version of the method.","pos":[0,191],"source":"If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method."}]}],"pos":[65469,65778],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test."}],"pos":[66038,66109],"yaml":true},{"content":"`true` if match criterion of one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the message; `false` if no filter is satisfied.","nodes":[{"pos":[0,175],"content":"<ph id=\"ph1\">`true`</ph> if match criterion of one <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the message; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if match criterion of one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the message; `false` if no filter is satisfied."}],"pos":[66263,66441],"yaml":true},{"content":"More than one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> matches the <code>messageBuffer</code>.","nodes":[{"pos":[0,125],"content":"More than one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"&gt;&lt;/xref&gt;</ph> matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> matches the <code>messageBuffer</code>."}],"pos":[66706,66832],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of an <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the specified message, and adds the matching filters to a collection.","nodes":[{"pos":[0,229],"content":"Returns a value that indicates whether the match criterion of an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified message, and adds the matching filters to a collection.","source":"Returns a value that indicates whether the match criterion of an <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the specified message, and adds the matching filters to a collection."}],"pos":[68433,68663],"yaml":true},{"content":"Use this method when more than one filter is expected to match the message and the matching filters are required.  \n  \n This method tests for all of the matching filters in the highest priority bucket of filters in which at least one match occurs.  \n  \n The filters in the table are not allowed to inspect the message body.  \n  \n The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"pos":[0,113],"content":"Use this method when more than one filter is expected to match the message and the matching filters are required.","nodes":[{"content":"Use this method when more than one filter is expected to match the message and the matching filters are required.","pos":[0,113]}]},{"pos":[120,247],"content":"This method tests for all of the matching filters in the highest priority bucket of filters in which at least one match occurs.","nodes":[{"content":"This method tests for all of the matching filters in the highest priority bucket of filters in which at least one match occurs.","pos":[0,127]}]},{"pos":[254,323],"content":"The filters in the table are not allowed to inspect the message body.","nodes":[{"content":"The filters in the table are not allowed to inspect the message body.","pos":[0,69]}]},{"pos":[330,663],"content":"The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.","nodes":[{"content":"The matching <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects are stored in the <ph id=\"ph2\">`results`</ph> parameter of <ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","pos":[0,164],"source":"The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>."},{"content":"The <ph id=\"ph1\">`FilterData`</ph> can then be recovered from the filter table using these filters as keys with the methods provided by <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>.","pos":[165,333],"source":" The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>."}]},{"pos":[670,777],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A&gt;</ph>.","pos":[0,107],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>."}]}],"pos":[68674,69462],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test."}],"pos":[69760,69831],"yaml":true},{"content":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.","nodes":[{"pos":[0,198],"content":"The reference parameter that stores the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> objects that match in <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph3\">&lt;Filter&gt;</ph>.","source":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>."}],"pos":[69965,70164],"yaml":true},{"content":"`true` if match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,193],"content":"<ph id=\"ph1\">`true`</ph> if match criterion of at least one <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph4\">`false`</ph> if no filter is satisfied.","source":"`true` if match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by <code>message</code>; `false` if no filter is satisfied."}],"pos":[70222,70418],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[70618,70650],"yaml":true},{"content":"A filter attempted to examine the contents of the message body.","nodes":[{"pos":[0,63],"content":"A filter attempted to examine the contents of the message body.","nodes":[{"content":"A filter attempted to examine the contents of the message body.","pos":[0,63]}]}],"pos":[70810,70874],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the matching filters from the highest priority set of filters in which at least one match is found to a collection.","nodes":[{"pos":[0,266],"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the matching filters from the highest priority set of filters in which at least one match is found to a collection.","nodes":[{"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the matching filters from the highest priority set of filters in which at least one match is found to a collection.","pos":[0,266]}]}],"pos":[72511,72778],"yaml":true},{"content":"Use this method when more than one filter is expected to match the buffered message and the matching filters are required.  \n  \n The filters in the table are allowed to inspect the message body.  \n  \n The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"pos":[0,122],"content":"Use this method when more than one filter is expected to match the buffered message and the matching filters are required.","nodes":[{"content":"Use this method when more than one filter is expected to match the buffered message and the matching filters are required.","pos":[0,122]}]},{"pos":[129,194],"content":"The filters in the table are allowed to inspect the message body.","nodes":[{"content":"The filters in the table are allowed to inspect the message body.","pos":[0,65]}]},{"pos":[201,534],"content":"The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.","nodes":[{"content":"The matching <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects are stored in the <ph id=\"ph2\">`results`</ph> parameter of <ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","pos":[0,164],"source":"The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>."},{"content":"The <ph id=\"ph1\">`FilterData`</ph> can then be recovered from the filter table using these filters as keys with the methods provided by <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>.","pos":[165,333],"source":" The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>."}]},{"pos":[541,647],"content":"This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>."}]}],"pos":[72789,73445],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test."}],"pos":[73753,73830],"yaml":true},{"content":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.","nodes":[{"pos":[0,198],"content":"The reference parameter that stores the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> objects that match in <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph3\">&lt;Filter&gt;</ph>.","source":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>."}],"pos":[73964,74163],"yaml":true},{"content":"`true` if match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">`true`</ph> if match criterion of at least one filter in the table is satisfied by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied."}],"pos":[74221,74358],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[74558,74590],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the specified message and adds the matching filter data to a collection.","nodes":[{"pos":[0,241],"content":"Returns a value that indicates whether the match criterion of exactly one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified message and adds the matching filter data to a collection.","source":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the specified message and adds the matching filter data to a collection."}],"pos":[75891,76133],"yaml":true},{"content":"Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"pos":[0,139],"content":"Use this method when a single filter is expected to match the message and only the <ph id=\"ph1\">`FilterData`</ph> from the matching filter must be recovered.","source":"Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered."},{"pos":[146,252],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>."}]}],"pos":[76144,76401],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test."}],"pos":[76625,76696],"yaml":true},{"content":"The `out` parameter that stores the <code>FilterData</code> that matches the <code>message</code>.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> that matches the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">message</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The `out` parameter that stores the <code>FilterData</code> that matches the <code>message</code>."}],"pos":[76754,76853],"yaml":true},{"content":"`true` if the match criterion of one filter in the table is satisfied by the message; `false` if no filter is satisfied.","nodes":[{"pos":[0,120],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of one filter in the table is satisfied by the message; <ph id=\"ph2\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of one filter in the table is satisfied by the message; `false` if no filter is satisfied."}],"pos":[76911,77034],"yaml":true},{"content":"More than one filter matches the <code>message</code>.","nodes":[{"pos":[0,54],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>message</code>."}],"pos":[77298,77353],"yaml":true},{"content":"A filter attempted to examine the contents of the message body.","nodes":[{"pos":[0,63],"content":"A filter attempted to examine the contents of the message body.","nodes":[{"content":"A filter attempted to examine the contents of the message body.","pos":[0,63]}]}],"pos":[77513,77577],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message and adds the matching filter data to a collection.","nodes":[{"pos":[0,191],"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message and adds the matching filter data to a collection.","nodes":[{"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message and adds the matching filter data to a collection.","pos":[0,191]}]}],"pos":[78914,79106],"yaml":true},{"content":"Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered. Because the filter is being matched to a buffered message, it can specify conditions on the message body.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"pos":[0,254],"content":"Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered. Because the filter is being matched to a buffered message, it can specify conditions on the message body.","nodes":[{"content":"Use this method when a single filter is expected to match the buffered message and only the <ph id=\"ph1\">`FilterData`</ph> from the matching filter must be recovered.","pos":[0,148],"source":"Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered."},{"content":"Because the filter is being matched to a buffered message, it can specify conditions on the message body.","pos":[149,254]}]},{"pos":[261,367],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>."}]}],"pos":[79117,79489],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test."}],"pos":[79723,79800],"yaml":true},{"content":"The `out` parameter that stores the <code>FilterData</code> that matches the <code>messageBuffer</code>.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> that matches the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">messageBuffer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The `out` parameter that stores the <code>FilterData</code> that matches the <code>messageBuffer</code>."}],"pos":[79858,79963],"yaml":true},{"content":"`true` if the match criterion of one filter in the table is satisfied by the buffered message; `false` if no filter is satisfied.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of one filter in the table is satisfied by the buffered message; <ph id=\"ph2\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of one filter in the table is satisfied by the buffered message; `false` if no filter is satisfied."}],"pos":[80021,80153],"yaml":true},{"content":"More than one filter matches the <code>messageBuffer</code>.","nodes":[{"pos":[0,60],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>messageBuffer</code>."}],"pos":[80417,80478],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <code>FilterData</code> of the matching filters to a collection.","nodes":[{"pos":[0,230],"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> of the matching filters to a collection.","source":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <code>FilterData</code> of the matching filters to a collection."}],"pos":[81941,82172],"yaml":true},{"content":"Use this method when more than one filter is expected to match the message, only the `FilterData` is required, and the body of the message is not inspected.  \n  \n The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.","nodes":[{"pos":[0,156],"content":"Use this method when more than one filter is expected to match the message, only the <ph id=\"ph1\">`FilterData`</ph> is required, and the body of the message is not inspected.","source":"Use this method when more than one filter is expected to match the message, only the `FilterData` is required, and the body of the message is not inspected."},{"pos":[163,347],"content":"The <ph id=\"ph1\">`FilterData`</ph> of the matching <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects are stored in the <ph id=\"ph3\">`results`</ph> parameter of <ph id=\"ph4\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","source":"The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>."},{"pos":[354,460],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>."}]}],"pos":[82183,82650],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test."}],"pos":[82914,82985],"yaml":true},{"content":"The reference parameter that stores the <code>FilterData</code> of the matching action filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.","nodes":[{"pos":[0,195],"content":"The reference parameter that stores the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> of the matching action filters in a generic <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph3\">&lt;</ph><bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">FilterData</ph><ept id=\"p2\">&lt;/code&gt;</ept>&gt;.","source":"The reference parameter that stores the <code>FilterData</code> of the matching action filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>."}],"pos":[83086,83282],"yaml":true},{"content":"`true` if match criterion of exactly one filter in the table is satisfied by the message; `false` if no filter is satisfied.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if match criterion of exactly one filter in the table is satisfied by the message; <ph id=\"ph2\">`false`</ph> if no filter is satisfied.","source":"`true` if match criterion of exactly one filter in the table is satisfied by the message; `false` if no filter is satisfied."}],"pos":[83340,83467],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[83666,83698],"yaml":true},{"content":"A filter attempted to examine the contents of the message body.","nodes":[{"pos":[0,63],"content":"A filter attempted to examine the contents of the message body.","nodes":[{"content":"A filter attempted to examine the contents of the message body.","pos":[0,63]}]}],"pos":[83858,83922],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message buffer and adds the <code>FilterData</code> of the matching filters to the <code>results</code> collection.","nodes":[{"pos":[0,239],"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message buffer and adds the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> of the matching filters to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">results</ph><ept id=\"p2\">&lt;/code&gt;</ept> collection.","source":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message buffer and adds the <code>FilterData</code> of the matching filters to the <code>results</code> collection."}],"pos":[85421,85661],"yaml":true},{"content":"Use this method when more than one filter is expected to match the buffered message and only the `FilterData` is required.  \n  \n The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.","nodes":[{"pos":[0,122],"content":"Use this method when more than one filter is expected to match the buffered message and only the <ph id=\"ph1\">`FilterData`</ph> is required.","source":"Use this method when more than one filter is expected to match the buffered message and only the `FilterData` is required."},{"pos":[129,299],"content":"The <ph id=\"ph1\">`FilterData`</ph> of the matching <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects are stored in the <ph id=\"ph3\">`results`</ph><ph id=\"ph4\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","source":"The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>."},{"pos":[306,412],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>."}]}],"pos":[85672,86091],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test."}],"pos":[86365,86442],"yaml":true},{"content":"The reference parameter that stores the filter data of the filters that are satisfied by the <code>messageBuffer</code>.","nodes":[{"pos":[0,120],"content":"The reference parameter that stores the filter data of the filters that are satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The reference parameter that stores the filter data of the filters that are satisfied by the <code>messageBuffer</code>."}],"pos":[86543,86664],"yaml":true},{"content":"`true` if the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> in the table is satisfied by the buffered message; `false` if no filter is satisfied.","nodes":[{"pos":[0,202],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of exactly one <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the buffered message; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> in the table is satisfied by the buffered message; `false` if no filter is satisfied."}],"pos":[86722,86927],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[87126,87158],"yaml":true},{"content":"Returns the priority of a given filter in the table.","nodes":[{"pos":[0,52],"content":"Returns the priority of a given filter in the table.","nodes":[{"content":"Returns the priority of a given filter in the table.","pos":[0,52]}]}],"pos":[88420,88473],"yaml":true},{"content":"The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","nodes":[{"pos":[0,358],"content":"The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","nodes":[{"content":"The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","pos":[0,358],"nodes":[{"content":"The priority is an integer value used to group filters into priority buckets and order their processing.","pos":[0,104]},{"content":"The larger the integer assigned to a filter type, the higher its priority for processing.","pos":[105,194]},{"content":"All the filter tables in a priority bucket are evaluated together.","pos":[195,261]},{"content":"Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.","pos":[262,358]}]}]}],"pos":[88484,88843],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> contained in the filter table created.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> contained in the filter table created.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> contained in the filter table created."}],"pos":[89053,89162],"yaml":true},{"content":"The priority of the <code>filter</code>.","nodes":[{"pos":[0,40],"content":"The priority of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The priority of the <code>filter</code>."}],"pos":[89218,89259],"yaml":true},{"content":"The specified filter does not exist in the filter table.","nodes":[{"pos":[0,56],"content":"The specified filter does not exist in the filter table.","nodes":[{"content":"The specified filter does not exist in the filter table.","pos":[0,56]}]}],"pos":[89460,89517],"yaml":true},{"content":"Gets a value that indicates whether the filter table is read-only.","nodes":[{"pos":[0,66],"content":"Gets a value that indicates whether the filter table is read-only.","nodes":[{"content":"Gets a value that indicates whether the filter table is read-only.","pos":[0,66]}]}],"pos":[90592,90659],"yaml":true},{"content":"A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> must not be read-only.","nodes":[{"pos":[0,85],"content":"A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> must not be read-only.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt;</ph> must not be read-only.","pos":[0,85],"source":"A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> must not be read-only."}]}],"pos":[90670,90756],"yaml":true,"extradata":"MT"},{"content":"`false` for all filter tables.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">`false`</ph> for all filter tables.","source":"`false` for all filter tables."}],"pos":[90869,90902],"yaml":true},{"content":"Gets or sets the filter data associated with the specified <code>filter</code>.","nodes":[{"pos":[0,79],"content":"Gets or sets the filter data associated with the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Gets or sets the filter data associated with the specified <code>filter</code>."}],"pos":[92217,92297],"yaml":true},{"content":"The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.  \n  \n```csharp  \nmyFilters[filter]  \n  \n```  \n  \n```vb  \nmyFilters(filter)  \n  \n```  \n  \n You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table. However if `filter` is already in the table, setting the `Item` property overwrites the old value. In contrast, the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.  \n  \n The dictionary `item` is a filter/`FilterData` pair in the case of <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.","nodes":[{"pos":[0,177],"content":"The <ph id=\"ph1\">`Item`</ph> property (the indexer in C#) provides the ability to access the filter data associated with a <ph id=\"ph2\">`filter`</ph> in the table's filter collection by using the following syntax.","source":"The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax."},{"pos":[268,673],"content":"You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table. However if `filter` is already in the table, setting the `Item` property overwrites the old value. In contrast, the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.","nodes":[{"content":"You can also use the <ph id=\"ph1\">`Item`</ph> property to add new elements by setting the values of a <ph id=\"ph2\">`filter`</ph>/filter data pair that does not exist in the action filter table.","pos":[0,157],"source":"You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table."},{"content":"However if <ph id=\"ph1\">`filter`</ph> is already in the table, setting the <ph id=\"ph2\">`Item`</ph> property overwrites the old value.","pos":[158,256],"source":" However if `filter` is already in the table, setting the `Item` property overwrites the old value."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A&gt;</ph> method does not modify the filter data of an existing <ph id=\"ph2\">`filter`</ph>.","pos":[257,405],"source":" In contrast, the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`."}]},{"pos":[680,808],"content":"The dictionary <ph id=\"ph1\">`item`</ph> is a filter/<ph id=\"ph2\">`FilterData`</ph> pair in the case of <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt;</ph>.","source":"The dictionary `item` is a filter/`FilterData` pair in the case of <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>."}],"pos":[92308,93133],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> associated with the filter data to get or set.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> associated with the filter data to get or set.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> associated with the filter data to get or set."}],"pos":[93356,93473],"yaml":true},{"content":"The filter data associated with the <code>filter</code>. If the specified <code>filter</code> is not found, a get operation throws a <xref href=\"System.Collections.Generic.KeyNotFoundException\"></xref>, and a set operation creates a new filter data element with the specified <code>filter</code> as the key.","nodes":[{"pos":[0,307],"content":"The filter data associated with the <code>filter</code>. If the specified <code>filter</code> is not found, a get operation throws a <xref href=\"System.Collections.Generic.KeyNotFoundException\"></xref>, and a set operation creates a new filter data element with the specified <code>filter</code> as the key.","nodes":[{"content":"The filter data associated with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,56],"source":"The filter data associated with the <code>filter</code>."},{"content":"If the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not found, a get operation throws a <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.KeyNotFoundException\"&gt;&lt;/xref&gt;</ph>, and a set operation creates a new filter data element with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">filter</ph><ept id=\"p2\">&lt;/code&gt;</ept> as the key.","pos":[57,307],"source":" If the specified <code>filter</code> is not found, a get operation throws a <xref href=\"System.Collections.Generic.KeyNotFoundException\"></xref>, and a set operation creates a new filter data element with the specified <code>filter</code> as the key."}]}],"pos":[93528,93836],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[94022,94053],"yaml":true},{"content":"The property is retrieved, and the <code>filter</code> is not in the table.","nodes":[{"pos":[0,75],"content":"The property is retrieved, and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not in the table.","source":"The property is retrieved, and the <code>filter</code> is not in the table."}],"pos":[94193,94269],"yaml":true},{"content":"Gets a collection of all the filters contained in the filter table.","nodes":[{"pos":[0,67],"content":"Gets a collection of all the filters contained in the filter table.","nodes":[{"content":"Gets a collection of all the filters contained in the filter table.","pos":[0,67]}]}],"pos":[95308,95376],"yaml":true},{"content":"This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.  \n  \n The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A> property.","nodes":[{"pos":[0,311],"content":"This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.","nodes":[{"content":"This property implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph>.","pos":[0,83],"source":"This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>&lt;Filter, <ph id=\"ph2\">`FilterData`</ph>&gt; that the filter table implements uses the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> as the key and the <ph id=\"ph4\">`FilterData`</ph> as the value of the pair.","pos":[84,311],"source":" The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair."}]},{"pos":[318,576],"content":"The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding <ph id=\"ph1\">`FilterData`</ph> in the collection returned by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A&gt;</ph> property.","source":"The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A> property."}],"pos":[95387,95968],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the filters contained in the filter table.","nodes":[{"pos":[0,114],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> of all the filters contained in the filter table.","source":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the filters contained in the filter table."}],"pos":[96225,96340],"yaml":true},{"content":"Removes a specified filter/<code>FilterData</code> pair from the filter table.","nodes":[{"pos":[0,78],"content":"Removes a specified filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> pair from the filter table.","source":"Removes a specified filter/<code>FilterData</code> pair from the filter table."}],"pos":[97869,97948],"yaml":true},{"content":"If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.  \n  \n This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.","nodes":[{"pos":[0,165],"content":"If the filter key of the <ph id=\"ph1\">`item`</ph> is present but is associated with data that differs from the <ph id=\"ph2\">`FilterData`</ph>, the method fails to remove the filter and returns <ph id=\"ph3\">`false`</ph>.","source":"If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`."},{"pos":[172,328],"content":"This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A&gt;</ph>.","pos":[0,156],"source":"This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>."}]}],"pos":[97959,98292],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to remove from the table.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph> &lt;Filter, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt; to remove from the table.","source":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to remove from the table."}],"pos":[98600,98727],"yaml":true},{"content":"`true` if the filter/<code>FilterData</code> pair was found and removed; `false` if it was not found.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if the filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> pair was found and removed; <ph id=\"ph3\">`false`</ph> if it was not found.","source":"`true` if the filter/<code>FilterData</code> pair was found and removed; `false` if it was not found."}],"pos":[98785,98889],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[99077,99108],"yaml":true},{"content":"Removes a filter and its associated <code>FilterData</code> from the filter table.","nodes":[{"pos":[0,82],"content":"Removes a filter and its associated <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> from the filter table.","source":"Removes a filter and its associated <code>FilterData</code> from the filter table."}],"pos":[100340,100423],"yaml":true},{"content":"This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.","nodes":[{"pos":[0,156],"content":"This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A&gt;</ph>.","pos":[0,156],"source":"This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>."}]}],"pos":[100434,100591],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to remove.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to remove."}],"pos":[100797,100878],"yaml":true},{"content":"`true` if the filter was found and removed; `false` if it was not found.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the filter was found and removed; <ph id=\"ph2\">`false`</ph> if it was not found.","source":"`true` if the filter was found and removed; `false` if it was not found."}],"pos":[100936,101011],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[101199,101230],"yaml":true},{"content":"Checks whether a filter is stored in the filter table.","nodes":[{"pos":[0,54],"content":"Checks whether a filter is stored in the filter table.","nodes":[{"content":"Checks whether a filter is stored in the filter table.","pos":[0,54]}]}],"pos":[102543,102598],"yaml":true},{"content":"This method is an efficient way to check whether a filter is in the filter table because when the filter is not present, it returns `false` instead of throwing an exception. If you try to retrieve the filter from the table and it is not there, an exception is thrown.","nodes":[{"pos":[0,267],"content":"This method is an efficient way to check whether a filter is in the filter table because when the filter is not present, it returns `false` instead of throwing an exception. If you try to retrieve the filter from the table and it is not there, an exception is thrown.","nodes":[{"content":"This method is an efficient way to check whether a filter is in the filter table because when the filter is not present, it returns <ph id=\"ph1\">`false`</ph> instead of throwing an exception.","pos":[0,173],"source":"This method is an efficient way to check whether a filter is in the filter table because when the filter is not present, it returns `false` instead of throwing an exception."},{"content":"If you try to retrieve the filter from the table and it is not there, an exception is thrown.","pos":[174,267]}]}],"pos":[102609,102877],"yaml":true,"extradata":"MT"},{"content":"The <code>filter</code> that is used as a key to retrieve the data.","nodes":[{"pos":[0,67],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept> that is used as a key to retrieve the data.","source":"The <code>filter</code> that is used as a key to retrieve the data."}],"pos":[103110,103178],"yaml":true},{"content":"The <code>data</code> associated with the <code>filter</code>.","nodes":[{"pos":[0,62],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> associated with the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">filter</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <code>data</code> associated with the <code>filter</code>."}],"pos":[103236,103299],"yaml":true},{"content":"`true` if there is a filter in the filter table that has data associated with it; otherwise `false`.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> if there is a filter in the filter table that has data associated with it; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if there is a filter in the filter table that has data associated with it; otherwise `false`."}],"pos":[103357,103460],"yaml":true},{"content":"Gets a collection of all the <code>FilterData</code> contained in the filter table.","nodes":[{"pos":[0,83],"content":"Gets a collection of all the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> contained in the filter table.","source":"Gets a collection of all the <code>FilterData</code> contained in the filter table."}],"pos":[104605,104689],"yaml":true},{"content":"This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.  \n  \n The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A> property.","nodes":[{"pos":[0,313],"content":"This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.","nodes":[{"content":"This property implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph>.","pos":[0,85],"source":"This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>&lt;Filter, <ph id=\"ph2\">`FilterData`</ph>&gt; that the filter table implements uses the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> as the key and the <ph id=\"ph4\">`FilterData`</ph> as the value of the pair.","pos":[86,313],"source":" The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair."}]},{"pos":[320,576],"content":"The order of the <ph id=\"ph1\">`FilterData`</ph> returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A&gt;</ph> property.","source":"The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A> property."}],"pos":[104700,105281],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <code>FilterData</code> contained in the filter table.","nodes":[{"pos":[0,130],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> of all the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> contained in the filter table.","source":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <code>FilterData</code> contained in the filter table."}],"pos":[105474,105605],"yaml":true},{"content":"Returns an enumerator that iterates through the filter table.","nodes":[{"pos":[0,61],"content":"Returns an enumerator that iterates through the filter table.","nodes":[{"content":"Returns an enumerator that iterates through the filter table.","pos":[0,61]}]}],"pos":[106934,106996],"yaml":true},{"content":"This method implements <xref:System.Collections.IEnumerable.GetEnumerator%2A>.","nodes":[{"pos":[0,78],"content":"This method implements <xref:System.Collections.IEnumerable.GetEnumerator%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph>.","pos":[0,78],"source":"This method implements <xref:System.Collections.IEnumerable.GetEnumerator%2A>."}]}],"pos":[107007,107086],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the filter table.","nodes":[{"pos":[0,118],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the filter table.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the filter table."}],"pos":[107263,107382],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  commentId: T:System.ServiceModel.Dispatcher.MessageFilterTable`1\n  id: MessageFilterTable`1\n  children:\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Count\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Values\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: MessageFilterTable<TFilterData>\n  nameWithType: MessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Provides the generic implementation of a filter table.\n  remarks: \"A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepts filters of any type. It groups them internally into tables that contain all the filters of a given type. When a filter is added, it is put into an internal filter table, if one already exists, which contains filters of its type. If no such table exists, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> is called to allocate a new filter table of the appropriate type. Its default operation is to call <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>.  \\n  \\n This default behavior can be overridden to explicitly specify the type of filter table associated with a type of filter. The first time a filter type is added to the table, the filter table type created is permanently associated with the filter type.  \\n  \\n The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches. A filter table assigns a default priority that can be set to filters being added.\"\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      public class MessageFilterTable<TFilterData> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n    typeParameters:\n    - id: TFilterData\n      description: The type of the <code>FilterData</code> associated with the filter.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  - System.Collections.Generic.IDictionary{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  - System.ServiceModel.Dispatcher.IMessageFilterTable{TFilterData}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)\n  - System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes:\n  - type: System.Runtime.Serialization.DataContractAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: MessageFilterTable<TFilterData>()\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>()\n  fullName: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilterTable`1\"></xref> class with a default priority of 0.\n  remarks: The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match. The default priority can be specified using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>.\n  syntax:\n    content: public MessageFilterTable ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: MessageFilterTable<TFilterData>(Int32)\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>(Int32)\n  fullName: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>(Int32)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilterTable`1\"></xref> class with the specified initial default priority.\n  remarks: The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match. The default constructor assigns a `defaultPriority` of 0.\n  syntax:\n    content: public MessageFilterTable (int default_priority);\n    parameters:\n    - id: defaultPriority\n      type: System.Int32\n      description: ''\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Adds a filter/<code>FilterData</code> (key/value) pair to the filter table.\n  syntax:\n    content: public void Add (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> added to the table.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>item</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  id: Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(MessageFilter, TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData)\n  fullName: MessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Adds a filter and its associated <code>FilterData</code> to the filter table.\n  remarks: This assigns the filter a default priority. To specify the priority, use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>.\n  syntax:\n    content: public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added.\n    - id: data\n      type: TFilterData\n      description: The <code>FilterData</code> associated with the filter used as the value of the pair added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>filter</code> is already in the table.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  id: Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(MessageFilter, TFilterData, Int32)\n  nameWithType: MessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData, Int32)\n  fullName: MessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData, Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Adds a filter and its associated <code>FilterData</code> to the action filter table with a specified priority.\n  remarks: The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches. Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> to add a filter with the default priority. The default priority can be set using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>. The default is initially set to 0.\n  syntax:\n    content: public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data, int priority);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added.\n    - id: data\n      type: TFilterData\n      description: The <code>FilterData</code> associated with the filter used as the value of the pair added.\n    - id: priority\n      type: System.Int32\n      description: The priority of the filter added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> cannot be `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>filter</code> already exists in the table.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>filter</code> type does not match table type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear\n  id: Clear\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: MessageFilterTable<TFilterData>.Clear()\n  fullName: MessageFilterTable<TFilterData>.Clear()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Removes all filters and their associated data from the filter table.\n  remarks: This method implements <xref:System.Collections.Generic.ICollection%601.Clear%2A>.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Determines whether the filter table contains a specified filter and its associated <code>FilterData</code>.\n  remarks: This method implements the `Contains` method of <xref:System.Collections.Generic.ICollection%601>.\n  syntax:\n    content: public bool Contains (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <<xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref>, <code>FilterData</code>> to find in the table.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>filter</code>/<code>FilterData</code> pair is contained in the filter table; otherwise `false`.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  id: ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: ContainsKey(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Determines whether the filter table contains a specified filter.\n  remarks: This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.\n  syntax:\n    content: public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> being tested for.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>filter</code> is contained in the filter table; otherwise `false`.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  nameWithType: MessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  fullName: MessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Copies the filter/<code>FilterData</code> pairs to an array that starts at a specified index.\n  remarks: This method implements the `CopyTo` method of <xref:System.Collections.Generic.ICollection%601>.\n  syntax:\n    content: public void CopyTo (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[] array, int index);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}[]\n      description: The zero-based array of type <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to which the pairs are being copied.\n    - id: arrayIndex\n      type: System.Int32\n      description: ''\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Count\n  commentId: P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count\n  id: Count\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: MessageFilterTable<TFilterData>.Count\n  fullName: MessageFilterTable<TFilterData>.Count\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the number of filter/<code>FilterData</code> pairs in the filter table.\n  remarks: This property implements <xref:System.Collections.Generic.ICollection%601.Count%2A>.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of filter/<code>FilterData</code> pairs items in the filter table.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  id: CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: CreateFilterTable(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.CreateFilterTable(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.CreateFilterTable(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Instantiates a filter table for a specified type of filter.\n  syntax:\n    content: protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData> CreateFilterTable (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to be contained in the filter table created.\n    return:\n      type: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n      description: The <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> that is created that contains the specified filter.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority\n  commentId: P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority\n  id: DefaultPriority\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: DefaultPriority\n  nameWithType: MessageFilterTable<TFilterData>.DefaultPriority\n  fullName: MessageFilterTable<TFilterData>.DefaultPriority\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the default priority for the filter table.\n  remarks: The default priority is the priority automatically assigned a filter added to the filter table if no priority is explicitly specified. The priority of a filter is an integer value used to group filters into buckets that are used to order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataMember]\n\n      public int DefaultPriority { get; set; }\n    return:\n      type: System.Int32\n      description: The default priority assigned by filters added to the filter table. The default value for the default priority is 0.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.Serialization.DataMemberAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: MessageFilterTable<TFilterData>.GetEnumerator()\n  fullName: MessageFilterTable<TFilterData>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns an enumerator that iterates through the filter table.\n  remarks: This method implements the `GetEnumerator` method of <xref:System.Collections.IEnumerable>.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, <code>FilterData</code>>> that can be used to iterate through the filter table.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(MessageBuffer, MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer, MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer, MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter.\n  remarks: \"Use this method when a single filter is expected to match the message and the matching filter must be returned.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter result);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if match criterion of exactly one filter in the table is satisfied by the message; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter*\n  exceptions:\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> matches the <code>messageBuffer</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(Message, MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter(Message, MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilter(Message, MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter.\n  remarks: \"Use this method when a single filter is expected to match the message and the matching filter is required.  \\n  \\n If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.\"\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter result);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if match criterion of one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the message; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter*\n  exceptions:\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> matches the <code>messageBuffer</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(Message, ICollection<MessageFilter>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters(Message, ICollection<MessageFilter>)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilters(Message, ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of an <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the specified message, and adds the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the message and the matching filters are required.  \\n  \\n This method tests for all of the matching filters in the highest priority bucket of filters in which at least one match occurs.  \\n  \\n The filters in the table are not allowed to inspect the message body.  \\n  \\n The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.\n    return:\n      type: System.Boolean\n      description: '`true` if match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    commentId: T:System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    description: A filter attempted to examine the contents of the message body.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the matching filters from the highest priority set of filters in which at least one match is found to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the buffered message and the matching filters are required.  \\n  \\n The filters in the table are allowed to inspect the message body.  \\n  \\n The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.\n    return:\n      type: System.Boolean\n      description: '`true` if match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(Message, TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue(Message, TFilterData)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValue(Message, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> in the table is satisfied by the specified message and adds the matching filter data to a collection.\n  remarks: \"Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.\"\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.\n    - id: data\n      type: TFilterData\n      description: The `out` parameter that stores the <code>FilterData</code> that matches the <code>message</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of one filter in the table is satisfied by the message; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue*\n  exceptions:\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>message</code>.\n  - type: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    commentId: T:System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    description: A filter attempted to examine the contents of the message body.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(MessageBuffer, TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer, TFilterData)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message and adds the matching filter data to a collection.\n  remarks: \"Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered. Because the filter is being matched to a buffered message, it can specify conditions on the message body.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.\"\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer buffer, out TFilterData data);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.\n    - id: data\n      type: TFilterData\n      description: The `out` parameter that stores the <code>FilterData</code> that matches the <code>messageBuffer</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of one filter in the table is satisfied by the buffered message; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue*\n  exceptions:\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>messageBuffer</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(Message, ICollection<TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues(Message, ICollection<TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValues(Message, ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <code>FilterData</code> of the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the message, only the `FilterData` is required, and the body of the message is not inspected.  \\n  \\n The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.\"\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: The reference parameter that stores the <code>FilterData</code> of the matching action filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.\n    return:\n      type: System.Boolean\n      description: '`true` if match criterion of exactly one filter in the table is satisfied by the message; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    commentId: T:System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    description: A filter attempted to examine the contents of the message body.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message buffer and adds the <code>FilterData</code> of the matching filters to the <code>results</code> collection.\n  remarks: \"Use this method when more than one filter is expected to match the buffered message and only the `FilterData` is required.  \\n  \\n The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.\"\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: The reference parameter that stores the filter data of the filters that are satisfied by the <code>messageBuffer</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.ActionMessageFilter\"></xref> in the table is satisfied by the buffered message; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  id: GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetPriority(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetPriority(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.GetPriority(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns the priority of a given filter in the table.\n  remarks: The priority is an integer value used to group filters into priority buckets and order their processing. The larger the integer assigned to a filter type, the higher its priority for processing. All the filter tables in a priority bucket are evaluated together. Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.\n  syntax:\n    content: public int GetPriority (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> contained in the filter table created.\n    return:\n      type: System.Int32\n      description: The priority of the <code>filter</code>.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified filter does not exist in the filter table.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly\n  commentId: P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: MessageFilterTable<TFilterData>.IsReadOnly\n  fullName: MessageFilterTable<TFilterData>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a value that indicates whether the filter table is read-only.\n  remarks: A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> must not be read-only.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`false` for all filter tables.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  commentId: P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  id: Item(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Item(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.Item(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.Item(MessageFilter)\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the filter data associated with the specified <code>filter</code>.\n  remarks: \"The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.  \\n  \\n```csharp  \\nmyFilters[filter]  \\n  \\n```  \\n  \\n```vb  \\nmyFilters(filter)  \\n  \\n```  \\n  \\n You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table. However if `filter` is already in the table, setting the `Item` property overwrites the old value. In contrast, the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.  \\n  \\n The dictionary `item` is a filter/`FilterData` pair in the case of <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.\"\n  syntax:\n    content: public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> associated with the filter data to get or set.\n    return:\n      type: TFilterData\n      description: The filter data associated with the <code>filter</code>. If the specified <code>filter</code> is not found, a get operation throws a <xref href=\"System.Collections.Generic.KeyNotFoundException\"></xref>, and a set operation creates a new filter data element with the specified <code>filter</code> as the key.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  - type: System.Collections.Generic.KeyNotFoundException\n    commentId: T:System.Collections.Generic.KeyNotFoundException\n    description: The property is retrieved, and the <code>filter</code> is not in the table.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys\n  commentId: P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys\n  id: Keys\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: MessageFilterTable<TFilterData>.Keys\n  fullName: MessageFilterTable<TFilterData>.Keys\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a collection of all the filters contained in the filter table.\n  remarks: \"This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.  \\n  \\n The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A> property.\"\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the filters contained in the filter table.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Removes a specified filter/<code>FilterData</code> pair from the filter table.\n  remarks: \"If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.  \\n  \\n This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.\"\n  syntax:\n    content: public bool Remove (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to remove from the table.\n    return:\n      type: System.Boolean\n      description: '`true` if the filter/<code>FilterData</code> pair was found and removed; `false` if it was not found.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  id: Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.Remove(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.Remove(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Removes a filter and its associated <code>FilterData</code> from the filter table.\n  remarks: This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.\n  syntax:\n    content: public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the filter was found and removed; `false` if it was not found.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  id: TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: TryGetValue(MessageFilter, TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.TryGetValue(MessageFilter, TFilterData)\n  fullName: MessageFilterTable<TFilterData>.TryGetValue(MessageFilter, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Checks whether a filter is stored in the filter table.\n  remarks: This method is an efficient way to check whether a filter is in the filter table because when the filter is not present, it returns `false` instead of throwing an exception. If you try to retrieve the filter from the table and it is not there, an exception is thrown.\n  syntax:\n    content: public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <code>filter</code> that is used as a key to retrieve the data.\n    - id: data\n      type: TFilterData\n      description: The <code>data</code> associated with the <code>filter</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if there is a filter in the filter table that has data associated with it; otherwise `false`.'\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Values\n  commentId: P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values\n  id: Values\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Values\n  nameWithType: MessageFilterTable<TFilterData>.Values\n  fullName: MessageFilterTable<TFilterData>.Values\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a collection of all the <code>FilterData</code> contained in the filter table.\n  remarks: \"This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.  \\n  \\n The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A> property.\"\n  syntax:\n    content: public System.Collections.Generic.ICollection<TFilterData> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <code>FilterData</code> contained in the filter table.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Values*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: MessageFilterTable<TFilterData>.IEnumerable.GetEnumerator()\n  fullName: MessageFilterTable<TFilterData>.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns an enumerator that iterates through the filter table.\n  remarks: This method implements <xref:System.Collections.IEnumerable.GetEnumerator%2A>.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the filter table.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: MultipleFilterMatchesException\n  nameWithType: MultipleFilterMatchesException\n  fullName: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n- uid: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: InvalidBodyAccessException\n  nameWithType: InvalidBodyAccessException\n  fullName: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n- uid: System.Collections.Generic.KeyNotFoundException\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyNotFoundException\n  nameWithType: KeyNotFoundException\n  fullName: System.Collections.Generic.KeyNotFoundException\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: MessageFilterTable<TFilterData>()\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>()\n  fullName: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>()\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: MessageFilterTable<TFilterData>(Int32)\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>(Int32)\n  fullName: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Add(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.ServiceModel.Dispatcher.MessageFilter\n  name: MessageFilter\n  nameWithType: MessageFilter\n  fullName: System.ServiceModel.Dispatcher.MessageFilter\n- uid: TFilterData\n  name: TFilterData\n  nameWithType: TFilterData\n  fullName: TFilterData\n- uid: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<MessageFilter,TFilterData>\n  nameWithType: KeyValuePair<MessageFilter,TFilterData>\n  fullName: System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Add(MessageFilter, TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData)\n  fullName: MessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Add(MessageFilter, TFilterData, Int32)\n  nameWithType: MessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData, Int32)\n  fullName: MessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData, Int32)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Clear()\n  nameWithType: MessageFilterTable<TFilterData>.Clear()\n  fullName: MessageFilterTable<TFilterData>.Clear()\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Contains(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: ContainsKey(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  nameWithType: MessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  fullName: MessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}[]\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<MessageFilter,TFilterData>[]\n  nameWithType: KeyValuePair<MessageFilter,TFilterData>[]\n  fullName: System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Count\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Count\n  nameWithType: MessageFilterTable<TFilterData>.Count\n  fullName: MessageFilterTable<TFilterData>.Count\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: CreateFilterTable(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.CreateFilterTable(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.CreateFilterTable(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: IMessageFilterTable<TFilterData>\n  nameWithType: IMessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: DefaultPriority\n  nameWithType: MessageFilterTable<TFilterData>.DefaultPriority\n  fullName: MessageFilterTable<TFilterData>.DefaultPriority\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: MessageFilterTable<TFilterData>.GetEnumerator()\n  fullName: MessageFilterTable<TFilterData>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<KeyValuePair<MessageFilter,TFilterData>>\n  nameWithType: IEnumerator<KeyValuePair<MessageFilter,TFilterData>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(MessageBuffer, MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer, MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer, MessageFilter)\n- uid: System.ServiceModel.Channels.MessageBuffer\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageBuffer\n  nameWithType: MessageBuffer\n  fullName: System.ServiceModel.Channels.MessageBuffer\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(Message, MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter(Message, MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilter(Message, MessageFilter)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(Message, ICollection<MessageFilter>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters(Message, ICollection<MessageFilter>)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilters(Message, ICollection<MessageFilter>)\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<MessageFilter>\n  nameWithType: ICollection<MessageFilter>\n  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(Message, TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue(Message, TFilterData)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValue(Message, TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(MessageBuffer, TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer, TFilterData)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer, TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(Message, ICollection<TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues(Message, ICollection<TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValues(Message, ICollection<TFilterData>)\n- uid: System.Collections.Generic.ICollection{TFilterData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TFilterData>\n  nameWithType: ICollection<TFilterData>\n  fullName: System.Collections.Generic.ICollection<TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetPriority(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetPriority(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.GetPriority(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MessageFilterTable<TFilterData>.IsReadOnly\n  fullName: MessageFilterTable<TFilterData>.IsReadOnly\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Item(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.Item(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.Item(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Keys\n  nameWithType: MessageFilterTable<TFilterData>.Keys\n  fullName: MessageFilterTable<TFilterData>.Keys\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Remove(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: MessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Remove(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.Remove(MessageFilter)\n  fullName: MessageFilterTable<TFilterData>.Remove(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: TryGetValue(MessageFilter, TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.TryGetValue(MessageFilter, TFilterData)\n  fullName: MessageFilterTable<TFilterData>.TryGetValue(MessageFilter, TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Values\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Values\n  nameWithType: MessageFilterTable<TFilterData>.Values\n  fullName: MessageFilterTable<TFilterData>.Values\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: MessageFilterTable<TFilterData>.IEnumerable.GetEnumerator()\n  fullName: MessageFilterTable<TFilterData>.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters\n  fullName: MessageFilterTable<TFilterData>.GetMatchingFilters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues\n  fullName: MessageFilterTable<TFilterData>.GetMatchingValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: MessageFilterTable<TFilterData>\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>\n  fullName: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Add\n  nameWithType: MessageFilterTable<TFilterData>.Add\n  fullName: MessageFilterTable<TFilterData>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Clear\n  nameWithType: MessageFilterTable<TFilterData>.Clear\n  fullName: MessageFilterTable<TFilterData>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Contains\n  nameWithType: MessageFilterTable<TFilterData>.Contains\n  fullName: MessageFilterTable<TFilterData>.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: ContainsKey\n  nameWithType: MessageFilterTable<TFilterData>.ContainsKey\n  fullName: MessageFilterTable<TFilterData>.ContainsKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: MessageFilterTable<TFilterData>.CopyTo\n  fullName: MessageFilterTable<TFilterData>.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Count*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Count\n  nameWithType: MessageFilterTable<TFilterData>.Count\n  fullName: MessageFilterTable<TFilterData>.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: CreateFilterTable\n  nameWithType: MessageFilterTable<TFilterData>.CreateFilterTable\n  fullName: MessageFilterTable<TFilterData>.CreateFilterTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: DefaultPriority\n  nameWithType: MessageFilterTable<TFilterData>.DefaultPriority\n  fullName: MessageFilterTable<TFilterData>.DefaultPriority\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: MessageFilterTable<TFilterData>.GetEnumerator\n  fullName: MessageFilterTable<TFilterData>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetPriority\n  nameWithType: MessageFilterTable<TFilterData>.GetPriority\n  fullName: MessageFilterTable<TFilterData>.GetPriority\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MessageFilterTable<TFilterData>.IsReadOnly\n  fullName: MessageFilterTable<TFilterData>.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Item*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Item\n  nameWithType: MessageFilterTable<TFilterData>.Item\n  fullName: MessageFilterTable<TFilterData>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Keys\n  nameWithType: MessageFilterTable<TFilterData>.Keys\n  fullName: MessageFilterTable<TFilterData>.Keys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Remove\n  nameWithType: MessageFilterTable<TFilterData>.Remove\n  fullName: MessageFilterTable<TFilterData>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: TryGetValue\n  nameWithType: MessageFilterTable<TFilterData>.TryGetValue\n  fullName: MessageFilterTable<TFilterData>.TryGetValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Values*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Values\n  nameWithType: MessageFilterTable<TFilterData>.Values\n  fullName: MessageFilterTable<TFilterData>.Values\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: MessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator\n  fullName: MessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilterTable`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)\n  parent: System.Collections.Generic.CollectionExtensions\n  isExternal: false\n  name: Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  nameWithType: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  fullName: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n- uid: System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)\n  parent: System.Collections.Generic.CollectionExtensions\n  isExternal: false\n  name: TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  nameWithType: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  fullName: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<KeyValuePair<MessageFilter,TFilterData>>\n  nameWithType: ICollection<KeyValuePair<MessageFilter,TFilterData>>\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<MessageFilter,TFilterData>\n  nameWithType: IDictionary<MessageFilter,TFilterData>\n  fullName: System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<MessageFilter,TFilterData>>\n  nameWithType: IEnumerable<KeyValuePair<MessageFilter,TFilterData>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}