<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eac956028e78b50f7d80d8a0867269016b56a9de</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xaml.Schema.XamlTypeName.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba5a109d8aa7dc908613cbdd8f8c30fd3438f15f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e5ed600aec6ba223db97ebb400e760689212c06</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a means to specify a XAML type in terms of name and namespace.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> is the type information class in the XAML type system, whereas <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeName&gt;</ph> is more of a data structure that provides different ways of specifying that type.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeName&gt;</ph> also provides static helper methods for generating a <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeName&gt;</ph> by resolving an existing type identifier in a XAML namespace.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> class, based on an existing <ph id="ph2">&lt;xref href="System.Xaml.XamlType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An existing <ph id="ph1">&lt;xref href="System.Xaml.XamlType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xamlType&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> class, based on name and namespace strings.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The XAML namespace that contains name.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the type to create a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> for.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> class, based on name and namespace strings as well as an array of type arguments.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the signature to use if you are specifying a generic type and type arguments for that type.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The XAML namespace that contains <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The name of the type to create a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> for.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An array of type arguments, each of which must be a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the name used to construct this <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> was used to construct this <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeName&gt;</ph>, the value of <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlTypeName.Name%2A&gt;</ph> is <ph id="ph4">&lt;xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of the type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the XAML namespace identifier used to construct this <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> was used to construct this <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeName&gt;</ph>, the value of <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlTypeName.Namespace%2A&gt;</ph> is <ph id="ph4">`xamlType.GetXamlNamespaces()[0]`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The XAML namespace identifier.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Provides a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> value based on a type name and an object that can resolve a markup prefix into a namespace.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type name to create a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> value for.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An object or service provider that implements <ph id="ph1">&lt;xref href="System.Xaml.IXamlNamespaceResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The created <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;namespaceResolver&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>String cannot be parsed.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Provides a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following is quasi-BNF for the nested type name or multiple type name parsing enabled by this method:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A string that contains multiple types.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An object or service provider that implements <ph id="ph1">&lt;xref href="System.Xaml.IXamlNamespaceResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The created <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeNameList&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;namespaceResolver&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>String cannot be parsed.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Converts the value of this <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> to its equivalent string representation.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature is equivalent to calling <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29&gt;</ph>, passing <ph id="ph2">`null`</ph> for <ph id="ph3">`prefixLookup`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>s</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The equivalent string representation of this <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> .</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Converts the value of this <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A service reference for prefix lookup.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A prefixed usage string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName.Namespace"&gt;&lt;/xref&gt;</ph> for this <ph id="ph2">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName.Name"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Could not look up the prefix.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Converts the value of this <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A list of types.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A service reference for prefix lookup.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A concatenated string of all type results.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;prefixLookup&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;typeNameList&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Provides a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> value based on a type name and an object that can resolve a markup prefix into a namespace.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The type name to create a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> value for.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An object or service provider that implements <ph id="ph1">&lt;xref href="System.Xaml.IXamlNamespaceResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Out parameter that contains the created <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> if the return value is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the parse was successful and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">result</ph><ept id="p1">&lt;/code&gt;</ept> contains a useful value; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;namespaceResolver&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Provides a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A string that contains multiple types.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An object or service provider that implements <ph id="ph1">&lt;xref href="System.Xaml.IXamlNamespaceResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Out parameter that contains the created <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph> if the return value is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the parse was successful and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">result</ph><ept id="p1">&lt;/code&gt;</ept> contains a useful value; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeNameList&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;namespaceResolver&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets the type arguments used to construct this <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlTypeName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> was used to construct this <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeName&gt;</ph>, the value of <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlTypeName.TypeArguments%2A&gt;</ph> is formed from <ph id="ph4">&lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The type arguments, if any.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>May be null.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>