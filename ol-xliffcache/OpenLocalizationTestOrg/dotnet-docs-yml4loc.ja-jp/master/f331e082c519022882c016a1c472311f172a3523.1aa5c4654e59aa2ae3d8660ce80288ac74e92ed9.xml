{"nodes":[{"content":"Represents the exception thrown when a component cannot be granted a license.","nodes":[{"pos":[0,77],"content":"Represents the exception thrown when a component cannot be granted a license.","nodes":[{"content":"Represents the exception thrown when a component cannot be granted a license.","pos":[0,77]}]}],"pos":[1126,1204],"yaml":true},{"content":"The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=fullName> method throws <xref:System.ComponentModel.LicenseException> when a component cannot obtain a valid license. This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.  \n  \n For more information on licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).","nodes":[{"pos":[0,299],"content":"The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=fullName> method throws <xref:System.ComponentModel.LicenseException> when a component cannot obtain a valid license. This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.","nodes":[{"content":"The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=fullName> method throws <xref:System.ComponentModel.LicenseException> when a component cannot obtain a valid license. This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.","pos":[0,299],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=fullName&gt;</ph> method throws <ph id=\"ph2\">&lt;xref:System.ComponentModel.LicenseException&gt;</ph> when a component cannot obtain a valid license.","pos":[0,192],"source":"The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=fullName> method throws <xref:System.ComponentModel.LicenseException> when a component cannot obtain a valid license."},{"content":"This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.","pos":[193,299]}]}]},{"pos":[306,459],"content":"For more information on licensing, see <bpt id=\"p1\">[</bpt>How to: License Components and Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.","source":"For more information on licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)."}],"pos":[1215,1679],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type of component that was denied a license.","nodes":[{"pos":[0,152],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseException\"&gt;&lt;/xref&gt;</ph> class for the type of component that was denied a license.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type of component that was denied a license."}],"pos":[4946,5099],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component that was not granted a license.","source":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license."}],"pos":[5233,5338],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class with the given <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>.","nodes":[{"pos":[0,254],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseException\"&gt;&lt;/xref&gt;</ph> class with the given <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class with the given <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>."}],"pos":[7003,7258],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> to be used for deserialization.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization."}],"pos":[7527,7631],"yaml":true},{"content":"The destination to be used for deserialization.","nodes":[{"pos":[0,47],"content":"The destination to be used for deserialization.","nodes":[{"content":"The destination to be used for deserialization.","pos":[0,47]}]}],"pos":[7726,7774],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseException\"&gt;&lt;/xref&gt;</ph> class for the type and the instance of the component that was denied a license.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license."}],"pos":[9169,9343],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component that was not granted a license.","source":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license."}],"pos":[9494,9599],"yaml":true},{"content":"The instance of the component that was not granted a license.","nodes":[{"pos":[0,61],"content":"The instance of the component that was not granted a license.","nodes":[{"content":"The instance of the component that was not granted a license.","pos":[0,61]}]}],"pos":[9663,9725],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license, along with a message to display.","nodes":[{"pos":[0,206],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseException\"&gt;&lt;/xref&gt;</ph> class for the type and the instance of the component that was denied a license, along with a message to display.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license, along with a message to display."}],"pos":[11186,11393],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component that was not granted a license.","source":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license."}],"pos":[11560,11665],"yaml":true},{"content":"The instance of the component that was not granted a license.","nodes":[{"pos":[0,61],"content":"The instance of the component that was not granted a license.","nodes":[{"content":"The instance of the component that was not granted a license.","pos":[0,61]}]}],"pos":[11729,11791],"yaml":true},{"content":"The exception message to display.","nodes":[{"pos":[0,33],"content":"The exception message to display.","nodes":[{"content":"The exception message to display.","pos":[0,33]}]}],"pos":[11854,11888],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown.","nodes":[{"pos":[0,240],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LicenseException\"&gt;&lt;/xref&gt;</ph> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown."}],"pos":[13433,13674],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component that was not granted a license.","source":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license."}],"pos":[13867,13972],"yaml":true},{"content":"The instance of the component that was not granted a license.","nodes":[{"pos":[0,61],"content":"The instance of the component that was not granted a license.","nodes":[{"content":"The instance of the component that was not granted a license.","pos":[0,61]}]}],"pos":[14036,14098],"yaml":true},{"content":"The exception message to display.","nodes":[{"pos":[0,33],"content":"The exception message to display.","nodes":[{"content":"The exception message to display.","pos":[0,33]}]}],"pos":[14161,14195],"yaml":true},{"content":"An <xref href=\"System.Exception\"></xref> that represents the original exception.","nodes":[{"pos":[0,80],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that represents the original exception.","source":"An <xref href=\"System.Exception\"></xref> that represents the original exception."}],"pos":[14268,14349],"yaml":true},{"content":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with information about the exception.","nodes":[{"pos":[0,114],"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> with information about the exception.","source":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with information about the exception."}],"pos":[16022,16137],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> to be used for deserialization.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization."}],"pos":[16414,16518],"yaml":true},{"content":"The destination to be used for deserialization.","nodes":[{"pos":[0,47],"content":"The destination to be used for deserialization.","nodes":[{"content":"The destination to be used for deserialization.","pos":[0,47]}]}],"pos":[16613,16661],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[16843,16872],"yaml":true},{"content":"Gets the type of the component that was not granted a license.","nodes":[{"pos":[0,62],"content":"Gets the type of the component that was not granted a license.","nodes":[{"content":"Gets the type of the component that was not granted a license.","pos":[0,62]}]}],"pos":[18073,18136],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component that was not granted a license.","source":"A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license."}],"pos":[18248,18353],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.LicenseException\n  commentId: T:System.ComponentModel.LicenseException\n  id: LicenseException\n  children:\n  - System.ComponentModel.LicenseException.#ctor(System.Type)\n  - System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)\n  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)\n  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)\n  - System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.ComponentModel.LicenseException.LicensedType\n  langs:\n  - csharp\n  name: LicenseException\n  nameWithType: LicenseException\n  fullName: System.ComponentModel.LicenseException\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Represents the exception thrown when a component cannot be granted a license.\n  remarks: \"The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=fullName> method throws <xref:System.ComponentModel.LicenseException> when a component cannot obtain a valid license. This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.  \\n  \\n For more information on licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).\"\n  example:\n  - \"The following code example shows how to catch a <xref:System.ComponentModel.LicenseException> and interpret its content. In the sample, the application calls the <xref:System.ComponentModel.LicenseManager.Validate%2A> method for a <xref:System.Windows.Forms.Form?displayProperty=fullName> that is not licensed. Upon catching the exception, the sample fetches the respective error message, the type of component that was not granted a license, the stack trace, and the origin of the exception.  \\n  \\n This example requires that you have specified the <xref:System.ComponentModel.LicenseProvider> by marking the <xref:System.Windows.Forms.Form?displayProperty=fullName> with a <xref:System.ComponentModel.LicenseProviderAttribute> attribute. For more information on how to do this, see the <xref:System.ComponentModel.LicenseManager> class.  \\n  \\n [!code-cpp[LicenseException#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LicenseException/CPP/licenseex.cpp#1)]\\n [!code-csharp[LicenseException#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LicenseException/CS/licenseex.cs#1)]\\n [!code-vb[LicenseException#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LicenseException/VB/licenseex.vb#1)]\"\n  syntax:\n    content: 'public class LicenseException : SystemException'\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseException.#ctor(System.Type)\n  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.LicenseException\n  langs:\n  - csharp\n  name: LicenseException(Type)\n  nameWithType: LicenseException.LicenseException(Type)\n  fullName: LicenseException.LicenseException(Type)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type of component that was denied a license.\n  syntax:\n    content: public LicenseException (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.\n  overload: System.ComponentModel.LicenseException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.ComponentModel.LicenseException\n  langs:\n  - csharp\n  name: LicenseException(SerializationInfo, StreamingContext)\n  nameWithType: LicenseException.LicenseException(SerializationInfo, StreamingContext)\n  fullName: LicenseException.LicenseException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class with the given <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>.\n  syntax:\n    content: protected LicenseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination to be used for deserialization.\n  overload: System.ComponentModel.LicenseException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)\n  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)\n  id: '#ctor(System.Type,System.Object)'\n  parent: System.ComponentModel.LicenseException\n  langs:\n  - csharp\n  name: LicenseException(Type, Object)\n  nameWithType: LicenseException.LicenseException(Type, Object)\n  fullName: LicenseException.LicenseException(Type, Object)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license.\n  syntax:\n    content: public LicenseException (Type type, object instance);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.\n    - id: instance\n      type: System.Object\n      description: The instance of the component that was not granted a license.\n  overload: System.ComponentModel.LicenseException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)\n  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)\n  id: '#ctor(System.Type,System.Object,System.String)'\n  parent: System.ComponentModel.LicenseException\n  langs:\n  - csharp\n  name: LicenseException(Type, Object, String)\n  nameWithType: LicenseException.LicenseException(Type, Object, String)\n  fullName: LicenseException.LicenseException(Type, Object, String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license, along with a message to display.\n  syntax:\n    content: public LicenseException (Type type, object instance, string message);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.\n    - id: instance\n      type: System.Object\n      description: The instance of the component that was not granted a license.\n    - id: message\n      type: System.String\n      description: The exception message to display.\n  overload: System.ComponentModel.LicenseException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)\n  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)\n  id: '#ctor(System.Type,System.Object,System.String,System.Exception)'\n  parent: System.ComponentModel.LicenseException\n  langs:\n  - csharp\n  name: LicenseException(Type, Object, String, Exception)\n  nameWithType: LicenseException.LicenseException(Type, Object, String, Exception)\n  fullName: LicenseException.LicenseException(Type, Object, String, Exception)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.LicenseException\"></xref> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown.\n  syntax:\n    content: public LicenseException (Type type, object instance, string message, Exception innerException);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.\n    - id: instance\n      type: System.Object\n      description: The instance of the component that was not granted a license.\n    - id: message\n      type: System.String\n      description: The exception message to display.\n    - id: innerException\n      type: System.Exception\n      description: An <xref href=\"System.Exception\"></xref> that represents the original exception.\n  overload: System.ComponentModel.LicenseException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.ComponentModel.LicenseException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: LicenseException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: LicenseException.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with information about the exception.\n  syntax:\n    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to be used for deserialization.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination to be used for deserialization.\n  overload: System.ComponentModel.LicenseException.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.LicenseException.LicensedType\n  commentId: P:System.ComponentModel.LicenseException.LicensedType\n  id: LicensedType\n  parent: System.ComponentModel.LicenseException\n  langs:\n  - csharp\n  name: LicensedType\n  nameWithType: LicenseException.LicensedType\n  fullName: LicenseException.LicensedType\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the type of the component that was not granted a license.\n  syntax:\n    content: public Type LicensedType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component that was not granted a license.\n  overload: System.ComponentModel.LicenseException.LicensedType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.LicenseException.#ctor(System.Type)\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: LicenseException(Type)\n  nameWithType: LicenseException.LicenseException(Type)\n  fullName: LicenseException.LicenseException(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: LicenseException(SerializationInfo, StreamingContext)\n  nameWithType: LicenseException.LicenseException(SerializationInfo, StreamingContext)\n  fullName: LicenseException.LicenseException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: LicenseException(Type, Object)\n  nameWithType: LicenseException.LicenseException(Type, Object)\n  fullName: LicenseException.LicenseException(Type, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: LicenseException(Type, Object, String)\n  nameWithType: LicenseException.LicenseException(Type, Object, String)\n  fullName: LicenseException.LicenseException(Type, Object, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: LicenseException(Type, Object, String, Exception)\n  nameWithType: LicenseException.LicenseException(Type, Object, String, Exception)\n  fullName: LicenseException.LicenseException(Type, Object, String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: LicenseException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: LicenseException.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.ComponentModel.LicenseException.LicensedType\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: LicensedType\n  nameWithType: LicenseException.LicensedType\n  fullName: LicenseException.LicensedType\n- uid: System.ComponentModel.LicenseException.#ctor*\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: LicenseException\n  nameWithType: LicenseException.LicenseException\n  fullName: LicenseException.LicenseException\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n- uid: System.ComponentModel.LicenseException.GetObjectData*\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: GetObjectData\n  nameWithType: LicenseException.GetObjectData\n  fullName: LicenseException.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n- uid: System.ComponentModel.LicenseException.LicensedType*\n  parent: System.ComponentModel.LicenseException\n  isExternal: false\n  name: LicensedType\n  nameWithType: LicenseException.LicensedType\n  fullName: LicenseException.LicensedType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}