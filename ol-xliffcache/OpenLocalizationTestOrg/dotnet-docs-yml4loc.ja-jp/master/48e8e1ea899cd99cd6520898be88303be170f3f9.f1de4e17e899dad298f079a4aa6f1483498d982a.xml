{"nodes":[{"content":"Automatically generates single-table commands that are used to reconcile changes made to a <xref href=\"System.Data.DataSet\"></xref> with the associated SQL Server database. This class cannot be inherited.","nodes":[{"pos":[0,204],"content":"Automatically generates single-table commands that are used to reconcile changes made to a <xref href=\"System.Data.DataSet\"></xref> with the associated SQL Server database. This class cannot be inherited.","nodes":[{"content":"Automatically generates single-table commands that are used to reconcile changes made to a <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph> with the associated SQL Server database.","pos":[0,172],"source":"Automatically generates single-table commands that are used to reconcile changes made to a <xref href=\"System.Data.DataSet\"></xref> with the associated SQL Server database."},{"content":"This class cannot be inherited.","pos":[173,204]}]}],"pos":[2214,2419],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlDataAdapter> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated instance of SQL Server. However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> object to automatically generate Transact-SQL statements for single-table updates if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property of the <xref:System.Data.SqlClient.SqlDataAdapter>. Then, any additional Transact-SQL statements that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.  \n  \n The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A> property. You can only associate one <xref:System.Data.SqlClient.SqlDataAdapter> or <xref:System.Data.SqlClient.SqlCommandBuilder> object with each other at one time.  \n  \n To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.SqlClient.SqlCommandBuilder> uses the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically. If you change the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.  \n  \n The `SelectCommand` must also return at least one primary key or unique column. If none are present, an **InvalidOperation** exception is generated, and the commands are not generated.  \n  \n The <xref:System.Data.SqlClient.SqlCommandBuilder> also uses the <xref:System.Data.SqlClient.SqlCommand.Connection%2A>, <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>, and <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> properties referenced by the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>. The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> itself is replaced. Otherwise the <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties retain their previous values.  \n  \n If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.SqlClient.SqlCommandBuilder> is disassociated from the <xref:System.Data.SqlClient.SqlDataAdapter>, and the generated commands are no longer used.","nodes":[{"pos":[0,644],"content":"The <xref:System.Data.SqlClient.SqlDataAdapter> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated instance of SQL Server. However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> object to automatically generate Transact-SQL statements for single-table updates if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property of the <xref:System.Data.SqlClient.SqlDataAdapter>. Then, any additional Transact-SQL statements that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlDataAdapter> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated instance of SQL Server. However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> object to automatically generate Transact-SQL statements for single-table updates if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property of the <xref:System.Data.SqlClient.SqlDataAdapter>. Then, any additional Transact-SQL statements that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.","pos":[0,644],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph> with the associated instance of SQL Server.","pos":[0,218],"source":"The <xref:System.Data.SqlClient.SqlDataAdapter> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated instance of SQL Server."},{"content":"However, you can create a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object to automatically generate Transact-SQL statements for single-table updates if you set the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.","pos":[219,510],"source":" However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> object to automatically generate Transact-SQL statements for single-table updates if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property of the <xref:System.Data.SqlClient.SqlDataAdapter>."},{"content":"Then, any additional Transact-SQL statements that you do not set are generated by the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.","pos":[511,644],"source":" Then, any additional Transact-SQL statements that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>."}]}]},{"pos":[651,1049],"content":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A> property. You can only associate one <xref:System.Data.SqlClient.SqlDataAdapter> or <xref:System.Data.SqlClient.SqlCommandBuilder> object with each other at one time.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A> property. You can only associate one <xref:System.Data.SqlClient.SqlDataAdapter> or <xref:System.Data.SqlClient.SqlCommandBuilder> object with each other at one time.","pos":[0,398],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph> property.","pos":[0,241],"source":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A> property."},{"content":"You can only associate one <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object with each other at one time.","pos":[242,398],"source":" You can only associate one <xref:System.Data.SqlClient.SqlDataAdapter> or <xref:System.Data.SqlClient.SqlCommandBuilder> object with each other at one time."}]}]},{"pos":[1056,1550],"content":"To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.SqlClient.SqlCommandBuilder> uses the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically. If you change the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.","nodes":[{"content":"To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.SqlClient.SqlCommandBuilder> uses the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically. If you change the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.","pos":[0,494],"nodes":[{"content":"To generate INSERT, UPDATE, or DELETE statements, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> uses the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.","pos":[0,233],"source":"To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.SqlClient.SqlCommandBuilder> uses the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically."},{"content":"If you change the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved, such as after the first update, you should call the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.","pos":[234,494],"source":" If you change the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata."}]}]},{"pos":[1557,1741],"content":"The `SelectCommand` must also return at least one primary key or unique column. If none are present, an **InvalidOperation** exception is generated, and the commands are not generated.","nodes":[{"content":"The <ph id=\"ph1\">`SelectCommand`</ph> must also return at least one primary key or unique column.","pos":[0,79],"source":"The `SelectCommand` must also return at least one primary key or unique column."},{"content":"If none are present, an <bpt id=\"p1\">**</bpt>InvalidOperation<ept id=\"p1\">**</ept> exception is generated, and the commands are not generated.","pos":[80,184],"source":" If none are present, an **InvalidOperation** exception is generated, and the commands are not generated."}]},{"pos":[1748,2541],"content":"The <xref:System.Data.SqlClient.SqlCommandBuilder> also uses the <xref:System.Data.SqlClient.SqlCommand.Connection%2A>, <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>, and <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> properties referenced by the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>. The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> itself is replaced. Otherwise the <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties retain their previous values.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlCommandBuilder> also uses the <xref:System.Data.SqlClient.SqlCommand.Connection%2A>, <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>, and <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> properties referenced by the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>. The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> itself is replaced. Otherwise the <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties retain their previous values.","pos":[0,793],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> also uses the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id=\"ph5\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>.","pos":[0,328],"source":"The <xref:System.Data.SqlClient.SqlCommandBuilder> also uses the <xref:System.Data.SqlClient.SqlCommand.Connection%2A>, <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>, and <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> properties referenced by the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>."},{"content":"The user should call <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if one or more of these properties are modified, or if the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.","pos":[329,549],"source":" The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> itself is replaced."},{"content":"Otherwise the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.","pos":[550,793],"source":" Otherwise the <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties retain their previous values."}]}]},{"pos":[2548,2779],"content":"If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.SqlClient.SqlCommandBuilder> is disassociated from the <xref:System.Data.SqlClient.SqlDataAdapter>, and the generated commands are no longer used.","nodes":[{"content":"If you call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> is disassociated from the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, and the generated commands are no longer used.","pos":[0,231],"source":"If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.SqlClient.SqlCommandBuilder> is disassociated from the <xref:System.Data.SqlClient.SqlDataAdapter>, and the generated commands are no longer used."}]}],"pos":[2430,5222],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommandBuilder\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class."}],"pos":[8564,8666],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class with the associated <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object.","nodes":[{"pos":[0,186],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommandBuilder\"&gt;&lt;/xref&gt;</ph> class with the associated <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataAdapter\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class with the associated <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object."}],"pos":[10060,10247],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property.  \n  \n When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released.","nodes":[{"pos":[0,246],"content":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.","pos":[0,246],"source":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property."}]},{"pos":[253,472],"content":"When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released.","nodes":[{"content":"When you create a new instance of <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.","pos":[0,219],"source":"When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released."}]}],"pos":[10258,10735],"yaml":true,"extradata":"MT"},{"content":"The name of the <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref>.","nodes":[{"pos":[0,74],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataAdapter\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref>."}],"pos":[10933,11008],"yaml":true},{"content":"Sets or gets the <xref href=\"System.Data.Common.CatalogLocation\"></xref> for an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class.","nodes":[{"pos":[0,163],"content":"Sets or gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CatalogLocation\"&gt;&lt;/xref&gt;</ph> for an instance of the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommandBuilder\"&gt;&lt;/xref&gt;</ph> class.","source":"Sets or gets the <xref href=\"System.Data.Common.CatalogLocation\"></xref> for an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class."}],"pos":[14231,14395],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CatalogLocation\"></xref> object.","nodes":[{"pos":[0,65],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CatalogLocation\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Data.Common.CatalogLocation\"></xref> object."}],"pos":[14634,14700],"yaml":true},{"content":"Sets or gets a string used as the catalog separator for an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class.","nodes":[{"pos":[0,142],"content":"Sets or gets a string used as the catalog separator for an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommandBuilder\"&gt;&lt;/xref&gt;</ph> class.","source":"Sets or gets a string used as the catalog separator for an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class."}],"pos":[15961,16104],"yaml":true},{"content":"A string that indicates the catalog separator for use with an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class.","nodes":[{"pos":[0,145],"content":"A string that indicates the catalog separator for use with an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommandBuilder\"&gt;&lt;/xref&gt;</ph> class.","source":"A string that indicates the catalog separator for use with an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class."}],"pos":[16295,16441],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object for which Transact-SQL statements are automatically generated.","nodes":[{"pos":[0,142],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataAdapter\"&gt;&lt;/xref&gt;</ph> object for which Transact-SQL statements are automatically generated.","source":"Gets or sets a <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object for which Transact-SQL statements are automatically generated."}],"pos":[17673,17816],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property.  \n  \n When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released.","nodes":[{"pos":[0,246],"content":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.","pos":[0,246],"source":"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property."}]},{"pos":[253,472],"content":"When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released.","nodes":[{"content":"When you create a new instance of <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.","pos":[0,219],"source":"When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released."}]}],"pos":[17827,18304],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object.","nodes":[{"pos":[0,67],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataAdapter\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object."}],"pos":[18477,18545],"yaml":true},{"content":"Retrieves parameter information from the stored procedure specified in the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and populates the <xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"></xref> collection of the specified <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object.","nodes":[{"pos":[0,301],"content":"Retrieves parameter information from the stored procedure specified in the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> and populates the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"&gt;&lt;/xref&gt;</ph> collection of the specified <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves parameter information from the stored procedure specified in the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and populates the <xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"></xref> collection of the specified <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object."}],"pos":[19890,20192],"yaml":true},{"content":"`DeriveParameters` overwrites any existing parameter information for the `SqlDbCommand`.  \n  \n `DeriveParameters` requires an additional call to the database to obtain the information. If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.  \n  \n You can only use `DeriveParameters` with stored procedures. You cannot use `DeriveParameters` with extended stored procedures. You cannot use `DeriveParameters` to populate the <xref:System.Data.SqlClient.SqlParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.  \n  \n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`DeriveParameters`</ph> overwrites any existing parameter information for the <ph id=\"ph2\">`SqlDbCommand`</ph>.","source":"`DeriveParameters` overwrites any existing parameter information for the `SqlDbCommand`."},{"pos":[95,332],"content":"`DeriveParameters` requires an additional call to the database to obtain the information. If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.","nodes":[{"content":"<ph id=\"ph1\">`DeriveParameters`</ph> requires an additional call to the database to obtain the information.","pos":[0,89],"source":"`DeriveParameters` requires an additional call to the database to obtain the information."},{"content":"If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.","pos":[90,237]}]},{"pos":[339,649],"content":"You can only use `DeriveParameters` with stored procedures. You cannot use `DeriveParameters` with extended stored procedures. You cannot use `DeriveParameters` to populate the <xref:System.Data.SqlClient.SqlParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.","nodes":[{"content":"You can only use <ph id=\"ph1\">`DeriveParameters`</ph> with stored procedures.","pos":[0,59],"source":"You can only use `DeriveParameters` with stored procedures."},{"content":"You cannot use <ph id=\"ph1\">`DeriveParameters`</ph> with extended stored procedures.","pos":[60,126],"source":" You cannot use `DeriveParameters` with extended stored procedures."},{"content":"You cannot use <ph id=\"ph1\">`DeriveParameters`</ph> to populate the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.","pos":[127,310],"source":" You cannot use `DeriveParameters` to populate the <xref:System.Data.SqlClient.SqlParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement."}]},{"pos":[656,813],"content":"For more information, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.","source":"For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)."}],"pos":[20203,21025],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> referencing the stored procedure from which the parameter information is to be derived. The derived parameters are added to the <xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"></xref> collection of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.","nodes":[{"pos":[0,323],"content":"The <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> referencing the stored procedure from which the parameter information is to be derived. The derived parameters are added to the <xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"></xref> collection of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.","pos":[0,145],"source":"The <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> referencing the stored procedure from which the parameter information is to be derived."},{"content":"The derived parameters are added to the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"&gt;&lt;/xref&gt;</ph> collection of the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","pos":[146,323],"source":" The derived parameters are added to the <xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"></xref> collection of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."}]}],"pos":[21226,21550],"yaml":true},{"content":"The command text is not a valid stored procedure name.","nodes":[{"pos":[0,54],"content":"The command text is not a valid stored procedure name.","nodes":[{"content":"The command text is not a valid stored procedure name.","pos":[0,54]}]}],"pos":[21744,21799],"yaml":true},{"content":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform deletions on the database.","nodes":[{"pos":[0,140],"content":"Gets the automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object required to perform deletions on the database.","source":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform deletions on the database."}],"pos":[22913,23054],"yaml":true},{"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \n  \n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \n  \n After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.  \n  \n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"pos":[0,232],"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.","nodes":[{"content":"An application can use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.","pos":[0,232],"source":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed."}]},{"pos":[239,614],"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","nodes":[{"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","pos":[0,375],"nodes":[{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.","pos":[0,119],"source":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command."},{"content":"For example, you might call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.","pos":[120,375],"source":" For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>."}]}]},{"pos":[621,1166],"content":"After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.","nodes":[{"content":"After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.","pos":[0,545],"nodes":[{"content":"After the SQL statement is first generated, the application must explicitly call <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.","pos":[0,180],"source":"After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way."},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.","pos":[181,351],"source":" Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct."},{"content":"The SQL statements are first generated when the application calls either <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.","pos":[352,545],"source":" The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>."}]}]},{"pos":[1173,1316],"content":"For more information, see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","source":"For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}],"pos":[23065,24390],"yaml":true,"extradata":"MT"},{"content":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform deletions.","nodes":[{"pos":[0,119],"content":"The automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object required to perform deletions.","source":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform deletions."}],"pos":[24569,24689],"yaml":true},{"content":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform deletions on the database.","nodes":[{"pos":[0,148],"content":"Gets the automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is required to perform deletions on the database.","source":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform deletions on the database."}],"pos":[25959,26108],"yaml":true},{"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \n  \n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \n  \n After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.  \n  \n The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:  \n  \n-   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.  \n  \n-   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.  \n  \n-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.  \n  \n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"pos":[0,232],"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.","nodes":[{"content":"An application can use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.","pos":[0,232],"source":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed."}]},{"pos":[239,614],"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","nodes":[{"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","pos":[0,375],"nodes":[{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.","pos":[0,119],"source":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command."},{"content":"For example, you might call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.","pos":[120,375],"source":" For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>."}]}]},{"pos":[621,1166],"content":"After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.","nodes":[{"content":"After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.","pos":[0,545],"nodes":[{"content":"After the SQL statement is first generated, the application must explicitly call <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.","pos":[0,180],"source":"After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way."},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.","pos":[181,351],"source":" Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct."},{"content":"The SQL statements are first generated when the application calls either <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.","pos":[352,545],"source":" The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>."}]}]},{"pos":[1173,1526],"content":"The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:","nodes":[{"content":"The default behavior, when generating parameter names, is to use <ph id=\"ph1\">@p1</ph>, <ph id=\"ph2\">@p2</ph>, and so on for the various parameters.","pos":[0,112],"source":"The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters."},{"content":"Passing <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id=\"ph3\">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.","pos":[113,297],"source":" Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead."},{"content":"This succeeds only if the following conditions are met:","pos":[298,353]}]},{"pos":[1536,1848],"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.","source":"The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name."},{"pos":[1858,2157],"content":"The generated parameter name meets the criteria specified in the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.","source":"The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression."},{"pos":[2167,2398],"content":"A <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.","source":"A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified."},{"pos":[2405,2548],"content":"For more information, see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","source":"For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}],"pos":[26119,28684],"yaml":true,"extradata":"MT"},{"content":"If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.","nodes":[{"pos":[0,112],"content":"If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, generate parameter names matching column names if possible.","pos":[0,70],"source":"If `true`, generate parameter names matching column names if possible."},{"content":"If <ph id=\"ph1\">`false`</ph>, generate <ph id=\"ph2\">@p1</ph>, <ph id=\"ph3\">@p2</ph>, and so on.","pos":[71,112],"source":" If `false`, generate @p1, @p2, and so on."}]}],"pos":[28900,29013],"yaml":true},{"content":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform deletions.","nodes":[{"pos":[0,127],"content":"The automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is required to perform deletions.","source":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform deletions."}],"pos":[29089,29217],"yaml":true},{"content":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform insertions on the database.","nodes":[{"pos":[0,141],"content":"Gets the automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object required to perform insertions on the database.","source":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform insertions on the database."}],"pos":[30418,30560],"yaml":true},{"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \n  \n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \n  \n After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.  \n  \n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"pos":[0,232],"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.","nodes":[{"content":"An application can use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.","pos":[0,232],"source":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed."}]},{"pos":[239,614],"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","nodes":[{"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","pos":[0,375],"nodes":[{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.","pos":[0,119],"source":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command."},{"content":"For example, you might call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.","pos":[120,375],"source":" For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>."}]}]},{"pos":[621,1184],"content":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.","nodes":[{"content":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.","pos":[0,563],"nodes":[{"content":"After the Transact-SQL statement is first generated, the application must explicitly call <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.","pos":[0,189],"source":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way."},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.","pos":[190,360],"source":" Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct."},{"content":"The Transact-SQL statements are first generated when the application calls either <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.","pos":[361,563],"source":" The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>."}]}]},{"pos":[1191,1334],"content":"For more information, see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","source":"For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}],"pos":[30571,31914],"yaml":true,"extradata":"MT"},{"content":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform insertions.","nodes":[{"pos":[0,120],"content":"The automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object required to perform insertions.","source":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform insertions."}],"pos":[32093,32214],"yaml":true},{"content":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform insertions on the database.","nodes":[{"pos":[0,149],"content":"Gets the automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is required to perform insertions on the database.","source":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform insertions on the database."}],"pos":[33484,33634],"yaml":true},{"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \n  \n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \n  \n After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.  \n  \n The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:  \n  \n-   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.  \n  \n-   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.  \n  \n-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.  \n  \n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"pos":[0,232],"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.","nodes":[{"content":"An application can use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.","pos":[0,232],"source":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed."}]},{"pos":[239,614],"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","nodes":[{"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","pos":[0,375],"nodes":[{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.","pos":[0,119],"source":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command."},{"content":"For example, you might call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.","pos":[120,375],"source":" For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>."}]}]},{"pos":[621,1184],"content":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.","nodes":[{"content":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.","pos":[0,563],"nodes":[{"content":"After the Transact-SQL statement is first generated, the application must explicitly call <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.","pos":[0,189],"source":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way."},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.","pos":[190,360],"source":" Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct."},{"content":"The Transact-SQL statements are first generated when the application calls either <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.","pos":[361,563],"source":" The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>."}]}]},{"pos":[1191,1544],"content":"The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:","nodes":[{"content":"The default behavior, when generating parameter names, is to use <ph id=\"ph1\">@p1</ph>, <ph id=\"ph2\">@p2</ph>, and so on for the various parameters.","pos":[0,112],"source":"The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters."},{"content":"Passing <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id=\"ph3\">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.","pos":[113,297],"source":" Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead."},{"content":"This succeeds only if the following conditions are met:","pos":[298,353]}]},{"pos":[1554,1866],"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.","source":"The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name."},{"pos":[1876,2175],"content":"The generated parameter name meets the criteria specified in the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.","source":"The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression."},{"pos":[2185,2416],"content":"A <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.","source":"A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified."},{"pos":[2423,2566],"content":"For more information, see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","source":"For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}],"pos":[33645,36228],"yaml":true,"extradata":"MT"},{"content":"If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.","nodes":[{"pos":[0,112],"content":"If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, generate parameter names matching column names if possible.","pos":[0,70],"source":"If `true`, generate parameter names matching column names if possible."},{"content":"If <ph id=\"ph1\">`false`</ph>, generate <ph id=\"ph2\">@p1</ph>, <ph id=\"ph3\">@p2</ph>, and so on.","pos":[71,112],"source":" If `false`, generate @p1, @p2, and so on."}]}],"pos":[36444,36557],"yaml":true},{"content":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform insertions.","nodes":[{"pos":[0,128],"content":"The automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is required to perform insertions.","source":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform insertions."}],"pos":[36633,36762],"yaml":true},{"content":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates on the database.","nodes":[{"pos":[0,138],"content":"Gets the automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object required to perform updates on the database.","source":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates on the database."}],"pos":[43675,43814],"yaml":true},{"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \n  \n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \n  \n After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.  \n  \n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"pos":[0,232],"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.","nodes":[{"content":"An application can use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.","pos":[0,232],"source":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed."}]},{"pos":[239,614],"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","nodes":[{"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","pos":[0,375],"nodes":[{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.","pos":[0,119],"source":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command."},{"content":"For example, you might call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.","pos":[120,375],"source":" For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>."}]}]},{"pos":[621,1184],"content":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.","nodes":[{"content":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.","pos":[0,563],"nodes":[{"content":"After the Transact-SQL statement is first generated, the application must explicitly call <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.","pos":[0,189],"source":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way."},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.","pos":[190,360],"source":" Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct."},{"content":"The Transact-SQL statements are first generated when the application calls either <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.","pos":[361,563],"source":" The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>."}]}]},{"pos":[1191,1334],"content":"For more information, see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","source":"For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}],"pos":[43825,45168],"yaml":true,"extradata":"MT"},{"content":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform updates.","nodes":[{"pos":[0,125],"content":"The automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is required to perform updates.","source":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform updates."}],"pos":[45347,45473],"yaml":true},{"content":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates on the database.","nodes":[{"pos":[0,138],"content":"Gets the automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object required to perform updates on the database.","source":"Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates on the database."}],"pos":[46743,46882],"yaml":true},{"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \n  \n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \n  \n After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.  \n  \n The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:  \n  \n-   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.  \n  \n-   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.  \n  \n-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.  \n  \n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"pos":[0,232],"content":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.","nodes":[{"content":"An application can use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.","pos":[0,232],"source":"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed."}]},{"pos":[239,614],"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","nodes":[{"content":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.","pos":[0,375],"nodes":[{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.","pos":[0,119],"source":"You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command."},{"content":"For example, you might call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.","pos":[120,375],"source":" For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>."}]}]},{"pos":[621,1184],"content":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.","nodes":[{"content":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.","pos":[0,563],"nodes":[{"content":"After the Transact-SQL statement is first generated, the application must explicitly call <ph id=\"ph1\">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.","pos":[0,189],"source":"After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way."},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.","pos":[190,360],"source":" Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct."},{"content":"The Transact-SQL statements are first generated when the application calls either <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.","pos":[361,563],"source":" The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>."}]}]},{"pos":[1191,1544],"content":"The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:","nodes":[{"content":"The default behavior, when generating parameter names, is to use <ph id=\"ph1\">@p1</ph>, <ph id=\"ph2\">@p2</ph>, and so on for the various parameters.","pos":[0,112],"source":"The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters."},{"content":"Passing <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id=\"ph3\">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.","pos":[113,297],"source":" Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead."},{"content":"This succeeds only if the following conditions are met:","pos":[298,353]}]},{"pos":[1554,1866],"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.","source":"The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name."},{"pos":[1876,2175],"content":"The generated parameter name meets the criteria specified in the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.","source":"The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression."},{"pos":[2185,2416],"content":"A <ph id=\"ph1\">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id=\"p1\">**</bpt>GetSchema<ept id=\"p1\">**</ept> method call and found in the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.","source":"A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified."},{"pos":[2423,2566],"content":"For more information, see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","source":"For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}],"pos":[46893,49476],"yaml":true,"extradata":"MT"},{"content":"If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.","nodes":[{"pos":[0,112],"content":"If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, generate parameter names matching column names if possible.","pos":[0,70],"source":"If `true`, generate parameter names matching column names if possible."},{"content":"If <ph id=\"ph1\">`false`</ph>, generate <ph id=\"ph2\">@p1</ph>, <ph id=\"ph3\">@p2</ph>, and so on.","pos":[71,112],"source":" If `false`, generate @p1, @p2, and so on."}]}],"pos":[49692,49805],"yaml":true},{"content":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates.","nodes":[{"pos":[0,117],"content":"The automatically generated <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object required to perform updates.","source":"The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates."}],"pos":[49881,49999],"yaml":true},{"content":"Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier.","nodes":[{"pos":[0,181],"content":"Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier.","nodes":[{"content":"Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier.","pos":[0,181],"nodes":[{"content":"Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.","pos":[0,109]},{"content":"This includes correctly escaping any embedded quotes in the identifier.","pos":[110,181]}]}]}],"pos":[52774,52956],"yaml":true},{"content":"The original unquoted identifier.","nodes":[{"pos":[0,33],"content":"The original unquoted identifier.","nodes":[{"content":"The original unquoted identifier.","pos":[0,33]}]}],"pos":[53137,53171],"yaml":true},{"content":"The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.","nodes":[{"pos":[0,98],"content":"The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.","nodes":[{"content":"The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.","pos":[0,98],"nodes":[{"content":"The quoted version of the identifier.","pos":[0,37]},{"content":"Embedded quotes within the identifier are correctly escaped.","pos":[38,98]}]}]}],"pos":[53228,53327],"yaml":true},{"content":"Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.","nodes":[{"pos":[0,194],"content":"Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.","nodes":[{"content":"Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.","pos":[0,194]}]}],"pos":[54493,54688],"yaml":true},{"content":"> [!NOTE]\n>  Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a DataAdapter.","nodes":[{"pos":[2,326],"content":"[!NOTE]\n Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a DataAdapter.","leadings":["","> "],"nodes":[{"content":"Although you cannot change the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id=\"ph3\">`Update`</ph> method of a DataAdapter.","pos":[9,322],"source":" Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a DataAdapter."}]}],"pos":[54699,55038],"yaml":true,"extradata":"MT"},{"content":"The starting character or characters to use. The default is an empty string.","nodes":[{"pos":[0,76],"content":"The starting character or characters to use. The default is an empty string.","nodes":[{"content":"The starting character or characters to use. The default is an empty string.","pos":[0,76],"nodes":[{"content":"The starting character or characters to use.","pos":[0,44]},{"content":"The default is an empty string.","pos":[45,76]}]}]}],"pos":[55224,55301],"yaml":true},{"content":"This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.","nodes":[{"pos":[0,94],"content":"This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.","nodes":[{"content":"This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.","pos":[0,94]}]}],"pos":[55490,55585],"yaml":true},{"content":"Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.","nodes":[{"pos":[0,192],"content":"Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.","nodes":[{"content":"Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.","pos":[0,192]}]}],"pos":[56730,56923],"yaml":true},{"content":"> [!NOTE]\n>  Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the `Update` method of a DataAdapter.","nodes":[{"pos":[2,328],"content":"[!NOTE]\n Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the `Update` method of a DataAdapter.","leadings":["","> "],"nodes":[{"content":"Although you cannot change the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the <ph id=\"ph3\">`Update`</ph> method of a DataAdapter.","pos":[9,324],"source":" Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the `Update` method of a DataAdapter."}]}],"pos":[56934,57275],"yaml":true,"extradata":"MT"},{"content":"The ending character or characters to use. The default is an empty string.","nodes":[{"pos":[0,74],"content":"The ending character or characters to use. The default is an empty string.","nodes":[{"content":"The ending character or characters to use. The default is an empty string.","pos":[0,74],"nodes":[{"content":"The ending character or characters to use.","pos":[0,42]},{"content":"The default is an empty string.","pos":[43,74]}]}]}],"pos":[57461,57536],"yaml":true},{"content":"This property cannot be changed after an insert, update, or delete command has been generated.","nodes":[{"pos":[0,94],"content":"This property cannot be changed after an insert, update, or delete command has been generated.","nodes":[{"content":"This property cannot be changed after an insert, update, or delete command has been generated.","pos":[0,94]}]}],"pos":[57725,57820],"yaml":true},{"content":"Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.","nodes":[{"pos":[0,112],"content":"Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.","nodes":[{"content":"Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.","pos":[0,112]}]}],"pos":[58989,59102],"yaml":true},{"content":"Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character. For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where \"Person\" is the schema name and \"CustomerName\" is the identifier. Setting this property lets developers modify this behavior.","nodes":[{"pos":[0,365],"content":"Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character. For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where \"Person\" is the schema name and \"CustomerName\" is the identifier. Setting this property lets developers modify this behavior.","nodes":[{"content":"Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character. For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where \"Person\" is the schema name and \"CustomerName\" is the identifier. Setting this property lets developers modify this behavior.","pos":[0,365],"nodes":[{"content":"Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.","pos":[0,135]},{"content":"For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where \"Person\" is the schema name and \"CustomerName\" is the identifier.","pos":[136,305]},{"content":"Setting this property lets developers modify this behavior.","pos":[306,365]}]}]}],"pos":[59113,59479],"yaml":true,"extradata":"MT"},{"content":"The character to be used as the schema separator.","nodes":[{"pos":[0,49],"content":"The character to be used as the schema separator.","nodes":[{"content":"The character to be used as the schema separator.","pos":[0,49]}]}],"pos":[59669,59719],"yaml":true},{"content":"Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly unescaping any embedded quotes in the identifier.","nodes":[{"pos":[0,154],"content":"Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly unescaping any embedded quotes in the identifier.","nodes":[{"content":"Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly unescaping any embedded quotes in the identifier.","pos":[0,154],"nodes":[{"content":"Given a quoted identifier, returns the correct unquoted form of that identifier.","pos":[0,80]},{"content":"This includes correctly unescaping any embedded quotes in the identifier.","pos":[81,154]}]}]}],"pos":[62535,62690],"yaml":true},{"content":"The identifier that will have its embedded quotes removed.","nodes":[{"pos":[0,58],"content":"The identifier that will have its embedded quotes removed.","nodes":[{"content":"The identifier that will have its embedded quotes removed.","pos":[0,58]}]}],"pos":[62869,62928],"yaml":true},{"content":"The unquoted identifier, with embedded quotes properly unescaped.","nodes":[{"pos":[0,65],"content":"The unquoted identifier, with embedded quotes properly unescaped.","nodes":[{"content":"The unquoted identifier, with embedded quotes properly unescaped.","pos":[0,65]}]}],"pos":[62985,63051],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlClient.SqlCommandBuilder\n  commentId: T:System.Data.SqlClient.SqlCommandBuilder\n  id: SqlCommandBuilder\n  children:\n  - System.Data.SqlClient.SqlCommandBuilder.#ctor\n  - System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)\n  - System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)\n  - System.Data.SqlClient.SqlCommandBuilder.CatalogLocation\n  - System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator\n  - System.Data.SqlClient.SqlCommandBuilder.DataAdapter\n  - System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)\n  - System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand\n  - System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)\n  - System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand\n  - System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)\n  - System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)\n  - System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)\n  - System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)\n  - System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)\n  - System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand\n  - System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)\n  - System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)\n  - System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)\n  - System.Data.SqlClient.SqlCommandBuilder.QuotePrefix\n  - System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix\n  - System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator\n  - System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)\n  - System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)\n  langs:\n  - csharp\n  name: SqlCommandBuilder\n  nameWithType: SqlCommandBuilder\n  fullName: System.Data.SqlClient.SqlCommandBuilder\n  type: Class\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Automatically generates single-table commands that are used to reconcile changes made to a <xref href=\"System.Data.DataSet\"></xref> with the associated SQL Server database. This class cannot be inherited.\n  remarks: \"The <xref:System.Data.SqlClient.SqlDataAdapter> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated instance of SQL Server. However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> object to automatically generate Transact-SQL statements for single-table updates if you set the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property of the <xref:System.Data.SqlClient.SqlDataAdapter>. Then, any additional Transact-SQL statements that you do not set are generated by the <xref:System.Data.SqlClient.SqlCommandBuilder>.  \\n  \\n The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A> property. You can only associate one <xref:System.Data.SqlClient.SqlDataAdapter> or <xref:System.Data.SqlClient.SqlCommandBuilder> object with each other at one time.  \\n  \\n To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.SqlClient.SqlCommandBuilder> uses the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically. If you change the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.  \\n  \\n The `SelectCommand` must also return at least one primary key or unique column. If none are present, an **InvalidOperation** exception is generated, and the commands are not generated.  \\n  \\n The <xref:System.Data.SqlClient.SqlCommandBuilder> also uses the <xref:System.Data.SqlClient.SqlCommand.Connection%2A>, <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>, and <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> properties referenced by the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>. The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> itself is replaced. Otherwise the <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties retain their previous values.  \\n  \\n If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.SqlClient.SqlCommandBuilder> is disassociated from the <xref:System.Data.SqlClient.SqlDataAdapter>, and the generated commands are no longer used.\"\n  example:\n  - \"The following example uses the <xref:System.Data.SqlClient.SqlCommand>, along <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select rows from a data source. The example is passed a connection string, a query string that is a Transact-SQL SELECT statement, and a string that is the name of the database table. The example then creates a <xref:System.Data.SqlClient.SqlCommandBuilder>.  \\n  \\n [!code-csharp[Classic WebData SqlCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommandBuilder/CS/Source.cs#1)]\\n [!code-vb[Classic WebData SqlCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommandBuilder/VB/Source.vb#1)]\"\n  syntax:\n    content: 'public sealed class SqlCommandBuilder : System.Data.Common.DbCommandBuilder'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Data.Common.DbCommandBuilder\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.Data.Common.DbCommandBuilder.ConflictOption\n  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)\n  - System.Data.Common.DbCommandBuilder.RefreshSchema\n  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)\n  - System.Data.Common.DbCommandBuilder.SetAllValues\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: SqlCommandBuilder()\n  nameWithType: SqlCommandBuilder.SqlCommandBuilder()\n  fullName: SqlCommandBuilder.SqlCommandBuilder()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class.\n  syntax:\n    content: public SqlCommandBuilder ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlCommandBuilder.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)\n  id: '#ctor(System.Data.SqlClient.SqlDataAdapter)'\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: SqlCommandBuilder(SqlDataAdapter)\n  nameWithType: SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)\n  fullName: SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class with the associated <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property.  \\n  \\n When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released.\"\n  syntax:\n    content: public SqlCommandBuilder (System.Data.SqlClient.SqlDataAdapter adapter);\n    parameters:\n    - id: adapter\n      type: System.Data.SqlClient.SqlDataAdapter\n      description: The name of the <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref>.\n  overload: System.Data.SqlClient.SqlCommandBuilder.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)\n  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: ApplyParameterInfo(DbParameter, DataRow, StatementType, Boolean)\n  nameWithType: SqlCommandBuilder.ApplyParameterInfo(DbParameter, DataRow, StatementType, Boolean)\n  fullName: SqlCommandBuilder.ApplyParameterInfo(DbParameter, DataRow, StatementType, Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);\n    parameters:\n    - id: parameter\n      type: System.Data.Common.DbParameter\n      description: ''\n    - id: datarow\n      type: System.Data.DataRow\n      description: ''\n    - id: statementType\n      type: System.Data.StatementType\n      description: ''\n    - id: whereClause\n      type: System.Boolean\n      description: ''\n  overload: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation\n  commentId: P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation\n  id: CatalogLocation\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: CatalogLocation\n  nameWithType: SqlCommandBuilder.CatalogLocation\n  fullName: SqlCommandBuilder.CatalogLocation\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Sets or gets the <xref href=\"System.Data.Common.CatalogLocation\"></xref> for an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }\n    return:\n      type: System.Data.Common.CatalogLocation\n      description: A <xref href=\"System.Data.Common.CatalogLocation\"></xref> object.\n  overload: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator\n  commentId: P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator\n  id: CatalogSeparator\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: CatalogSeparator\n  nameWithType: SqlCommandBuilder.CatalogSeparator\n  fullName: SqlCommandBuilder.CatalogSeparator\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Sets or gets a string used as the catalog separator for an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override string CatalogSeparator { get; set; }\n    return:\n      type: System.String\n      description: A string that indicates the catalog separator for use with an instance of the <xref href=\"System.Data.SqlClient.SqlCommandBuilder\"></xref> class.\n  overload: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter\n  commentId: P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter\n  id: DataAdapter\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: DataAdapter\n  nameWithType: SqlCommandBuilder.DataAdapter\n  fullName: SqlCommandBuilder.DataAdapter\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets or sets a <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object for which Transact-SQL statements are automatically generated.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommandBuilder> registers itself as a listener for <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.SqlClient.SqlDataAdapter> specified in this property.  \\n  \\n When you create a new instance of <xref:System.Data.SqlClient.SqlCommandBuilder>, any existing <xref:System.Data.SqlClient.SqlCommandBuilder> associated with this <xref:System.Data.SqlClient.SqlDataAdapter> is released.\"\n  syntax:\n    content: public System.Data.SqlClient.SqlDataAdapter DataAdapter { get; set; }\n    return:\n      type: System.Data.SqlClient.SqlDataAdapter\n      description: A <xref href=\"System.Data.SqlClient.SqlDataAdapter\"></xref> object.\n  overload: System.Data.SqlClient.SqlCommandBuilder.DataAdapter*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)\n  id: DeriveParameters(System.Data.SqlClient.SqlCommand)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: DeriveParameters(SqlCommand)\n  nameWithType: SqlCommandBuilder.DeriveParameters(SqlCommand)\n  fullName: SqlCommandBuilder.DeriveParameters(SqlCommand)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Retrieves parameter information from the stored procedure specified in the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and populates the <xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"></xref> collection of the specified <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object.\n  remarks: \"`DeriveParameters` overwrites any existing parameter information for the `SqlDbCommand`.  \\n  \\n `DeriveParameters` requires an additional call to the database to obtain the information. If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.  \\n  \\n You can only use `DeriveParameters` with stored procedures. You cannot use `DeriveParameters` with extended stored procedures. You cannot use `DeriveParameters` to populate the <xref:System.Data.SqlClient.SqlParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.  \\n  \\n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).\"\n  syntax:\n    content: public static void DeriveParameters (System.Data.SqlClient.SqlCommand command);\n    parameters:\n    - id: command\n      type: System.Data.SqlClient.SqlCommand\n      description: The <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> referencing the stored procedure from which the parameter information is to be derived. The derived parameters are added to the <xref href=\"System.Data.SqlClient.SqlCommand.Parameters\"></xref> collection of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.\n  overload: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The command text is not a valid stored procedure name.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand\n  id: GetDeleteCommand\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetDeleteCommand()\n  nameWithType: SqlCommandBuilder.GetDeleteCommand()\n  fullName: SqlCommandBuilder.GetDeleteCommand()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform deletions on the database.\n  remarks: \"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \\n  \\n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \\n  \\n After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.  \\n  \\n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).\"\n  syntax:\n    content: public System.Data.SqlClient.SqlCommand GetDeleteCommand ();\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlCommand\n      description: The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform deletions.\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)\n  id: GetDeleteCommand(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetDeleteCommand(Boolean)\n  nameWithType: SqlCommandBuilder.GetDeleteCommand(Boolean)\n  fullName: SqlCommandBuilder.GetDeleteCommand(Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform deletions on the database.\n  remarks: \"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \\n  \\n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \\n  \\n After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.  \\n  \\n The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:  \\n  \\n-   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.  \\n  \\n-   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.  \\n  \\n-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.  \\n  \\n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).\"\n  syntax:\n    content: public System.Data.SqlClient.SqlCommand GetDeleteCommand (bool useColumnsForParameterNames);\n    parameters:\n    - id: useColumnsForParameterNames\n      type: System.Boolean\n      description: If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.\n    return:\n      type: System.Data.SqlClient.SqlCommand\n      description: The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform deletions.\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand\n  id: GetInsertCommand\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetInsertCommand()\n  nameWithType: SqlCommandBuilder.GetInsertCommand()\n  fullName: SqlCommandBuilder.GetInsertCommand()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform insertions on the database.\n  remarks: \"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \\n  \\n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \\n  \\n After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.  \\n  \\n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).\"\n  syntax:\n    content: public System.Data.SqlClient.SqlCommand GetInsertCommand ();\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlCommand\n      description: The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform insertions.\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)\n  id: GetInsertCommand(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetInsertCommand(Boolean)\n  nameWithType: SqlCommandBuilder.GetInsertCommand(Boolean)\n  fullName: SqlCommandBuilder.GetInsertCommand(Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform insertions on the database.\n  remarks: \"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \\n  \\n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \\n  \\n After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.  \\n  \\n The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:  \\n  \\n-   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.  \\n  \\n-   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.  \\n  \\n-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.  \\n  \\n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).\"\n  syntax:\n    content: public System.Data.SqlClient.SqlCommand GetInsertCommand (bool useColumnsForParameterNames);\n    parameters:\n    - id: useColumnsForParameterNames\n      type: System.Boolean\n      description: If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.\n    return:\n      type: System.Data.SqlClient.SqlCommand\n      description: The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform insertions.\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)\n  id: GetParameterName(System.String)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetParameterName(String)\n  nameWithType: SqlCommandBuilder.GetParameterName(String)\n  fullName: SqlCommandBuilder.GetParameterName(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override string GetParameterName (string parameterName);\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)\n  id: GetParameterName(System.Int32)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetParameterName(Int32)\n  nameWithType: SqlCommandBuilder.GetParameterName(Int32)\n  fullName: SqlCommandBuilder.GetParameterName(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override string GetParameterName (int parameterOrdinal);\n    parameters:\n    - id: parameterOrdinal\n      type: System.Int32\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)\n  id: GetParameterPlaceholder(System.Int32)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetParameterPlaceholder(Int32)\n  nameWithType: SqlCommandBuilder.GetParameterPlaceholder(Int32)\n  fullName: SqlCommandBuilder.GetParameterPlaceholder(Int32)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override string GetParameterPlaceholder (int parameterOrdinal);\n    parameters:\n    - id: parameterOrdinal\n      type: System.Int32\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)\n  id: GetSchemaTable(System.Data.Common.DbCommand)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetSchemaTable(DbCommand)\n  nameWithType: SqlCommandBuilder.GetSchemaTable(DbCommand)\n  fullName: SqlCommandBuilder.GetSchemaTable(DbCommand)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand srcCommand);\n    parameters:\n    - id: srcCommand\n      type: System.Data.Common.DbCommand\n      description: ''\n    return:\n      type: System.Data.DataTable\n      description: ''\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand\n  id: GetUpdateCommand\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetUpdateCommand()\n  nameWithType: SqlCommandBuilder.GetUpdateCommand()\n  fullName: SqlCommandBuilder.GetUpdateCommand()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates on the database.\n  remarks: \"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \\n  \\n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \\n  \\n After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.  \\n  \\n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).\"\n  syntax:\n    content: public System.Data.SqlClient.SqlCommand GetUpdateCommand ();\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlCommand\n      description: The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is required to perform updates.\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)\n  id: GetUpdateCommand(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: GetUpdateCommand(Boolean)\n  nameWithType: SqlCommandBuilder.GetUpdateCommand(Boolean)\n  fullName: SqlCommandBuilder.GetUpdateCommand(Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets the automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates on the database.\n  remarks: \"An application can use the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.SqlClient.SqlCommand> object to be executed.  \\n  \\n You can also use <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.SqlClient.SqlDataAdapter>.  \\n  \\n After the Transact-SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct. The Transact-SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.  \\n  \\n The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:  \\n  \\n-   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection has been specified and its length is equal to or greater than the generated parameter name.  \\n  \\n-   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection regular expression.  \\n  \\n-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> returned from the **GetSchema** method call and found in the <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> collection is specified.  \\n  \\n For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).\"\n  syntax:\n    content: public System.Data.SqlClient.SqlCommand GetUpdateCommand (bool useColumnsForParameterNames);\n    parameters:\n    - id: useColumnsForParameterNames\n      type: System.Boolean\n      description: If `true`, generate parameter names matching column names if possible. If `false`, generate @p1, @p2, and so on.\n    return:\n      type: System.Data.SqlClient.SqlCommand\n      description: The automatically generated <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object required to perform updates.\n  overload: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)\n  id: InitializeCommand(System.Data.Common.DbCommand)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: InitializeCommand(DbCommand)\n  nameWithType: SqlCommandBuilder.InitializeCommand(DbCommand)\n  fullName: SqlCommandBuilder.InitializeCommand(DbCommand)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);\n    parameters:\n    - id: command\n      type: System.Data.Common.DbCommand\n      description: ''\n    return:\n      type: System.Data.Common.DbCommand\n      description: ''\n  overload: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)\n  id: QuoteIdentifier(System.String)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: QuoteIdentifier(String)\n  nameWithType: SqlCommandBuilder.QuoteIdentifier(String)\n  fullName: SqlCommandBuilder.QuoteIdentifier(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier.\n  syntax:\n    content: public override string QuoteIdentifier (string unquotedIdentifier);\n    parameters:\n    - id: unquotedIdentifier\n      type: System.String\n      description: The original unquoted identifier.\n    return:\n      type: System.String\n      description: The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped.\n  overload: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix\n  commentId: P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix\n  id: QuotePrefix\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: QuotePrefix\n  nameWithType: SqlCommandBuilder.QuotePrefix\n  fullName: SqlCommandBuilder.QuotePrefix\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.\n  remarks: >-\n    > [!NOTE]\n\n    >  Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a DataAdapter.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override string QuotePrefix { get; set; }\n    return:\n      type: System.String\n      description: The starting character or characters to use. The default is an empty string.\n  overload: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix\n  commentId: P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix\n  id: QuoteSuffix\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: QuoteSuffix\n  nameWithType: SqlCommandBuilder.QuoteSuffix\n  fullName: SqlCommandBuilder.QuoteSuffix\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.\n  remarks: >-\n    > [!NOTE]\n\n    >  Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the `Update` method of a DataAdapter.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override string QuoteSuffix { get; set; }\n    return:\n      type: System.String\n      description: The ending character or characters to use. The default is an empty string.\n  overload: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property cannot be changed after an insert, update, or delete command has been generated.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator\n  commentId: P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator\n  id: SchemaSeparator\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: SchemaSeparator\n  nameWithType: SqlCommandBuilder.SchemaSeparator\n  fullName: SqlCommandBuilder.SchemaSeparator\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.\n  remarks: Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character. For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where \"Person\" is the schema name and \"CustomerName\" is the identifier. Setting this property lets developers modify this behavior.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override string SchemaSeparator { get; set; }\n    return:\n      type: System.String\n      description: The character to be used as the schema separator.\n  overload: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)\n  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: SetRowUpdatingHandler(DbDataAdapter)\n  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)\n  fullName: SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);\n    parameters:\n    - id: adapter\n      type: System.Data.Common.DbDataAdapter\n      description: ''\n  overload: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)\n  commentId: M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)\n  id: UnquoteIdentifier(System.String)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  langs:\n  - csharp\n  name: UnquoteIdentifier(String)\n  nameWithType: SqlCommandBuilder.UnquoteIdentifier(String)\n  fullName: SqlCommandBuilder.UnquoteIdentifier(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly unescaping any embedded quotes in the identifier.\n  syntax:\n    content: public override string UnquoteIdentifier (string quotedIdentifier);\n    parameters:\n    - id: quotedIdentifier\n      type: System.String\n      description: The identifier that will have its embedded quotes removed.\n    return:\n      type: System.String\n      description: The unquoted identifier, with embedded quotes properly unescaped.\n  overload: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.DbCommandBuilder\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommandBuilder\n  nameWithType: DbCommandBuilder\n  fullName: System.Data.Common.DbCommandBuilder\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: SqlCommandBuilder()\n  nameWithType: SqlCommandBuilder.SqlCommandBuilder()\n  fullName: SqlCommandBuilder.SqlCommandBuilder()\n- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: SqlCommandBuilder(SqlDataAdapter)\n  nameWithType: SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)\n  fullName: SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)\n- uid: System.Data.SqlClient.SqlDataAdapter\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlDataAdapter\n  nameWithType: SqlDataAdapter\n  fullName: System.Data.SqlClient.SqlDataAdapter\n- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: ApplyParameterInfo(DbParameter, DataRow, StatementType, Boolean)\n  nameWithType: SqlCommandBuilder.ApplyParameterInfo(DbParameter, DataRow, StatementType, Boolean)\n  fullName: SqlCommandBuilder.ApplyParameterInfo(DbParameter, DataRow, StatementType, Boolean)\n- uid: System.Data.Common.DbParameter\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameter\n  nameWithType: DbParameter\n  fullName: System.Data.Common.DbParameter\n- uid: System.Data.DataRow\n  parent: System.Data\n  isExternal: false\n  name: DataRow\n  nameWithType: DataRow\n  fullName: System.Data.DataRow\n- uid: System.Data.StatementType\n  parent: System.Data\n  isExternal: false\n  name: StatementType\n  nameWithType: StatementType\n  fullName: System.Data.StatementType\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: CatalogLocation\n  nameWithType: SqlCommandBuilder.CatalogLocation\n  fullName: SqlCommandBuilder.CatalogLocation\n- uid: System.Data.Common.CatalogLocation\n  parent: System.Data.Common\n  isExternal: false\n  name: CatalogLocation\n  nameWithType: CatalogLocation\n  fullName: System.Data.Common.CatalogLocation\n- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: CatalogSeparator\n  nameWithType: SqlCommandBuilder.CatalogSeparator\n  fullName: SqlCommandBuilder.CatalogSeparator\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: DataAdapter\n  nameWithType: SqlCommandBuilder.DataAdapter\n  fullName: SqlCommandBuilder.DataAdapter\n- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: DeriveParameters(SqlCommand)\n  nameWithType: SqlCommandBuilder.DeriveParameters(SqlCommand)\n  fullName: SqlCommandBuilder.DeriveParameters(SqlCommand)\n- uid: System.Data.SqlClient.SqlCommand\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlCommand\n  nameWithType: SqlCommand\n  fullName: System.Data.SqlClient.SqlCommand\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetDeleteCommand()\n  nameWithType: SqlCommandBuilder.GetDeleteCommand()\n  fullName: SqlCommandBuilder.GetDeleteCommand()\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetDeleteCommand(Boolean)\n  nameWithType: SqlCommandBuilder.GetDeleteCommand(Boolean)\n  fullName: SqlCommandBuilder.GetDeleteCommand(Boolean)\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetInsertCommand()\n  nameWithType: SqlCommandBuilder.GetInsertCommand()\n  fullName: SqlCommandBuilder.GetInsertCommand()\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetInsertCommand(Boolean)\n  nameWithType: SqlCommandBuilder.GetInsertCommand(Boolean)\n  fullName: SqlCommandBuilder.GetInsertCommand(Boolean)\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetParameterName(String)\n  nameWithType: SqlCommandBuilder.GetParameterName(String)\n  fullName: SqlCommandBuilder.GetParameterName(String)\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetParameterName(Int32)\n  nameWithType: SqlCommandBuilder.GetParameterName(Int32)\n  fullName: SqlCommandBuilder.GetParameterName(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetParameterPlaceholder(Int32)\n  nameWithType: SqlCommandBuilder.GetParameterPlaceholder(Int32)\n  fullName: SqlCommandBuilder.GetParameterPlaceholder(Int32)\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetSchemaTable(DbCommand)\n  nameWithType: SqlCommandBuilder.GetSchemaTable(DbCommand)\n  fullName: SqlCommandBuilder.GetSchemaTable(DbCommand)\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  nameWithType: DbCommand\n  fullName: System.Data.Common.DbCommand\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetUpdateCommand()\n  nameWithType: SqlCommandBuilder.GetUpdateCommand()\n  fullName: SqlCommandBuilder.GetUpdateCommand()\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetUpdateCommand(Boolean)\n  nameWithType: SqlCommandBuilder.GetUpdateCommand(Boolean)\n  fullName: SqlCommandBuilder.GetUpdateCommand(Boolean)\n- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: InitializeCommand(DbCommand)\n  nameWithType: SqlCommandBuilder.InitializeCommand(DbCommand)\n  fullName: SqlCommandBuilder.InitializeCommand(DbCommand)\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: QuoteIdentifier(String)\n  nameWithType: SqlCommandBuilder.QuoteIdentifier(String)\n  fullName: SqlCommandBuilder.QuoteIdentifier(String)\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: QuotePrefix\n  nameWithType: SqlCommandBuilder.QuotePrefix\n  fullName: SqlCommandBuilder.QuotePrefix\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: QuoteSuffix\n  nameWithType: SqlCommandBuilder.QuoteSuffix\n  fullName: SqlCommandBuilder.QuoteSuffix\n- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: SchemaSeparator\n  nameWithType: SqlCommandBuilder.SchemaSeparator\n  fullName: SqlCommandBuilder.SchemaSeparator\n- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: SetRowUpdatingHandler(DbDataAdapter)\n  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)\n  fullName: SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)\n- uid: System.Data.Common.DbDataAdapter\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataAdapter\n  nameWithType: DbDataAdapter\n  fullName: System.Data.Common.DbDataAdapter\n- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: UnquoteIdentifier(String)\n  nameWithType: SqlCommandBuilder.UnquoteIdentifier(String)\n  fullName: SqlCommandBuilder.UnquoteIdentifier(String)\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetDeleteCommand\n  nameWithType: SqlCommandBuilder.GetDeleteCommand\n  fullName: SqlCommandBuilder.GetDeleteCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetInsertCommand\n  nameWithType: SqlCommandBuilder.GetInsertCommand\n  fullName: SqlCommandBuilder.GetInsertCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetUpdateCommand\n  nameWithType: SqlCommandBuilder.GetUpdateCommand\n  fullName: SqlCommandBuilder.GetUpdateCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: SqlCommandBuilder\n  nameWithType: SqlCommandBuilder.SqlCommandBuilder\n  fullName: SqlCommandBuilder.SqlCommandBuilder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: ApplyParameterInfo\n  nameWithType: SqlCommandBuilder.ApplyParameterInfo\n  fullName: SqlCommandBuilder.ApplyParameterInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: CatalogLocation\n  nameWithType: SqlCommandBuilder.CatalogLocation\n  fullName: SqlCommandBuilder.CatalogLocation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: CatalogSeparator\n  nameWithType: SqlCommandBuilder.CatalogSeparator\n  fullName: SqlCommandBuilder.CatalogSeparator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: DataAdapter\n  nameWithType: SqlCommandBuilder.DataAdapter\n  fullName: SqlCommandBuilder.DataAdapter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: DeriveParameters\n  nameWithType: SqlCommandBuilder.DeriveParameters\n  fullName: SqlCommandBuilder.DeriveParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetParameterName\n  nameWithType: SqlCommandBuilder.GetParameterName\n  fullName: SqlCommandBuilder.GetParameterName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetParameterPlaceholder\n  nameWithType: SqlCommandBuilder.GetParameterPlaceholder\n  fullName: SqlCommandBuilder.GetParameterPlaceholder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: GetSchemaTable\n  nameWithType: SqlCommandBuilder.GetSchemaTable\n  fullName: SqlCommandBuilder.GetSchemaTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: InitializeCommand\n  nameWithType: SqlCommandBuilder.InitializeCommand\n  fullName: SqlCommandBuilder.InitializeCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: QuoteIdentifier\n  nameWithType: SqlCommandBuilder.QuoteIdentifier\n  fullName: SqlCommandBuilder.QuoteIdentifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: QuotePrefix\n  nameWithType: SqlCommandBuilder.QuotePrefix\n  fullName: SqlCommandBuilder.QuotePrefix\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: QuoteSuffix\n  nameWithType: SqlCommandBuilder.QuoteSuffix\n  fullName: SqlCommandBuilder.QuoteSuffix\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: SchemaSeparator\n  nameWithType: SqlCommandBuilder.SchemaSeparator\n  fullName: SqlCommandBuilder.SchemaSeparator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: SetRowUpdatingHandler\n  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler\n  fullName: SqlCommandBuilder.SetRowUpdatingHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier*\n  parent: System.Data.SqlClient.SqlCommandBuilder\n  isExternal: false\n  name: UnquoteIdentifier\n  nameWithType: SqlCommandBuilder.UnquoteIdentifier\n  fullName: SqlCommandBuilder.UnquoteIdentifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommandBuilder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)\n  parent: System.Data.Common.DbCommandBuilder\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DbCommandBuilder.Dispose(Boolean)\n  fullName: DbCommandBuilder.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.Data.Common.DbCommandBuilder.ConflictOption\n  parent: System.Data.Common.DbCommandBuilder\n  isExternal: false\n  name: ConflictOption\n  nameWithType: DbCommandBuilder.ConflictOption\n  fullName: DbCommandBuilder.ConflictOption\n- uid: System.Data.Common.DbCommandBuilder.RefreshSchema\n  parent: System.Data.Common.DbCommandBuilder\n  isExternal: false\n  name: RefreshSchema()\n  nameWithType: DbCommandBuilder.RefreshSchema()\n  fullName: DbCommandBuilder.RefreshSchema()\n- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)\n  parent: System.Data.Common.DbCommandBuilder\n  isExternal: false\n  name: RowUpdatingHandler(RowUpdatingEventArgs)\n  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)\n  fullName: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)\n- uid: System.Data.Common.DbCommandBuilder.SetAllValues\n  parent: System.Data.Common.DbCommandBuilder\n  isExternal: false\n  name: SetAllValues\n  nameWithType: DbCommandBuilder.SetAllValues\n  fullName: DbCommandBuilder.SetAllValues\n"}