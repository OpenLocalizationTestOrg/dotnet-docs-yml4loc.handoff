{"nodes":[{"content":"Provides data for mouse related routed events that do not specifically involve mouse buttons or the mouse wheel, for example <xref href=\"System.Windows.UIElement.MouseMove\"></xref>.","nodes":[{"pos":[0,181],"content":"Provides data for mouse related routed events that do not specifically involve mouse buttons or the mouse wheel, for example <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.MouseMove\"&gt;&lt;/xref&gt;</ph>.","source":"Provides data for mouse related routed events that do not specifically involve mouse buttons or the mouse wheel, for example <xref href=\"System.Windows.UIElement.MouseMove\"></xref>."}],"pos":[1130,1312],"yaml":true},{"content":"This event data class is used with the following attached events.  \n  \n-   <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>  \n  \n-   <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>  \n  \n-   <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>  \n  \n-   <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>  \n  \n-   <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>  \n  \n-   <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>  \n  \n This event data class is used with the following routed events. These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].  \n  \n-   <xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement.MouseMove?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName>  \n  \n The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data. This can affect the handled characteristics of the event as it travels the event route. For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  \n  \n Other than the <xref:System.Windows.RoutedEventArgs> properties that are relevant for all routed events, the most interesting properties of <xref:System.Windows.Input.MouseEventArgs> that you might use in a <xref:System.Windows.Input.MouseEventHandler> implementation are several properties that expose the current button state (such as <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) and <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>). <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> is useful particularly because you can check <xref:System.Windows.Input.MouseDevice.Captured%2A> on it.  \n  \n Note that events that specifically deal with mouse button events use a different event data class, <xref:System.Windows.Input.MouseButtonEventArgs>. The mouse button properties are available on <xref:System.Windows.Input.MouseEventArgs> in case there are input modes or interactions that involve the buttons even if you are handling a non-button event.  \n  \n The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"pos":[0,65],"content":"This event data class is used with the following attached events.","nodes":[{"content":"This event data class is used with the following attached events.","pos":[0,65]}]},{"pos":[75,149],"content":"<xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>","nodes":[]},{"pos":[159,234],"content":"<xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>","nodes":[]},{"pos":[244,313],"content":"<xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>","nodes":[]},{"pos":[323,392],"content":"<xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>","nodes":[]},{"pos":[402,470],"content":"<xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>","nodes":[]},{"pos":[480,555],"content":"<xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>","nodes":[]},{"pos":[562,825],"content":"This event data class is used with the following routed events. These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].","nodes":[{"content":"This event data class is used with the following routed events.","pos":[0,63]},{"content":"These routed events forward the previously listed attached events to make them more accessible to the general element model in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.","pos":[64,263],"source":" These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]."}]},{"pos":[835,902],"content":"<xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>","nodes":[]},{"pos":[912,979],"content":"<xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName>","nodes":[]},{"pos":[989,1055],"content":"<xref:System.Windows.UIElement.MouseMove?displayProperty=fullName>","nodes":[]},{"pos":[1065,1138],"content":"<xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName>","nodes":[]},{"pos":[1148,1220],"content":"<xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName>","nodes":[]},{"pos":[1230,1302],"content":"<xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName>","nodes":[]},{"pos":[1312,1383],"content":"<xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName>","nodes":[]},{"pos":[1393,1471],"content":"<xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName>","nodes":[]},{"pos":[1478,1812],"content":"The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data. This can affect the handled characteristics of the event as it travels the event route. For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).","nodes":[{"content":"The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data.","pos":[0,162]},{"content":"This can affect the handled characteristics of the event as it travels the event route.","pos":[163,250]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[251,334],"source":" For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."}]},{"pos":[1819,2439],"content":"Other than the <xref:System.Windows.RoutedEventArgs> properties that are relevant for all routed events, the most interesting properties of <xref:System.Windows.Input.MouseEventArgs> that you might use in a <xref:System.Windows.Input.MouseEventHandler> implementation are several properties that expose the current button state (such as <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) and <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>). <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> is useful particularly because you can check <xref:System.Windows.Input.MouseDevice.Captured%2A> on it.","nodes":[{"content":"Other than the <xref:System.Windows.RoutedEventArgs> properties that are relevant for all routed events, the most interesting properties of <xref:System.Windows.Input.MouseEventArgs> that you might use in a <xref:System.Windows.Input.MouseEventHandler> implementation are several properties that expose the current button state (such as <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) and <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>). <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> is useful particularly because you can check <xref:System.Windows.Input.MouseDevice.Captured%2A> on it.","pos":[0,620],"nodes":[{"content":"Other than the <ph id=\"ph1\">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> properties that are relevant for all routed events, the most interesting properties of <ph id=\"ph2\">&lt;xref:System.Windows.Input.MouseEventArgs&gt;</ph> that you might use in a <ph id=\"ph3\">&lt;xref:System.Windows.Input.MouseEventHandler&gt;</ph> implementation are several properties that expose the current button state (such as <ph id=\"ph4\">&lt;xref:System.Windows.Input.MouseEventArgs.LeftButton%2A&gt;</ph>) and <ph id=\"ph5\">&lt;xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A&gt;</ph>).","pos":[0,458],"source":"Other than the <xref:System.Windows.RoutedEventArgs> properties that are relevant for all routed events, the most interesting properties of <xref:System.Windows.Input.MouseEventArgs> that you might use in a <xref:System.Windows.Input.MouseEventHandler> implementation are several properties that expose the current button state (such as <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) and <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>)."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A&gt;</ph> is useful particularly because you can check <ph id=\"ph2\">&lt;xref:System.Windows.Input.MouseDevice.Captured%2A&gt;</ph> on it.","pos":[459,620],"source":" <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> is useful particularly because you can check <xref:System.Windows.Input.MouseDevice.Captured%2A> on it."}]}]},{"pos":[2446,2798],"content":"Note that events that specifically deal with mouse button events use a different event data class, <xref:System.Windows.Input.MouseButtonEventArgs>. The mouse button properties are available on <xref:System.Windows.Input.MouseEventArgs> in case there are input modes or interactions that involve the buttons even if you are handling a non-button event.","nodes":[{"content":"Note that events that specifically deal with mouse button events use a different event data class, <xref:System.Windows.Input.MouseButtonEventArgs>. The mouse button properties are available on <xref:System.Windows.Input.MouseEventArgs> in case there are input modes or interactions that involve the buttons even if you are handling a non-button event.","pos":[0,352],"nodes":[{"content":"Note that events that specifically deal with mouse button events use a different event data class, <ph id=\"ph1\">&lt;xref:System.Windows.Input.MouseButtonEventArgs&gt;</ph>.","pos":[0,148],"source":"Note that events that specifically deal with mouse button events use a different event data class, <xref:System.Windows.Input.MouseButtonEventArgs>."},{"content":"The mouse button properties are available on <ph id=\"ph1\">&lt;xref:System.Windows.Input.MouseEventArgs&gt;</ph> in case there are input modes or interactions that involve the buttons even if you are handling a non-button event.","pos":[149,352],"source":" The mouse button properties are available on <xref:System.Windows.Input.MouseEventArgs> in case there are input modes or interactions that involve the buttons even if you are handling a non-button event."}]}]},{"pos":[2805,2931],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]}],"pos":[1323,4295],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> class using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref> and timestamp","nodes":[{"pos":[0,184],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.MouseDevice\"&gt;&lt;/xref&gt;</ph> and timestamp","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> class using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref> and timestamp"}],"pos":[6477,6662],"yaml":true},{"content":"The mouse device associated with this event.","nodes":[{"pos":[0,44],"content":"The mouse device associated with this event.","nodes":[{"content":"The mouse device associated with this event.","pos":[0,44]}]}],"pos":[6860,6905],"yaml":true},{"content":"The time when the input occurred.","nodes":[{"pos":[0,33],"content":"The time when the input occurred.","nodes":[{"content":"The time when the input occurred.","pos":[0,33]}]}],"pos":[6969,7003],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> class using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref>, timestamp, and <xref href=\"System.Windows.Input.StylusDevice\"></xref>.","nodes":[{"pos":[0,242],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.MouseDevice\"&gt;&lt;/xref&gt;</ph>, timestamp, and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Input.StylusDevice\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> class using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref>, timestamp, and <xref href=\"System.Windows.Input.StylusDevice\"></xref>."}],"pos":[8347,8590],"yaml":true},{"content":"The mouse device associated with this event.","nodes":[{"pos":[0,44],"content":"The mouse device associated with this event.","nodes":[{"content":"The mouse device associated with this event.","pos":[0,44]}]}],"pos":[8836,8881],"yaml":true},{"content":"The time when the input occurred.","nodes":[{"pos":[0,33],"content":"The time when the input occurred.","nodes":[{"content":"The time when the input occurred.","pos":[0,33]}]}],"pos":[8945,8979],"yaml":true},{"content":"The logical stylus device associated with this event.","nodes":[{"pos":[0,53],"content":"The logical stylus device associated with this event.","nodes":[{"content":"The logical stylus device associated with this event.","pos":[0,53]}]}],"pos":[9067,9121],"yaml":true},{"content":"Returns the position of the mouse pointer relative to the specified element.","nodes":[{"pos":[0,76],"content":"Returns the position of the mouse pointer relative to the specified element.","nodes":[{"content":"Returns the position of the mouse pointer relative to the specified element.","pos":[0,76]}]}],"pos":[10257,10334],"yaml":true},{"content":"The point (0,0) is the upper-left corner of the frame of reference.  \n  \n The static <xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName> method can also be used to obtain the position of the mouse.","nodes":[{"pos":[0,67],"content":"The point (0,0) is the upper-left corner of the frame of reference.","nodes":[{"content":"The point (0,0) is the upper-left corner of the frame of reference.","pos":[0,67]}]},{"pos":[74,219],"content":"The static <xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName> method can also be used to obtain the position of the mouse.","nodes":[{"content":"The static <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName&gt;</ph> method can also be used to obtain the position of the mouse.","pos":[0,145],"source":"The static <xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName> method can also be used to obtain the position of the mouse."}]}],"pos":[10345,10569],"yaml":true,"extradata":"MT"},{"content":"The element to use as the frame of reference for calculating the position of the mouse pointer.","nodes":[{"pos":[0,95],"content":"The element to use as the frame of reference for calculating the position of the mouse pointer.","nodes":[{"content":"The element to use as the frame of reference for calculating the position of the mouse pointer.","pos":[0,95]}]}],"pos":[10772,10868],"yaml":true},{"content":"The x- and y-coordinates of the mouse pointer position relative to the specified object.","nodes":[{"pos":[0,88],"content":"The x- and y-coordinates of the mouse pointer position relative to the specified object.","nodes":[{"content":"The x- and y-coordinates of the mouse pointer position relative to the specified object.","pos":[0,88]}]}],"pos":[10932,11021],"yaml":true},{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","nodes":[{"pos":[0,90],"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","nodes":[{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","pos":[0,90]}]}],"pos":[12217,12308],"yaml":true},{"content":"This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,335],"content":"This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"content":"This implementation casts the generic handler as a <ph id=\"ph1\">&lt;xref:System.Windows.Input.MouseEventHandler&gt;</ph> and then invokes it.","pos":[0,117],"source":"This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it."},{"content":"For details on this implementation pattern and the reasons for it, see <ph id=\"ph1\">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph> and <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","pos":[118,335],"source":" For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}]}],"pos":[12319,12655],"yaml":true,"extradata":"MT"},{"content":"The generic handler to call in a type-specific way.","nodes":[{"pos":[0,51],"content":"The generic handler to call in a type-specific way.","nodes":[{"content":"The generic handler to call in a type-specific way.","pos":[0,51]}]}],"pos":[12858,12910],"yaml":true},{"content":"The target to call the handler on.","nodes":[{"pos":[0,34],"content":"The target to call the handler on.","nodes":[{"content":"The target to call the handler on.","pos":[0,34]}]}],"pos":[12979,13014],"yaml":true},{"content":"Gets the current state of the left mouse button.","nodes":[{"pos":[0,48],"content":"Gets the current state of the left mouse button.","nodes":[{"content":"Gets the current state of the left mouse button.","pos":[0,48]}]}],"pos":[14024,14073],"yaml":true},{"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"pos":[0,126],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]}],"pos":[14084,14211],"yaml":true,"extradata":"MT"},{"content":"The current state of the left mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.","nodes":[{"pos":[0,226],"content":"The current state of the left mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.","nodes":[{"content":"The current state of the left mouse button, which is either <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Pressed\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Released\"&gt;&lt;/xref&gt;</ph>.","pos":[0,198],"source":"The current state of the left mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>."},{"content":"There is no default value.","pos":[200,226]}]}],"pos":[14951,15178],"yaml":true},{"content":"Gets the current state of the middle mouse button.","nodes":[{"pos":[0,50],"content":"Gets the current state of the middle mouse button.","nodes":[{"content":"Gets the current state of the middle mouse button.","pos":[0,50]}]}],"pos":[16192,16243],"yaml":true},{"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"pos":[0,126],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]}],"pos":[16254,16381],"yaml":true,"extradata":"MT"},{"content":"The current state of the middle mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>. There is no default value.","nodes":[{"pos":[0,227],"content":"The current state of the middle mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>. There is no default value.","nodes":[{"content":"The current state of the middle mouse button, which is either <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Pressed\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Released\"&gt;&lt;/xref&gt;</ph>.","pos":[0,200],"source":"The current state of the middle mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>."},{"content":"There is no default value.","pos":[201,227]}]}],"pos":[17133,17361],"yaml":true},{"content":"Gets the mouse device associated with this event.","nodes":[{"pos":[0,49],"content":"Gets the mouse device associated with this event.","nodes":[{"content":"Gets the mouse device associated with this event.","pos":[0,49]}]}],"pos":[18371,18421],"yaml":true},{"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"pos":[0,126],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]}],"pos":[18432,18559],"yaml":true,"extradata":"MT"},{"content":"The mouse device associated with this event.  There is no default value.","nodes":[{"pos":[0,72],"content":"The mouse device associated with this event.  There is no default value.","nodes":[{"content":"The mouse device associated with this event.  There is no default value.","pos":[0,72],"nodes":[{"content":"The mouse device associated with this event.","pos":[0,44]},{"content":"There is no default value.","pos":[46,72]}]}]}],"pos":[19199,19272],"yaml":true},{"content":"Gets the current state of the right mouse button.","nodes":[{"pos":[0,49],"content":"Gets the current state of the right mouse button.","nodes":[{"content":"Gets the current state of the right mouse button.","pos":[0,49]}]}],"pos":[20281,20331],"yaml":true},{"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"pos":[0,126],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]}],"pos":[20342,20469],"yaml":true,"extradata":"MT"},{"content":"The current state of the right mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.","nodes":[{"pos":[0,227],"content":"The current state of the right mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.","nodes":[{"content":"The current state of the right mouse button, which is either <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Pressed\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Released\"&gt;&lt;/xref&gt;</ph>.","pos":[0,199],"source":"The current state of the right mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>."},{"content":"There is no default value.","pos":[201,227]}]}],"pos":[21215,21443],"yaml":true},{"content":"Gets the stylus device associated with this event.","nodes":[{"pos":[0,50],"content":"Gets the stylus device associated with this event.","nodes":[{"content":"Gets the stylus device associated with this event.","pos":[0,50]}]}],"pos":[22458,22509],"yaml":true},{"content":"The stylus associated with this event.  There is no default value.","nodes":[{"pos":[0,66],"content":"The stylus associated with this event.  There is no default value.","nodes":[{"content":"The stylus associated with this event.  There is no default value.","pos":[0,66],"nodes":[{"content":"The stylus associated with this event.","pos":[0,38]},{"content":"There is no default value.","pos":[40,66]}]}]}],"pos":[23182,23249],"yaml":true},{"content":"Gets the current state of the first extended mouse button.","nodes":[{"pos":[0,58],"content":"Gets the current state of the first extended mouse button.","nodes":[{"content":"Gets the current state of the first extended mouse button.","pos":[0,58]}]}],"pos":[24241,24300],"yaml":true},{"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"pos":[0,126],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]}],"pos":[24311,24438],"yaml":true,"extradata":"MT"},{"content":"The current state of the first extended mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.","nodes":[{"pos":[0,236],"content":"The current state of the first extended mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.","nodes":[{"content":"The current state of the first extended mouse button, which is either <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Pressed\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Released\"&gt;&lt;/xref&gt;</ph>.","pos":[0,208],"source":"The current state of the first extended mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>."},{"content":"There is no default value.","pos":[210,236]}]}],"pos":[25190,25427],"yaml":true},{"content":"Gets the state of the second extended mouse button.","nodes":[{"pos":[0,51],"content":"Gets the state of the second extended mouse button.","nodes":[{"content":"Gets the state of the second extended mouse button.","pos":[0,51]}]}],"pos":[26415,26467],"yaml":true},{"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"pos":[0,126],"content":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides additional properties and methods for determining the state of the mouse.","pos":[0,126],"source":"The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."}]}],"pos":[26478,26605],"yaml":true,"extradata":"MT"},{"content":"The current state of the second extended mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.","nodes":[{"pos":[0,237],"content":"The current state of the second extended mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.","nodes":[{"content":"The current state of the second extended mouse button, which is either <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Pressed\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.MouseButtonState.Released\"&gt;&lt;/xref&gt;</ph>.","pos":[0,209],"source":"The current state of the second extended mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>."},{"content":"There is no default value.","pos":[211,237]}]}],"pos":[27357,27595],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.MouseEventArgs\n  commentId: T:System.Windows.Input.MouseEventArgs\n  id: MouseEventArgs\n  children:\n  - System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)\n  - System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)\n  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)\n  - System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.MouseEventArgs.LeftButton\n  - System.Windows.Input.MouseEventArgs.MiddleButton\n  - System.Windows.Input.MouseEventArgs.MouseDevice\n  - System.Windows.Input.MouseEventArgs.RightButton\n  - System.Windows.Input.MouseEventArgs.StylusDevice\n  - System.Windows.Input.MouseEventArgs.XButton1\n  - System.Windows.Input.MouseEventArgs.XButton2\n  langs:\n  - csharp\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs\n  fullName: System.Windows.Input.MouseEventArgs\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides data for mouse related routed events that do not specifically involve mouse buttons or the mouse wheel, for example <xref href=\"System.Windows.UIElement.MouseMove\"></xref>.\n  remarks: \"This event data class is used with the following attached events.  \\n  \\n-   <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>  \\n  \\n This event data class is used with the following routed events. These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].  \\n  \\n-   <xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.MouseMove?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName>  \\n  \\n The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data. This can affect the handled characteristics of the event as it travels the event route. For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  \\n  \\n Other than the <xref:System.Windows.RoutedEventArgs> properties that are relevant for all routed events, the most interesting properties of <xref:System.Windows.Input.MouseEventArgs> that you might use in a <xref:System.Windows.Input.MouseEventHandler> implementation are several properties that expose the current button state (such as <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) and <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>). <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> is useful particularly because you can check <xref:System.Windows.Input.MouseDevice.Captured%2A> on it.  \\n  \\n Note that events that specifically deal with mouse button events use a different event data class, <xref:System.Windows.Input.MouseButtonEventArgs>. The mouse button properties are available on <xref:System.Windows.Input.MouseEventArgs> in case there are input modes or interactions that involve the buttons even if you are handling a non-button event.  \\n  \\n The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\"\n  syntax:\n    content: 'public class MouseEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  derivedClasses:\n  - System.Windows.Input.MouseButtonEventArgs\n  - System.Windows.Input.MouseWheelEventArgs\n  - System.Windows.Input.QueryCursorEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)\n  commentId: M:System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)\n  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32)'\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: MouseEventArgs(MouseDevice, Int32)\n  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice, Int32)\n  fullName: MouseEventArgs.MouseEventArgs(MouseDevice, Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> class using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref> and timestamp\n  syntax:\n    content: public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp);\n    parameters:\n    - id: mouse\n      type: System.Windows.Input.MouseDevice\n      description: The mouse device associated with this event.\n    - id: timestamp\n      type: System.Int32\n      description: The time when the input occurred.\n  overload: System.Windows.Input.MouseEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)\n  commentId: M:System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)\n  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)'\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: MouseEventArgs(MouseDevice, Int32, StylusDevice)\n  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice, Int32, StylusDevice)\n  fullName: MouseEventArgs.MouseEventArgs(MouseDevice, Int32, StylusDevice)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.MouseEventArgs\"></xref> class using the specified <xref href=\"System.Windows.Input.MouseDevice\"></xref>, timestamp, and <xref href=\"System.Windows.Input.StylusDevice\"></xref>.\n  syntax:\n    content: public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.StylusDevice stylusDevice);\n    parameters:\n    - id: mouse\n      type: System.Windows.Input.MouseDevice\n      description: The mouse device associated with this event.\n    - id: timestamp\n      type: System.Int32\n      description: The time when the input occurred.\n    - id: stylusDevice\n      type: System.Windows.Input.StylusDevice\n      description: The logical stylus device associated with this event.\n  overload: System.Windows.Input.MouseEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)\n  id: GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: GetPosition(IInputElement)\n  nameWithType: MouseEventArgs.GetPosition(IInputElement)\n  fullName: MouseEventArgs.GetPosition(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Returns the position of the mouse pointer relative to the specified element.\n  remarks: \"The point (0,0) is the upper-left corner of the frame of reference.  \\n  \\n The static <xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName> method can also be used to obtain the position of the mouse.\"\n  syntax:\n    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: The element to use as the frame of reference for calculating the position of the mouse pointer.\n    return:\n      type: System.Windows.Point\n      description: The x- and y-coordinates of the mouse pointer position relative to the specified object.\n  overload: System.Windows.Input.MouseEventArgs.GetPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  commentId: M:System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: MouseEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: MouseEventArgs.InvokeEventHandler(Delegate, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Invokes event handlers in a type-specific way, which can increase event system efficiency.\n  remarks: This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: The generic handler to call in a type-specific way.\n    - id: genericTarget\n      type: System.Object\n      description: The target to call the handler on.\n  overload: System.Windows.Input.MouseEventArgs.InvokeEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.LeftButton\n  commentId: P:System.Windows.Input.MouseEventArgs.LeftButton\n  id: LeftButton\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: LeftButton\n  nameWithType: MouseEventArgs.LeftButton\n  fullName: MouseEventArgs.LeftButton\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the current state of the left mouse button.\n  remarks: The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\n  example:\n  - \"The following example prints a message if the state of the <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A> property is <xref:System.Windows.Input.MouseButtonState.Pressed>.  \\n  \\n [!code-csharp[mousesnippetsample#MouseEventArgsLeftButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsleftbuttondown)]\\n [!code-vb[mousesnippetsample#MouseEventArgsLeftButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsleftbuttondown)]\"\n  syntax:\n    content: public System.Windows.Input.MouseButtonState LeftButton { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The current state of the left mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.\n  overload: System.Windows.Input.MouseEventArgs.LeftButton*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.MiddleButton\n  commentId: P:System.Windows.Input.MouseEventArgs.MiddleButton\n  id: MiddleButton\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: MiddleButton\n  nameWithType: MouseEventArgs.MiddleButton\n  fullName: MouseEventArgs.MiddleButton\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the current state of the middle mouse button.\n  remarks: The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\n  example:\n  - \"The following example prints a message if the state of the <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> property is <xref:System.Windows.Input.MouseButtonState.Pressed>.  \\n  \\n [!code-csharp[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsmiddlebuttondown)]\\n [!code-vb[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsmiddlebuttondown)]\"\n  syntax:\n    content: public System.Windows.Input.MouseButtonState MiddleButton { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The current state of the middle mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>. There is no default value.\n  overload: System.Windows.Input.MouseEventArgs.MiddleButton*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.MouseDevice\n  commentId: P:System.Windows.Input.MouseEventArgs.MouseDevice\n  id: MouseDevice\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: MouseDevice\n  nameWithType: MouseEventArgs.MouseDevice\n  fullName: MouseEventArgs.MouseDevice\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the mouse device associated with this event.\n  remarks: The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\n  example:\n  - \"The following example gets the <xref:System.Windows.Input.MouseDevice> associated with an input event.  \\n  \\n [!code-csharp[mousesnippetsample#MouseEventArgsMouseDevice](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsmousedevice)]\\n [!code-vb[mousesnippetsample#MouseEventArgsMouseDevice](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsmousedevice)]\"\n  syntax:\n    content: public System.Windows.Input.MouseDevice MouseDevice { get; }\n    return:\n      type: System.Windows.Input.MouseDevice\n      description: The mouse device associated with this event.  There is no default value.\n  overload: System.Windows.Input.MouseEventArgs.MouseDevice*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.RightButton\n  commentId: P:System.Windows.Input.MouseEventArgs.RightButton\n  id: RightButton\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: RightButton\n  nameWithType: MouseEventArgs.RightButton\n  fullName: MouseEventArgs.RightButton\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the current state of the right mouse button.\n  remarks: The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\n  example:\n  - \"The following example prints a message if the state of the <xref:System.Windows.Input.MouseEventArgs.RightButton%2A> property is <xref:System.Windows.Input.MouseButtonState.Pressed>.  \\n  \\n [!code-csharp[mousesnippetsample#MouseEventArgsRightButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsrightbuttondown)]\\n [!code-vb[mousesnippetsample#MouseEventArgsRightButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsrightbuttondown)]\"\n  syntax:\n    content: public System.Windows.Input.MouseButtonState RightButton { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The current state of the right mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.\n  overload: System.Windows.Input.MouseEventArgs.RightButton*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.StylusDevice\n  commentId: P:System.Windows.Input.MouseEventArgs.StylusDevice\n  id: StylusDevice\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: StylusDevice\n  nameWithType: MouseEventArgs.StylusDevice\n  fullName: MouseEventArgs.StylusDevice\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the stylus device associated with this event.\n  remarks: ''\n  example:\n  - \"The following example shows how to retrieve the <xref:System.Windows.Input.StylusDevice> associated with an event.  \\n  \\n [!code-csharp[mousesnippetsample#MouseEventArgsStylusDevice](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsstylusdevice)]\\n [!code-vb[mousesnippetsample#MouseEventArgsStylusDevice](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsstylusdevice)]\"\n  syntax:\n    content: public System.Windows.Input.StylusDevice StylusDevice { get; }\n    return:\n      type: System.Windows.Input.StylusDevice\n      description: The stylus associated with this event.  There is no default value.\n  overload: System.Windows.Input.MouseEventArgs.StylusDevice*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.XButton1\n  commentId: P:System.Windows.Input.MouseEventArgs.XButton1\n  id: XButton1\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: XButton1\n  nameWithType: MouseEventArgs.XButton1\n  fullName: MouseEventArgs.XButton1\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the current state of the first extended mouse button.\n  remarks: The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\n  example:\n  - \"The following example prints a message if the state of the <xref:System.Windows.Input.MouseEventArgs.XButton1%2A> property is <xref:System.Windows.Input.MouseButtonState.Pressed>.  \\n  \\n [!code-csharp[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsxbutton1buttondown)]\\n [!code-vb[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsxbutton1buttondown)]\"\n  syntax:\n    content: public System.Windows.Input.MouseButtonState XButton1 { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The current state of the first extended mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.\n  overload: System.Windows.Input.MouseEventArgs.XButton1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.MouseEventArgs.XButton2\n  commentId: P:System.Windows.Input.MouseEventArgs.XButton2\n  id: XButton2\n  parent: System.Windows.Input.MouseEventArgs\n  langs:\n  - csharp\n  name: XButton2\n  nameWithType: MouseEventArgs.XButton2\n  fullName: MouseEventArgs.XButton2\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the state of the second extended mouse button.\n  remarks: The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.\n  example:\n  - \"The following example prints a message if the state of the <xref:System.Windows.Input.MouseEventArgs.XButton2%2A> property is <xref:System.Windows.Input.MouseButtonState.Pressed>.  \\n  \\n [!code-csharp[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsxbutton2buttondown)]\\n [!code-vb[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsxbutton2buttondown)]\"\n  syntax:\n    content: public System.Windows.Input.MouseButtonState XButton2 { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The current state of the second extended mouse button, which is either <xref href=\"System.Windows.Input.MouseButtonState.Pressed\"></xref> or <xref href=\"System.Windows.Input.MouseButtonState.Released\"></xref>.  There is no default value.\n  overload: System.Windows.Input.MouseEventArgs.XButton2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputEventArgs\n  nameWithType: InputEventArgs\n  fullName: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: MouseEventArgs(MouseDevice, Int32)\n  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice, Int32)\n  fullName: MouseEventArgs.MouseEventArgs(MouseDevice, Int32)\n- uid: System.Windows.Input.MouseDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseDevice\n  nameWithType: MouseDevice\n  fullName: System.Windows.Input.MouseDevice\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: MouseEventArgs(MouseDevice, Int32, StylusDevice)\n  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice, Int32, StylusDevice)\n  fullName: MouseEventArgs.MouseEventArgs(MouseDevice, Int32, StylusDevice)\n- uid: System.Windows.Input.StylusDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusDevice\n  nameWithType: StylusDevice\n  fullName: System.Windows.Input.StylusDevice\n- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: GetPosition(IInputElement)\n  nameWithType: MouseEventArgs.GetPosition(IInputElement)\n  fullName: MouseEventArgs.GetPosition(IInputElement)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: MouseEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: MouseEventArgs.InvokeEventHandler(Delegate, Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.MouseEventArgs.LeftButton\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: LeftButton\n  nameWithType: MouseEventArgs.LeftButton\n  fullName: MouseEventArgs.LeftButton\n- uid: System.Windows.Input.MouseButtonState\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonState\n  nameWithType: MouseButtonState\n  fullName: System.Windows.Input.MouseButtonState\n- uid: System.Windows.Input.MouseEventArgs.MiddleButton\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: MiddleButton\n  nameWithType: MouseEventArgs.MiddleButton\n  fullName: MouseEventArgs.MiddleButton\n- uid: System.Windows.Input.MouseEventArgs.MouseDevice\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: MouseDevice\n  nameWithType: MouseEventArgs.MouseDevice\n  fullName: MouseEventArgs.MouseDevice\n- uid: System.Windows.Input.MouseEventArgs.RightButton\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: RightButton\n  nameWithType: MouseEventArgs.RightButton\n  fullName: MouseEventArgs.RightButton\n- uid: System.Windows.Input.MouseEventArgs.StylusDevice\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: StylusDevice\n  nameWithType: MouseEventArgs.StylusDevice\n  fullName: MouseEventArgs.StylusDevice\n- uid: System.Windows.Input.MouseEventArgs.XButton1\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: XButton1\n  nameWithType: MouseEventArgs.XButton1\n  fullName: MouseEventArgs.XButton1\n- uid: System.Windows.Input.MouseEventArgs.XButton2\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: XButton2\n  nameWithType: MouseEventArgs.XButton2\n  fullName: MouseEventArgs.XButton2\n- uid: System.Windows.Input.MouseEventArgs.#ctor*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs.MouseEventArgs\n  fullName: MouseEventArgs.MouseEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.GetPosition*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: GetPosition\n  nameWithType: MouseEventArgs.GetPosition\n  fullName: MouseEventArgs.GetPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: MouseEventArgs.InvokeEventHandler\n  fullName: MouseEventArgs.InvokeEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.LeftButton*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: LeftButton\n  nameWithType: MouseEventArgs.LeftButton\n  fullName: MouseEventArgs.LeftButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.MiddleButton*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: MiddleButton\n  nameWithType: MouseEventArgs.MiddleButton\n  fullName: MouseEventArgs.MiddleButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.MouseDevice*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: MouseDevice\n  nameWithType: MouseEventArgs.MouseDevice\n  fullName: MouseEventArgs.MouseDevice\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.RightButton*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: RightButton\n  nameWithType: MouseEventArgs.RightButton\n  fullName: MouseEventArgs.RightButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.StylusDevice*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: StylusDevice\n  nameWithType: MouseEventArgs.StylusDevice\n  fullName: MouseEventArgs.StylusDevice\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.XButton1*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: XButton1\n  nameWithType: MouseEventArgs.XButton1\n  fullName: MouseEventArgs.XButton1\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Windows.Input.MouseEventArgs.XButton2*\n  parent: System.Windows.Input.MouseEventArgs\n  isExternal: false\n  name: XButton2\n  nameWithType: MouseEventArgs.XButton2\n  fullName: MouseEventArgs.XButton2\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.Windows.RoutedEventArgs.Handled\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: RoutedEventArgs.Handled\n  fullName: RoutedEventArgs.Handled\n- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OnSetSource(Object)\n  nameWithType: RoutedEventArgs.OnSetSource(Object)\n  fullName: RoutedEventArgs.OnSetSource(Object)\n- uid: System.Windows.RoutedEventArgs.OriginalSource\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OriginalSource\n  nameWithType: RoutedEventArgs.OriginalSource\n  fullName: RoutedEventArgs.OriginalSource\n- uid: System.Windows.RoutedEventArgs.RoutedEvent\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEventArgs.RoutedEvent\n  fullName: RoutedEventArgs.RoutedEvent\n- uid: System.Windows.RoutedEventArgs.Source\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Source\n  nameWithType: RoutedEventArgs.Source\n  fullName: RoutedEventArgs.Source\n- uid: System.Windows.Input.InputEventArgs.Device\n  parent: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: Device\n  nameWithType: InputEventArgs.Device\n  fullName: InputEventArgs.Device\n- uid: System.Windows.Input.InputEventArgs.Timestamp\n  parent: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: Timestamp\n  nameWithType: InputEventArgs.Timestamp\n  fullName: InputEventArgs.Timestamp\n"}