{"nodes":[{"content":"A sequence of XML nodes that dynamically expands and allows random access to items.","nodes":[{"pos":[0,83],"content":"A sequence of XML nodes that dynamically expands and allows random access to items.","nodes":[{"content":"A sequence of XML nodes that dynamically expands and allows random access to items.","pos":[0,83]}]}],"pos":[3205,3289],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[34830,34936],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[36435,36541],"yaml":true},{"content":"A sequence of <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> instances.","nodes":[{"pos":[0,77],"content":"A sequence of <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> instances.","source":"A sequence of <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> instances."}],"pos":[36794,36872],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[38090,38196],"yaml":true},{"content":"A value of type `Int32`.","nodes":[{"pos":[0,24],"content":"A value of type <ph id=\"ph1\">`Int32`</ph>.","source":"A value of type `Int32`."}],"pos":[38342,38367],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[39669,39775],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class.","nodes":[{"pos":[0,78],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class."}],"pos":[39970,40049],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[41423,41529],"yaml":true},{"content":"An array of instances of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class.","nodes":[{"pos":[0,88],"content":"An array of instances of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> class.","source":"An array of instances of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class."}],"pos":[41730,41819],"yaml":true},{"content":"A value of type `int`.","nodes":[{"pos":[0,22],"content":"A value of type <ph id=\"ph1\">`int`</ph>.","source":"A value of type `int`."}],"pos":[41878,41901],"yaml":true},{"content":"Clone the navigator and then adds a node to the sequence.","nodes":[{"pos":[0,57],"content":"Clone the navigator and then adds a node to the sequence.","nodes":[{"content":"Clone the navigator and then adds a node to the sequence.","pos":[0,57]}]}],"pos":[43169,43227],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class.","nodes":[{"pos":[0,78],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class."}],"pos":[43415,43494],"yaml":true},{"content":"Clears and reuses the specified <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> if it is available. If the <code>seq</code> parameter is `null`, creates a new <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref>.","nodes":[{"pos":[0,241],"content":"Clears and reuses the specified <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> if it is available. If the <code>seq</code> parameter is `null`, creates a new <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref>.","nodes":[{"content":"Clears and reuses the specified <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> if it is available.","pos":[0,116],"source":"Clears and reuses the specified <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> if it is available."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">seq</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>, creates a new <ph id=\"ph3\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph>.","pos":[117,241],"source":" If the <code>seq</code> parameter is `null`, creates a new <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref>."}]}],"pos":[44849,45091],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,90],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[45342,45433],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,90],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[45520,45611],"yaml":true},{"content":"Clears and reuses the specified <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> if it is available. If the <code>seq</code> parameter is `null`, creates a new <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> and adds <code>navigator</code> to the sequence.","nodes":[{"pos":[0,289],"content":"Clears and reuses the specified <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> if it is available. If the <code>seq</code> parameter is `null`, creates a new <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> and adds <code>navigator</code> to the sequence.","nodes":[{"content":"Clears and reuses the specified <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> if it is available.","pos":[0,116],"source":"Clears and reuses the specified <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> if it is available."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">seq</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>, creates a new <ph id=\"ph3\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> and adds <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">navigator</ph><ept id=\"p2\">&lt;/code&gt;</ept> to the sequence.","pos":[117,289],"source":" If the <code>seq</code> parameter is `null`, creates a new <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> and adds <code>navigator</code> to the sequence."}]}],"pos":[47115,47405],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,90],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[47699,47790],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class.","nodes":[{"pos":[0,78],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class."}],"pos":[47873,47952],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.","nodes":[{"pos":[0,90],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class."}],"pos":[48039,48130],"yaml":true},{"content":"Returns a sequence that contains all the distinct nodes in this cache, sorted in document order.","nodes":[{"pos":[0,96],"content":"Returns a sequence that contains all the distinct nodes in this cache, sorted in document order.","nodes":[{"content":"Returns a sequence that contains all the distinct nodes in this cache, sorted in document order.","pos":[0,96]}]}],"pos":[49601,49698],"yaml":true},{"content":"A sequence of <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> instances.","nodes":[{"pos":[0,77],"content":"A sequence of <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> instances.","source":"A sequence of <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> instances."}],"pos":[50007,50085],"yaml":true},{"content":"A sequence of <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class instances.","nodes":[{"pos":[0,95],"content":"A sequence of <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> class instances.","source":"A sequence of <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class instances."}],"pos":[50172,50268],"yaml":true},{"content":"Gets an empty <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> that is properly initialized.","nodes":[{"pos":[0,108],"content":"Gets an empty <ph id=\"ph1\">&lt;xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"&gt;&lt;/xref&gt;</ph> that is properly initialized.","source":"Gets an empty <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> that is properly initialized."}],"pos":[51381,51490],"yaml":true},{"content":"If this property is true, the nodes in this cache are in document order with no duplicates.","nodes":[{"pos":[0,91],"content":"If this property is true, the nodes in this cache are in document order with no duplicates.","nodes":[{"content":"If this property is true, the nodes in this cache are in document order with no duplicates.","pos":[0,91]}]}],"pos":[52797,52889],"yaml":true},{"content":"`true` if the nodes are distinct, otherwise return `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the nodes are distinct, otherwise return <ph id=\"ph2\">`false`</ph>.","source":"`true` if the nodes are distinct, otherwise return `false`."}],"pos":[53015,53077],"yaml":true},{"content":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception.","nodes":[{"pos":[0,71],"content":"Throws the <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> exception.","source":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception."}],"pos":[55708,55780],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.","nodes":[{"pos":[0,73],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathItem\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class."}],"pos":[55961,56035],"yaml":true},{"content":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception.","nodes":[{"pos":[0,71],"content":"Throws the <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> exception.","source":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception."}],"pos":[57493,57565],"yaml":true},{"content":"Returns true if the specified value is in the sequence.","nodes":[{"pos":[0,55],"content":"Returns true if the specified value is in the sequence.","nodes":[{"content":"Returns true if the specified value is in the sequence.","pos":[0,55]}]}],"pos":[59234,59290],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.","nodes":[{"pos":[0,73],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathItem\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class."}],"pos":[59476,59550],"yaml":true},{"content":"`true` if the value is in the sequence; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the value is in the sequence; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value is in the sequence; otherwise, `false`."}],"pos":[59608,59670],"yaml":true},{"content":"Copies the contents of this sequence to the specified array, starting at the specified index in the target array.","nodes":[{"pos":[0,113],"content":"Copies the contents of this sequence to the specified array, starting at the specified index in the target array.","nodes":[{"content":"Copies the contents of this sequence to the specified array, starting at the specified index in the target array.","pos":[0,113]}]}],"pos":[61322,61436],"yaml":true},{"content":"An array of <xref href=\"System.Xml.XPath.XPathItem\"></xref> instances.","nodes":[{"pos":[0,70],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathItem\"&gt;&lt;/xref&gt;</ph> instances.","source":"An array of <xref href=\"System.Xml.XPath.XPathItem\"></xref> instances."}],"pos":[61635,61706],"yaml":true},{"content":"A value of type `int`.","nodes":[{"pos":[0,22],"content":"A value of type <ph id=\"ph1\">`int`</ph>.","source":"A value of type `int`."}],"pos":[61766,61789],"yaml":true},{"content":"Specifies that items cannot be added, removed, or modified through the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> interface.","nodes":[{"pos":[0,143],"content":"Specifies that items cannot be added, removed, or modified through the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> interface.","source":"Specifies that items cannot be added, removed, or modified through the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> interface."}],"pos":[64414,64558],"yaml":true},{"content":"`true` if the collection is read only; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the collection is read only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection is read only; otherwise, `false`."}],"pos":[64731,64792],"yaml":true},{"content":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception.","nodes":[{"pos":[0,71],"content":"Throws the <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> exception.","source":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception."}],"pos":[66311,66383],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.","nodes":[{"pos":[0,73],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathItem\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class."}],"pos":[66567,66641],"yaml":true},{"content":"`true` if the item is removed; otherwise, `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if the item is removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the item is removed; otherwise, `false`."}],"pos":[66699,66752],"yaml":true},{"content":"Returns the <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> of <xref href=\"System.Xml.XPath.XPathItem\"></xref> implementation.","nodes":[{"pos":[0,140],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.Xml.XPath.XPathItem\"&gt;&lt;/xref&gt;</ph> implementation.","source":"Returns the <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> of <xref href=\"System.Xml.XPath.XPathItem\"></xref> implementation."}],"pos":[68261,68402],"yaml":true},{"content":"The IEnumerator<XPathItem> implementation.","nodes":[{"pos":[0,42],"content":"The IEnumerator<ph id=\"ph1\">&lt;XPathItem&gt;</ph> implementation.","source":"The IEnumerator<XPathItem> implementation."}],"pos":[68662,68705],"yaml":true},{"content":"Returns the index of the specified value in the sequence.","nodes":[{"pos":[0,57],"content":"Returns the index of the specified value in the sequence.","nodes":[{"content":"Returns the index of the specified value in the sequence.","pos":[0,57]}]}],"pos":[70260,70318],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.","nodes":[{"pos":[0,73],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathItem\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class."}],"pos":[70496,70570],"yaml":true},{"content":"The index of the specified value in the sequence.","nodes":[{"pos":[0,49],"content":"The index of the specified value in the sequence.","nodes":[{"content":"The index of the specified value in the sequence.","pos":[0,49]}]}],"pos":[70626,70676],"yaml":true},{"content":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception.","nodes":[{"pos":[0,71],"content":"Throws the <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> exception.","source":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception."}],"pos":[72273,72345],"yaml":true},{"content":"A value of type `int`.","nodes":[{"pos":[0,22],"content":"A value of type <ph id=\"ph1\">`int`</ph>.","source":"A value of type `int`."}],"pos":[72520,72543],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.","nodes":[{"pos":[0,73],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathItem\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class."}],"pos":[72617,72691],"yaml":true},{"content":"Returns the item at the specified index.","nodes":[{"pos":[0,40],"content":"Returns the item at the specified index.","nodes":[{"content":"Returns the item at the specified index.","pos":[0,40]}]}],"pos":[74163,74204],"yaml":true},{"content":"A value of type `Int32`.","nodes":[{"pos":[0,24],"content":"A value of type <ph id=\"ph1\">`Int32`</ph>.","source":"A value of type `Int32`."}],"pos":[74421,74446],"yaml":true},{"content":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.","nodes":[{"pos":[0,73],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathItem\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class."}],"pos":[74516,74590],"yaml":true},{"content":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception.","nodes":[{"pos":[0,71],"content":"Throws the <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> exception.","source":"Throws the <xref href=\"System.NotSupportedException\"></xref> exception."}],"pos":[76019,76091],"yaml":true},{"content":"A value of type `int`.","nodes":[{"pos":[0,22],"content":"A value of type <ph id=\"ph1\">`int`</ph>.","source":"A value of type `int`."}],"pos":[76234,76257],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  commentId: T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  id: XmlQueryNodeSequence\n  children:\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.Empty\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.OnItemsChanged\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains(System.Xml.XPath.XPathItem)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#get_Count\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf(System.Xml.XPath.XPathItem)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: XmlQueryNodeSequence\n  nameWithType: XmlQueryNodeSequence\n  fullName: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  type: Class\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: A sequence of XML nodes that dynamically expands and allows random access to items.\n  syntax:\n    content: 'public sealed class XmlQueryNodeSequence : System.Xml.Xsl.Runtime.XmlQuerySequence<System.Xml.XPath.XPathNavigator>, System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>, System.Collections.Generic.IEnumerable<System.Xml.XPath.XPathItem>, System.Collections.Generic.IList<System.Xml.XPath.XPathItem>'\n  inheritance:\n  - System.Object\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  implements:\n  - System.Collections.Generic.ICollection{System.Xml.XPath.XPathItem}\n  - System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem}\n  - System.Collections.Generic.IList{System.Xml.XPath.XPathItem}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0})\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0},`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)\n  - System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor\n  id: '#ctor'\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: XmlQueryNodeSequence()\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence()\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence()\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n  syntax:\n    content: public XmlQueryNodeSequence ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})\n  id: '#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})'\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: XmlQueryNodeSequence(IList<XPathNavigator>)\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence(IList<XPathNavigator>)\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence(IList<XPathNavigator>)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n  syntax:\n    content: public XmlQueryNodeSequence (System.Collections.Generic.IList<System.Xml.XPath.XPathNavigator> list);\n    parameters:\n    - id: list\n      type: System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator}\n      description: A sequence of <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> instances.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Int32)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: XmlQueryNodeSequence(Int32)\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence(Int32)\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence(Int32)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n  syntax:\n    content: public XmlQueryNodeSequence (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: A value of type `Int32`.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)\n  id: '#ctor(System.Xml.XPath.XPathNavigator)'\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: XmlQueryNodeSequence(XPathNavigator)\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence(XPathNavigator)\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence(XPathNavigator)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n  syntax:\n    content: public XmlQueryNodeSequence (System.Xml.XPath.XPathNavigator navigator);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)\n  id: '#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)'\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: XmlQueryNodeSequence(XPathNavigator[], Int32)\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence(XPathNavigator[], Int32)\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence(XPathNavigator[], Int32)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n  syntax:\n    content: public XmlQueryNodeSequence (System.Xml.XPath.XPathNavigator[] array, int size);\n    parameters:\n    - id: array\n      type: System.Xml.XPath.XPathNavigator[]\n      description: An array of instances of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class.\n    - id: size\n      type: System.Int32\n      description: A value of type `int`.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)\n  id: AddClone(System.Xml.XPath.XPathNavigator)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: AddClone(XPathNavigator)\n  nameWithType: XmlQueryNodeSequence.AddClone(XPathNavigator)\n  fullName: XmlQueryNodeSequence.AddClone(XPathNavigator)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Clone the navigator and then adds a node to the sequence.\n  syntax:\n    content: public void AddClone (System.Xml.XPath.XPathNavigator navigator);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)\n  id: CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: CreateOrReuse(XmlQueryNodeSequence)\n  nameWithType: XmlQueryNodeSequence.CreateOrReuse(XmlQueryNodeSequence)\n  fullName: XmlQueryNodeSequence.CreateOrReuse(XmlQueryNodeSequence)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Clears and reuses the specified <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> if it is available. If the <code>seq</code> parameter is `null`, creates a new <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref>.\n  syntax:\n    content: public static System.Xml.Xsl.Runtime.XmlQueryNodeSequence CreateOrReuse (System.Xml.Xsl.Runtime.XmlQueryNodeSequence seq);\n    parameters:\n    - id: seq\n      type: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n      description: An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n    return:\n      type: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n      description: An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)\n  id: CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: CreateOrReuse(XmlQueryNodeSequence, XPathNavigator)\n  nameWithType: XmlQueryNodeSequence.CreateOrReuse(XmlQueryNodeSequence, XPathNavigator)\n  fullName: XmlQueryNodeSequence.CreateOrReuse(XmlQueryNodeSequence, XPathNavigator)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Clears and reuses the specified <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> if it is available. If the <code>seq</code> parameter is `null`, creates a new <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> and adds <code>navigator</code> to the sequence.\n  syntax:\n    content: public static System.Xml.Xsl.Runtime.XmlQueryNodeSequence CreateOrReuse (System.Xml.Xsl.Runtime.XmlQueryNodeSequence seq, System.Xml.XPath.XPathNavigator navigator);\n    parameters:\n    - id: seq\n      type: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n      description: An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> class.\n    return:\n      type: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n      description: An instance of the <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})\n  id: DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: DocOrderDistinct(IComparer<XPathNavigator>)\n  nameWithType: XmlQueryNodeSequence.DocOrderDistinct(IComparer<XPathNavigator>)\n  fullName: XmlQueryNodeSequence.DocOrderDistinct(IComparer<XPathNavigator>)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Returns a sequence that contains all the distinct nodes in this cache, sorted in document order.\n  syntax:\n    content: public System.Xml.Xsl.Runtime.XmlQueryNodeSequence DocOrderDistinct (System.Collections.Generic.IComparer<System.Xml.XPath.XPathNavigator> comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator}\n      description: A sequence of <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> instances.\n    return:\n      type: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n      description: A sequence of <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> class instances.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.Empty\n  commentId: F:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.Empty\n  id: Empty\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: XmlQueryNodeSequence.Empty\n  fullName: XmlQueryNodeSequence.Empty\n  type: Field\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Gets an empty <xref href=\"System.Xml.Xsl.Runtime.XmlQueryNodeSequence\"></xref> that is properly initialized.\n  syntax:\n    content: public static readonly System.Xml.Xsl.Runtime.XmlQueryNodeSequence Empty;\n    return:\n      type: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct\n  commentId: P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct\n  id: IsDocOrderDistinct\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: IsDocOrderDistinct\n  nameWithType: XmlQueryNodeSequence.IsDocOrderDistinct\n  fullName: XmlQueryNodeSequence.IsDocOrderDistinct\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: If this property is true, the nodes in this cache are in document order with no duplicates.\n  syntax:\n    content: public bool IsDocOrderDistinct { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the nodes are distinct, otherwise return `false`.'\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.OnItemsChanged\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.OnItemsChanged\n  id: OnItemsChanged\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: OnItemsChanged()\n  nameWithType: XmlQueryNodeSequence.OnItemsChanged()\n  fullName: XmlQueryNodeSequence.OnItemsChanged()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: protected override void OnItemsChanged ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.OnItemsChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection<System#Xml#XPath#XPathItem>#Add(System.Xml.XPath.XPathItem)\n  id: System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: ICollection<XPathItem>.Add(XPathItem)\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.Add(XPathItem)\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.Add(XPathItem)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Throws the <xref href=\"System.NotSupportedException\"></xref> exception.\n  syntax:\n    content: void ICollection<XPathItem>.Add (System.Xml.XPath.XPathItem value);\n    parameters:\n    - id: value\n      type: System.Xml.XPath.XPathItem\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection<System#Xml#XPath#XPathItem>#Clear\n  id: System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: ICollection<XPathItem>.Clear()\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.Clear()\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.Clear()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Throws the <xref href=\"System.NotSupportedException\"></xref> exception.\n  syntax:\n    content: void ICollection<XPathItem>.Clear ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains(System.Xml.XPath.XPathItem)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection<System#Xml#XPath#XPathItem>#Contains(System.Xml.XPath.XPathItem)\n  id: System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains(System.Xml.XPath.XPathItem)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: ICollection<XPathItem>.Contains(XPathItem)\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.Contains(XPathItem)\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.Contains(XPathItem)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Returns true if the specified value is in the sequence.\n  syntax:\n    content: bool ICollection<XPathItem>.Contains (System.Xml.XPath.XPathItem value);\n    parameters:\n    - id: value\n      type: System.Xml.XPath.XPathItem\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.\n    return:\n      type: System.Boolean\n      description: '`true` if the value is in the sequence; otherwise, `false`.'\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection<System#Xml#XPath#XPathItem>#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: ICollection<XPathItem>.CopyTo(XPathItem[], Int32)\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.CopyTo(XPathItem[], Int32)\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.CopyTo(XPathItem[], Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Copies the contents of this sequence to the specified array, starting at the specified index in the target array.\n  syntax:\n    content: void ICollection<XPathItem>.CopyTo (System.Xml.XPath.XPathItem[] array, int index);\n    parameters:\n    - id: array\n      type: System.Xml.XPath.XPathItem[]\n      description: An array of <xref href=\"System.Xml.XPath.XPathItem\"></xref> instances.\n    - id: index\n      type: System.Int32\n      description: A value of type `int`.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#get_Count\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection#get_Count\n  id: System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#get_Count\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: ICollection<XPathItem>.get_Count()\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.get_Count()\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.get_Count()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  syntax:\n    content: int ICollection<XPathItem>.get_Count ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#get_Count*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly\n  commentId: P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection<System#Xml#XPath#XPathItem>#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: ICollection<XPathItem>.IsReadOnly\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.IsReadOnly\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Specifies that items cannot be added, removed, or modified through the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> interface.\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection is read only; otherwise, `false`.'\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection<System#Xml#XPath#XPathItem>#Remove(System.Xml.XPath.XPathItem)\n  id: System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: ICollection<XPathItem>.Remove(XPathItem)\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.Remove(XPathItem)\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.Remove(XPathItem)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Throws the <xref href=\"System.NotSupportedException\"></xref> exception.\n  syntax:\n    content: bool ICollection<XPathItem>.Remove (System.Xml.XPath.XPathItem value);\n    parameters:\n    - id: value\n      type: System.Xml.XPath.XPathItem\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.\n    return:\n      type: System.Boolean\n      description: '`true` if the item is removed; otherwise, `false`.'\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable<System#Xml#XPath#XPathItem>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: IEnumerable<XPathItem>.GetEnumerator()\n  nameWithType: XmlQueryNodeSequence.IEnumerable<XPathItem>.GetEnumerator()\n  fullName: XmlQueryNodeSequence.IEnumerable<XPathItem>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Returns the <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> of <xref href=\"System.Xml.XPath.XPathItem\"></xref> implementation.\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Xml.XPath.XPathItem> IEnumerable<XPathItem>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Xml.XPath.XPathItem}\n      description: The IEnumerator<XPathItem> implementation.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf(System.Xml.XPath.XPathItem)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList<System#Xml#XPath#XPathItem>#IndexOf(System.Xml.XPath.XPathItem)\n  id: System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf(System.Xml.XPath.XPathItem)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: IList<XPathItem>.IndexOf(XPathItem)\n  nameWithType: XmlQueryNodeSequence.IList<XPathItem>.IndexOf(XPathItem)\n  fullName: XmlQueryNodeSequence.IList<XPathItem>.IndexOf(XPathItem)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Returns the index of the specified value in the sequence.\n  syntax:\n    content: int IList<XPathItem>.IndexOf (System.Xml.XPath.XPathItem value);\n    parameters:\n    - id: value\n      type: System.Xml.XPath.XPathItem\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.\n    return:\n      type: System.Int32\n      description: The index of the specified value in the sequence.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList<System#Xml#XPath#XPathItem>#Insert(System.Int32,System.Xml.XPath.XPathItem)\n  id: System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: IList<XPathItem>.Insert(Int32, XPathItem)\n  nameWithType: XmlQueryNodeSequence.IList<XPathItem>.Insert(Int32, XPathItem)\n  fullName: XmlQueryNodeSequence.IList<XPathItem>.Insert(Int32, XPathItem)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Throws the <xref href=\"System.NotSupportedException\"></xref> exception.\n  syntax:\n    content: void IList<XPathItem>.Insert (int index, System.Xml.XPath.XPathItem value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: A value of type `int`.\n    - id: value\n      type: System.Xml.XPath.XPathItem\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item(System.Int32)\n  commentId: P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList<System#Xml#XPath#XPathItem>#Item(System.Int32)\n  id: System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item(System.Int32)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: IList<XPathItem>.Item(Int32)\n  nameWithType: XmlQueryNodeSequence.IList<XPathItem>.Item(Int32)\n  fullName: XmlQueryNodeSequence.IList<XPathItem>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Returns the item at the specified index.\n  syntax:\n    content: System.Xml.XPath.XPathItem System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: A value of type `Int32`.\n    return:\n      type: System.Xml.XPath.XPathItem\n      description: An instance of the <xref href=\"System.Xml.XPath.XPathItem\"></xref> class.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt(System.Int32)\n  commentId: M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList<System#Xml#XPath#XPathItem>#RemoveAt(System.Int32)\n  id: System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  langs:\n  - csharp\n  name: IList<XPathItem>.RemoveAt(Int32)\n  nameWithType: XmlQueryNodeSequence.IList<XPathItem>.RemoveAt(Int32)\n  fullName: XmlQueryNodeSequence.IList<XPathItem>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Throws the <xref href=\"System.NotSupportedException\"></xref> exception.\n  syntax:\n    content: void IList<XPathItem>.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: A value of type `int`.\n  overload: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  name: XmlQuerySequence<T>\n  nameWithType: XmlQuerySequence<T>\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<T>\n- uid: System.Xml.XPath.XPathNavigator\n  name: XPathNavigator\n  nameWithType: XPathNavigator\n  fullName: System.Xml.XPath.XPathNavigator\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence{System.Xml.XPath.XPathNavigator}\n  parent: System.Xml.Xsl.Runtime\n  isExternal: false\n  name: XmlQuerySequence<XPathNavigator>\n  nameWithType: XmlQuerySequence<XPathNavigator>\n  fullName: System.Xml.Xsl.Runtime.XmlQuerySequence<System.Xml.XPath.XPathNavigator>\n  spec.csharp:\n  - uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n    name: XmlQuerySequence\n    nameWithType: XmlQuerySequence\n    fullName: System.Xml.Xsl.Runtime.XmlQuerySequence\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XPath.XPathNavigator\n    name: XPathNavigator\n    nameWithType: XPathNavigator\n    fullName: System.Xml.XPath.XPathNavigator\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: XmlQueryNodeSequence()\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence()\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence()\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: XmlQueryNodeSequence(IList<XPathNavigator>)\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence(IList<XPathNavigator>)\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence(IList<XPathNavigator>)\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<XPathNavigator>\n  nameWithType: IList<XPathNavigator>\n  fullName: System.Collections.Generic.IList<System.Xml.XPath.XPathNavigator>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XPath.XPathNavigator\n    name: XPathNavigator\n    nameWithType: XPathNavigator\n    fullName: System.Xml.XPath.XPathNavigator\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: XmlQueryNodeSequence(Int32)\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence(Int32)\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: XmlQueryNodeSequence(XPathNavigator)\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence(XPathNavigator)\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence(XPathNavigator)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: XmlQueryNodeSequence(XPathNavigator[], Int32)\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence(XPathNavigator[], Int32)\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence(XPathNavigator[], Int32)\n- uid: System.Xml.XPath.XPathNavigator[]\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathNavigator[]\n  nameWithType: XPathNavigator[]\n  fullName: System.Xml.XPath.XPathNavigator[]\n  spec.csharp:\n  - uid: System.Xml.XPath.XPathNavigator\n    name: XPathNavigator\n    nameWithType: XPathNavigator\n    fullName: System.Xml.XPath.XPathNavigator\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: AddClone(XPathNavigator)\n  nameWithType: XmlQueryNodeSequence.AddClone(XPathNavigator)\n  fullName: XmlQueryNodeSequence.AddClone(XPathNavigator)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: CreateOrReuse(XmlQueryNodeSequence)\n  nameWithType: XmlQueryNodeSequence.CreateOrReuse(XmlQueryNodeSequence)\n  fullName: XmlQueryNodeSequence.CreateOrReuse(XmlQueryNodeSequence)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  parent: System.Xml.Xsl.Runtime\n  isExternal: false\n  name: XmlQueryNodeSequence\n  nameWithType: XmlQueryNodeSequence\n  fullName: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: CreateOrReuse(XmlQueryNodeSequence, XPathNavigator)\n  nameWithType: XmlQueryNodeSequence.CreateOrReuse(XmlQueryNodeSequence, XPathNavigator)\n  fullName: XmlQueryNodeSequence.CreateOrReuse(XmlQueryNodeSequence, XPathNavigator)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: DocOrderDistinct(IComparer<XPathNavigator>)\n  nameWithType: XmlQueryNodeSequence.DocOrderDistinct(IComparer<XPathNavigator>)\n  fullName: XmlQueryNodeSequence.DocOrderDistinct(IComparer<XPathNavigator>)\n- uid: System.Collections.Generic.IComparer`1\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n- uid: System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<XPathNavigator>\n  nameWithType: IComparer<XPathNavigator>\n  fullName: System.Collections.Generic.IComparer<System.Xml.XPath.XPathNavigator>\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    nameWithType: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XPath.XPathNavigator\n    name: XPathNavigator\n    nameWithType: XPathNavigator\n    fullName: System.Xml.XPath.XPathNavigator\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.Empty\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: Empty\n  nameWithType: XmlQueryNodeSequence.Empty\n  fullName: XmlQueryNodeSequence.Empty\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: IsDocOrderDistinct\n  nameWithType: XmlQueryNodeSequence.IsDocOrderDistinct\n  fullName: XmlQueryNodeSequence.IsDocOrderDistinct\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.OnItemsChanged\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: OnItemsChanged()\n  nameWithType: XmlQueryNodeSequence.OnItemsChanged()\n  fullName: XmlQueryNodeSequence.OnItemsChanged()\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: ICollection<XPathItem>.Add(XPathItem)\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.Add(XPathItem)\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.Add(XPathItem)\n- uid: System.Xml.XPath.XPathItem\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathItem\n  nameWithType: XPathItem\n  fullName: System.Xml.XPath.XPathItem\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: ICollection<XPathItem>.Clear()\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.Clear()\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.Clear()\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains(System.Xml.XPath.XPathItem)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: ICollection<XPathItem>.Contains(XPathItem)\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.Contains(XPathItem)\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.Contains(XPathItem)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: ICollection<XPathItem>.CopyTo(XPathItem[], Int32)\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.CopyTo(XPathItem[], Int32)\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.CopyTo(XPathItem[], Int32)\n- uid: System.Xml.XPath.XPathItem[]\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathItem[]\n  nameWithType: XPathItem[]\n  fullName: System.Xml.XPath.XPathItem[]\n  spec.csharp:\n  - uid: System.Xml.XPath.XPathItem\n    name: XPathItem\n    nameWithType: XPathItem\n    fullName: System.Xml.XPath.XPathItem\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#get_Count\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: ICollection<XPathItem>.get_Count()\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.get_Count()\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.get_Count()\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: ICollection<XPathItem>.IsReadOnly\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.IsReadOnly\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.IsReadOnly\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: ICollection<XPathItem>.Remove(XPathItem)\n  nameWithType: XmlQueryNodeSequence.ICollection<XPathItem>.Remove(XPathItem)\n  fullName: XmlQueryNodeSequence.ICollection<XPathItem>.Remove(XPathItem)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: IEnumerable<XPathItem>.GetEnumerator()\n  nameWithType: XmlQueryNodeSequence.IEnumerable<XPathItem>.GetEnumerator()\n  fullName: XmlQueryNodeSequence.IEnumerable<XPathItem>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{System.Xml.XPath.XPathItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<XPathItem>\n  nameWithType: IEnumerator<XPathItem>\n  fullName: System.Collections.Generic.IEnumerator<System.Xml.XPath.XPathItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XPath.XPathItem\n    name: XPathItem\n    nameWithType: XPathItem\n    fullName: System.Xml.XPath.XPathItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf(System.Xml.XPath.XPathItem)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: IList<XPathItem>.IndexOf(XPathItem)\n  nameWithType: XmlQueryNodeSequence.IList<XPathItem>.IndexOf(XPathItem)\n  fullName: XmlQueryNodeSequence.IList<XPathItem>.IndexOf(XPathItem)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: IList<XPathItem>.Insert(Int32, XPathItem)\n  nameWithType: XmlQueryNodeSequence.IList<XPathItem>.Insert(Int32, XPathItem)\n  fullName: XmlQueryNodeSequence.IList<XPathItem>.Insert(Int32, XPathItem)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: IList<XPathItem>.Item(Int32)\n  nameWithType: XmlQueryNodeSequence.IList<XPathItem>.Item(Int32)\n  fullName: XmlQueryNodeSequence.IList<XPathItem>.Item(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: IList<XPathItem>.RemoveAt(Int32)\n  nameWithType: XmlQueryNodeSequence.IList<XPathItem>.RemoveAt(Int32)\n  fullName: XmlQueryNodeSequence.IList<XPathItem>.RemoveAt(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: XmlQueryNodeSequence\n  nameWithType: XmlQueryNodeSequence.XmlQueryNodeSequence\n  fullName: XmlQueryNodeSequence.XmlQueryNodeSequence\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: AddClone\n  nameWithType: XmlQueryNodeSequence.AddClone\n  fullName: XmlQueryNodeSequence.AddClone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: CreateOrReuse\n  nameWithType: XmlQueryNodeSequence.CreateOrReuse\n  fullName: XmlQueryNodeSequence.CreateOrReuse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: DocOrderDistinct\n  nameWithType: XmlQueryNodeSequence.DocOrderDistinct\n  fullName: XmlQueryNodeSequence.DocOrderDistinct\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: IsDocOrderDistinct\n  nameWithType: XmlQueryNodeSequence.IsDocOrderDistinct\n  fullName: XmlQueryNodeSequence.IsDocOrderDistinct\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.OnItemsChanged*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: OnItemsChanged\n  nameWithType: XmlQueryNodeSequence.OnItemsChanged\n  fullName: XmlQueryNodeSequence.OnItemsChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Add\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Add\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Clear\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Clear\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Contains\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Contains\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.CopyTo\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.CopyTo\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#get_Count*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.get_Count\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.get_Count\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.get_Count\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.IsReadOnly\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.IsReadOnly\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Remove\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Remove\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<System.Xml.XPath.XPathItem>.GetEnumerator\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.IEnumerable<System.Xml.XPath.XPathItem>.GetEnumerator\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.IEnumerable<System.Xml.XPath.XPathItem>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.IndexOf\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.IndexOf\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.Insert\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.Insert\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.Item\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.Item\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt*\n  parent: System.Xml.Xsl.Runtime.XmlQueryNodeSequence\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.RemoveAt\n  nameWithType: XmlQueryNodeSequence.System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.RemoveAt\n  fullName: XmlQueryNodeSequence.System.Collections.Generic.IList<System.Xml.XPath.XPathItem>.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/XmlQueryNodeSequence.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: XmlQuerySequence<T>.Add(T)\n  fullName: XmlQuerySequence<T>.Add(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Clear()\n  nameWithType: XmlQuerySequence<T>.Clear()\n  fullName: XmlQuerySequence<T>.Clear()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: XmlQuerySequence<T>.Contains(T)\n  fullName: XmlQuerySequence<T>.Contains(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: CopyTo(T[], Int32)\n  nameWithType: XmlQuerySequence<T>.CopyTo(T[], Int32)\n  fullName: XmlQuerySequence<T>.CopyTo(T[], Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Count\n  nameWithType: XmlQuerySequence<T>.Count\n  fullName: XmlQuerySequence<T>.Count\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0})\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: CreateOrReuse(XmlQuerySequence<T>)\n  nameWithType: XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>)\n  fullName: XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0},`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: CreateOrReuse(XmlQuerySequence<T>, T)\n  nameWithType: XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>, T)\n  fullName: XmlQuerySequence<T>.CreateOrReuse(XmlQuerySequence<T>, T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: XmlQuerySequence<T>.GetEnumerator()\n  fullName: XmlQuerySequence<T>.GetEnumerator()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: XmlQuerySequence<T>.IndexOf(T)\n  fullName: XmlQuerySequence<T>.IndexOf(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: XmlQuerySequence<T>.Item(Int32)\n  fullName: XmlQuerySequence<T>.Item(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: SortByKeys(Array)\n  nameWithType: XmlQuerySequence<T>.SortByKeys(Array)\n  fullName: XmlQuerySequence<T>.SortByKeys(Array)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: ICollection<T>.Add(T)\n  nameWithType: XmlQuerySequence<T>.ICollection<T>.Add(T)\n  fullName: XmlQuerySequence<T>.ICollection<T>.Add(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: ICollection<T>.Clear()\n  nameWithType: XmlQuerySequence<T>.ICollection<T>.Clear()\n  fullName: XmlQuerySequence<T>.ICollection<T>.Clear()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: ICollection<T>.IsReadOnly\n  nameWithType: XmlQuerySequence<T>.ICollection<T>.IsReadOnly\n  fullName: XmlQuerySequence<T>.ICollection<T>.IsReadOnly\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: ICollection<T>.Remove(T)\n  nameWithType: XmlQuerySequence<T>.ICollection<T>.Remove(T)\n  fullName: XmlQuerySequence<T>.ICollection<T>.Remove(T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList<T>.Insert(Int32, T)\n  nameWithType: XmlQuerySequence<T>.IList<T>.Insert(Int32, T)\n  fullName: XmlQuerySequence<T>.IList<T>.Insert(Int32, T)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList<T>.RemoveAt(Int32)\n  nameWithType: XmlQuerySequence<T>.IList<T>.RemoveAt(Int32)\n  fullName: XmlQuerySequence<T>.IList<T>.RemoveAt(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: XmlQuerySequence<T>.ICollection.CopyTo(Array, Int32)\n  fullName: XmlQuerySequence<T>.ICollection.CopyTo(Array, Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: XmlQuerySequence<T>.ICollection.IsSynchronized\n  fullName: XmlQuerySequence<T>.ICollection.IsSynchronized\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: XmlQuerySequence<T>.ICollection.SyncRoot\n  fullName: XmlQuerySequence<T>.ICollection.SyncRoot\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: XmlQuerySequence<T>.IEnumerable.GetEnumerator()\n  fullName: XmlQuerySequence<T>.IEnumerable.GetEnumerator()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: XmlQuerySequence<T>.IList.Add(Object)\n  fullName: XmlQuerySequence<T>.IList.Add(Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.Clear()\n  nameWithType: XmlQuerySequence<T>.IList.Clear()\n  fullName: XmlQuerySequence<T>.IList.Clear()\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: XmlQuerySequence<T>.IList.Contains(Object)\n  fullName: XmlQuerySequence<T>.IList.Contains(Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: XmlQuerySequence<T>.IList.IndexOf(Object)\n  fullName: XmlQuerySequence<T>.IList.IndexOf(Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: XmlQuerySequence<T>.IList.Insert(Int32, Object)\n  fullName: XmlQuerySequence<T>.IList.Insert(Int32, Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: XmlQuerySequence<T>.IList.IsFixedSize\n  fullName: XmlQuerySequence<T>.IList.IsFixedSize\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: XmlQuerySequence<T>.IList.IsReadOnly\n  fullName: XmlQuerySequence<T>.IList.IsReadOnly\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: XmlQuerySequence<T>.IList.Item(Int32)\n  fullName: XmlQuerySequence<T>.IList.Item(Int32)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: XmlQuerySequence<T>.IList.Remove(Object)\n  fullName: XmlQuerySequence<T>.IList.Remove(Object)\n- uid: System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Xml.Xsl.Runtime.XmlQuerySequence`1\n  isExternal: false\n  name: IList.RemoveAt(Int32)\n  nameWithType: XmlQuerySequence<T>.IList.RemoveAt(Int32)\n  fullName: XmlQuerySequence<T>.IList.RemoveAt(Int32)\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{System.Xml.XPath.XPathItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<XPathItem>\n  nameWithType: ICollection<XPathItem>\n  fullName: System.Collections.Generic.ICollection<System.Xml.XPath.XPathItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XPath.XPathItem\n    name: XPathItem\n    nameWithType: XPathItem\n    fullName: System.Xml.XPath.XPathItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Xml.XPath.XPathItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<XPathItem>\n  nameWithType: IEnumerable<XPathItem>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.XPath.XPathItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XPath.XPathItem\n    name: XPathItem\n    nameWithType: XPathItem\n    fullName: System.Xml.XPath.XPathItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IList{System.Xml.XPath.XPathItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<XPathItem>\n  nameWithType: IList<XPathItem>\n  fullName: System.Collections.Generic.IList<System.Xml.XPath.XPathItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XPath.XPathItem\n    name: XPathItem\n    nameWithType: XPathItem\n    fullName: System.Xml.XPath.XPathItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}