{"nodes":[{"content":"Represents a three-dimensional plane.","nodes":[{"pos":[0,37],"content":"Represents a three-dimensional plane.","nodes":[{"content":"Represents a three-dimensional plane.","pos":[0,37]}]}],"pos":[1567,1605],"yaml":true},{"content":"Creates a <xref href=\"System.Numerics.Plane\"></xref> object from a specified four-dimensional vector.","nodes":[{"pos":[0,101],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Plane\"&gt;&lt;/xref&gt;</ph> object from a specified four-dimensional vector.","source":"Creates a <xref href=\"System.Numerics.Plane\"></xref> object from a specified four-dimensional vector."}],"pos":[2857,2959],"yaml":true},{"content":"A vector whose first three elements describe the normal vector, and whose <xref href=\"System.Numerics.Vector4.W\"></xref> defines the distance along that normal from the origin.","nodes":[{"pos":[0,176],"content":"A vector whose first three elements describe the normal vector, and whose <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Vector4.W\"&gt;&lt;/xref&gt;</ph> defines the distance along that normal from the origin.","source":"A vector whose first three elements describe the normal vector, and whose <xref href=\"System.Numerics.Vector4.W\"></xref> defines the distance along that normal from the origin."}],"pos":[3115,3292],"yaml":true},{"content":"Creates a <xref href=\"System.Numerics.Plane\"></xref> object from a specified normal and the distance along the normal from the origin.","nodes":[{"pos":[0,134],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Plane\"&gt;&lt;/xref&gt;</ph> object from a specified normal and the distance along the normal from the origin.","source":"Creates a <xref href=\"System.Numerics.Plane\"></xref> object from a specified normal and the distance along the normal from the origin."}],"pos":[4474,4609],"yaml":true},{"content":"The plane's normal vector.","nodes":[{"pos":[0,26],"content":"The plane's normal vector.","nodes":[{"content":"The plane's normal vector.","pos":[0,26]}]}],"pos":[4776,4803],"yaml":true},{"content":"The plane's distance from the origin along its normal vector.","nodes":[{"pos":[0,61],"content":"The plane's distance from the origin along its normal vector.","nodes":[{"content":"The plane's distance from the origin along its normal vector.","pos":[0,61]}]}],"pos":[4860,4922],"yaml":true},{"content":"Creates a <xref href=\"System.Numerics.Plane\"></xref> object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.","nodes":[{"pos":[0,155],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Plane\"&gt;&lt;/xref&gt;</ph> object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.","source":"Creates a <xref href=\"System.Numerics.Plane\"></xref> object from the X, Y, and Z components of its normal, and its distance from the origin on that normal."}],"pos":[6203,6359],"yaml":true},{"content":"The X component of the normal.","nodes":[{"pos":[0,30],"content":"The X component of the normal.","nodes":[{"content":"The X component of the normal.","pos":[0,30]}]}],"pos":[6506,6537],"yaml":true},{"content":"The Y component of the normal.","nodes":[{"pos":[0,30],"content":"The Y component of the normal.","nodes":[{"content":"The Y component of the normal.","pos":[0,30]}]}],"pos":[6594,6625],"yaml":true},{"content":"The Z component of the normal.","nodes":[{"pos":[0,30],"content":"The Z component of the normal.","nodes":[{"content":"The Z component of the normal.","pos":[0,30]}]}],"pos":[6682,6713],"yaml":true},{"content":"The distance of the plane along its normal from the origin.","nodes":[{"pos":[0,59],"content":"The distance of the plane along its normal from the origin.","nodes":[{"content":"The distance of the plane along its normal from the origin.","pos":[0,59]}]}],"pos":[6770,6830],"yaml":true},{"content":"Creates a <xref href=\"System.Numerics.Plane\"></xref> object that contains three specified points.","nodes":[{"pos":[0,97],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Plane\"&gt;&lt;/xref&gt;</ph> object that contains three specified points.","source":"Creates a <xref href=\"System.Numerics.Plane\"></xref> object that contains three specified points."}],"pos":[8215,8313],"yaml":true},{"content":"The first point defining the plane.","nodes":[{"pos":[0,35],"content":"The first point defining the plane.","nodes":[{"content":"The first point defining the plane.","pos":[0,35]}]}],"pos":[8577,8613],"yaml":true},{"content":"The second point defining the plane.","nodes":[{"pos":[0,36],"content":"The second point defining the plane.","nodes":[{"content":"The second point defining the plane.","pos":[0,36]}]}],"pos":[8685,8722],"yaml":true},{"content":"The third point defining the plane.","nodes":[{"pos":[0,35],"content":"The third point defining the plane.","nodes":[{"content":"The third point defining the plane.","pos":[0,35]}]}],"pos":[8794,8830],"yaml":true},{"content":"The plane containing the three points.","nodes":[{"pos":[0,38],"content":"The plane containing the three points.","nodes":[{"content":"The plane containing the three points.","pos":[0,38]}]}],"pos":[8895,8934],"yaml":true},{"content":"The distance of the plane along its normal from the origin.","nodes":[{"pos":[0,59],"content":"The distance of the plane along its normal from the origin.","nodes":[{"content":"The distance of the plane along its normal from the origin.","pos":[0,59]}]}],"pos":[9929,9989],"yaml":true},{"content":"Calculates the dot product of a plane and a 4-dimensional vector.","nodes":[{"pos":[0,65],"content":"Calculates the dot product of a plane and a 4-dimensional vector.","nodes":[{"content":"Calculates the dot product of a plane and a 4-dimensional vector.","pos":[0,65]}]}],"pos":[11231,11297],"yaml":true},{"content":"The plane.","nodes":[{"pos":[0,10],"content":"The plane.","nodes":[{"content":"The plane.","pos":[0,10]}]}],"pos":[11491,11502],"yaml":true},{"content":"The four-dimensional vector.","nodes":[{"pos":[0,28],"content":"The four-dimensional vector.","nodes":[{"content":"The four-dimensional vector.","pos":[0,28]}]}],"pos":[11573,11602],"yaml":true},{"content":"The dot product.","nodes":[{"pos":[0,16],"content":"The dot product.","nodes":[{"content":"The dot product.","pos":[0,16]}]}],"pos":[11659,11676],"yaml":true},{"content":"Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (<xref href=\"System.Numerics.Plane.D\"></xref>) value of the plane.","nodes":[{"pos":[0,184],"content":"Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (<ph id=\"ph1\">&lt;xref href=\"System.Numerics.Plane.D\"&gt;&lt;/xref&gt;</ph>) value of the plane.","source":"Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (<xref href=\"System.Numerics.Plane.D\"></xref>) value of the plane."}],"pos":[12918,13103],"yaml":true},{"content":"The plane.","nodes":[{"pos":[0,10],"content":"The plane.","nodes":[{"content":"The plane.","pos":[0,10]}]}],"pos":[13307,13318],"yaml":true},{"content":"The 3-dimensional vector.","nodes":[{"pos":[0,25],"content":"The 3-dimensional vector.","nodes":[{"content":"The 3-dimensional vector.","pos":[0,25]}]}],"pos":[13389,13415],"yaml":true},{"content":"The dot product.","nodes":[{"pos":[0,16],"content":"The dot product.","nodes":[{"content":"The dot product.","pos":[0,16]}]}],"pos":[13472,13489],"yaml":true},{"content":"Returns the dot product of a specified three-dimensional vector and the <xref href=\"System.Numerics.Plane.Normal\"></xref> vector of this plane.","nodes":[{"pos":[0,143],"content":"Returns the dot product of a specified three-dimensional vector and the <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Plane.Normal\"&gt;&lt;/xref&gt;</ph> vector of this plane.","source":"Returns the dot product of a specified three-dimensional vector and the <xref href=\"System.Numerics.Plane.Normal\"></xref> vector of this plane."}],"pos":[14717,14861],"yaml":true},{"content":"The plane.","nodes":[{"pos":[0,10],"content":"The plane.","nodes":[{"content":"The plane.","pos":[0,10]}]}],"pos":[15061,15072],"yaml":true},{"content":"The three-dimensional vector.","nodes":[{"pos":[0,29],"content":"The three-dimensional vector.","nodes":[{"content":"The three-dimensional vector.","pos":[0,29]}]}],"pos":[15143,15173],"yaml":true},{"content":"The dot product.","nodes":[{"pos":[0,16],"content":"The dot product.","nodes":[{"content":"The dot product.","pos":[0,16]}]}],"pos":[15230,15247],"yaml":true},{"content":"Returns a value that indicates whether this instance and a specified object are equal.","nodes":[{"pos":[0,86],"content":"Returns a value that indicates whether this instance and a specified object are equal.","nodes":[{"content":"Returns a value that indicates whether this instance and a specified object are equal.","pos":[0,86]}]}],"pos":[16333,16420],"yaml":true},{"content":"The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Plane> object and their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal.","nodes":[{"pos":[0,189],"content":"The current instance and <ph id=\"ph1\">`obj`</ph> are equal if <ph id=\"ph2\">`obj`</ph> is a <ph id=\"ph3\">&lt;xref:System.Numerics.Plane&gt;</ph> object and their <ph id=\"ph4\">&lt;xref:System.Numerics.Plane.Normal&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Numerics.Plane.D&gt;</ph> fields are equal.","source":"The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Plane> object and their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal."}],"pos":[16431,16621],"yaml":true,"extradata":"MT"},{"content":"The object to compare with the current instance.","nodes":[{"pos":[0,48],"content":"The object to compare with the current instance.","nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]}],"pos":[16761,16810],"yaml":true},{"content":"`true` if the current instance and <code>obj</code> are equal; otherwise, `false```. If <code>obj</code> is `null`, the method returns `false`.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if the current instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> are equal; otherwise, <ph id=\"ph3\">`false```. If &lt;code&gt;obj&lt;/code&gt; is `</ph>null<ph id=\"ph4\">`, the method returns `</ph>false`.","source":"`true` if the current instance and <code>obj</code> are equal; otherwise, `false```. If <code>obj</code> is `null`, the method returns `false`."}],"pos":[16868,17014],"yaml":true},{"content":"Returns a value that indicates whether this instance and another plane object are equal.","nodes":[{"pos":[0,88],"content":"Returns a value that indicates whether this instance and another plane object are equal.","nodes":[{"content":"Returns a value that indicates whether this instance and another plane object are equal.","pos":[0,88]}]}],"pos":[18118,18207],"yaml":true},{"content":"Two <xref:System.Numerics.Plane> objects are equal if their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal.","nodes":[{"pos":[0,148],"content":"Two <xref:System.Numerics.Plane> objects are equal if their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Numerics.Plane&gt;</ph> objects are equal if their <ph id=\"ph2\">&lt;xref:System.Numerics.Plane.Normal&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Numerics.Plane.D&gt;</ph> fields are equal.","pos":[0,148],"source":"Two <xref:System.Numerics.Plane> objects are equal if their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal."}]}],"pos":[18218,18367],"yaml":true,"extradata":"MT"},{"content":"The other plane.","nodes":[{"pos":[0,16],"content":"The other plane.","nodes":[{"content":"The other plane.","pos":[0,16]}]}],"pos":[18525,18542],"yaml":true},{"content":"`true` if the two planes are equal; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the two planes are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two planes are equal; otherwise, `false`."}],"pos":[18600,18658],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[19708,19749],"yaml":true},{"content":"The hash code.","nodes":[{"pos":[0,14],"content":"The hash code.","nodes":[{"content":"The hash code.","pos":[0,14]}]}],"pos":[19883,19898],"yaml":true},{"content":"The normal vector of the plane.","nodes":[{"pos":[0,31],"content":"The normal vector of the plane.","nodes":[{"content":"The normal vector of the plane.","pos":[0,31]}]}],"pos":[20916,20948],"yaml":true},{"content":"Creates a new <xref href=\"System.Numerics.Plane\"></xref> object whose normal vector is the source plane's normal vector normalized.","nodes":[{"pos":[0,131],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Plane\"&gt;&lt;/xref&gt;</ph> object whose normal vector is the source plane's normal vector normalized.","source":"Creates a new <xref href=\"System.Numerics.Plane\"></xref> object whose normal vector is the source plane's normal vector normalized."}],"pos":[22160,22292],"yaml":true},{"content":"The source plane.","nodes":[{"pos":[0,17],"content":"The source plane.","nodes":[{"content":"The source plane.","pos":[0,17]}]}],"pos":[22477,22495],"yaml":true},{"content":"The normalized plane.","nodes":[{"pos":[0,21],"content":"The normalized plane.","nodes":[{"content":"The normalized plane.","pos":[0,21]}]}],"pos":[22560,22582],"yaml":true},{"content":"Returns a value that indicates whether two planes are equal.","nodes":[{"pos":[0,60],"content":"Returns a value that indicates whether two planes are equal.","nodes":[{"content":"Returns a value that indicates whether two planes are equal.","pos":[0,60]}]}],"pos":[23808,23869],"yaml":true},{"content":"Two <xref:System.Numerics.Plane> objects are equal if their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal.  \n  \n The <xref:System.Numerics.Plane.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Plane> objects.","nodes":[{"pos":[0,148],"content":"Two <xref:System.Numerics.Plane> objects are equal if their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Numerics.Plane&gt;</ph> objects are equal if their <ph id=\"ph2\">&lt;xref:System.Numerics.Plane.Normal&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Numerics.Plane.D&gt;</ph> fields are equal.","pos":[0,148],"source":"Two <xref:System.Numerics.Plane> objects are equal if their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal."}]},{"pos":[155,298],"content":"The <xref:System.Numerics.Plane.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Plane> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Plane.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Plane&gt;</ph> objects.","pos":[0,143],"source":"The <xref:System.Numerics.Plane.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Plane> objects."}]}],"pos":[23880,24183],"yaml":true,"extradata":"MT"},{"content":"The first plane to compare.","nodes":[{"pos":[0,27],"content":"The first plane to compare.","nodes":[{"content":"The first plane to compare.","pos":[0,27]}]}],"pos":[24385,24413],"yaml":true},{"content":"The second plane to compare.","nodes":[{"pos":[0,28],"content":"The second plane to compare.","nodes":[{"content":"The second plane to compare.","pos":[0,28]}]}],"pos":[24483,24512],"yaml":true},{"content":"`true` if <code>value1</code> and <code>value2</code> are equal; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value1</code> and <code>value2</code> are equal; otherwise, `false`."}],"pos":[24570,24657],"yaml":true},{"content":"Returns a value that indicates whether two planes are not equal.","nodes":[{"pos":[0,64],"content":"Returns a value that indicates whether two planes are not equal.","nodes":[{"content":"Returns a value that indicates whether two planes are not equal.","pos":[0,64]}]}],"pos":[25897,25962],"yaml":true},{"content":"The <xref:System.Numerics.Plane.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.Plane> objects.","nodes":[{"pos":[0,147],"content":"The <xref:System.Numerics.Plane.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.Plane> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Plane.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Plane&gt;</ph> objects.","pos":[0,147],"source":"The <xref:System.Numerics.Plane.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.Plane> objects."}]}],"pos":[25973,26121],"yaml":true,"extradata":"MT"},{"content":"The first plane to compare.","nodes":[{"pos":[0,27],"content":"The first plane to compare.","nodes":[{"content":"The first plane to compare.","pos":[0,27]}]}],"pos":[26325,26353],"yaml":true},{"content":"The second plane to compare.","nodes":[{"pos":[0,28],"content":"The second plane to compare.","nodes":[{"content":"The second plane to compare.","pos":[0,28]}]}],"pos":[26423,26452],"yaml":true},{"content":"`true` if <code>value1</code> and <code>value2</code> are not equal; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value1</code> and <code>value2</code> are not equal; otherwise, `false`."}],"pos":[26510,26601],"yaml":true},{"content":"Returns the string representation of this plane object.","nodes":[{"pos":[0,55],"content":"Returns the string representation of this plane object.","nodes":[{"content":"Returns the string representation of this plane object.","pos":[0,55]}]}],"pos":[27640,27696],"yaml":true},{"content":"The string representation of a <xref:System.Numerics.Plane> object use the formatting conventions of the current culture to format the numeric values in the returned string. For example, a <xref:System.Numerics.Plane> object whose string representation is formatted by using the conventions of the en-US culture might appear as `{Normal:<1.1, 2.2, 3.3> D:4.4}`.","nodes":[{"pos":[0,361],"content":"The string representation of a <xref:System.Numerics.Plane> object use the formatting conventions of the current culture to format the numeric values in the returned string. For example, a <xref:System.Numerics.Plane> object whose string representation is formatted by using the conventions of the en-US culture might appear as `{Normal:<1.1, 2.2, 3.3> D:4.4}`.","nodes":[{"content":"The string representation of a <ph id=\"ph1\">&lt;xref:System.Numerics.Plane&gt;</ph> object use the formatting conventions of the current culture to format the numeric values in the returned string.","pos":[0,173],"source":"The string representation of a <xref:System.Numerics.Plane> object use the formatting conventions of the current culture to format the numeric values in the returned string."},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Numerics.Plane&gt;</ph> object whose string representation is formatted by using the conventions of the en-US culture might appear as <ph id=\"ph2\">`{Normal:&lt;1.1, 2.2, 3.3&gt; D:4.4}`</ph>.","pos":[174,361],"source":" For example, a <xref:System.Numerics.Plane> object whose string representation is formatted by using the conventions of the en-US culture might appear as `{Normal:<1.1, 2.2, 3.3> D:4.4}`."}]}],"pos":[27707,28069],"yaml":true,"extradata":"MT"},{"content":"A string that represents this <xref href=\"System.Numerics.Plane\"></xref> object.","nodes":[{"pos":[0,80],"content":"A string that represents this <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Plane\"&gt;&lt;/xref&gt;</ph> object.","source":"A string that represents this <xref href=\"System.Numerics.Plane\"></xref> object."}],"pos":[28204,28285],"yaml":true},{"content":"Transforms a normalized plane by a 4x4 matrix.","nodes":[{"pos":[0,46],"content":"Transforms a normalized plane by a 4x4 matrix.","nodes":[{"content":"Transforms a normalized plane by a 4x4 matrix.","pos":[0,46]}]}],"pos":[29520,29567],"yaml":true},{"content":"`plane` must already be normalized so that its <xref:System.Numerics.Plane.Normal> vector is of unit length before this method is called.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`plane`</ph> must already be normalized so that its <ph id=\"ph2\">&lt;xref:System.Numerics.Plane.Normal&gt;</ph> vector is of unit length before this method is called.","source":"`plane` must already be normalized so that its <xref:System.Numerics.Plane.Normal> vector is of unit length before this method is called."}],"pos":[29578,29718],"yaml":true,"extradata":"MT"},{"content":"The normalized plane to transform.","nodes":[{"pos":[0,34],"content":"The normalized plane to transform.","nodes":[{"content":"The normalized plane to transform.","pos":[0,34]}]}],"pos":[29937,29972],"yaml":true},{"content":"The transformation matrix to apply to <code>plane</code>.","nodes":[{"pos":[0,57],"content":"The transformation matrix to apply to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">plane</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The transformation matrix to apply to <code>plane</code>."}],"pos":[30046,30104],"yaml":true},{"content":"The transformed plane.","nodes":[{"pos":[0,22],"content":"The transformed plane.","nodes":[{"content":"The transformed plane.","pos":[0,22]}]}],"pos":[30169,30192],"yaml":true},{"content":"Transforms a normalized plane by a Quaternion rotation.","nodes":[{"pos":[0,55],"content":"Transforms a normalized plane by a Quaternion rotation.","nodes":[{"content":"Transforms a normalized plane by a Quaternion rotation.","pos":[0,55]}]}],"pos":[31434,31490],"yaml":true},{"content":"`plane` must already be normalized so that its <xref:System.Numerics.Plane.Normal> vector is of unit length before this method is called.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`plane`</ph> must already be normalized so that its <ph id=\"ph2\">&lt;xref:System.Numerics.Plane.Normal&gt;</ph> vector is of unit length before this method is called.","source":"`plane` must already be normalized so that its <xref:System.Numerics.Plane.Normal> vector is of unit length before this method is called."}],"pos":[31501,31641],"yaml":true,"extradata":"MT"},{"content":"The normalized plane to transform.","nodes":[{"pos":[0,34],"content":"The normalized plane to transform.","nodes":[{"content":"The normalized plane to transform.","pos":[0,34]}]}],"pos":[31863,31898],"yaml":true},{"content":"The Quaternion rotation to apply to the plane.","nodes":[{"pos":[0,46],"content":"The Quaternion rotation to apply to the plane.","nodes":[{"content":"The Quaternion rotation to apply to the plane.","pos":[0,46]}]}],"pos":[31975,32022],"yaml":true},{"content":"A new plane that results from applying the Quaternion rotation.","nodes":[{"pos":[0,63],"content":"A new plane that results from applying the Quaternion rotation.","nodes":[{"content":"A new plane that results from applying the Quaternion rotation.","pos":[0,63]}]}],"pos":[32087,32151],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Numerics.Plane\n  commentId: T:System.Numerics.Plane\n  id: Plane\n  children:\n  - System.Numerics.Plane.#ctor(System.Numerics.Vector4)\n  - System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)\n  - System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)\n  - System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)\n  - System.Numerics.Plane.D\n  - System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)\n  - System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)\n  - System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)\n  - System.Numerics.Plane.Equals(System.Object)\n  - System.Numerics.Plane.Equals(System.Numerics.Plane)\n  - System.Numerics.Plane.GetHashCode\n  - System.Numerics.Plane.Normal\n  - System.Numerics.Plane.Normalize(System.Numerics.Plane)\n  - System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)\n  - System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)\n  - System.Numerics.Plane.ToString\n  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)\n  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)\n  langs:\n  - csharp\n  name: Plane\n  nameWithType: Plane\n  fullName: System.Numerics.Plane\n  type: Struct\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Represents a three-dimensional plane.\n  syntax:\n    content: 'public struct Plane : IEquatable<System.Numerics.Plane>'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable{System.Numerics.Plane}\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector4)\n  commentId: M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)\n  id: '#ctor(System.Numerics.Vector4)'\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Plane(Vector4)\n  nameWithType: Plane.Plane(Vector4)\n  fullName: Plane.Plane(Vector4)\n  type: Constructor\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a <xref href=\"System.Numerics.Plane\"></xref> object from a specified four-dimensional vector.\n  syntax:\n    content: public Plane (System.Numerics.Vector4 value);\n    parameters:\n    - id: value\n      type: System.Numerics.Vector4\n      description: A vector whose first three elements describe the normal vector, and whose <xref href=\"System.Numerics.Vector4.W\"></xref> defines the distance along that normal from the origin.\n  overload: System.Numerics.Plane.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)\n  commentId: M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)\n  id: '#ctor(System.Numerics.Vector3,System.Single)'\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Plane(Vector3, Single)\n  nameWithType: Plane.Plane(Vector3, Single)\n  fullName: Plane.Plane(Vector3, Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a <xref href=\"System.Numerics.Plane\"></xref> object from a specified normal and the distance along the normal from the origin.\n  syntax:\n    content: public Plane (System.Numerics.Vector3 normal, float d);\n    parameters:\n    - id: normal\n      type: System.Numerics.Vector3\n      description: The plane's normal vector.\n    - id: d\n      type: System.Single\n      description: The plane's distance from the origin along its normal vector.\n  overload: System.Numerics.Plane.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)\n  commentId: M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Plane(Single, Single, Single, Single)\n  nameWithType: Plane.Plane(Single, Single, Single, Single)\n  fullName: Plane.Plane(Single, Single, Single, Single)\n  type: Constructor\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a <xref href=\"System.Numerics.Plane\"></xref> object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.\n  syntax:\n    content: public Plane (float x, float y, float z, float d);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The X component of the normal.\n    - id: y\n      type: System.Single\n      description: The Y component of the normal.\n    - id: z\n      type: System.Single\n      description: The Z component of the normal.\n    - id: d\n      type: System.Single\n      description: The distance of the plane along its normal from the origin.\n  overload: System.Numerics.Plane.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)\n  commentId: M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)\n  id: CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: CreateFromVertices(Vector3, Vector3, Vector3)\n  nameWithType: Plane.CreateFromVertices(Vector3, Vector3, Vector3)\n  fullName: Plane.CreateFromVertices(Vector3, Vector3, Vector3)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a <xref href=\"System.Numerics.Plane\"></xref> object that contains three specified points.\n  syntax:\n    content: public static System.Numerics.Plane CreateFromVertices (System.Numerics.Vector3 point1, System.Numerics.Vector3 point2, System.Numerics.Vector3 point3);\n    parameters:\n    - id: point1\n      type: System.Numerics.Vector3\n      description: The first point defining the plane.\n    - id: point2\n      type: System.Numerics.Vector3\n      description: The second point defining the plane.\n    - id: point3\n      type: System.Numerics.Vector3\n      description: The third point defining the plane.\n    return:\n      type: System.Numerics.Plane\n      description: The plane containing the three points.\n  overload: System.Numerics.Plane.CreateFromVertices*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.D\n  commentId: F:System.Numerics.Plane.D\n  id: D\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: D\n  nameWithType: Plane.D\n  fullName: Plane.D\n  type: Field\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: The distance of the plane along its normal from the origin.\n  syntax:\n    content: public float D;\n    return:\n      type: System.Single\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)\n  commentId: M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)\n  id: Dot(System.Numerics.Plane,System.Numerics.Vector4)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Dot(Plane, Vector4)\n  nameWithType: Plane.Dot(Plane, Vector4)\n  fullName: Plane.Dot(Plane, Vector4)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Calculates the dot product of a plane and a 4-dimensional vector.\n  syntax:\n    content: public static float Dot (System.Numerics.Plane plane, System.Numerics.Vector4 value);\n    parameters:\n    - id: plane\n      type: System.Numerics.Plane\n      description: The plane.\n    - id: value\n      type: System.Numerics.Vector4\n      description: The four-dimensional vector.\n    return:\n      type: System.Single\n      description: The dot product.\n  overload: System.Numerics.Plane.Dot*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)\n  commentId: M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)\n  id: DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: DotCoordinate(Plane, Vector3)\n  nameWithType: Plane.DotCoordinate(Plane, Vector3)\n  fullName: Plane.DotCoordinate(Plane, Vector3)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (<xref href=\"System.Numerics.Plane.D\"></xref>) value of the plane.\n  syntax:\n    content: public static float DotCoordinate (System.Numerics.Plane plane, System.Numerics.Vector3 value);\n    parameters:\n    - id: plane\n      type: System.Numerics.Plane\n      description: The plane.\n    - id: value\n      type: System.Numerics.Vector3\n      description: The 3-dimensional vector.\n    return:\n      type: System.Single\n      description: The dot product.\n  overload: System.Numerics.Plane.DotCoordinate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)\n  commentId: M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)\n  id: DotNormal(System.Numerics.Plane,System.Numerics.Vector3)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: DotNormal(Plane, Vector3)\n  nameWithType: Plane.DotNormal(Plane, Vector3)\n  fullName: Plane.DotNormal(Plane, Vector3)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the dot product of a specified three-dimensional vector and the <xref href=\"System.Numerics.Plane.Normal\"></xref> vector of this plane.\n  syntax:\n    content: public static float DotNormal (System.Numerics.Plane plane, System.Numerics.Vector3 value);\n    parameters:\n    - id: plane\n      type: System.Numerics.Plane\n      description: The plane.\n    - id: value\n      type: System.Numerics.Vector3\n      description: The three-dimensional vector.\n    return:\n      type: System.Single\n      description: The dot product.\n  overload: System.Numerics.Plane.DotNormal*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.Equals(System.Object)\n  commentId: M:System.Numerics.Plane.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Plane.Equals(Object)\n  fullName: Plane.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether this instance and a specified object are equal.\n  remarks: The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Plane> object and their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance and <code>obj</code> are equal; otherwise, `false```. If <code>obj</code> is `null`, the method returns `false`.'\n  overload: System.Numerics.Plane.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.Equals(System.Numerics.Plane)\n  commentId: M:System.Numerics.Plane.Equals(System.Numerics.Plane)\n  id: Equals(System.Numerics.Plane)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Equals(Plane)\n  nameWithType: Plane.Equals(Plane)\n  fullName: Plane.Equals(Plane)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether this instance and another plane object are equal.\n  remarks: Two <xref:System.Numerics.Plane> objects are equal if their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal.\n  syntax:\n    content: public bool Equals (System.Numerics.Plane other);\n    parameters:\n    - id: other\n      type: System.Numerics.Plane\n      description: The other plane.\n    return:\n      type: System.Boolean\n      description: '`true` if the two planes are equal; otherwise, `false`.'\n  overload: System.Numerics.Plane.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.GetHashCode\n  commentId: M:System.Numerics.Plane.GetHashCode\n  id: GetHashCode\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Plane.GetHashCode()\n  fullName: Plane.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code.\n  overload: System.Numerics.Plane.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.Normal\n  commentId: F:System.Numerics.Plane.Normal\n  id: Normal\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Normal\n  nameWithType: Plane.Normal\n  fullName: Plane.Normal\n  type: Field\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: The normal vector of the plane.\n  syntax:\n    content: public System.Numerics.Vector3 Normal;\n    return:\n      type: System.Numerics.Vector3\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.Normalize(System.Numerics.Plane)\n  commentId: M:System.Numerics.Plane.Normalize(System.Numerics.Plane)\n  id: Normalize(System.Numerics.Plane)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Normalize(Plane)\n  nameWithType: Plane.Normalize(Plane)\n  fullName: Plane.Normalize(Plane)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a new <xref href=\"System.Numerics.Plane\"></xref> object whose normal vector is the source plane's normal vector normalized.\n  syntax:\n    content: public static System.Numerics.Plane Normalize (System.Numerics.Plane value);\n    parameters:\n    - id: value\n      type: System.Numerics.Plane\n      description: The source plane.\n    return:\n      type: System.Numerics.Plane\n      description: The normalized plane.\n  overload: System.Numerics.Plane.Normalize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)\n  commentId: M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)\n  id: op_Equality(System.Numerics.Plane,System.Numerics.Plane)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: op_Equality(Plane, Plane)\n  nameWithType: Plane.op_Equality(Plane, Plane)\n  fullName: Plane.op_Equality(Plane, Plane)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether two planes are equal.\n  remarks: \"Two <xref:System.Numerics.Plane> objects are equal if their <xref:System.Numerics.Plane.Normal> and <xref:System.Numerics.Plane.D> fields are equal.  \\n  \\n The <xref:System.Numerics.Plane.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Plane> objects.\"\n  syntax:\n    content: public static bool op_Equality (System.Numerics.Plane value1, System.Numerics.Plane value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Plane\n      description: The first plane to compare.\n    - id: value2\n      type: System.Numerics.Plane\n      description: The second plane to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value1</code> and <code>value2</code> are equal; otherwise, `false`.'\n  overload: System.Numerics.Plane.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)\n  commentId: M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)\n  id: op_Inequality(System.Numerics.Plane,System.Numerics.Plane)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: op_Inequality(Plane, Plane)\n  nameWithType: Plane.op_Inequality(Plane, Plane)\n  fullName: Plane.op_Inequality(Plane, Plane)\n  type: Operator\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether two planes are not equal.\n  remarks: The <xref:System.Numerics.Plane.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.Plane> objects.\n  syntax:\n    content: public static bool op_Inequality (System.Numerics.Plane value1, System.Numerics.Plane value2);\n    parameters:\n    - id: value1\n      type: System.Numerics.Plane\n      description: The first plane to compare.\n    - id: value2\n      type: System.Numerics.Plane\n      description: The second plane to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value1</code> and <code>value2</code> are not equal; otherwise, `false`.'\n  overload: System.Numerics.Plane.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.ToString\n  commentId: M:System.Numerics.Plane.ToString\n  id: ToString\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Plane.ToString()\n  fullName: Plane.ToString()\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the string representation of this plane object.\n  remarks: The string representation of a <xref:System.Numerics.Plane> object use the formatting conventions of the current culture to format the numeric values in the returned string. For example, a <xref:System.Numerics.Plane> object whose string representation is formatted by using the conventions of the en-US culture might appear as `{Normal:<1.1, 2.2, 3.3> D:4.4}`.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents this <xref href=\"System.Numerics.Plane\"></xref> object.\n  overload: System.Numerics.Plane.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)\n  commentId: M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)\n  id: Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Transform(Plane, Matrix4x4)\n  nameWithType: Plane.Transform(Plane, Matrix4x4)\n  fullName: Plane.Transform(Plane, Matrix4x4)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Transforms a normalized plane by a 4x4 matrix.\n  remarks: '`plane` must already be normalized so that its <xref:System.Numerics.Plane.Normal> vector is of unit length before this method is called.'\n  syntax:\n    content: public static System.Numerics.Plane Transform (System.Numerics.Plane plane, System.Numerics.Matrix4x4 matrix);\n    parameters:\n    - id: plane\n      type: System.Numerics.Plane\n      description: The normalized plane to transform.\n    - id: matrix\n      type: System.Numerics.Matrix4x4\n      description: The transformation matrix to apply to <code>plane</code>.\n    return:\n      type: System.Numerics.Plane\n      description: The transformed plane.\n  overload: System.Numerics.Plane.Transform*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)\n  commentId: M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)\n  id: Transform(System.Numerics.Plane,System.Numerics.Quaternion)\n  parent: System.Numerics.Plane\n  langs:\n  - csharp\n  name: Transform(Plane, Quaternion)\n  nameWithType: Plane.Transform(Plane, Quaternion)\n  fullName: Plane.Transform(Plane, Quaternion)\n  type: Method\n  assemblies:\n  - System.Numerics.Vectors\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Transforms a normalized plane by a Quaternion rotation.\n  remarks: '`plane` must already be normalized so that its <xref:System.Numerics.Plane.Normal> vector is of unit length before this method is called.'\n  syntax:\n    content: public static System.Numerics.Plane Transform (System.Numerics.Plane plane, System.Numerics.Quaternion rotation);\n    parameters:\n    - id: plane\n      type: System.Numerics.Plane\n      description: The normalized plane to transform.\n    - id: rotation\n      type: System.Numerics.Quaternion\n      description: The Quaternion rotation to apply to the plane.\n    return:\n      type: System.Numerics.Plane\n      description: A new plane that results from applying the Quaternion rotation.\n  overload: System.Numerics.Plane.Transform*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector4)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Plane(Vector4)\n  nameWithType: Plane.Plane(Vector4)\n  fullName: Plane.Plane(Vector4)\n- uid: System.Numerics.Vector4\n  parent: System.Numerics\n  isExternal: false\n  name: Vector4\n  nameWithType: Vector4\n  fullName: System.Numerics.Vector4\n- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Plane(Vector3, Single)\n  nameWithType: Plane.Plane(Vector3, Single)\n  fullName: Plane.Plane(Vector3, Single)\n- uid: System.Numerics.Vector3\n  parent: System.Numerics\n  isExternal: false\n  name: Vector3\n  nameWithType: Vector3\n  fullName: System.Numerics.Vector3\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Plane(Single, Single, Single, Single)\n  nameWithType: Plane.Plane(Single, Single, Single, Single)\n  fullName: Plane.Plane(Single, Single, Single, Single)\n- uid: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: CreateFromVertices(Vector3, Vector3, Vector3)\n  nameWithType: Plane.CreateFromVertices(Vector3, Vector3, Vector3)\n  fullName: Plane.CreateFromVertices(Vector3, Vector3, Vector3)\n- uid: System.Numerics.Plane\n  parent: System.Numerics\n  isExternal: false\n  name: Plane\n  nameWithType: Plane\n  fullName: System.Numerics.Plane\n- uid: System.Numerics.Plane.D\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: D\n  nameWithType: Plane.D\n  fullName: Plane.D\n- uid: System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Dot(Plane, Vector4)\n  nameWithType: Plane.Dot(Plane, Vector4)\n  fullName: Plane.Dot(Plane, Vector4)\n- uid: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: DotCoordinate(Plane, Vector3)\n  nameWithType: Plane.DotCoordinate(Plane, Vector3)\n  fullName: Plane.DotCoordinate(Plane, Vector3)\n- uid: System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: DotNormal(Plane, Vector3)\n  nameWithType: Plane.DotNormal(Plane, Vector3)\n  fullName: Plane.DotNormal(Plane, Vector3)\n- uid: System.Numerics.Plane.Equals(System.Object)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Plane.Equals(Object)\n  fullName: Plane.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Numerics.Plane.Equals(System.Numerics.Plane)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Equals(Plane)\n  nameWithType: Plane.Equals(Plane)\n  fullName: Plane.Equals(Plane)\n- uid: System.Numerics.Plane.GetHashCode\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Plane.GetHashCode()\n  fullName: Plane.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Numerics.Plane.Normal\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Normal\n  nameWithType: Plane.Normal\n  fullName: Plane.Normal\n- uid: System.Numerics.Plane.Normalize(System.Numerics.Plane)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Normalize(Plane)\n  nameWithType: Plane.Normalize(Plane)\n  fullName: Plane.Normalize(Plane)\n- uid: System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: op_Equality(Plane, Plane)\n  nameWithType: Plane.op_Equality(Plane, Plane)\n  fullName: Plane.op_Equality(Plane, Plane)\n- uid: System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: op_Inequality(Plane, Plane)\n  nameWithType: Plane.op_Inequality(Plane, Plane)\n  fullName: Plane.op_Inequality(Plane, Plane)\n- uid: System.Numerics.Plane.ToString\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: ToString()\n  nameWithType: Plane.ToString()\n  fullName: Plane.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Transform(Plane, Matrix4x4)\n  nameWithType: Plane.Transform(Plane, Matrix4x4)\n  fullName: Plane.Transform(Plane, Matrix4x4)\n- uid: System.Numerics.Matrix4x4\n  parent: System.Numerics\n  isExternal: false\n  name: Matrix4x4\n  nameWithType: Matrix4x4\n  fullName: System.Numerics.Matrix4x4\n- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Transform(Plane, Quaternion)\n  nameWithType: Plane.Transform(Plane, Quaternion)\n  fullName: Plane.Transform(Plane, Quaternion)\n- uid: System.Numerics.Quaternion\n  parent: System.Numerics\n  isExternal: false\n  name: Quaternion\n  nameWithType: Quaternion\n  fullName: System.Numerics.Quaternion\n- uid: System.Numerics.Plane.#ctor*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Plane\n  nameWithType: Plane.Plane\n  fullName: Plane.Plane\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.CreateFromVertices*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: CreateFromVertices\n  nameWithType: Plane.CreateFromVertices\n  fullName: Plane.CreateFromVertices\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.Dot*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Dot\n  nameWithType: Plane.Dot\n  fullName: Plane.Dot\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.DotCoordinate*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: DotCoordinate\n  nameWithType: Plane.DotCoordinate\n  fullName: Plane.DotCoordinate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.DotNormal*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: DotNormal\n  nameWithType: Plane.DotNormal\n  fullName: Plane.DotNormal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.Equals*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Equals\n  nameWithType: Plane.Equals\n  fullName: Plane.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.GetHashCode*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Plane.GetHashCode\n  fullName: Plane.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.Normalize*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Normalize\n  nameWithType: Plane.Normalize\n  fullName: Plane.Normalize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.op_Equality*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: op_Equality\n  nameWithType: Plane.op_Equality\n  fullName: Plane.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.op_Inequality*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Plane.op_Inequality\n  fullName: Plane.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.ToString*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: ToString\n  nameWithType: Plane.ToString\n  fullName: Plane.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.Numerics.Plane.Transform*\n  parent: System.Numerics.Plane\n  isExternal: false\n  name: Transform\n  nameWithType: Plane.Transform\n  fullName: Plane.Transform\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Plane.xml\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Numerics.Plane}\n  parent: System\n  isExternal: false\n  name: IEquatable<Plane>\n  nameWithType: IEquatable<Plane>\n  fullName: System.IEquatable<System.Numerics.Plane>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Numerics.Plane\n    name: Plane\n    nameWithType: Plane\n    fullName: System.Numerics.Plane\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}