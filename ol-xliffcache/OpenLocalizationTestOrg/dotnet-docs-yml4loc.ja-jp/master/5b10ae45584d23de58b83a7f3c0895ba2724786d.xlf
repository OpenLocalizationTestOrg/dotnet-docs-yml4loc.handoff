<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b10ae45584d23de58b83a7f3c0895ba2724786d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Reflection.Context.CustomReflectionContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a14d88789717b315869ef0e389b2bcdc6917371c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a69d4f9ec9e4897fce84cf818e6683f0a7991ca</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a customizable reflection context.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many reflection methods in the .NET Framework provide a <ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph> parameter for this purpose.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To modify the attributes that are applied to a reflected parameter or member, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> methods should not access the list of attributes of a reflected object or method directly by calling the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method on the provided <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> instance, but should instead use the <ph id="ph5">`declaredAttributes`</ph> list, which is passed as a parameter to the <ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph> method overloads.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add properties to a reflected type, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method to create property objects to return.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph> method to obtain a particular reflection context's version of a reflected object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> object alters the attributes returned by a particular reflection object, such as those obtained by the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not alter the custom attribute data returned by the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph> method, and these two lists will not match when you use a custom reflection context.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Reflection.Context.CustomReflectionContext"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Reflection.Context.CustomReflectionContext"&gt;&lt;/xref&gt;</ph> class with the specified reflection context as a base.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The reflection context to use as a base.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to specify which properties should be added to a given type.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create the properties, use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The type to add properties to.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A collection of additional properties for the specified type.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;xref href="System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The type of the property to create.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name of the property to create.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An object that represents the property's <ph id="ph1">`get`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An object that represents the property's <ph id="ph1">`set`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object that represents the property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;xref href="System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)"&gt;&lt;/xref&gt;</ph> method and using the specified custom attributes.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The type of the property to create.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the property to create.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An object that represents the property's <ph id="ph1">`get`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An object that represents the property's <ph id="ph1">`set`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A collection of custom attributes to apply to the property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">`get`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">`set`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An object that represents the property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The member whose custom attributes will be returned.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A collection of the member's attributes in its current context.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A collection that represents the custom attributes of the specified member in this reflection context.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The parameter whose custom attributes will be returned.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A collection of the parameter's attributes in its current context.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A collection that represents the custom attributes of the specified parameter in this reflection context.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The external representation of the assembly to represent in this context.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The representation of the assembly in this reflection context.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The external representation of the type to represent in this context.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The representation of the type in this reflection context.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>