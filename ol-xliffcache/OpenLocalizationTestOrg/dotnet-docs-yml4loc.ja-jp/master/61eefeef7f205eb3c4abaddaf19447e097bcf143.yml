### YamlMime:ManagedReference
items:
- uid: System.Transactions
  id: System.Transactions
  children:
  - System.Transactions.CommittableTransaction
  - System.Transactions.DependentCloneOption
  - System.Transactions.DependentTransaction
  - System.Transactions.DistributedTransactionPermission
  - System.Transactions.DistributedTransactionPermissionAttribute
  - System.Transactions.Enlistment
  - System.Transactions.EnlistmentOptions
  - System.Transactions.EnterpriseServicesInteropOption
  - System.Transactions.HostCurrentTransactionCallback
  - System.Transactions.IDtcTransaction
  - System.Transactions.IEnlistmentNotification
  - System.Transactions.IPromotableSinglePhaseNotification
  - System.Transactions.ISimpleTransactionSuperior
  - System.Transactions.ISinglePhaseNotification
  - System.Transactions.IsolationLevel
  - System.Transactions.ITransactionPromoter
  - System.Transactions.PreparingEnlistment
  - System.Transactions.SinglePhaseEnlistment
  - System.Transactions.SubordinateTransaction
  - System.Transactions.Transaction
  - System.Transactions.TransactionAbortedException
  - System.Transactions.TransactionCompletedEventHandler
  - System.Transactions.TransactionEventArgs
  - System.Transactions.TransactionException
  - System.Transactions.TransactionInDoubtException
  - System.Transactions.TransactionInformation
  - System.Transactions.TransactionInterop
  - System.Transactions.TransactionManager
  - System.Transactions.TransactionManagerCommunicationException
  - System.Transactions.TransactionOptions
  - System.Transactions.TransactionPromotionException
  - System.Transactions.TransactionScope
  - System.Transactions.TransactionScopeAsyncFlowOption
  - System.Transactions.TransactionScopeOption
  - System.Transactions.TransactionStartedEventHandler
  - System.Transactions.TransactionStatus
  langs:
  - csharp
  name: System.Transactions
  nameWithType: System.Transactions
  fullName: System.Transactions
  type: Namespace
  summary: The <xref href="System.Transactions"></xref> namespace contains classes that allow you to write your own transactional application and resource manager. Specifically, you can create and participate in a transaction (local or distributed) with one or multiple participants.
  remarks: "> [!IMPORTANT]\n>  You can only create applications using this namespace under the Windows 2000, Windows XP and Windows 2003 platforms. Creating a transaction under the Windows 98 and Windows ME platforms throws a <xref:System.PlatformNotSupportedException> .  \n  \n The <xref:System.Transactions> infrastructure makes transactional programming simple and efficient throughout the platform by supporting transactions initiated in SQL Server, ADO.NET, MSMQ, and the Microsoft Distributed Transaction Coordinator (MSDTC). It provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure. It is highly recommended that you use the easier implicit model for development. To get started, please see the [Implementing An Implicit Transaction Using Transaction Scope](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) topic. For more information on writing a transactional application, see .  \n  \n <xref:System.Transactions> also provides types for you to implement a resource manager. The transaction manager native to the <xref:System.Transactions> infrastructure allows volatile resources or a single durable resource enlistment to commit or roll back efficiently. For more information on implementing a resource manager, see [Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e).  \n  \n The transaction manager also transparently escalates local transactions to distributed transactions by coordinating through a disk-based transaction manager like the DTC, when an additional durable resource manager enlists itself with a transaction. There are two key ways that the <xref:System.Transactions> infrastructure provides enhanced performance.  \n  \n-   Dynamic Escalation, which means that the <xref:System.Transactions> infrastructure only engages the MSDTC when it is actually required for a transaction. This area is covered in depth in the [Transaction Management Escalation](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7) topic.  \n  \n-   Promotable Enlistments, which allows a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction. Later, if needed, the <xref:System.Transactions> infrastructure can still escalate the management of the transaction to MSDTC. This further reduces the chance of using the MSDTC. This area is covered in depth in the [Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/en-us/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb) topic.  \n  \n <xref:System.Transactions> defines three levels of trust that restrict access on the types of resources it exposes. Specifically, the <xref:System.Transactions> assembly can be called by partially trusted code as it has been marked with the `AllowPartiallyTrustedCallers` attribute (APTCA). This attribute essentially removes the implicit <xref:System.Security.Permissions.SecurityAction.LinkDemand> for the `FullTrust` permission set that is otherwise automatically placed on each publicly accessible method in each type. However, some types and members still require stronger permissions.  \n  \n The following is a list of types and members that are not callable by partially trusted code because they are decorated with the following declarative security attribute:  \n  \n `PermissionSetAttribute(SecurityAction.LinkDemand, Name := \"FullTrust\")`  \n  \n System.Transactions.Transaction.EnlistDurable  \n  \n System.Transactions.Transaction.EnlistPromotableSinglePhase  \n  \n System.Transactions.TransactionInterop  \n  \n System.Transactions.TransactionManager.DistributedTransactionStarted  \n  \n System.Transactions.TransactionManager.HostCurrentTransactionCallback  \n  \n System.Transactions.TransactionManager.Reenlist  \n  \n System.Transactions.TransactionManager.RecoveryComplete  \n  \n System.Transactions.TransactionScope.TransactionScope (System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)  \n  \n M:System.Transactions.TransactionScope.TransactionScope(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)  \n  \n For more information on the various trust levels, see [Security Trust Levels in Accessing Resources](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51).  \n  \n Core Development Technologies\\Data Access\\Transaction Processing\\  \n  \n For more information on how to use the <xref:System.Transactions> namespace, you can consult the conceptual documentation [Transaction Processing](http://msdn.microsoft.com/en-us/ac1637bf-4032-493b-a4e8-0380e54f82f9), located under the \"Core Development Technologies\\Data Access\\Transaction Processing\\\\\" section in the documentation. Specifically, you can find more information in the following topics.  \n  \n [Features Provided By System.Transactions](http://msdn.microsoft.com/en-us/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)  \n  \n [Implementing A Resource Manager](http://msdn.microsoft.com/en-us/81509719-d579-4530-831e-42e1acdef63e)"
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Transactions.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
references:
- uid: System.Transactions.CommittableTransaction
  parent: System.Transactions
  isExternal: false
  name: CommittableTransaction
  nameWithType: CommittableTransaction
  fullName: System.Transactions.CommittableTransaction
- uid: System.Transactions.DependentCloneOption
  parent: System.Transactions
  isExternal: false
  name: DependentCloneOption
  nameWithType: DependentCloneOption
  fullName: System.Transactions.DependentCloneOption
- uid: System.Transactions.DependentTransaction
  parent: System.Transactions
  isExternal: false
  name: DependentTransaction
  nameWithType: DependentTransaction
  fullName: System.Transactions.DependentTransaction
- uid: System.Transactions.DistributedTransactionPermission
  parent: System.Transactions
  isExternal: false
  name: DistributedTransactionPermission
  nameWithType: DistributedTransactionPermission
  fullName: System.Transactions.DistributedTransactionPermission
- uid: System.Transactions.DistributedTransactionPermissionAttribute
  parent: System.Transactions
  isExternal: false
  name: DistributedTransactionPermissionAttribute
  nameWithType: DistributedTransactionPermissionAttribute
  fullName: System.Transactions.DistributedTransactionPermissionAttribute
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Transactions.EnlistmentOptions
  parent: System.Transactions
  isExternal: false
  name: EnlistmentOptions
  nameWithType: EnlistmentOptions
  fullName: System.Transactions.EnlistmentOptions
- uid: System.Transactions.EnterpriseServicesInteropOption
  parent: System.Transactions
  isExternal: false
  name: EnterpriseServicesInteropOption
  nameWithType: EnterpriseServicesInteropOption
  fullName: System.Transactions.EnterpriseServicesInteropOption
- uid: System.Transactions.HostCurrentTransactionCallback
  parent: System.Transactions
  isExternal: false
  name: HostCurrentTransactionCallback
  nameWithType: HostCurrentTransactionCallback
  fullName: System.Transactions.HostCurrentTransactionCallback
- uid: System.Transactions.IDtcTransaction
  parent: System.Transactions
  isExternal: false
  name: IDtcTransaction
  nameWithType: IDtcTransaction
  fullName: System.Transactions.IDtcTransaction
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.IPromotableSinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: IPromotableSinglePhaseNotification
  nameWithType: IPromotableSinglePhaseNotification
  fullName: System.Transactions.IPromotableSinglePhaseNotification
- uid: System.Transactions.ISimpleTransactionSuperior
  parent: System.Transactions
  isExternal: false
  name: ISimpleTransactionSuperior
  nameWithType: ISimpleTransactionSuperior
  fullName: System.Transactions.ISimpleTransactionSuperior
- uid: System.Transactions.ISinglePhaseNotification
  parent: System.Transactions
  isExternal: false
  name: ISinglePhaseNotification
  nameWithType: ISinglePhaseNotification
  fullName: System.Transactions.ISinglePhaseNotification
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.Transactions.ITransactionPromoter
  parent: System.Transactions
  isExternal: false
  name: ITransactionPromoter
  nameWithType: ITransactionPromoter
  fullName: System.Transactions.ITransactionPromoter
- uid: System.Transactions.PreparingEnlistment
  parent: System.Transactions
  isExternal: false
  name: PreparingEnlistment
  nameWithType: PreparingEnlistment
  fullName: System.Transactions.PreparingEnlistment
- uid: System.Transactions.SinglePhaseEnlistment
  parent: System.Transactions
  isExternal: false
  name: SinglePhaseEnlistment
  nameWithType: SinglePhaseEnlistment
  fullName: System.Transactions.SinglePhaseEnlistment
- uid: System.Transactions.SubordinateTransaction
  parent: System.Transactions
  isExternal: false
  name: SubordinateTransaction
  nameWithType: SubordinateTransaction
  fullName: System.Transactions.SubordinateTransaction
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionAbortedException
  parent: System.Transactions
  isExternal: false
  name: TransactionAbortedException
  nameWithType: TransactionAbortedException
  fullName: System.Transactions.TransactionAbortedException
- uid: System.Transactions.TransactionCompletedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionCompletedEventHandler
  nameWithType: TransactionCompletedEventHandler
  fullName: System.Transactions.TransactionCompletedEventHandler
- uid: System.Transactions.TransactionEventArgs
  parent: System.Transactions
  isExternal: false
  name: TransactionEventArgs
  nameWithType: TransactionEventArgs
  fullName: System.Transactions.TransactionEventArgs
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.Transactions.TransactionInDoubtException
  parent: System.Transactions
  isExternal: false
  name: TransactionInDoubtException
  nameWithType: TransactionInDoubtException
  fullName: System.Transactions.TransactionInDoubtException
- uid: System.Transactions.TransactionInformation
  parent: System.Transactions
  isExternal: false
  name: TransactionInformation
  nameWithType: TransactionInformation
  fullName: System.Transactions.TransactionInformation
- uid: System.Transactions.TransactionInterop
  parent: System.Transactions
  isExternal: false
  name: TransactionInterop
  nameWithType: TransactionInterop
  fullName: System.Transactions.TransactionInterop
- uid: System.Transactions.TransactionManager
  parent: System.Transactions
  isExternal: false
  name: TransactionManager
  nameWithType: TransactionManager
  fullName: System.Transactions.TransactionManager
- uid: System.Transactions.TransactionManagerCommunicationException
  parent: System.Transactions
  isExternal: false
  name: TransactionManagerCommunicationException
  nameWithType: TransactionManagerCommunicationException
  fullName: System.Transactions.TransactionManagerCommunicationException
- uid: System.Transactions.TransactionOptions
  parent: System.Transactions
  isExternal: false
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: System.Transactions.TransactionOptions
- uid: System.Transactions.TransactionPromotionException
  parent: System.Transactions
  isExternal: false
  name: TransactionPromotionException
  nameWithType: TransactionPromotionException
  fullName: System.Transactions.TransactionPromotionException
- uid: System.Transactions.TransactionScope
  parent: System.Transactions
  isExternal: false
  name: TransactionScope
  nameWithType: TransactionScope
  fullName: System.Transactions.TransactionScope
- uid: System.Transactions.TransactionScopeAsyncFlowOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeAsyncFlowOption
  nameWithType: TransactionScopeAsyncFlowOption
  fullName: System.Transactions.TransactionScopeAsyncFlowOption
- uid: System.Transactions.TransactionScopeOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeOption
  nameWithType: TransactionScopeOption
  fullName: System.Transactions.TransactionScopeOption
- uid: System.Transactions.TransactionStartedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionStartedEventHandler
  nameWithType: TransactionStartedEventHandler
  fullName: System.Transactions.TransactionStartedEventHandler
- uid: System.Transactions.TransactionStatus
  parent: System.Transactions
  isExternal: false
  name: TransactionStatus
  nameWithType: TransactionStatus
  fullName: System.Transactions.TransactionStatus
