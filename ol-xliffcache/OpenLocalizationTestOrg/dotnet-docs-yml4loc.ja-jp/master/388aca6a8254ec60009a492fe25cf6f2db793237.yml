### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  commentId: T:System.IdentityModel.Tokens.SessionSecurityTokenHandler
  id: SessionSecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SessionSecurityTokenHandler
  nameWithType: SessionSecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  type: Class
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: A <xref href="System.IdentityModel.Tokens.SecurityTokenHandler"></xref> that processes security tokens of type <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  remarks: "The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens. Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>. The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format. By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements. Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.  \n  \n In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user. The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests). The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response. This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token. For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).  \n  \n> [!NOTE]\n>  The \\<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the applicationâ€™s sessions. Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise. For example, specifying a derived  HYPERLINK \"http://msdn.microsoft.com/en-us/library/hh193426%28v=vs.110%29.aspx\" \\t \"_blank\" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected. This could allow an attacker to modify the identity and therefore change access privileges.  \n  \n If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>. In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> properties of the token. If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well. For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method.  \n  \n The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method. All transforms derive from the <xref:System.IdentityModel.CookieTransform> class. In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied. The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material. DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms. For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer. You can use many strategies to circumvent this issue. For example, you can:  \n  \n-   Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>. The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.  \n  \n-   Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=fullName> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>. You can create the new instance by invoking one of the constructors that takes a list of transforms.  \n  \n-   Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.  \n  \n-   Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.  \n  \n For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).  \n  \n The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) element under the [\\&lt;securityTokenHandlers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element to remove the default handler from the collection and then adding your custom token handler using the [\\&lt;add\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element. By default, you can specify the default token lifetime by including the [\\&lt;sessionTokenRequirement\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element under the `<add>` element. You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them."
  example:
  - "The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.  \n  \n```xml  \n<securityTokenHandlers>  \n  <remove type=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />  \n  <add type=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />  \n</securityTokenHandlers>  \n```"
  syntax:
    content: 'public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  derivedClasses:
  - System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: SessionSecurityTokenHandler()
  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler()
  fullName: SessionSecurityTokenHandler.SessionSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Initializes a new instance of the <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler"></xref> class that uses the default cookie transforms and token lifetime.
  remarks: The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.
  syntax:
    content: public SessionSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})
  id: '#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})'
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)
  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)
  fullName: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Initializes a new instance of the <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler"></xref> class that uses the specified cookie transforms.
  remarks: The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.
  syntax:
    content: public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform> transforms);
    parameters:
    - id: transforms
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}
      description: The transforms to apply when encoding or decoding the cookie. Sets the <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms"></xref> property.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>transforms</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)
  id: '#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)'
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>, TimeSpan)
  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>, TimeSpan)
  fullName: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>, TimeSpan)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Initializes a new instance of the <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler"></xref> class that uses the specified cookie transforms and token lifetime.
  syntax:
    content: public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform> transforms, TimeSpan tokenLifetime);
    parameters:
    - id: transforms
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}
      description: The transforms to apply when encoding or decoding the cookie. Sets the <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms"></xref> property.
    - id: tokenLifetime
      type: System.TimeSpan
      description: The default lifetime for a token. Sets the <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime"></xref> property.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>transforms</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>tokenLifetime</code> is less than or equal to <xref href="System.TimeSpan.Zero"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)
  id: ApplyTransforms(System.Byte[],System.Boolean)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: ApplyTransforms(Byte[], Boolean)
  nameWithType: SessionSecurityTokenHandler.ApplyTransforms(Byte[], Boolean)
  fullName: SessionSecurityTokenHandler.ApplyTransforms(Byte[], Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Applies the transforms specified by the <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms"></xref> property to either encode or decode the specified cookie.
  remarks: "When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property. When decoding a cookie, they are applied in the reverse order.  \n  \n Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and ?qualifyHint=False&autoUpgrade=True methods to encode and decode the cookie material."
  syntax:
    content: protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);
    parameters:
    - id: cookie
      type: System.Byte[]
      description: The cookie that will be transformed.
    - id: outbound
      type: System.Boolean
      description: '`true` if the cookie should be encoded; `false` if the cookie should be decoded.'
    return:
      type: System.Byte[]
      description: The encoded or decoded cookie.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms"></xref> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: SessionSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: SessionSecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Returns a value that indicates whether the reader is positioned at a `<wsc:SecurityContextToken>` element.
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader"></xref> over the incoming <xref href="System.IdentityModel.Tokens.SecurityToken"></xref>. The reader should be positioned at a `<wsc:SecurityContextToken>` element.
    return:
      type: System.Boolean
      description: '`true` if the reader points to a `<wsc:SecurityContextToken>` element; otherwise, `false`.'
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>reader</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken
  commentId: P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: SessionSecurityTokenHandler.CanValidateToken
  fullName: SessionSecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a value that indicates whether this handler supports validation of tokens of type <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: '`true` if the handler supports validation of tokens of type <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>; otherwise, `false`. Always `true`.'
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken
  commentId: P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: SessionSecurityTokenHandler.CanWriteToken
  fullName: SessionSecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a value that indicates whether this handler can write tokens of type <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: '`true` if the handler can write tokens of type <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>; otherwise, `false`. Always `true`.'
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName
  commentId: P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName
  id: CookieElementName
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: CookieElementName
  nameWithType: SessionSecurityTokenHandler.CookieElementName
  fullName: SessionSecurityTokenHandler.CookieElementName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the name for the cookie element.
  remarks: This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.
  syntax:
    content: public virtual string CookieElementName { get; }
    return:
      type: System.String
      description: The name for the cookie element. The default element name is "Cookie".
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace
  commentId: P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace
  id: CookieNamespace
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: CookieNamespace
  nameWithType: SessionSecurityTokenHandler.CookieNamespace
  fullName: SessionSecurityTokenHandler.CookieNamespace
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the namespace for the cookie element.
  remarks: This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.
  syntax:
    content: public virtual string CookieNamespace { get; }
    return:
      type: System.String
      description: The namespace for the cookie element. The default namespace is "http://schemas.microsoft.com/ws/2006/05/security".
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)
  id: CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)
  nameWithType: SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)
  fullName: SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Creates a <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> based on the specified claims principal and time range during which the token is valid.
  syntax:
    content: public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: The claims principal.
    - id: context
      type: System.String
      description: A caller-defined context string.
    - id: endpointId
      type: System.String
      description: The identifier of the endpoint to which the token is scoped.
    - id: validFrom
      type: System.DateTime
      description: The time instant at which the token becomes valid.
    - id: validTo
      type: System.DateTime
      description: The time instant after which the token is no longer valid.
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: The session security token that was created. The properties on the new session token are set according to the specified parameters.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>principal</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.IdentityModel.Tokens.SecurityTokenHandler.Configuration"></xref> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Creates a security token based on the specified token descriptor.
  remarks: 'Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=fullName>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=fullName>. If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=fullName> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=fullName> property and is saved in the session token.'
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: The token descriptor from which to create the token.
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: The security token that was created. This will be an instance of <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>tokenDescriptor</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.IdentityModel.Tokens.SecurityTokenHandler.Configuration"></xref> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms
  commentId: F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms
  id: DefaultCookieTransforms
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: DefaultCookieTransforms
  nameWithType: SessionSecurityTokenHandler.DefaultCookieTransforms
  fullName: SessionSecurityTokenHandler.DefaultCookieTransforms
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: A read only collection that contains the list of default transforms to be applied to cookies, the <xref href="System.IdentityModel.DeflateCookieTransform"></xref> and the <xref href="System.IdentityModel.ProtectedDataCookieTransform"></xref>.
  syntax:
    content: public static readonly System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform> DefaultCookieTransforms;
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime
  commentId: F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime
  id: DefaultLifetime
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: DefaultLifetime
  nameWithType: SessionSecurityTokenHandler.DefaultLifetime
  fullName: SessionSecurityTokenHandler.DefaultLifetime
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: A constant that specifies the default lifetime for cookies, ten hours.
  syntax:
    content: public static readonly TimeSpan DefaultLifetime;
    return:
      type: System.TimeSpan
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime
  commentId: P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime
  id: DefaultTokenLifetime
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: DefaultTokenLifetime
  nameWithType: SessionSecurityTokenHandler.DefaultTokenLifetime
  fullName: SessionSecurityTokenHandler.DefaultTokenLifetime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the default token lifetime.
  syntax:
    content: public static TimeSpan DefaultTokenLifetime { get; }
    return:
      type: System.TimeSpan
      description: The default token lifetime. Always <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime"></xref>.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: SessionSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: SessionSecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the token type URIs for the token types that can be processed by this handler.
  remarks: 'The following type URIs are supported: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", and "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".'
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: The token type identifier URIs for token types that can be processed by this handler.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Loads custom configuration from XML.
  remarks: Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance. Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [\&lt;sessionTokenRequirement\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element in the configuration file.
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: The custom configuration elements.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>customConfigElements</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The configuration specified by <code>customConfigElements</code> is not valid. For example, it does not contain a `<sessionTokenRequirement>` element, it contains more than one `<sessionTokenRequirement>` element, a valid <xref href="System.TimeSpan"></xref> value cannot be read from the `lifetime` attribute, or the `lifetime` attribute specifies a value that is less than <xref href="System.TimeSpan.Zero"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader)
  fullName: SessionSecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Reads the <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> using the specified XML reader.
  remarks: "The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.  \n  \n The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName> method using a default token resolver."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader"></xref> over the incoming <xref href="System.IdentityModel.Tokens.SecurityToken"></xref>.
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: The session security token that was read, an instance of <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>reader</code> is `null`.
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: The reader is not positioned at a <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> or the <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> cannot be read.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(Byte[], SecurityTokenResolver)
  nameWithType: SessionSecurityTokenHandler.ReadToken(Byte[], SecurityTokenResolver)
  fullName: SessionSecurityTokenHandler.ReadToken(Byte[], SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Reads the <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> from a stream of bytes by using the specified token resolver.
  remarks: The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=fullName> method.
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);
    parameters:
    - id: token
      type: System.Byte[]
      description: The stream of bytes that contains the token.
    - id: tokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: The token resolver to use.
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: The <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> that was read.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader, SecurityTokenResolver)
  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)
  fullName: SessionSecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Reads the <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> using the specified XML reader and token resolver.
  remarks: "The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.  \n  \n If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class. Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.  \n  \n For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader"></xref> over the incoming <xref href="System.IdentityModel.Tokens.SecurityToken"></xref>.
    - id: tokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: A <xref href="System.IdentityModel.Selectors.SecurityTokenResolver"></xref> that can used to resolve the <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: The session security token that was read, an instance of <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is `null`.  \n  \n -or-  \n  \n <code>tokenResolver</code> is `null`."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: The reader is not positioned at a <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> or the <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref> cannot be read.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})
  id: SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: SetTransforms(IEnumerable<CookieTransform>)
  nameWithType: SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)
  fullName: SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Sets the transforms that will be applied to cookies.
  remarks: "Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property. Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.  \n  \n> [!WARNING]\n>  If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie."
  syntax:
    content: protected void SetTransforms (System.Collections.Generic.IEnumerable<System.IdentityModel.CookieTransform> transforms);
    parameters:
    - id: transforms
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform}
      description: The transforms to use.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime
  commentId: P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime
  id: TokenLifetime
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: TokenLifetime
  nameWithType: SessionSecurityTokenHandler.TokenLifetime
  fullName: SessionSecurityTokenHandler.TokenLifetime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets or sets the token lifetime.
  remarks: By default, if the [\&lt;sessionTokenRequirement\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.
  syntax:
    content: public virtual TimeSpan TokenLifetime { get; set; }
    return:
      type: System.TimeSpan
      description: The token lifetime. The default is <xref href="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime"></xref>.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An attempt to set a time span that is less than or equal to zero occurs.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType
  commentId: P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: SessionSecurityTokenHandler.TokenType
  fullName: SessionSecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the type of the tokens that this handler processes.
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: The <xref href="System.Type"></xref> of <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms
  commentId: P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms
  id: Transforms
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: Transforms
  nameWithType: SessionSecurityTokenHandler.Transforms
  fullName: SessionSecurityTokenHandler.Transforms
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the transforms that will be applied to the cookie.
  remarks: The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform> Transforms { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}
      description: The list of transforms that will be applied to the cookie.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)
  id: ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: ValidateSession(SessionSecurityToken)
  nameWithType: SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)
  fullName: SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Determines whether the session associated with the specified token is still valid. Validity is determined by checking the <xref href="System.IdentityModel.Tokens.SecurityToken.ValidFrom"></xref> and <xref href="System.IdentityModel.Tokens.SecurityToken.ValidTo"></xref> properties of the specified token. An exception is thrown if the session is no longer valid.
  remarks: "The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.  \n  \n Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session."
  syntax:
    content: protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);
    parameters:
    - id: securityToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: The token to be checked.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>securityToken</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.IdentityModel.Tokens.SecurityTokenHandler.Configuration"></xref> property is `null`.
  - type: System.IdentityModel.Tokens.SecurityTokenNotYetValidException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException
    description: The <xref href="System.IdentityModel.Tokens.SecurityToken.ValidFrom"></xref> property of the token is later than <xref href="System.DateTime.UtcNow"></xref>.
  - type: System.IdentityModel.Tokens.SecurityTokenExpiredException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenExpiredException
    description: The <xref href="System.IdentityModel.Tokens.SecurityToken.ValidTo"></xref> property of the token is earlier than <xref href="System.DateTime.UtcNow"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SessionSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: SessionSecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Validates the specified token and returns its claims.
  remarks: Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: The token to be validated. Must be assignable from <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: The identities that are contained in the token.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: >-
      <code>token</code>
          `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>token</code> is not assignable from <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)
  id: ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SessionSecurityToken, String)
  nameWithType: SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken, String)
  fullName: SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken, String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Validates the specified session token and returns its claims.
  remarks: "Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.  \n  \n> [!IMPORTANT]\n>  Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped. This presents a potential security risk. For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens."
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: The token to be validated. Must be assignable from <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
    - id: endpointId
      type: System.String
      description: The identifier of the endpoint to which the token is scoped.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: The identities that are contained in the token.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code> is `null`.  \n  \n -or-  \n  \n <code>endpointId</code> is `null`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>token</code> is not assignable from <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: The <xref href="System.IdentityModel.Tokens.SessionSecurityToken.EndpointId"></xref> property of the specified token is not `null` or empty and its value is different than that specified by the <code>endpointId</code> parameter.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)
  id: WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(SessionSecurityToken)
  nameWithType: SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)
  fullName: SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Serializes the specified token into a byte array.
  remarks: Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. See that overload for more details.
  syntax:
    content: public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: The token to write.
    return:
      type: System.Byte[]
      description: An encoded byte array.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>sessiontoken</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter, SecurityToken)
  nameWithType: SessionSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)
  fullName: SessionSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Serializes the specified token by using the specified XML writer.
  remarks: The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=fullName> property. The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=fullName> property is serialized as the `Id` attribute. The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> property is serialized as the `<Identifier>` child element. If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> property is serialized as an `<Instance>` element. Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded. The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties. If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> property is `true`, the token is not serialized.
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The XML writer with which to serialize the token.
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: The token to serialize. An instance of <xref href="System.IdentityModel.Tokens.SessionSecurityToken"></xref>.
  overload: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code> is `null`.  \n  \n -or-  \n  \n <code>token</code> is `null`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken\"></xref>.  \n  \n -or-  \n  \n The <xref href=\"System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion\"></xref> of the token specifies a version of WS-Secure Conversation that is not supported by the handler."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandler
  nameWithType: SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.IdentityModel.Tokens.SecurityTokenNotYetValidException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenNotYetValidException
  nameWithType: SecurityTokenNotYetValidException
  fullName: System.IdentityModel.Tokens.SecurityTokenNotYetValidException
- uid: System.IdentityModel.Tokens.SecurityTokenExpiredException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenExpiredException
  nameWithType: SecurityTokenExpiredException
  fullName: System.IdentityModel.Tokens.SecurityTokenExpiredException
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: SessionSecurityTokenHandler()
  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler()
  fullName: SessionSecurityTokenHandler.SessionSecurityTokenHandler()
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)
  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)
  fullName: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>)
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.IdentityModel.CookieTransform
  name: CookieTransform
  nameWithType: CookieTransform
  fullName: System.IdentityModel.CookieTransform
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<CookieTransform>
  nameWithType: ReadOnlyCollection<CookieTransform>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.CookieTransform>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.CookieTransform
    name: CookieTransform
    nameWithType: CookieTransform
    fullName: System.IdentityModel.CookieTransform
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>, TimeSpan)
  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>, TimeSpan)
  fullName: SessionSecurityTokenHandler.SessionSecurityTokenHandler(ReadOnlyCollection<CookieTransform>, TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ApplyTransforms(Byte[], Boolean)
  nameWithType: SessionSecurityTokenHandler.ApplyTransforms(Byte[], Boolean)
  fullName: SessionSecurityTokenHandler.ApplyTransforms(Byte[], Boolean)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: SessionSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: SessionSecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: SessionSecurityTokenHandler.CanValidateToken
  fullName: SessionSecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: SessionSecurityTokenHandler.CanWriteToken
  fullName: SessionSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CookieElementName
  nameWithType: SessionSecurityTokenHandler.CookieElementName
  fullName: SessionSecurityTokenHandler.CookieElementName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CookieNamespace
  nameWithType: SessionSecurityTokenHandler.CookieNamespace
  fullName: SessionSecurityTokenHandler.CookieNamespace
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)
  nameWithType: SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)
  fullName: SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)
- uid: System.IdentityModel.Tokens.SessionSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken
  fullName: System.IdentityModel.Tokens.SessionSecurityToken
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: DefaultCookieTransforms
  nameWithType: SessionSecurityTokenHandler.DefaultCookieTransforms
  fullName: SessionSecurityTokenHandler.DefaultCookieTransforms
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: DefaultLifetime
  nameWithType: SessionSecurityTokenHandler.DefaultLifetime
  fullName: SessionSecurityTokenHandler.DefaultLifetime
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: DefaultTokenLifetime
  nameWithType: SessionSecurityTokenHandler.DefaultTokenLifetime
  fullName: SessionSecurityTokenHandler.DefaultTokenLifetime
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: SessionSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: SessionSecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader)
  fullName: SessionSecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ReadToken(Byte[], SecurityTokenResolver)
  nameWithType: SessionSecurityTokenHandler.ReadToken(Byte[], SecurityTokenResolver)
  fullName: SessionSecurityTokenHandler.ReadToken(Byte[], SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader, SecurityTokenResolver)
  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)
  fullName: SessionSecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: SetTransforms(IEnumerable<CookieTransform>)
  nameWithType: SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)
  fullName: SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<CookieTransform>
  nameWithType: IEnumerable<CookieTransform>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.CookieTransform>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.CookieTransform
    name: CookieTransform
    nameWithType: CookieTransform
    fullName: System.IdentityModel.CookieTransform
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: TokenLifetime
  nameWithType: SessionSecurityTokenHandler.TokenLifetime
  fullName: SessionSecurityTokenHandler.TokenLifetime
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: SessionSecurityTokenHandler.TokenType
  fullName: SessionSecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: Transforms
  nameWithType: SessionSecurityTokenHandler.Transforms
  fullName: SessionSecurityTokenHandler.Transforms
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ValidateSession(SessionSecurityToken)
  nameWithType: SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)
  fullName: SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SessionSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: SessionSecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Security.Claims.ClaimsIdentity
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ValidateToken(SessionSecurityToken, String)
  nameWithType: SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken, String)
  fullName: SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken, String)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: WriteToken(SessionSecurityToken)
  nameWithType: SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)
  fullName: SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter, SecurityToken)
  nameWithType: SessionSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)
  fullName: SessionSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: SessionSecurityTokenHandler.ReadToken
  fullName: SessionSecurityTokenHandler.ReadToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: SessionSecurityTokenHandler.WriteToken
  fullName: SessionSecurityTokenHandler.WriteToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: SessionSecurityTokenHandler
  nameWithType: SessionSecurityTokenHandler.SessionSecurityTokenHandler
  fullName: SessionSecurityTokenHandler.SessionSecurityTokenHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ApplyTransforms
  nameWithType: SessionSecurityTokenHandler.ApplyTransforms
  fullName: SessionSecurityTokenHandler.ApplyTransforms
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: SessionSecurityTokenHandler.CanReadToken
  fullName: SessionSecurityTokenHandler.CanReadToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: SessionSecurityTokenHandler.CanValidateToken
  fullName: SessionSecurityTokenHandler.CanValidateToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: SessionSecurityTokenHandler.CanWriteToken
  fullName: SessionSecurityTokenHandler.CanWriteToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CookieElementName
  nameWithType: SessionSecurityTokenHandler.CookieElementName
  fullName: SessionSecurityTokenHandler.CookieElementName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CookieNamespace
  nameWithType: SessionSecurityTokenHandler.CookieNamespace
  fullName: SessionSecurityTokenHandler.CookieNamespace
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CreateSessionSecurityToken
  nameWithType: SessionSecurityTokenHandler.CreateSessionSecurityToken
  fullName: SessionSecurityTokenHandler.CreateSessionSecurityToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: CreateToken
  nameWithType: SessionSecurityTokenHandler.CreateToken
  fullName: SessionSecurityTokenHandler.CreateToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: DefaultTokenLifetime
  nameWithType: SessionSecurityTokenHandler.DefaultTokenLifetime
  fullName: SessionSecurityTokenHandler.DefaultTokenLifetime
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: SessionSecurityTokenHandler.GetTokenTypeIdentifiers
  fullName: SessionSecurityTokenHandler.GetTokenTypeIdentifiers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: SessionSecurityTokenHandler.LoadCustomConfiguration
  fullName: SessionSecurityTokenHandler.LoadCustomConfiguration
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: SetTransforms
  nameWithType: SessionSecurityTokenHandler.SetTransforms
  fullName: SessionSecurityTokenHandler.SetTransforms
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: TokenLifetime
  nameWithType: SessionSecurityTokenHandler.TokenLifetime
  fullName: SessionSecurityTokenHandler.TokenLifetime
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: SessionSecurityTokenHandler.TokenType
  fullName: SessionSecurityTokenHandler.TokenType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: Transforms
  nameWithType: SessionSecurityTokenHandler.Transforms
  fullName: SessionSecurityTokenHandler.Transforms
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ValidateSession
  nameWithType: SessionSecurityTokenHandler.ValidateSession
  fullName: SessionSecurityTokenHandler.ValidateSession
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: SessionSecurityTokenHandler.ValidateToken
  fullName: SessionSecurityTokenHandler.ValidateToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenHandler.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: CanReadToken(String)
  nameWithType: SecurityTokenHandler.CanReadToken(String)
  fullName: SecurityTokenHandler.CanReadToken(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: Configuration
  nameWithType: SecurityTokenHandler.Configuration
  fullName: SecurityTokenHandler.Configuration
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: ContainingCollection
  nameWithType: SecurityTokenHandler.ContainingCollection
  fullName: SecurityTokenHandler.ContainingCollection
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference(SecurityToken, Boolean)
  nameWithType: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)
  fullName: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: SecurityTokenHandler.DetectReplayedToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: ReadToken(String)
  nameWithType: SecurityTokenHandler.ReadToken(String)
  fullName: SecurityTokenHandler.ReadToken(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: TraceTokenValidationFailure(SecurityToken, String)
  nameWithType: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)
  fullName: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: TraceTokenValidationSuccess(SecurityToken)
  nameWithType: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)
  fullName: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)
  fullName: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: WriteToken(SecurityToken)
  nameWithType: SecurityTokenHandler.WriteToken(SecurityToken)
  fullName: SecurityTokenHandler.WriteToken(SecurityToken)
