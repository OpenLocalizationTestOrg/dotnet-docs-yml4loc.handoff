{"nodes":[{"content":"Represents one case of a <xref href=\"System.Linq.Expressions.SwitchExpression\"></xref>.","nodes":[{"pos":[0,87],"content":"Represents one case of a <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.SwitchExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Represents one case of a <xref href=\"System.Linq.Expressions.SwitchExpression\"></xref>."}],"pos":[705,793],"yaml":true},{"content":"Gets the body of this case.","nodes":[{"pos":[0,27],"content":"Gets the body of this case.","nodes":[{"content":"Gets the body of this case.","pos":[0,27]}]}],"pos":[3179,3207],"yaml":true},{"content":"The <xref href=\"System.Linq.Expressions.Expression\"></xref> object that represents the body of the case block.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.Expression\"&gt;&lt;/xref&gt;</ph> object that represents the body of the case block.","source":"The <xref href=\"System.Linq.Expressions.Expression\"></xref> object that represents the body of the case block."}],"pos":[3364,3475],"yaml":true},{"content":"Gets the values of this case. This case is selected for execution when the <xref href=\"System.Linq.Expressions.SwitchExpression.SwitchValue\"></xref> matches any of these values.","nodes":[{"pos":[0,177],"content":"Gets the values of this case. This case is selected for execution when the <xref href=\"System.Linq.Expressions.SwitchExpression.SwitchValue\"></xref> matches any of these values.","nodes":[{"content":"Gets the values of this case.","pos":[0,29]},{"content":"This case is selected for execution when the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.SwitchExpression.SwitchValue\"&gt;&lt;/xref&gt;</ph> matches any of these values.","pos":[30,177],"source":" This case is selected for execution when the <xref href=\"System.Linq.Expressions.SwitchExpression.SwitchValue\"></xref> matches any of these values."}]}],"pos":[5007,5185],"yaml":true},{"content":"The read-only collection of the values for this case block.","nodes":[{"pos":[0,59],"content":"The read-only collection of the values for this case block.","nodes":[{"content":"The read-only collection of the values for this case block.","pos":[0,59]}]}],"pos":[5450,5510],"yaml":true},{"content":"Returns a <xref href=\"System.String\"></xref> that represents the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,108],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the current <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.String\"></xref> that represents the current <xref href=\"System.Object\"></xref>."}],"pos":[7040,7149],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that represents the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the current <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.String\"></xref> that represents the current <xref href=\"System.Object\"></xref>."}],"pos":[7284,7385],"yaml":true},{"content":"Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.","nodes":[{"pos":[0,149],"content":"Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.","nodes":[{"content":"Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.","pos":[0,149],"nodes":[{"content":"Creates a new expression that is like this one, but using the supplied children.","pos":[0,80]},{"content":"If all of the children are the same, it will return this expression.","pos":[81,149]}]}]}],"pos":[9317,9467],"yaml":true},{"content":"The <xref href=\"System.Linq.Expressions.SwitchCase.TestValues\"></xref> property of the result.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.SwitchCase.TestValues\"&gt;&lt;/xref&gt;</ph> property of the result.","source":"The <xref href=\"System.Linq.Expressions.SwitchCase.TestValues\"></xref> property of the result."}],"pos":[9812,9907],"yaml":true},{"content":"The <xref href=\"System.Linq.Expressions.SwitchCase.Body\"></xref> property of the result.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.SwitchCase.Body\"&gt;&lt;/xref&gt;</ph> property of the result.","source":"The <xref href=\"System.Linq.Expressions.SwitchCase.Body\"></xref> property of the result."}],"pos":[9988,10077],"yaml":true},{"content":"This expression if no children are changed or an expression with the updated children.","nodes":[{"pos":[0,86],"content":"This expression if no children are changed or an expression with the updated children.","nodes":[{"content":"This expression if no children are changed or an expression with the updated children.","pos":[0,86]}]}],"pos":[10155,10242],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.SwitchCase\n  commentId: T:System.Linq.Expressions.SwitchCase\n  id: SwitchCase\n  children:\n  - System.Linq.Expressions.SwitchCase.Body\n  - System.Linq.Expressions.SwitchCase.TestValues\n  - System.Linq.Expressions.SwitchCase.ToString\n  - System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)\n  langs:\n  - csharp\n  name: SwitchCase\n  nameWithType: SwitchCase\n  fullName: System.Linq.Expressions.SwitchCase\n  type: Class\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Represents one case of a <xref href=\"System.Linq.Expressions.SwitchExpression\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to create an expression that represents a switch statement without a default case by using the <xref:System.Linq.Expressions.Expression.SwitchCase%2A> method.  \\n  \\n [!code-csharp[System.Linq.Expressions.ExpressionDev10#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#34)]\\n [!code-vb[System.Linq.Expressions.ExpressionDev10#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#34)]\"\n  syntax:\n    content: public sealed class SwitchCase\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.SwitchCase.Body\n  commentId: P:System.Linq.Expressions.SwitchCase.Body\n  id: Body\n  parent: System.Linq.Expressions.SwitchCase\n  langs:\n  - csharp\n  name: Body\n  nameWithType: SwitchCase.Body\n  fullName: SwitchCase.Body\n  type: Property\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Gets the body of this case.\n  syntax:\n    content: public System.Linq.Expressions.Expression Body { get; }\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The <xref href=\"System.Linq.Expressions.Expression\"></xref> object that represents the body of the case block.\n  overload: System.Linq.Expressions.SwitchCase.Body*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.SwitchCase.TestValues\n  commentId: P:System.Linq.Expressions.SwitchCase.TestValues\n  id: TestValues\n  parent: System.Linq.Expressions.SwitchCase\n  langs:\n  - csharp\n  name: TestValues\n  nameWithType: SwitchCase.TestValues\n  fullName: SwitchCase.TestValues\n  type: Property\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Gets the values of this case. This case is selected for execution when the <xref href=\"System.Linq.Expressions.SwitchExpression.SwitchValue\"></xref> matches any of these values.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> TestValues { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n      description: The read-only collection of the values for this case block.\n  overload: System.Linq.Expressions.SwitchCase.TestValues*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.SwitchCase.ToString\n  commentId: M:System.Linq.Expressions.SwitchCase.ToString\n  id: ToString\n  parent: System.Linq.Expressions.SwitchCase\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SwitchCase.ToString()\n  fullName: SwitchCase.ToString()\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Returns a <xref href=\"System.String\"></xref> that represents the current <xref href=\"System.Object\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the current <xref href=\"System.Object\"></xref>.\n  overload: System.Linq.Expressions.SwitchCase.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)\n  commentId: M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)\n  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.SwitchCase\n  langs:\n  - csharp\n  name: Update(IEnumerable<Expression>, Expression)\n  nameWithType: SwitchCase.Update(IEnumerable<Expression>, Expression)\n  fullName: SwitchCase.Update(IEnumerable<Expression>, Expression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.\n  syntax:\n    content: public System.Linq.Expressions.SwitchCase Update (System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> testValues, System.Linq.Expressions.Expression body);\n    parameters:\n    - id: testValues\n      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n      description: The <xref href=\"System.Linq.Expressions.SwitchCase.TestValues\"></xref> property of the result.\n    - id: body\n      type: System.Linq.Expressions.Expression\n      description: The <xref href=\"System.Linq.Expressions.SwitchCase.Body\"></xref> property of the result.\n    return:\n      type: System.Linq.Expressions.SwitchCase\n      description: This expression if no children are changed or an expression with the updated children.\n  overload: System.Linq.Expressions.SwitchCase.Update*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Linq.Expressions.SwitchCase.Body\n  parent: System.Linq.Expressions.SwitchCase\n  isExternal: false\n  name: Body\n  nameWithType: SwitchCase.Body\n  fullName: SwitchCase.Body\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.SwitchCase.TestValues\n  parent: System.Linq.Expressions.SwitchCase\n  isExternal: false\n  name: TestValues\n  nameWithType: SwitchCase.TestValues\n  fullName: SwitchCase.TestValues\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<Expression>\n  nameWithType: ReadOnlyCollection<Expression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.SwitchCase.ToString\n  parent: System.Linq.Expressions.SwitchCase\n  isExternal: false\n  name: ToString()\n  nameWithType: SwitchCase.ToString()\n  fullName: SwitchCase.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.SwitchCase\n  isExternal: false\n  name: Update(IEnumerable<Expression>, Expression)\n  nameWithType: SwitchCase.Update(IEnumerable<Expression>, Expression)\n  fullName: SwitchCase.Update(IEnumerable<Expression>, Expression)\n- uid: System.Linq.Expressions.SwitchCase\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SwitchCase\n  nameWithType: SwitchCase\n  fullName: System.Linq.Expressions.SwitchCase\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Expression>\n  nameWithType: IEnumerable<Expression>\n  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.SwitchCase.Body*\n  parent: System.Linq.Expressions.SwitchCase\n  isExternal: false\n  name: Body\n  nameWithType: SwitchCase.Body\n  fullName: SwitchCase.Body\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n- uid: System.Linq.Expressions.SwitchCase.TestValues*\n  parent: System.Linq.Expressions.SwitchCase\n  isExternal: false\n  name: TestValues\n  nameWithType: SwitchCase.TestValues\n  fullName: SwitchCase.TestValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n- uid: System.Linq.Expressions.SwitchCase.ToString*\n  parent: System.Linq.Expressions.SwitchCase\n  isExternal: false\n  name: ToString\n  nameWithType: SwitchCase.ToString\n  fullName: SwitchCase.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n- uid: System.Linq.Expressions.SwitchCase.Update*\n  parent: System.Linq.Expressions.SwitchCase\n  isExternal: false\n  name: Update\n  nameWithType: SwitchCase.Update\n  fullName: SwitchCase.Update\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/SwitchCase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}