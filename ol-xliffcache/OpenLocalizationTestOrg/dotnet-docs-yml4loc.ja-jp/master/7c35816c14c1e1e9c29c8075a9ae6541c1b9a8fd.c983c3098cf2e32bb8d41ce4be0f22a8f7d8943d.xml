{"nodes":[{"content":"Represents the configuration section that defines settings that can be used by an administrator for run-time inspection and control.","nodes":[{"pos":[0,132],"content":"Represents the configuration section that defines settings that can be used by an administrator for run-time inspection and control.","nodes":[{"content":"Represents the configuration section that defines settings that can be used by an administrator for run-time inspection and control.","pos":[0,132]}]}],"pos":[945,1078],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.DiagnosticSection\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.DiagnosticSection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.DiagnosticSection\"></xref> class."}],"pos":[6185,6299],"yaml":true},{"content":"Gets the End-to-End tracing configuration settings specified in a <xref href=\"System.ServiceModel.Configuration.EndToEndTracingElement\"></xref> instance.","nodes":[{"pos":[0,153],"content":"Gets the End-to-End tracing configuration settings specified in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.EndToEndTracingElement\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the End-to-End tracing configuration settings specified in a <xref href=\"System.ServiceModel.Configuration.EndToEndTracingElement\"></xref> instance."}],"pos":[7500,7654],"yaml":true},{"content":"Returns <xref href=\"System.ServiceModel.Configuration.EndToEndTracingElement\"></xref>, which contains End-to-End tracing configuration settings.","nodes":[{"pos":[0,144],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.EndToEndTracingElement\"&gt;&lt;/xref&gt;</ph>, which contains End-to-End tracing configuration settings.","source":"Returns <xref href=\"System.ServiceModel.Configuration.EndToEndTracingElement\"></xref>, which contains End-to-End tracing configuration settings."}],"pos":[8010,8155],"yaml":true},{"content":"Gets the identifier for the Event-Tracing provider, which writes events to ETW sessions.","nodes":[{"pos":[0,88],"content":"Gets the identifier for the Event-Tracing provider, which writes events to ETW sessions.","nodes":[{"content":"Gets the identifier for the Event-Tracing provider, which writes events to ETW sessions.","pos":[0,88]}]}],"pos":[9359,9448],"yaml":true},{"content":"Returns <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,43],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.String\"></xref>."}],"pos":[9757,9801],"yaml":true},{"content":"Describes the settings for [!INCLUDE[indigo1](~/includes/indigo1-md.md)] message logging.","nodes":[{"pos":[0,89],"content":"Describes the settings for <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> message logging.","source":"Describes the settings for [!INCLUDE[indigo1](~/includes/indigo1-md.md)] message logging."}],"pos":[11065,11155],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"></xref> that describes the settings for [!INCLUDE[indigo2](~/includes/indigo2-md.md)] message logging.","nodes":[{"pos":[0,173],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"&gt;&lt;/xref&gt;</ph> that describes the settings for <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> message logging.","source":"A <xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"></xref> that describes the settings for [!INCLUDE[indigo2](~/includes/indigo2-md.md)] message logging."}],"pos":[11507,11681],"yaml":true},{"content":"Gets or sets a value that specifies whether performance counters for the assembly are enabled.","nodes":[{"pos":[0,94],"content":"Gets or sets a value that specifies whether performance counters for the assembly are enabled.","nodes":[{"content":"Gets or sets a value that specifies whether performance counters for the assembly are enabled.","pos":[0,94]}]}],"pos":[12920,13015],"yaml":true},{"content":"A valid <xref href=\"System.ServiceModel.Diagnostics.PerformanceCounterScope\"></xref> value that specifies what kind of performance counters for the assembly are enabled.","nodes":[{"pos":[0,169],"content":"A valid <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Diagnostics.PerformanceCounterScope\"&gt;&lt;/xref&gt;</ph> value that specifies what kind of performance counters for the assembly are enabled.","source":"A valid <xref href=\"System.ServiceModel.Diagnostics.PerformanceCounterScope\"></xref> value that specifies what kind of performance counters for the assembly are enabled."}],"pos":[13367,13537],"yaml":true},{"content":"Gets or sets a value that specifies whether the WMI provider for the assembly is enabled.","nodes":[{"pos":[0,89],"content":"Gets or sets a value that specifies whether the WMI provider for the assembly is enabled.","nodes":[{"content":"Gets or sets a value that specifies whether the WMI provider for the assembly is enabled.","pos":[0,89]}]}],"pos":[15991,16081],"yaml":true},{"content":"The WMI provider is required for users to gain runtime access to the inspection and control features of [!INCLUDE[indigo2](~/includes/indigo2-md.md)].","nodes":[{"pos":[0,150],"content":"The WMI provider is required for users to gain runtime access to the inspection and control features of <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>.","source":"The WMI provider is required for users to gain runtime access to the inspection and control features of [!INCLUDE[indigo2](~/includes/indigo2-md.md)]."}],"pos":[16092,16243],"yaml":true,"extradata":"MT"},{"content":"`true` if the WMI provider for the assembly is enabled; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,99],"content":"`true` if the WMI provider for the assembly is enabled; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the WMI provider for the assembly is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,75],"source":"`true` if the WMI provider for the assembly is enabled; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[76,99],"source":" The default is `false`."}]}],"pos":[16501,16603],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.DiagnosticSection\n  commentId: T:System.ServiceModel.Configuration.DiagnosticSection\n  id: DiagnosticSection\n  children:\n  - System.ServiceModel.Configuration.DiagnosticSection.#ctor\n  - System.ServiceModel.Configuration.DiagnosticSection.EndToEndTracing\n  - System.ServiceModel.Configuration.DiagnosticSection.EtwProviderId\n  - System.ServiceModel.Configuration.DiagnosticSection.MessageLogging\n  - System.ServiceModel.Configuration.DiagnosticSection.PerformanceCounters\n  - System.ServiceModel.Configuration.DiagnosticSection.Properties\n  - System.ServiceModel.Configuration.DiagnosticSection.WmiProviderEnabled\n  langs:\n  - csharp\n  name: DiagnosticSection\n  nameWithType: DiagnosticSection\n  fullName: System.ServiceModel.Configuration.DiagnosticSection\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Represents the configuration section that defines settings that can be used by an administrator for run-time inspection and control.\n  syntax:\n    content: 'public sealed class DiagnosticSection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.GetRuntimeObject\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.DiagnosticSection.#ctor\n  commentId: M:System.ServiceModel.Configuration.DiagnosticSection.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  langs:\n  - csharp\n  name: DiagnosticSection()\n  nameWithType: DiagnosticSection.DiagnosticSection()\n  fullName: DiagnosticSection.DiagnosticSection()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.DiagnosticSection\"></xref> class.\n  syntax:\n    content: public DiagnosticSection ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.DiagnosticSection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.DiagnosticSection.EndToEndTracing\n  commentId: P:System.ServiceModel.Configuration.DiagnosticSection.EndToEndTracing\n  id: EndToEndTracing\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  langs:\n  - csharp\n  name: EndToEndTracing\n  nameWithType: DiagnosticSection.EndToEndTracing\n  fullName: DiagnosticSection.EndToEndTracing\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the End-to-End tracing configuration settings specified in a <xref href=\"System.ServiceModel.Configuration.EndToEndTracingElement\"></xref> instance.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"endToEndTracing\", Options=System.Configuration.ConfigurationPropertyOptions.None)]\n\n      public System.ServiceModel.Configuration.EndToEndTracingElement EndToEndTracing { get; }\n    return:\n      type: System.ServiceModel.Configuration.EndToEndTracingElement\n      description: Returns <xref href=\"System.ServiceModel.Configuration.EndToEndTracingElement\"></xref>, which contains End-to-End tracing configuration settings.\n  overload: System.ServiceModel.Configuration.DiagnosticSection.EndToEndTracing*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.DiagnosticSection.EtwProviderId\n  commentId: P:System.ServiceModel.Configuration.DiagnosticSection.EtwProviderId\n  id: EtwProviderId\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  langs:\n  - csharp\n  name: EtwProviderId\n  nameWithType: DiagnosticSection.EtwProviderId\n  fullName: DiagnosticSection.EtwProviderId\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the identifier for the Event-Tracing provider, which writes events to ETW sessions.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"etwProviderId\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=32)]\n\n      public string EtwProviderId { get; set; }\n    return:\n      type: System.String\n      description: Returns <xref href=\"System.String\"></xref>.\n  overload: System.ServiceModel.Configuration.DiagnosticSection.EtwProviderId*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.DiagnosticSection.MessageLogging\n  commentId: P:System.ServiceModel.Configuration.DiagnosticSection.MessageLogging\n  id: MessageLogging\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  langs:\n  - csharp\n  name: MessageLogging\n  nameWithType: DiagnosticSection.MessageLogging\n  fullName: DiagnosticSection.MessageLogging\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Describes the settings for [!INCLUDE[indigo1](~/includes/indigo1-md.md)] message logging.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"messageLogging\", Options=System.Configuration.ConfigurationPropertyOptions.None)]\n\n      public System.ServiceModel.Configuration.MessageLoggingElement MessageLogging { get; }\n    return:\n      type: System.ServiceModel.Configuration.MessageLoggingElement\n      description: A <xref href=\"System.ServiceModel.Configuration.MessageLoggingElement\"></xref> that describes the settings for [!INCLUDE[indigo2](~/includes/indigo2-md.md)] message logging.\n  overload: System.ServiceModel.Configuration.DiagnosticSection.MessageLogging*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.DiagnosticSection.PerformanceCounters\n  commentId: P:System.ServiceModel.Configuration.DiagnosticSection.PerformanceCounters\n  id: PerformanceCounters\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  langs:\n  - csharp\n  name: PerformanceCounters\n  nameWithType: DiagnosticSection.PerformanceCounters\n  fullName: DiagnosticSection.PerformanceCounters\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether performance counters for the assembly are enabled.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"performanceCounters\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.Diagnostics.PerformanceCounterScope PerformanceCounters { get; set; }\n    return:\n      type: System.ServiceModel.Diagnostics.PerformanceCounterScope\n      description: A valid <xref href=\"System.ServiceModel.Diagnostics.PerformanceCounterScope\"></xref> value that specifies what kind of performance counters for the assembly are enabled.\n  overload: System.ServiceModel.Configuration.DiagnosticSection.PerformanceCounters*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.DiagnosticSection.Properties\n  commentId: P:System.ServiceModel.Configuration.DiagnosticSection.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: DiagnosticSection.Properties\n  fullName: DiagnosticSection.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.DiagnosticSection.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n- uid: System.ServiceModel.Configuration.DiagnosticSection.WmiProviderEnabled\n  commentId: P:System.ServiceModel.Configuration.DiagnosticSection.WmiProviderEnabled\n  id: WmiProviderEnabled\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  langs:\n  - csharp\n  name: WmiProviderEnabled\n  nameWithType: DiagnosticSection.WmiProviderEnabled\n  fullName: DiagnosticSection.WmiProviderEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies whether the WMI provider for the assembly is enabled.\n  remarks: The WMI provider is required for users to gain runtime access to the inspection and control features of [!INCLUDE[indigo2](~/includes/indigo2-md.md)].\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"wmiProviderEnabled\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool WmiProviderEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the WMI provider for the assembly is enabled; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.DiagnosticSection.WmiProviderEnabled*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationSection\n  nameWithType: ConfigurationSection\n  fullName: System.Configuration.ConfigurationSection\n- uid: System.ServiceModel.Configuration.DiagnosticSection.#ctor\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: DiagnosticSection()\n  nameWithType: DiagnosticSection.DiagnosticSection()\n  fullName: DiagnosticSection.DiagnosticSection()\n- uid: System.ServiceModel.Configuration.DiagnosticSection.EndToEndTracing\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: EndToEndTracing\n  nameWithType: DiagnosticSection.EndToEndTracing\n  fullName: DiagnosticSection.EndToEndTracing\n- uid: System.ServiceModel.Configuration.EndToEndTracingElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: EndToEndTracingElement\n  nameWithType: EndToEndTracingElement\n  fullName: System.ServiceModel.Configuration.EndToEndTracingElement\n- uid: System.ServiceModel.Configuration.DiagnosticSection.EtwProviderId\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: EtwProviderId\n  nameWithType: DiagnosticSection.EtwProviderId\n  fullName: DiagnosticSection.EtwProviderId\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.DiagnosticSection.MessageLogging\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: MessageLogging\n  nameWithType: DiagnosticSection.MessageLogging\n  fullName: DiagnosticSection.MessageLogging\n- uid: System.ServiceModel.Configuration.MessageLoggingElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: MessageLoggingElement\n  nameWithType: MessageLoggingElement\n  fullName: System.ServiceModel.Configuration.MessageLoggingElement\n- uid: System.ServiceModel.Configuration.DiagnosticSection.PerformanceCounters\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: PerformanceCounters\n  nameWithType: DiagnosticSection.PerformanceCounters\n  fullName: DiagnosticSection.PerformanceCounters\n- uid: System.ServiceModel.Diagnostics.PerformanceCounterScope\n  parent: System.ServiceModel.Diagnostics\n  isExternal: false\n  name: PerformanceCounterScope\n  nameWithType: PerformanceCounterScope\n  fullName: System.ServiceModel.Diagnostics.PerformanceCounterScope\n- uid: System.ServiceModel.Configuration.DiagnosticSection.Properties\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: Properties\n  nameWithType: DiagnosticSection.Properties\n  fullName: DiagnosticSection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.DiagnosticSection.WmiProviderEnabled\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: WmiProviderEnabled\n  nameWithType: DiagnosticSection.WmiProviderEnabled\n  fullName: DiagnosticSection.WmiProviderEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.DiagnosticSection.#ctor*\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: DiagnosticSection\n  nameWithType: DiagnosticSection.DiagnosticSection\n  fullName: DiagnosticSection.DiagnosticSection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n- uid: System.ServiceModel.Configuration.DiagnosticSection.EndToEndTracing*\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: EndToEndTracing\n  nameWithType: DiagnosticSection.EndToEndTracing\n  fullName: DiagnosticSection.EndToEndTracing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n- uid: System.ServiceModel.Configuration.DiagnosticSection.EtwProviderId*\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: EtwProviderId\n  nameWithType: DiagnosticSection.EtwProviderId\n  fullName: DiagnosticSection.EtwProviderId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n- uid: System.ServiceModel.Configuration.DiagnosticSection.MessageLogging*\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: MessageLogging\n  nameWithType: DiagnosticSection.MessageLogging\n  fullName: DiagnosticSection.MessageLogging\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n- uid: System.ServiceModel.Configuration.DiagnosticSection.PerformanceCounters*\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: PerformanceCounters\n  nameWithType: DiagnosticSection.PerformanceCounters\n  fullName: DiagnosticSection.PerformanceCounters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n- uid: System.ServiceModel.Configuration.DiagnosticSection.Properties*\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: Properties\n  nameWithType: DiagnosticSection.Properties\n  fullName: DiagnosticSection.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n- uid: System.ServiceModel.Configuration.DiagnosticSection.WmiProviderEnabled*\n  parent: System.ServiceModel.Configuration.DiagnosticSection\n  isExternal: false\n  name: WmiProviderEnabled\n  nameWithType: DiagnosticSection.WmiProviderEnabled\n  fullName: DiagnosticSection.WmiProviderEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/DiagnosticSection.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationSection.IsModified\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationSection.IsModified()\n  fullName: ConfigurationSection.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationSection.ResetModified\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationSection.ResetModified()\n  fullName: ConfigurationSection.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: DeserializeSection(XmlReader)\n  nameWithType: ConfigurationSection.DeserializeSection(XmlReader)\n  fullName: ConfigurationSection.DeserializeSection(XmlReader)\n- uid: System.Configuration.ConfigurationSection.GetRuntimeObject\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: GetRuntimeObject()\n  nameWithType: ConfigurationSection.GetRuntimeObject()\n  fullName: ConfigurationSection.GetRuntimeObject()\n- uid: System.Configuration.ConfigurationSection.SectionInformation\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: SectionInformation\n  nameWithType: ConfigurationSection.SectionInformation\n  fullName: ConfigurationSection.SectionInformation\n- uid: System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n  nameWithType: ConfigurationSection.SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n  fullName: ConfigurationSection.SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n  nameWithType: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n  fullName: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n  nameWithType: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n  fullName: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializeSectionInTargetVersion(FrameworkName)\n  nameWithType: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)\n  fullName: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)\n"}