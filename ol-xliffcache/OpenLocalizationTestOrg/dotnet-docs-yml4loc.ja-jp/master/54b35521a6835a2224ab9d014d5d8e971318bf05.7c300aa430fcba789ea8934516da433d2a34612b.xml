{"nodes":[{"content":"Use <xref href=\"System.Runtime.InteropServices.ComTypes.IRunningObjectTable\"></xref> instead.","nodes":[{"pos":[0,93],"content":"Use <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComTypes.IRunningObjectTable\"&gt;&lt;/xref&gt;</ph> instead.","source":"Use <xref href=\"System.Runtime.InteropServices.ComTypes.IRunningObjectTable\"></xref> instead."}],"pos":[1361,1455],"yaml":true},{"content":"For more information, please see the existing documentation for `IRunningObjectTable` in the com subfolder of the MSDN library.","nodes":[{"pos":[0,127],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IRunningObjectTable`</ph> in the com subfolder of the MSDN library.","source":"For more information, please see the existing documentation for `IRunningObjectTable` in the com subfolder of the MSDN library."}],"pos":[1466,1594],"yaml":true,"extradata":"MT"},{"content":"Enumerates the objects currently registered as running.","nodes":[{"pos":[0,55],"content":"Enumerates the objects currently registered as running.","nodes":[{"content":"Enumerates the objects currently registered as running.","pos":[0,55]}]}],"pos":[3404,3460],"yaml":true},{"content":"For more information, please see the existing documentation for `IRunningObjectTable::EnumRunning` in the MSDN library.","nodes":[{"pos":[0,119],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IRunningObjectTable::EnumRunning`</ph> in the MSDN library.","source":"For more information, please see the existing documentation for `IRunningObjectTable::EnumRunning` in the MSDN library."}],"pos":[3471,3591],"yaml":true,"extradata":"MT"},{"content":"On successful return, the new enumerator for the ROT.","nodes":[{"pos":[0,53],"content":"On successful return, the new enumerator for the ROT.","nodes":[{"content":"On successful return, the new enumerator for the ROT.","pos":[0,53]}]}],"pos":[3826,3880],"yaml":true},{"content":"Returns the registered object if the supplied object name is registered as running.","nodes":[{"pos":[0,83],"content":"Returns the registered object if the supplied object name is registered as running.","nodes":[{"content":"Returns the registered object if the supplied object name is registered as running.","pos":[0,83]}]}],"pos":[5326,5410],"yaml":true},{"content":"For more information, please see the existing documentation for `IRunningObjectTable::GetObject` in the MSDN library.","nodes":[{"pos":[0,117],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IRunningObjectTable::GetObject`</ph> in the MSDN library.","source":"For more information, please see the existing documentation for `IRunningObjectTable::GetObject` in the MSDN library."}],"pos":[5421,5539],"yaml":true,"extradata":"MT"},{"content":"Reference to the moniker to search for in the ROT.","nodes":[{"pos":[0,50],"content":"Reference to the moniker to search for in the ROT.","nodes":[{"content":"Reference to the moniker to search for in the ROT.","pos":[0,50]}]}],"pos":[5784,5835],"yaml":true},{"content":"On successful return, contains the requested running object.","nodes":[{"pos":[0,60],"content":"On successful return, contains the requested running object.","nodes":[{"content":"On successful return, contains the requested running object.","pos":[0,60]}]}],"pos":[5902,5963],"yaml":true},{"content":"Searches for this moniker in the ROT and reports the recorded time of change, if present.","nodes":[{"pos":[0,89],"content":"Searches for this moniker in the ROT and reports the recorded time of change, if present.","nodes":[{"content":"Searches for this moniker in the ROT and reports the recorded time of change, if present.","pos":[0,89]}]}],"pos":[7551,7641],"yaml":true},{"content":"For more information, please see the existing documentation for `IRunningObjectTable::GetTimeOfLastChange` in the MSDN library.","nodes":[{"pos":[0,127],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IRunningObjectTable::GetTimeOfLastChange`</ph> in the MSDN library.","source":"For more information, please see the existing documentation for `IRunningObjectTable::GetTimeOfLastChange` in the MSDN library."}],"pos":[7652,7780],"yaml":true,"extradata":"MT"},{"content":"Reference to the moniker to search for in the ROT.","nodes":[{"pos":[0,50],"content":"Reference to the moniker to search for in the ROT.","nodes":[{"content":"Reference to the moniker to search for in the ROT.","pos":[0,50]}]}],"pos":[8066,8117],"yaml":true},{"content":"On successful return, contains the objects last change time.","nodes":[{"pos":[0,60],"content":"On successful return, contains the objects last change time.","nodes":[{"content":"On successful return, contains the objects last change time.","pos":[0,60]}]}],"pos":[8208,8269],"yaml":true},{"content":"Determines if the specified moniker is currently registered in the Running Object Table.","nodes":[{"pos":[0,88],"content":"Determines if the specified moniker is currently registered in the Running Object Table.","nodes":[{"content":"Determines if the specified moniker is currently registered in the Running Object Table.","pos":[0,88]}]}],"pos":[9654,9743],"yaml":true},{"content":"For more information, please see the existing documentation for `IRunningObjectTable::IsRunning` in the MSDN library.","nodes":[{"pos":[0,117],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IRunningObjectTable::IsRunning`</ph> in the MSDN library.","source":"For more information, please see the existing documentation for `IRunningObjectTable::IsRunning` in the MSDN library."}],"pos":[9754,9872],"yaml":true,"extradata":"MT"},{"content":"Reference to the moniker to search for in the Running Object Table.","nodes":[{"pos":[0,67],"content":"Reference to the moniker to search for in the Running Object Table.","nodes":[{"content":"Reference to the moniker to search for in the Running Object Table.","pos":[0,67]}]}],"pos":[10093,10161],"yaml":true},{"content":"Makes a note of the time that a particular object has changed so `IMoniker::GetTimeOfLastChange` can report an appropriate change time.","nodes":[{"pos":[0,135],"content":"Makes a note of the time that a particular object has changed so <ph id=\"ph1\">`IMoniker::GetTimeOfLastChange`</ph> can report an appropriate change time.","source":"Makes a note of the time that a particular object has changed so `IMoniker::GetTimeOfLastChange` can report an appropriate change time."}],"pos":[11605,11741],"yaml":true},{"content":"For more information, please see the existing documentation for `IRunningObjectTable::NoteChangeTime` in the MSDN library.","nodes":[{"pos":[0,122],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IRunningObjectTable::NoteChangeTime`</ph> in the MSDN library.","source":"For more information, please see the existing documentation for `IRunningObjectTable::NoteChangeTime` in the MSDN library."}],"pos":[11752,11875],"yaml":true,"extradata":"MT"},{"content":"The ROT entry of the changed object.","nodes":[{"pos":[0,36],"content":"The ROT entry of the changed object.","nodes":[{"content":"The ROT entry of the changed object.","pos":[0,36]}]}],"pos":[12079,12116],"yaml":true},{"content":"Reference to the object's last change time.","nodes":[{"pos":[0,43],"content":"Reference to the object's last change time.","nodes":[{"content":"Reference to the object's last change time.","pos":[0,43]}]}],"pos":[12207,12251],"yaml":true},{"content":"Registers that the supplied object has entered the running state.","nodes":[{"pos":[0,65],"content":"Registers that the supplied object has entered the running state.","nodes":[{"content":"Registers that the supplied object has entered the running state.","pos":[0,65]}]}],"pos":[13814,13880],"yaml":true},{"content":"For more information, please see the existing documentation for `IRunningObjectTable::Register` in the MSDN library.","nodes":[{"pos":[0,116],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IRunningObjectTable::Register`</ph> in the MSDN library.","source":"For more information, please see the existing documentation for `IRunningObjectTable::Register` in the MSDN library."}],"pos":[13891,14008],"yaml":true,"extradata":"MT"},{"content":"Specifies whether the Running Object Table's (ROT) reference to <code>punkObject</code> is weak or strong, and controls access to the object through its entry in the ROT.","nodes":[{"pos":[0,170],"content":"Specifies whether the Running Object Table's (ROT) reference to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">punkObject</ph><ept id=\"p1\">&lt;/code&gt;</ept> is weak or strong, and controls access to the object through its entry in the ROT.","source":"Specifies whether the Running Object Table's (ROT) reference to <code>punkObject</code> is weak or strong, and controls access to the object through its entry in the ROT."}],"pos":[14246,14417],"yaml":true},{"content":"Reference to the object being registered as running.","nodes":[{"pos":[0,52],"content":"Reference to the object being registered as running.","nodes":[{"content":"Reference to the object being registered as running.","pos":[0,52]}]}],"pos":[14483,14536],"yaml":true},{"content":"Reference to the moniker that identifies <code>punkObject</code>.","nodes":[{"pos":[0,65],"content":"Reference to the moniker that identifies <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">punkObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Reference to the moniker that identifies <code>punkObject</code>."}],"pos":[14635,14701],"yaml":true},{"content":"Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to <xref href=\"System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)\"></xref> or <xref href=\"System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\"></xref>.","nodes":[{"pos":[0,341],"content":"Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\"&gt;&lt;/xref&gt;</ph>.","source":"Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to <xref href=\"System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)\"></xref> or <xref href=\"System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\"></xref>."}],"pos":[14767,15109],"yaml":true},{"content":"Unregisters the specified object from the ROT.","nodes":[{"pos":[0,46],"content":"Unregisters the specified object from the ROT.","nodes":[{"content":"Unregisters the specified object from the ROT.","pos":[0,46]}]}],"pos":[16351,16398],"yaml":true},{"content":"For more information, please see the existing documentation for `IRunningObjectTable::Revoke` in the MSDN library.","nodes":[{"pos":[0,114],"content":"For more information, please see the existing documentation for <ph id=\"ph1\">`IRunningObjectTable::Revoke`</ph> in the MSDN library.","source":"For more information, please see the existing documentation for `IRunningObjectTable::Revoke` in the MSDN library."}],"pos":[16409,16524],"yaml":true,"extradata":"MT"},{"content":"The ROT entry to revoke.","nodes":[{"pos":[0,24],"content":"The ROT entry to revoke.","nodes":[{"content":"The ROT entry to revoke.","pos":[0,24]}]}],"pos":[16665,16690],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  commentId: T:System.Runtime.InteropServices.UCOMIRunningObjectTable\n  id: UCOMIRunningObjectTable\n  children:\n  - System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  - System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)\n  - System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)\n  - System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)\n  - System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\n  - System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)\n  - System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)\n  langs:\n  - csharp\n  name: UCOMIRunningObjectTable\n  nameWithType: UCOMIRunningObjectTable\n  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Use <xref href=\"System.Runtime.InteropServices.ComTypes.IRunningObjectTable\"></xref> instead.\n  remarks: For more information, please see the existing documentation for `IRunningObjectTable` in the com subfolder of the MSDN library.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      [System.Runtime.InteropServices.Guid(\"00000010-0000-0000-c000-000000000046\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface UCOMIRunningObjectTable\n  implements: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  commentId: M:System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  id: EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  langs:\n  - csharp\n  name: EnumRunning(UCOMIEnumMoniker)\n  nameWithType: UCOMIRunningObjectTable.EnumRunning(UCOMIEnumMoniker)\n  fullName: UCOMIRunningObjectTable.EnumRunning(UCOMIEnumMoniker)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Enumerates the objects currently registered as running.\n  remarks: For more information, please see the existing documentation for `IRunningObjectTable::EnumRunning` in the MSDN library.\n  syntax:\n    content: public void EnumRunning (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenumMoniker);\n    parameters:\n    - id: ppenumMoniker\n      type: System.Runtime.InteropServices.UCOMIEnumMoniker\n      description: On successful return, the new enumerator for the ROT.\n  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)\n  commentId: M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)\n  id: GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  langs:\n  - csharp\n  name: GetObject(UCOMIMoniker, Object)\n  nameWithType: UCOMIRunningObjectTable.GetObject(UCOMIMoniker, Object)\n  fullName: UCOMIRunningObjectTable.GetObject(UCOMIMoniker, Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Returns the registered object if the supplied object name is registered as running.\n  remarks: For more information, please see the existing documentation for `IRunningObjectTable::GetObject` in the MSDN library.\n  syntax:\n    content: public void GetObject (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out object ppunkObject);\n    parameters:\n    - id: pmkObjectName\n      type: System.Runtime.InteropServices.UCOMIMoniker\n      description: Reference to the moniker to search for in the ROT.\n    - id: ppunkObject\n      type: System.Object\n      description: On successful return, contains the requested running object.\n  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)\n  commentId: M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)\n  id: GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  langs:\n  - csharp\n  name: GetTimeOfLastChange(UCOMIMoniker, FILETIME)\n  nameWithType: UCOMIRunningObjectTable.GetTimeOfLastChange(UCOMIMoniker, FILETIME)\n  fullName: UCOMIRunningObjectTable.GetTimeOfLastChange(UCOMIMoniker, FILETIME)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Searches for this moniker in the ROT and reports the recorded time of change, if present.\n  remarks: For more information, please see the existing documentation for `IRunningObjectTable::GetTimeOfLastChange` in the MSDN library.\n  syntax:\n    content: public void GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out System.Runtime.InteropServices.FILETIME pfiletime);\n    parameters:\n    - id: pmkObjectName\n      type: System.Runtime.InteropServices.UCOMIMoniker\n      description: Reference to the moniker to search for in the ROT.\n    - id: pfiletime\n      type: System.Runtime.InteropServices.FILETIME\n      description: On successful return, contains the objects last change time.\n  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)\n  commentId: M:System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)\n  id: IsRunning(System.Runtime.InteropServices.UCOMIMoniker)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  langs:\n  - csharp\n  name: IsRunning(UCOMIMoniker)\n  nameWithType: UCOMIRunningObjectTable.IsRunning(UCOMIMoniker)\n  fullName: UCOMIRunningObjectTable.IsRunning(UCOMIMoniker)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Determines if the specified moniker is currently registered in the Running Object Table.\n  remarks: For more information, please see the existing documentation for `IRunningObjectTable::IsRunning` in the MSDN library.\n  syntax:\n    content: public void IsRunning (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName);\n    parameters:\n    - id: pmkObjectName\n      type: System.Runtime.InteropServices.UCOMIMoniker\n      description: Reference to the moniker to search for in the Running Object Table.\n  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\n  commentId: M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\n  id: NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  langs:\n  - csharp\n  name: NoteChangeTime(Int32, FILETIME)\n  nameWithType: UCOMIRunningObjectTable.NoteChangeTime(Int32, FILETIME)\n  fullName: UCOMIRunningObjectTable.NoteChangeTime(Int32, FILETIME)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Makes a note of the time that a particular object has changed so `IMoniker::GetTimeOfLastChange` can report an appropriate change time.\n  remarks: For more information, please see the existing documentation for `IRunningObjectTable::NoteChangeTime` in the MSDN library.\n  syntax:\n    content: public void NoteChangeTime (int dwRegister, ref System.Runtime.InteropServices.FILETIME pfiletime);\n    parameters:\n    - id: dwRegister\n      type: System.Int32\n      description: The ROT entry of the changed object.\n    - id: pfiletime\n      type: System.Runtime.InteropServices.FILETIME\n      description: Reference to the object's last change time.\n  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)\n  commentId: M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)\n  id: Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  langs:\n  - csharp\n  name: Register(Int32, Object, UCOMIMoniker, Int32)\n  nameWithType: UCOMIRunningObjectTable.Register(Int32, Object, UCOMIMoniker, Int32)\n  fullName: UCOMIRunningObjectTable.Register(Int32, Object, UCOMIMoniker, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Registers that the supplied object has entered the running state.\n  remarks: For more information, please see the existing documentation for `IRunningObjectTable::Register` in the MSDN library.\n  syntax:\n    content: public void Register (int grfFlags, object punkObject, System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out int pdwRegister);\n    parameters:\n    - id: grfFlags\n      type: System.Int32\n      description: Specifies whether the Running Object Table's (ROT) reference to <code>punkObject</code> is weak or strong, and controls access to the object through its entry in the ROT.\n    - id: punkObject\n      type: System.Object\n      description: Reference to the object being registered as running.\n    - id: pmkObjectName\n      type: System.Runtime.InteropServices.UCOMIMoniker\n      description: Reference to the moniker that identifies <code>punkObject</code>.\n    - id: pdwRegister\n      type: System.Int32\n      description: Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to <xref href=\"System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)\"></xref> or <xref href=\"System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\"></xref>.\n  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)\n  commentId: M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)\n  id: Revoke(System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  langs:\n  - csharp\n  name: Revoke(Int32)\n  nameWithType: UCOMIRunningObjectTable.Revoke(Int32)\n  fullName: UCOMIRunningObjectTable.Revoke(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Unregisters the specified object from the ROT.\n  remarks: For more information, please see the existing documentation for `IRunningObjectTable::Revoke` in the MSDN library.\n  syntax:\n    content: public void Revoke (int dwRegister);\n    parameters:\n    - id: dwRegister\n      type: System.Int32\n      description: The ROT entry to revoke.\n  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: EnumRunning(UCOMIEnumMoniker)\n  nameWithType: UCOMIRunningObjectTable.EnumRunning(UCOMIEnumMoniker)\n  fullName: UCOMIRunningObjectTable.EnumRunning(UCOMIEnumMoniker)\n- uid: System.Runtime.InteropServices.UCOMIEnumMoniker\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: UCOMIEnumMoniker\n  nameWithType: UCOMIEnumMoniker\n  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: GetObject(UCOMIMoniker, Object)\n  nameWithType: UCOMIRunningObjectTable.GetObject(UCOMIMoniker, Object)\n  fullName: UCOMIRunningObjectTable.GetObject(UCOMIMoniker, Object)\n- uid: System.Runtime.InteropServices.UCOMIMoniker\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: UCOMIMoniker\n  nameWithType: UCOMIMoniker\n  fullName: System.Runtime.InteropServices.UCOMIMoniker\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: GetTimeOfLastChange(UCOMIMoniker, FILETIME)\n  nameWithType: UCOMIRunningObjectTable.GetTimeOfLastChange(UCOMIMoniker, FILETIME)\n  fullName: UCOMIRunningObjectTable.GetTimeOfLastChange(UCOMIMoniker, FILETIME)\n- uid: System.Runtime.InteropServices.FILETIME\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: FILETIME\n  nameWithType: FILETIME\n  fullName: System.Runtime.InteropServices.FILETIME\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: IsRunning(UCOMIMoniker)\n  nameWithType: UCOMIRunningObjectTable.IsRunning(UCOMIMoniker)\n  fullName: UCOMIRunningObjectTable.IsRunning(UCOMIMoniker)\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: NoteChangeTime(Int32, FILETIME)\n  nameWithType: UCOMIRunningObjectTable.NoteChangeTime(Int32, FILETIME)\n  fullName: UCOMIRunningObjectTable.NoteChangeTime(Int32, FILETIME)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: Register(Int32, Object, UCOMIMoniker, Int32)\n  nameWithType: UCOMIRunningObjectTable.Register(Int32, Object, UCOMIMoniker, Int32)\n  fullName: UCOMIRunningObjectTable.Register(Int32, Object, UCOMIMoniker, Int32)\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: Revoke(Int32)\n  nameWithType: UCOMIRunningObjectTable.Revoke(Int32)\n  fullName: UCOMIRunningObjectTable.Revoke(Int32)\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning*\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: EnumRunning\n  nameWithType: UCOMIRunningObjectTable.EnumRunning\n  fullName: UCOMIRunningObjectTable.EnumRunning\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject*\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: GetObject\n  nameWithType: UCOMIRunningObjectTable.GetObject\n  fullName: UCOMIRunningObjectTable.GetObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange*\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: GetTimeOfLastChange\n  nameWithType: UCOMIRunningObjectTable.GetTimeOfLastChange\n  fullName: UCOMIRunningObjectTable.GetTimeOfLastChange\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning*\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: IsRunning\n  nameWithType: UCOMIRunningObjectTable.IsRunning\n  fullName: UCOMIRunningObjectTable.IsRunning\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime*\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: NoteChangeTime\n  nameWithType: UCOMIRunningObjectTable.NoteChangeTime\n  fullName: UCOMIRunningObjectTable.NoteChangeTime\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register*\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: Register\n  nameWithType: UCOMIRunningObjectTable.Register\n  fullName: UCOMIRunningObjectTable.Register\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke*\n  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable\n  isExternal: false\n  name: Revoke\n  nameWithType: UCOMIRunningObjectTable.Revoke\n  fullName: UCOMIRunningObjectTable.Revoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UCOMIRunningObjectTable.xml\n"}