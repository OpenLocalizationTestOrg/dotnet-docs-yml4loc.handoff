{"nodes":[{"content":"The <xref href=\"System.Runtime.Remoting.Contexts\"></xref> namespace contains objects that define the contexts all objects reside within. A context is an ordered sequence of properties that defines an environment for the objects within it. Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time (JIT) activation, security, and so on. Multiple objects can live inside a context.","nodes":[{"pos":[0,491],"content":"The <xref href=\"System.Runtime.Remoting.Contexts\"></xref> namespace contains objects that define the contexts all objects reside within. A context is an ordered sequence of properties that defines an environment for the objects within it. Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time (JIT) activation, security, and so on. Multiple objects can live inside a context.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Contexts\"&gt;&lt;/xref&gt;</ph> namespace contains objects that define the contexts all objects reside within.","pos":[0,136],"source":"The <xref href=\"System.Runtime.Remoting.Contexts\"></xref> namespace contains objects that define the contexts all objects reside within."},{"content":"A context is an ordered sequence of properties that defines an environment for the objects within it.","pos":[137,238]},{"content":"Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time (JIT) activation, security, and so on.","pos":[239,447]},{"content":"Multiple objects can live inside a context.","pos":[448,491]}]}],"pos":[1175,1667],"yaml":true},{"content":"Whenever a new object is created, the.NET Framework finds a compatible context or creates a new context for the object. After an object is placed in a context, it stays in it for life. Classes that can be bound to a context are called context-bound classes. When accessed from another context, these context-bound classes are referenced directly using a proxy. A call from an object in one context to an object in another context will go through a context proxy and be affected by the policy implemented by the combined context properties.","nodes":[{"pos":[0,539],"content":"Whenever a new object is created, the.NET Framework finds a compatible context or creates a new context for the object. After an object is placed in a context, it stays in it for life. Classes that can be bound to a context are called context-bound classes. When accessed from another context, these context-bound classes are referenced directly using a proxy. A call from an object in one context to an object in another context will go through a context proxy and be affected by the policy implemented by the combined context properties.","nodes":[{"content":"Whenever a new object is created, the.NET Framework finds a compatible context or creates a new context for the object. After an object is placed in a context, it stays in it for life. Classes that can be bound to a context are called context-bound classes. When accessed from another context, these context-bound classes are referenced directly using a proxy. A call from an object in one context to an object in another context will go through a context proxy and be affected by the policy implemented by the combined context properties.","pos":[0,539],"nodes":[{"content":"Whenever a new object is created, the.NET Framework finds a compatible context or creates a new context for the object.","pos":[0,119]},{"content":"After an object is placed in a context, it stays in it for life.","pos":[120,184]},{"content":"Classes that can be bound to a context are called context-bound classes.","pos":[185,257]},{"content":"When accessed from another context, these context-bound classes are referenced directly using a proxy.","pos":[258,360]},{"content":"A call from an object in one context to an object in another context will go through a context proxy and be affected by the policy implemented by the combined context properties.","pos":[361,539]}]}]}],"pos":[1678,2218],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Contexts\n  id: System.Runtime.Remoting.Contexts\n  children:\n  - System.Runtime.Remoting.Contexts.Context\n  - System.Runtime.Remoting.Contexts.ContextAttribute\n  - System.Runtime.Remoting.Contexts.ContextProperty\n  - System.Runtime.Remoting.Contexts.CrossContextDelegate\n  - System.Runtime.Remoting.Contexts.IContextAttribute\n  - System.Runtime.Remoting.Contexts.IContextProperty\n  - System.Runtime.Remoting.Contexts.IContextPropertyActivator\n  - System.Runtime.Remoting.Contexts.IContributeClientContextSink\n  - System.Runtime.Remoting.Contexts.IContributeDynamicSink\n  - System.Runtime.Remoting.Contexts.IContributeEnvoySink\n  - System.Runtime.Remoting.Contexts.IContributeObjectSink\n  - System.Runtime.Remoting.Contexts.IContributeServerContextSink\n  - System.Runtime.Remoting.Contexts.IDynamicMessageSink\n  - System.Runtime.Remoting.Contexts.IDynamicProperty\n  - System.Runtime.Remoting.Contexts.SynchronizationAttribute\n  langs:\n  - csharp\n  name: System.Runtime.Remoting.Contexts\n  nameWithType: System.Runtime.Remoting.Contexts\n  fullName: System.Runtime.Remoting.Contexts\n  type: Namespace\n  summary: The <xref href=\"System.Runtime.Remoting.Contexts\"></xref> namespace contains objects that define the contexts all objects reside within. A context is an ordered sequence of properties that defines an environment for the objects within it. Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time (JIT) activation, security, and so on. Multiple objects can live inside a context.\n  remarks: Whenever a new object is created, the.NET Framework finds a compatible context or creates a new context for the object. After an object is placed in a context, it stays in it for life. Classes that can be bound to a context are called context-bound classes. When accessed from another context, these context-bound classes are referenced directly using a proxy. A call from an object in one context to an object in another context will go through a context proxy and be affected by the policy implemented by the combined context properties.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Runtime.Remoting.Contexts.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Remoting.Contexts.Context\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: Context\n  nameWithType: Context\n  fullName: System.Runtime.Remoting.Contexts.Context\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: ContextAttribute\n  nameWithType: ContextAttribute\n  fullName: System.Runtime.Remoting.Contexts.ContextAttribute\n- uid: System.Runtime.Remoting.Contexts.ContextProperty\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: ContextProperty\n  nameWithType: ContextProperty\n  fullName: System.Runtime.Remoting.Contexts.ContextProperty\n- uid: System.Runtime.Remoting.Contexts.CrossContextDelegate\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: CrossContextDelegate\n  nameWithType: CrossContextDelegate\n  fullName: System.Runtime.Remoting.Contexts.CrossContextDelegate\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextAttribute\n  nameWithType: IContextAttribute\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute\n- uid: System.Runtime.Remoting.Contexts.IContextProperty\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextProperty\n  nameWithType: IContextProperty\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty\n- uid: System.Runtime.Remoting.Contexts.IContextPropertyActivator\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextPropertyActivator\n  nameWithType: IContextPropertyActivator\n  fullName: System.Runtime.Remoting.Contexts.IContextPropertyActivator\n- uid: System.Runtime.Remoting.Contexts.IContributeClientContextSink\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContributeClientContextSink\n  nameWithType: IContributeClientContextSink\n  fullName: System.Runtime.Remoting.Contexts.IContributeClientContextSink\n- uid: System.Runtime.Remoting.Contexts.IContributeDynamicSink\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContributeDynamicSink\n  nameWithType: IContributeDynamicSink\n  fullName: System.Runtime.Remoting.Contexts.IContributeDynamicSink\n- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContributeEnvoySink\n  nameWithType: IContributeEnvoySink\n  fullName: System.Runtime.Remoting.Contexts.IContributeEnvoySink\n- uid: System.Runtime.Remoting.Contexts.IContributeObjectSink\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContributeObjectSink\n  nameWithType: IContributeObjectSink\n  fullName: System.Runtime.Remoting.Contexts.IContributeObjectSink\n- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContributeServerContextSink\n  nameWithType: IContributeServerContextSink\n  fullName: System.Runtime.Remoting.Contexts.IContributeServerContextSink\n- uid: System.Runtime.Remoting.Contexts.IDynamicMessageSink\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IDynamicMessageSink\n  nameWithType: IDynamicMessageSink\n  fullName: System.Runtime.Remoting.Contexts.IDynamicMessageSink\n- uid: System.Runtime.Remoting.Contexts.IDynamicProperty\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IDynamicProperty\n  nameWithType: IDynamicProperty\n  fullName: System.Runtime.Remoting.Contexts.IDynamicProperty\n- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: SynchronizationAttribute\n  nameWithType: SynchronizationAttribute\n  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute\n"}