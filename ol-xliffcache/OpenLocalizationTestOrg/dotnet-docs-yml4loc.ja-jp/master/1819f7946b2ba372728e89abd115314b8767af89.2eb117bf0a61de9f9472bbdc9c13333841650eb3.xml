{"nodes":[{"content":"Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.","nodes":[{"pos":[0,121],"content":"Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.","nodes":[{"content":"Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.","pos":[0,121],"nodes":[{"content":"Allows the use of declarative security actions to determine host protection requirements.","pos":[0,89]},{"content":"This class cannot be inherited.","pos":[90,121]}]}]}],"pos":[1451,1573],"yaml":true},{"content":"This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server. If the code is run in a client application or on a server that is not host-protected, the attribute \"evaporates\"; it is not detected and therefore not applied. When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.  \n  \n> [!IMPORTANT]\n>  The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.  Although a link demand is used to check for conformance to programming model requirements, the <xref:System.Security.Permissions.HostProtectionAttribute> is not a security permission.  \n  \n If the host does not have programming model requirements, the link demands do not occur.  \n  \n This attribute identifies the following:  \n  \n-   Methods or classes that do not fit the host programming model, but are otherwise benign.  \n  \n-   Methods or classes that do not fit the host programming model and could lead to destabilizing server-managed user code.  \n  \n-   Methods or classes that do not fit the host programming model and could lead to a destabilization of the server process itself.  \n  \n> [!NOTE]\n>  If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories. The .NET Framework class library members with this attribute cause only the immediate caller to be checked.  Your library member must also cause a check of its immediate caller in the same manner.  \n  \n> [!NOTE]\n>  Do not use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to create a native image of assemblies that are protected by the <xref:System.Security.Permissions.HostProtectionAttribute>. In a full-trust environment, the image is always loaded, without regard to the <xref:System.Security.Permissions.HostProtectionAttribute>, and in a partial-trust environment the image is not loaded.","nodes":[{"pos":[0,431],"content":"This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server. If the code is run in a client application or on a server that is not host-protected, the attribute \"evaporates\"; it is not detected and therefore not applied. When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.","nodes":[{"content":"This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server. If the code is run in a client application or on a server that is not host-protected, the attribute \"evaporates\"; it is not detected and therefore not applied. When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.","pos":[0,431],"nodes":[{"content":"This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server.","pos":[0,139]},{"content":"If the code is run in a client application or on a server that is not host-protected, the attribute \"evaporates\"; it is not detected and therefore not applied.","pos":[140,299]},{"content":"When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.","pos":[300,431]}]}]},{"pos":[439,750],"content":"[!IMPORTANT]\n The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.  Although a link demand is used to check for conformance to programming model requirements, the <xref:System.Security.Permissions.HostProtectionAttribute> is not a security permission.","leadings":["","> "],"nodes":[{"content":" The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.  Although a link demand is used to check for conformance to programming model requirements, the <xref:System.Security.Permissions.HostProtectionAttribute> is not a security permission.","pos":[13,309],"nodes":[{"content":"The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.","pos":[1,111]},{"content":"Although a link demand is used to check for conformance to programming model requirements, the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> is not a security permission.","pos":[113,296],"source":"  Although a link demand is used to check for conformance to programming model requirements, the <xref:System.Security.Permissions.HostProtectionAttribute> is not a security permission."}]}]},{"pos":[757,845],"content":"If the host does not have programming model requirements, the link demands do not occur.","nodes":[{"content":"If the host does not have programming model requirements, the link demands do not occur.","pos":[0,88]}]},{"pos":[852,892],"content":"This attribute identifies the following:","nodes":[{"content":"This attribute identifies the following:","pos":[0,40]}]},{"pos":[902,990],"content":"Methods or classes that do not fit the host programming model, but are otherwise benign.","nodes":[{"content":"Methods or classes that do not fit the host programming model, but are otherwise benign.","pos":[0,88]}]},{"pos":[1000,1119],"content":"Methods or classes that do not fit the host programming model and could lead to destabilizing server-managed user code.","nodes":[{"content":"Methods or classes that do not fit the host programming model and could lead to destabilizing server-managed user code.","pos":[0,119]}]},{"pos":[1129,1256],"content":"Methods or classes that do not fit the host programming model and could lead to a destabilization of the server process itself.","nodes":[{"content":"Methods or classes that do not fit the host programming model and could lead to a destabilization of the server process itself.","pos":[0,127]}]},{"pos":[1264,1728],"content":"[!NOTE]\n If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories. The .NET Framework class library members with this attribute cause only the immediate caller to be checked.  Your library member must also cause a check of its immediate caller in the same manner.","leadings":["","> "],"nodes":[{"content":" If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories. The .NET Framework class library members with this attribute cause only the immediate caller to be checked.  Your library member must also cause a check of its immediate caller in the same manner.","pos":[8,462],"nodes":[{"content":"If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionResource&gt;</ph> resource categories.","pos":[1,257],"source":" If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories."},{"content":"The .NET Framework class library members with this attribute cause only the immediate caller to be checked.","pos":[258,365]},{"content":"Your library member must also cause a check of its immediate caller in the same manner.","pos":[367,454]}]}]},{"pos":[1736,2180],"content":"[!NOTE]\n Do not use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to create a native image of assemblies that are protected by the <xref:System.Security.Permissions.HostProtectionAttribute>. In a full-trust environment, the image is always loaded, without regard to the <xref:System.Security.Permissions.HostProtectionAttribute>, and in a partial-trust environment the image is not loaded.","leadings":["","> "],"nodes":[{"content":" Do not use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to create a native image of assemblies that are protected by the <xref:System.Security.Permissions.HostProtectionAttribute>. In a full-trust environment, the image is always loaded, without regard to the <xref:System.Security.Permissions.HostProtectionAttribute>, and in a partial-trust environment the image is not loaded.","pos":[8,442],"nodes":[{"content":"Do not use the <bpt id=\"p1\">[</bpt>Ngen.exe (Native Image Generator)<ept id=\"p1\">](~/docs/framework/tools/ngen-exe-native-image-generator.md)</ept> to create a native image of assemblies that are protected by the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph>.","pos":[1,235],"source":" Do not use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to create a native image of assemblies that are protected by the <xref:System.Security.Permissions.HostProtectionAttribute>."},{"content":"In a full-trust environment, the image is always loaded, without regard to the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph>, and in a partial-trust environment the image is not loaded.","pos":[236,434],"source":" In a full-trust environment, the image is always loaded, without regard to the <xref:System.Security.Permissions.HostProtectionAttribute>, and in a partial-trust environment the image is not loaded."}]}]}],"pos":[1584,3788],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with default values.","nodes":[{"pos":[0,133],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.HostProtectionAttribute\"&gt;&lt;/xref&gt;</ph> class with default values.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with default values."}],"pos":[10410,10544],"yaml":true},{"content":"This constructor creates a <xref:System.Security.Permissions.HostProtectionAttribute> with all Boolean properties set to `false`.","nodes":[{"pos":[0,129],"content":"This constructor creates a <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute&gt;</ph> with all Boolean properties set to <ph id=\"ph2\">`false`</ph>.","source":"This constructor creates a <xref:System.Security.Permissions.HostProtectionAttribute> with all Boolean properties set to `false`."}],"pos":[10555,10685],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref> value.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.HostProtectionAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;&lt;/xref&gt;</ph> value.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref> value."}],"pos":[12256,12459],"yaml":true},{"content":"This constructor should not be used. It is intended for infrastructure use.","nodes":[{"pos":[0,75],"content":"This constructor should not be used. It is intended for infrastructure use.","nodes":[{"content":"This constructor should not be used. It is intended for infrastructure use.","pos":[0,75],"nodes":[{"content":"This constructor should not be used.","pos":[0,36]},{"content":"It is intended for infrastructure use.","pos":[37,75]}]}]}],"pos":[12470,12546],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.","nodes":[{"pos":[0,82],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."}],"pos":[12760,12843],"yaml":true},{"content":"<code>action</code> is not <xref href=\"System.Security.Permissions.SecurityAction.LinkDemand\"></xref>.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">&lt;code&gt;action&lt;/code&gt;</ph> is not <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.SecurityAction.LinkDemand\"&gt;&lt;/xref&gt;</ph>.","source":"<code>action</code> is not <xref href=\"System.Security.Permissions.SecurityAction.LinkDemand\"></xref>."}],"pos":[13022,13125],"yaml":true},{"content":"Creates and returns a new host protection permission.","nodes":[{"pos":[0,53],"content":"Creates and returns a new host protection permission.","nodes":[{"content":"Creates and returns a new host protection permission.","pos":[0,53]}]}],"pos":[14362,14416],"yaml":true},{"content":"This method should be called only by the security system, never by application code.  \n  \n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.","nodes":[{"pos":[0,84],"content":"This method should be called only by the security system, never by application code.","nodes":[{"content":"This method should be called only by the security system, never by application code.","pos":[0,84]}]},{"pos":[91,308],"content":"At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.","nodes":[{"content":"At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.","pos":[0,217],"nodes":[{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[0,91]},{"content":"Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.","pos":[92,217]}]}]}],"pos":[14427,14740],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.IPermission\"></xref> that corresponds to the current attribute.","nodes":[{"pos":[0,94],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph> that corresponds to the current attribute.","source":"An <xref href=\"System.Security.IPermission\"></xref> that corresponds to the current attribute."}],"pos":[14918,15013],"yaml":true},{"content":"Gets or sets a value indicating whether external process management is exposed.","nodes":[{"pos":[0,79],"content":"Gets or sets a value indicating whether external process management is exposed.","nodes":[{"content":"Gets or sets a value indicating whether external process management is exposed.","pos":[0,79]}]}],"pos":[16363,16443],"yaml":true},{"content":"Code that exposes external process management might create or destroy other processes.","nodes":[{"pos":[0,86],"content":"Code that exposes external process management might create or destroy other processes.","nodes":[{"content":"Code that exposes external process management might create or destroy other processes.","pos":[0,86]}]}],"pos":[16454,16541],"yaml":true,"extradata":"MT"},{"content":"`true` if external process management is exposed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,93],"content":"`true` if external process management is exposed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if external process management is exposed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,69],"source":"`true` if external process management is exposed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[70,93],"source":" The default is `false`."}]}],"pos":[17678,17774],"yaml":true},{"content":"Gets or sets a value indicating whether external threading is exposed.","nodes":[{"pos":[0,70],"content":"Gets or sets a value indicating whether external threading is exposed.","nodes":[{"content":"Gets or sets a value indicating whether external threading is exposed.","pos":[0,70]}]}],"pos":[19115,19186],"yaml":true},{"content":"Code that exposes external threading creates or manipulates threads other than its own, which might be harmful to the host.","nodes":[{"pos":[0,123],"content":"Code that exposes external threading creates or manipulates threads other than its own, which might be harmful to the host.","nodes":[{"content":"Code that exposes external threading creates or manipulates threads other than its own, which might be harmful to the host.","pos":[0,123]}]}],"pos":[19197,19321],"yaml":true,"extradata":"MT"},{"content":"`true` if external threading is exposed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,84],"content":"`true` if external threading is exposed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if external threading is exposed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,60],"source":"`true` if external threading is exposed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[61,84],"source":" The default is `false`."}]}],"pos":[20454,20541],"yaml":true},{"content":"Gets or sets a value indicating whether resources might leak memory if the operation is terminated.","nodes":[{"pos":[0,99],"content":"Gets or sets a value indicating whether resources might leak memory if the operation is terminated.","nodes":[{"content":"Gets or sets a value indicating whether resources might leak memory if the operation is terminated.","pos":[0,99]}]}],"pos":[21862,21962],"yaml":true},{"content":"Code might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.","nodes":[{"pos":[0,140],"content":"Code might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.","nodes":[{"content":"Code might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.","pos":[0,140]}]}],"pos":[21973,22114],"yaml":true,"extradata":"MT"},{"content":"`true` if resources might leak memory on termination; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if resources might leak memory on termination; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if resources might leak memory on termination; otherwise, `false`."}],"pos":[22236,22312],"yaml":true},{"content":"Gets or sets flags specifying categories of functionality that are potentially harmful to the host.","nodes":[{"pos":[0,99],"content":"Gets or sets flags specifying categories of functionality that are potentially harmful to the host.","nodes":[{"content":"Gets or sets flags specifying categories of functionality that are potentially harmful to the host.","pos":[0,99]}]}],"pos":[23600,23700],"yaml":true},{"content":"The <xref:System.Security.Permissions.HostProtectionResource> flags specify the resources exposed by the method or class that are potentially harmful to the host.","nodes":[{"pos":[0,162],"content":"The <xref:System.Security.Permissions.HostProtectionResource> flags specify the resources exposed by the method or class that are potentially harmful to the host.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionResource&gt;</ph> flags specify the resources exposed by the method or class that are potentially harmful to the host.","pos":[0,162],"source":"The <xref:System.Security.Permissions.HostProtectionResource> flags specify the resources exposed by the method or class that are potentially harmful to the host."}]}],"pos":[23711,23874],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref> values. The default is <xref href=\"System.Security.Permissions.HostProtectionResource.None\"></xref>.","nodes":[{"pos":[0,201],"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref> values. The default is <xref href=\"System.Security.Permissions.HostProtectionResource.None\"></xref>.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.HostProtectionResource\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,108],"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.HostProtectionResource.None\"&gt;&lt;/xref&gt;</ph>.","pos":[109,201],"source":" The default is <xref href=\"System.Security.Permissions.HostProtectionResource.None\"></xref>."}]}],"pos":[25073,25275],"yaml":true},{"content":"Gets or sets a value indicating whether the security infrastructure is exposed.","nodes":[{"pos":[0,79],"content":"Gets or sets a value indicating whether the security infrastructure is exposed.","nodes":[{"content":"Gets or sets a value indicating whether the security infrastructure is exposed.","pos":[0,79]}]}],"pos":[26636,26716],"yaml":true},{"content":"The use of a <xref:System.Security.Principal.WindowsIdentity> object to impersonate a user is an example of exposing the security infrastructure.","nodes":[{"pos":[0,145],"content":"The use of a <xref:System.Security.Principal.WindowsIdentity> object to impersonate a user is an example of exposing the security infrastructure.","nodes":[{"content":"The use of a <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object to impersonate a user is an example of exposing the security infrastructure.","pos":[0,145],"source":"The use of a <xref:System.Security.Principal.WindowsIdentity> object to impersonate a user is an example of exposing the security infrastructure."}]}],"pos":[26727,26873],"yaml":true,"extradata":"MT"},{"content":"`true` if the security infrastructure is exposed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,93],"content":"`true` if the security infrastructure is exposed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the security infrastructure is exposed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,69],"source":"`true` if the security infrastructure is exposed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[70,93],"source":" The default is `false`."}]}],"pos":[28082,28178],"yaml":true},{"content":"Gets or sets a value indicating whether self-affecting process management is exposed.","nodes":[{"pos":[0,85],"content":"Gets or sets a value indicating whether self-affecting process management is exposed.","nodes":[{"content":"Gets or sets a value indicating whether self-affecting process management is exposed.","pos":[0,85]}]}],"pos":[29639,29725],"yaml":true},{"content":"Self-affecting process management code might exit the current process, terminating the server.","nodes":[{"pos":[0,94],"content":"Self-affecting process management code might exit the current process, terminating the server.","nodes":[{"content":"Self-affecting process management code might exit the current process, terminating the server.","pos":[0,94]}]}],"pos":[29736,29831],"yaml":true,"extradata":"MT"},{"content":"`true` if self-affecting process management is exposed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,99],"content":"`true` if self-affecting process management is exposed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if self-affecting process management is exposed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,75],"source":"`true` if self-affecting process management is exposed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[76,99],"source":" The default is `false`."}]}],"pos":[30978,31080],"yaml":true},{"content":"Gets or sets a value indicating whether self-affecting threading is exposed.","nodes":[{"pos":[0,76],"content":"Gets or sets a value indicating whether self-affecting threading is exposed.","nodes":[{"content":"Gets or sets a value indicating whether self-affecting threading is exposed.","pos":[0,76]}]}],"pos":[32456,32533],"yaml":true},{"content":"Self-affecting threading manipulates threads in a way that only affects user code.","nodes":[{"pos":[0,82],"content":"Self-affecting threading manipulates threads in a way that only affects user code.","nodes":[{"content":"Self-affecting threading manipulates threads in a way that only affects user code.","pos":[0,82]}]}],"pos":[32544,32627],"yaml":true,"extradata":"MT"},{"content":"`true` if self-affecting threading is exposed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,90],"content":"`true` if self-affecting threading is exposed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if self-affecting threading is exposed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,66],"source":"`true` if self-affecting threading is exposed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[67,90],"source":" The default is `false`."}]}],"pos":[33770,33863],"yaml":true},{"content":"Gets or sets a value indicating whether shared state is exposed.","nodes":[{"pos":[0,64],"content":"Gets or sets a value indicating whether shared state is exposed.","nodes":[{"content":"Gets or sets a value indicating whether shared state is exposed.","pos":[0,64]}]}],"pos":[35171,35236],"yaml":true},{"content":"When <xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A> is `true`, it indicates that a state is exposed that might be shared between threads.","nodes":[{"pos":[0,164],"content":"When <ph id=\"ph1\">&lt;xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, it indicates that a state is exposed that might be shared between threads.","source":"When <xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A> is `true`, it indicates that a state is exposed that might be shared between threads."}],"pos":[35247,35412],"yaml":true,"extradata":"MT"},{"content":"`true` if shared state is exposed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,78],"content":"`true` if shared state is exposed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if shared state is exposed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,54],"source":"`true` if shared state is exposed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[55,78],"source":" The default is `false`."}]}],"pos":[36533,36614],"yaml":true},{"content":"Gets or sets a value indicating whether synchronization is exposed.","nodes":[{"pos":[0,67],"content":"Gets or sets a value indicating whether synchronization is exposed.","nodes":[{"content":"Gets or sets a value indicating whether synchronization is exposed.","pos":[0,67]}]}],"pos":[37935,38003],"yaml":true},{"content":"`true` if synchronization is exposed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,81],"content":"`true` if synchronization is exposed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if synchronization is exposed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,57],"source":"`true` if synchronization is exposed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[58,81],"source":" The default is `false`."}]}],"pos":[39146,39230],"yaml":true},{"content":"Gets or sets a value indicating whether the user interface is exposed.","nodes":[{"pos":[0,70],"content":"Gets or sets a value indicating whether the user interface is exposed.","nodes":[{"content":"Gets or sets a value indicating whether the user interface is exposed.","pos":[0,70]}]}],"pos":[40477,40548],"yaml":true},{"content":"`true` if the user interface is exposed; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,84],"content":"`true` if the user interface is exposed; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the user interface is exposed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,60],"source":"`true` if the user interface is exposed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[61,84],"source":" The default is `false`."}]}],"pos":[41665,41752],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.HostProtectionAttribute\n  commentId: T:System.Security.Permissions.HostProtectionAttribute\n  id: HostProtectionAttribute\n  children:\n  - System.Security.Permissions.HostProtectionAttribute.#ctor\n  - System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.HostProtectionAttribute.CreatePermission\n  - System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n  - System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n  - System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n  - System.Security.Permissions.HostProtectionAttribute.Resources\n  - System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n  - System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n  - System.Security.Permissions.HostProtectionAttribute.SharedState\n  - System.Security.Permissions.HostProtectionAttribute.Synchronization\n  - System.Security.Permissions.HostProtectionAttribute.UI\n  langs:\n  - csharp\n  name: HostProtectionAttribute\n  nameWithType: HostProtectionAttribute\n  fullName: System.Security.Permissions.HostProtectionAttribute\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.\n  remarks: \"This attribute affects only unmanaged applications that host the common language runtime and implement host protection, such as SQL Server. If the code is run in a client application or on a server that is not host-protected, the attribute \\\"evaporates\\\"; it is not detected and therefore not applied. When applied, the security action results in the creation of a link demand based on the host resources the class or method exposes.  \\n  \\n> [!IMPORTANT]\\n>  The purpose of this attribute is to enforce host-specific programming model guidelines, not security behavior.  Although a link demand is used to check for conformance to programming model requirements, the <xref:System.Security.Permissions.HostProtectionAttribute> is not a security permission.  \\n  \\n If the host does not have programming model requirements, the link demands do not occur.  \\n  \\n This attribute identifies the following:  \\n  \\n-   Methods or classes that do not fit the host programming model, but are otherwise benign.  \\n  \\n-   Methods or classes that do not fit the host programming model and could lead to destabilizing server-managed user code.  \\n  \\n-   Methods or classes that do not fit the host programming model and could lead to a destabilization of the server process itself.  \\n  \\n> [!NOTE]\\n>  If you are creating a class library that is to be called by applications that may execute in a host protected environment, you should apply this attribute to members that expose <xref:System.Security.Permissions.HostProtectionResource> resource categories. The .NET Framework class library members with this attribute cause only the immediate caller to be checked.  Your library member must also cause a check of its immediate caller in the same manner.  \\n  \\n> [!NOTE]\\n>  Do not use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to create a native image of assemblies that are protected by the <xref:System.Security.Permissions.HostProtectionAttribute>. In a full-trust environment, the image is always loaded, without regard to the <xref:System.Security.Permissions.HostProtectionAttribute>, and in a partial-trust environment the image is not loaded.\"\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with a variety of <xref:System.Security.Permissions.HostProtectionResource> values.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#1)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#1)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class HostProtectionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor\n  commentId: M:System.Security.Permissions.HostProtectionAttribute.#ctor\n  id: '#ctor'\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: HostProtectionAttribute()\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute()\n  fullName: HostProtectionAttribute.HostProtectionAttribute()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with default values.\n  remarks: This constructor creates a <xref:System.Security.Permissions.HostProtectionAttribute> with all Boolean properties set to `false`.\n  syntax:\n    content: public HostProtectionAttribute ();\n    parameters: []\n  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  commentId: M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: HostProtectionAttribute(SecurityAction)\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)\n  fullName: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.HostProtectionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref> value.\n  remarks: This constructor should not be used. It is intended for infrastructure use.\n  syntax:\n    content: public HostProtectionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.HostProtectionAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>action</code> is not <xref href=\"System.Security.Permissions.SecurityAction.LinkDemand\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission\n  commentId: M:System.Security.Permissions.HostProtectionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: HostProtectionAttribute.CreatePermission()\n  fullName: HostProtectionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new host protection permission.\n  remarks: \"This method should be called only by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission corresponding to the attribute that this method returns.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that corresponds to the current attribute.\n  overload: System.Security.Permissions.HostProtectionAttribute.CreatePermission*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n  id: ExternalProcessMgmt\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: ExternalProcessMgmt\n  nameWithType: HostProtectionAttribute.ExternalProcessMgmt\n  fullName: HostProtectionAttribute.ExternalProcessMgmt\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether external process management is exposed.\n  remarks: Code that exposes external process management might create or destroy other processes.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#5)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#5)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#5)]\"\n  syntax:\n    content: public bool ExternalProcessMgmt { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if external process management is exposed; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n  id: ExternalThreading\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: ExternalThreading\n  nameWithType: HostProtectionAttribute.ExternalThreading\n  fullName: HostProtectionAttribute.ExternalThreading\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether external threading is exposed.\n  remarks: Code that exposes external threading creates or manipulates threads other than its own, which might be harmful to the host.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.ExternalThreading%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#6)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#6)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#6)]\"\n  syntax:\n    content: public bool ExternalThreading { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if external threading is exposed; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n  id: MayLeakOnAbort\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: MayLeakOnAbort\n  nameWithType: HostProtectionAttribute.MayLeakOnAbort\n  fullName: HostProtectionAttribute.MayLeakOnAbort\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether resources might leak memory if the operation is terminated.\n  remarks: Code might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.\n  syntax:\n    content: public bool MayLeakOnAbort { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if resources might leak memory on termination; otherwise, `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.Resources\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.Resources\n  id: Resources\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: Resources\n  nameWithType: HostProtectionAttribute.Resources\n  fullName: HostProtectionAttribute.Resources\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets flags specifying categories of functionality that are potentially harmful to the host.\n  remarks: The <xref:System.Security.Permissions.HostProtectionResource> flags specify the resources exposed by the method or class that are potentially harmful to the host.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#2)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#2)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#2)]\"\n  syntax:\n    content: public System.Security.Permissions.HostProtectionResource Resources { get; set; }\n    return:\n      type: System.Security.Permissions.HostProtectionResource\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.HostProtectionResource\"></xref> values. The default is <xref href=\"System.Security.Permissions.HostProtectionResource.None\"></xref>.\n  overload: System.Security.Permissions.HostProtectionAttribute.Resources*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n  id: SecurityInfrastructure\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: SecurityInfrastructure\n  nameWithType: HostProtectionAttribute.SecurityInfrastructure\n  fullName: HostProtectionAttribute.SecurityInfrastructure\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the security infrastructure is exposed.\n  remarks: The use of a <xref:System.Security.Principal.WindowsIdentity> object to impersonate a user is an example of exposing the security infrastructure.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#4)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#4)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#4)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public bool SecurityInfrastructure { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the security infrastructure is exposed; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n  id: SelfAffectingProcessMgmt\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: SelfAffectingProcessMgmt\n  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt\n  fullName: HostProtectionAttribute.SelfAffectingProcessMgmt\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether self-affecting process management is exposed.\n  remarks: Self-affecting process management code might exit the current process, terminating the server.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#2)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#2)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#2)]\"\n  syntax:\n    content: public bool SelfAffectingProcessMgmt { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if self-affecting process management is exposed; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n  id: SelfAffectingThreading\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: SelfAffectingThreading\n  nameWithType: HostProtectionAttribute.SelfAffectingThreading\n  fullName: HostProtectionAttribute.SelfAffectingThreading\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether self-affecting threading is exposed.\n  remarks: Self-affecting threading manipulates threads in a way that only affects user code.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]\"\n  syntax:\n    content: public bool SelfAffectingThreading { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if self-affecting threading is exposed; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.SharedState\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.SharedState\n  id: SharedState\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: SharedState\n  nameWithType: HostProtectionAttribute.SharedState\n  fullName: HostProtectionAttribute.SharedState\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether shared state is exposed.\n  remarks: When <xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A> is `true`, it indicates that a state is exposed that might be shared between threads.\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.SharedState%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]\"\n  syntax:\n    content: public bool SharedState { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if shared state is exposed; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.SharedState*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.Synchronization\n  id: Synchronization\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: Synchronization\n  nameWithType: HostProtectionAttribute.Synchronization\n  fullName: HostProtectionAttribute.Synchronization\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether synchronization is exposed.\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.Synchronization%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#6)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#6)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#6)]\"\n  syntax:\n    content: public bool Synchronization { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if synchronization is exposed; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.Synchronization*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.HostProtectionAttribute.UI\n  commentId: P:System.Security.Permissions.HostProtectionAttribute.UI\n  id: UI\n  parent: System.Security.Permissions.HostProtectionAttribute\n  langs:\n  - csharp\n  name: UI\n  nameWithType: HostProtectionAttribute.UI\n  fullName: HostProtectionAttribute.UI\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets a value indicating whether the user interface is exposed.\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of the <xref:System.Security.Permissions.HostProtectionAttribute> attribute with the <xref:System.Security.Permissions.HostProtectionAttribute.UI%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.HostProtectionAttribute> class.  \\n  \\n [!code-cpp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CPP/hostprotectionattribute.cpp#3)]\\n [!code-csharp[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/CS/hostprotectionattribute.cs#3)]\\n [!code-vb[System.Security.Permissions.HostProtectionAttribute.1.1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.HostProtectionAttribute.1.1/VB/hostprotectionattribute.vb#3)]\"\n  syntax:\n    content: public bool UI { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user interface is exposed; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Permissions.HostProtectionAttribute.UI*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  parent: System.Security.Permissions\n  isExternal: false\n  name: CodeAccessSecurityAttribute\n  nameWithType: CodeAccessSecurityAttribute\n  fullName: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: HostProtectionAttribute()\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute()\n  fullName: HostProtectionAttribute.HostProtectionAttribute()\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: HostProtectionAttribute(SecurityAction)\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)\n  fullName: HostProtectionAttribute.HostProtectionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: HostProtectionAttribute.CreatePermission()\n  fullName: HostProtectionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: ExternalProcessMgmt\n  nameWithType: HostProtectionAttribute.ExternalProcessMgmt\n  fullName: HostProtectionAttribute.ExternalProcessMgmt\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: ExternalThreading\n  nameWithType: HostProtectionAttribute.ExternalThreading\n  fullName: HostProtectionAttribute.ExternalThreading\n- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: MayLeakOnAbort\n  nameWithType: HostProtectionAttribute.MayLeakOnAbort\n  fullName: HostProtectionAttribute.MayLeakOnAbort\n- uid: System.Security.Permissions.HostProtectionAttribute.Resources\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: Resources\n  nameWithType: HostProtectionAttribute.Resources\n  fullName: HostProtectionAttribute.Resources\n- uid: System.Security.Permissions.HostProtectionResource\n  parent: System.Security.Permissions\n  isExternal: false\n  name: HostProtectionResource\n  nameWithType: HostProtectionResource\n  fullName: System.Security.Permissions.HostProtectionResource\n- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SecurityInfrastructure\n  nameWithType: HostProtectionAttribute.SecurityInfrastructure\n  fullName: HostProtectionAttribute.SecurityInfrastructure\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SelfAffectingProcessMgmt\n  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt\n  fullName: HostProtectionAttribute.SelfAffectingProcessMgmt\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SelfAffectingThreading\n  nameWithType: HostProtectionAttribute.SelfAffectingThreading\n  fullName: HostProtectionAttribute.SelfAffectingThreading\n- uid: System.Security.Permissions.HostProtectionAttribute.SharedState\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SharedState\n  nameWithType: HostProtectionAttribute.SharedState\n  fullName: HostProtectionAttribute.SharedState\n- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: Synchronization\n  nameWithType: HostProtectionAttribute.Synchronization\n  fullName: HostProtectionAttribute.Synchronization\n- uid: System.Security.Permissions.HostProtectionAttribute.UI\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: UI\n  nameWithType: HostProtectionAttribute.UI\n  fullName: HostProtectionAttribute.UI\n- uid: System.Security.Permissions.HostProtectionAttribute.#ctor*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: HostProtectionAttribute\n  nameWithType: HostProtectionAttribute.HostProtectionAttribute\n  fullName: HostProtectionAttribute.HostProtectionAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.CreatePermission*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: HostProtectionAttribute.CreatePermission\n  fullName: HostProtectionAttribute.CreatePermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: ExternalProcessMgmt\n  nameWithType: HostProtectionAttribute.ExternalProcessMgmt\n  fullName: HostProtectionAttribute.ExternalProcessMgmt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.ExternalThreading*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: ExternalThreading\n  nameWithType: HostProtectionAttribute.ExternalThreading\n  fullName: HostProtectionAttribute.ExternalThreading\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: MayLeakOnAbort\n  nameWithType: HostProtectionAttribute.MayLeakOnAbort\n  fullName: HostProtectionAttribute.MayLeakOnAbort\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.Resources*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: Resources\n  nameWithType: HostProtectionAttribute.Resources\n  fullName: HostProtectionAttribute.Resources\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SecurityInfrastructure\n  nameWithType: HostProtectionAttribute.SecurityInfrastructure\n  fullName: HostProtectionAttribute.SecurityInfrastructure\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SelfAffectingProcessMgmt\n  nameWithType: HostProtectionAttribute.SelfAffectingProcessMgmt\n  fullName: HostProtectionAttribute.SelfAffectingProcessMgmt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SelfAffectingThreading\n  nameWithType: HostProtectionAttribute.SelfAffectingThreading\n  fullName: HostProtectionAttribute.SelfAffectingThreading\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.SharedState*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: SharedState\n  nameWithType: HostProtectionAttribute.SharedState\n  fullName: HostProtectionAttribute.SharedState\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.Synchronization*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: Synchronization\n  nameWithType: HostProtectionAttribute.Synchronization\n  fullName: HostProtectionAttribute.Synchronization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Security.Permissions.HostProtectionAttribute.UI*\n  parent: System.Security.Permissions.HostProtectionAttribute\n  isExternal: false\n  name: UI\n  nameWithType: HostProtectionAttribute.UI\n  fullName: HostProtectionAttribute.UI\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/HostProtectionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Security.Permissions.SecurityAttribute.Action\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Action\n  nameWithType: SecurityAttribute.Action\n  fullName: SecurityAttribute.Action\n- uid: System.Security.Permissions.SecurityAttribute.Unrestricted\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Unrestricted\n  nameWithType: SecurityAttribute.Unrestricted\n  fullName: SecurityAttribute.Unrestricted\n"}