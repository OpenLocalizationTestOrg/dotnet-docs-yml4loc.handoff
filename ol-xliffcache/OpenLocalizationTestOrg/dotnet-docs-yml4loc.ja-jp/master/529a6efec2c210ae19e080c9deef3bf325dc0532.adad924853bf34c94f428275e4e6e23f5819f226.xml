{"nodes":[{"content":"Provides the base class for enumerations.","nodes":[{"pos":[0,41],"content":"Provides the base class for enumerations.","nodes":[{"content":"Provides the base class for enumerations.","pos":[0,41]}]}],"pos":[3124,3166],"yaml":true},{"content":"An enumeration is a set of named constants whose underlying type is any integral type. If no underlying type is explicitly declared, <xref:System.Int32> is used. <xref:System.Enum> is the base class for all enumerations in the .NET Framework. Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.  \n  \n <xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.  \n  \n You can also treat an enumeration as a bit field. For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.  \n  \n In this topic:  \n  \n [Creating an enumeration type](#Creating)   \n [Instantiating an enumeration type](#Instantiating)   \n [Enumeration best practices](#BestPractices)   \n [Performing operations with enumerations](#Operations)   \n [Performing conversions](#conversions)  \n [Parsing enumeration values](#parsing)  \n [Formatting enumeration values](#formatting)  \n[Iterating enumeration members](#iterating)  \n[Non-exclusive members and the Flags attribute](#Flags)  \n[Adding enumeration methods](#methods)  \n  \n<a name=\"Creating\"></a>   \n## Creating an enumeration type  \n Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values. The following example illustrates the syntax used by C# and Visual Basic to define an enumeration. It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`. Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.  \n  \n [!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]\n [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]  \n  \n> [!WARNING]\n>  You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>. Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.  \n  \n<a name=\"Instantiating\"></a>   \n## Instantiating an enumeration type  \n You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it. The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.  \n  \n [!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]\n [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]  \n  \n You can also instantiate an enumeration value in the following ways:  \n  \n-   By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value. The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.  \n  \n     [!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]\n     [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]  \n  \n-   By calling its implicit default constructor. As the following example shows, in this case the underlying value of the enumeration instance is 0. However, this is not necessarily the value of a valid constant in the enumeration.  \n  \n     [!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]\n     [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]  \n  \n-   By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration. For more information, see the [Parsing Enumeration Values](#parsing) section.  \n  \n-   By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type. For more information, see the [Performing Conversions](#conversions) section.  \n  \n<a name=\"BestPractices\"></a>   \n## Enumeration best practices  \n We recommend that you use the following best practices when you define enumeration types:  \n  \n-   If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant. By default, the memory used for the enumeration is initialized to zero by the common language runtime. Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.  \n  \n-   If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it. If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.  \n  \n-   Do not specify enumerated constants that are reserved for future use.  \n  \n-   When you define a method or property that takes an enumerated constant as a value, consider validating the value. The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.  \n  \n Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section.  \n  \n<a name=\"Operations\"></a>   \n## Performing operations with enumerations  \n You cannot define new methods when you are creating an enumeration. However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class. The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.  \n  \n<a name=\"conversions\"></a>   \n### Performing conversions  \n You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator. The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.  \n  \n [!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]\n [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]  \n  \n The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value. The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value. Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.  \n  \n [!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]\n [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]  \n  \n When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration. To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion. The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.  \n  \n [!code-csharp[System.Enum.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)]\n [!code-vb[System.Enum.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)]  \n  \n Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions. The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method to convert an enumeration value to its underlying type. Note that this example does not require the underlying type of the enumeration to be known at compile time.  \n  \n [!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]\n [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]  \n  \n<a name=\"parsing\"></a>   \n### Parsing enumeration values  \n The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value. The string representation can be either the name or the underlying value of an enumeration constant. Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type. To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value. The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=fullName> methods. Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.  \n  \n [!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]\n [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]  \n  \n<a name=\"formatting\"></a>   \n### Formatting enumeration values  \n You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method. You can use a format string to control the precise way in which an enumeration value is represented as a string. For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). The following example uses each of the supported enumeration format strings (\"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.  \n  \n [!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]\n [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]  \n  \n<a name=\"iterating\"></a>   \n### Iterating enumeration members  \n The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct. However, you can enumerate members in either of two ways.  \n  \n-   You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members. Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value. The following example illustrates this approach.  \n  \n     [!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]\n     [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]  \n  \n-   You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration. Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value. The following example illustrates this approach.  \n  \n     [!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]\n     [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]  \n  \n<a name=\"Flags\"></a>   \n## Non-exclusive members and the Flags attribute  \n One common use of an enumeration is to represent a set of mutually exclusive values. For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`. It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.  \n  \n In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value. The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields. For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household. It can be defined as follows.  \n  \n [!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]\n [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]  \n  \n The `Pets` enumeration can then be used as shown in the following example.  \n  \n [!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]\n [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]  \n  \n The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.  \n  \n-   Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.  \n  \n-   Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on. This means the individual flags in combined enumeration constants do not overlap.  \n  \n-   Consider creating an enumerated constant for commonly used flag combinations. For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags. In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.  \n  \n-   Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.  \n  \n-   A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.  \n  \n     [!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]\n     [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]  \n  \n     It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant. This is illustrated in the following example.  \n  \n     [!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]\n     [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]  \n  \n-   Use `None` as the name of the flag enumerated constant whose value is zero. You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero. However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set. This is illustrated in the following example.  \n  \n     [!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]\n     [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]  \n  \n-   Do not define an enumeration value solely to mirror the state of the enumeration itself. For example, do not define an enumerated constant that merely marks the end of the enumeration. If you need to determine the last value of the enumeration, check for that value explicitly. In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.  \n  \n<a name=\"methods\"></a>   \n## Adding enumeration methods  \n Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.  However, you can use extension methods to add functionality to a particular enumeration type.  \n  \n In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class. An extension method named `Passing` is added to the `Grades` type so that each instance of that type now \"knows\" whether it represents a passing grade or not.       The `Extensions` class also contains a static read-write variable that defines the minimum passing grade. The return value of the `Passing` extension method reflects the current value of that variable.  \n  \n [!code-csharp[System.Enum.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)]\n [!code-vb[System.Enum.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)]","nodes":[{"pos":[0,355],"content":"An enumeration is a set of named constants whose underlying type is any integral type. If no underlying type is explicitly declared, <xref:System.Int32> is used. <xref:System.Enum> is the base class for all enumerations in the .NET Framework. Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.","nodes":[{"content":"An enumeration is a set of named constants whose underlying type is any integral type.","pos":[0,86]},{"content":"If no underlying type is explicitly declared, <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> is used.","pos":[87,161],"source":" If no underlying type is explicitly declared, <xref:System.Int32> is used."},{"content":"<ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph> is the base class for all enumerations in the .NET Framework.","pos":[162,242],"source":" <xref:System.Enum> is the base class for all enumerations in the .NET Framework."},{"content":"Enumeration types are defined by the <ph id=\"ph1\">`enum`</ph> keyword in C# and the <ph id=\"ph2\">`Enum`</ph>...<ph id=\"ph3\">`End Enum`</ph> construct in Visual Basic.","pos":[243,355],"source":" Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic."}]},{"pos":[362,644],"content":"<xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.","pos":[0,282],"source":"<xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value."}]},{"pos":[651,838],"content":"You can also treat an enumeration as a bit field. For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.","nodes":[{"content":"You can also treat an enumeration as a bit field.","pos":[0,49]},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>Non-Exclusive Members and the Flags Attribute<ept id=\"p1\">](#Flags)</ept> section and the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> topic.","pos":[50,187],"source":" For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic."}]},{"pos":[845,859],"content":"In this topic:","nodes":[{"content":"In this topic:","pos":[0,14]}]},{"pos":[866,1349],"content":"[Creating an enumeration type](#Creating)   \n [Instantiating an enumeration type](#Instantiating)   \n [Enumeration best practices](#BestPractices)   \n [Performing operations with enumerations](#Operations)   \n [Performing conversions](#conversions)  \n [Parsing enumeration values](#parsing)  \n [Formatting enumeration values](#formatting)  \n[Iterating enumeration members](#iterating)  \n[Non-exclusive members and the Flags attribute](#Flags)  \n[Adding enumeration methods](#methods)","nodes":[{"content":"<bpt id=\"p1\">[</bpt>Creating an enumeration type<ept id=\"p1\">](#Creating)</ept><ph id=\"ph1\"> </ph>","pos":[0,42],"source":"[Creating an enumeration type](#Creating) "},{"content":"<bpt id=\"p1\"> [</bpt>Instantiating an enumeration type<ept id=\"p1\">](#Instantiating)</ept><ph id=\"ph1\"> </ph>","pos":[45,98],"source":" [Instantiating an enumeration type](#Instantiating) "},{"content":"<bpt id=\"p1\"> [</bpt>Enumeration best practices<ept id=\"p1\">](#BestPractices)</ept><ph id=\"ph1\"> </ph>","pos":[101,147],"source":" [Enumeration best practices](#BestPractices) "},{"content":"<bpt id=\"p1\"> [</bpt>Performing operations with enumerations<ept id=\"p1\">](#Operations)</ept><ph id=\"ph1\"> </ph>","pos":[150,206],"source":" [Performing operations with enumerations](#Operations) "},{"content":"<bpt id=\"p1\"> [</bpt>Performing conversions<ept id=\"p1\">](#conversions)</ept>","pos":[209,248],"source":" [Performing conversions](#conversions)"},{"content":"<bpt id=\"p1\"> [</bpt>Parsing enumeration values<ept id=\"p1\">](#parsing)</ept>","pos":[251,290],"source":" [Parsing enumeration values](#parsing)"},{"content":"<bpt id=\"p1\"> [</bpt>Formatting enumeration values<ept id=\"p1\">](#formatting)</ept>","pos":[293,338],"source":" [Formatting enumeration values](#formatting)"},{"content":"<bpt id=\"p1\">[</bpt>Iterating enumeration members<ept id=\"p1\">](#iterating)</ept>","pos":[341,384],"source":"[Iterating enumeration members](#iterating)"},{"content":"<bpt id=\"p1\">[</bpt>Non-exclusive members and the Flags attribute<ept id=\"p1\">](#Flags)</ept>","pos":[387,442],"source":"[Non-exclusive members and the Flags attribute](#Flags)"},{"content":"<bpt id=\"p1\">[</bpt>Adding enumeration methods<ept id=\"p1\">](#methods)</ept>","pos":[445,483],"source":"[Adding enumeration methods](#methods)"}]},{"pos":[1385,1413],"content":"Creating an enumeration type","linkify":"Creating an enumeration type","nodes":[{"content":"Creating an enumeration type","pos":[0,28]}]},{"pos":[1417,1955],"content":"Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values. The following example illustrates the syntax used by C# and Visual Basic to define an enumeration. It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`. Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.","nodes":[{"content":"Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values.","pos":[0,132]},{"content":"The following example illustrates the syntax used by C# and Visual Basic to define an enumeration.","pos":[133,231]},{"content":"It creates an enumeration named <ph id=\"ph1\">`ArrivalStatus`</ph> that has three members: <ph id=\"ph2\">`ArrivalStatus.Early`</ph>, <ph id=\"ph3\">`ArrivalStatus.OnTime`</ph>, and <ph id=\"ph4\">`ArrivalStatus.Late`</ph>.","pos":[232,376],"source":" It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`."},{"content":"Note that in both cases, the enumeration does not explicitly inherit from <ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph>; the inheritance relationship is handled implicitly by the compiler.","pos":[377,538],"source":" Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler."}]},{"pos":[1962,2201],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]\n [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]"},{"pos":[2209,2495],"content":"[!WARNING]\n You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>. Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.","leadings":["","> "],"nodes":[{"content":" You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>. Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.","pos":[11,284],"nodes":[{"content":"You should never create an enumeration type whose underlying type is non-integral or <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph>.","pos":[1,105],"source":" You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>."},{"content":"Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.","pos":[106,273]}]}]},{"pos":[2536,2569],"content":"Instantiating an enumeration type","linkify":"Instantiating an enumeration type","nodes":[{"content":"Instantiating an enumeration type","pos":[0,33]}]},{"pos":[2573,2831],"content":"You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it. The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.","nodes":[{"content":"You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it.","pos":[0,165]},{"content":"The following example instantiates an <ph id=\"ph1\">`ArrivalStatus`</ph> whose value is <ph id=\"ph2\">`ArrivalStatus.OnTime`</ph>.","pos":[166,258],"source":" The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`."}]},{"pos":[2838,3077],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]\n [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]"},{"pos":[3084,3152],"content":"You can also instantiate an enumeration value in the following ways:","nodes":[{"content":"You can also instantiate an enumeration value in the following ways:","pos":[0,68]}]},{"pos":[3162,3414],"content":"By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value. The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.","nodes":[{"content":"By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value.","pos":[0,146]},{"content":"The following example creates an <ph id=\"ph1\">`ArrivalStatus`</ph> object whose value is <ph id=\"ph2\">`ArrivalStatus.Early`</ph> in this way.","pos":[147,252],"source":" The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way."}]},{"pos":[3425,3668],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]\n [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]"},{"pos":[3678,3905],"content":"By calling its implicit default constructor. As the following example shows, in this case the underlying value of the enumeration instance is 0. However, this is not necessarily the value of a valid constant in the enumeration.","nodes":[{"content":"By calling its implicit default constructor. As the following example shows, in this case the underlying value of the enumeration instance is 0. However, this is not necessarily the value of a valid constant in the enumeration.","pos":[0,227],"nodes":[{"content":"By calling its implicit default constructor.","pos":[0,44]},{"content":"As the following example shows, in this case the underlying value of the enumeration instance is 0.","pos":[45,144]},{"content":"However, this is not necessarily the value of a valid constant in the enumeration.","pos":[145,227]}]}]},{"pos":[3916,4159],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]\n [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]"},{"pos":[4169,4405],"content":"By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration. For more information, see the [Parsing Enumeration Values](#parsing) section.","nodes":[{"content":"By calling the <ph id=\"ph1\">&lt;xref:System.Enum.Parse%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Enum.TryParse%2A&gt;</ph> method to parse a string that contains the name of a constant in the enumeration.","pos":[0,158],"source":"By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration."},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>Parsing Enumeration Values<ept id=\"p1\">](#parsing)</ept> section.","pos":[159,236],"source":" For more information, see the [Parsing Enumeration Values](#parsing) section."}]},{"pos":[4415,4598],"content":"By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type. For more information, see the [Performing Conversions](#conversions) section.","nodes":[{"content":"By calling the <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%2A&gt;</ph> method to convert an integral value to an enumeration type.","pos":[0,105],"source":"By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type."},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>Performing Conversions<ept id=\"p1\">](#conversions)</ept> section.","pos":[106,183],"source":" For more information, see the [Performing Conversions](#conversions) section."}]},{"pos":[4639,4665],"content":"Enumeration best practices","linkify":"Enumeration best practices","nodes":[{"content":"Enumeration best practices","pos":[0,26]}]},{"pos":[4669,4758],"content":"We recommend that you use the following best practices when you define enumeration types:","nodes":[{"content":"We recommend that you use the following best practices when you define enumeration types:","pos":[0,89]}]},{"pos":[4768,5115],"content":"If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant. By default, the memory used for the enumeration is initialized to zero by the common language runtime. Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.","nodes":[{"content":"If you have not defined an enumeration member whose value is 0, consider creating a <ph id=\"ph1\">`None`</ph> enumerated constant.","pos":[0,111],"source":"If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant."},{"content":"By default, the memory used for the enumeration is initialized to zero by the common language runtime.","pos":[112,214]},{"content":"Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.","pos":[215,347]}]},{"pos":[5125,5448],"content":"If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it. If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.","nodes":[{"content":"If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it. If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.","pos":[0,323],"nodes":[{"content":"If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it.","pos":[0,150]},{"content":"If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.","pos":[151,323]}]}]},{"pos":[5458,5527],"content":"Do not specify enumerated constants that are reserved for future use.","nodes":[{"content":"Do not specify enumerated constants that are reserved for future use.","pos":[0,69]}]},{"pos":[5537,5784],"content":"When you define a method or property that takes an enumerated constant as a value, consider validating the value. The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.","nodes":[{"content":"When you define a method or property that takes an enumerated constant as a value, consider validating the value. The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.","pos":[0,247],"nodes":[{"content":"When you define a method or property that takes an enumerated constant as a value, consider validating the value.","pos":[0,113]},{"content":"The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.","pos":[114,247]}]}]},{"pos":[5791,5952],"content":"Additional best practices for enumeration types whose constants are bit fields are listed in the <bpt id=\"p1\">[</bpt>Non-Exclusive Members and the Flags Attribute<ept id=\"p1\">](#Flags)</ept> section.","source":"Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section."},{"pos":[5990,6029],"content":"Performing operations with enumerations","linkify":"Performing operations with enumerations","nodes":[{"content":"Performing operations with enumerations","pos":[0,39]}]},{"pos":[6033,6370],"content":"You cannot define new methods when you are creating an enumeration. However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class. The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.","nodes":[{"content":"You cannot define new methods when you are creating an enumeration. However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class. The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.","pos":[0,337],"nodes":[{"content":"You cannot define new methods when you are creating an enumeration.","pos":[0,67]},{"content":"However, an enumeration type inherits a complete set of static and instance methods from the <ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph> class.","pos":[68,186],"source":" However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class."},{"content":"The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.","pos":[187,337]}]}]},{"pos":[6410,6432],"content":"Performing conversions","linkify":"Performing conversions","nodes":[{"content":"Performing conversions","pos":[0,22]}]},{"pos":[6436,6746],"content":"You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator. The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.","nodes":[{"content":"You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator. The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.","pos":[0,310],"nodes":[{"content":"You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator.","pos":[0,138]},{"content":"The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.","pos":[139,310]}]}]},{"pos":[6753,6992],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]\n [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]"},{"pos":[6999,7521],"content":"The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value. The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value. Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph> class also includes a <ph id=\"ph2\">&lt;xref:System.Enum.ToObject%2A&gt;</ph> method that converts a value of any integral type to an enumeration value.","pos":[0,150],"source":"The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29&gt;</ph> method to convert an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> to an <ph id=\"ph3\">`ArrivalStatus`</ph> value.","pos":[151,311],"source":" The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value."},{"content":"Note that, because the <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%2A&gt;</ph> returns a value of type <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.","pos":[312,522],"source":" Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type."}]},{"pos":[7528,7767],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]\n [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]"},{"pos":[7774,8177],"content":"When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration. To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion. The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.","nodes":[{"content":"When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration.","pos":[0,134]},{"content":"To prevent this, you can pass the integer to the <ph id=\"ph1\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method before performing the conversion.","pos":[135,256],"source":" To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion."},{"content":"The following example uses this method to determine whether the elements in an array of integer values can be converted to <ph id=\"ph1\">`ArrivalStatus`</ph> values.","pos":[257,403],"source":" The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values."}]},{"pos":[8184,8443],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#7<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#7<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)]\n [!code-vb[System.Enum.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)]"},{"pos":[8450,9120],"content":"Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions. The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method to convert an enumeration value to its underlying type. Note that this example does not require the underlying type of the enumeration to be known at compile time.","nodes":[{"content":"Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions. The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method to convert an enumeration value to its underlying type. Note that this example does not require the underlying type of the enumeration to be known at compile time.","pos":[0,670],"nodes":[{"content":"Although the <ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph> class provides explicit interface implementations of the <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface for converting from an enumeration value to an integral type, you should use the methods of the <ph id=\"ph3\">&lt;xref:System.Convert&gt;</ph> class, such as <ph id=\"ph4\">&lt;xref:System.Convert.ToInt32%2A&gt;</ph>, to perform these conversions.","pos":[0,322],"source":"Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions."},{"content":"The following example illustrates how you can use the <ph id=\"ph1\">&lt;xref:System.Enum.GetUnderlyingType%2A&gt;</ph> method along with the <ph id=\"ph2\">&lt;xref:System.Convert.ChangeType%2A?displayProperty=fullName&gt;</ph> method to convert an enumeration value to its underlying type.","pos":[323,562],"source":" The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method to convert an enumeration value to its underlying type."},{"content":"Note that this example does not require the underlying type of the enumeration to be known at compile time.","pos":[563,670]}]}]},{"pos":[9127,9386],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#8<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#8<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]\n [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]"},{"pos":[9422,9448],"content":"Parsing enumeration values","linkify":"Parsing enumeration values","nodes":[{"content":"Parsing enumeration values","pos":[0,26]}]},{"pos":[9452,10480],"content":"The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value. The string representation can be either the name or the underlying value of an enumeration constant. Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type. To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value. The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=fullName> methods. Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.","nodes":[{"content":"The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value. The string representation can be either the name or the underlying value of an enumeration constant. Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type. To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value. The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=fullName> methods. Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.","pos":[0,1028],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.Parse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Enum.TryParse%2A&gt;</ph> methods allow you to convert the string representation of an enumeration value to that value.","pos":[0,160],"source":"The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value."},{"content":"The string representation can be either the name or the underlying value of an enumeration constant.","pos":[161,261]},{"content":"Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type.","pos":[262,481]},{"content":"To prevent this, the <ph id=\"ph1\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method can be called to ensure that the result of the parsing method is a valid enumeration value.","pos":[482,633],"source":" To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value."},{"content":"The example illustrates this approach and demonstrates calls to both the <ph id=\"ph1\">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=fullName&gt;</ph> methods.","pos":[634,869],"source":" The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=fullName> methods."},{"content":"Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.","pos":[870,1028]}]}]},{"pos":[10487,10736],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#9<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#9<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]\n [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]"},{"pos":[10775,10804],"content":"Formatting enumeration values","linkify":"Formatting enumeration values","nodes":[{"content":"Formatting enumeration values","pos":[0,29]}]},{"pos":[10808,11456],"content":"You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method. You can use a format string to control the precise way in which an enumeration value is represented as a string. For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). The following example uses each of the supported enumeration format strings (\"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.","nodes":[{"content":"You can convert enumeration values to their string representations by calling the static <ph id=\"ph1\">&lt;xref:System.Enum.Format%2A&gt;</ph> method, as well as the overloads of the instance <ph id=\"ph2\">&lt;xref:System.Enum.ToString%2A&gt;</ph> method.","pos":[0,205],"source":"You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method."},{"content":"You can use a format string to control the precise way in which an enumeration value is represented as a string.","pos":[206,318]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Enumeration Format Strings<ept id=\"p1\">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.","pos":[319,432],"source":" For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)."},{"content":"The following example uses each of the supported enumeration format strings (\"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" ) to convert a member of the <ph id=\"ph1\">`ArrivalStatus`</ph> enumeration to its string representations.","pos":[433,648],"source":" The following example uses each of the supported enumeration format strings (\"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" ) to convert a member of the `ArrivalStatus` enumeration to its string representations."}]},{"pos":[11463,11718],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#10<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#10<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]\n [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]"},{"pos":[11756,11785],"content":"Iterating enumeration members","linkify":"Iterating enumeration members","nodes":[{"content":"Iterating enumeration members","pos":[0,29]}]},{"pos":[11789,12129],"content":"The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct. However, you can enumerate members in either of two ways.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph> type does not implement the <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface, which would enable you to iterate members of a collection by using a <ph id=\"ph4\">`foreach`</ph> (in C#) or <ph id=\"ph5\">`For Each`</ph> (in Visual Basic) construct.","pos":[0,282],"source":"The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct."},{"content":"However, you can enumerate members in either of two ways.","pos":[283,340]}]},{"pos":[12139,12473],"content":"You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members. Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value. The following example illustrates this approach.","nodes":[{"content":"You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members. Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value. The following example illustrates this approach.","pos":[0,334],"nodes":[{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method to retrieve a string array containing the names of the enumeration members.","pos":[0,130],"source":"You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members."},{"content":"Next, for each element of the string array, you can call the <ph id=\"ph1\">&lt;xref:System.Enum.Parse%2A&gt;</ph> method to convert the string to its equivalent enumeration value.","pos":[131,285],"source":" Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value."},{"content":"The following example illustrates this approach.","pos":[286,334]}]}]},{"pos":[12484,12743],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#11<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#11<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]\n [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]"},{"pos":[12753,13086],"content":"You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration. Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value. The following example illustrates this approach.","nodes":[{"content":"You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration. Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value. The following example illustrates this approach.","pos":[0,333],"nodes":[{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Enum.GetValues%2A&gt;</ph> method to retrieve an array that contains the underlying values in the enumeration.","pos":[0,132],"source":"You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration."},{"content":"Next, for each element of the array, you can call the <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%2A&gt;</ph> method to convert the integer to its equivalent enumeration value.","pos":[133,284],"source":" Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value."},{"content":"The following example illustrates this approach.","pos":[285,333]}]}]},{"pos":[13097,13356],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#12<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#12<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]\n [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]"},{"pos":[13389,13434],"content":"Non-exclusive members and the Flags attribute","linkify":"Non-exclusive members and the Flags attribute","nodes":[{"content":"Non-exclusive members and the Flags attribute","pos":[0,45]}]},{"pos":[13438,13723],"content":"One common use of an enumeration is to represent a set of mutually exclusive values. For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`. It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.","nodes":[{"content":"One common use of an enumeration is to represent a set of mutually exclusive values.","pos":[0,84]},{"content":"For example, an <ph id=\"ph1\">`ArrivalStatus`</ph> instance can have a value of <ph id=\"ph2\">`Early`</ph>, <ph id=\"ph3\">`OnTime`</ph>, or <ph id=\"ph4\">`Late`</ph>.","pos":[85,175],"source":" For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`."},{"content":"It makes no sense for the value of an <ph id=\"ph1\">`ArrivalStatus`</ph> instance to reflect more than one enumeration constant.","pos":[176,285],"source":" It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant."}]},{"pos":[13730,14139],"content":"In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value. The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields. For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household. It can be defined as follows.","nodes":[{"content":"In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value.","pos":[0,166]},{"content":"The <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> attribute can be used to indicate that the enumeration consists of bit fields.","pos":[167,278],"source":" The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields."},{"content":"For example, an enumeration named <ph id=\"ph1\">`Pets`</ph> might be used to indicate the kinds of pets in a household.","pos":[279,379],"source":" For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household."},{"content":"It can be defined as follows.","pos":[380,409]}]},{"pos":[14146,14403],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#13<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#13<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]\n [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]"},{"pos":[14410,14484],"content":"The <ph id=\"ph1\">`Pets`</ph> enumeration can then be used as shown in the following example.","source":"The `Pets` enumeration can then be used as shown in the following example."},{"pos":[14491,14748],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#14<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#14<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]\n [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]"},{"pos":[14755,14891],"content":"The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.","nodes":[{"content":"The following best practices should be used when defining a bitwise enumeration and applying the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> attribute.","pos":[0,136],"source":"The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute."}]},{"pos":[14901,15064],"content":"Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.","pos":[0,163],"source":"Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value."}]},{"pos":[15074,15234],"content":"Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on. This means the individual flags in combined enumeration constants do not overlap.","nodes":[{"content":"Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on. This means the individual flags in combined enumeration constants do not overlap.","pos":[0,160],"nodes":[{"content":"Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.","pos":[0,78]},{"content":"This means the individual flags in combined enumeration constants do not overlap.","pos":[79,160]}]}]},{"pos":[15244,15745],"content":"Consider creating an enumerated constant for commonly used flag combinations. For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags. In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.","nodes":[{"content":"Consider creating an enumerated constant for commonly used flag combinations.","pos":[0,77]},{"content":"For example, if you have an enumeration used for file I/O operations that contains the enumerated constants <ph id=\"ph1\">`Read = 1`</ph> and <ph id=\"ph2\">`Write = 2`</ph>, consider creating the enumerated constant <ph id=\"ph3\">`ReadWrite = Read OR Write`</ph>, which combines the <ph id=\"ph4\">`Read`</ph> and <ph id=\"ph5\">`Write`</ph> flags.","pos":[78,329],"source":" For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags."},{"content":"In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.","pos":[330,501]}]},{"pos":[15755,15941],"content":"Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.","nodes":[{"content":"Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.","pos":[0,186]}]},{"pos":[15951,16113],"content":"A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.","nodes":[{"content":"A convenient way to test whether a flag is set in a numeric value is to call the instance <ph id=\"ph1\">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> method, as shown in the following example.","pos":[0,162],"source":"A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example."}]},{"pos":[16124,16385],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#15<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#15<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]\n [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]"},{"pos":[16396,16737],"content":"It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant. This is illustrated in the following example.","nodes":[{"content":"It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant. This is illustrated in the following example.","pos":[0,341],"nodes":[{"content":"It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant.","pos":[0,295]},{"content":"This is illustrated in the following example.","pos":[296,341]}]}]},{"pos":[16748,17009],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#16<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#16<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]\n [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]"},{"pos":[17019,17450],"content":"Use `None` as the name of the flag enumerated constant whose value is zero. You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero. However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set. This is illustrated in the following example.","nodes":[{"content":"Use <ph id=\"ph1\">`None`</ph> as the name of the flag enumerated constant whose value is zero.","pos":[0,75],"source":"Use `None` as the name of the flag enumerated constant whose value is zero."},{"content":"You cannot use the <ph id=\"ph1\">`None`</ph> enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.","pos":[76,202],"source":" You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero."},{"content":"However, you can perform a logical, not a bitwise, comparison between the numeric value and the <ph id=\"ph1\">`None`</ph> enumerated constant to determine whether any bits in the numeric value are set.","pos":[203,385],"source":" However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set."},{"content":"This is illustrated in the following example.","pos":[386,431]}]},{"pos":[17461,17722],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#17<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#17<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]\n [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]"},{"pos":[17732,18137],"content":"Do not define an enumeration value solely to mirror the state of the enumeration itself. For example, do not define an enumerated constant that merely marks the end of the enumeration. If you need to determine the last value of the enumeration, check for that value explicitly. In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.","nodes":[{"content":"Do not define an enumeration value solely to mirror the state of the enumeration itself. For example, do not define an enumerated constant that merely marks the end of the enumeration. If you need to determine the last value of the enumeration, check for that value explicitly. In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.","pos":[0,405],"nodes":[{"content":"Do not define an enumeration value solely to mirror the state of the enumeration itself.","pos":[0,88]},{"content":"For example, do not define an enumerated constant that merely marks the end of the enumeration.","pos":[89,184]},{"content":"If you need to determine the last value of the enumeration, check for that value explicitly.","pos":[185,277]},{"content":"In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.","pos":[278,405]}]}]},{"pos":[18172,18198],"content":"Adding enumeration methods","linkify":"Adding enumeration methods","nodes":[{"content":"Adding enumeration methods","pos":[0,26]}]},{"pos":[18202,18532],"content":"Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.  However, you can use extension methods to add functionality to a particular enumeration type.","nodes":[{"content":"Because enumeration types are defined by language structures, such as <ph id=\"ph1\">`enum`</ph> (C#) and <ph id=\"ph2\">`Enum`</ph> (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <ph id=\"ph3\">&lt;xref:System.Enum&gt;</ph> class.","pos":[0,235],"source":"Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class."},{"content":"However, you can use extension methods to add functionality to a particular enumeration type.","pos":[237,330]}]},{"pos":[18539,19033],"content":"In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class. An extension method named `Passing` is added to the `Grades` type so that each instance of that type now \"knows\" whether it represents a passing grade or not.       The `Extensions` class also contains a static read-write variable that defines the minimum passing grade. The return value of the `Passing` extension method reflects the current value of that variable.","nodes":[{"content":"In the following example, the <ph id=\"ph1\">`Grades`</ph> enumeration represents the possible letter grades that a student may receive in a class.","pos":[0,127],"source":"In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class."},{"content":"An extension method named <ph id=\"ph1\">`Passing`</ph> is added to the <ph id=\"ph2\">`Grades`</ph> type so that each instance of that type now \"knows\" whether it represents a passing grade or not.","pos":[128,286],"source":" An extension method named `Passing` is added to the `Grades` type so that each instance of that type now \"knows\" whether it represents a passing grade or not."},{"content":"The <ph id=\"ph1\">`Extensions`</ph> class also contains a static read-write variable that defines the minimum passing grade.","pos":[293,398],"source":"       The `Extensions` class also contains a static read-write variable that defines the minimum passing grade."},{"content":"The return value of the <ph id=\"ph1\">`Passing`</ph> extension method reflects the current value of that variable.","pos":[399,494],"source":" The return value of the `Passing` extension method reflects the current value of that variable."}]},{"pos":[19040,19291],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Class#18<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Class#18<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)]\n [!code-vb[System.Enum.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)]"}],"pos":[3177,22677],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Enum\"></xref> class.","nodes":[{"pos":[0,73],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Enum\"></xref> class."}],"pos":[120090,120164],"yaml":true},{"content":"Compares this instance to a specified object and returns an indication of their relative values.","nodes":[{"pos":[0,96],"content":"Compares this instance to a specified object and returns an indication of their relative values.","nodes":[{"content":"Compares this instance to a specified object and returns an indication of their relative values.","pos":[0,96]}]}],"pos":[121702,121799],"yaml":true},{"content":"An object to compare, or `null`.","nodes":[{"pos":[0,32],"content":"An object to compare, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare, or `null`."}],"pos":[122394,122427],"yaml":true},{"content":"A signed number that indicates the relative values of this instance and <code>target</code>.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The value of this instance is less than the value of <code>target</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The value of this instance is equal to the value of <code>target</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The value of this instance is greater than the value of <code>target</code>.  \n  \n -or-  \n  \n <code>target</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,92],"content":"A signed number that indicates the relative values of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A signed number that indicates the relative values of this instance and <code>target</code>."},{"pos":[99,551],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The value of this instance is less than the value of <code>target</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The value of this instance is equal to the value of <code>target</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The value of this instance is greater than the value of <code>target</code>.","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Meaning","pos":[45,57],"source":" Meaning  \n  \n "},{"content":"Less than zero","pos":[93,112],"source":" Less than zero  \n  \n "},{"content":" The value of this instance is less than the value of <code>target</code>.  \n  \n ","pos":[123,204],"nodes":[{"content":"The value of this instance is less than the value of <ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph>.","pos":[1,74],"source":" The value of this instance is less than the value of <code>target</code>."}]},{"content":"Zero","pos":[223,232],"source":" Zero  \n  \n "},{"content":" The value of this instance is equal to the value of <code>target</code>.  \n  \n ","pos":[243,323],"nodes":[{"content":"The value of this instance is equal to the value of <ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph>.","pos":[1,73],"source":" The value of this instance is equal to the value of <code>target</code>."}]},{"content":"Greater than zero","pos":[342,364],"source":" Greater than zero  \n  \n "},{"content":"The value of this instance is greater than the value of <ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph>.","pos":[376,452],"source":" The value of this instance is greater than the value of <code>target</code>."}]},{"pos":[558,562],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[569,633],"content":"<code>target</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"<code>target</code> is `null`.  \n  \n ","pos":[0,37],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,30],"source":"<code>target</code> is `null`."}]}]}],"pos":[122483,123140],"yaml":true},{"content":"<code>target</code> and this instance are not the same type.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> and this instance are not the same type.","source":"<code>target</code> and this instance are not the same type."}],"pos":[123283,123344],"yaml":true},{"content":"This instance is not type <xref href=\"System.SByte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.UInt32\"></xref>, or <xref href=\"System.UInt64\"></xref>.","nodes":[{"pos":[0,310],"content":"This instance is not type <ph id=\"ph1\">&lt;xref href=\"System.SByte\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Int16\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph6\">&lt;xref href=\"System.UInt16\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph7\">&lt;xref href=\"System.UInt32\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph8\">&lt;xref href=\"System.UInt64\"&gt;&lt;/xref&gt;</ph>.","source":"This instance is not type <xref href=\"System.SByte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.UInt32\"></xref>, or <xref href=\"System.UInt64\"></xref>."}],"pos":[123454,123765],"yaml":true},{"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"pos":[0,80],"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value indicating whether this instance is equal to a specified object.","pos":[0,80]}]}],"pos":[125193,125274],"yaml":true},{"content":"The <xref:System.Enum.Equals%28System.Object%29?displayProperty=fullName> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=fullName> to define how enumeration members are evaluated for equality.","nodes":[{"pos":[0,227],"content":"The <xref:System.Enum.Equals%28System.Object%29?displayProperty=fullName> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=fullName> to define how enumeration members are evaluated for equality.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> method overrides <ph id=\"ph2\">&lt;xref:System.ValueType.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> to define how enumeration members are evaluated for equality.","pos":[0,227],"source":"The <xref:System.Enum.Equals%28System.Object%29?displayProperty=fullName> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=fullName> to define how enumeration members are evaluated for equality."}]}],"pos":[125285,125513],"yaml":true,"extradata":"MT"},{"content":"An object to compare with this instance, or `null`.","nodes":[{"pos":[0,51],"content":"An object to compare with this instance, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare with this instance, or `null`."}],"pos":[126920,126972],"yaml":true},{"content":"`true` if <code>obj</code> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, `false`."}],"pos":[127030,127173],"yaml":true},{"content":"Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.","nodes":[{"pos":[0,134],"content":"Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.","nodes":[{"content":"Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.","pos":[0,134]}]}],"pos":[128753,128888],"yaml":true},{"content":"The following table shows the valid values for the `format` parameter.  \n  \n|Format|Description|  \n|------------|-----------------|  \n|\"G\" or \"g\"|If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.<br /><br /> For example, suppose the only enumerated constant is named Red, and its value is 1. If `value` is specified as 1, this format returns \"Red\". However, if `value` is specified as 2, this format returns \"2\".<br /><br /> -or-<br /><br /> If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.<br /><br /> If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned. `value` is searched for flags, going from the flag with the largest value to the smallest value. For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list. The value of that flag is then excluded from further consideration, and the search continues for the next flag.<br /><br /> If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.|  \n|\"X\" or \"x\"|Represents `value` in hexadecimal format without a leading \"0x\".|  \n|\"D\" or \"d\"|Represents `value` in decimal form.|  \n|\"F\" or \"f\"|Behaves identically to \"G\" or \"g\", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.|","nodes":[{"pos":[0,70],"content":"The following table shows the valid values for the <ph id=\"ph1\">`format`</ph> parameter.","source":"The following table shows the valid values for the `format` parameter."},{"pos":[77,83],"content":"Format","nodes":[{"content":"Format","pos":[0,6]}]},{"pos":[84,95],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[135,145],"content":"\"G\" or \"g\"","nodes":[{"content":"\"G\" or \"g\"","pos":[0,10]}]},{"pos":[146,1348],"content":"If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.<br /><br /> For example, suppose the only enumerated constant is named Red, and its value is 1. If `value` is specified as 1, this format returns \"Red\". However, if `value` is specified as 2, this format returns \"2\".<br /><br /> -or-<br /><br /> If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.<br /><br /> If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned. `value` is searched for flags, going from the flag with the largest value to the smallest value. For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list. The value of that flag is then excluded from further consideration, and the search continues for the next flag.<br /><br /> If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of <ph id=\"ph2\">`value`</ph> is returned.","pos":[0,148],"source":"If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned."},{"content":" For example, suppose the only enumerated constant is named Red, and its value is 1. If `value` is specified as 1, this format returns \"Red\". However, if `value` is specified as 2, this format returns \"2\".","pos":[160,365],"nodes":[{"content":"For example, suppose the only enumerated constant is named Red, and its value is 1.","pos":[1,84]},{"content":"If <ph id=\"ph1\">`value`</ph> is specified as 1, this format returns \"Red\".","pos":[85,141],"source":" If `value` is specified as 1, this format returns \"Red\"."},{"content":"However, if <ph id=\"ph1\">`value`</ph> is specified as 2, this format returns \"2\".","pos":[142,205],"source":" However, if `value` is specified as 2, this format returns \"2\"."}]},{"content":"-or-","pos":[378,382]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> custom attribute is applied to the enumeration, <ph id=\"ph2\">`value`</ph> is treated as a bit field that contains one or more flags that consist of one or more bits.","pos":[395,578],"source":" If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits."},{"content":" If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned. `value` is searched for flags, going from the flag with the largest value to the smallest value. For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list. The value of that flag is then excluded from further consideration, and the search continues for the next flag.","pos":[590,1071],"nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned.","pos":[1,140],"source":" If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned."},{"content":"<ph id=\"ph1\">`value`</ph> is searched for flags, going from the flag with the largest value to the smallest value.","pos":[141,237],"source":"`value` is searched for flags, going from the flag with the largest value to the smallest value."},{"content":"For each flag that corresponds to a bit field in <ph id=\"ph1\">`value`</ph>, the name of the constant is concatenated to the delimiter-separated list.","pos":[238,369],"source":" For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list."},{"content":"The value of that flag is then excluded from further consideration, and the search continues for the next flag.","pos":[370,481]}]},{"content":"If <ph id=\"ph1\">`value`</ph> is not equal to a combination of named enumerated constants, the decimal equivalent of <ph id=\"ph2\">`value`</ph> is returned.","pos":[1084,1202],"source":" If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned."}]},{"pos":[1353,1363],"content":"\"X\" or \"x\"","nodes":[{"content":"\"X\" or \"x\"","pos":[0,10]}]},{"pos":[1364,1428],"content":"Represents <ph id=\"ph1\">`value`</ph> in hexadecimal format without a leading \"0x\".","source":"Represents `value` in hexadecimal format without a leading \"0x\"."},{"pos":[1433,1443],"content":"\"D\" or \"d\"","nodes":[{"content":"\"D\" or \"d\"","pos":[0,10]}]},{"pos":[1444,1479],"content":"Represents <ph id=\"ph1\">`value`</ph> in decimal form.","source":"Represents `value` in decimal form."},{"pos":[1484,1494],"content":"\"F\" or \"f\"","nodes":[{"content":"\"F\" or \"f\"","pos":[0,10]}]},{"pos":[1495,1643],"content":"Behaves identically to \"G\" or \"g\", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.","nodes":[{"content":"Behaves identically to \"G\" or \"g\", except that the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> is not required to be present on the <ph id=\"ph2\">&lt;xref:System.Enum&gt;</ph> declaration.","pos":[0,148],"source":"Behaves identically to \"G\" or \"g\", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration."}]}],"pos":[128899,130579],"yaml":true,"extradata":"MT"},{"content":"The enumeration type of the value to convert.","nodes":[{"pos":[0,45],"content":"The enumeration type of the value to convert.","nodes":[{"content":"The enumeration type of the value to convert.","pos":[0,45]}]}],"pos":[131232,131278],"yaml":true},{"content":"The value to convert.","nodes":[{"pos":[0,21],"content":"The value to convert.","nodes":[{"content":"The value to convert.","pos":[0,21]}]}],"pos":[131339,131361],"yaml":true},{"content":"The output format to use.","nodes":[{"pos":[0,25],"content":"The output format to use.","nodes":[{"content":"The output format to use.","pos":[0,25]}]}],"pos":[131423,131449],"yaml":true},{"content":"A string representation of <code>value</code>.","nodes":[{"pos":[0,46],"content":"A string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A string representation of <code>value</code>."}],"pos":[131506,131553],"yaml":true},{"content":"The <code>enumType</code>, <code>value</code>, or <code>format</code> parameter is `null`.","nodes":[{"pos":[0,90],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">format</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is <ph id=\"ph4\">`null`</ph>.","source":"The <code>enumType</code>, <code>value</code>, or <code>format</code> parameter is `null`."}],"pos":[131701,131792],"yaml":true},{"content":"The <code>enumType</code> parameter is not an <xref href=\"System.Enum\"></xref> type.  \n  \n -or-  \n  \n The <code>value</code> is from an enumeration that differs in type from <code>enumType</code>.  \n  \n -or-  \n  \n The type of <code>value</code> is not an underlying type of <code>enumType</code>.","nodes":[{"pos":[0,84],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph> type.","source":"The <code>enumType</code> parameter is not an <xref href=\"System.Enum\"></xref> type."},{"pos":[91,95],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[102,196],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is from an enumeration that differs in type from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">enumType</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <code>value</code> is from an enumeration that differs in type from <code>enumType</code>."},{"pos":[203,207],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[214,296],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not an underlying type of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">enumType</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The type of <code>value</code> is not an underlying type of <code>enumType</code>."}],"pos":[131886,132195],"yaml":true},{"content":"The <code>format</code> parameter contains an invalid value.","nodes":[{"pos":[0,60],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains an invalid value.","source":"The <code>format</code> parameter contains an invalid value."}],"pos":[132285,132346],"yaml":true},{"content":"<code>format</code> equals \"X\", but the enumeration type is unknown.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> equals \"X\", but the enumeration type is unknown.","source":"<code>format</code> equals \"X\", but the enumeration type is unknown."}],"pos":[132456,132525],"yaml":true},{"content":"Returns the hash code for the value of this instance.","nodes":[{"pos":[0,53],"content":"Returns the hash code for the value of this instance.","nodes":[{"content":"Returns the hash code for the value of this instance.","pos":[0,53]}]}],"pos":[133978,134032],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[134166,134201],"yaml":true},{"content":"Retrieves the name of the constant in the specified enumeration that has the specified value.","nodes":[{"pos":[0,93],"content":"Retrieves the name of the constant in the specified enumeration that has the specified value.","nodes":[{"content":"Retrieves the name of the constant in the specified enumeration that has the specified value.","pos":[0,93]}]}],"pos":[135743,135837],"yaml":true},{"content":"If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members. However, it does not guarantee that it will always return the name of the same enumeration member. As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.","nodes":[{"pos":[0,442],"content":"If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members. However, it does not guarantee that it will always return the name of the same enumeration member. As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.","nodes":[{"content":"If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members. However, it does not guarantee that it will always return the name of the same enumeration member. As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.","pos":[0,442],"nodes":[{"content":"If multiple enumeration members have the same underlying value, the <ph id=\"ph1\">&lt;xref:System.Enum.GetName%2A&gt;</ph> method guarantees that it will return the name of one of those enumeration members.","pos":[0,181],"source":"If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members."},{"content":"However, it does not guarantee that it will always return the name of the same enumeration member.","pos":[182,280]},{"content":"As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.","pos":[281,442]}]}]}],"pos":[135848,136291],"yaml":true,"extradata":"MT"},{"content":"An enumeration type.","nodes":[{"pos":[0,20],"content":"An enumeration type.","nodes":[{"content":"An enumeration type.","pos":[0,20]}]}],"pos":[136915,136936],"yaml":true},{"content":"The value of a particular enumerated constant in terms of its underlying type.","nodes":[{"pos":[0,78],"content":"The value of a particular enumerated constant in terms of its underlying type.","nodes":[{"content":"The value of a particular enumerated constant in terms of its underlying type.","pos":[0,78]}]}],"pos":[136997,137076],"yaml":true},{"content":"A string containing the name of the enumerated constant in <code>enumType</code> whose value is <code>value</code>; or `null` if no such constant is found.","nodes":[{"pos":[0,155],"content":"A string containing the name of the enumerated constant in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept> whose value is <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept>; or <ph id=\"ph3\">`null`</ph> if no such constant is found.","source":"A string containing the name of the enumerated constant in <code>enumType</code> whose value is <code>value</code>; or `null` if no such constant is found."}],"pos":[137133,137289],"yaml":true},{"content":"<code>enumType</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>enumType</code> or <code>value</code> is `null`."}],"pos":[137438,137493],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.  \n  \n -or-  \n  \n <code>value</code> is neither of type <code>enumType</code> nor does it have the same underlying type as <code>enumType</code>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,210],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is neither of type <ph id=\"ph2\">&lt;code&gt;enumType&lt;/code&gt;</ph> nor does it have the same underlying type as <ph id=\"ph3\">&lt;code&gt;enumType&lt;/code&gt;</ph>.","source":"<code>value</code> is neither of type <code>enumType</code> nor does it have the same underlying type as <code>enumType</code>."}],"pos":[137587,137806],"yaml":true},{"content":"Retrieves an array of the names of the constants in a specified enumeration.","nodes":[{"pos":[0,76],"content":"Retrieves an array of the names of the constants in a specified enumeration.","nodes":[{"content":"Retrieves an array of the names of the constants in a specified enumeration.","pos":[0,76]}]}],"pos":[139292,139369],"yaml":true},{"content":"The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude). The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.  \n  \n [!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]\n [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]  \n  \n If there are enumerated constants with same value, the order of their corresponding names is unspecified.","nodes":[{"pos":[0,333],"content":"The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude). The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.","nodes":[{"content":"The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude). The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.","pos":[0,333],"nodes":[{"content":"The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude).","pos":[0,138]},{"content":"The following example provides displays information about the array returned by the <ph id=\"ph1\">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method for an enumeration that includes a negative, zero, and a positive value.","pos":[139,333],"source":" The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value."}]}]},{"pos":[340,597],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.GetNames#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.GetNames#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]\n [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]"},{"pos":[604,709],"content":"If there are enumerated constants with same value, the order of their corresponding names is unspecified.","nodes":[{"content":"If there are enumerated constants with same value, the order of their corresponding names is unspecified.","pos":[0,105]}]}],"pos":[139380,140097],"yaml":true,"extradata":"MT"},{"content":"An enumeration type.","nodes":[{"pos":[0,20],"content":"An enumeration type.","nodes":[{"content":"An enumeration type.","pos":[0,20]}]}],"pos":[140751,140772],"yaml":true},{"content":"A string array of the names of the constants in <code>enumType</code>.","nodes":[{"pos":[0,70],"content":"A string array of the names of the constants in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A string array of the names of the constants in <code>enumType</code>."}],"pos":[140831,140902],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[141052,141085],"yaml":true},{"content":"<code>enumType</code> parameter is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> parameter is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> parameter is not an <xref href=\"System.Enum\"></xref>."}],"pos":[141179,141255],"yaml":true},{"content":"Returns the type code of the underlying type of this enumeration member.","nodes":[{"pos":[0,72],"content":"Returns the type code of the underlying type of this enumeration member.","nodes":[{"content":"Returns the type code of the underlying type of this enumeration member.","pos":[0,72]}]}],"pos":[142708,142781],"yaml":true},{"content":"The type code of the underlying type of this instance.","nodes":[{"pos":[0,54],"content":"The type code of the underlying type of this instance.","nodes":[{"content":"The type code of the underlying type of this instance.","pos":[0,54]}]}],"pos":[142914,142969],"yaml":true},{"content":"The enumeration type is unknown.","nodes":[{"pos":[0,32],"content":"The enumeration type is unknown.","nodes":[{"content":"The enumeration type is unknown.","pos":[0,32]}]}],"pos":[143130,143163],"yaml":true},{"content":"Returns the underlying type of the specified enumeration.","nodes":[{"pos":[0,57],"content":"Returns the underlying type of the specified enumeration.","nodes":[{"content":"Returns the underlying type of the specified enumeration.","pos":[0,57]}]}],"pos":[144284,144342],"yaml":true},{"content":"The <xref:System.Enum> structure enables values to be represented as named constants. The data type of the enumeration's values is known as its underlying type. For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek?displayProperty=fullName>, <xref:System.DayOfWeek?displayProperty=fullName>, and so on), is <xref:System.Int32>.","nodes":[{"pos":[0,438],"content":"The <xref:System.Enum> structure enables values to be represented as named constants. The data type of the enumeration's values is known as its underlying type. For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek?displayProperty=fullName>, <xref:System.DayOfWeek?displayProperty=fullName>, and so on), is <xref:System.Int32>.","nodes":[{"content":"The <xref:System.Enum> structure enables values to be represented as named constants. The data type of the enumeration's values is known as its underlying type. For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek?displayProperty=fullName>, <xref:System.DayOfWeek?displayProperty=fullName>, and so on), is <xref:System.Int32>.","pos":[0,438],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph> structure enables values to be represented as named constants.","pos":[0,85],"source":"The <xref:System.Enum> structure enables values to be represented as named constants."},{"content":"The data type of the enumeration's values is known as its underlying type.","pos":[86,160]},{"content":"For example, the underlying type of the <ph id=\"ph1\">&lt;xref:System.DayOfWeek&gt;</ph> enumeration, which consists of constants that represent each day of the week (<ph id=\"ph2\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>, and so on), is <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph>.","pos":[161,438],"source":" For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek?displayProperty=fullName>, <xref:System.DayOfWeek?displayProperty=fullName>, and so on), is <xref:System.Int32>."}]}]}],"pos":[144353,144792],"yaml":true,"extradata":"MT"},{"content":"The enumeration whose underlying type will be retrieved.","nodes":[{"pos":[0,56],"content":"The enumeration whose underlying type will be retrieved.","nodes":[{"content":"The enumeration whose underlying type will be retrieved.","pos":[0,56]}]}],"pos":[145490,145547],"yaml":true},{"content":"The underlying type of <code>enumType</code>.","nodes":[{"pos":[0,45],"content":"The underlying type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The underlying type of <code>enumType</code>."}],"pos":[145602,145648],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[145807,145840],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[145934,146000],"yaml":true},{"content":"Retrieves an array of the values of the constants in a specified enumeration.","nodes":[{"pos":[0,77],"content":"Retrieves an array of the values of the constants in a specified enumeration.","nodes":[{"content":"Retrieves an array of the values of the constants in a specified enumeration.","pos":[0,77]}]}],"pos":[147492,147570],"yaml":true},{"content":"The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude). The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.  \n  \n [!code-csharp[System.Enum.GetValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)]\n [!code-vb[System.Enum.GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)]  \n  \n The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration. If multiple members have the same value, the returned array includes duplicate values. In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values. To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.  \n  \n The<xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context. Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=fullName> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=fullName> method on each element of the array. The following example illustrates this technique. It requires that you define the following enumeration in an assembly named Enumerations.dll:  \n  \n [!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]\n [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]  \n  \n The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console.  \n  \n [!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]\n [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]","nodes":[{"pos":[0,319],"content":"The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude). The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.","nodes":[{"content":"The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude). The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.","pos":[0,319],"nodes":[{"content":"The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude).","pos":[0,126]},{"content":"The following example displays information about the array returned by the <ph id=\"ph1\">&lt;xref:System.Enum.GetValues%2A&gt;</ph> method for an enumeration that includes a negative value, zero, and a positive value.","pos":[127,319],"source":" The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value."}]}]},{"pos":[326,589],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.GetValues#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.GetValues#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.GetValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)]\n [!code-vb[System.Enum.GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)]"},{"pos":[596,1105],"content":"The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration. If multiple members have the same value, the returned array includes duplicate values. In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values. To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.GetValues%2A&gt;</ph> method returns an array that contains a value for each member of the <ph id=\"ph2\">`enumType`</ph> enumeration.","pos":[0,128],"source":"The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration."},{"content":"If multiple members have the same value, the returned array includes duplicate values.","pos":[129,215]},{"content":"In this case, calling the <ph id=\"ph1\">&lt;xref:System.Enum.GetName%2A&gt;</ph> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values.","pos":[216,398],"source":" In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values."},{"content":"To retrieve all the names of enumeration members successfully, call the <ph id=\"ph1\">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method.","pos":[399,509],"source":" To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method."}]},{"pos":[1112,1739],"content":"The<xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context. Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=fullName> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=fullName> method on each element of the array. The following example illustrates this technique. It requires that you define the following enumeration in an assembly named Enumerations.dll:","nodes":[{"content":"The<xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context. Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=fullName> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=fullName> method on each element of the array. The following example illustrates this technique. It requires that you define the following enumeration in an assembly named Enumerations.dll:","pos":[0,627],"nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.Enum.GetValues%2A&gt;</ph> method cannot be invoked by using reflection in a reflection-only context.","pos":[0,109],"source":"The<xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context."},{"content":"Instead, you can retrieve the value of all enumeration members by using the <ph id=\"ph1\">&lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt;</ph> method to get an array of <ph id=\"ph2\">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects that represent enumeration members and then call the <ph id=\"ph3\">&lt;xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=fullName&gt;</ph> method on each element of the array.","pos":[110,484],"source":" Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=fullName> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=fullName> method on each element of the array."},{"content":"The following example illustrates this technique.","pos":[485,534]},{"content":"It requires that you define the following enumeration in an assembly named Enumerations.dll:","pos":[535,627]}]}]},{"pos":[1746,2037],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.GetValues#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.GetValues#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]\n [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]"},{"pos":[2044,2300],"content":"The assembly is loaded in a reflection-only context, a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">`Pets`</ph> enumeration is instantiated, an array of <ph id=\"ph3\">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects is retrieved, and the field values are displayed to the console.","source":"The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console."},{"pos":[2307,2598],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.GetValues#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.GetValues#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]\n [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]"}],"pos":[147581,150197],"yaml":true,"extradata":"MT"},{"content":"An enumeration type.","nodes":[{"pos":[0,20],"content":"An enumeration type.","nodes":[{"content":"An enumeration type.","pos":[0,20]}]}],"pos":[150848,150869],"yaml":true},{"content":"An array that contains the values of the constants in <code>enumType</code>.","nodes":[{"pos":[0,76],"content":"An array that contains the values of the constants in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array that contains the values of the constants in <code>enumType</code>."}],"pos":[150925,151002],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[151153,151186],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[151280,151346],"yaml":true},{"content":"The method is invoked by reflection in a reflection-only context,  \n  \n -or-  \n  \n <code>enumType</code> is a type from an assembly loaded in a reflection-only context.","nodes":[{"pos":[0,65],"content":"The method is invoked by reflection in a reflection-only context,","nodes":[{"content":"The method is invoked by reflection in a reflection-only context,","pos":[0,65]}]},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,168],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is a type from an assembly loaded in a reflection-only context.","source":"<code>enumType</code> is a type from an assembly loaded in a reflection-only context."}],"pos":[151456,151631],"yaml":true},{"content":"Determines whether one or more bit fields are set in the current instance.","nodes":[{"pos":[0,74],"content":"Determines whether one or more bit fields are set in the current instance.","nodes":[{"content":"Determines whether one or more bit fields are set in the current instance.","pos":[0,74]}]}],"pos":[153111,153186],"yaml":true},{"content":"The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.  \n  \n```  \nthisInstance And flag = flag   \n```  \n  \n If the underlying value of `flag` is zero, the method returns `true`. If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.  \n  \n [!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]\n [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]  \n  \n The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set. For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.","nodes":[{"pos":[0,96],"content":"The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> method returns the result of the following Boolean expression.","pos":[0,96],"source":"The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression."}]},{"pos":[150,466],"content":"If the underlying value of `flag` is zero, the method returns `true`. If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.","nodes":[{"content":"If the underlying value of <ph id=\"ph1\">`flag`</ph> is zero, the method returns <ph id=\"ph2\">`true`</ph>.","pos":[0,69],"source":"If the underlying value of `flag` is zero, the method returns `true`."},{"content":"If this behavior is not desirable, you can use the <ph id=\"ph1\">&lt;xref:System.Enum.Equals%2A&gt;</ph> method to test for equality with zero and call <ph id=\"ph2\">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> only if the underlying value of <ph id=\"ph3\">`flag`</ph> is non-zero, as the following example illustrates.","pos":[70,316],"source":" If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates."}]},{"pos":[473,724],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.HasFlag#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.HasFlag#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]\n [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]"},{"pos":[731,1137],"content":"The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set. For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.","nodes":[{"content":"The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set. For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.","pos":[0,406],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> method is designed to be used with enumeration types that are marked with the <ph id=\"ph2\">&lt;xref:System.FlagsAttribute&gt;</ph> attribute and can be used to determine whether multiple bit fields are set.","pos":[0,216],"source":"The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set."},{"content":"For enumeration types that are not marked with the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> attribute, call either the <ph id=\"ph2\">&lt;xref:System.Enum.Equals%2A&gt;</ph> method or the <ph id=\"ph3\">&lt;xref:System.Enum.CompareTo%2A&gt;</ph> method.","pos":[217,406],"source":" For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method."}]}]}],"pos":[153197,154348],"yaml":true,"extradata":"MT"},{"content":"An enumeration value.","nodes":[{"pos":[0,21],"content":"An enumeration value.","nodes":[{"content":"An enumeration value.","pos":[0,21]}]}],"pos":[154975,154997],"yaml":true},{"content":"`true` if the bit field or bit fields that are set in <code>flag</code> are also set in the current instance; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the bit field or bit fields that are set in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">flag</ph><ept id=\"p1\">&lt;/code&gt;</ept> are also set in the current instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the bit field or bit fields that are set in <code>flag</code> are also set in the current instance; otherwise, `false`."}],"pos":[155055,155187],"yaml":true},{"content":"<code>flag</code> is a different type than the current instance.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">&lt;code&gt;flag&lt;/code&gt;</ph> is a different type than the current instance.","source":"<code>flag</code> is a different type than the current instance."}],"pos":[155328,155393],"yaml":true},{"content":"Returns an indication whether a constant with a specified value exists in a specified enumeration.","nodes":[{"pos":[0,98],"content":"Returns an indication whether a constant with a specified value exists in a specified enumeration.","nodes":[{"content":"Returns an indication whether a constant with a specified value exists in a specified enumeration.","pos":[0,98]}]}],"pos":[156893,156992],"yaml":true},{"content":"The `value` parameter can be any of the following:  \n  \n-   Any member of type `enumType`.  \n  \n-   A variable whose value is an enumeration member of type `enumType`.  \n  \n-   The string representation of the name of an enumeration member. The characters in the string must have the same case as the enumeration member name.  \n  \n-   A value of the underlying type of `enumType`.  \n  \n If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`. In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration. To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">`value`</ph> parameter can be any of the following:","source":"The `value` parameter can be any of the following:"},{"pos":[60,90],"content":"Any member of type <ph id=\"ph1\">`enumType`</ph>.","source":"Any member of type `enumType`."},{"pos":[100,167],"content":"A variable whose value is an enumeration member of type <ph id=\"ph1\">`enumType`</ph>.","source":"A variable whose value is an enumeration member of type `enumType`."},{"pos":[177,325],"content":"The string representation of the name of an enumeration member. The characters in the string must have the same case as the enumeration member name.","nodes":[{"content":"The string representation of the name of an enumeration member. The characters in the string must have the same case as the enumeration member name.","pos":[0,148],"nodes":[{"content":"The string representation of the name of an enumeration member.","pos":[0,63]},{"content":"The characters in the string must have the same case as the enumeration member name.","pos":[64,148]}]}]},{"pos":[335,380],"content":"A value of the underlying type of <ph id=\"ph1\">`enumType`</ph>.","source":"A value of the underlying type of `enumType`."},{"pos":[387,928],"content":"If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`. In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration. To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.","nodes":[{"content":"If the constants in <ph id=\"ph1\">`enumType`</ph> define a set of bit fields and <ph id=\"ph2\">`value`</ph> contains the values, names, or underlying values of multiple bit fields, the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method returns <ph id=\"ph4\">`false`</ph>.","pos":[0,202],"source":"If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`."},{"content":"In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration.","pos":[203,350]},{"content":"To determine whether multiple bit fields are set in an enumeration type that is tagged with the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> attribute, you can call the <ph id=\"ph2\">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> method.","pos":[351,541],"source":" To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method."}]}],"pos":[157003,157944],"yaml":true,"extradata":"MT"},{"content":"An enumeration type.","nodes":[{"pos":[0,20],"content":"An enumeration type.","nodes":[{"content":"An enumeration type.","pos":[0,20]}]}],"pos":[158745,158766],"yaml":true},{"content":"The value or name of a constant in <code>enumType</code>.","nodes":[{"pos":[0,57],"content":"The value or name of a constant in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The value or name of a constant in <code>enumType</code>."}],"pos":[158827,158885],"yaml":true},{"content":"`true` if a constant in <code>enumType</code> has a value equal to <code>value</code>; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if a constant in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept> has a value equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if a constant in <code>enumType</code> has a value equal to <code>value</code>; otherwise, `false`."}],"pos":[158943,159052],"yaml":true},{"content":"<code>enumType</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>enumType</code> or <code>value</code> is `null`."}],"pos":[159203,159258],"yaml":true},{"content":"<code>enumType</code> is not an `Enum`.  \n  \n -or-  \n  \n The type of <code>value</code> is an enumeration, but it is not an enumeration of type <code>enumType</code>.  \n  \n -or-  \n  \n The type of <code>value</code> is not an underlying type of <code>enumType</code>.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">`Enum`</ph>.","source":"<code>enumType</code> is not an `Enum`."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,166],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an enumeration, but it is not an enumeration of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">enumType</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The type of <code>value</code> is an enumeration, but it is not an enumeration of type <code>enumType</code>."},{"pos":[173,177],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[184,266],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not an underlying type of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">enumType</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The type of <code>value</code> is not an underlying type of <code>enumType</code>."}],"pos":[159352,159629],"yaml":true},{"content":"<code>value</code> is not type <xref href=\"System.SByte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.UInt32\"></xref>, or <xref href=\"System.UInt64\"></xref>, or <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,354],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not type <ph id=\"ph2\">&lt;xref href=\"System.SByte\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Int16\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph6\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph7\">&lt;xref href=\"System.UInt16\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph8\">&lt;xref href=\"System.UInt32\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph9\">&lt;xref href=\"System.UInt64\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph10\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is not type <xref href=\"System.SByte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.UInt32\"></xref>, or <xref href=\"System.UInt64\"></xref>, or <xref href=\"System.String\"></xref>."}],"pos":[159739,160094],"yaml":true},{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.","nodes":[{"pos":[0,135],"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.","nodes":[{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.","pos":[0,135]}]}],"pos":[161628,161764],"yaml":true},{"content":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,). One or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.  \n  \n If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>. If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`. The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.  \n  \n [!code-csharp[System.Enum.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)]\n [!code-vb[System.Enum.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)]  \n  \n This operation is case-sensitive.","nodes":[{"pos":[0,374],"content":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,). One or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.","nodes":[{"content":"The <ph id=\"ph1\">`value`</ph> parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).","pos":[0,173],"source":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,)."},{"content":"One or more blank spaces can precede or follow each value, name, or comma in <ph id=\"ph1\">`value`</ph>.","pos":[174,259],"source":" One or more blank spaces can precede or follow each value, name, or comma in `value`."},{"content":"If <ph id=\"ph1\">`value`</ph> is a list, the return value is the value of the specified names combined with a bitwise <ph id=\"ph2\">`OR`</ph> operation.","pos":[260,374],"source":" If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation."}]},{"pos":[381,1268],"content":"If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>. If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`. The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is a name that does not correspond to a named constant of <ph id=\"ph2\">`enumType`</ph>, the method throws an <ph id=\"ph3\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,134],"source":"If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>."},{"content":"If <ph id=\"ph1\">`value`</ph> is the string representation of an integer that does not represent an underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, the method returns an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph> converted to an integral type.","pos":[135,369],"source":" If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type."},{"content":"If this behavior is undesirable, call the <ph id=\"ph1\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that a particular string representation of an integer is actually a member of <ph id=\"ph2\">`enumType`</ph>.","pos":[370,550],"source":" If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`."},{"content":"The following example defines a <ph id=\"ph1\">`Colors`</ph> enumeration, calls the <ph id=\"ph2\">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> method to convert strings to their corresponding enumeration values, and calls the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that particular integral values are underlying values in the <ph id=\"ph4\">`Colors`</ph> enumeration.","pos":[551,887],"source":" The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration."}]},{"pos":[1275,1528],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Parse#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Parse#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)]\n [!code-vb[System.Enum.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)]"},{"pos":[1535,1568],"content":"This operation is case-sensitive.","nodes":[{"content":"This operation is case-sensitive.","pos":[0,33]}]}],"pos":[161775,163353],"yaml":true,"extradata":"MT"},{"content":"An enumeration type.","nodes":[{"pos":[0,20],"content":"An enumeration type.","nodes":[{"content":"An enumeration type.","pos":[0,20]}]}],"pos":[164239,164260],"yaml":true},{"content":"A string containing the name or value to convert.","nodes":[{"pos":[0,49],"content":"A string containing the name or value to convert.","nodes":[{"content":"A string containing the name or value to convert.","pos":[0,49]}]}],"pos":[164321,164371],"yaml":true},{"content":"An object of type <code>enumType</code> whose value is represented by <code>value</code>.","nodes":[{"pos":[0,89],"content":"An object of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept> whose value is represented by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object of type <code>enumType</code> whose value is represented by <code>value</code>."}],"pos":[164428,164518],"yaml":true},{"content":"<code>enumType</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>enumType</code> or <code>value</code> is `null`."}],"pos":[164665,164720],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.  \n  \n -or-  \n  \n <code>value</code> is either an empty string or only contains white space.  \n  \n -or-  \n  \n <code>value</code> is a name, but not one of the named constants defined for the enumeration.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,157],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is either an empty string or only contains white space.","source":"<code>value</code> is either an empty string or only contains white space."},{"pos":[164,168],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[175,268],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is a name, but not one of the named constants defined for the enumeration.","source":"<code>value</code> is a name, but not one of the named constants defined for the enumeration."}],"pos":[164814,165095],"yaml":true},{"content":"<code>value</code> is outside the range of the underlying type of <code>enumType</code>.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is outside the range of the underlying type of <ph id=\"ph2\">&lt;code&gt;enumType&lt;/code&gt;</ph>.","source":"<code>value</code> is outside the range of the underlying type of <code>enumType</code>."}],"pos":[165189,165278],"yaml":true},{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-insensitive.","nodes":[{"pos":[0,200],"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-insensitive.","nodes":[{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-insensitive.","pos":[0,200],"nodes":[{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.","pos":[0,135]},{"content":"A parameter specifies whether the operation is case-insensitive.","pos":[136,200]}]}]}],"pos":[166884,167085],"yaml":true},{"content":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,). One or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.  \n  \n If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>. If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`. The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.  \n  \n [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]\n [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  \n  \n The `ignoreCase` parameter specifies whether this operation is case-sensitive.","nodes":[{"pos":[0,374],"content":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,). One or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.","nodes":[{"content":"The <ph id=\"ph1\">`value`</ph> parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).","pos":[0,173],"source":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,)."},{"content":"One or more blank spaces can precede or follow each value, name, or comma in <ph id=\"ph1\">`value`</ph>.","pos":[174,259],"source":" One or more blank spaces can precede or follow each value, name, or comma in `value`."},{"content":"If <ph id=\"ph1\">`value`</ph> is a list, the return value is the value of the specified names combined with a bitwise <ph id=\"ph2\">`OR`</ph> operation.","pos":[260,374],"source":" If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation."}]},{"pos":[381,1285],"content":"If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>. If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`. The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is a name that does not correspond to a named constant of <ph id=\"ph2\">`enumType`</ph>, the method throws an <ph id=\"ph3\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,134],"source":"If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>."},{"content":"If <ph id=\"ph1\">`value`</ph> is the string representation of an integer that does not represent an underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, the method returns an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph> converted to an integral type.","pos":[135,369],"source":" If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type."},{"content":"If this behavior is undesirable, call the <ph id=\"ph1\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that a particular string representation of an integer is actually a member of <ph id=\"ph2\">`enumType`</ph>.","pos":[370,550],"source":" If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`."},{"content":"The following example defines a <ph id=\"ph1\">`Colors`</ph> enumeration, calls the <ph id=\"ph2\">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to convert strings to their corresponding enumeration values, and calls the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that particular integral values are underlying values in the <ph id=\"ph4\">`Colors`</ph> enumeration.","pos":[551,904],"source":" The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration."}]},{"pos":[1292,1545],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Enum.Parse#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Enum.Parse#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]\n [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]"},{"pos":[1552,1630],"content":"The <ph id=\"ph1\">`ignoreCase`</ph> parameter specifies whether this operation is case-sensitive.","source":"The `ignoreCase` parameter specifies whether this operation is case-sensitive."}],"pos":[167096,168736],"yaml":true,"extradata":"MT"},{"content":"An enumeration type.","nodes":[{"pos":[0,20],"content":"An enumeration type.","nodes":[{"content":"An enumeration type.","pos":[0,20]}]}],"pos":[169613,169634],"yaml":true},{"content":"A string containing the name or value to convert.","nodes":[{"pos":[0,49],"content":"A string containing the name or value to convert.","nodes":[{"content":"A string containing the name or value to convert.","pos":[0,49]}]}],"pos":[169695,169745],"yaml":true},{"content":"`true` to ignore case; `false` to regard case.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">`true`</ph> to ignore case; <ph id=\"ph2\">`false`</ph> to regard case.","source":"`true` to ignore case; `false` to regard case."}],"pos":[169812,169861],"yaml":true},{"content":"An object of type <code>enumType</code> whose value is represented by <code>value</code>.","nodes":[{"pos":[0,89],"content":"An object of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">enumType</ph><ept id=\"p1\">&lt;/code&gt;</ept> whose value is represented by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object of type <code>enumType</code> whose value is represented by <code>value</code>."}],"pos":[169918,170008],"yaml":true},{"content":"<code>enumType</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>enumType</code> or <code>value</code> is `null`."}],"pos":[170155,170210],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.  \n  \n -or-  \n  \n <code>value</code> is either an empty string (\"\") or only contains white space.  \n  \n -or-  \n  \n <code>value</code> is a name, but not one of the named constants defined for the enumeration.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,162],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is either an empty string (\"\") or only contains white space.","source":"<code>value</code> is either an empty string (\"\") or only contains white space."},{"pos":[169,173],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[180,273],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is a name, but not one of the named constants defined for the enumeration.","source":"<code>value</code> is a name, but not one of the named constants defined for the enumeration."}],"pos":[170304,170592],"yaml":true},{"content":"<code>value</code> is outside the range of the underlying type of <code>enumType</code>.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is outside the range of the underlying type of <ph id=\"ph2\">&lt;code&gt;enumType&lt;/code&gt;</ph>.","source":"<code>value</code> is outside the range of the underlying type of <code>enumType</code>."}],"pos":[170686,170775],"yaml":true},{"content":"Converts the specified 16-bit signed integer to an enumeration member.","nodes":[{"pos":[0,70],"content":"Converts the specified 16-bit signed integer to an enumeration member.","nodes":[{"content":"Converts the specified 16-bit signed integer to an enumeration member.","pos":[0,70]}]}],"pos":[174112,174183],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,377],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29&gt;</ph> method converts <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,147],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[148,240],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[241,377],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[384,520],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[174194,174719],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[174946,174978],"yaml":true},{"content":"The value to convert to an enumeration member.","nodes":[{"pos":[0,46],"content":"The value to convert to an enumeration member.","nodes":[{"content":"The value to convert to an enumeration member.","pos":[0,46]}]}],"pos":[175038,175085],"yaml":true},{"content":"An instance of the enumeration set to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An instance of the enumeration set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An instance of the enumeration set to <code>value</code>."}],"pos":[175142,175200],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[175350,175383],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[175477,175543],"yaml":true},{"content":"Converts the specified 64-bit unsigned integer value to an enumeration member.","nodes":[{"pos":[0,78],"content":"Converts the specified 64-bit unsigned integer value to an enumeration member.","nodes":[{"content":"Converts the specified 64-bit unsigned integer value to an enumeration member.","pos":[0,78]}]}],"pos":[176751,176830],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,378],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29&gt;</ph> method converts <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,148],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[149,241],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[242,378],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[385,521],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[176841,177367],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[177630,177662],"yaml":true},{"content":"The value to convert to an enumeration member.","nodes":[{"pos":[0,46],"content":"The value to convert to an enumeration member.","nodes":[{"content":"The value to convert to an enumeration member.","pos":[0,46]}]}],"pos":[177723,177770],"yaml":true},{"content":"An instance of the enumeration set to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An instance of the enumeration set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An instance of the enumeration set to <code>value</code>."}],"pos":[177827,177885],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[178035,178068],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[178162,178228],"yaml":true},{"content":"Converts the specified 32-bit unsigned integer value to an enumeration member.","nodes":[{"pos":[0,78],"content":"Converts the specified 32-bit unsigned integer value to an enumeration member.","nodes":[{"content":"Converts the specified 32-bit unsigned integer value to an enumeration member.","pos":[0,78]}]}],"pos":[179475,179554],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,378],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29&gt;</ph> method converts <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,148],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[149,241],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[242,378],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[385,521],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[179565,180091],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[180353,180385],"yaml":true},{"content":"The value to convert to an enumeration member.","nodes":[{"pos":[0,46],"content":"The value to convert to an enumeration member.","nodes":[{"content":"The value to convert to an enumeration member.","pos":[0,46]}]}],"pos":[180446,180493],"yaml":true},{"content":"An instance of the enumeration set to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An instance of the enumeration set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An instance of the enumeration set to <code>value</code>."}],"pos":[180550,180608],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[180758,180791],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[180885,180951],"yaml":true},{"content":"Converts the specified 16-bit unsigned integer value to an enumeration member.","nodes":[{"pos":[0,78],"content":"Converts the specified 16-bit unsigned integer value to an enumeration member.","nodes":[{"content":"Converts the specified 16-bit unsigned integer value to an enumeration member.","pos":[0,78]}]}],"pos":[182198,182277],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,378],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29&gt;</ph> method converts <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,148],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[149,241],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[242,378],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[385,521],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[182288,182814],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[183078,183110],"yaml":true},{"content":"The value to convert to an enumeration member.","nodes":[{"pos":[0,46],"content":"The value to convert to an enumeration member.","nodes":[{"content":"The value to convert to an enumeration member.","pos":[0,46]}]}],"pos":[183171,183218],"yaml":true},{"content":"An instance of the enumeration set to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An instance of the enumeration set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An instance of the enumeration set to <code>value</code>."}],"pos":[183275,183333],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[183483,183516],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[183610,183676],"yaml":true},{"content":"Converts the specified 8-bit signed integer value to an enumeration member.","nodes":[{"pos":[0,75],"content":"Converts the specified 8-bit signed integer value to an enumeration member.","nodes":[{"content":"Converts the specified 8-bit signed integer value to an enumeration member.","pos":[0,75]}]}],"pos":[184917,184993],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,377],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29&gt;</ph> method converts <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,147],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[148,240],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[241,377],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[384,520],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[185004,185529],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[185792,185824],"yaml":true},{"content":"The value to convert to an enumeration member.","nodes":[{"pos":[0,46],"content":"The value to convert to an enumeration member.","nodes":[{"content":"The value to convert to an enumeration member.","pos":[0,46]}]}],"pos":[185884,185931],"yaml":true},{"content":"An instance of the enumeration set to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An instance of the enumeration set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An instance of the enumeration set to <code>value</code>."}],"pos":[185988,186046],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[186196,186229],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[186323,186389],"yaml":true},{"content":"Converts the specified object with an integer value to an enumeration member.","nodes":[{"pos":[0,77],"content":"Converts the specified object with an integer value to an enumeration member.","nodes":[{"content":"Converts the specified object with an integer value to an enumeration member.","pos":[0,77]}]}],"pos":[187636,187714],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,397],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29&gt;</ph> method converts the integral value <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,167],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[168,260],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[261,397],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[404,540],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[187725,188270],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[188498,188530],"yaml":true},{"content":"The value convert to an enumeration member.","nodes":[{"pos":[0,43],"content":"The value convert to an enumeration member.","nodes":[{"content":"The value convert to an enumeration member.","pos":[0,43]}]}],"pos":[188591,188635],"yaml":true},{"content":"An enumeration object whose value is <code>value</code>.","nodes":[{"pos":[0,56],"content":"An enumeration object whose value is <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An enumeration object whose value is <code>value</code>."}],"pos":[188692,188749],"yaml":true},{"content":"<code>enumType</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>enumType</code> or <code>value</code> is `null`."}],"pos":[188899,188954],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.  \n  \n -or-  \n  \n <code>value</code> is not type <xref href=\"System.SByte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.UInt32\"></xref>, or <xref href=\"System.UInt64\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,398],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not type <ph id=\"ph2\">&lt;xref href=\"System.SByte\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Int16\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph6\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph7\">&lt;xref href=\"System.UInt16\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph8\">&lt;xref href=\"System.UInt32\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph9\">&lt;xref href=\"System.UInt64\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is not type <xref href=\"System.SByte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.UInt32\"></xref>, or <xref href=\"System.UInt64\"></xref>."}],"pos":[189048,189471],"yaml":true},{"content":"Converts the specified 64-bit signed integer to an enumeration member.","nodes":[{"pos":[0,70],"content":"Converts the specified 64-bit signed integer to an enumeration member.","nodes":[{"content":"Converts the specified 64-bit signed integer to an enumeration member.","pos":[0,70]}]}],"pos":[191017,191088],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,377],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29&gt;</ph> method converts <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,147],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[148,240],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[241,377],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[384,520],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[191099,191624],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[191850,191882],"yaml":true},{"content":"The value to convert to an enumeration member.","nodes":[{"pos":[0,46],"content":"The value to convert to an enumeration member.","nodes":[{"content":"The value to convert to an enumeration member.","pos":[0,46]}]}],"pos":[191942,191989],"yaml":true},{"content":"An instance of the enumeration set to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An instance of the enumeration set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An instance of the enumeration set to <code>value</code>."}],"pos":[192046,192104],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[192254,192287],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[192381,192447],"yaml":true},{"content":"Converts the specified 32-bit signed integer to an enumeration member.","nodes":[{"pos":[0,70],"content":"Converts the specified 32-bit signed integer to an enumeration member.","nodes":[{"content":"Converts the specified 32-bit signed integer to an enumeration member.","pos":[0,70]}]}],"pos":[193649,193720],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,377],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29&gt;</ph> method converts <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,147],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[148,240],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[241,377],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[384,520],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[193731,194256],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[194481,194513],"yaml":true},{"content":"The value to convert to an enumeration member.","nodes":[{"pos":[0,46],"content":"The value to convert to an enumeration member.","nodes":[{"content":"The value to convert to an enumeration member.","pos":[0,46]}]}],"pos":[194573,194620],"yaml":true},{"content":"An instance of the enumeration set to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An instance of the enumeration set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An instance of the enumeration set to <code>value</code>."}],"pos":[194677,194735],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[194885,194918],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[195012,195078],"yaml":true},{"content":"Converts the specified 8-bit unsigned integer to an enumeration member.","nodes":[{"pos":[0,71],"content":"Converts the specified 8-bit unsigned integer to an enumeration member.","nodes":[{"content":"Converts the specified 8-bit unsigned integer to an enumeration member.","pos":[0,71]}]}],"pos":[196274,196346],"yaml":true},{"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \n  \n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"pos":[0,376],"content":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29&gt;</ph> method converts <ph id=\"ph2\">`value`</ph> to an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph>.","pos":[0,146],"source":"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`."},{"content":"Note that the conversion succeeds even if value is outside the bounds of <ph id=\"ph1\">`enumType`</ph> members.","pos":[147,239],"source":" Note that the conversion succeeds even if value is outside the bounds of `enumType` members."},{"content":"To ensure that <ph id=\"ph1\">`value`</ph> is a valid underlying value of the <ph id=\"ph2\">`enumType`</ph> enumeration, pass it to the <ph id=\"ph3\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.","pos":[240,376],"source":" To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method."}]},{"pos":[383,519],"content":"This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.","nodes":[{"content":"This conversion method returns a value of type <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph>.","pos":[0,68],"source":"This conversion method returns a value of type <xref:System.Object>."},{"content":"You can then cast it or convert it to an object of type <ph id=\"ph1\">`enumType`</ph>.","pos":[69,136],"source":" You can then cast it or convert it to an object of type `enumType`."}]}],"pos":[196357,196881],"yaml":true,"extradata":"MT"},{"content":"The enumeration type to return.","nodes":[{"pos":[0,31],"content":"The enumeration type to return.","nodes":[{"content":"The enumeration type to return.","pos":[0,31]}]}],"pos":[197107,197139],"yaml":true},{"content":"The value to convert to an enumeration member.","nodes":[{"pos":[0,46],"content":"The value to convert to an enumeration member.","nodes":[{"content":"The value to convert to an enumeration member.","pos":[0,46]}]}],"pos":[197198,197245],"yaml":true},{"content":"An instance of the enumeration set to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An instance of the enumeration set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An instance of the enumeration set to <code>value</code>."}],"pos":[197302,197360],"yaml":true},{"content":"<code>enumType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>enumType</code> is `null`."}],"pos":[197510,197543],"yaml":true},{"content":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;enumType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Enum\"&gt;&lt;/xref&gt;</ph>.","source":"<code>enumType</code> is not an <xref href=\"System.Enum\"></xref>."}],"pos":[197637,197703],"yaml":true},{"content":"This method overload is obsolete; use <xref href=\"System.Enum.ToString(System.String)\"></xref>.","nodes":[{"pos":[0,95],"content":"This method overload is obsolete; use <ph id=\"ph1\">&lt;xref href=\"System.Enum.ToString(System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"This method overload is obsolete; use <xref href=\"System.Enum.ToString(System.String)\"></xref>."}],"pos":[198977,199073],"yaml":true},{"content":"The `format` parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive). If `format` is `null` or an empty string (\"\"), the general format specifier (\"G\") is used. For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n Specify only `format`; the `provider` parameter is obsolete.","nodes":[{"pos":[0,545],"content":"The `format` parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive). If `format` is `null` or an empty string (\"\"), the general format specifier (\"G\") is used. For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive).","pos":[0,147],"source":"The `format` parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive)."},{"content":"If <ph id=\"ph1\">`format`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string (\"\"), the general format specifier (\"G\") is used.","pos":[148,238],"source":" If `format` is `null` or an empty string (\"\"), the general format specifier (\"G\") is used."},{"content":"For more information about the enumeration format strings and formatting enumeration values, see <bpt id=\"p1\">[</bpt>Enumeration Format Strings<ept id=\"p1\">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.","pos":[239,423],"source":" For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)."},{"content":"For more information about formatting in general, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","pos":[424,545],"source":" For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."}]},{"pos":[552,612],"content":"Specify only <ph id=\"ph1\">`format`</ph>; the <ph id=\"ph2\">`provider`</ph> parameter is obsolete.","source":"Specify only `format`; the `provider` parameter is obsolete."}],"pos":[199084,199721],"yaml":true,"extradata":"MT"},{"content":"A format specification.","nodes":[{"pos":[0,23],"content":"A format specification.","nodes":[{"content":"A format specification.","pos":[0,23]}]}],"pos":[199989,200013],"yaml":true},{"content":"(Obsolete.)","nodes":[{"pos":[0,11],"content":"(Obsolete.)","nodes":[{"content":"(Obsolete.)","pos":[0,11]}]}],"pos":[200086,200098],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>format</code>.","nodes":[{"pos":[0,92],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>format</code>."}],"pos":[200155,200248],"yaml":true},{"content":"<code>format</code> does not contain a valid format specification.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> does not contain a valid format specification.","source":"<code>format</code> does not contain a valid format specification."}],"pos":[200386,200453],"yaml":true},{"content":"<code>format</code> equals \"X\", but the enumeration type is unknown.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> equals \"X\", but the enumeration type is unknown.","source":"<code>format</code> equals \"X\", but the enumeration type is unknown."}],"pos":[200563,200632],"yaml":true},{"content":"Converts the value of this instance to its equivalent string representation using the specified format.","nodes":[{"pos":[0,103],"content":"Converts the value of this instance to its equivalent string representation using the specified format.","nodes":[{"content":"Converts the value of this instance to its equivalent string representation using the specified format.","pos":[0,103]}]}],"pos":[201760,201864],"yaml":true},{"content":"The `format` parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive). If `format` is `null` or an empty string (\"\"), the general format specifier (\"G\") is used. For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"pos":[0,545],"content":"The `format` parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive). If `format` is `null` or an empty string (\"\"), the general format specifier (\"G\") is used. For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive).","pos":[0,147],"source":"The `format` parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive)."},{"content":"If <ph id=\"ph1\">`format`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string (\"\"), the general format specifier (\"G\") is used.","pos":[148,238],"source":" If `format` is `null` or an empty string (\"\"), the general format specifier (\"G\") is used."},{"content":"For more information about the enumeration format strings and formatting enumeration values, see <bpt id=\"p1\">[</bpt>Enumeration Format Strings<ept id=\"p1\">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.","pos":[239,423],"source":" For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)."},{"content":"For more information about formatting in general, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","pos":[424,545],"source":" For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."}]}],"pos":[201875,202421],"yaml":true,"extradata":"MT"},{"content":"A format string.","nodes":[{"pos":[0,16],"content":"A format string.","nodes":[{"content":"A format string.","pos":[0,16]}]}],"pos":[202980,202997],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>format</code>.","nodes":[{"pos":[0,92],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>format</code>."}],"pos":[203054,203147],"yaml":true},{"content":"<code>format</code> contains an invalid specification.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> contains an invalid specification.","source":"<code>format</code> contains an invalid specification."}],"pos":[203285,203340],"yaml":true},{"content":"<code>format</code> equals \"X\", but the enumeration type is unknown.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> equals \"X\", but the enumeration type is unknown.","source":"<code>format</code> equals \"X\", but the enumeration type is unknown."}],"pos":[203450,203519],"yaml":true},{"content":"This method overload is obsolete; use <xref href=\"System.Enum.ToString\"></xref>.","nodes":[{"pos":[0,80],"content":"This method overload is obsolete; use <ph id=\"ph1\">&lt;xref href=\"System.Enum.ToString\"&gt;&lt;/xref&gt;</ph>.","source":"This method overload is obsolete; use <xref href=\"System.Enum.ToString\"></xref>."}],"pos":[204996,205077],"yaml":true},{"content":"(obsolete)","nodes":[{"pos":[0,10],"content":"(obsolete)","nodes":[{"content":"(obsolete)","pos":[0,10]}]}],"pos":[205335,205346],"yaml":true},{"content":"The string representation of the value of this instance.","nodes":[{"pos":[0,56],"content":"The string representation of the value of this instance.","nodes":[{"content":"The string representation of the value of this instance.","pos":[0,56]}]}],"pos":[205403,205460],"yaml":true},{"content":"Converts the value of this instance to its equivalent string representation.","nodes":[{"pos":[0,76],"content":"Converts the value of this instance to its equivalent string representation.","nodes":[{"content":"Converts the value of this instance to its equivalent string representation.","pos":[0,76]}]}],"pos":[206576,206653],"yaml":true},{"content":"The return value is formatted with the general format specifier (\"G\"). That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant. If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants. Otherwise, the return value is the string representation of the numeric value of this instance. For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"pos":[0,905],"content":"The return value is formatted with the general format specifier (\"G\"). That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant. If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants. Otherwise, the return value is the string representation of the numeric value of this instance. For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"content":"The return value is formatted with the general format specifier (\"G\").","pos":[0,70]},{"content":"That is, if the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant.","pos":[71,292],"source":" That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.FlagsAttribute&gt;</ph> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants.","pos":[293,537],"source":" If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants."},{"content":"Otherwise, the return value is the string representation of the numeric value of this instance.","pos":[538,633]},{"content":"For more information about formatting enumeration values, see <bpt id=\"p1\">[</bpt>Enumeration Format Strings<ept id=\"p1\">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.","pos":[634,783],"source":" For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)."},{"content":"For more information about formatting in general, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","pos":[784,905],"source":" For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."}]}],"pos":[206664,207570],"yaml":true,"extradata":"MT"},{"content":"The string representation of the value of this instance.","nodes":[{"pos":[0,56],"content":"The string representation of the value of this instance.","nodes":[{"content":"The string representation of the value of this instance.","pos":[0,56]}]}],"pos":[208248,208305],"yaml":true},{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.","nodes":[{"pos":[0,259],"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.","nodes":[{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.","pos":[0,259],"nodes":[{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.","pos":[0,135]},{"content":"A parameter specifies whether the operation is case-sensitive.","pos":[136,198]},{"content":"The return value indicates whether the conversion succeeded.","pos":[199,259]}]}]}],"pos":[212104,212364],"yaml":true},{"content":"<xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails. It eliminates the need for exception handling when parsing the string representation of an enumeration value.  \n  \n The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,). If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation. If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter. If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.  \n  \n If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`. If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.","nodes":[{"pos":[0,386],"content":"<xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails. It eliminates the need for exception handling when parsing the string representation of an enumeration value.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29&gt;</ph> is identical to the <ph id=\"ph2\">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method, except that instead of throwing an exception, it returns <ph id=\"ph3\">`false`</ph> if the conversion fails.","pos":[0,276],"source":"<xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails."},{"content":"It eliminates the need for exception handling when parsing the string representation of an enumeration value.","pos":[277,386]}]},{"pos":[393,1109],"content":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,). If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation. If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter. If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.","nodes":[{"content":"The <ph id=\"ph1\">`value`</ph> parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).","pos":[0,194],"source":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,)."},{"content":"If <ph id=\"ph1\">`value`</ph> includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in <ph id=\"ph2\">`value`</ph>.","pos":[195,336],"source":" If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`."},{"content":"If <ph id=\"ph1\">`value`</ph> is a list, <ph id=\"ph2\">`result`</ph> reflects the value of the specified names or underlying values combined with a bitwise <ph id=\"ph3\">`OR`</ph> operation.","pos":[337,470],"source":" If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation."},{"content":"If <ph id=\"ph1\">`value`</ph> is the string representation of the name of an enumeration value, the comparison of <ph id=\"ph2\">`value`</ph> with enumeration names depends on the <ph id=\"ph3\">`ignoreCase`</ph> parameter.","pos":[471,635],"source":" If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter."},{"content":"If <ph id=\"ph1\">`true`</ph>, the comparison is case-insensitive; if <ph id=\"ph2\">`false`</ph>, it is case-sensitive.","pos":[636,716],"source":" If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive."}]},{"pos":[1116,1631],"content":"If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`. If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is a name that does not correspond to a named constant of <ph id=\"ph2\">`TEnum`</ph>, the method returns <ph id=\"ph3\">`false`</ph>.","pos":[0,105],"source":"If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`."},{"content":"If <ph id=\"ph1\">`value`</ph> is the string representation of an integer that does not represent an underlying value of the <ph id=\"ph2\">`TEnum`</ph> enumeration, the method returns an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph> converted to an integral type.","pos":[106,337],"source":" If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type."},{"content":"If this behavior is undesirable, call the <ph id=\"ph1\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that a particular string representation of an integer is actually a member of <ph id=\"ph2\">`TEnum`</ph>.","pos":[338,515],"source":" If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`."}]}],"pos":[212375,214013],"yaml":true,"extradata":"MT"},{"content":"The string representation of the enumeration name or underlying value to convert.","nodes":[{"pos":[0,81],"content":"The string representation of the enumeration name or underlying value to convert.","nodes":[{"content":"The string representation of the enumeration name or underlying value to convert.","pos":[0,81]}]}],"pos":[215106,215188],"yaml":true},{"content":"`true` to ignore case; `false` to consider case.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">`true`</ph> to ignore case; <ph id=\"ph2\">`false`</ph> to consider case.","source":"`true` to ignore case; `false` to consider case."}],"pos":[215255,215306],"yaml":true},{"content":"When this method returns, <code>result</code> contains an object of type <code>TEnum</code> whose value is represented by <code>value</code> if the parse operation succeeds. If the parse operation fails, <code>result</code> contains the default value of the underlying type of <code>TEnum</code>. Note that this value need not be a member of the <code>TEnum</code> enumeration. This parameter is passed uninitialized.","nodes":[{"pos":[0,417],"content":"When this method returns, <code>result</code> contains an object of type <code>TEnum</code> whose value is represented by <code>value</code> if the parse operation succeeds. If the parse operation fails, <code>result</code> contains the default value of the underlying type of <code>TEnum</code>. Note that this value need not be a member of the <code>TEnum</code> enumeration. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">result</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an object of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">TEnum</ph><ept id=\"p2\">&lt;/code&gt;</ept> whose value is represented by <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p3\">&lt;/code&gt;</ept> if the parse operation succeeds.","pos":[0,173],"source":"When this method returns, <code>result</code> contains an object of type <code>TEnum</code> whose value is represented by <code>value</code> if the parse operation succeeds."},{"content":"If the parse operation fails, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">result</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains the default value of the underlying type of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">TEnum</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[174,296],"source":" If the parse operation fails, <code>result</code> contains the default value of the underlying type of <code>TEnum</code>."},{"content":"Note that this value need not be a member of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TEnum</ph><ept id=\"p1\">&lt;/code&gt;</ept> enumeration.","pos":[297,377],"source":" Note that this value need not be a member of the <code>TEnum</code> enumeration."},{"content":"This parameter is passed uninitialized.","pos":[378,417]}]}],"pos":[215360,215778],"yaml":true},{"content":"The enumeration type to which to convert <code>value</code>.","nodes":[{"pos":[0,60],"content":"The enumeration type to which to convert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The enumeration type to which to convert <code>value</code>."}],"pos":[215833,215894],"yaml":true},{"content":"`true` if the <code>value</code> parameter was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>value</code> parameter was converted successfully; otherwise, `false`."}],"pos":[215952,216045],"yaml":true},{"content":"<code>TEnum</code> is not an enumeration type.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;TEnum&lt;/code&gt;</ph> is not an enumeration type.","source":"<code>TEnum</code> is not an enumeration type."}],"pos":[216190,216237],"yaml":true},{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. The return value indicates whether the conversion succeeded.","nodes":[{"pos":[0,196],"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. The return value indicates whether the conversion succeeded.","nodes":[{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. The return value indicates whether the conversion succeeded.","pos":[0,196],"nodes":[{"content":"Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.","pos":[0,135]},{"content":"The return value indicates whether the conversion succeeded.","pos":[136,196]}]}]}],"pos":[217726,217923],"yaml":true},{"content":"<xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails. It eliminates the need for exception handling when parsing the string representation of an enumeration value.  \n  \n The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,). If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation. If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.  \n  \n If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`. If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.","nodes":[{"pos":[0,352],"content":"<xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails. It eliminates the need for exception handling when parsing the string representation of an enumeration value.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29&gt;</ph> is identical to the <ph id=\"ph2\">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> method, except that instead of throwing an exception, it returns <ph id=\"ph3\">`false`</ph> if the conversion fails.","pos":[0,242],"source":"<xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails."},{"content":"It eliminates the need for exception handling when parsing the string representation of an enumeration value.","pos":[243,352]}]},{"pos":[359,974],"content":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,). If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation. If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.","nodes":[{"content":"The <ph id=\"ph1\">`value`</ph> parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).","pos":[0,194],"source":"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,)."},{"content":"If <ph id=\"ph1\">`value`</ph> includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in <ph id=\"ph2\">`value`</ph>.","pos":[195,336],"source":" If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`."},{"content":"If <ph id=\"ph1\">`value`</ph> is a list, <ph id=\"ph2\">`result`</ph> reflects the value of the specified names or underlying values combined with a bitwise <ph id=\"ph3\">`OR`</ph> operation.","pos":[337,470],"source":" If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation."},{"content":"If <ph id=\"ph1\">`value`</ph> is the string representation of the name of an enumeration value, the comparison of <ph id=\"ph2\">`value`</ph> with enumeration names is case-sensitive.","pos":[471,615],"source":" If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive."}]},{"pos":[981,1496],"content":"If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`. If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is a name that does not correspond to a named constant of <ph id=\"ph2\">`TEnum`</ph>, the method returns <ph id=\"ph3\">`false`</ph>.","pos":[0,105],"source":"If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`."},{"content":"If <ph id=\"ph1\">`value`</ph> is the string representation of an integer that does not represent an underlying value of the <ph id=\"ph2\">`TEnum`</ph> enumeration, the method returns an enumeration member whose underlying value is <ph id=\"ph3\">`value`</ph> converted to an integral type.","pos":[106,337],"source":" If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type."},{"content":"If this behavior is undesirable, call the <ph id=\"ph1\">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that a particular string representation of an integer is actually a member of <ph id=\"ph2\">`TEnum`</ph>.","pos":[338,515],"source":" If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`."}]}],"pos":[217934,219437],"yaml":true,"extradata":"MT"},{"content":"The string representation of the enumeration name or underlying value to convert.","nodes":[{"pos":[0,81],"content":"The string representation of the enumeration name or underlying value to convert.","nodes":[{"content":"The string representation of the enumeration name or underlying value to convert.","pos":[0,81]}]}],"pos":[220259,220341],"yaml":true},{"content":"When this method returns, <code>result</code> contains an object of type <code>TEnum</code> whose value is represented by <code>value</code> if the parse operation succeeds. If the parse operation fails, <code>result</code> contains the default value of the underlying type of <code>TEnum</code>. Note that this value need not be a member of the <code>TEnum</code> enumeration. This parameter is passed uninitialized.","nodes":[{"pos":[0,417],"content":"When this method returns, <code>result</code> contains an object of type <code>TEnum</code> whose value is represented by <code>value</code> if the parse operation succeeds. If the parse operation fails, <code>result</code> contains the default value of the underlying type of <code>TEnum</code>. Note that this value need not be a member of the <code>TEnum</code> enumeration. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">result</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an object of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">TEnum</ph><ept id=\"p2\">&lt;/code&gt;</ept> whose value is represented by <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p3\">&lt;/code&gt;</ept> if the parse operation succeeds.","pos":[0,173],"source":"When this method returns, <code>result</code> contains an object of type <code>TEnum</code> whose value is represented by <code>value</code> if the parse operation succeeds."},{"content":"If the parse operation fails, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">result</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains the default value of the underlying type of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">TEnum</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[174,296],"source":" If the parse operation fails, <code>result</code> contains the default value of the underlying type of <code>TEnum</code>."},{"content":"Note that this value need not be a member of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TEnum</ph><ept id=\"p1\">&lt;/code&gt;</ept> enumeration.","pos":[297,377],"source":" Note that this value need not be a member of the <code>TEnum</code> enumeration."},{"content":"This parameter is passed uninitialized.","pos":[378,417]}]}],"pos":[220395,220813],"yaml":true},{"content":"The enumeration type to which to convert <code>value</code>.","nodes":[{"pos":[0,60],"content":"The enumeration type to which to convert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The enumeration type to which to convert <code>value</code>."}],"pos":[220868,220929],"yaml":true},{"content":"`true` if the <code>value</code> parameter was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>value</code> parameter was converted successfully; otherwise, `false`."}],"pos":[220987,221080],"yaml":true},{"content":"<code>TEnum</code> is not an enumeration type.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;TEnum&lt;/code&gt;</ph> is not an enumeration type.","source":"<code>TEnum</code> is not an enumeration type."}],"pos":[221225,221272],"yaml":true},{"content":"Converts the current value to a Boolean value based on the underlying type.","nodes":[{"pos":[0,75],"content":"Converts the current value to a Boolean value based on the underlying type.","nodes":[{"content":"Converts the current value to a Boolean value based on the underlying type.","pos":[0,75]}]}],"pos":[223844,223920],"yaml":true},{"content":"Currently not implemented. Always throws an exception.","nodes":[{"pos":[0,54],"content":"Currently not implemented. Always throws an exception.","nodes":[{"content":"Currently not implemented. Always throws an exception.","pos":[0,54],"nodes":[{"content":"Currently not implemented.","pos":[0,26]},{"content":"Always throws an exception.","pos":[27,54]}]}]}],"pos":[223931,223986],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[224154,224219],"yaml":true},{"content":"This member always throws an exception.","nodes":[{"pos":[0,39],"content":"This member always throws an exception.","nodes":[{"content":"This member always throws an exception.","pos":[0,39]}]}],"pos":[224277,224317],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[224486,224500],"yaml":true},{"content":"Converts the current value to an 8-bit unsigned integer based on the underlying type.","nodes":[{"pos":[0,85],"content":"Converts the current value to an 8-bit unsigned integer based on the underlying type.","nodes":[{"content":"Converts the current value to an 8-bit unsigned integer based on the underlying type.","pos":[0,85]}]}],"pos":[225958,226044],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[226055,226109],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[226274,226339],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[226394,226415],"yaml":true},{"content":"Converts the current value to a Unicode character based on the underlying type.","nodes":[{"pos":[0,79],"content":"Converts the current value to a Unicode character based on the underlying type.","nodes":[{"content":"Converts the current value to a Unicode character based on the underlying type.","pos":[0,79]}]}],"pos":[227942,228022],"yaml":true},{"content":"Currently not implemented. Always throws an exception.","nodes":[{"pos":[0,54],"content":"Currently not implemented. Always throws an exception.","nodes":[{"content":"Currently not implemented. Always throws an exception.","pos":[0,54],"nodes":[{"content":"Currently not implemented.","pos":[0,26]},{"content":"Always throws an exception.","pos":[27,54]}]}]}],"pos":[228033,228088],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[228253,228318],"yaml":true},{"content":"This member always throws an exception.","nodes":[{"pos":[0,39],"content":"This member always throws an exception.","nodes":[{"content":"This member always throws an exception.","pos":[0,39]}]}],"pos":[228373,228413],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[228579,228593],"yaml":true},{"content":"Converts the current value to a <xref href=\"System.DateTime\"></xref> based on the underlying type.","nodes":[{"pos":[0,98],"content":"Converts the current value to a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> based on the underlying type.","source":"Converts the current value to a <xref href=\"System.DateTime\"></xref> based on the underlying type."}],"pos":[230075,230174],"yaml":true},{"content":"Currently not implemented. Always throws an exception.","nodes":[{"pos":[0,54],"content":"Currently not implemented. Always throws an exception.","nodes":[{"content":"Currently not implemented. Always throws an exception.","pos":[0,54],"nodes":[{"content":"Currently not implemented.","pos":[0,26]},{"content":"Always throws an exception.","pos":[27,54]}]}]}],"pos":[230185,230240],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[230413,230478],"yaml":true},{"content":"This member always throws an exception.","nodes":[{"pos":[0,39],"content":"This member always throws an exception.","nodes":[{"content":"This member always throws an exception.","pos":[0,39]}]}],"pos":[230537,230577],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[230747,230761],"yaml":true},{"content":"Converts the current value to a <xref href=\"System.Decimal\"></xref> based on the underlying type.","nodes":[{"pos":[0,97],"content":"Converts the current value to a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> based on the underlying type.","source":"Converts the current value to a <xref href=\"System.Decimal\"></xref> based on the underlying type."}],"pos":[232237,232335],"yaml":true},{"content":"Currently not implemented. Always throws an exception.","nodes":[{"pos":[0,54],"content":"Currently not implemented. Always throws an exception.","nodes":[{"content":"Currently not implemented. Always throws an exception.","pos":[0,54],"nodes":[{"content":"Currently not implemented.","pos":[0,26]},{"content":"Always throws an exception.","pos":[27,54]}]}]}],"pos":[232346,232401],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[232572,232637],"yaml":true},{"content":"This member always throws an exception.","nodes":[{"pos":[0,39],"content":"This member always throws an exception.","nodes":[{"content":"This member always throws an exception.","pos":[0,39]}]}],"pos":[232695,232735],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[232904,232918],"yaml":true},{"content":"Converts the current value to a double-precision floating point number based on the underlying type.","nodes":[{"pos":[0,100],"content":"Converts the current value to a double-precision floating point number based on the underlying type.","nodes":[{"content":"Converts the current value to a double-precision floating point number based on the underlying type.","pos":[0,100]}]}],"pos":[234388,234489],"yaml":true},{"content":"Currently not implemented. Always throws an exception.","nodes":[{"pos":[0,54],"content":"Currently not implemented. Always throws an exception.","nodes":[{"content":"Currently not implemented. Always throws an exception.","pos":[0,54],"nodes":[{"content":"Currently not implemented.","pos":[0,26]},{"content":"Always throws an exception.","pos":[27,54]}]}]}],"pos":[234500,234555],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[234724,234789],"yaml":true},{"content":"This member always throws an exception.","nodes":[{"pos":[0,39],"content":"This member always throws an exception.","nodes":[{"content":"This member always throws an exception.","pos":[0,39]}]}],"pos":[234846,234886],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[235054,235068],"yaml":true},{"content":"Converts the current value to a 16-bit signed integer based on the underlying type.","nodes":[{"pos":[0,83],"content":"Converts the current value to a 16-bit signed integer based on the underlying type.","nodes":[{"content":"Converts the current value to a 16-bit signed integer based on the underlying type.","pos":[0,83]}]}],"pos":[236532,236616],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[236627,236681],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[236848,236913],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[236969,236990],"yaml":true},{"content":"Converts the current value to a 32-bit signed integer based on the underlying type.","nodes":[{"pos":[0,83],"content":"Converts the current value to a 32-bit signed integer based on the underlying type.","nodes":[{"content":"Converts the current value to a 32-bit signed integer based on the underlying type.","pos":[0,83]}]}],"pos":[238524,238608],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[238619,238673],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[238838,238903],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[238959,238980],"yaml":true},{"content":"Converts the current value to a 64-bit signed integer based on the underlying type.","nodes":[{"pos":[0,83],"content":"Converts the current value to a 64-bit signed integer based on the underlying type.","nodes":[{"content":"Converts the current value to a 64-bit signed integer based on the underlying type.","pos":[0,83]}]}],"pos":[240514,240598],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[240609,240663],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[240829,240894],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[240950,240971],"yaml":true},{"content":"Converts the current value to an 8-bit signed integer based on the underlying type.","nodes":[{"pos":[0,83],"content":"Converts the current value to an 8-bit signed integer based on the underlying type.","nodes":[{"content":"Converts the current value to an 8-bit signed integer based on the underlying type.","pos":[0,83]}]}],"pos":[242505,242589],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[242600,242654],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[242821,242886],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[242942,242963],"yaml":true},{"content":"Converts the current value to a single-precision floating-point number based on the underlying type.","nodes":[{"pos":[0,100],"content":"Converts the current value to a single-precision floating-point number based on the underlying type.","nodes":[{"content":"Converts the current value to a single-precision floating-point number based on the underlying type.","pos":[0,100]}]}],"pos":[244503,244604],"yaml":true},{"content":"Currently not implemented. Always throws an exception.","nodes":[{"pos":[0,54],"content":"Currently not implemented. Always throws an exception.","nodes":[{"content":"Currently not implemented. Always throws an exception.","pos":[0,54],"nodes":[{"content":"Currently not implemented.","pos":[0,26]},{"content":"Always throws an exception.","pos":[27,54]}]}]}],"pos":[244615,244670],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[244838,244903],"yaml":true},{"content":"This member always throws an exception.","nodes":[{"pos":[0,39],"content":"This member always throws an exception.","nodes":[{"content":"This member always throws an exception.","pos":[0,39]}]}],"pos":[244960,245000],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[245168,245182],"yaml":true},{"content":"Converts the current value to a specified type based on the underlying type.","nodes":[{"pos":[0,76],"content":"Converts the current value to a specified type based on the underlying type.","nodes":[{"content":"Converts the current value to a specified type based on the underlying type.","pos":[0,76]}]}],"pos":[247968,248045],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[248056,248110],"yaml":true,"extradata":"MT"},{"content":"The type to convert to.","nodes":[{"pos":[0,23],"content":"The type to convert to.","nodes":[{"content":"The type to convert to.","pos":[0,23]}]}],"pos":[248273,248297],"yaml":true},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[248370,248435],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[248492,248513],"yaml":true},{"content":"Converts the current value to a 16-bit unsigned integer based on the underlying type.","nodes":[{"pos":[0,85],"content":"Converts the current value to a 16-bit unsigned integer based on the underlying type.","nodes":[{"content":"Converts the current value to a 16-bit unsigned integer based on the underlying type.","pos":[0,85]}]}],"pos":[250052,250138],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[250149,250203],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[250372,250437],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[250494,250515],"yaml":true},{"content":"Converts the current value to a 32-bit unsigned integer based on the underlying type.","nodes":[{"pos":[0,85],"content":"Converts the current value to a 32-bit unsigned integer based on the underlying type.","nodes":[{"content":"Converts the current value to a 32-bit unsigned integer based on the underlying type.","pos":[0,85]}]}],"pos":[252056,252142],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[252153,252207],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[252374,252439],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[252496,252517],"yaml":true},{"content":"Converts the current value to a 64-bit unsigned integer based on the underlying type.","nodes":[{"pos":[0,85],"content":"Converts the current value to a 64-bit unsigned integer based on the underlying type.","nodes":[{"content":"Converts the current value to a 64-bit unsigned integer based on the underlying type.","pos":[0,85]}]}],"pos":[254058,254144],"yaml":true},{"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"pos":[0,53],"content":"Uses <xref:System.Convert> to perform the conversion.","nodes":[{"content":"Uses <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> to perform the conversion.","pos":[0,53],"source":"Uses <xref:System.Convert> to perform the conversion."}]}],"pos":[254155,254209],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[254377,254442],"yaml":true},{"content":"The converted value.","nodes":[{"pos":[0,20],"content":"The converted value.","nodes":[{"content":"The converted value.","pos":[0,20]}]}],"pos":[254499,254520],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Enum\n  commentId: T:System.Enum\n  id: Enum\n  children:\n  - System.Enum.#ctor\n  - System.Enum.CompareTo(System.Object)\n  - System.Enum.Equals(System.Object)\n  - System.Enum.Format(System.Type,System.Object,System.String)\n  - System.Enum.GetHashCode\n  - System.Enum.GetName(System.Type,System.Object)\n  - System.Enum.GetNames(System.Type)\n  - System.Enum.GetTypeCode\n  - System.Enum.GetUnderlyingType(System.Type)\n  - System.Enum.GetValues(System.Type)\n  - System.Enum.HasFlag(System.Enum)\n  - System.Enum.IsDefined(System.Type,System.Object)\n  - System.Enum.Parse(System.Type,System.String)\n  - System.Enum.Parse(System.Type,System.String,System.Boolean)\n  - System.Enum.Parse``1(System.String,System.Boolean)\n  - System.Enum.Parse``1(System.String)\n  - System.Enum.ToObject(System.Type,System.Int16)\n  - System.Enum.ToObject(System.Type,System.UInt64)\n  - System.Enum.ToObject(System.Type,System.UInt32)\n  - System.Enum.ToObject(System.Type,System.UInt16)\n  - System.Enum.ToObject(System.Type,System.SByte)\n  - System.Enum.ToObject(System.Type,System.Object)\n  - System.Enum.ToObject(System.Type,System.Int64)\n  - System.Enum.ToObject(System.Type,System.Int32)\n  - System.Enum.ToObject(System.Type,System.Byte)\n  - System.Enum.ToString(System.String,System.IFormatProvider)\n  - System.Enum.ToString(System.String)\n  - System.Enum.ToString(System.IFormatProvider)\n  - System.Enum.ToString\n  - System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)\n  - System.Enum.TryParse(System.Type,System.String,System.Object@)\n  - System.Enum.TryParse``1(System.String,System.Boolean,``0@)\n  - System.Enum.TryParse``1(System.String,``0@)\n  - System.Enum.System#IConvertible#GetTypeCode\n  - System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToString(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)\n  - System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  langs:\n  - csharp\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Provides the base class for enumerations.\n  remarks: \"An enumeration is a set of named constants whose underlying type is any integral type. If no underlying type is explicitly declared, <xref:System.Int32> is used. <xref:System.Enum> is the base class for all enumerations in the .NET Framework. Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.  \\n  \\n <xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.  \\n  \\n You can also treat an enumeration as a bit field. For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.  \\n  \\n In this topic:  \\n  \\n [Creating an enumeration type](#Creating)   \\n [Instantiating an enumeration type](#Instantiating)   \\n [Enumeration best practices](#BestPractices)   \\n [Performing operations with enumerations](#Operations)   \\n [Performing conversions](#conversions)  \\n [Parsing enumeration values](#parsing)  \\n [Formatting enumeration values](#formatting)  \\n[Iterating enumeration members](#iterating)  \\n[Non-exclusive members and the Flags attribute](#Flags)  \\n[Adding enumeration methods](#methods)  \\n  \\n<a name=\\\"Creating\\\"></a>   \\n## Creating an enumeration type  \\n Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values. The following example illustrates the syntax used by C# and Visual Basic to define an enumeration. It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`. Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.  \\n  \\n [!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]\\n [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]  \\n  \\n> [!WARNING]\\n>  You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>. Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.  \\n  \\n<a name=\\\"Instantiating\\\"></a>   \\n## Instantiating an enumeration type  \\n You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it. The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.  \\n  \\n [!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]\\n [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]  \\n  \\n You can also instantiate an enumeration value in the following ways:  \\n  \\n-   By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value. The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.  \\n  \\n     [!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]\\n     [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]  \\n  \\n-   By calling its implicit default constructor. As the following example shows, in this case the underlying value of the enumeration instance is 0. However, this is not necessarily the value of a valid constant in the enumeration.  \\n  \\n     [!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]\\n     [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]  \\n  \\n-   By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration. For more information, see the [Parsing Enumeration Values](#parsing) section.  \\n  \\n-   By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type. For more information, see the [Performing Conversions](#conversions) section.  \\n  \\n<a name=\\\"BestPractices\\\"></a>   \\n## Enumeration best practices  \\n We recommend that you use the following best practices when you define enumeration types:  \\n  \\n-   If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant. By default, the memory used for the enumeration is initialized to zero by the common language runtime. Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.  \\n  \\n-   If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it. If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.  \\n  \\n-   Do not specify enumerated constants that are reserved for future use.  \\n  \\n-   When you define a method or property that takes an enumerated constant as a value, consider validating the value. The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.  \\n  \\n Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section.  \\n  \\n<a name=\\\"Operations\\\"></a>   \\n## Performing operations with enumerations  \\n You cannot define new methods when you are creating an enumeration. However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class. The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.  \\n  \\n<a name=\\\"conversions\\\"></a>   \\n### Performing conversions  \\n You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator. The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.  \\n  \\n [!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]\\n [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]  \\n  \\n The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value. The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value. Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.  \\n  \\n [!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]\\n [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]  \\n  \\n When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration. To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion. The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.  \\n  \\n [!code-csharp[System.Enum.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)]\\n [!code-vb[System.Enum.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)]  \\n  \\n Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions. The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method to convert an enumeration value to its underlying type. Note that this example does not require the underlying type of the enumeration to be known at compile time.  \\n  \\n [!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]\\n [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]  \\n  \\n<a name=\\\"parsing\\\"></a>   \\n### Parsing enumeration values  \\n The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value. The string representation can be either the name or the underlying value of an enumeration constant. Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type. To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value. The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=fullName> methods. Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.  \\n  \\n [!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]\\n [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]  \\n  \\n<a name=\\\"formatting\\\"></a>   \\n### Formatting enumeration values  \\n You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method. You can use a format string to control the precise way in which an enumeration value is represented as a string. For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). The following example uses each of the supported enumeration format strings (\\\"G\\\" or \\\"g\\\", \\\"D\\\" or \\\"d\\\", \\\"X\\\" or \\\"x\\\", and \\\"F\\\" or \\\"f\\\" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.  \\n  \\n [!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]\\n [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]  \\n  \\n<a name=\\\"iterating\\\"></a>   \\n### Iterating enumeration members  \\n The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct. However, you can enumerate members in either of two ways.  \\n  \\n-   You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members. Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value. The following example illustrates this approach.  \\n  \\n     [!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]\\n     [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]  \\n  \\n-   You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration. Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value. The following example illustrates this approach.  \\n  \\n     [!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]\\n     [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]  \\n  \\n<a name=\\\"Flags\\\"></a>   \\n## Non-exclusive members and the Flags attribute  \\n One common use of an enumeration is to represent a set of mutually exclusive values. For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`. It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.  \\n  \\n In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value. The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields. For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household. It can be defined as follows.  \\n  \\n [!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]\\n [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]  \\n  \\n The `Pets` enumeration can then be used as shown in the following example.  \\n  \\n [!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]\\n [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]  \\n  \\n The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.  \\n  \\n-   Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.  \\n  \\n-   Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on. This means the individual flags in combined enumeration constants do not overlap.  \\n  \\n-   Consider creating an enumerated constant for commonly used flag combinations. For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags. In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.  \\n  \\n-   Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.  \\n  \\n-   A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.  \\n  \\n     [!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]\\n     [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]  \\n  \\n     It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant. This is illustrated in the following example.  \\n  \\n     [!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]\\n     [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]  \\n  \\n-   Use `None` as the name of the flag enumerated constant whose value is zero. You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero. However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set. This is illustrated in the following example.  \\n  \\n     [!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]\\n     [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]  \\n  \\n-   Do not define an enumeration value solely to mirror the state of the enumeration itself. For example, do not define an enumerated constant that merely marks the end of the enumeration. If you need to determine the last value of the enumeration, check for that value explicitly. In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.  \\n  \\n<a name=\\\"methods\\\"></a>   \\n## Adding enumeration methods  \\n Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.  However, you can use extension methods to add functionality to a particular enumeration type.  \\n  \\n In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class. An extension method named `Passing` is added to the `Grades` type so that each instance of that type now \\\"knows\\\" whether it represents a passing grade or not.       The `Extensions` class also contains a static read-write variable that defines the minimum passing grade. The return value of the `Passing` extension method reflects the current value of that variable.  \\n  \\n [!code-csharp[System.Enum.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)]\\n [!code-vb[System.Enum.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)]\"\n  example:\n  - \"The following example demonstrates using an enumeration to represent named values and another enumeration to represent named bit fields.  \\n  \\n [!code-cpp[enummain#1](~/samples/snippets/cpp/VS_Snippets_CLR/enummain/CPP/EnumMain.cpp#1)]\\n [!code-csharp[enummain#1](~/samples/snippets/csharp/VS_Snippets_CLR/enummain/CS/EnumMain.cs#1)]\\n [!code-vb[enummain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enummain/VB/EnumMain.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  derivedClasses:\n  - Accessibility.AnnoScope\n  - Microsoft.Build.BuildEngine.BuildSettings\n  - Microsoft.Build.BuildEngine.ProjectLoadSettings\n  - Microsoft.Build.BuildEngine.PropertyPosition\n  - Microsoft.Build.BuildEngine.ToolsetDefinitionLocations\n  - Microsoft.Build.Evaluation.ProjectCollectionChangedState\n  - Microsoft.Build.Evaluation.ProjectLoadSettings\n  - Microsoft.Build.Evaluation.ToolsetDefinitionLocations\n  - Microsoft.Build.Execution.BuildRequestDataFlags\n  - Microsoft.Build.Execution.BuildResultCode\n  - Microsoft.Build.Execution.NodeAffinity\n  - Microsoft.Build.Execution.NodeEngineShutdownReason\n  - Microsoft.Build.Execution.ProjectInstanceSettings\n  - Microsoft.Build.Execution.TargetResultCode\n  - Microsoft.Build.Framework.LoggerVerbosity\n  - Microsoft.Build.Framework.MessageImportance\n  - Microsoft.Build.Framework.RegisteredTaskObjectLifetime\n  - Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation\n  - Microsoft.Build.Framework.XamlTypes.RuleOverrideMode\n  - Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity\n  - Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit\n  - Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType\n  - Microsoft.Build.Tasks.Xaml.MemberVisibility\n  - Microsoft.Build.Utilities.DotNetFrameworkArchitecture\n  - Microsoft.Build.Utilities.ExecutableType\n  - Microsoft.Build.Utilities.HostObjectInitializationStatus\n  - Microsoft.Build.Utilities.TargetDotNetFrameworkVersion\n  - Microsoft.Build.Utilities.UpToDateCheckType\n  - Microsoft.Build.Utilities.VisualStudioVersion\n  - Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags\n  - Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags\n  - Microsoft.FSharp.Core.CompilationRepresentationFlags\n  - Microsoft.FSharp.Core.SourceConstructFlags\n  - Microsoft.FSharp.Core.CompilerServices.TypeProviderTypeAttributes\n  - Microsoft.JScript.CmdLineError\n  - Microsoft.JScript.ErrorType\n  - Microsoft.JScript.JSBuiltin\n  - Microsoft.JScript.JSError\n  - Microsoft.JScript.JSFunctionAttributeEnum\n  - Microsoft.JScript.JSToken\n  - Microsoft.JScript.SourceState\n  - Microsoft.JScript.TokenColor\n  - Microsoft.JScript.VSAITEMTYPE2\n  - Microsoft.JScript.Vsa.BaseVsaEngine.Pre\n  - Microsoft.JScript.Vsa.JSVsaError\n  - Microsoft.JScript.Vsa.JSVsaItemFlag\n  - Microsoft.JScript.Vsa.JSVsaItemType\n  - Microsoft.SqlServer.Server.DataAccessKind\n  - Microsoft.SqlServer.Server.Format\n  - Microsoft.SqlServer.Server.SystemDataAccessKind\n  - Microsoft.SqlServer.Server.TriggerAction\n  - Microsoft.VisualBasic.AppWinStyle\n  - Microsoft.VisualBasic.AudioPlayMode\n  - Microsoft.VisualBasic.CallType\n  - Microsoft.VisualBasic.CompareMethod\n  - Microsoft.VisualBasic.DateFormat\n  - Microsoft.VisualBasic.DateInterval\n  - Microsoft.VisualBasic.DueDate\n  - Microsoft.VisualBasic.FileAttribute\n  - Microsoft.VisualBasic.FirstDayOfWeek\n  - Microsoft.VisualBasic.FirstWeekOfYear\n  - Microsoft.VisualBasic.MsgBoxResult\n  - Microsoft.VisualBasic.MsgBoxStyle\n  - Microsoft.VisualBasic.OpenAccess\n  - Microsoft.VisualBasic.OpenMode\n  - Microsoft.VisualBasic.OpenShare\n  - Microsoft.VisualBasic.TriState\n  - Microsoft.VisualBasic.VariantType\n  - Microsoft.VisualBasic.VbStrConv\n  - Microsoft.VisualBasic.ApplicationServices.AuthenticationMode\n  - Microsoft.VisualBasic.ApplicationServices.BuiltInRole\n  - Microsoft.VisualBasic.ApplicationServices.ShutdownMode\n  - Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFActionEnum\n  - Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum\n  - Microsoft.VisualBasic.Compatibility.VB6.ADODC.OrientationEnum\n  - Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM\n  - Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants\n  - Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants\n  - Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants\n  - Microsoft.VisualBasic.Compatibility.VB6.ScaleMode\n  - Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants\n  - Microsoft.VisualBasic.Compatibility.VB6.UpdateMode\n  - Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants\n  - Microsoft.VisualBasic.FileIO.DeleteDirectoryOption\n  - Microsoft.VisualBasic.FileIO.FieldType\n  - Microsoft.VisualBasic.FileIO.RecycleOption\n  - Microsoft.VisualBasic.FileIO.SearchOption\n  - Microsoft.VisualBasic.FileIO.UICancelOption\n  - Microsoft.VisualBasic.FileIO.UIOption\n  - Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption\n  - Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption\n  - Microsoft.VisualBasic.Logging.LogFileLocation\n  - Microsoft.Win32.PowerModes\n  - Microsoft.Win32.RegistryHive\n  - Microsoft.Win32.RegistryKeyPermissionCheck\n  - Microsoft.Win32.RegistryOptions\n  - Microsoft.Win32.RegistryValueKind\n  - Microsoft.Win32.RegistryValueOptions\n  - Microsoft.Win32.RegistryView\n  - Microsoft.Win32.SessionEndReasons\n  - Microsoft.Win32.SessionSwitchReason\n  - Microsoft.Win32.UserPreferenceCategory\n  - Microsoft.Windows.Themes.ClassicBorderStyle\n  - Microsoft.Windows.Themes.ScrollGlyph\n  - Microsoft.Windows.Themes.ThemeColor\n  - Mono.Security.Interface.AlertDescription\n  - Mono.Security.Interface.AlertLevel\n  - Mono.Security.Interface.CipherAlgorithmType\n  - Mono.Security.Interface.CipherSuiteCode\n  - Mono.Security.Interface.ExchangeAlgorithmType\n  - Mono.Security.Interface.HashAlgorithmType\n  - Mono.Security.Interface.MonoEncryptionPolicy\n  - Mono.Security.Interface.MonoSslPolicyErrors\n  - Mono.Security.Interface.TlsProtocolCode\n  - Mono.Security.Interface.TlsProtocols\n  - Mono.Security.Protocol.Ntlm.NtlmAuthLevel\n  - Mono.Security.Protocol.Ntlm.NtlmFlags\n  - System.ActivationContext.ContextForm\n  - System.AppDomainManagerInitializationOptions\n  - System.AttributeTargets\n  - System.Base64FormattingOptions\n  - System.ConsoleColor\n  - System.ConsoleKey\n  - System.ConsoleModifiers\n  - System.ConsoleSpecialKey\n  - System.DateTimeKind\n  - System.DayOfWeek\n  - System.Environment.SpecialFolder\n  - System.Environment.SpecialFolderOption\n  - System.EnvironmentVariableTarget\n  - System.GCCollectionMode\n  - System.GCNotificationStatus\n  - System.GenericUriParserOptions\n  - System.LoaderOptimization\n  - System.MidpointRounding\n  - System.PlatformID\n  - System.StringComparison\n  - System.StringSplitOptions\n  - System.TypeCode\n  - System.UriComponents\n  - System.UriFormat\n  - System.UriHostNameType\n  - System.UriIdnScope\n  - System.UriKind\n  - System.UriPartial\n  - System.Activities.ActivityInstanceState\n  - System.Activities.ArgumentDirection\n  - System.Activities.BookmarkOptions\n  - System.Activities.BookmarkResumptionResult\n  - System.Activities.PersistableIdleAction\n  - System.Activities.UnhandledExceptionAction\n  - System.Activities.VariableModifiers\n  - System.Activities.WorkflowIdentityFilter\n  - System.Activities.Core.Presentation.ConnectionPointType\n  - System.Activities.DurableInstancing.InstanceCompletionAction\n  - System.Activities.DurableInstancing.InstanceEncodingOption\n  - System.Activities.DurableInstancing.InstanceLockedExceptionAction\n  - System.Activities.Hosting.WorkflowInstanceState\n  - System.Activities.Presentation.Debug.BreakpointTypes\n  - System.Activities.Presentation.Model.CreateOptions\n  - System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode\n  - System.Activities.Presentation.PropertyEditing.PropertyValueExceptionSource\n  - System.Activities.Presentation.Services.ModelChangeType\n  - System.Activities.Presentation.Validation.ValidationState\n  - System.Activities.Presentation.View.EditingState\n  - System.Activities.Presentation.View.PropertyKind\n  - System.Activities.Presentation.View.ShellBarItemVisibility\n  - System.Activities.Presentation.View.ShellHeaderItemsVisibility\n  - System.Activities.Tracking.ImplementationVisibility\n  - System.AddIn.Contract.RemoteArgumentKind\n  - System.AddIn.Hosting.AddInSecurityLevel\n  - System.AddIn.Hosting.AddInSegmentType\n  - System.AddIn.Hosting.PipelineStoreLocation\n  - System.AddIn.Hosting.Platform\n  - System.CodeDom.CodeBinaryOperatorType\n  - System.CodeDom.CodeRegionMode\n  - System.CodeDom.CodeTypeReferenceOptions\n  - System.CodeDom.FieldDirection\n  - System.CodeDom.MemberAttributes\n  - System.CodeDom.Compiler.GeneratorSupport\n  - System.CodeDom.Compiler.LanguageOptions\n  - System.Collections.Concurrent.EnumerablePartitionerOptions\n  - System.Collections.Specialized.NotifyCollectionChangedAction\n  - System.ComponentModel.BindableSupport\n  - System.ComponentModel.BindingDirection\n  - System.ComponentModel.CollectionChangeAction\n  - System.ComponentModel.DataObjectMethodType\n  - System.ComponentModel.DesignerSerializationVisibility\n  - System.ComponentModel.EditorBrowsableState\n  - System.ComponentModel.InheritanceLevel\n  - System.ComponentModel.LicenseUsageMode\n  - System.ComponentModel.ListChangedType\n  - System.ComponentModel.ListSortDirection\n  - System.ComponentModel.MaskedTextResultHint\n  - System.ComponentModel.NewItemPlaceholderPosition\n  - System.ComponentModel.PropertyFilterOptions\n  - System.ComponentModel.PropertyTabScope\n  - System.ComponentModel.RefreshProperties\n  - System.ComponentModel.ToolboxItemFilterType\n  - System.ComponentModel.Composition.CreationPolicy\n  - System.ComponentModel.Composition.ImportSource\n  - System.ComponentModel.Composition.Hosting.CompositionOptions\n  - System.ComponentModel.Composition.Primitives.ImportCardinality\n  - System.ComponentModel.DataAnnotations.DataType\n  - System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption\n  - System.ComponentModel.Design.ComponentActionsType\n  - System.ComponentModel.Design.DesignerActionListsChangedType\n  - System.ComponentModel.Design.DesignerActionUIStateChangeType\n  - System.ComponentModel.Design.DisplayMode\n  - System.ComponentModel.Design.HelpContextType\n  - System.ComponentModel.Design.HelpKeywordType\n  - System.ComponentModel.Design.MenuCommandsChangedType\n  - System.ComponentModel.Design.SelectionTypes\n  - System.ComponentModel.Design.ViewTechnology\n  - System.ComponentModel.Design.Data.QueryBuilderMode\n  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions\n  - System.ComponentModel.Design.Serialization.CodeDomLocalizationModel\n  - System.Configuration.ConfigurationAllowDefinition\n  - System.Configuration.ConfigurationAllowExeDefinition\n  - System.Configuration.ConfigurationElementCollectionType\n  - System.Configuration.ConfigurationPropertyOptions\n  - System.Configuration.ConfigurationSaveMode\n  - System.Configuration.ConfigurationUserLevel\n  - System.Configuration.OverrideMode\n  - System.Configuration.PropertyValueOrigin\n  - System.Configuration.SettingsManageability\n  - System.Configuration.SettingsSerializeAs\n  - System.Configuration.SpecialSetting\n  - System.Configuration.Assemblies.AssemblyHashAlgorithm\n  - System.Configuration.Assemblies.AssemblyVersionCompatibility\n  - System.Configuration.Install.UninstallAction\n  - System.Data.AcceptRejectRule\n  - System.Data.CommandBehavior\n  - System.Data.CommandType\n  - System.Data.ConflictOption\n  - System.Data.ConnectionState\n  - System.Data.DataRowAction\n  - System.Data.DataRowState\n  - System.Data.DataRowVersion\n  - System.Data.DataSetDateTime\n  - System.Data.DataViewRowState\n  - System.Data.DbType\n  - System.Data.EntityState\n  - System.Data.IsolationLevel\n  - System.Data.KeyRestrictionBehavior\n  - System.Data.LoadOption\n  - System.Data.MappingType\n  - System.Data.MissingMappingAction\n  - System.Data.MissingSchemaAction\n  - System.Data.ParameterDirection\n  - System.Data.PropertyAttributes\n  - System.Data.Rule\n  - System.Data.SchemaSerializationMode\n  - System.Data.SchemaType\n  - System.Data.SerializationFormat\n  - System.Data.SqlDbType\n  - System.Data.StatementType\n  - System.Data.UpdateRowSource\n  - System.Data.UpdateStatus\n  - System.Data.XmlReadMode\n  - System.Data.XmlWriteMode\n  - System.Data.Common.CatalogLocation\n  - System.Data.Common.GroupByBehavior\n  - System.Data.Common.IdentifierCase\n  - System.Data.Common.SupportedJoinOperators\n  - System.Data.Common.CommandTrees.DbExpressionKind\n  - System.Data.Design.ParameterGenerationOption\n  - System.Data.Design.TypedDataSetGenerator.GenerateOption\n  - System.Data.Entity.Design.EntityStoreSchemaFilterEffect\n  - System.Data.Entity.Design.EntityStoreSchemaFilterObjectTypes\n  - System.Data.Entity.Design.LanguageOption\n  - System.Data.Linq.ChangeAction\n  - System.Data.Linq.ConflictMode\n  - System.Data.Linq.RefreshMode\n  - System.Data.Linq.Mapping.AutoSync\n  - System.Data.Linq.Mapping.UpdateCheck\n  - System.Data.Metadata.Edm.BuiltInTypeKind\n  - System.Data.Metadata.Edm.CollectionKind\n  - System.Data.Metadata.Edm.ConcurrencyMode\n  - System.Data.Metadata.Edm.DataSpace\n  - System.Data.Metadata.Edm.EdmSchemaErrorSeverity\n  - System.Data.Metadata.Edm.OperationAction\n  - System.Data.Metadata.Edm.ParameterMode\n  - System.Data.Metadata.Edm.ParameterTypeSemantics\n  - System.Data.Metadata.Edm.PrimitiveTypeKind\n  - System.Data.Metadata.Edm.PropertyKind\n  - System.Data.Metadata.Edm.RelationshipMultiplicity\n  - System.Data.Metadata.Edm.StoreGeneratedPattern\n  - System.Data.Objects.MergeOption\n  - System.Data.Objects.RefreshMode\n  - System.Data.Objects.SaveOptions\n  - System.Data.Objects.DataClasses.RelationshipKind\n  - System.Data.Odbc.OdbcType\n  - System.Data.OleDb.OleDbLiteral\n  - System.Data.OleDb.OleDbType\n  - System.Data.OracleClient.OracleLobOpenMode\n  - System.Data.OracleClient.OracleType\n  - System.Data.Services.EntitySetRights\n  - System.Data.Services.ServiceOperationRights\n  - System.Data.Services.UpdateOperations\n  - System.Data.Services.Client.EntityStates\n  - System.Data.Services.Client.MergeOption\n  - System.Data.Services.Client.SaveChangesOptions\n  - System.Data.Services.Client.TrackingMode\n  - System.Data.Services.Common.DataServiceProtocolVersion\n  - System.Data.Services.Common.SyndicationItemProperty\n  - System.Data.Services.Common.SyndicationTextContentKind\n  - System.Data.Services.Design.DataServiceCodeVersion\n  - System.Data.Services.Design.LanguageOption\n  - System.Data.Services.Providers.ResourcePropertyKind\n  - System.Data.Services.Providers.ResourceTypeKind\n  - System.Data.Services.Providers.ServiceOperationResultKind\n  - System.Data.SqlClient.ApplicationIntent\n  - System.Data.SqlClient.PoolBlockingPeriod\n  - System.Data.SqlClient.SortOrder\n  - System.Data.SqlClient.SqlAuthenticationMethod\n  - System.Data.SqlClient.SqlBulkCopyOptions\n  - System.Data.SqlClient.SqlCommandColumnEncryptionSetting\n  - System.Data.SqlClient.SqlConnectionColumnEncryptionSetting\n  - System.Data.SqlClient.SqlNotificationInfo\n  - System.Data.SqlClient.SqlNotificationSource\n  - System.Data.SqlClient.SqlNotificationType\n  - System.Data.SqlTypes.SqlCompareOptions\n  - System.Data.SqlTypes.StorageState\n  - System.Deployment.Application.DeploymentProgressState\n  - System.Device.Location.GeoPositionAccuracy\n  - System.Device.Location.GeoPositionPermission\n  - System.Device.Location.GeoPositionStatus\n  - System.Diagnostics.DebuggableAttribute.DebuggingModes\n  - System.Diagnostics.DebuggerBrowsableState\n  - System.Diagnostics.EventLogEntryType\n  - System.Diagnostics.EventLogPermissionAccess\n  - System.Diagnostics.OverflowAction\n  - System.Diagnostics.PerformanceCounterCategoryType\n  - System.Diagnostics.PerformanceCounterInstanceLifetime\n  - System.Diagnostics.PerformanceCounterPermissionAccess\n  - System.Diagnostics.PerformanceCounterType\n  - System.Diagnostics.PresentationTraceLevel\n  - System.Diagnostics.ProcessPriorityClass\n  - System.Diagnostics.ProcessWindowStyle\n  - System.Diagnostics.SourceLevels\n  - System.Diagnostics.ThreadPriorityLevel\n  - System.Diagnostics.ThreadState\n  - System.Diagnostics.ThreadWaitReason\n  - System.Diagnostics.TraceEventType\n  - System.Diagnostics.TraceLevel\n  - System.Diagnostics.TraceLogRetentionOption\n  - System.Diagnostics.TraceOptions\n  - System.Diagnostics.Contracts.ContractFailureKind\n  - System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode\n  - System.Diagnostics.Eventing.Reader.EventLogIsolation\n  - System.Diagnostics.Eventing.Reader.EventLogMode\n  - System.Diagnostics.Eventing.Reader.EventLogType\n  - System.Diagnostics.Eventing.Reader.PathType\n  - System.Diagnostics.Eventing.Reader.SessionAuthentication\n  - System.Diagnostics.Eventing.Reader.StandardEventKeywords\n  - System.Diagnostics.Eventing.Reader.StandardEventLevel\n  - System.Diagnostics.Eventing.Reader.StandardEventOpcode\n  - System.Diagnostics.Eventing.Reader.StandardEventTask\n  - System.Diagnostics.PerformanceData.CounterSetInstanceType\n  - System.Diagnostics.PerformanceData.CounterType\n  - System.Diagnostics.SymbolStore.SymAddressKind\n  - System.Diagnostics.Tracing.EventActivityOptions\n  - System.Diagnostics.Tracing.EventChannel\n  - System.Diagnostics.Tracing.EventCommand\n  - System.Diagnostics.Tracing.EventFieldFormat\n  - System.Diagnostics.Tracing.EventFieldTags\n  - System.Diagnostics.Tracing.EventKeywords\n  - System.Diagnostics.Tracing.EventLevel\n  - System.Diagnostics.Tracing.EventManifestOptions\n  - System.Diagnostics.Tracing.EventOpcode\n  - System.Diagnostics.Tracing.EventSourceSettings\n  - System.Diagnostics.Tracing.EventTags\n  - System.Diagnostics.Tracing.EventTask\n  - System.DirectoryServices.ActiveDirectoryRights\n  - System.DirectoryServices.ActiveDirectorySecurityInheritance\n  - System.DirectoryServices.AuthenticationTypes\n  - System.DirectoryServices.DereferenceAlias\n  - System.DirectoryServices.DirectoryServicesPermissionAccess\n  - System.DirectoryServices.DirectorySynchronizationOptions\n  - System.DirectoryServices.ExtendedDN\n  - System.DirectoryServices.PasswordEncodingMethod\n  - System.DirectoryServices.PropertyAccess\n  - System.DirectoryServices.ReferralChasingOption\n  - System.DirectoryServices.SearchScope\n  - System.DirectoryServices.SecurityMasks\n  - System.DirectoryServices.SortDirection\n  - System.DirectoryServices.AccountManagement.ContextOptions\n  - System.DirectoryServices.AccountManagement.ContextType\n  - System.DirectoryServices.AccountManagement.GroupScope\n  - System.DirectoryServices.AccountManagement.IdentityType\n  - System.DirectoryServices.AccountManagement.MatchType\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType\n  - System.DirectoryServices.ActiveDirectory.AdamRole\n  - System.DirectoryServices.ActiveDirectory.DirectoryContextType\n  - System.DirectoryServices.ActiveDirectory.DomainCollisionOptions\n  - System.DirectoryServices.ActiveDirectory.DomainMode\n  - System.DirectoryServices.ActiveDirectory.ForestMode\n  - System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType\n  - System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus\n  - System.DirectoryServices.ActiveDirectory.HourOfDay\n  - System.DirectoryServices.ActiveDirectory.LocatorOptions\n  - System.DirectoryServices.ActiveDirectory.MinuteOfHour\n  - System.DirectoryServices.ActiveDirectory.NotificationStatus\n  - System.DirectoryServices.ActiveDirectory.PropertyTypes\n  - System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions\n  - System.DirectoryServices.ActiveDirectory.ReplicationOperationType\n  - System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel\n  - System.DirectoryServices.ActiveDirectory.ReplicationSpan\n  - System.DirectoryServices.ActiveDirectory.SchemaClassType\n  - System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory\n  - System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent\n  - System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions\n  - System.DirectoryServices.ActiveDirectory.TopLevelNameStatus\n  - System.DirectoryServices.ActiveDirectory.TrustDirection\n  - System.DirectoryServices.ActiveDirectory.TrustType\n  - System.DirectoryServices.Protocols.AuthType\n  - System.DirectoryServices.Protocols.DereferenceAlias\n  - System.DirectoryServices.Protocols.DirectoryAttributeOperation\n  - System.DirectoryServices.Protocols.DirectorySynchronizationOptions\n  - System.DirectoryServices.Protocols.DsmlDocumentProcessing\n  - System.DirectoryServices.Protocols.DsmlErrorProcessing\n  - System.DirectoryServices.Protocols.DsmlResponseOrder\n  - System.DirectoryServices.Protocols.ErrorResponseCategory\n  - System.DirectoryServices.Protocols.ExtendedDNFlag\n  - System.DirectoryServices.Protocols.LocatorFlags\n  - System.DirectoryServices.Protocols.PartialResultProcessing\n  - System.DirectoryServices.Protocols.ReferralChasingOptions\n  - System.DirectoryServices.Protocols.ResultCode\n  - System.DirectoryServices.Protocols.SearchOption\n  - System.DirectoryServices.Protocols.SearchScope\n  - System.DirectoryServices.Protocols.SecurityMasks\n  - System.DirectoryServices.Protocols.SecurityProtocol\n  - System.Drawing.ContentAlignment\n  - System.Drawing.CopyPixelOperation\n  - System.Drawing.FontStyle\n  - System.Drawing.GraphicsUnit\n  - System.Drawing.KnownColor\n  - System.Drawing.RotateFlipType\n  - System.Drawing.StringAlignment\n  - System.Drawing.StringDigitSubstitute\n  - System.Drawing.StringFormatFlags\n  - System.Drawing.StringTrimming\n  - System.Drawing.StringUnit\n  - System.Drawing.Design.UITypeEditorEditStyle\n  - System.Drawing.Drawing2D.CombineMode\n  - System.Drawing.Drawing2D.CompositingMode\n  - System.Drawing.Drawing2D.CompositingQuality\n  - System.Drawing.Drawing2D.CoordinateSpace\n  - System.Drawing.Drawing2D.DashCap\n  - System.Drawing.Drawing2D.DashStyle\n  - System.Drawing.Drawing2D.FillMode\n  - System.Drawing.Drawing2D.FlushIntention\n  - System.Drawing.Drawing2D.HatchStyle\n  - System.Drawing.Drawing2D.InterpolationMode\n  - System.Drawing.Drawing2D.LinearGradientMode\n  - System.Drawing.Drawing2D.LineCap\n  - System.Drawing.Drawing2D.LineJoin\n  - System.Drawing.Drawing2D.MatrixOrder\n  - System.Drawing.Drawing2D.PathPointType\n  - System.Drawing.Drawing2D.PenAlignment\n  - System.Drawing.Drawing2D.PenType\n  - System.Drawing.Drawing2D.PixelOffsetMode\n  - System.Drawing.Drawing2D.QualityMode\n  - System.Drawing.Drawing2D.SmoothingMode\n  - System.Drawing.Drawing2D.WarpMode\n  - System.Drawing.Drawing2D.WrapMode\n  - System.Drawing.Imaging.ColorAdjustType\n  - System.Drawing.Imaging.ColorChannelFlag\n  - System.Drawing.Imaging.ColorMapType\n  - System.Drawing.Imaging.ColorMatrixFlag\n  - System.Drawing.Imaging.ColorMode\n  - System.Drawing.Imaging.EmfPlusRecordType\n  - System.Drawing.Imaging.EmfType\n  - System.Drawing.Imaging.EncoderParameterValueType\n  - System.Drawing.Imaging.EncoderValue\n  - System.Drawing.Imaging.ImageCodecFlags\n  - System.Drawing.Imaging.ImageFlags\n  - System.Drawing.Imaging.ImageLockMode\n  - System.Drawing.Imaging.MetafileFrameUnit\n  - System.Drawing.Imaging.MetafileType\n  - System.Drawing.Imaging.PaletteFlags\n  - System.Drawing.Imaging.PixelFormat\n  - System.Drawing.Printing.Duplex\n  - System.Drawing.Printing.PaperKind\n  - System.Drawing.Printing.PaperSourceKind\n  - System.Drawing.Printing.PrintAction\n  - System.Drawing.Printing.PrinterResolutionKind\n  - System.Drawing.Printing.PrinterUnit\n  - System.Drawing.Printing.PrintingPermissionLevel\n  - System.Drawing.Printing.PrintRange\n  - System.Drawing.Text.GenericFontFamilies\n  - System.Drawing.Text.HotkeyPrefix\n  - System.Drawing.Text.TextRenderingHint\n  - System.Globalization.CalendarAlgorithmType\n  - System.Globalization.CalendarWeekRule\n  - System.Globalization.CompareOptions\n  - System.Globalization.CultureAndRegionModifiers\n  - System.Globalization.CultureTypes\n  - System.Globalization.DateTimeStyles\n  - System.Globalization.DigitShapes\n  - System.Globalization.GregorianCalendarTypes\n  - System.Globalization.NumberStyles\n  - System.Globalization.TimeSpanStyles\n  - System.Globalization.UnicodeCategory\n  - System.IdentityModel.Metadata.ContactType\n  - System.IdentityModel.Metadata.KeyType\n  - System.IdentityModel.Selectors.AudienceUriMode\n  - System.IdentityModel.Services.ApplicationType\n  - System.IdentityModel.Services.CookieHandlerMode\n  - System.IdentityModel.Tokens.SamlAccessDecision\n  - System.IdentityModel.Tokens.SecurityKeyType\n  - System.IdentityModel.Tokens.SecurityKeyUsage\n  - System.IO.DriveType\n  - System.IO.FileAccess\n  - System.IO.FileAttributes\n  - System.IO.FileMode\n  - System.IO.FileOptions\n  - System.IO.FileShare\n  - System.IO.HandleInheritability\n  - System.IO.NotifyFilters\n  - System.IO.SearchOption\n  - System.IO.SeekOrigin\n  - System.IO.WatcherChangeTypes\n  - System.IO.Compression.CompressionLevel\n  - System.IO.Compression.CompressionMode\n  - System.IO.Compression.ZipArchiveMode\n  - System.IO.IsolatedStorage.IsolatedStorageScope\n  - System.IO.IsolatedStorage.IsolatedStorageSecurityOptions\n  - System.IO.Log.LogExtentState\n  - System.IO.Log.LogRecordEnumeratorType\n  - System.IO.Log.PolicyUnitType\n  - System.IO.Log.RecordAppendOptions\n  - System.IO.MemoryMappedFiles.MemoryMappedFileAccess\n  - System.IO.MemoryMappedFiles.MemoryMappedFileOptions\n  - System.IO.MemoryMappedFiles.MemoryMappedFileRights\n  - System.IO.Packaging.CertificateEmbeddingOption\n  - System.IO.Packaging.CompressionOption\n  - System.IO.Packaging.EncryptionOption\n  - System.IO.Packaging.PackageRelationshipSelectorType\n  - System.IO.Packaging.TargetMode\n  - System.IO.Packaging.VerifyResult\n  - System.IO.Pipes.PipeAccessRights\n  - System.IO.Pipes.PipeDirection\n  - System.IO.Pipes.PipeOptions\n  - System.IO.Pipes.PipeTransmissionMode\n  - System.IO.Ports.Handshake\n  - System.IO.Ports.Parity\n  - System.IO.Ports.SerialData\n  - System.IO.Ports.SerialError\n  - System.IO.Ports.SerialPinChange\n  - System.IO.Ports.StopBits\n  - System.Json.JsonType\n  - System.Linq.ParallelExecutionMode\n  - System.Linq.ParallelMergeOptions\n  - System.Linq.Expressions.ExpressionType\n  - System.Linq.Expressions.GotoExpressionKind\n  - System.Linq.Expressions.MemberBindingType\n  - System.Management.AuthenticationLevel\n  - System.Management.CimType\n  - System.Management.CodeLanguage\n  - System.Management.ComparisonSettings\n  - System.Management.ImpersonationLevel\n  - System.Management.ManagementStatus\n  - System.Management.PutType\n  - System.Management.TextFormat\n  - System.Management.Instrumentation.InstrumentationType\n  - System.Management.Instrumentation.ManagementConfigurationType\n  - System.Management.Instrumentation.ManagementHostingModel\n  - System.Management.Instrumentation.ManagementQualifierFlavors\n  - System.Messaging.AccessControlEntryType\n  - System.Messaging.AcknowledgeTypes\n  - System.Messaging.Acknowledgment\n  - System.Messaging.CryptographicProviderType\n  - System.Messaging.EncryptionAlgorithm\n  - System.Messaging.EncryptionRequired\n  - System.Messaging.GenericAccessRights\n  - System.Messaging.HashAlgorithm\n  - System.Messaging.MessageLookupAction\n  - System.Messaging.MessagePriority\n  - System.Messaging.MessageQueueAccessRights\n  - System.Messaging.MessageQueueErrorCode\n  - System.Messaging.MessageQueuePermissionAccess\n  - System.Messaging.MessageQueueTransactionStatus\n  - System.Messaging.MessageQueueTransactionType\n  - System.Messaging.MessageType\n  - System.Messaging.PeekAction\n  - System.Messaging.QueueAccessMode\n  - System.Messaging.StandardAccessRights\n  - System.Messaging.TrusteeType\n  - System.Net.AuthenticationSchemes\n  - System.Net.DecompressionMethods\n  - System.Net.FtpStatusCode\n  - System.Net.HttpRequestHeader\n  - System.Net.HttpResponseHeader\n  - System.Net.HttpStatusCode\n  - System.Net.NetworkAccess\n  - System.Net.SecurityProtocolType\n  - System.Net.TransportType\n  - System.Net.WebExceptionStatus\n  - System.Net.Cache.HttpCacheAgeControl\n  - System.Net.Cache.HttpRequestCacheLevel\n  - System.Net.Cache.RequestCacheLevel\n  - System.Net.Configuration.ProxyElement.AutoDetectValues\n  - System.Net.Configuration.ProxyElement.BypassOnLocalValues\n  - System.Net.Configuration.ProxyElement.UseSystemDefaultValues\n  - System.Net.Configuration.UnicodeDecodingConformance\n  - System.Net.Configuration.UnicodeEncodingConformance\n  - System.Net.Http.ClientCertificateOption\n  - System.Net.Http.CookieUsePolicy\n  - System.Net.Http.HttpCompletionOption\n  - System.Net.Http.WindowsProxyUsePolicy\n  - System.Net.Mail.DeliveryNotificationOptions\n  - System.Net.Mail.MailPriority\n  - System.Net.Mail.SmtpAccess\n  - System.Net.Mail.SmtpDeliveryFormat\n  - System.Net.Mail.SmtpDeliveryMethod\n  - System.Net.Mail.SmtpStatusCode\n  - System.Net.Mime.TransferEncoding\n  - System.Net.NetworkInformation.DuplicateAddressDetectionState\n  - System.Net.NetworkInformation.IPStatus\n  - System.Net.NetworkInformation.NetBiosNodeType\n  - System.Net.NetworkInformation.NetworkInformationAccess\n  - System.Net.NetworkInformation.NetworkInterfaceComponent\n  - System.Net.NetworkInformation.NetworkInterfaceType\n  - System.Net.NetworkInformation.OperationalStatus\n  - System.Net.NetworkInformation.PrefixOrigin\n  - System.Net.NetworkInformation.ScopeLevel\n  - System.Net.NetworkInformation.SuffixOrigin\n  - System.Net.NetworkInformation.TcpState\n  - System.Net.PeerToPeer.PeerNameType\n  - System.Net.PeerToPeer.PnrpScope\n  - System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType\n  - System.Net.PeerToPeer.Collaboration.PeerChangeType\n  - System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType\n  - System.Net.PeerToPeer.Collaboration.PeerPresenceStatus\n  - System.Net.PeerToPeer.Collaboration.PeerScope\n  - System.Net.PeerToPeer.Collaboration.SubscriptionType\n  - System.Net.Security.AuthenticationLevel\n  - System.Net.Security.EncryptionPolicy\n  - System.Net.Security.ProtectionLevel\n  - System.Net.Security.SslPolicyErrors\n  - System.Net.Sockets.AddressFamily\n  - System.Net.Sockets.IOControlCode\n  - System.Net.Sockets.IPProtectionLevel\n  - System.Net.Sockets.ProtocolFamily\n  - System.Net.Sockets.ProtocolType\n  - System.Net.Sockets.SelectMode\n  - System.Net.Sockets.SocketAsyncOperation\n  - System.Net.Sockets.SocketClientAccessPolicyProtocol\n  - System.Net.Sockets.SocketError\n  - System.Net.Sockets.SocketFlags\n  - System.Net.Sockets.SocketInformationOptions\n  - System.Net.Sockets.SocketOptionLevel\n  - System.Net.Sockets.SocketOptionName\n  - System.Net.Sockets.SocketShutdown\n  - System.Net.Sockets.SocketType\n  - System.Net.Sockets.TransmitFileOptions\n  - System.Net.WebSockets.WebSocketCloseStatus\n  - System.Net.WebSockets.WebSocketError\n  - System.Net.WebSockets.WebSocketMessageType\n  - System.Net.WebSockets.WebSocketState\n  - System.Printing.Collation\n  - System.Printing.ConflictStatus\n  - System.Printing.DeviceFontSubstitution\n  - System.Printing.Duplexing\n  - System.Printing.EnumeratedPrintQueueTypes\n  - System.Printing.InputBin\n  - System.Printing.LocalPrintServerIndexedProperty\n  - System.Printing.OutputColor\n  - System.Printing.OutputQuality\n  - System.Printing.PageBorderless\n  - System.Printing.PageMediaSizeName\n  - System.Printing.PageMediaType\n  - System.Printing.PageOrder\n  - System.Printing.PageOrientation\n  - System.Printing.PageQualitativeResolution\n  - System.Printing.PagesPerSheetDirection\n  - System.Printing.PhotoPrintingIntent\n  - System.Printing.PrintJobPriority\n  - System.Printing.PrintJobStatus\n  - System.Printing.PrintJobType\n  - System.Printing.PrintQueueAttributes\n  - System.Printing.PrintQueueIndexedProperty\n  - System.Printing.PrintQueueStatus\n  - System.Printing.PrintQueueStringPropertyType\n  - System.Printing.PrintServerEventLoggingTypes\n  - System.Printing.PrintServerIndexedProperty\n  - System.Printing.PrintSystemDesiredAccess\n  - System.Printing.PrintSystemObjectLoadMode\n  - System.Printing.PrintTicketScope\n  - System.Printing.Stapling\n  - System.Printing.TrueTypeFontMode\n  - System.Printing.Interop.BaseDevModeType\n  - System.Reflection.AssemblyContentType\n  - System.Reflection.AssemblyFlags\n  - System.Reflection.AssemblyHashAlgorithm\n  - System.Reflection.AssemblyNameFlags\n  - System.Reflection.BindingFlags\n  - System.Reflection.CallingConventions\n  - System.Reflection.DeclarativeSecurityAction\n  - System.Reflection.EventAttributes\n  - System.Reflection.ExceptionHandlingClauseOptions\n  - System.Reflection.FieldAttributes\n  - System.Reflection.GenericParameterAttributes\n  - System.Reflection.ImageFileMachine\n  - System.Reflection.ManifestResourceAttributes\n  - System.Reflection.MemberTypes\n  - System.Reflection.MethodAttributes\n  - System.Reflection.MethodImplAttributes\n  - System.Reflection.MethodImportAttributes\n  - System.Reflection.MethodSemanticsAttributes\n  - System.Reflection.ParameterAttributes\n  - System.Reflection.PortableExecutableKinds\n  - System.Reflection.ProcessorArchitecture\n  - System.Reflection.PropertyAttributes\n  - System.Reflection.ResourceAttributes\n  - System.Reflection.ResourceLocation\n  - System.Reflection.TypeAttributes\n  - System.Reflection.Emit.AssemblyBuilderAccess\n  - System.Reflection.Emit.FlowControl\n  - System.Reflection.Emit.OpCodeType\n  - System.Reflection.Emit.OperandType\n  - System.Reflection.Emit.PackingSize\n  - System.Reflection.Emit.PEFileKinds\n  - System.Reflection.Emit.StackBehaviour\n  - System.Reflection.Metadata.ConstantTypeCode\n  - System.Reflection.Metadata.CustomAttributeNamedArgumentKind\n  - System.Reflection.Metadata.ExceptionRegionKind\n  - System.Reflection.Metadata.HandleKind\n  - System.Reflection.Metadata.ILOpCode\n  - System.Reflection.Metadata.ImportDefinitionKind\n  - System.Reflection.Metadata.LocalVariableAttributes\n  - System.Reflection.Metadata.MemberReferenceKind\n  - System.Reflection.Metadata.MetadataKind\n  - System.Reflection.Metadata.MetadataReaderOptions\n  - System.Reflection.Metadata.MetadataStreamOptions\n  - System.Reflection.Metadata.PrimitiveSerializationTypeCode\n  - System.Reflection.Metadata.PrimitiveTypeCode\n  - System.Reflection.Metadata.SerializationTypeCode\n  - System.Reflection.Metadata.SignatureAttributes\n  - System.Reflection.Metadata.SignatureCallingConvention\n  - System.Reflection.Metadata.SignatureKind\n  - System.Reflection.Metadata.SignatureTypeCode\n  - System.Reflection.Metadata.SignatureTypeKind\n  - System.Reflection.Metadata.StandaloneSignatureKind\n  - System.Reflection.Metadata.Ecma335.EditAndContinueOperation\n  - System.Reflection.Metadata.Ecma335.FunctionPointerAttributes\n  - System.Reflection.Metadata.Ecma335.HeapIndex\n  - System.Reflection.Metadata.Ecma335.MethodBodyAttributes\n  - System.Reflection.Metadata.Ecma335.TableIndex\n  - System.Reflection.PortableExecutable.Characteristics\n  - System.Reflection.PortableExecutable.CorFlags\n  - System.Reflection.PortableExecutable.DebugDirectoryEntryType\n  - System.Reflection.PortableExecutable.DllCharacteristics\n  - System.Reflection.PortableExecutable.Machine\n  - System.Reflection.PortableExecutable.PEMagic\n  - System.Reflection.PortableExecutable.PEStreamOptions\n  - System.Reflection.PortableExecutable.SectionCharacteristics\n  - System.Reflection.PortableExecutable.Subsystem\n  - System.Resources.UltimateResourceFallbackLocation\n  - System.Runtime.GCLargeObjectHeapCompactionMode\n  - System.Runtime.GCLatencyMode\n  - System.Runtime.Caching.CacheEntryRemovedReason\n  - System.Runtime.Caching.CacheItemPriority\n  - System.Runtime.Caching.DefaultCacheCapabilities\n  - System.Runtime.CompilerServices.CompilationRelaxations\n  - System.Runtime.CompilerServices.LoadHint\n  - System.Runtime.CompilerServices.MethodCodeType\n  - System.Runtime.CompilerServices.MethodImplOptions\n  - System.Runtime.ConstrainedExecution.Cer\n  - System.Runtime.ConstrainedExecution.Consistency\n  - System.Runtime.DurableInstancing.InstanceKeyState\n  - System.Runtime.DurableInstancing.InstanceState\n  - System.Runtime.DurableInstancing.InstanceValueConsistency\n  - System.Runtime.DurableInstancing.InstanceValueOptions\n  - System.Runtime.InteropServices.Architecture\n  - System.Runtime.InteropServices.AssemblyRegistrationFlags\n  - System.Runtime.InteropServices.CALLCONV\n  - System.Runtime.InteropServices.CallingConvention\n  - System.Runtime.InteropServices.CharSet\n  - System.Runtime.InteropServices.ClassInterfaceType\n  - System.Runtime.InteropServices.ComInterfaceType\n  - System.Runtime.InteropServices.ComMemberType\n  - System.Runtime.InteropServices.CustomQueryInterfaceMode\n  - System.Runtime.InteropServices.CustomQueryInterfaceResult\n  - System.Runtime.InteropServices.DESCKIND\n  - System.Runtime.InteropServices.DllImportSearchPath\n  - System.Runtime.InteropServices.ExporterEventKind\n  - System.Runtime.InteropServices.FUNCFLAGS\n  - System.Runtime.InteropServices.FUNCKIND\n  - System.Runtime.InteropServices.GCHandleType\n  - System.Runtime.InteropServices.IDispatchImplType\n  - System.Runtime.InteropServices.IDLFLAG\n  - System.Runtime.InteropServices.IMPLTYPEFLAGS\n  - System.Runtime.InteropServices.ImporterEventKind\n  - System.Runtime.InteropServices.INVOKEKIND\n  - System.Runtime.InteropServices.LayoutKind\n  - System.Runtime.InteropServices.LIBFLAGS\n  - System.Runtime.InteropServices.PARAMFLAG\n  - System.Runtime.InteropServices.RegistrationClassContext\n  - System.Runtime.InteropServices.RegistrationConnectionType\n  - System.Runtime.InteropServices.SYSKIND\n  - System.Runtime.InteropServices.TYPEFLAGS\n  - System.Runtime.InteropServices.TYPEKIND\n  - System.Runtime.InteropServices.TypeLibExporterFlags\n  - System.Runtime.InteropServices.TypeLibFuncFlags\n  - System.Runtime.InteropServices.TypeLibImporterFlags\n  - System.Runtime.InteropServices.TypeLibTypeFlags\n  - System.Runtime.InteropServices.TypeLibVarFlags\n  - System.Runtime.InteropServices.UnmanagedType\n  - System.Runtime.InteropServices.VarEnum\n  - System.Runtime.InteropServices.VARFLAGS\n  - System.Runtime.InteropServices.ComTypes.ADVF\n  - System.Runtime.InteropServices.ComTypes.CALLCONV\n  - System.Runtime.InteropServices.ComTypes.DATADIR\n  - System.Runtime.InteropServices.ComTypes.DESCKIND\n  - System.Runtime.InteropServices.ComTypes.DVASPECT\n  - System.Runtime.InteropServices.ComTypes.FUNCFLAGS\n  - System.Runtime.InteropServices.ComTypes.FUNCKIND\n  - System.Runtime.InteropServices.ComTypes.IDLFLAG\n  - System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS\n  - System.Runtime.InteropServices.ComTypes.INVOKEKIND\n  - System.Runtime.InteropServices.ComTypes.LIBFLAGS\n  - System.Runtime.InteropServices.ComTypes.PARAMFLAG\n  - System.Runtime.InteropServices.ComTypes.SYSKIND\n  - System.Runtime.InteropServices.ComTypes.TYMED\n  - System.Runtime.InteropServices.ComTypes.TYPEFLAGS\n  - System.Runtime.InteropServices.ComTypes.TYPEKIND\n  - System.Runtime.InteropServices.ComTypes.VARFLAGS\n  - System.Runtime.InteropServices.ComTypes.VARKIND\n  - System.Runtime.Remoting.CustomErrorsModes\n  - System.Runtime.Remoting.WellKnownObjectMode\n  - System.Runtime.Remoting.Activation.ActivatorLevel\n  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol\n  - System.Runtime.Remoting.Channels.ServerProcessing\n  - System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol\n  - System.Runtime.Remoting.Channels.SocketCachePolicy\n  - System.Runtime.Remoting.Lifetime.LeaseState\n  - System.Runtime.Remoting.Metadata.SoapOption\n  - System.Runtime.Remoting.Metadata.XmlFieldOrderOption\n  - System.Runtime.Remoting.MetadataServices.SdlType\n  - System.Runtime.Serialization.EmitTypeInformation\n  - System.Runtime.Serialization.StreamingContextStates\n  - System.Runtime.Serialization.Formatters.FormatterAssemblyStyle\n  - System.Runtime.Serialization.Formatters.FormatterTypeStyle\n  - System.Runtime.Serialization.Formatters.TypeFilterLevel\n  - System.Runtime.Versioning.ComponentGuaranteesOptions\n  - System.Runtime.Versioning.ResourceScope\n  - System.Security.HostSecurityManagerOptions\n  - System.Security.ManifestKinds\n  - System.Security.PartialTrustVisibilityLevel\n  - System.Security.PolicyLevelType\n  - System.Security.SecurityContextSource\n  - System.Security.SecurityCriticalScope\n  - System.Security.SecurityRuleSet\n  - System.Security.SecurityZone\n  - System.Security.AccessControl.AccessControlActions\n  - System.Security.AccessControl.AccessControlModification\n  - System.Security.AccessControl.AccessControlSections\n  - System.Security.AccessControl.AccessControlType\n  - System.Security.AccessControl.AceFlags\n  - System.Security.AccessControl.AceQualifier\n  - System.Security.AccessControl.AceType\n  - System.Security.AccessControl.AuditFlags\n  - System.Security.AccessControl.CompoundAceType\n  - System.Security.AccessControl.ControlFlags\n  - System.Security.AccessControl.CryptoKeyRights\n  - System.Security.AccessControl.EventWaitHandleRights\n  - System.Security.AccessControl.FileSystemRights\n  - System.Security.AccessControl.InheritanceFlags\n  - System.Security.AccessControl.MutexRights\n  - System.Security.AccessControl.ObjectAceFlags\n  - System.Security.AccessControl.PropagationFlags\n  - System.Security.AccessControl.RegistryRights\n  - System.Security.AccessControl.ResourceType\n  - System.Security.AccessControl.SecurityInfos\n  - System.Security.AccessControl.SemaphoreRights\n  - System.Security.Authentication.CipherAlgorithmType\n  - System.Security.Authentication.ExchangeAlgorithmType\n  - System.Security.Authentication.HashAlgorithmType\n  - System.Security.Authentication.SslProtocols\n  - System.Security.Authentication.ExtendedProtection.ChannelBindingKind\n  - System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n  - System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  - System.Security.Authentication.ExtendedProtection.TokenBindingType\n  - System.Security.Cryptography.CipherMode\n  - System.Security.Cryptography.CngExportPolicies\n  - System.Security.Cryptography.CngKeyCreationOptions\n  - System.Security.Cryptography.CngKeyHandleOpenOptions\n  - System.Security.Cryptography.CngKeyOpenOptions\n  - System.Security.Cryptography.CngKeyUsages\n  - System.Security.Cryptography.CngPropertyOptions\n  - System.Security.Cryptography.CngUIProtectionLevels\n  - System.Security.Cryptography.CryptoStreamMode\n  - System.Security.Cryptography.CspProviderFlags\n  - System.Security.Cryptography.DataProtectionScope\n  - System.Security.Cryptography.ECCurve.ECCurveType\n  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  - System.Security.Cryptography.ECKeyXmlFormat\n  - System.Security.Cryptography.FromBase64TransformMode\n  - System.Security.Cryptography.KeyNumber\n  - System.Security.Cryptography.MemoryProtectionScope\n  - System.Security.Cryptography.OidGroup\n  - System.Security.Cryptography.PaddingMode\n  - System.Security.Cryptography.RSAEncryptionPaddingMode\n  - System.Security.Cryptography.RSASignaturePaddingMode\n  - System.Security.Cryptography.SignatureVerificationResult\n  - System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice\n  - System.Security.Cryptography.Pkcs.RecipientInfoType\n  - System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType\n  - System.Security.Cryptography.Pkcs.SubjectIdentifierType\n  - System.Security.Cryptography.X509Certificates.OpenFlags\n  - System.Security.Cryptography.X509Certificates.StoreLocation\n  - System.Security.Cryptography.X509Certificates.StoreName\n  - System.Security.Cryptography.X509Certificates.TrustStatus\n  - System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags\n  - System.Security.Cryptography.X509Certificates.X509ChainStatusFlags\n  - System.Security.Cryptography.X509Certificates.X509ContentType\n  - System.Security.Cryptography.X509Certificates.X509FindType\n  - System.Security.Cryptography.X509Certificates.X509IncludeOption\n  - System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  - System.Security.Cryptography.X509Certificates.X509KeyUsageFlags\n  - System.Security.Cryptography.X509Certificates.X509NameType\n  - System.Security.Cryptography.X509Certificates.X509RevocationFlag\n  - System.Security.Cryptography.X509Certificates.X509RevocationMode\n  - System.Security.Cryptography.X509Certificates.X509SelectionFlag\n  - System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm\n  - System.Security.Cryptography.X509Certificates.X509VerificationFlags\n  - System.Security.Permissions.DataProtectionPermissionFlags\n  - System.Security.Permissions.EnvironmentPermissionAccess\n  - System.Security.Permissions.FileDialogPermissionAccess\n  - System.Security.Permissions.FileIOPermissionAccess\n  - System.Security.Permissions.HostProtectionResource\n  - System.Security.Permissions.IsolatedStorageContainment\n  - System.Security.Permissions.KeyContainerPermissionFlags\n  - System.Security.Permissions.MediaPermissionAudio\n  - System.Security.Permissions.MediaPermissionImage\n  - System.Security.Permissions.MediaPermissionVideo\n  - System.Security.Permissions.PermissionState\n  - System.Security.Permissions.ReflectionPermissionFlag\n  - System.Security.Permissions.RegistryPermissionAccess\n  - System.Security.Permissions.SecurityAction\n  - System.Security.Permissions.SecurityPermissionFlag\n  - System.Security.Permissions.StorePermissionFlags\n  - System.Security.Permissions.TypeDescriptorPermissionFlags\n  - System.Security.Permissions.UIPermissionClipboard\n  - System.Security.Permissions.UIPermissionWindow\n  - System.Security.Permissions.WebBrowserPermissionLevel\n  - System.Security.Policy.ApplicationVersionMatch\n  - System.Security.Policy.PolicyStatementAttribute\n  - System.Security.Policy.TrustManagerUIContext\n  - System.Security.Principal.PrincipalPolicy\n  - System.Security.Principal.TokenAccessLevels\n  - System.Security.Principal.TokenImpersonationLevel\n  - System.Security.Principal.WellKnownSidType\n  - System.Security.Principal.WindowsAccountType\n  - System.Security.Principal.WindowsBuiltInRole\n  - System.Security.RightsManagement.AuthenticationType\n  - System.Security.RightsManagement.ContentRight\n  - System.Security.RightsManagement.RightsManagementFailureCode\n  - System.Security.RightsManagement.UserActivationMode\n  - System.ServiceModel.AddressFilterMode\n  - System.ServiceModel.AuditLevel\n  - System.ServiceModel.AuditLogLocation\n  - System.ServiceModel.BasicHttpMessageCredentialType\n  - System.ServiceModel.BasicHttpSecurityMode\n  - System.ServiceModel.BasicHttpsSecurityMode\n  - System.ServiceModel.CacheSetting\n  - System.ServiceModel.CommunicationState\n  - System.ServiceModel.ConcurrencyMode\n  - System.ServiceModel.DeadLetterQueue\n  - System.ServiceModel.HostNameComparisonMode\n  - System.ServiceModel.HttpClientCredentialType\n  - System.ServiceModel.HttpProxyCredentialType\n  - System.ServiceModel.ImpersonationOption\n  - System.ServiceModel.InstanceContextMode\n  - System.ServiceModel.MessageCredentialType\n  - System.ServiceModel.MsmqAuthenticationMode\n  - System.ServiceModel.MsmqEncryptionAlgorithm\n  - System.ServiceModel.MsmqSecureHashAlgorithm\n  - System.ServiceModel.NetHttpMessageEncoding\n  - System.ServiceModel.NetMsmqSecurityMode\n  - System.ServiceModel.NetNamedPipeSecurityMode\n  - System.ServiceModel.OperationFormatStyle\n  - System.ServiceModel.OperationFormatUse\n  - System.ServiceModel.PeerMessageOrigination\n  - System.ServiceModel.PeerMessagePropagation\n  - System.ServiceModel.PeerTransportCredentialType\n  - System.ServiceModel.QueuedDeliveryRequirementsMode\n  - System.ServiceModel.QueueTransferProtocol\n  - System.ServiceModel.ReceiveErrorHandling\n  - System.ServiceModel.ReleaseInstanceMode\n  - System.ServiceModel.SecurityMode\n  - System.ServiceModel.SessionMode\n  - System.ServiceModel.TcpClientCredentialType\n  - System.ServiceModel.TransactionFlowOption\n  - System.ServiceModel.TransferMode\n  - System.ServiceModel.WebHttpSecurityMode\n  - System.ServiceModel.WSDualHttpSecurityMode\n  - System.ServiceModel.WSFederationHttpSecurityMode\n  - System.ServiceModel.WSMessageEncoding\n  - System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode\n  - System.ServiceModel.Activities.SerializerOption\n  - System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction\n  - System.ServiceModel.Channels.CompressionFormat\n  - System.ServiceModel.Channels.ContextExchangeMechanism\n  - System.ServiceModel.Channels.DeliveryFailure\n  - System.ServiceModel.Channels.DeliveryStatus\n  - System.ServiceModel.Channels.MessageState\n  - System.ServiceModel.Channels.ReceiveContextState\n  - System.ServiceModel.Channels.SecurityHeaderLayout\n  - System.ServiceModel.Channels.SupportedAddressingMode\n  - System.ServiceModel.Channels.TransferSession\n  - System.ServiceModel.Channels.WebContentFormat\n  - System.ServiceModel.Channels.WebSocketTransportUsage\n  - System.ServiceModel.Configuration.AuthenticationMode\n  - System.ServiceModel.Description.ListenUriMode\n  - System.ServiceModel.Description.MessageDirection\n  - System.ServiceModel.Description.MetadataExchangeClientMode\n  - System.ServiceModel.Description.PrincipalPermissionMode\n  - System.ServiceModel.Description.ServiceContractGenerationOptions\n  - System.ServiceModel.Description.UnknownExceptionAction\n  - System.ServiceModel.Diagnostics.PerformanceCounterScope\n  - System.ServiceModel.Discovery.ServiceDiscoveryMode\n  - System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode\n  - System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat\n  - System.ServiceModel.PeerResolvers.PeerReferralPolicy\n  - System.ServiceModel.PeerResolvers.PeerResolverMode\n  - System.ServiceModel.PeerResolvers.RefreshResult\n  - System.ServiceModel.Routing.Configuration.FilterType\n  - System.ServiceModel.Security.MessageProtectionOrder\n  - System.ServiceModel.Security.SecurityKeyEntropyMode\n  - System.ServiceModel.Security.SecurityTokenAttachmentMode\n  - System.ServiceModel.Security.UserNamePasswordValidationMode\n  - System.ServiceModel.Security.X509CertificateValidationMode\n  - System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode\n  - System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle\n  - System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType\n  - System.ServiceModel.Syndication.TextSyndicationContentKind\n  - System.ServiceModel.Web.WebMessageBodyStyle\n  - System.ServiceModel.Web.WebMessageFormat\n  - System.ServiceProcess.PowerBroadcastStatus\n  - System.ServiceProcess.ServiceAccount\n  - System.ServiceProcess.ServiceControllerPermissionAccess\n  - System.ServiceProcess.ServiceControllerStatus\n  - System.ServiceProcess.ServiceStartMode\n  - System.ServiceProcess.ServiceType\n  - System.ServiceProcess.SessionChangeReason\n  - System.ServiceProcess.Design.ServiceInstallerDialogResult\n  - System.Speech.AudioFormat.AudioBitsPerSample\n  - System.Speech.AudioFormat.AudioChannel\n  - System.Speech.AudioFormat.EncodingFormat\n  - System.Speech.Recognition.AudioSignalProblem\n  - System.Speech.Recognition.AudioState\n  - System.Speech.Recognition.DisplayAttributes\n  - System.Speech.Recognition.RecognizeMode\n  - System.Speech.Recognition.RecognizerState\n  - System.Speech.Recognition.SubsetMatchingMode\n  - System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode\n  - System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet\n  - System.Speech.Recognition.SrgsGrammar.SrgsRuleScope\n  - System.Speech.Synthesis.PromptBreak\n  - System.Speech.Synthesis.PromptEmphasis\n  - System.Speech.Synthesis.PromptRate\n  - System.Speech.Synthesis.PromptVolume\n  - System.Speech.Synthesis.SayAs\n  - System.Speech.Synthesis.SynthesisMediaType\n  - System.Speech.Synthesis.SynthesisTextFormat\n  - System.Speech.Synthesis.SynthesizerEmphasis\n  - System.Speech.Synthesis.SynthesizerState\n  - System.Speech.Synthesis.VoiceAge\n  - System.Speech.Synthesis.VoiceGender\n  - System.Speech.Synthesis.TtsEngine.ContourPointChangeType\n  - System.Speech.Synthesis.TtsEngine.EmphasisBreak\n  - System.Speech.Synthesis.TtsEngine.EmphasisWord\n  - System.Speech.Synthesis.TtsEngine.EventParameterType\n  - System.Speech.Synthesis.TtsEngine.ProsodyPitch\n  - System.Speech.Synthesis.TtsEngine.ProsodyRange\n  - System.Speech.Synthesis.TtsEngine.ProsodyRate\n  - System.Speech.Synthesis.TtsEngine.ProsodyUnit\n  - System.Speech.Synthesis.TtsEngine.ProsodyVolume\n  - System.Speech.Synthesis.TtsEngine.SpeakOutputFormat\n  - System.Speech.Synthesis.TtsEngine.TtsEngineAction\n  - System.Speech.Synthesis.TtsEngine.TtsEventId\n  - System.Text.NormalizationForm\n  - System.Text.RegularExpressions.RegexOptions\n  - System.Threading.ApartmentState\n  - System.Threading.EventResetMode\n  - System.Threading.LazyThreadSafetyMode\n  - System.Threading.LockRecursionPolicy\n  - System.Threading.ThreadPriority\n  - System.Threading.ThreadState\n  - System.Threading.Tasks.TaskContinuationOptions\n  - System.Threading.Tasks.TaskCreationOptions\n  - System.Threading.Tasks.TaskStatus\n  - System.Threading.Tasks.Dataflow.DataflowMessageStatus\n  - System.Transactions.DependentCloneOption\n  - System.Transactions.EnlistmentOptions\n  - System.Transactions.EnterpriseServicesInteropOption\n  - System.Transactions.IsolationLevel\n  - System.Transactions.TransactionScopeAsyncFlowOption\n  - System.Transactions.TransactionScopeOption\n  - System.Transactions.TransactionStatus\n  - System.Web.ApplicationShutdownReason\n  - System.Web.AspNetHostingPermissionLevel\n  - System.Web.HttpCacheability\n  - System.Web.HttpCacheRevalidation\n  - System.Web.HttpCookieMode\n  - System.Web.HttpValidationStatus\n  - System.Web.ProcessShutdownReason\n  - System.Web.ProcessStatus\n  - System.Web.ReadEntityBodyMode\n  - System.Web.RequestNotification\n  - System.Web.RequestNotificationStatus\n  - System.Web.TraceMode\n  - System.Web.Caching.CacheItemPriority\n  - System.Web.Caching.CacheItemRemovedReason\n  - System.Web.Caching.CacheItemUpdateReason\n  - System.Web.Compilation.BuildProviderAppliesTo\n  - System.Web.Compilation.BuildProviderResultFlags\n  - System.Web.Compilation.FolderLevelBuildProviderAppliesTo\n  - System.Web.Compilation.PrecompilationFlags\n  - System.Web.Configuration.AsyncPreloadModeFlags\n  - System.Web.Configuration.AuthenticationMode\n  - System.Web.Configuration.AuthorizationRuleAction\n  - System.Web.Configuration.CustomErrorsMode\n  - System.Web.Configuration.CustomErrorsRedirectMode\n  - System.Web.Configuration.FcnMode\n  - System.Web.Configuration.FormsAuthPasswordFormat\n  - System.Web.Configuration.FormsProtectionEnum\n  - System.Web.Configuration.MachineKeyCompatibilityMode\n  - System.Web.Configuration.MachineKeyValidation\n  - System.Web.Configuration.MembershipPasswordCompatibilityMode\n  - System.Web.Configuration.PagesEnableSessionState\n  - System.Web.Configuration.ProcessModelComAuthenticationLevel\n  - System.Web.Configuration.ProcessModelComImpersonationLevel\n  - System.Web.Configuration.ProcessModelLogLevel\n  - System.Web.Configuration.ProfileGuidedOptimizationsFlags\n  - System.Web.Configuration.SerializationMode\n  - System.Web.Configuration.TicketCompatibilityMode\n  - System.Web.Configuration.TraceDisplayMode\n  - System.Web.Configuration.WebApplicationLevel\n  - System.Web.Configuration.XhtmlConformanceMode\n  - System.Web.DynamicData.ContainerType\n  - System.Web.DynamicData.DynamicDataSourceOperation\n  - System.Web.DynamicData.ModelProviders.AssociationDirection\n  - System.Web.Hosting.HostSecurityPolicyResults\n  - System.Web.Hosting.RecycleLimitNotificationFrequency\n  - System.Web.Mail.MailEncoding\n  - System.Web.Mail.MailFormat\n  - System.Web.Mail.MailPriority\n  - System.Web.Management.EventNotificationType\n  - System.Web.Management.SessionStateType\n  - System.Web.Management.SqlFeatures\n  - System.Web.ModelBinding.BindingBehavior\n  - System.Web.Profile.ProfileAuthenticationOption\n  - System.Web.Routing.RouteDirection\n  - System.Web.Script.Services.ResponseFormat\n  - System.Web.Security.ActiveDirectoryConnectionProtection\n  - System.Web.Security.CookieProtection\n  - System.Web.Security.MachineKeyProtection\n  - System.Web.Security.MembershipCreateStatus\n  - System.Web.Security.MembershipPasswordFormat\n  - System.Web.Security.AntiXss.LowerCodeCharts\n  - System.Web.Security.AntiXss.LowerMidCodeCharts\n  - System.Web.Security.AntiXss.MidCodeCharts\n  - System.Web.Security.AntiXss.UpperCodeCharts\n  - System.Web.Security.AntiXss.UpperMidCodeCharts\n  - System.Web.Services.TransactionOption\n  - System.Web.Services.WsiProfiles\n  - System.Web.Services.Configuration.PriorityGroup\n  - System.Web.Services.Configuration.WebServiceProtocols\n  - System.Web.Services.Description.OperationFlow\n  - System.Web.Services.Description.ServiceDescriptionImportStyle\n  - System.Web.Services.Description.ServiceDescriptionImportWarnings\n  - System.Web.Services.Description.SoapBindingStyle\n  - System.Web.Services.Description.SoapBindingUse\n  - System.Web.Services.Protocols.LogicalMethodTypes\n  - System.Web.Services.Protocols.SoapHeaderDirection\n  - System.Web.Services.Protocols.SoapMessageStage\n  - System.Web.Services.Protocols.SoapParameterStyle\n  - System.Web.Services.Protocols.SoapProtocolVersion\n  - System.Web.Services.Protocols.SoapServiceRoutingStyle\n  - System.Web.SessionState.SessionStateActions\n  - System.Web.SessionState.SessionStateBehavior\n  - System.Web.SessionState.SessionStateMode\n  - System.Web.UI.AjaxFrameworkMode\n  - System.Web.UI.ClientIDMode\n  - System.Web.UI.CodeBlockType\n  - System.Web.UI.CodeConstructType\n  - System.Web.UI.CompilationMode\n  - System.Web.UI.ConflictOptions\n  - System.Web.UI.DataSourceCacheExpiry\n  - System.Web.UI.DataSourceCapabilities\n  - System.Web.UI.DataSourceOperation\n  - System.Web.UI.HtmlTextWriterAttribute\n  - System.Web.UI.HtmlTextWriterStyle\n  - System.Web.UI.HtmlTextWriterTag\n  - System.Web.UI.OutputCacheLocation\n  - System.Web.UI.PersistenceMode\n  - System.Web.UI.RegisteredScriptType\n  - System.Web.UI.ScriptMode\n  - System.Web.UI.TemplateInstance\n  - System.Web.UI.UnobtrusiveValidationMode\n  - System.Web.UI.UpdatePanelRenderMode\n  - System.Web.UI.UpdatePanelUpdateMode\n  - System.Web.UI.ValidateRequestMode\n  - System.Web.UI.VerificationConditionalOperator\n  - System.Web.UI.VerificationReportLevel\n  - System.Web.UI.VerificationRule\n  - System.Web.UI.ViewStateEncryptionMode\n  - System.Web.UI.ViewStateMode\n  - System.Web.UI.VirtualReferenceType\n  - System.Web.UI.XhtmlMobileDocType\n  - System.Web.UI.DataVisualization.Charting.AntiAliasingStyles\n  - System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations\n  - System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles\n  - System.Web.UI.DataVisualization.Charting.ArrowStyle\n  - System.Web.UI.DataVisualization.Charting.AxisArrowStyle\n  - System.Web.UI.DataVisualization.Charting.AxisEnabled\n  - System.Web.UI.DataVisualization.Charting.AxisName\n  - System.Web.UI.DataVisualization.Charting.AxisType\n  - System.Web.UI.DataVisualization.Charting.BorderSkinStyle\n  - System.Web.UI.DataVisualization.Charting.BreakLineStyle\n  - System.Web.UI.DataVisualization.Charting.CalloutStyle\n  - System.Web.UI.DataVisualization.Charting.ChartColorPalette\n  - System.Web.UI.DataVisualization.Charting.ChartDashStyle\n  - System.Web.UI.DataVisualization.Charting.ChartElementType\n  - System.Web.UI.DataVisualization.Charting.ChartHatchStyle\n  - System.Web.UI.DataVisualization.Charting.ChartHttpHandlerStorageType\n  - System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle\n  - System.Web.UI.DataVisualization.Charting.ChartImageFormat\n  - System.Web.UI.DataVisualization.Charting.ChartImageType\n  - System.Web.UI.DataVisualization.Charting.ChartImageWrapMode\n  - System.Web.UI.DataVisualization.Charting.ChartValueType\n  - System.Web.UI.DataVisualization.Charting.CompareMethod\n  - System.Web.UI.DataVisualization.Charting.DateRangeType\n  - System.Web.UI.DataVisualization.Charting.DateTimeIntervalType\n  - System.Web.UI.DataVisualization.Charting.Docking\n  - System.Web.UI.DataVisualization.Charting.FinancialFormula\n  - System.Web.UI.DataVisualization.Charting.GradientStyle\n  - System.Web.UI.DataVisualization.Charting.GridTickTypes\n  - System.Web.UI.DataVisualization.Charting.ImageStorageMode\n  - System.Web.UI.DataVisualization.Charting.IntervalAutoMode\n  - System.Web.UI.DataVisualization.Charting.IntervalType\n  - System.Web.UI.DataVisualization.Charting.LabelAlignmentStyles\n  - System.Web.UI.DataVisualization.Charting.LabelAutoFitStyles\n  - System.Web.UI.DataVisualization.Charting.LabelCalloutStyle\n  - System.Web.UI.DataVisualization.Charting.LabelMarkStyle\n  - System.Web.UI.DataVisualization.Charting.LabelOutsidePlotAreaStyle\n  - System.Web.UI.DataVisualization.Charting.LegendCellColumnType\n  - System.Web.UI.DataVisualization.Charting.LegendCellType\n  - System.Web.UI.DataVisualization.Charting.LegendImageStyle\n  - System.Web.UI.DataVisualization.Charting.LegendItemOrder\n  - System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle\n  - System.Web.UI.DataVisualization.Charting.LegendStyle\n  - System.Web.UI.DataVisualization.Charting.LegendTableStyle\n  - System.Web.UI.DataVisualization.Charting.LightStyle\n  - System.Web.UI.DataVisualization.Charting.LineAnchorCapStyle\n  - System.Web.UI.DataVisualization.Charting.MapAreaShape\n  - System.Web.UI.DataVisualization.Charting.MarkerStyle\n  - System.Web.UI.DataVisualization.Charting.PointSortOrder\n  - System.Web.UI.DataVisualization.Charting.RenderType\n  - System.Web.UI.DataVisualization.Charting.RightToLeft\n  - System.Web.UI.DataVisualization.Charting.SerializationContents\n  - System.Web.UI.DataVisualization.Charting.SerializationFormat\n  - System.Web.UI.DataVisualization.Charting.SeriesChartType\n  - System.Web.UI.DataVisualization.Charting.StartFromZero\n  - System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality\n  - System.Web.UI.DataVisualization.Charting.TextOrientation\n  - System.Web.UI.DataVisualization.Charting.TextStyle\n  - System.Web.UI.DataVisualization.Charting.TickMarkStyle\n  - System.Web.UI.Design.ContentDesignerState\n  - System.Web.UI.Design.ControlLocation\n  - System.Web.UI.Design.UrlBuilderOptions\n  - System.Web.UI.Design.ViewFlags\n  - System.Web.UI.MobileControls.Alignment\n  - System.Web.UI.MobileControls.BooleanOption\n  - System.Web.UI.MobileControls.CommandFormat\n  - System.Web.UI.MobileControls.FontSize\n  - System.Web.UI.MobileControls.FormMethod\n  - System.Web.UI.MobileControls.ListDecoration\n  - System.Web.UI.MobileControls.ListSelectType\n  - System.Web.UI.MobileControls.MobileListItemType\n  - System.Web.UI.MobileControls.ObjectListViewMode\n  - System.Web.UI.MobileControls.Wrapping\n  - System.Web.UI.MobileControls.Adapters.WmlPostFieldType\n  - System.Web.UI.MobileControls.Adapters.XhtmlAdapters.Doctype\n  - System.Web.UI.MobileControls.Adapters.XhtmlAdapters.StyleSheetLocation\n  - System.Web.UI.WebControls.AutoCompleteType\n  - System.Web.UI.WebControls.BorderStyle\n  - System.Web.UI.WebControls.BulletedListDisplayMode\n  - System.Web.UI.WebControls.BulletStyle\n  - System.Web.UI.WebControls.ButtonColumnType\n  - System.Web.UI.WebControls.ButtonType\n  - System.Web.UI.WebControls.CalendarSelectionMode\n  - System.Web.UI.WebControls.ContentDirection\n  - System.Web.UI.WebControls.DataBoundControlMode\n  - System.Web.UI.WebControls.DataControlCellType\n  - System.Web.UI.WebControls.DataControlRowState\n  - System.Web.UI.WebControls.DataControlRowType\n  - System.Web.UI.WebControls.DayNameFormat\n  - System.Web.UI.WebControls.DetailsViewMode\n  - System.Web.UI.WebControls.FirstDayOfWeek\n  - System.Web.UI.WebControls.FontSize\n  - System.Web.UI.WebControls.FormViewMode\n  - System.Web.UI.WebControls.GridLines\n  - System.Web.UI.WebControls.HorizontalAlign\n  - System.Web.UI.WebControls.HotSpotMode\n  - System.Web.UI.WebControls.ImageAlign\n  - System.Web.UI.WebControls.InsertItemPosition\n  - System.Web.UI.WebControls.ListItemType\n  - System.Web.UI.WebControls.ListSelectionMode\n  - System.Web.UI.WebControls.ListViewCancelMode\n  - System.Web.UI.WebControls.ListViewItemType\n  - System.Web.UI.WebControls.LiteralMode\n  - System.Web.UI.WebControls.LoginFailureAction\n  - System.Web.UI.WebControls.LoginTextLayout\n  - System.Web.UI.WebControls.LogoutAction\n  - System.Web.UI.WebControls.MenuRenderingMode\n  - System.Web.UI.WebControls.NextPrevFormat\n  - System.Web.UI.WebControls.Orientation\n  - System.Web.UI.WebControls.PagerButtons\n  - System.Web.UI.WebControls.PagerMode\n  - System.Web.UI.WebControls.PagerPosition\n  - System.Web.UI.WebControls.ParsingCulture\n  - System.Web.UI.WebControls.PathDirection\n  - System.Web.UI.WebControls.RepeatDirection\n  - System.Web.UI.WebControls.RepeatLayout\n  - System.Web.UI.WebControls.ScrollBars\n  - System.Web.UI.WebControls.SiteMapNodeItemType\n  - System.Web.UI.WebControls.SortDirection\n  - System.Web.UI.WebControls.SqlDataSourceCommandType\n  - System.Web.UI.WebControls.SqlDataSourceMode\n  - System.Web.UI.WebControls.TableCaptionAlign\n  - System.Web.UI.WebControls.TableHeaderScope\n  - System.Web.UI.WebControls.TableRowSection\n  - System.Web.UI.WebControls.TextAlign\n  - System.Web.UI.WebControls.TextBoxMode\n  - System.Web.UI.WebControls.TitleFormat\n  - System.Web.UI.WebControls.TreeNodeSelectAction\n  - System.Web.UI.WebControls.TreeNodeTypes\n  - System.Web.UI.WebControls.TreeViewImageSet\n  - System.Web.UI.WebControls.UnitType\n  - System.Web.UI.WebControls.ValidationCompareOperator\n  - System.Web.UI.WebControls.ValidationDataType\n  - System.Web.UI.WebControls.ValidationSummaryDisplayMode\n  - System.Web.UI.WebControls.ValidatorDisplay\n  - System.Web.UI.WebControls.VerticalAlign\n  - System.Web.UI.WebControls.WizardStepType\n  - System.Web.UI.WebControls.Expressions.RangeType\n  - System.Web.UI.WebControls.Expressions.SearchType\n  - System.Web.UI.WebControls.WebParts.PartChromeState\n  - System.Web.UI.WebControls.WebParts.PartChromeType\n  - System.Web.UI.WebControls.WebParts.PersonalizationScope\n  - System.Web.UI.WebControls.WebParts.WebPartExportMode\n  - System.Web.UI.WebControls.WebParts.WebPartHelpMode\n  - System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode\n  - System.Web.Util.RequestValidationSource\n  - System.Windows.BaselineAlignment\n  - System.Windows.BaseValueSource\n  - System.Windows.ColumnSpaceDistribution\n  - System.Windows.DragAction\n  - System.Windows.DragDropEffects\n  - System.Windows.DragDropKeyStates\n  - System.Windows.FigureHorizontalAnchor\n  - System.Windows.FigureUnitType\n  - System.Windows.FigureVerticalAnchor\n  - System.Windows.FlowDirection\n  - System.Windows.FontCapitals\n  - System.Windows.FontEastAsianLanguage\n  - System.Windows.FontEastAsianWidths\n  - System.Windows.FontFraction\n  - System.Windows.FontNumeralAlignment\n  - System.Windows.FontNumeralStyle\n  - System.Windows.FontVariants\n  - System.Windows.FrameworkPropertyMetadataOptions\n  - System.Windows.GridUnitType\n  - System.Windows.HorizontalAlignment\n  - System.Windows.InheritanceBehavior\n  - System.Windows.LineBreakCondition\n  - System.Windows.LineStackingStrategy\n  - System.Windows.LocalizationCategory\n  - System.Windows.MessageBoxButton\n  - System.Windows.MessageBoxImage\n  - System.Windows.MessageBoxOptions\n  - System.Windows.MessageBoxResult\n  - System.Windows.Modifiability\n  - System.Windows.PowerLineStatus\n  - System.Windows.Readability\n  - System.Windows.ReasonSessionEnding\n  - System.Windows.ResizeMode\n  - System.Windows.ResourceDictionaryLocation\n  - System.Windows.RoutingStrategy\n  - System.Windows.ShutdownMode\n  - System.Windows.SizeToContent\n  - System.Windows.TemplateKey.TemplateType\n  - System.Windows.TextAlignment\n  - System.Windows.TextDataFormat\n  - System.Windows.TextDecorationLocation\n  - System.Windows.TextDecorationUnit\n  - System.Windows.TextMarkerStyle\n  - System.Windows.TextTrimming\n  - System.Windows.TextWrapping\n  - System.Windows.VerticalAlignment\n  - System.Windows.Visibility\n  - System.Windows.WindowStartupLocation\n  - System.Windows.WindowState\n  - System.Windows.WindowStyle\n  - System.Windows.WrapDirection\n  - System.Windows.Annotations.AnnotationAction\n  - System.Windows.Annotations.Storage.StoreContentAction\n  - System.Windows.Automation.AsyncContentLoadedState\n  - System.Windows.Automation.AutomationElementMode\n  - System.Windows.Automation.ClientSideProviderMatchIndicator\n  - System.Windows.Automation.DockPosition\n  - System.Windows.Automation.ExpandCollapseState\n  - System.Windows.Automation.IsOffscreenBehavior\n  - System.Windows.Automation.OrientationType\n  - System.Windows.Automation.PropertyConditionFlags\n  - System.Windows.Automation.RowOrColumnMajor\n  - System.Windows.Automation.ScrollAmount\n  - System.Windows.Automation.StructureChangeType\n  - System.Windows.Automation.SupportedTextSelection\n  - System.Windows.Automation.SynchronizedInputType\n  - System.Windows.Automation.ToggleState\n  - System.Windows.Automation.TreeScope\n  - System.Windows.Automation.WindowInteractionState\n  - System.Windows.Automation.WindowVisualState\n  - System.Windows.Automation.Peers.AutomationControlType\n  - System.Windows.Automation.Peers.AutomationEvents\n  - System.Windows.Automation.Peers.AutomationOrientation\n  - System.Windows.Automation.Peers.PatternInterface\n  - System.Windows.Automation.Provider.NavigateDirection\n  - System.Windows.Automation.Provider.ProviderOptions\n  - System.Windows.Automation.Text.AnimationStyle\n  - System.Windows.Automation.Text.BulletStyle\n  - System.Windows.Automation.Text.CapStyle\n  - System.Windows.Automation.Text.FlowDirections\n  - System.Windows.Automation.Text.HorizontalTextAlignment\n  - System.Windows.Automation.Text.OutlineStyles\n  - System.Windows.Automation.Text.TextDecorationLineStyle\n  - System.Windows.Automation.Text.TextPatternRangeEndpoint\n  - System.Windows.Automation.Text.TextUnit\n  - System.Windows.Controls.CalendarMode\n  - System.Windows.Controls.CalendarSelectionMode\n  - System.Windows.Controls.CharacterCasing\n  - System.Windows.Controls.ClickMode\n  - System.Windows.Controls.DataGridClipboardCopyMode\n  - System.Windows.Controls.DataGridEditAction\n  - System.Windows.Controls.DataGridEditingUnit\n  - System.Windows.Controls.DataGridGridLinesVisibility\n  - System.Windows.Controls.DataGridHeadersVisibility\n  - System.Windows.Controls.DataGridLengthUnitType\n  - System.Windows.Controls.DataGridRowDetailsVisibilityMode\n  - System.Windows.Controls.DataGridSelectionMode\n  - System.Windows.Controls.DataGridSelectionUnit\n  - System.Windows.Controls.DatePickerFormat\n  - System.Windows.Controls.Dock\n  - System.Windows.Controls.ExpandDirection\n  - System.Windows.Controls.FlowDocumentReaderViewingMode\n  - System.Windows.Controls.GridResizeBehavior\n  - System.Windows.Controls.GridResizeDirection\n  - System.Windows.Controls.GridViewColumnHeaderRole\n  - System.Windows.Controls.InkCanvasClipboardFormat\n  - System.Windows.Controls.InkCanvasEditingMode\n  - System.Windows.Controls.InkCanvasSelectionHitResult\n  - System.Windows.Controls.KeyTipHorizontalPlacement\n  - System.Windows.Controls.KeyTipVerticalPlacement\n  - System.Windows.Controls.MediaState\n  - System.Windows.Controls.MenuItemRole\n  - System.Windows.Controls.Orientation\n  - System.Windows.Controls.OverflowMode\n  - System.Windows.Controls.PageRangeSelection\n  - System.Windows.Controls.PanningMode\n  - System.Windows.Controls.ScrollBarVisibility\n  - System.Windows.Controls.ScrollUnit\n  - System.Windows.Controls.SelectionMode\n  - System.Windows.Controls.SelectiveScrollingOrientation\n  - System.Windows.Controls.SpellingReform\n  - System.Windows.Controls.StickyNoteType\n  - System.Windows.Controls.StretchDirection\n  - System.Windows.Controls.UndoAction\n  - System.Windows.Controls.ValidationErrorEventAction\n  - System.Windows.Controls.ValidationStep\n  - System.Windows.Controls.VirtualizationCacheLengthUnit\n  - System.Windows.Controls.VirtualizationMode\n  - System.Windows.Controls.Primitives.AutoToolTipPlacement\n  - System.Windows.Controls.Primitives.GeneratorDirection\n  - System.Windows.Controls.Primitives.GeneratorStatus\n  - System.Windows.Controls.Primitives.PlacementMode\n  - System.Windows.Controls.Primitives.PopupAnimation\n  - System.Windows.Controls.Primitives.PopupPrimaryAxis\n  - System.Windows.Controls.Primitives.ScrollEventType\n  - System.Windows.Controls.Primitives.TickBarPlacement\n  - System.Windows.Controls.Primitives.TickPlacement\n  - System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel\n  - System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\n  - System.Windows.Controls.Ribbon.RibbonDismissPopupMode\n  - System.Windows.Controls.Ribbon.RibbonImageSize\n  - System.Windows.Controls.Ribbon.RibbonSplitButtonLabelPosition\n  - System.Windows.Data.BindingMode\n  - System.Windows.Data.BindingStatus\n  - System.Windows.Data.RelativeSourceMode\n  - System.Windows.Data.UpdateSourceTrigger\n  - System.Windows.Diagnostics.VisualTreeChangeType\n  - System.Windows.Documents.LogicalDirection\n  - System.Windows.Documents.TextPointerContext\n  - System.Windows.Documents.Serialization.WritingProgressChangeLevel\n  - System.Windows.Forms.AccessibleEvents\n  - System.Windows.Forms.AccessibleNavigation\n  - System.Windows.Forms.AccessibleRole\n  - System.Windows.Forms.AccessibleSelection\n  - System.Windows.Forms.AccessibleStates\n  - System.Windows.Forms.AnchorStyles\n  - System.Windows.Forms.Appearance\n  - System.Windows.Forms.ArrangeDirection\n  - System.Windows.Forms.ArrangeStartingPosition\n  - System.Windows.Forms.ArrowDirection\n  - System.Windows.Forms.AutoCompleteMode\n  - System.Windows.Forms.AutoCompleteSource\n  - System.Windows.Forms.AutoScaleMode\n  - System.Windows.Forms.AutoSizeMode\n  - System.Windows.Forms.AutoValidate\n  - System.Windows.Forms.AxHost.ActiveXInvokeKind\n  - System.Windows.Forms.BatteryChargeStatus\n  - System.Windows.Forms.BindingCompleteContext\n  - System.Windows.Forms.BindingCompleteState\n  - System.Windows.Forms.BootMode\n  - System.Windows.Forms.Border3DSide\n  - System.Windows.Forms.Border3DStyle\n  - System.Windows.Forms.BorderStyle\n  - System.Windows.Forms.BoundsSpecified\n  - System.Windows.Forms.ButtonBorderStyle\n  - System.Windows.Forms.ButtonState\n  - System.Windows.Forms.CaptionButton\n  - System.Windows.Forms.CharacterCasing\n  - System.Windows.Forms.CheckState\n  - System.Windows.Forms.CloseReason\n  - System.Windows.Forms.ColorDepth\n  - System.Windows.Forms.ColumnHeaderAutoResizeStyle\n  - System.Windows.Forms.ColumnHeaderStyle\n  - System.Windows.Forms.ComboBoxStyle\n  - System.Windows.Forms.ControlStyles\n  - System.Windows.Forms.ControlUpdateMode\n  - System.Windows.Forms.DataGrid.HitTestType\n  - System.Windows.Forms.DataGridLineStyle\n  - System.Windows.Forms.DataGridParentRowsLabelStyle\n  - System.Windows.Forms.DataGridViewAdvancedCellBorderStyle\n  - System.Windows.Forms.DataGridViewAutoSizeColumnMode\n  - System.Windows.Forms.DataGridViewAutoSizeColumnsMode\n  - System.Windows.Forms.DataGridViewAutoSizeRowMode\n  - System.Windows.Forms.DataGridViewAutoSizeRowsMode\n  - System.Windows.Forms.DataGridViewCellBorderStyle\n  - System.Windows.Forms.DataGridViewCellStyleScopes\n  - System.Windows.Forms.DataGridViewClipboardCopyMode\n  - System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode\n  - System.Windows.Forms.DataGridViewColumnSortMode\n  - System.Windows.Forms.DataGridViewComboBoxDisplayStyle\n  - System.Windows.Forms.DataGridViewContentAlignment\n  - System.Windows.Forms.DataGridViewDataErrorContexts\n  - System.Windows.Forms.DataGridViewEditMode\n  - System.Windows.Forms.DataGridViewElementStates\n  - System.Windows.Forms.DataGridViewHeaderBorderStyle\n  - System.Windows.Forms.DataGridViewHitTestType\n  - System.Windows.Forms.DataGridViewImageCellLayout\n  - System.Windows.Forms.DataGridViewPaintParts\n  - System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode\n  - System.Windows.Forms.DataGridViewSelectionMode\n  - System.Windows.Forms.DataGridViewTriState\n  - System.Windows.Forms.DataSourceUpdateMode\n  - System.Windows.Forms.DateTimePickerFormat\n  - System.Windows.Forms.Day\n  - System.Windows.Forms.DialogResult\n  - System.Windows.Forms.DockingBehavior\n  - System.Windows.Forms.DockStyle\n  - System.Windows.Forms.DragAction\n  - System.Windows.Forms.DragDropEffects\n  - System.Windows.Forms.DrawItemState\n  - System.Windows.Forms.DrawMode\n  - System.Windows.Forms.ErrorBlinkStyle\n  - System.Windows.Forms.ErrorIconAlignment\n  - System.Windows.Forms.FixedPanel\n  - System.Windows.Forms.FlatStyle\n  - System.Windows.Forms.FlowDirection\n  - System.Windows.Forms.FormBorderStyle\n  - System.Windows.Forms.FormStartPosition\n  - System.Windows.Forms.FormWindowState\n  - System.Windows.Forms.FrameStyle\n  - System.Windows.Forms.GetChildAtPointSkip\n  - System.Windows.Forms.GridItemType\n  - System.Windows.Forms.HelpNavigator\n  - System.Windows.Forms.HorizontalAlignment\n  - System.Windows.Forms.HtmlElementInsertionOrientation\n  - System.Windows.Forms.ImageLayout\n  - System.Windows.Forms.ImeMode\n  - System.Windows.Forms.InsertKeyMode\n  - System.Windows.Forms.ItemActivation\n  - System.Windows.Forms.ItemBoundsPortion\n  - System.Windows.Forms.Keys\n  - System.Windows.Forms.LeftRightAlignment\n  - System.Windows.Forms.LinkBehavior\n  - System.Windows.Forms.LinkState\n  - System.Windows.Forms.ListViewAlignment\n  - System.Windows.Forms.ListViewHitTestLocations\n  - System.Windows.Forms.ListViewItemStates\n  - System.Windows.Forms.MaskFormat\n  - System.Windows.Forms.MdiLayout\n  - System.Windows.Forms.MenuGlyph\n  - System.Windows.Forms.MenuMerge\n  - System.Windows.Forms.MergeAction\n  - System.Windows.Forms.MessageBoxButtons\n  - System.Windows.Forms.MessageBoxDefaultButton\n  - System.Windows.Forms.MessageBoxIcon\n  - System.Windows.Forms.MessageBoxOptions\n  - System.Windows.Forms.MonthCalendar.HitArea\n  - System.Windows.Forms.MouseButtons\n  - System.Windows.Forms.Orientation\n  - System.Windows.Forms.PictureBoxSizeMode\n  - System.Windows.Forms.PowerLineStatus\n  - System.Windows.Forms.PowerState\n  - System.Windows.Forms.PreProcessControlState\n  - System.Windows.Forms.ProgressBarStyle\n  - System.Windows.Forms.PropertySort\n  - System.Windows.Forms.RichTextBoxFinds\n  - System.Windows.Forms.RichTextBoxLanguageOptions\n  - System.Windows.Forms.RichTextBoxScrollBars\n  - System.Windows.Forms.RichTextBoxSelectionAttribute\n  - System.Windows.Forms.RichTextBoxSelectionTypes\n  - System.Windows.Forms.RichTextBoxStreamType\n  - System.Windows.Forms.RichTextBoxWordPunctuations\n  - System.Windows.Forms.RightToLeft\n  - System.Windows.Forms.ScreenOrientation\n  - System.Windows.Forms.ScrollBars\n  - System.Windows.Forms.ScrollButton\n  - System.Windows.Forms.ScrollEventType\n  - System.Windows.Forms.ScrollOrientation\n  - System.Windows.Forms.SearchDirectionHint\n  - System.Windows.Forms.SecurityIDType\n  - System.Windows.Forms.SelectionMode\n  - System.Windows.Forms.Shortcut\n  - System.Windows.Forms.SizeGripStyle\n  - System.Windows.Forms.SizeType\n  - System.Windows.Forms.SortOrder\n  - System.Windows.Forms.StatusBarPanelAutoSize\n  - System.Windows.Forms.StatusBarPanelBorderStyle\n  - System.Windows.Forms.StatusBarPanelStyle\n  - System.Windows.Forms.StructFormat\n  - System.Windows.Forms.SystemParameter\n  - System.Windows.Forms.TabAlignment\n  - System.Windows.Forms.TabAppearance\n  - System.Windows.Forms.TabControlAction\n  - System.Windows.Forms.TabDrawMode\n  - System.Windows.Forms.TableLayoutPanelCellBorderStyle\n  - System.Windows.Forms.TableLayoutPanelGrowStyle\n  - System.Windows.Forms.TabSizeMode\n  - System.Windows.Forms.TextDataFormat\n  - System.Windows.Forms.TextFormatFlags\n  - System.Windows.Forms.TextImageRelation\n  - System.Windows.Forms.TickStyle\n  - System.Windows.Forms.ToolBarAppearance\n  - System.Windows.Forms.ToolBarButtonStyle\n  - System.Windows.Forms.ToolBarTextAlign\n  - System.Windows.Forms.ToolStripDropDownCloseReason\n  - System.Windows.Forms.ToolStripDropDownDirection\n  - System.Windows.Forms.ToolStripGripDisplayStyle\n  - System.Windows.Forms.ToolStripGripStyle\n  - System.Windows.Forms.ToolStripItemAlignment\n  - System.Windows.Forms.ToolStripItemDisplayStyle\n  - System.Windows.Forms.ToolStripItemImageScaling\n  - System.Windows.Forms.ToolStripItemOverflow\n  - System.Windows.Forms.ToolStripItemPlacement\n  - System.Windows.Forms.ToolStripLayoutStyle\n  - System.Windows.Forms.ToolStripManagerRenderMode\n  - System.Windows.Forms.ToolStripRenderMode\n  - System.Windows.Forms.ToolStripStatusLabelBorderSides\n  - System.Windows.Forms.ToolStripTextDirection\n  - System.Windows.Forms.ToolTipIcon\n  - System.Windows.Forms.TreeNodeStates\n  - System.Windows.Forms.TreeViewAction\n  - System.Windows.Forms.TreeViewDrawMode\n  - System.Windows.Forms.TreeViewHitTestLocations\n  - System.Windows.Forms.UICues\n  - System.Windows.Forms.UnhandledExceptionMode\n  - System.Windows.Forms.ValidationConstraints\n  - System.Windows.Forms.View\n  - System.Windows.Forms.WebBrowserEncryptionLevel\n  - System.Windows.Forms.WebBrowserReadyState\n  - System.Windows.Forms.WebBrowserRefreshOption\n  - System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles\n  - System.Windows.Forms.DataVisualization.Charting.AreaAlignmentOrientations\n  - System.Windows.Forms.DataVisualization.Charting.AreaAlignmentStyles\n  - System.Windows.Forms.DataVisualization.Charting.ArrowStyle\n  - System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle\n  - System.Windows.Forms.DataVisualization.Charting.AxisEnabled\n  - System.Windows.Forms.DataVisualization.Charting.AxisName\n  - System.Windows.Forms.DataVisualization.Charting.AxisType\n  - System.Windows.Forms.DataVisualization.Charting.BorderSkinStyle\n  - System.Windows.Forms.DataVisualization.Charting.BreakLineStyle\n  - System.Windows.Forms.DataVisualization.Charting.CalloutStyle\n  - System.Windows.Forms.DataVisualization.Charting.ChartColorPalette\n  - System.Windows.Forms.DataVisualization.Charting.ChartDashStyle\n  - System.Windows.Forms.DataVisualization.Charting.ChartElementType\n  - System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle\n  - System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle\n  - System.Windows.Forms.DataVisualization.Charting.ChartImageFormat\n  - System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode\n  - System.Windows.Forms.DataVisualization.Charting.ChartValueType\n  - System.Windows.Forms.DataVisualization.Charting.CompareMethod\n  - System.Windows.Forms.DataVisualization.Charting.DateRangeType\n  - System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType\n  - System.Windows.Forms.DataVisualization.Charting.Docking\n  - System.Windows.Forms.DataVisualization.Charting.FinancialFormula\n  - System.Windows.Forms.DataVisualization.Charting.GradientStyle\n  - System.Windows.Forms.DataVisualization.Charting.GridTickTypes\n  - System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode\n  - System.Windows.Forms.DataVisualization.Charting.IntervalType\n  - System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles\n  - System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles\n  - System.Windows.Forms.DataVisualization.Charting.LabelCalloutStyle\n  - System.Windows.Forms.DataVisualization.Charting.LabelMarkStyle\n  - System.Windows.Forms.DataVisualization.Charting.LabelOutsidePlotAreaStyle\n  - System.Windows.Forms.DataVisualization.Charting.LegendCellColumnType\n  - System.Windows.Forms.DataVisualization.Charting.LegendCellType\n  - System.Windows.Forms.DataVisualization.Charting.LegendImageStyle\n  - System.Windows.Forms.DataVisualization.Charting.LegendItemOrder\n  - System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle\n  - System.Windows.Forms.DataVisualization.Charting.LegendStyle\n  - System.Windows.Forms.DataVisualization.Charting.LegendTableStyle\n  - System.Windows.Forms.DataVisualization.Charting.LightStyle\n  - System.Windows.Forms.DataVisualization.Charting.LineAnchorCapStyle\n  - System.Windows.Forms.DataVisualization.Charting.MarkerStyle\n  - System.Windows.Forms.DataVisualization.Charting.PointSortOrder\n  - System.Windows.Forms.DataVisualization.Charting.ScrollBarButtonStyles\n  - System.Windows.Forms.DataVisualization.Charting.ScrollBarButtonType\n  - System.Windows.Forms.DataVisualization.Charting.ScrollType\n  - System.Windows.Forms.DataVisualization.Charting.SerializationContents\n  - System.Windows.Forms.DataVisualization.Charting.SerializationFormat\n  - System.Windows.Forms.DataVisualization.Charting.SeriesChartType\n  - System.Windows.Forms.DataVisualization.Charting.StartFromZero\n  - System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality\n  - System.Windows.Forms.DataVisualization.Charting.TextOrientation\n  - System.Windows.Forms.DataVisualization.Charting.TextStyle\n  - System.Windows.Forms.DataVisualization.Charting.TickMarkStyle\n  - System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder\n  - System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles\n  - System.Windows.Forms.Design.SelectionRules\n  - System.Windows.Forms.Design.ThemedScrollbarMode\n  - System.Windows.Forms.Design.ToolStripItemDesignerAvailability\n  - System.Windows.Forms.Design.Behavior.GlyphSelectionType\n  - System.Windows.Forms.Design.Behavior.SnapLinePriority\n  - System.Windows.Forms.Design.Behavior.SnapLineType\n  - System.Windows.Forms.VisualStyles.BackgroundType\n  - System.Windows.Forms.VisualStyles.BooleanProperty\n  - System.Windows.Forms.VisualStyles.BorderType\n  - System.Windows.Forms.VisualStyles.CheckBoxState\n  - System.Windows.Forms.VisualStyles.ColorProperty\n  - System.Windows.Forms.VisualStyles.ComboBoxState\n  - System.Windows.Forms.VisualStyles.ContentAlignment\n  - System.Windows.Forms.VisualStyles.EdgeEffects\n  - System.Windows.Forms.VisualStyles.Edges\n  - System.Windows.Forms.VisualStyles.EdgeStyle\n  - System.Windows.Forms.VisualStyles.EnumProperty\n  - System.Windows.Forms.VisualStyles.FilenameProperty\n  - System.Windows.Forms.VisualStyles.FillType\n  - System.Windows.Forms.VisualStyles.FontProperty\n  - System.Windows.Forms.VisualStyles.GlyphFontSizingType\n  - System.Windows.Forms.VisualStyles.GlyphType\n  - System.Windows.Forms.VisualStyles.GroupBoxState\n  - System.Windows.Forms.VisualStyles.HitTestCode\n  - System.Windows.Forms.VisualStyles.HitTestOptions\n  - System.Windows.Forms.VisualStyles.HorizontalAlign\n  - System.Windows.Forms.VisualStyles.IconEffect\n  - System.Windows.Forms.VisualStyles.ImageOrientation\n  - System.Windows.Forms.VisualStyles.ImageSelectType\n  - System.Windows.Forms.VisualStyles.IntegerProperty\n  - System.Windows.Forms.VisualStyles.MarginProperty\n  - System.Windows.Forms.VisualStyles.OffsetType\n  - System.Windows.Forms.VisualStyles.PointProperty\n  - System.Windows.Forms.VisualStyles.PushButtonState\n  - System.Windows.Forms.VisualStyles.RadioButtonState\n  - System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState\n  - System.Windows.Forms.VisualStyles.ScrollBarSizeBoxState\n  - System.Windows.Forms.VisualStyles.ScrollBarState\n  - System.Windows.Forms.VisualStyles.SizingType\n  - System.Windows.Forms.VisualStyles.StringProperty\n  - System.Windows.Forms.VisualStyles.TabItemState\n  - System.Windows.Forms.VisualStyles.TextBoxState\n  - System.Windows.Forms.VisualStyles.TextMetricsCharacterSet\n  - System.Windows.Forms.VisualStyles.TextMetricsPitchAndFamilyValues\n  - System.Windows.Forms.VisualStyles.TextShadowType\n  - System.Windows.Forms.VisualStyles.ThemeSizeType\n  - System.Windows.Forms.VisualStyles.ToolBarState\n  - System.Windows.Forms.VisualStyles.TrackBarThumbState\n  - System.Windows.Forms.VisualStyles.TrueSizeScalingType\n  - System.Windows.Forms.VisualStyles.VerticalAlignment\n  - System.Windows.Forms.VisualStyles.VisualStyleState\n  - System.Windows.Ink.ApplicationGesture\n  - System.Windows.Ink.RecognitionConfidence\n  - System.Windows.Ink.StylusTip\n  - System.Windows.Input.CaptureMode\n  - System.Windows.Input.CursorType\n  - System.Windows.Input.FocusNavigationDirection\n  - System.Windows.Input.ImeConversionModeValues\n  - System.Windows.Input.ImeSentenceModeValues\n  - System.Windows.Input.InputMethodState\n  - System.Windows.Input.InputMode\n  - System.Windows.Input.InputScopeNameValue\n  - System.Windows.Input.InputType\n  - System.Windows.Input.Key\n  - System.Windows.Input.KeyboardNavigationMode\n  - System.Windows.Input.KeyStates\n  - System.Windows.Input.ManipulationModes\n  - System.Windows.Input.ModifierKeys\n  - System.Windows.Input.MouseAction\n  - System.Windows.Input.MouseButton\n  - System.Windows.Input.MouseButtonState\n  - System.Windows.Input.RestoreFocusMode\n  - System.Windows.Input.SpeechMode\n  - System.Windows.Input.StylusButtonState\n  - System.Windows.Input.StylusPointPropertyUnit\n  - System.Windows.Input.SystemGesture\n  - System.Windows.Input.TabletDeviceType\n  - System.Windows.Input.TabletHardwareCapabilities\n  - System.Windows.Input.TextCompositionAutoComplete\n  - System.Windows.Input.TouchAction\n  - System.Windows.Input.Manipulations.Manipulations2D\n  - System.Windows.Interop.D3DResourceType\n  - System.Windows.Interop.RenderMode\n  - System.Windows.Markup.DesignerSerializationOptions\n  - System.Windows.Markup.XamlWriterMode\n  - System.Windows.Markup.XamlWriterState\n  - System.Windows.Markup.Localizer.BamlLocalizerError\n  - System.Windows.Media.AlignmentX\n  - System.Windows.Media.AlignmentY\n  - System.Windows.Media.BitmapScalingMode\n  - System.Windows.Media.BrushMappingMode\n  - System.Windows.Media.CachingHint\n  - System.Windows.Media.ClearTypeHint\n  - System.Windows.Media.ColorInterpolationMode\n  - System.Windows.Media.EdgeMode\n  - System.Windows.Media.FillRule\n  - System.Windows.Media.FontEmbeddingRight\n  - System.Windows.Media.GeometryCombineMode\n  - System.Windows.Media.GradientSpreadMethod\n  - System.Windows.Media.HitTestFilterBehavior\n  - System.Windows.Media.HitTestResultBehavior\n  - System.Windows.Media.IntersectionDetail\n  - System.Windows.Media.NumberCultureSource\n  - System.Windows.Media.NumberSubstitutionMethod\n  - System.Windows.Media.PenLineCap\n  - System.Windows.Media.PenLineJoin\n  - System.Windows.Media.Stretch\n  - System.Windows.Media.StyleSimulations\n  - System.Windows.Media.SweepDirection\n  - System.Windows.Media.TextFormattingMode\n  - System.Windows.Media.TextHintingMode\n  - System.Windows.Media.TextRenderingMode\n  - System.Windows.Media.TileMode\n  - System.Windows.Media.ToleranceType\n  - System.Windows.Media.Animation.ClockState\n  - System.Windows.Media.Animation.EasingMode\n  - System.Windows.Media.Animation.FillBehavior\n  - System.Windows.Media.Animation.HandoffBehavior\n  - System.Windows.Media.Animation.KeyTimeType\n  - System.Windows.Media.Animation.PathAnimationSource\n  - System.Windows.Media.Animation.SlipBehavior\n  - System.Windows.Media.Animation.TimeSeekOrigin\n  - System.Windows.Media.Effects.EdgeProfile\n  - System.Windows.Media.Effects.KernelType\n  - System.Windows.Media.Effects.RenderingBias\n  - System.Windows.Media.Effects.SamplingMode\n  - System.Windows.Media.Effects.ShaderRenderMode\n  - System.Windows.Media.Imaging.BitmapCacheOption\n  - System.Windows.Media.Imaging.BitmapCreateOptions\n  - System.Windows.Media.Imaging.PngInterlaceOption\n  - System.Windows.Media.Imaging.Rotation\n  - System.Windows.Media.Imaging.TiffCompressOption\n  - System.Windows.Media.TextFormatting.InvertAxes\n  - System.Windows.Media.TextFormatting.TextCollapsingStyle\n  - System.Windows.Media.TextFormatting.TextTabAlignment\n  - System.Windows.Navigation.JournalEntryPosition\n  - System.Windows.Navigation.JournalOwnership\n  - System.Windows.Navigation.NavigationMode\n  - System.Windows.Navigation.NavigationUIVisibility\n  - System.Windows.Shell.JumpItemRejectionReason\n  - System.Windows.Shell.NonClientFrameEdges\n  - System.Windows.Shell.ResizeGripDirection\n  - System.Windows.Shell.TaskbarItemProgressState\n  - System.Windows.Threading.DispatcherOperationStatus\n  - System.Windows.Threading.DispatcherPriority\n  - System.Windows.Xps.XpsDocumentNotificationLevel\n  - System.Windows.Xps.Packaging.PackageInterleavingOrder\n  - System.Windows.Xps.Packaging.PackagingAction\n  - System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions\n  - System.Windows.Xps.Packaging.XpsImageType\n  - System.Windows.Xps.Packaging.XpsResourceSharing\n  - System.Windows.Xps.Serialization.FontSubsetterCommitPolicies\n  - System.Windows.Xps.Serialization.PrintTicketLevel\n  - System.Windows.Xps.Serialization.SerializationState\n  - System.Windows.Xps.Serialization.XpsWritingProgressChangeLevel\n  - System.Workflow.Activities.ExecutionType\n  - System.Workflow.Activities.Rules.RuleAttributeTarget\n  - System.Workflow.Activities.Rules.RuleChainingBehavior\n  - System.Workflow.Activities.Rules.RuleReevaluationBehavior\n  - System.Workflow.ComponentModel.ActivityCollectionChangeAction\n  - System.Workflow.ComponentModel.ActivityExecutionResult\n  - System.Workflow.ComponentModel.ActivityExecutionStatus\n  - System.Workflow.ComponentModel.DependencyPropertyOptions\n  - System.Workflow.ComponentModel.Compiler.AccessTypes\n  - System.Workflow.ComponentModel.Compiler.ValidationOption\n  - System.Workflow.ComponentModel.Design.AmbientProperty\n  - System.Workflow.ComponentModel.Design.DesignerContentAlignment\n  - System.Workflow.ComponentModel.Design.DesignerEdges\n  - System.Workflow.ComponentModel.Design.DesignerGeometry\n  - System.Workflow.ComponentModel.Design.DesignerNavigationDirection\n  - System.Workflow.ComponentModel.Design.DesignerSize\n  - System.Workflow.ComponentModel.Design.DesignerVerbGroup\n  - System.Workflow.ComponentModel.Design.HitTestLocations\n  - System.Workflow.ComponentModel.Design.LineAnchor\n  - System.Workflow.ComponentModel.Design.TextQuality\n  - System.Workflow.ComponentModel.Design.ThemeType\n  - System.Workflow.Runtime.WorkflowStatus\n  - System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState\n  - System.Workflow.Runtime.Tracking.ComparisonOperator\n  - System.Workflow.Runtime.Tracking.TrackingWorkflowEvent\n  - System.Xaml.XamlNodeType\n  - System.Xaml.Schema.AllowedMemberLocations\n  - System.Xaml.Schema.ShouldSerializeResult\n  - System.Xaml.Schema.XamlCollectionKind\n  - System.Xml.ConformanceLevel\n  - System.Xml.DtdProcessing\n  - System.Xml.EntityHandling\n  - System.Xml.Formatting\n  - System.Xml.NamespaceHandling\n  - System.Xml.NewLineHandling\n  - System.Xml.ReadState\n  - System.Xml.ValidationType\n  - System.Xml.WhitespaceHandling\n  - System.Xml.WriteState\n  - System.Xml.XmlDateTimeSerializationMode\n  - System.Xml.XmlDictionaryReaderQuotaTypes\n  - System.Xml.XmlNamespaceScope\n  - System.Xml.XmlNodeChangedAction\n  - System.Xml.XmlNodeOrder\n  - System.Xml.XmlNodeType\n  - System.Xml.XmlOutputMethod\n  - System.Xml.XmlSpace\n  - System.Xml.XmlTokenizedType\n  - System.Xml.Linq.LoadOptions\n  - System.Xml.Linq.ReaderOptions\n  - System.Xml.Linq.SaveOptions\n  - System.Xml.Linq.XObjectChange\n  - System.Xml.Resolvers.XmlKnownDtds\n  - System.Xml.Schema.XmlSchemaContentProcessing\n  - System.Xml.Schema.XmlSchemaContentType\n  - System.Xml.Schema.XmlSchemaDatatypeVariety\n  - System.Xml.Schema.XmlSchemaDerivationMethod\n  - System.Xml.Schema.XmlSchemaForm\n  - System.Xml.Schema.XmlSchemaInference.InferenceOption\n  - System.Xml.Schema.XmlSchemaUse\n  - System.Xml.Schema.XmlSchemaValidationFlags\n  - System.Xml.Schema.XmlSchemaValidity\n  - System.Xml.Schema.XmlSeverityType\n  - System.Xml.Schema.XmlTypeCode\n  - System.Xml.Serialization.CodeGenerationOptions\n  - System.Xml.Serialization.XmlMappingAccess\n  - System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode\n  - System.Xml.XPath.XmlCaseOrder\n  - System.Xml.XPath.XmlDataType\n  - System.Xml.XPath.XmlSortOrder\n  - System.Xml.XPath.XPathNamespaceScope\n  - System.Xml.XPath.XPathNodeType\n  - System.Xml.XPath.XPathResultType\n  - System.Xml.Xsl.Runtime.IteratorResult\n  - System.Xml.Xsl.Runtime.SetIteratorResult\n  implements:\n  - System.IComparable\n  - System.IConvertible\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.#ctor\n  commentId: M:System.Enum.#ctor\n  id: '#ctor'\n  parent: System.Enum\n  langs:\n  - csharp\n  name: Enum()\n  nameWithType: Enum.Enum()\n  fullName: Enum.Enum()\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Enum\"></xref> class.\n  syntax:\n    content: protected Enum ();\n    parameters: []\n  overload: System.Enum.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.CompareTo(System.Object)\n  commentId: M:System.Enum.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: Enum.CompareTo(Object)\n  fullName: Enum.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares this instance to a specified object and returns an indication of their relative values.\n  remarks: ''\n  example:\n  - \"The following example illustrates the use of `CompareTo` in the context of `Enum`.  \\n  \\n [!code-cpp[enumcompareto#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumcompareto/CPP/EnumCompareTo.cpp#1)]\\n [!code-csharp[enumcompareto#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumcompareto/CS/EnumCompareTo.cs#1)]\\n [!code-vb[enumcompareto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumcompareto/VB/EnumCompareTo.vb#1)]\"\n  syntax:\n    content: public int CompareTo (object target);\n    parameters:\n    - id: target\n      type: System.Object\n      description: An object to compare, or `null`.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of this instance and <code>target</code>.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> The value of this instance is less than the value of <code>target</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> The value of this instance is equal to the value of <code>target</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> The value of this instance is greater than the value of <code>target</code>.  \\n  \\n -or-  \\n  \\n <code>target</code> is `null`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Enum.CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> and this instance are not the same type.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This instance is not type <xref href=\"System.SByte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.UInt32\"></xref>, or <xref href=\"System.UInt64\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.Equals(System.Object)\n  commentId: M:System.Enum.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Enum.Equals(Object)\n  fullName: Enum.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance is equal to a specified object.\n  remarks: The <xref:System.Enum.Equals%28System.Object%29?displayProperty=fullName> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=fullName> to define how enumeration members are evaluated for equality.\n  example:\n  - \"The following example illustrates the use of the <xref:System.Enum.Equals%2A> method.  \\n  \\n [!code-cpp[enumequals#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumequals/CPP/EnumEquals.cpp#1)]\\n [!code-csharp[enumequals#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumequals/CS/EnumEquals.cs#1)]\\n [!code-vb[enumequals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumequals/VB/EnumEquals.vb#1)]  \\n  \\n The following example defines two enumeration types, `SledDog` and `WorkDog`. The `SledDog` enumeration has two members, `SledDog.AlaskanMalamute` and `SledDog.Malamute`, that have the same underlying value. The call to the <xref:System.Enum.Equals%2A> method indicates that these values are equal because their underlying values are the same. The `SledDog.Malamute` and `WorkDog.Newfoundland` members have the same underlying value, although they represent different enumeration types. A call to the <xref:System.Enum.Equals%2A> method indicates that these values are not equal.  \\n  \\n [!code-csharp[System.Enum.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.equals/cs/enumequals.cs#1)]\\n [!code-vb[System.Enum.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.equals/vb/enumequals.vb#1)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with this instance, or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, `false`.'\n  overload: System.Enum.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.Format(System.Type,System.Object,System.String)\n  commentId: M:System.Enum.Format(System.Type,System.Object,System.String)\n  id: Format(System.Type,System.Object,System.String)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: Format(Type, Object, String)\n  nameWithType: Enum.Format(Type, Object, String)\n  fullName: Enum.Format(Type, Object, String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.\n  remarks: \"The following table shows the valid values for the `format` parameter.  \\n  \\n|Format|Description|  \\n|------------|-----------------|  \\n|\\\"G\\\" or \\\"g\\\"|If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.<br /><br /> For example, suppose the only enumerated constant is named Red, and its value is 1. If `value` is specified as 1, this format returns \\\"Red\\\". However, if `value` is specified as 2, this format returns \\\"2\\\".<br /><br /> -or-<br /><br /> If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.<br /><br /> If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned. `value` is searched for flags, going from the flag with the largest value to the smallest value. For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list. The value of that flag is then excluded from further consideration, and the search continues for the next flag.<br /><br /> If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.|  \\n|\\\"X\\\" or \\\"x\\\"|Represents `value` in hexadecimal format without a leading \\\"0x\\\".|  \\n|\\\"D\\\" or \\\"d\\\"|Represents `value` in decimal form.|  \\n|\\\"F\\\" or \\\"f\\\"|Behaves identically to \\\"G\\\" or \\\"g\\\", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.|\"\n  example:\n  - \"The following example illustrates the use of `Format` in the context of `Enum`.  \\n  \\n [!code-cpp[enumformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumformat/CPP/EnumFormat.cpp#1)]\\n [!code-csharp[enumformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumformat/CS/EnumFormat.cs#1)]\\n [!code-vb[enumformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumformat/VB/EnumFormat.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static string Format (Type enumType, object value, string format);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type of the value to convert.\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: format\n      type: System.String\n      description: The output format to use.\n    return:\n      type: System.String\n      description: A string representation of <code>value</code>.\n  overload: System.Enum.Format*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>enumType</code>, <code>value</code>, or <code>format</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>enumType</code> parameter is not an <xref href=\\\"System.Enum\\\"></xref> type.  \\n  \\n -or-  \\n  \\n The <code>value</code> is from an enumeration that differs in type from <code>enumType</code>.  \\n  \\n -or-  \\n  \\n The type of <code>value</code> is not an underlying type of <code>enumType</code>.\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: The <code>format</code> parameter contains an invalid value.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>format</code> equals \"X\", but the enumeration type is unknown.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.GetHashCode\n  commentId: M:System.Enum.GetHashCode\n  id: GetHashCode\n  parent: System.Enum\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Enum.GetHashCode()\n  fullName: Enum.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for the value of this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Enum.GetHashCode*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.GetName(System.Type,System.Object)\n  commentId: M:System.Enum.GetName(System.Type,System.Object)\n  id: GetName(System.Type,System.Object)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: GetName(Type, Object)\n  nameWithType: Enum.GetName(Type, Object)\n  fullName: Enum.GetName(Type, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Retrieves the name of the constant in the specified enumeration that has the specified value.\n  remarks: If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members. However, it does not guarantee that it will always return the name of the same enumeration member. As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.\n  example:\n  - \"The following example illustrates the use of `GetName`.  \\n  \\n [!code-cpp[enumgetname#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetname/CPP/EnumGetName.cpp#1)]\\n [!code-csharp[enumgetname#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetname/CS/EnumGetName.cs#1)]\\n [!code-vb[enumgetname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetname/VB/EnumGetName.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static string GetName (Type enumType, object value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: An enumeration type.\n    - id: value\n      type: System.Object\n      description: The value of a particular enumerated constant in terms of its underlying type.\n    return:\n      type: System.String\n      description: A string containing the name of the enumerated constant in <code>enumType</code> whose value is <code>value</code>; or `null` if no such constant is found.\n  overload: System.Enum.GetName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> or <code>value</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>enumType</code> is not an <xref href=\\\"System.Enum\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>value</code> is neither of type <code>enumType</code> nor does it have the same underlying type as <code>enumType</code>.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.GetNames(System.Type)\n  commentId: M:System.Enum.GetNames(System.Type)\n  id: GetNames(System.Type)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: GetNames(Type)\n  nameWithType: Enum.GetNames(Type)\n  fullName: Enum.GetNames(Type)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Retrieves an array of the names of the constants in a specified enumeration.\n  remarks: \"The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude). The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.  \\n  \\n [!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]\\n [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]  \\n  \\n If there are enumerated constants with same value, the order of their corresponding names is unspecified.\"\n  example:\n  - \"The following example illustrates the use of the <xref:System.Enum.GetNames%2A> method.  \\n  \\n [!code-cpp[enumgetnames#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetnames/CPP/EnumGetNames.cpp#1)]\\n [!code-csharp[enumgetnames#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetnames/CS/EnumGetNames.cs#1)]\\n [!code-vb[enumgetnames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetnames/VB/EnumGetNames.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static string[] GetNames (Type enumType);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: An enumeration type.\n    return:\n      type: System.String[]\n      description: A string array of the names of the constants in <code>enumType</code>.\n  overload: System.Enum.GetNames*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> parameter is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.GetTypeCode\n  commentId: M:System.Enum.GetTypeCode\n  id: GetTypeCode\n  parent: System.Enum\n  langs:\n  - csharp\n  name: GetTypeCode()\n  nameWithType: Enum.GetTypeCode()\n  fullName: Enum.GetTypeCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the type code of the underlying type of this enumeration member.\n  syntax:\n    content: public TypeCode GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: The type code of the underlying type of this instance.\n  overload: System.Enum.GetTypeCode*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The enumeration type is unknown.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.GetUnderlyingType(System.Type)\n  commentId: M:System.Enum.GetUnderlyingType(System.Type)\n  id: GetUnderlyingType(System.Type)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: GetUnderlyingType(Type)\n  nameWithType: Enum.GetUnderlyingType(Type)\n  fullName: Enum.GetUnderlyingType(Type)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the underlying type of the specified enumeration.\n  remarks: The <xref:System.Enum> structure enables values to be represented as named constants. The data type of the enumeration's values is known as its underlying type. For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek?displayProperty=fullName>, <xref:System.DayOfWeek?displayProperty=fullName>, and so on), is <xref:System.Int32>.\n  example:\n  - \"The following example calls the <xref:System.Enum.GetUnderlyingType%2A> method to display the underlying type of some enumeration members.  \\n  \\n [!code-csharp[System.Enum.GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getunderlyingtype/cs/getunderlyingtype1.cs#1)]\\n [!code-vb[System.Enum.GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getunderlyingtype/vb/getunderlyingtype1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static Type GetUnderlyingType (Type enumType);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration whose underlying type will be retrieved.\n    return:\n      type: System.Type\n      description: The underlying type of <code>enumType</code>.\n  overload: System.Enum.GetUnderlyingType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.GetValues(System.Type)\n  commentId: M:System.Enum.GetValues(System.Type)\n  id: GetValues(System.Type)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: GetValues(Type)\n  nameWithType: Enum.GetValues(Type)\n  fullName: Enum.GetValues(Type)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Retrieves an array of the values of the constants in a specified enumeration.\n  remarks: \"The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude). The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.  \\n  \\n [!code-csharp[System.Enum.GetValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)]\\n [!code-vb[System.Enum.GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)]  \\n  \\n The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration. If multiple members have the same value, the returned array includes duplicate values. In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values. To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.  \\n  \\n The<xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context. Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=fullName> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=fullName> method on each element of the array. The following example illustrates this technique. It requires that you define the following enumeration in an assembly named Enumerations.dll:  \\n  \\n [!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]\\n [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]  \\n  \\n The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console.  \\n  \\n [!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]\\n [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]\"\n  example:\n  - \"The following example illustrates the use of <xref:System.Enum.GetValues%2A>.  \\n  \\n [!code-cpp[enumgetvalues#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetvalues/CPP/EnumGetValues.cpp#1)]\\n [!code-csharp[enumgetvalues#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetvalues/CS/EnumGetValues.cs#1)]\\n [!code-vb[enumgetvalues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetvalues/VB/EnumGetValues.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static Array GetValues (Type enumType);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: An enumeration type.\n    return:\n      type: System.Array\n      description: An array that contains the values of the constants in <code>enumType</code>.\n  overload: System.Enum.GetValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The method is invoked by reflection in a reflection-only context,  \\n  \\n -or-  \\n  \\n <code>enumType</code> is a type from an assembly loaded in a reflection-only context.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.HasFlag(System.Enum)\n  commentId: M:System.Enum.HasFlag(System.Enum)\n  id: HasFlag(System.Enum)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: HasFlag(Enum)\n  nameWithType: Enum.HasFlag(Enum)\n  fullName: Enum.HasFlag(Enum)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one or more bit fields are set in the current instance.\n  remarks: \"The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.  \\n  \\n```  \\nthisInstance And flag = flag   \\n```  \\n  \\n If the underlying value of `flag` is zero, the method returns `true`. If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.  \\n  \\n [!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]\\n [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]  \\n  \\n The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set. For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.\"\n  example:\n  - \"The following example defines an `ItemsOrdered` enumeration that reflects categories of items that a customer can order in a restaurant. The example tests whether the customer has ordered both an entrée and a beverage.  \\n  \\n [!code-csharp[System.Enum.HasFlag#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag1.cs#2)]\\n [!code-vb[System.Enum.HasFlag#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag1.vb#2)]\"\n  syntax:\n    content: public bool HasFlag (Enum flag);\n    parameters:\n    - id: flag\n      type: System.Enum\n      description: An enumeration value.\n    return:\n      type: System.Boolean\n      description: '`true` if the bit field or bit fields that are set in <code>flag</code> are also set in the current instance; otherwise, `false`.'\n  overload: System.Enum.HasFlag*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>flag</code> is a different type than the current instance.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.IsDefined(System.Type,System.Object)\n  commentId: M:System.Enum.IsDefined(System.Type,System.Object)\n  id: IsDefined(System.Type,System.Object)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IsDefined(Type, Object)\n  nameWithType: Enum.IsDefined(Type, Object)\n  fullName: Enum.IsDefined(Type, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns an indication whether a constant with a specified value exists in a specified enumeration.\n  remarks: \"The `value` parameter can be any of the following:  \\n  \\n-   Any member of type `enumType`.  \\n  \\n-   A variable whose value is an enumeration member of type `enumType`.  \\n  \\n-   The string representation of the name of an enumeration member. The characters in the string must have the same case as the enumeration member name.  \\n  \\n-   A value of the underlying type of `enumType`.  \\n  \\n If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`. In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration. To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.\"\n  example:\n  - \"The following example defines an enumeration named `PetType` that consists of individual bit fields. It then calls the <xref:System.Enum.IsDefined%2A> method with possible underlying enumeration values, string names, and composite values that result from setting multiple bit fields.  \\n  \\n [!code-csharp[System.Enum.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined1.cs#1)]\\n [!code-vb[System.Enum.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/IsDefined1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static bool IsDefined (Type enumType, object value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: An enumeration type.\n    - id: value\n      type: System.Object\n      description: The value or name of a constant in <code>enumType</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if a constant in <code>enumType</code> has a value equal to <code>value</code>; otherwise, `false`.'\n  overload: System.Enum.IsDefined*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> or <code>value</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>enumType</code> is not an `Enum`.  \\n  \\n -or-  \\n  \\n The type of <code>value</code> is an enumeration, but it is not an enumeration of type <code>enumType</code>.  \\n  \\n -or-  \\n  \\n The type of <code>value</code> is not an underlying type of <code>enumType</code>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>value</code> is not type <xref href=\"System.SByte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.UInt32\"></xref>, or <xref href=\"System.UInt64\"></xref>, or <xref href=\"System.String\"></xref>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.Parse(System.Type,System.String)\n  commentId: M:System.Enum.Parse(System.Type,System.String)\n  id: Parse(System.Type,System.String)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: Parse(Type, String)\n  nameWithType: Enum.Parse(Type, String)\n  fullName: Enum.Parse(Type, String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.\n  remarks: \"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,). One or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.  \\n  \\n If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>. If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`. The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.  \\n  \\n [!code-csharp[System.Enum.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)]\\n [!code-vb[System.Enum.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)]  \\n  \\n This operation is case-sensitive.\"\n  example:\n  - \"The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method. It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.  \\n  \\n [!code-cpp[enumparse#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumparse/CPP/EnumParse.cpp#1)]\\n [!code-csharp[enumparse#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumparse/CS/EnumParse.cs#1)]\\n [!code-vb[enumparse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumparse/VB/EnumParse.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object Parse (Type enumType, string value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: An enumeration type.\n    - id: value\n      type: System.String\n      description: A string containing the name or value to convert.\n    return:\n      type: System.Object\n      description: An object of type <code>enumType</code> whose value is represented by <code>value</code>.\n  overload: System.Enum.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> or <code>value</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>enumType</code> is not an <xref href=\\\"System.Enum\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>value</code> is either an empty string or only contains white space.  \\n  \\n -or-  \\n  \\n <code>value</code> is a name, but not one of the named constants defined for the enumeration.\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>value</code> is outside the range of the underlying type of <code>enumType</code>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.Parse(System.Type,System.String,System.Boolean)\n  commentId: M:System.Enum.Parse(System.Type,System.String,System.Boolean)\n  id: Parse(System.Type,System.String,System.Boolean)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: Parse(Type, String, Boolean)\n  nameWithType: Enum.Parse(Type, String, Boolean)\n  fullName: Enum.Parse(Type, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-insensitive.\n  remarks: \"The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,). One or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.  \\n  \\n If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>. If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`. The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.  \\n  \\n [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]\\n [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  \\n  \\n The `ignoreCase` parameter specifies whether this operation is case-sensitive.\"\n  example:\n  - \"The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method. It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.  \\n  \\n [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]\\n [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object Parse (Type enumType, string value, bool ignoreCase);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: An enumeration type.\n    - id: value\n      type: System.String\n      description: A string containing the name or value to convert.\n    - id: ignoreCase\n      type: System.Boolean\n      description: '`true` to ignore case; `false` to regard case.'\n    return:\n      type: System.Object\n      description: An object of type <code>enumType</code> whose value is represented by <code>value</code>.\n  overload: System.Enum.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> or <code>value</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>enumType</code> is not an <xref href=\\\"System.Enum\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>value</code> is either an empty string (\\\"\\\") or only contains white space.  \\n  \\n -or-  \\n  \\n <code>value</code> is a name, but not one of the named constants defined for the enumeration.\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>value</code> is outside the range of the underlying type of <code>enumType</code>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.Parse``1(System.String,System.Boolean)\n  commentId: M:System.Enum.Parse``1(System.String,System.Boolean)\n  id: Parse``1(System.String,System.Boolean)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: Parse<TEnum>(String, Boolean)\n  nameWithType: Enum.Parse<TEnum>(String, Boolean)\n  fullName: Enum.Parse<TEnum>(String, Boolean)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: 'public static TEnum Parse<TEnum> (string value, bool ignoreCase) where TEnum : struct;'\n    parameters:\n    - id: value\n      type: System.String\n      description: ''\n    - id: ignoreCase\n      type: System.Boolean\n      description: ''\n    typeParameters:\n    - id: TEnum\n      description: ''\n    return:\n      type: TEnum\n      description: ''\n  overload: System.Enum.Parse``1*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.Parse``1(System.String)\n  commentId: M:System.Enum.Parse``1(System.String)\n  id: Parse``1(System.String)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: Parse<TEnum>(String)\n  nameWithType: Enum.Parse<TEnum>(String)\n  fullName: Enum.Parse<TEnum>(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: 'public static TEnum Parse<TEnum> (string value) where TEnum : struct;'\n    parameters:\n    - id: value\n      type: System.String\n      description: ''\n    typeParameters:\n    - id: TEnum\n      description: ''\n    return:\n      type: TEnum\n      description: ''\n  overload: System.Enum.Parse``1*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.ToObject(System.Type,System.Int16)\n  commentId: M:System.Enum.ToObject(System.Type,System.Int16)\n  id: ToObject(System.Type,System.Int16)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, Int16)\n  nameWithType: Enum.ToObject(Type, Int16)\n  fullName: Enum.ToObject(Type, Int16)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 16-bit signed integer to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, short value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.Int16\n      description: The value to convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An instance of the enumeration set to <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToObject(System.Type,System.UInt64)\n  commentId: M:System.Enum.ToObject(System.Type,System.UInt64)\n  id: ToObject(System.Type,System.UInt64)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, UInt64)\n  nameWithType: Enum.ToObject(Type, UInt64)\n  fullName: Enum.ToObject(Type, UInt64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 64-bit unsigned integer value to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, ulong value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.UInt64\n      description: The value to convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An instance of the enumeration set to <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToObject(System.Type,System.UInt32)\n  commentId: M:System.Enum.ToObject(System.Type,System.UInt32)\n  id: ToObject(System.Type,System.UInt32)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, UInt32)\n  nameWithType: Enum.ToObject(Type, UInt32)\n  fullName: Enum.ToObject(Type, UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 32-bit unsigned integer value to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, uint value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.UInt32\n      description: The value to convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An instance of the enumeration set to <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToObject(System.Type,System.UInt16)\n  commentId: M:System.Enum.ToObject(System.Type,System.UInt16)\n  id: ToObject(System.Type,System.UInt16)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, UInt16)\n  nameWithType: Enum.ToObject(Type, UInt16)\n  fullName: Enum.ToObject(Type, UInt16)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 16-bit unsigned integer value to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, ushort value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.UInt16\n      description: The value to convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An instance of the enumeration set to <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToObject(System.Type,System.SByte)\n  commentId: M:System.Enum.ToObject(System.Type,System.SByte)\n  id: ToObject(System.Type,System.SByte)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, SByte)\n  nameWithType: Enum.ToObject(Type, SByte)\n  fullName: Enum.ToObject(Type, SByte)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 8-bit signed integer value to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, sbyte value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.SByte\n      description: The value to convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An instance of the enumeration set to <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToObject(System.Type,System.Object)\n  commentId: M:System.Enum.ToObject(System.Type,System.Object)\n  id: ToObject(System.Type,System.Object)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, Object)\n  nameWithType: Enum.ToObject(Type, Object)\n  fullName: Enum.ToObject(Type, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified object with an integer value to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, object value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.Object\n      description: The value convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An enumeration object whose value is <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> or <code>value</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>enumType</code> is not an <xref href=\\\"System.Enum\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>value</code> is not type <xref href=\\\"System.SByte\\\"></xref>, <xref href=\\\"System.Int16\\\"></xref>, <xref href=\\\"System.Int32\\\"></xref>, <xref href=\\\"System.Int64\\\"></xref>, <xref href=\\\"System.Byte\\\"></xref>, <xref href=\\\"System.UInt16\\\"></xref>, <xref href=\\\"System.UInt32\\\"></xref>, or <xref href=\\\"System.UInt64\\\"></xref>.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToObject(System.Type,System.Int64)\n  commentId: M:System.Enum.ToObject(System.Type,System.Int64)\n  id: ToObject(System.Type,System.Int64)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, Int64)\n  nameWithType: Enum.ToObject(Type, Int64)\n  fullName: Enum.ToObject(Type, Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 64-bit signed integer to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, long value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.Int64\n      description: The value to convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An instance of the enumeration set to <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToObject(System.Type,System.Int32)\n  commentId: M:System.Enum.ToObject(System.Type,System.Int32)\n  id: ToObject(System.Type,System.Int32)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, Int32)\n  nameWithType: Enum.ToObject(Type, Int32)\n  fullName: Enum.ToObject(Type, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 32-bit signed integer to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, int value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.Int32\n      description: The value to convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An instance of the enumeration set to <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToObject(System.Type,System.Byte)\n  commentId: M:System.Enum.ToObject(System.Type,System.Byte)\n  id: ToObject(System.Type,System.Byte)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToObject(Type, Byte)\n  nameWithType: Enum.ToObject(Type, Byte)\n  fullName: Enum.ToObject(Type, Byte)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 8-bit unsigned integer to an enumeration member.\n  remarks: \"The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`. Note that the conversion succeeds even if value is outside the bounds of `enumType` members. To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.  \\n  \\n This conversion method returns a value of type <xref:System.Object>. You can then cast it or convert it to an object of type `enumType`.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static object ToObject (Type enumType, byte value);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: The enumeration type to return.\n    - id: value\n      type: System.Byte\n      description: The value to convert to an enumeration member.\n    return:\n      type: System.Object\n      description: An instance of the enumeration set to <code>value</code>.\n  overload: System.Enum.ToObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>enumType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enumType</code> is not an <xref href=\"System.Enum\"></xref>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Enum.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToString(String, IFormatProvider)\n  nameWithType: Enum.ToString(String, IFormatProvider)\n  fullName: Enum.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: This method overload is obsolete; use <xref href=\"System.Enum.ToString(System.String)\"></xref>.\n  remarks: \"The `format` parameter can contain the \\\"G\\\" or \\\"g\\\", \\\"D\\\" or \\\"d\\\", \\\"X\\\" or \\\"x\\\", and \\\"F\\\" or \\\"f\\\" format strings (the format string is not case-sensitive). If `format` is `null` or an empty string (\\\"\\\"), the general format specifier (\\\"G\\\") is used. For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \\n  \\n Specify only `format`; the `provider` parameter is obsolete.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The provider argument is not used. Please use ToString(String).\")]\n\n      public string ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: A format specification.\n    - id: provider\n      type: System.IFormatProvider\n      description: (Obsolete.)\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>format</code>.\n  overload: System.Enum.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> does not contain a valid format specification.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>format</code> equals \"X\", but the enumeration type is unknown.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToString(System.String)\n  commentId: M:System.Enum.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToString(String)\n  nameWithType: Enum.ToString(String)\n  fullName: Enum.ToString(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to its equivalent string representation using the specified format.\n  remarks: The `format` parameter can contain the \"G\" or \"g\", \"D\" or \"d\", \"X\" or \"x\", and \"F\" or \"f\" format strings (the format string is not case-sensitive). If `format` is `null` or an empty string (\"\"), the general format specifier (\"G\") is used. For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).\n  example:\n  - \"The following example demonstrates how to convert an enumerated value to a string.  \\n  \\n [!code-cpp[enum.tostring#1](~/samples/snippets/cpp/VS_Snippets_CLR/enum.tostring/CPP/tostr.cpp#1)]\\n [!code-csharp[enum.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/enum.tostring/CS/tostr.cs#1)]\\n [!code-vb[enum.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enum.tostring/VB/tostr.vb#1)]\"\n  syntax:\n    content: public string ToString (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: A format string.\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>format</code>.\n  overload: System.Enum.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> contains an invalid specification.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>format</code> equals \"X\", but the enumeration type is unknown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToString(System.IFormatProvider)\n  commentId: M:System.Enum.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Enum.ToString(IFormatProvider)\n  fullName: Enum.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: This method overload is obsolete; use <xref href=\"System.Enum.ToString\"></xref>.\n  syntax:\n    content: >-\n      [System.Obsolete(\"The provider argument is not used. Please use ToString().\")]\n\n      public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: (obsolete)\n    return:\n      type: System.String\n      description: The string representation of the value of this instance.\n  overload: System.Enum.ToString*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.ToString\n  commentId: M:System.Enum.ToString\n  id: ToString\n  parent: System.Enum\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Enum.ToString()\n  fullName: Enum.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to its equivalent string representation.\n  remarks: The return value is formatted with the general format specifier (\"G\"). That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant. If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants. Otherwise, the return value is the string representation of the numeric value of this instance. For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md). For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).\n  example:\n  - \"The following example demonstrates converting an enumerated value to a string.  \\n  \\n [!code-cpp[Classic Enum.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Enum.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CS/source.cs#1)]\\n [!code-vb[Classic Enum.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the value of this instance.\n  overload: System.Enum.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)\n  commentId: M:System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)\n  id: TryParse(System.Type,System.String,System.Boolean,System.Object@)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: TryParse(Type, String, Boolean, Object)\n  nameWithType: Enum.TryParse(Type, String, Boolean, Object)\n  fullName: Enum.TryParse(Type, String, Boolean, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: public static bool TryParse (Type enumType, string value, bool ignoreCase, out object result);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: ''\n    - id: value\n      type: System.String\n      description: ''\n    - id: ignoreCase\n      type: System.Boolean\n      description: ''\n    - id: result\n      type: System.Object\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Enum.TryParse*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.TryParse(System.Type,System.String,System.Object@)\n  commentId: M:System.Enum.TryParse(System.Type,System.String,System.Object@)\n  id: TryParse(System.Type,System.String,System.Object@)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: TryParse(Type, String, Object)\n  nameWithType: Enum.TryParse(Type, String, Object)\n  fullName: Enum.TryParse(Type, String, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: public static bool TryParse (Type enumType, string value, out object result);\n    parameters:\n    - id: enumType\n      type: System.Type\n      description: ''\n    - id: value\n      type: System.String\n      description: ''\n    - id: result\n      type: System.Object\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Enum.TryParse*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.TryParse``1(System.String,System.Boolean,``0@)\n  commentId: M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)\n  id: TryParse``1(System.String,System.Boolean,``0@)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: TryParse<TEnum>(String, Boolean, TEnum)\n  nameWithType: Enum.TryParse<TEnum>(String, Boolean, TEnum)\n  fullName: Enum.TryParse<TEnum>(String, Boolean, TEnum)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.\n  remarks: \"<xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails. It eliminates the need for exception handling when parsing the string representation of an enumeration value.  \\n  \\n The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,). If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation. If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter. If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.  \\n  \\n If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`. If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.\"\n  example:\n  - \"The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration. The <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method uses case-insensitive comparison when trying to convert the string representations of named constants to their equivalent enumeration values.  \\n  \\n [!code-csharp[System.Enum.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse2.cs#2)]\\n [!code-vb[System.Enum.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse2.vb#2)]\"\n  syntax:\n    content: 'public static bool TryParse<TEnum> (string value, bool ignoreCase, out TEnum result) where TEnum : struct;'\n    parameters:\n    - id: value\n      type: System.String\n      description: The string representation of the enumeration name or underlying value to convert.\n    - id: ignoreCase\n      type: System.Boolean\n      description: '`true` to ignore case; `false` to consider case.'\n    - id: result\n      type: TEnum\n      description: When this method returns, <code>result</code> contains an object of type <code>TEnum</code> whose value is represented by <code>value</code> if the parse operation succeeds. If the parse operation fails, <code>result</code> contains the default value of the underlying type of <code>TEnum</code>. Note that this value need not be a member of the <code>TEnum</code> enumeration. This parameter is passed uninitialized.\n    typeParameters:\n    - id: TEnum\n      description: The enumeration type to which to convert <code>value</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>value</code> parameter was converted successfully; otherwise, `false`.'\n  overload: System.Enum.TryParse``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>TEnum</code> is not an enumeration type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.TryParse``1(System.String,``0@)\n  commentId: M:System.Enum.TryParse``1(System.String,``0@)\n  id: TryParse``1(System.String,``0@)\n  parent: System.Enum\n  langs:\n  - csharp\n  name: TryParse<TEnum>(String, TEnum)\n  nameWithType: Enum.TryParse<TEnum>(String, TEnum)\n  fullName: Enum.TryParse<TEnum>(String, TEnum)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. The return value indicates whether the conversion succeeded.\n  remarks: \"<xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails. It eliminates the need for exception handling when parsing the string representation of an enumeration value.  \\n  \\n The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,). If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`. If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation. If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.  \\n  \\n If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`. If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type. If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.\"\n  example:\n  - \"The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.  \\n  \\n [!code-csharp[System.Enum.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse1.cs#1)]\\n [!code-vb[System.Enum.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse1.vb#1)]\"\n  syntax:\n    content: 'public static bool TryParse<TEnum> (string value, out TEnum result) where TEnum : struct;'\n    parameters:\n    - id: value\n      type: System.String\n      description: The string representation of the enumeration name or underlying value to convert.\n    - id: result\n      type: TEnum\n      description: When this method returns, <code>result</code> contains an object of type <code>TEnum</code> whose value is represented by <code>value</code> if the parse operation succeeds. If the parse operation fails, <code>result</code> contains the default value of the underlying type of <code>TEnum</code>. Note that this value need not be a member of the <code>TEnum</code> enumeration. This parameter is passed uninitialized.\n    typeParameters:\n    - id: TEnum\n      description: The enumeration type to which to convert <code>value</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>value</code> parameter was converted successfully; otherwise, `false`.'\n  overload: System.Enum.TryParse``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>TEnum</code> is not an enumeration type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#GetTypeCode\n  commentId: M:System.Enum.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.GetTypeCode()\n  nameWithType: Enum.IConvertible.GetTypeCode()\n  fullName: Enum.IConvertible.GetTypeCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: ''\n  overload: System.Enum.System#IConvertible#GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Enum.IConvertible.ToBoolean(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a Boolean value based on the underlying type.\n  remarks: Currently not implemented. Always throws an exception.\n  syntax:\n    content: bool IConvertible.ToBoolean (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Boolean\n      description: This member always throws an exception.\n  overload: System.Enum.System#IConvertible#ToBoolean*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToByte(IFormatProvider)\n  fullName: Enum.IConvertible.ToByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to an 8-bit unsigned integer based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: byte IConvertible.ToByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Byte\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToChar(IFormatProvider)\n  fullName: Enum.IConvertible.ToChar(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a Unicode character based on the underlying type.\n  remarks: Currently not implemented. Always throws an exception.\n  syntax:\n    content: char IConvertible.ToChar (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Char\n      description: This member always throws an exception.\n  overload: System.Enum.System#IConvertible#ToChar*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Enum.IConvertible.ToDateTime(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a <xref href=\"System.DateTime\"></xref> based on the underlying type.\n  remarks: Currently not implemented. Always throws an exception.\n  syntax:\n    content: DateTime IConvertible.ToDateTime (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.DateTime\n      description: This member always throws an exception.\n  overload: System.Enum.System#IConvertible#ToDateTime*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Enum.IConvertible.ToDecimal(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a <xref href=\"System.Decimal\"></xref> based on the underlying type.\n  remarks: Currently not implemented. Always throws an exception.\n  syntax:\n    content: decimal IConvertible.ToDecimal (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Decimal\n      description: This member always throws an exception.\n  overload: System.Enum.System#IConvertible#ToDecimal*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToDouble(IFormatProvider)\n  fullName: Enum.IConvertible.ToDouble(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a double-precision floating point number based on the underlying type.\n  remarks: Currently not implemented. Always throws an exception.\n  syntax:\n    content: double IConvertible.ToDouble (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Double\n      description: This member always throws an exception.\n  overload: System.Enum.System#IConvertible#ToDouble*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToInt16(IFormatProvider)\n  fullName: Enum.IConvertible.ToInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a 16-bit signed integer based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: short IConvertible.ToInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Int16\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToInt32(IFormatProvider)\n  fullName: Enum.IConvertible.ToInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a 32-bit signed integer based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: int IConvertible.ToInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Int32\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToInt64(IFormatProvider)\n  fullName: Enum.IConvertible.ToInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a 64-bit signed integer based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: long IConvertible.ToInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Int64\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToSByte(IFormatProvider)\n  fullName: Enum.IConvertible.ToSByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to an 8-bit signed integer based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: sbyte IConvertible.ToSByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.SByte\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToSByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToSingle(IFormatProvider)\n  fullName: Enum.IConvertible.ToSingle(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a single-precision floating-point number based on the underlying type.\n  remarks: Currently not implemented. Always throws an exception.\n  syntax:\n    content: float IConvertible.ToSingle (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Single\n      description: This member always throws an exception.\n  overload: System.Enum.System#IConvertible#ToSingle*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToString(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)\n  id: System#IConvertible#ToString(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToString(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToString(IFormatProvider)\n  fullName: Enum.IConvertible.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: >-\n      [System.Obsolete(\"The provider argument is not used. Please use ToString().\")]\n\n      string IConvertible.ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Enum.System#IConvertible#ToString*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Enum.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Enum.IConvertible.ToType(Type, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a specified type based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: object IConvertible.ToType (Type type, IFormatProvider provider);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to convert to.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.Object\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Enum.IConvertible.ToUInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a 16-bit unsigned integer based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: ushort IConvertible.ToUInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.UInt16\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToUInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Enum.IConvertible.ToUInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a 32-bit unsigned integer based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: uint IConvertible.ToUInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.UInt32\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToUInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Enum.IConvertible.ToUInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current value to a 64-bit unsigned integer based on the underlying type.\n  remarks: Uses <xref:System.Convert> to perform the conversion.\n  syntax:\n    content: ulong IConvertible.ToUInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.UInt64\n      description: The converted value.\n  overload: System.Enum.System#IConvertible#ToUInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Enum\n  langs:\n  - csharp\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Enum.IFormattable.ToString(String, IFormatProvider)\n  fullName: Enum.IFormattable.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: >-\n      [System.Obsolete(\"The provider argument is not used. Please use ToString(String).\")]\n\n      string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: ''\n    - id: provider\n      type: System.IFormatProvider\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Enum.System#IFormattable#ToString*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.OverflowException\n  parent: System\n  isExternal: false\n  name: OverflowException\n  nameWithType: OverflowException\n  fullName: System.OverflowException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Enum.#ctor\n  parent: System.Enum\n  isExternal: false\n  name: Enum()\n  nameWithType: Enum.Enum()\n  fullName: Enum.Enum()\n- uid: System.Enum.CompareTo(System.Object)\n  parent: System.Enum\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: Enum.CompareTo(Object)\n  fullName: Enum.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Enum.Equals(System.Object)\n  parent: System.Enum\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Enum.Equals(Object)\n  fullName: Enum.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Enum.Format(System.Type,System.Object,System.String)\n  parent: System.Enum\n  isExternal: false\n  name: Format(Type, Object, String)\n  nameWithType: Enum.Format(Type, Object, String)\n  fullName: Enum.Format(Type, Object, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Enum.GetHashCode\n  parent: System.Enum\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Enum.GetHashCode()\n  fullName: Enum.GetHashCode()\n- uid: System.Enum.GetName(System.Type,System.Object)\n  parent: System.Enum\n  isExternal: false\n  name: GetName(Type, Object)\n  nameWithType: Enum.GetName(Type, Object)\n  fullName: Enum.GetName(Type, Object)\n- uid: System.Enum.GetNames(System.Type)\n  parent: System.Enum\n  isExternal: false\n  name: GetNames(Type)\n  nameWithType: Enum.GetNames(Type)\n  fullName: Enum.GetNames(Type)\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Enum.GetTypeCode\n  parent: System.Enum\n  isExternal: false\n  name: GetTypeCode()\n  nameWithType: Enum.GetTypeCode()\n  fullName: Enum.GetTypeCode()\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: System.Enum.GetUnderlyingType(System.Type)\n  parent: System.Enum\n  isExternal: false\n  name: GetUnderlyingType(Type)\n  nameWithType: Enum.GetUnderlyingType(Type)\n  fullName: Enum.GetUnderlyingType(Type)\n- uid: System.Enum.GetValues(System.Type)\n  parent: System.Enum\n  isExternal: false\n  name: GetValues(Type)\n  nameWithType: Enum.GetValues(Type)\n  fullName: Enum.GetValues(Type)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Enum.HasFlag(System.Enum)\n  parent: System.Enum\n  isExternal: false\n  name: HasFlag(Enum)\n  nameWithType: Enum.HasFlag(Enum)\n  fullName: Enum.HasFlag(Enum)\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Enum.IsDefined(System.Type,System.Object)\n  parent: System.Enum\n  isExternal: false\n  name: IsDefined(Type, Object)\n  nameWithType: Enum.IsDefined(Type, Object)\n  fullName: Enum.IsDefined(Type, Object)\n- uid: System.Enum.Parse(System.Type,System.String)\n  parent: System.Enum\n  isExternal: false\n  name: Parse(Type, String)\n  nameWithType: Enum.Parse(Type, String)\n  fullName: Enum.Parse(Type, String)\n- uid: System.Enum.Parse(System.Type,System.String,System.Boolean)\n  parent: System.Enum\n  isExternal: false\n  name: Parse(Type, String, Boolean)\n  nameWithType: Enum.Parse(Type, String, Boolean)\n  fullName: Enum.Parse(Type, String, Boolean)\n- uid: System.Enum.Parse``1(System.String,System.Boolean)\n  parent: System.Enum\n  isExternal: false\n  name: Parse<TEnum>(String, Boolean)\n  nameWithType: Enum.Parse<TEnum>(String, Boolean)\n  fullName: Enum.Parse<TEnum>(String, Boolean)\n- uid: TEnum\n  isExternal: true\n  name: TEnum\n  nameWithType: TEnum\n  fullName: TEnum\n- uid: System.Enum.Parse``1(System.String)\n  parent: System.Enum\n  isExternal: false\n  name: Parse<TEnum>(String)\n  nameWithType: Enum.Parse<TEnum>(String)\n  fullName: Enum.Parse<TEnum>(String)\n- uid: System.Enum.ToObject(System.Type,System.Int16)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, Int16)\n  nameWithType: Enum.ToObject(Type, Int16)\n  fullName: Enum.ToObject(Type, Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Enum.ToObject(System.Type,System.UInt64)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, UInt64)\n  nameWithType: Enum.ToObject(Type, UInt64)\n  fullName: Enum.ToObject(Type, UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Enum.ToObject(System.Type,System.UInt32)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, UInt32)\n  nameWithType: Enum.ToObject(Type, UInt32)\n  fullName: Enum.ToObject(Type, UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Enum.ToObject(System.Type,System.UInt16)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, UInt16)\n  nameWithType: Enum.ToObject(Type, UInt16)\n  fullName: Enum.ToObject(Type, UInt16)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Enum.ToObject(System.Type,System.SByte)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, SByte)\n  nameWithType: Enum.ToObject(Type, SByte)\n  fullName: Enum.ToObject(Type, SByte)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Enum.ToObject(System.Type,System.Object)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, Object)\n  nameWithType: Enum.ToObject(Type, Object)\n  fullName: Enum.ToObject(Type, Object)\n- uid: System.Enum.ToObject(System.Type,System.Int64)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, Int64)\n  nameWithType: Enum.ToObject(Type, Int64)\n  fullName: Enum.ToObject(Type, Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Enum.ToObject(System.Type,System.Int32)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, Int32)\n  nameWithType: Enum.ToObject(Type, Int32)\n  fullName: Enum.ToObject(Type, Int32)\n- uid: System.Enum.ToObject(System.Type,System.Byte)\n  parent: System.Enum\n  isExternal: false\n  name: ToObject(Type, Byte)\n  nameWithType: Enum.ToObject(Type, Byte)\n  fullName: Enum.ToObject(Type, Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Enum.ToString(System.String,System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: ToString(String, IFormatProvider)\n  nameWithType: Enum.ToString(String, IFormatProvider)\n  fullName: Enum.ToString(String, IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Enum.ToString(System.String)\n  parent: System.Enum\n  isExternal: false\n  name: ToString(String)\n  nameWithType: Enum.ToString(String)\n  fullName: Enum.ToString(String)\n- uid: System.Enum.ToString(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Enum.ToString(IFormatProvider)\n  fullName: Enum.ToString(IFormatProvider)\n- uid: System.Enum.ToString\n  parent: System.Enum\n  isExternal: false\n  name: ToString()\n  nameWithType: Enum.ToString()\n  fullName: Enum.ToString()\n- uid: System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)\n  parent: System.Enum\n  isExternal: false\n  name: TryParse(Type, String, Boolean, Object)\n  nameWithType: Enum.TryParse(Type, String, Boolean, Object)\n  fullName: Enum.TryParse(Type, String, Boolean, Object)\n- uid: System.Enum.TryParse(System.Type,System.String,System.Object@)\n  parent: System.Enum\n  isExternal: false\n  name: TryParse(Type, String, Object)\n  nameWithType: Enum.TryParse(Type, String, Object)\n  fullName: Enum.TryParse(Type, String, Object)\n- uid: System.Enum.TryParse``1(System.String,System.Boolean,``0@)\n  parent: System.Enum\n  isExternal: false\n  name: TryParse<TEnum>(String, Boolean, TEnum)\n  nameWithType: Enum.TryParse<TEnum>(String, Boolean, TEnum)\n  fullName: Enum.TryParse<TEnum>(String, Boolean, TEnum)\n- uid: System.Enum.TryParse``1(System.String,``0@)\n  parent: System.Enum\n  isExternal: false\n  name: TryParse<TEnum>(String, TEnum)\n  nameWithType: Enum.TryParse<TEnum>(String, TEnum)\n  fullName: Enum.TryParse<TEnum>(String, TEnum)\n- uid: System.Enum.System#IConvertible#GetTypeCode\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.GetTypeCode()\n  nameWithType: Enum.IConvertible.GetTypeCode()\n  fullName: Enum.IConvertible.GetTypeCode()\n- uid: System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Enum.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToByte(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToByte(IFormatProvider)\n  fullName: Enum.IConvertible.ToByte(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToChar(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToChar(IFormatProvider)\n  fullName: Enum.IConvertible.ToChar(IFormatProvider)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Enum.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Enum.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToDouble(IFormatProvider)\n  fullName: Enum.IConvertible.ToDouble(IFormatProvider)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToInt16(IFormatProvider)\n  fullName: Enum.IConvertible.ToInt16(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToInt32(IFormatProvider)\n  fullName: Enum.IConvertible.ToInt32(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToInt64(IFormatProvider)\n  fullName: Enum.IConvertible.ToInt64(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToSByte(IFormatProvider)\n  fullName: Enum.IConvertible.ToSByte(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToSingle(IFormatProvider)\n  fullName: Enum.IConvertible.ToSingle(IFormatProvider)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Enum.System#IConvertible#ToString(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToString(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToString(IFormatProvider)\n  fullName: Enum.IConvertible.ToString(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Enum.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Enum.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Enum.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Enum.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Enum.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Enum.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Enum\n  isExternal: false\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Enum.IFormattable.ToString(String, IFormatProvider)\n  fullName: Enum.IFormattable.ToString(String, IFormatProvider)\n- uid: System.Enum.#ctor*\n  parent: System.Enum\n  isExternal: false\n  name: Enum\n  nameWithType: Enum.Enum\n  fullName: Enum.Enum\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.CompareTo*\n  parent: System.Enum\n  isExternal: false\n  name: CompareTo\n  nameWithType: Enum.CompareTo\n  fullName: Enum.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.Equals*\n  parent: System.Enum\n  isExternal: false\n  name: Equals\n  nameWithType: Enum.Equals\n  fullName: Enum.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.Format*\n  parent: System.Enum\n  isExternal: false\n  name: Format\n  nameWithType: Enum.Format\n  fullName: Enum.Format\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.GetHashCode*\n  parent: System.Enum\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Enum.GetHashCode\n  fullName: Enum.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.GetName*\n  parent: System.Enum\n  isExternal: false\n  name: GetName\n  nameWithType: Enum.GetName\n  fullName: Enum.GetName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.GetNames*\n  parent: System.Enum\n  isExternal: false\n  name: GetNames\n  nameWithType: Enum.GetNames\n  fullName: Enum.GetNames\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.GetTypeCode*\n  parent: System.Enum\n  isExternal: false\n  name: GetTypeCode\n  nameWithType: Enum.GetTypeCode\n  fullName: Enum.GetTypeCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.GetUnderlyingType*\n  parent: System.Enum\n  isExternal: false\n  name: GetUnderlyingType\n  nameWithType: Enum.GetUnderlyingType\n  fullName: Enum.GetUnderlyingType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.GetValues*\n  parent: System.Enum\n  isExternal: false\n  name: GetValues\n  nameWithType: Enum.GetValues\n  fullName: Enum.GetValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.HasFlag*\n  parent: System.Enum\n  isExternal: false\n  name: HasFlag\n  nameWithType: Enum.HasFlag\n  fullName: Enum.HasFlag\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.IsDefined*\n  parent: System.Enum\n  isExternal: false\n  name: IsDefined\n  nameWithType: Enum.IsDefined\n  fullName: Enum.IsDefined\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.Parse*\n  parent: System.Enum\n  isExternal: false\n  name: Parse\n  nameWithType: Enum.Parse\n  fullName: Enum.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.Parse``1*\n  parent: System.Enum\n  isExternal: false\n  name: Parse<TEnum>\n  nameWithType: Enum.Parse<TEnum>\n  fullName: Enum.Parse<TEnum>\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.ToObject*\n  parent: System.Enum\n  isExternal: false\n  name: ToObject\n  nameWithType: Enum.ToObject\n  fullName: Enum.ToObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.ToString*\n  parent: System.Enum\n  isExternal: false\n  name: ToString\n  nameWithType: Enum.ToString\n  fullName: Enum.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.TryParse*\n  parent: System.Enum\n  isExternal: false\n  name: TryParse\n  nameWithType: Enum.TryParse\n  fullName: Enum.TryParse\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.TryParse``1*\n  parent: System.Enum\n  isExternal: false\n  name: TryParse<TEnum>\n  nameWithType: Enum.TryParse<TEnum>\n  fullName: Enum.TryParse<TEnum>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#GetTypeCode*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.GetTypeCode\n  nameWithType: Enum.System.IConvertible.GetTypeCode\n  fullName: Enum.System.IConvertible.GetTypeCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToBoolean*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToBoolean\n  nameWithType: Enum.System.IConvertible.ToBoolean\n  fullName: Enum.System.IConvertible.ToBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToByte*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToByte\n  nameWithType: Enum.System.IConvertible.ToByte\n  fullName: Enum.System.IConvertible.ToByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToChar*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToChar\n  nameWithType: Enum.System.IConvertible.ToChar\n  fullName: Enum.System.IConvertible.ToChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToDateTime*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToDateTime\n  nameWithType: Enum.System.IConvertible.ToDateTime\n  fullName: Enum.System.IConvertible.ToDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToDecimal*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToDecimal\n  nameWithType: Enum.System.IConvertible.ToDecimal\n  fullName: Enum.System.IConvertible.ToDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToDouble*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToDouble\n  nameWithType: Enum.System.IConvertible.ToDouble\n  fullName: Enum.System.IConvertible.ToDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToInt16*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToInt16\n  nameWithType: Enum.System.IConvertible.ToInt16\n  fullName: Enum.System.IConvertible.ToInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToInt32*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToInt32\n  nameWithType: Enum.System.IConvertible.ToInt32\n  fullName: Enum.System.IConvertible.ToInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToInt64*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToInt64\n  nameWithType: Enum.System.IConvertible.ToInt64\n  fullName: Enum.System.IConvertible.ToInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToSByte*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToSByte\n  nameWithType: Enum.System.IConvertible.ToSByte\n  fullName: Enum.System.IConvertible.ToSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToSingle*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToSingle\n  nameWithType: Enum.System.IConvertible.ToSingle\n  fullName: Enum.System.IConvertible.ToSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToString*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToString\n  nameWithType: Enum.System.IConvertible.ToString\n  fullName: Enum.System.IConvertible.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToType*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToType\n  nameWithType: Enum.System.IConvertible.ToType\n  fullName: Enum.System.IConvertible.ToType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToUInt16*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToUInt16\n  nameWithType: Enum.System.IConvertible.ToUInt16\n  fullName: Enum.System.IConvertible.ToUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToUInt32*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToUInt32\n  nameWithType: Enum.System.IConvertible.ToUInt32\n  fullName: Enum.System.IConvertible.ToUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IConvertible#ToUInt64*\n  parent: System.Enum\n  isExternal: false\n  name: System.IConvertible.ToUInt64\n  nameWithType: Enum.System.IConvertible.ToUInt64\n  fullName: Enum.System.IConvertible.ToUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Enum.System#IFormattable#ToString*\n  parent: System.Enum\n  isExternal: false\n  name: System.IFormattable.ToString\n  nameWithType: Enum.System.IFormattable.ToString\n  fullName: Enum.System.IFormattable.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Enum.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  nameWithType: IConvertible\n  fullName: System.IConvertible\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n"}