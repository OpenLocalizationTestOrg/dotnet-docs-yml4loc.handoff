{"nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.","nodes":[{"pos":[0,175],"content":"Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.","nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.","pos":[0,175]}]}],"pos":[646,822],"yaml":true},{"content":"The value of the control may or may not be editable depending on the control and its settings.  \n  \n Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.","nodes":[{"pos":[0,94],"content":"The value of the control may or may not be editable depending on the control and its settings.","nodes":[{"content":"The value of the control may or may not be editable depending on the control and its settings.","pos":[0,94]}]},{"pos":[101,225],"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.","nodes":[{"content":"Implemented on a UI Automation provider that must support the <ph id=\"ph1\">&lt;xref:System.Windows.Automation.ValuePattern&gt;</ph> control pattern.","pos":[0,124],"source":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern."}]}],"pos":[833,1063],"yaml":true,"extradata":"MT"},{"content":"Gets a value that specifies whether the value of a control is read-only.","nodes":[{"pos":[0,72],"content":"Gets a value that specifies whether the value of a control is read-only.","nodes":[{"content":"Gets a value that specifies whether the value of a control is read-only.","pos":[0,72]}]}],"pos":[2989,3062],"yaml":true},{"content":"A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.","nodes":[{"pos":[0,292],"content":"A control should have its <ph id=\"ph1\">&lt;xref:System.Windows.Automation.AutomationElement.IsEnabledProperty&gt;</ph> set to <ph id=\"ph2\">`true`</ph> and its <ph id=\"ph3\">&lt;xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty&gt;</ph> set to <ph id=\"ph4\">`false`</ph> before allowing a call to <ph id=\"ph5\">&lt;xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A&gt;</ph>.","source":"A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>."}],"pos":[3073,3366],"yaml":true,"extradata":"MT"},{"content":"`true` if the value is read-only; `false` if it can be modified.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the value is read-only; <ph id=\"ph2\">`false`</ph> if it can be modified.","source":"`true` if the value is read-only; `false` if it can be modified."}],"pos":[3926,3993],"yaml":true},{"content":"Sets the value of a control.","nodes":[{"pos":[0,28],"content":"Sets the value of a control.","nodes":[{"content":"Sets the value of a control.","pos":[0,28]}]}],"pos":[5135,5164],"yaml":true},{"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>. However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.  \n  \n Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control. The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.  \n  \n ![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG \"Editable list item.\")  \nExample of an Editable List Item","nodes":[{"pos":[0,372],"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>. However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.","nodes":[{"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>. However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.","pos":[0,372],"nodes":[{"content":"Single-line edit controls support programmatic access to their contents by implementing <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>.","pos":[0,145],"source":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>."},{"content":"However, multi-line edit controls do not implement <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>; instead they provide access to their content by implementing <ph id=\"ph2\">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>.","pos":[146,372],"source":" However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>."}]}]},{"pos":[379,806],"content":"Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control. The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.","nodes":[{"content":"Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control. The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.","pos":[0,427],"nodes":[{"content":"Controls such as <ph id=\"ph1\">&lt;xref:System.Windows.Automation.ControlType.ListItem&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Automation.ControlType.TreeItem&gt;</ph> must implement <ph id=\"ph3\">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> if the value of any of the items is editable, regardless of the current edit mode of the control.","pos":[0,298],"source":"Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control."},{"content":"The parent control must also implement <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> if the child items are editable.","pos":[299,427],"source":" The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable."}]}]},{"pos":[813,944],"content":"![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG \"Editable list item.\")  \nExample of an Editable List Item","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Editable list item.<ept id=\"p1\">](~/add/media/uia-valuepattern-editable-listitem.PNG \"Editable list item.\")</ept>","pos":[0,96],"source":"![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG \"Editable list item.\")"},{"content":"Example of an Editable List Item","pos":[99,131]}]}],"pos":[5175,6129],"yaml":true,"extradata":"MT"},{"content":"The value to set. The provider is responsible for converting the value to the appropriate data type.","nodes":[{"pos":[0,100],"content":"The value to set. The provider is responsible for converting the value to the appropriate data type.","nodes":[{"content":"The value to set. The provider is responsible for converting the value to the appropriate data type.","pos":[0,100],"nodes":[{"content":"The value to set.","pos":[0,17]},{"content":"The provider is responsible for converting the value to the appropriate data type.","pos":[18,100]}]}]}],"pos":[6713,6814],"yaml":true},{"content":"If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.","nodes":[{"pos":[0,115],"content":"If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.","nodes":[{"content":"If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.","pos":[0,115]}]}],"pos":[7010,7126],"yaml":true},{"content":"If a new value cannot be converted from a string to a format the control recognizes.","nodes":[{"pos":[0,84],"content":"If a new value cannot be converted from a string to a format the control recognizes.","nodes":[{"content":"If a new value cannot be converted from a string to a format the control recognizes.","pos":[0,84]}]}],"pos":[7220,7305],"yaml":true},{"content":"When an attempt is made to manipulate a control that is not enabled.","nodes":[{"pos":[0,68],"content":"When an attempt is made to manipulate a control that is not enabled.","nodes":[{"content":"When an attempt is made to manipulate a control that is not enabled.","pos":[0,68]}]}],"pos":[7455,7524],"yaml":true},{"content":"Gets the value of the control.","nodes":[{"pos":[0,30],"content":"Gets the value of the control.","nodes":[{"content":"Gets the value of the control.","pos":[0,30]}]}],"pos":[8490,8521],"yaml":true},{"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>). However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.  \n  \n To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>. However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.  \n  \n <xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values. Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.","nodes":[{"pos":[0,327],"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>). However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.","nodes":[{"content":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>). However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.","pos":[0,327],"nodes":[{"content":"Single-line edit controls support programmatic access to their contents by implementing <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> (in addition to <ph id=\"ph2\">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>).","pos":[0,218],"source":"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>)."},{"content":"However, multi-line edit controls do not implement <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>.","pos":[219,327],"source":" However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>."}]}]},{"pos":[334,594],"content":"To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>. However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.","nodes":[{"content":"To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>. However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.","pos":[0,260],"nodes":[{"content":"To retrieve the textual contents of multi-line edit controls, the controls must implement <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>.","pos":[0,146],"source":"To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph> does not support setting the value of a control.","pos":[147,260],"source":" However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control."}]}]},{"pos":[601,821],"content":"<xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values. Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.","nodes":[{"content":"<xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values. Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.","pos":[0,220],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> does not support the retrieval of formatting information or substring values.","pos":[0,134],"source":"<xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values."},{"content":"Implement <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph> in these scenarios.","pos":[135,220],"source":" Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios."}]}]}],"pos":[8532,9360],"yaml":true,"extradata":"MT"},{"content":"The value of the control as a string.","nodes":[{"pos":[0,37],"content":"The value of the control as a string.","nodes":[{"content":"The value of the control as a string.","pos":[0,37]}]}],"pos":[9898,9936],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.IValueProvider\n  commentId: T:System.Windows.Automation.Provider.IValueProvider\n  id: IValueProvider\n  children:\n  - System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n  - System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)\n  - System.Windows.Automation.Provider.IValueProvider.Value\n  langs:\n  - csharp\n  name: IValueProvider\n  nameWithType: IValueProvider\n  fullName: System.Windows.Automation.Provider.IValueProvider\n  type: Interface\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.\n  remarks: \"The value of the control may or may not be editable depending on the control and its settings.  \\n  \\n Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"c7935180-6fb3-4201-b174-7df73adbf64a\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IValueProvider\n  derivedClasses:\n  - System.Windows.Automation.Peers.ComboBoxAutomationPeer\n  - System.Windows.Automation.Peers.DataGridCellItemAutomationPeer\n  - System.Windows.Automation.Peers.DatePickerAutomationPeer\n  - System.Windows.Automation.Peers.PasswordBoxAutomationPeer\n  - System.Windows.Automation.Peers.RibbonComboBoxAutomationPeer\n  - System.Windows.Automation.Peers.TextBoxAutomationPeer\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IValueProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n  commentId: P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Automation.Provider.IValueProvider\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: IValueProvider.IsReadOnly\n  fullName: IValueProvider.IsReadOnly\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets a value that specifies whether the value of a control is read-only.\n  remarks: A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.\n  example:\n  - \"The following example shows an implementation of this method for a control that allows its value to be changed.  \\n  \\n [!code-csharp[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#isreadonly)]\\n [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#isreadonly)]\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the value is read-only; `false` if it can be modified.'\n  overload: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IValueProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)\n  commentId: M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)\n  id: SetValue(System.String)\n  parent: System.Windows.Automation.Provider.IValueProvider\n  langs:\n  - csharp\n  name: SetValue(String)\n  nameWithType: IValueProvider.SetValue(String)\n  fullName: IValueProvider.SetValue(String)\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Sets the value of a control.\n  remarks: \"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>. However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.  \\n  \\n Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control. The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.  \\n  \\n ![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG \\\"Editable list item.\\\")  \\nExample of an Editable List Item\"\n  example:\n  - \"The following example code demonstrates a custom control that allows its value to be set to a string of limited length.  \\n  \\n [!code-csharp[UIAIValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#setvalue)]\\n [!code-vb[UIAIValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#setvalue)]\"\n  syntax:\n    content: public void SetValue (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The value to set. The provider is responsible for converting the value to the appropriate data type.\n  overload: System.Windows.Automation.Provider.IValueProvider.SetValue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: If a new value cannot be converted from a string to a format the control recognizes.\n  - type: System.Windows.Automation.ElementNotEnabledException\n    commentId: T:System.Windows.Automation.ElementNotEnabledException\n    description: When an attempt is made to manipulate a control that is not enabled.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IValueProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.IValueProvider.Value\n  commentId: P:System.Windows.Automation.Provider.IValueProvider.Value\n  id: Value\n  parent: System.Windows.Automation.Provider.IValueProvider\n  langs:\n  - csharp\n  name: Value\n  nameWithType: IValueProvider.Value\n  fullName: IValueProvider.Value\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets the value of the control.\n  remarks: \"Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>). However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.  \\n  \\n To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>. However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.  \\n  \\n <xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values. Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.\"\n  example:\n  - \"The following example shows an implementation of this method for a control that allows its value to be retrieved.  \\n  \\n [!code-csharp[UIAIValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#value)]\\n [!code-vb[UIAIValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#value)]\"\n  syntax:\n    content: public string Value { get; }\n    return:\n      type: System.String\n      description: The value of the control as a string.\n  overload: System.Windows.Automation.Provider.IValueProvider.Value*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IValueProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\nreferences:\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.Automation.ElementNotEnabledException\n  parent: System.Windows.Automation\n  isExternal: false\n  name: ElementNotEnabledException\n  nameWithType: ElementNotEnabledException\n  fullName: System.Windows.Automation.ElementNotEnabledException\n- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IValueProvider.IsReadOnly\n  fullName: IValueProvider.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: SetValue(String)\n  nameWithType: IValueProvider.SetValue(String)\n  fullName: IValueProvider.SetValue(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Automation.Provider.IValueProvider.Value\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: Value\n  nameWithType: IValueProvider.Value\n  fullName: IValueProvider.Value\n- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IValueProvider.IsReadOnly\n  fullName: IValueProvider.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IValueProvider.xml\n- uid: System.Windows.Automation.Provider.IValueProvider.SetValue*\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: SetValue\n  nameWithType: IValueProvider.SetValue\n  fullName: IValueProvider.SetValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IValueProvider.xml\n- uid: System.Windows.Automation.Provider.IValueProvider.Value*\n  parent: System.Windows.Automation.Provider.IValueProvider\n  isExternal: false\n  name: Value\n  nameWithType: IValueProvider.Value\n  fullName: IValueProvider.Value\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IValueProvider.xml\n"}