{"nodes":[{"content":"Provides data for the <xref href=\"System.Windows.Forms.Application.ThreadException\"></xref> event.","nodes":[{"pos":[0,98],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Application.ThreadException\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides data for the <xref href=\"System.Windows.Forms.Application.ThreadException\"></xref> event."}],"pos":[583,682],"yaml":true},{"content":"A <xref:System.Threading.ThreadExceptionEventArgs> is created by a thread when an unhandled exception occurs. <xref:System.Threading.ThreadExceptionEventArgs> contains the <xref:System.Exception> that occurred.","nodes":[{"pos":[0,210],"content":"A <xref:System.Threading.ThreadExceptionEventArgs> is created by a thread when an unhandled exception occurs. <xref:System.Threading.ThreadExceptionEventArgs> contains the <xref:System.Exception> that occurred.","nodes":[{"content":"A <xref:System.Threading.ThreadExceptionEventArgs> is created by a thread when an unhandled exception occurs. <xref:System.Threading.ThreadExceptionEventArgs> contains the <xref:System.Exception> that occurred.","pos":[0,210],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Threading.ThreadExceptionEventArgs&gt;</ph> is created by a thread when an unhandled exception occurs.","pos":[0,109],"source":"A <xref:System.Threading.ThreadExceptionEventArgs> is created by a thread when an unhandled exception occurs."},{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.ThreadExceptionEventArgs&gt;</ph> contains the <ph id=\"ph2\">&lt;xref:System.Exception&gt;</ph> that occurred.","pos":[110,210],"source":" <xref:System.Threading.ThreadExceptionEventArgs> contains the <xref:System.Exception> that occurred."}]}]}],"pos":[693,904],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.ThreadExceptionEventArgs\"></xref> class.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.ThreadExceptionEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Threading.ThreadExceptionEventArgs\"></xref> class."}],"pos":[3976,4080],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> that occurred.","nodes":[{"pos":[0,56],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that occurred.","source":"The <xref href=\"System.Exception\"></xref> that occurred."}],"pos":[5433,5490],"yaml":true},{"content":"Gets the <xref href=\"System.Exception\"></xref> that occurred.","nodes":[{"pos":[0,61],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that occurred.","source":"Gets the <xref href=\"System.Exception\"></xref> that occurred."}],"pos":[6763,6825],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> that occurred.","nodes":[{"pos":[0,56],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that occurred.","source":"The <xref href=\"System.Exception\"></xref> that occurred."}],"pos":[8151,8208],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.ThreadExceptionEventArgs\n  commentId: T:System.Threading.ThreadExceptionEventArgs\n  id: ThreadExceptionEventArgs\n  children:\n  - System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)\n  - System.Threading.ThreadExceptionEventArgs.Exception\n  langs:\n  - csharp\n  name: ThreadExceptionEventArgs\n  nameWithType: ThreadExceptionEventArgs\n  fullName: System.Threading.ThreadExceptionEventArgs\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: Provides data for the <xref href=\"System.Windows.Forms.Application.ThreadException\"></xref> event.\n  remarks: A <xref:System.Threading.ThreadExceptionEventArgs> is created by a thread when an unhandled exception occurs. <xref:System.Threading.ThreadExceptionEventArgs> contains the <xref:System.Exception> that occurred.\n  example:\n  - \"The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form. The example creates two classes. The `ErrorHandler` class creates the form and the button that raises the event. The `CustomExceptionHandler` class provides the methods to handle the exception.  \\n  \\n In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`. Then the instance is added to the event, and the application is run.  \\n  \\n In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception. The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.  \\n  \\n [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]\\n [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public class ThreadExceptionEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  derivedClasses:\n  - Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadExceptionEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)\n  commentId: M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)\n  id: '#ctor(System.Exception)'\n  parent: System.Threading.ThreadExceptionEventArgs\n  langs:\n  - csharp\n  name: ThreadExceptionEventArgs(Exception)\n  nameWithType: ThreadExceptionEventArgs.ThreadExceptionEventArgs(Exception)\n  fullName: ThreadExceptionEventArgs.ThreadExceptionEventArgs(Exception)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.ThreadExceptionEventArgs\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form. The example creates two classes. The `ErrorHandler` class creates the form and the button that raises the event. The `CustomExceptionHandler` class provides the methods to handle the exception.  \\n  \\n In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`. Then the instance is added to the event, and the application is run.  \\n  \\n In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception. The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.  \\n  \\n [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]\\n [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]\"\n  syntax:\n    content: public ThreadExceptionEventArgs (Exception t);\n    parameters:\n    - id: t\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> that occurred.\n  overload: System.Threading.ThreadExceptionEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadExceptionEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ThreadExceptionEventArgs.Exception\n  commentId: P:System.Threading.ThreadExceptionEventArgs.Exception\n  id: Exception\n  parent: System.Threading.ThreadExceptionEventArgs\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: ThreadExceptionEventArgs.Exception\n  fullName: ThreadExceptionEventArgs.Exception\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: Gets the <xref href=\"System.Exception\"></xref> that occurred.\n  remarks: ''\n  example:\n  - \"The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form. The example creates two classes. The `ErrorHandler` class creates the form and the button that raises the event. The `CustomExceptionHandler` class provides the methods to handle the exception.  \\n  \\n In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`. Then the instance is added to the event, and the application is run.  \\n  \\n In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception. The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.  \\n  \\n [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]\\n [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]\"\n  syntax:\n    content: public Exception Exception { get; }\n    return:\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> that occurred.\n  overload: System.Threading.ThreadExceptionEventArgs.Exception*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadExceptionEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)\n  parent: System.Threading.ThreadExceptionEventArgs\n  isExternal: false\n  name: ThreadExceptionEventArgs(Exception)\n  nameWithType: ThreadExceptionEventArgs.ThreadExceptionEventArgs(Exception)\n  fullName: ThreadExceptionEventArgs.ThreadExceptionEventArgs(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Threading.ThreadExceptionEventArgs.Exception\n  parent: System.Threading.ThreadExceptionEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: ThreadExceptionEventArgs.Exception\n  fullName: ThreadExceptionEventArgs.Exception\n- uid: System.Threading.ThreadExceptionEventArgs.#ctor*\n  parent: System.Threading.ThreadExceptionEventArgs\n  isExternal: false\n  name: ThreadExceptionEventArgs\n  nameWithType: ThreadExceptionEventArgs.ThreadExceptionEventArgs\n  fullName: ThreadExceptionEventArgs.ThreadExceptionEventArgs\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadExceptionEventArgs.xml\n- uid: System.Threading.ThreadExceptionEventArgs.Exception*\n  parent: System.Threading.ThreadExceptionEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: ThreadExceptionEventArgs.Exception\n  fullName: ThreadExceptionEventArgs.Exception\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadExceptionEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}