### YamlMime:ManagedReference
items:
- uid: System.Web.SiteMap
  commentId: T:System.Web.SiteMap
  id: SiteMap
  children:
  - System.Web.SiteMap.CurrentNode
  - System.Web.SiteMap.Enabled
  - System.Web.SiteMap.Provider
  - System.Web.SiteMap.Providers
  - System.Web.SiteMap.RootNode
  - System.Web.SiteMap.SiteMapResolve
  langs:
  - csharp
  name: SiteMap
  nameWithType: SiteMap
  fullName: System.Web.SiteMap
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web
  summary: The <xref href="System.Web.SiteMap"></xref> class is an in-memory representation of the navigation structure for a site, which is provided by one or more site map providers. This class cannot be inherited.
  remarks: "Site maps are used in conjunction with the <xref:System.Web.UI.WebControls.SiteMapDataSource>, <xref:System.Web.UI.WebControls.SiteMapPath>, and other controls to render an effective navigation interface for users to navigate a Web site. A <xref:System.Web.SiteMap> object is a component of the ASP.NET site navigation infrastructure that provides access to read-only site map information for page and control developers using navigation and <xref:System.Web.UI.WebControls.SiteMapDataSource> controls. Other components of the ASP.NET site navigation infrastructure include the <xref:System.Web.SiteMapProvider> and <xref:System.Web.XmlSiteMapProvider> classes, the Web.sitemap file, and the various controls that work with the <xref:System.Web.SiteMap> class, such as the <xref:System.Web.UI.WebControls.SiteMapPath> control, to render content and menus.  \n  \n The <xref:System.Web.SiteMap> has several functions:  \n  \n-   It provides the root node of the site navigation hierarchy (there can be only one root node).  \n  \n-   It identifies which site map provider is the principal, or default, provider.  \n  \n-   It keeps track of all the provider objects that are used to create the <xref:System.Web.SiteMap>.  \n  \n Fundamentally, the <xref:System.Web.SiteMap> is a container for a hierarchical collection of <xref:System.Web.SiteMapNode> objects. However, the <xref:System.Web.SiteMap> does not maintain the relationships between the nodes; rather, it delegates this to the site map providers. The <xref:System.Web.SiteMap> acts as an interface to the site navigation information (in the form of <xref:System.Web.SiteMapNode> objects) that is held by these site map providers. It keeps track of the providers from which it can access site navigation data and exposes its <xref:System.Web.SiteMap.Providers%2A> collection. A provider can store its site map information in any wayâ€”as long as it extends the <xref:System.Web.SiteMapProvider> abstract class, the <xref:System.Web.SiteMap> class can be initialized successfully from it.  \n  \n The default provider for the <xref:System.Web.SiteMap> class is the <xref:System.Web.XmlSiteMapProvider> class, which works with an XML configuration file, Web.sitemap. However, you can write your own <xref:System.Web.SiteMapProvider> object, and use it to initialize the site map for your site. For an example of a custom site map provider, see <xref:System.Web.SiteMapProvider>.  \n  \n A default site map configuration is specified that manages the site navigation configuration. You can override this configuration in the Web.config file, should you choose to write your own site map provider.  \n  \n The <xref:System.Web.SiteMap> class offers only static members for performance and it can be accessed at any time in a given site from a Web Form or Web server control."
  example:
  - "This section contains two code examples. The first code example demonstrates how to declare a site map provider in a Web.config file. The second code example demonstrates how to use a <xref:System.Web.SiteMap> object.  \n  \n The following code example is a Web.config configuration section that demonstrates how an <xref:System.Web.XmlSiteMapProvider> object is declared as the default <xref:System.Web.SiteMapProvider> object.  \n  \n```  \n<siteMap defaultProvider=\"MyXmlSiteMapProvider\" enabled=\"true\">  \n  <providers>  \n    <add name=\"MyXmlSiteMapProvider\"  \n      description=\"The site map provider that reads in the .sitemap XML files.\"  \n      type=\"System.Web.XmlSiteMapProvider, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"  \n      siteMapFile=\"my.sitemap\" />  \n  </providers>  \n</siteMap>  \n```  \n  \n The following code example demonstrates how to use the <xref:System.Web.SiteMap> object by accessing its static members to display information about the <xref:System.Web.SiteMap.RootNode%2A> and <xref:System.Web.SiteMap.CurrentNode%2A> properties. Compare it to the output that is rendered by the <xref:System.Web.UI.WebControls.SiteMapPath> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.SiteMap_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_3/CS/sitemapcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.SiteMap_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_3/VB/sitemapvb.aspx#1)]  -->"
  syntax:
    content: public static class SiteMap
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.SiteMap.CurrentNode
  commentId: P:System.Web.SiteMap.CurrentNode
  id: CurrentNode
  parent: System.Web.SiteMap
  langs:
  - csharp
  name: CurrentNode
  nameWithType: SiteMap.CurrentNode
  fullName: SiteMap.CurrentNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets a <xref href="System.Web.SiteMapNode"></xref> control that represents the currently requested page.
  remarks: "The <xref:System.Web.SiteMap> class retrieves the <xref:System.Web.SiteMap.CurrentNode%2A> property by requesting it from the provider.  \n  \n If no representative node exists for the page in the site map information, or if security trimming is enabled and the node cannot be returned for the current user, `null` is returned.  \n  \n The <xref:System.Web.SiteMap.SiteMapResolve> event is raised by the default site map provider if one or more subscriptions exist.  \n  \n If you implement your own <xref:System.Web.SiteMapProvider> object, you might create your own mechanism to find and retrieve the <xref:System.Web.SiteMapProvider.CurrentNode%2A>. However, if you extend the <xref:System.Web.StaticSiteMapProvider> class and use a URL-based scheme to identify pages, you can override the <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> method."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMap.CurrentNode%2A> property to retrieve the <xref:System.Web.SiteMapNode> object that represents the current page.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.SiteMap_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_1/CS/catalogcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.SiteMap_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_1/VB/catalogvb.aspx#1)]  -->"
  syntax:
    content: public static System.Web.SiteMapNode CurrentNode { get; }
    return:
      type: System.Web.SiteMapNode
      description: A <xref href="System.Web.SiteMapNode"></xref> instance that represents the currently requested page; otherwise, `null`, if no representative node exists in the site map information.
  overload: System.Web.SiteMap.CurrentNode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The site map feature is not enabled.
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: The default provider specified in the configuration does not exist.
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The feature is supported only when running in Low trust or higher.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.SiteMap.Enabled
  commentId: P:System.Web.SiteMap.Enabled
  id: Enabled
  parent: System.Web.SiteMap
  langs:
  - csharp
  name: Enabled
  nameWithType: SiteMap.Enabled
  fullName: SiteMap.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets a Boolean value indicating if a site map provider is specified in the Web.config file and if the site map provider is enabled.
  remarks: A default site map configuration is specified that manages the site navigation configuration. You can override this configuration in the Web.config file, should you choose to write your own site map provider.
  example:
  - "The following code example is a Web.config configuration section that demonstrates how an <xref:System.Web.XmlSiteMapProvider> object is declared to be the default <xref:System.Web.SiteMapProvider> object.  \n  \n```  \n<siteMap defaultProvider=\"MyXmlSiteMapProvider\" enabled=\"true\">  \n  <providers>  \n    <add name=\"MyXmlSiteMapProvider\"  \n      description=\"SiteMap provider that reads in .sitemap XML files.\"  \n      type=\"System.Web.XmlSiteMapProvider, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"  \n      siteMapFile=\"my.sitemap\" />  \n  </providers>  \n</siteMap>  \n```"
  syntax:
    content: public static bool Enabled { get; }
    return:
      type: System.Boolean
      description: '`true` if a site map provider is configured and enabled; otherwise, `false`.'
  overload: System.Web.SiteMap.Enabled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.SiteMap.Provider
  commentId: P:System.Web.SiteMap.Provider
  id: Provider
  parent: System.Web.SiteMap
  langs:
  - csharp
  name: Provider
  nameWithType: SiteMap.Provider
  fullName: SiteMap.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets the default <xref href="System.Web.SiteMapProvider"></xref> object for the current site map.
  remarks: By default, the <xref:System.Web.XmlSiteMapProvider> object is used and site navigation data is loaded from the Web.sitemap file that is located in the root directory of the site. This is identified in the management classes that manage the site navigation configuration and the site map configuration section of the Web.config files. By default, it is an instance of the <xref:System.Web.XmlSiteMapProvider> class, which uses the Web.sitemap file as its persistent store. However, you can implement your own site map storage and configuration scheme by writing a class that implements the abstract <xref:System.Web.SiteMapProvider> class. For more information on writing your own provider, see <xref:System.Web.SiteMapProvider>.
  example:
  - "The following code example demonstrates how to access the default <xref:System.Web.SiteMapProvider> object for the site by using the static <xref:System.Web.SiteMap.Provider%2A> property.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.SiteMap_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_2/CS/catalog2cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.SiteMap_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_2/VB/catalog2vb.aspx#1)]  -->"
  syntax:
    content: public static System.Web.SiteMapProvider Provider { get; }
    return:
      type: System.Web.SiteMapProvider
      description: The default site map provider for the <xref href="System.Web.SiteMap"></xref>.
  overload: System.Web.SiteMap.Provider*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The site map feature is not enabled.
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: The default provider specified in the configuration does not exist.
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The feature is supported only when running in Low trust or higher.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.SiteMap.Providers
  commentId: P:System.Web.SiteMap.Providers
  id: Providers
  parent: System.Web.SiteMap
  langs:
  - csharp
  name: Providers
  nameWithType: SiteMap.Providers
  fullName: SiteMap.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets a read-only collection of named <xref href="System.Web.SiteMapProvider"></xref> objects that are available to the <xref href="System.Web.SiteMap"></xref> class.
  remarks: The site map providers that are listed in the <xref:System.Web.SiteMap.Providers%2A> collection are those that are specified in the configuration hierarchy to initialize the <xref:System.Web.SiteMap> class. Only the default provider (identified by the <xref:System.Web.SiteMap.Provider%2A> property) is guaranteed to be used by the <xref:System.Web.SiteMap> during initialization; the presence of a provider in the <xref:System.Web.SiteMap.Providers%2A> collection means that it was specified in the configuration and was available during initialization.
  example:
  - "The following code example demonstrates how to retrieve the <xref:System.Web.SiteMap.Providers%2A> collection from the <xref:System.Web.SiteMap> class, and then iterate through it.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.SiteMap_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_2/CS/catalog2cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.SiteMap_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_2/VB/catalog2vb.aspx#1)]  -->  \n  \n If you have more than just the default provider configured for your site, you will see each provider displayed. For example, if you are using the sample Microsoft Access provider (see <xref:System.Web.StaticSiteMapProvider>), you see the following output:  \n  \n```  \nXmlSiteMapProvider   System.Web.XmlSiteMapProvider  \nAccessSiteMapProvider   Samples.AspNet.AccessSiteMapProvider  \n```"
  syntax:
    content: public static System.Web.SiteMapProviderCollection Providers { get; }
    return:
      type: System.Web.SiteMapProviderCollection
      description: A <xref href="System.Web.SiteMapProviderCollection"></xref> of named <xref href="System.Web.SiteMapProvider"></xref> objects.
  overload: System.Web.SiteMap.Providers*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The site map feature is not enabled.
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: The default provider specified in the configuration does not exist.
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The feature is supported only when running in Low trust or higher.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.SiteMap.RootNode
  commentId: P:System.Web.SiteMap.RootNode
  id: RootNode
  parent: System.Web.SiteMap
  langs:
  - csharp
  name: RootNode
  nameWithType: SiteMap.RootNode
  fullName: SiteMap.RootNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Gets a <xref href="System.Web.SiteMapNode"></xref> object that represents the top-level page of the navigation structure for the site.
  remarks: "The <xref:System.Web.SiteMap> class retrieves the <xref:System.Web.SiteMap.RootNode%2A> property by requesting it from the provider. If there is a provider hierarchy, the <xref:System.Web.SiteMap> class retrieves the root node of the root provider in the hierarchy. To access the root node of the default provider, call the <xref:System.Web.SiteMap.Provider%2A> property, which retrieves both the default provider and its <xref:System.Web.SiteMapProvider.RootNode%2A> property.  \n  \n The <xref:System.Web.XmlSiteMapProvider> object, which is the default provider for the <xref:System.Web.SiteMap> class, supports only one <xref:System.Web.XmlSiteMapProvider.RootNode%2A>.  \n  \n If you implement your own <xref:System.Web.SiteMapProvider> class and override the abstract <xref:System.Web.SiteMapProvider.RootNode%2A> property, you must provide your own implementation to track the <xref:System.Web.SiteMapProvider.RootNode%2A> property of the <xref:System.Web.SiteMapNode> instance.  \n  \n The root node must be visible to all users, by design. If the root node is not visible to all users when security trimming is enabled, accessing the <xref:System.Web.SiteMap.RootNode%2A> property might result in an <xref:System.InvalidOperationException> exception."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMap.RootNode%2A> property to retrieve the <xref:System.Web.SiteMapNode> object that represents the root node of the site, regardless of the current location in the page hierarchy.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.SiteMap_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_1/CS/catalogcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.SiteMap_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_1/VB/catalogvb.aspx#1)]  -->"
  syntax:
    content: public static System.Web.SiteMapNode RootNode { get; }
    return:
      type: System.Web.SiteMapNode
      description: A <xref href="System.Web.SiteMapNode"></xref> that represents the top-level page of the site's navigation structure; otherwise, `null`, if security trimming is enabled and the node cannot be returned to the current user.
  overload: System.Web.SiteMap.RootNode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The site map feature is not enabled.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.SiteMap.RootNode\"></xref> resolves to `null`, which occurs if security trimming is enabled and the root node is not visible to the current user."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: The default provider specified in the configuration does not exist.
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The feature is supported only when running in Low trust or higher.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.SiteMap.SiteMapResolve
  commentId: E:System.Web.SiteMap.SiteMapResolve
  id: SiteMapResolve
  parent: System.Web.SiteMap
  langs:
  - csharp
  name: SiteMapResolve
  nameWithType: SiteMap.SiteMapResolve
  fullName: SiteMap.SiteMapResolve
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: Occurs when the <xref href="System.Web.SiteMap.CurrentNode"></xref> property is accessed.
  remarks: "Subscribers attach a <xref:System.Web.SiteMapResolveEventHandler> object to the static <xref:System.Web.SiteMap.SiteMapResolve> event to receive notification when the <xref:System.Web.SiteMap.CurrentNode%2A> property is accessed. This enables the user to implement custom logic when creating a <xref:System.Web.SiteMapNode> representation of the currently executing page without requiring a custom provider implementation.  \n  \n If you subscribe to the <xref:System.Web.SiteMap.SiteMapResolve> event, you also subscribe to the <xref:System.Web.SiteMapProvider.SiteMapResolve> event on the default site map provider."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.SiteMap.SiteMapResolve> event on an ASP.NET Web page to modify the target URLs that are displayed by a site navigation control, such as the <xref:System.Web.UI.WebControls.SiteMapPath> control. In this example, the current page is a post page in an online bulletin board or forum. In order to render more meaningful site navigation, the URLs of the nodes that are displayed by the navigation control are appended with context relevant query strings.  \n  \n> [!NOTE]\n>  The ASP.NET site navigation infrastructure guards against infinite recursion, which provides a safeguard and minimizes the security risk that is associated with accessing the <xref:System.Web.SiteMap.CurrentNode%2A> property from within the <xref:System.Web.SiteMapResolveEventHandler> class.  \n  \n The following code belongs in the Global.asax file. The event handler will be attached only once for the application. The code recognizes whether the page implements the `ISiteMapResolver` interface. If the interface is implemented, the `ExpandForumPaths` function is called.  \n  \n [!code-csharp[System.Web.SiteMap.SiteMapResolve#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/CS/sitemapresolve1cs.aspx.cs#1)]\n [!code-vb[System.Web.SiteMap.SiteMapResolve#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/VB/sitemapresolve1vb.aspx.vb#1)]  \n  \n The following code defines a separate interface. (In a Web site project, you can put this code in the App_Code folder.) The `ISiteMapResolver` interface defines the `ExpandForumPaths` method.  \n  \n [!code-csharp[System.Web.SiteMap.SiteMapResolve#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/CS/sitemapresolve1cs.aspx.cs#2)]\n [!code-vb[System.Web.SiteMap.SiteMapResolve#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/VB/sitemapresolve1vb.aspx.vb#2)]  \n  \n The following code belongs with the page that is at least three nodes deep in the site-map structure. The page implements the `ISiteMapResolver` interface, which enables the `ExpandForumPaths` method to be called.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.SiteMap.SiteMapResolve#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/CS/sitemapresolve1cs.aspx#3)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.SiteMap.SiteMapResolve#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/VB/sitemapresolve1vb.aspx#3)]  -->"
  syntax:
    content: public static event System.Web.SiteMapResolveEventHandler SiteMapResolve;
    return:
      type: System.Web.SiteMapResolveEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.SiteMap.CurrentNode
  parent: System.Web.SiteMap
  isExternal: false
  name: CurrentNode
  nameWithType: SiteMap.CurrentNode
  fullName: SiteMap.CurrentNode
- uid: System.Web.SiteMapNode
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode
- uid: System.Web.SiteMap.Enabled
  parent: System.Web.SiteMap
  isExternal: false
  name: Enabled
  nameWithType: SiteMap.Enabled
  fullName: SiteMap.Enabled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SiteMap.Provider
  parent: System.Web.SiteMap
  isExternal: false
  name: Provider
  nameWithType: SiteMap.Provider
  fullName: SiteMap.Provider
- uid: System.Web.SiteMapProvider
  parent: System.Web
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapProvider
  fullName: System.Web.SiteMapProvider
- uid: System.Web.SiteMap.Providers
  parent: System.Web.SiteMap
  isExternal: false
  name: Providers
  nameWithType: SiteMap.Providers
  fullName: SiteMap.Providers
- uid: System.Web.SiteMapProviderCollection
  parent: System.Web
  isExternal: false
  name: SiteMapProviderCollection
  nameWithType: SiteMapProviderCollection
  fullName: System.Web.SiteMapProviderCollection
- uid: System.Web.SiteMap.RootNode
  parent: System.Web.SiteMap
  isExternal: false
  name: RootNode
  nameWithType: SiteMap.RootNode
  fullName: SiteMap.RootNode
- uid: System.Web.SiteMap.SiteMapResolve
  parent: System.Web.SiteMap
  isExternal: false
  name: SiteMapResolve
  nameWithType: SiteMap.SiteMapResolve
  fullName: SiteMap.SiteMapResolve
- uid: System.Web.SiteMapResolveEventHandler
  parent: System.Web
  isExternal: false
  name: SiteMapResolveEventHandler
  nameWithType: SiteMapResolveEventHandler
  fullName: System.Web.SiteMapResolveEventHandler
- uid: System.Web.SiteMap.CurrentNode*
  parent: System.Web.SiteMap
  isExternal: false
  name: CurrentNode
  nameWithType: SiteMap.CurrentNode
  fullName: SiteMap.CurrentNode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
- uid: System.Web.SiteMap.Enabled*
  parent: System.Web.SiteMap
  isExternal: false
  name: Enabled
  nameWithType: SiteMap.Enabled
  fullName: SiteMap.Enabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
- uid: System.Web.SiteMap.Provider*
  parent: System.Web.SiteMap
  isExternal: false
  name: Provider
  nameWithType: SiteMap.Provider
  fullName: SiteMap.Provider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
- uid: System.Web.SiteMap.Providers*
  parent: System.Web.SiteMap
  isExternal: false
  name: Providers
  nameWithType: SiteMap.Providers
  fullName: SiteMap.Providers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
- uid: System.Web.SiteMap.RootNode*
  parent: System.Web.SiteMap
  isExternal: false
  name: RootNode
  nameWithType: SiteMap.RootNode
  fullName: SiteMap.RootNode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/SiteMap.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
