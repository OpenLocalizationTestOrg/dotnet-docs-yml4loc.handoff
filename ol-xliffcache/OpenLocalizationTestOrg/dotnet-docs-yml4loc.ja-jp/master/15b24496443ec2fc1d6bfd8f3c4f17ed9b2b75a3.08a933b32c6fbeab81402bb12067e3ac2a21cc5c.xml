{"nodes":[{"content":"Represents detailed update information obtained through a call to <xref href=\"System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate\"></xref>.","nodes":[{"pos":[0,162],"content":"Represents detailed update information obtained through a call to <ph id=\"ph1\">&lt;xref href=\"System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate\"&gt;&lt;/xref&gt;</ph>.","source":"Represents detailed update information obtained through a call to <xref href=\"System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate\"></xref>."}],"pos":[761,924],"yaml":true},{"content":"With <xref:System.Deployment.Application.UpdateCheckInfo>, you can decide whether to upgrade your ClickOnce application based on information about the newest version. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all. The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user. Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update.  \n  \n> [!NOTE]\n>  Visual Studio adds the `<deploymentProvider>` element to the manifest only if the application is set to check for updates, so you either have to check **The application should check for updates** or specify an update URL in **Update location** in the [Application Updates Dialog Box](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).","nodes":[{"pos":[0,866],"content":"With <xref:System.Deployment.Application.UpdateCheckInfo>, you can decide whether to upgrade your ClickOnce application based on information about the newest version. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all. The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user. Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update.","nodes":[{"content":"With <xref:System.Deployment.Application.UpdateCheckInfo>, you can decide whether to upgrade your ClickOnce application based on information about the newest version. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all. The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user. Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update.","pos":[0,866],"nodes":[{"content":"With <ph id=\"ph1\">&lt;xref:System.Deployment.Application.UpdateCheckInfo&gt;</ph>, you can decide whether to upgrade your ClickOnce application based on information about the newest version.","pos":[0,166],"source":"With <xref:System.Deployment.Application.UpdateCheckInfo>, you can decide whether to upgrade your ClickOnce application based on information about the newest version."},{"content":"<ph id=\"ph1\">&lt;xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A&gt;</ph> will return a Boolean value indicating whether there is a new update at all.","pos":[167,315],"source":" <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A&gt;</ph> property provides the version number of the new version, while <ph id=\"ph2\">&lt;xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A&gt;</ph> provides the earliest version that the user should have installed.","pos":[316,601],"source":" The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed."},{"content":"<ph id=\"ph1\">&lt;xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A&gt;</ph> expresses whether the latest available update is required of the user.","pos":[602,745],"source":" <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user."},{"content":"Finally, <ph id=\"ph1\">&lt;xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A&gt;</ph> expresses the total size of the update.","pos":[746,866],"source":" Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update."}]}]},{"pos":[874,1239],"content":"[!NOTE]\n Visual Studio adds the `<deploymentProvider>` element to the manifest only if the application is set to check for updates, so you either have to check **The application should check for updates** or specify an update URL in **Update location** in the [Application Updates Dialog Box](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).","leadings":["","> "],"nodes":[{"content":"Visual Studio adds the <ph id=\"ph1\">`&lt;deploymentProvider&gt;`</ph> element to the manifest only if the application is set to check for updates, so you either have to check <bpt id=\"p1\">**</bpt>The application should check for updates<ept id=\"p1\">**</ept> or specify an update URL in <bpt id=\"p2\">**</bpt>Update location<ept id=\"p2\">**</ept> in the <bpt id=\"p3\">[</bpt>Application Updates Dialog Box<ept id=\"p3\">](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f)</ept>.","pos":[9,363],"source":" Visual Studio adds the `<deploymentProvider>` element to the manifest only if the application is set to check for updates, so you either have to check **The application should check for updates** or specify an update URL in **Update location** in the [Application Updates Dialog Box](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f)."}]}],"pos":[935,2180],"yaml":true,"extradata":"MT"},{"content":"Gets the version number of the latest uninstalled version.","nodes":[{"pos":[0,58],"content":"Gets the version number of the latest uninstalled version.","nodes":[{"content":"Gets the version number of the latest uninstalled version.","pos":[0,58]}]}],"pos":[4230,4289],"yaml":true},{"content":"You can use <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> to decide whether to install the update based on the severity of the update. For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change.","nodes":[{"pos":[0,428],"content":"You can use <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> to decide whether to install the update based on the severity of the update. For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change.","nodes":[{"content":"You can use <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> to decide whether to install the update based on the severity of the update. For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change.","pos":[0,428],"nodes":[{"content":"You can use <ph id=\"ph1\">&lt;xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A&gt;</ph> to decide whether to install the update based on the severity of the update.","pos":[0,161],"source":"You can use <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> to decide whether to install the update based on the severity of the update."},{"content":"For example, if only the <ph id=\"ph1\">&lt;xref:System.Version.Build%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Version.Revision%2A&gt;</ph> version properties have changed, your application may not need to update until either the <ph id=\"ph3\">&lt;xref:System.Version.Minor%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Version.Major%2A&gt;</ph> properties change.","pos":[162,428],"source":" For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change."}]}]}],"pos":[4300,4729],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Version\"></xref> expressing the major and minor build and revision numbers of the latest version.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> expressing the major and minor build and revision numbers of the latest version.","source":"The <xref href=\"System.Version\"></xref> expressing the major and minor build and revision numbers of the latest version."}],"pos":[4851,4972],"yaml":true},{"content":"Gets a value indicating whether the update must be installed.","nodes":[{"pos":[0,61],"content":"Gets a value indicating whether the update must be installed.","nodes":[{"content":"Gets a value indicating whether the update must be installed.","pos":[0,61]}]}],"pos":[6083,6145],"yaml":true},{"content":"When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.","nodes":[{"pos":[0,339],"content":"When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.","nodes":[{"content":"When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.","pos":[0,339],"nodes":[{"content":"When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately.","pos":[0,160]},{"content":"You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.","pos":[161,339]}]}]}],"pos":[6156,6496],"yaml":true,"extradata":"MT"},{"content":"`true` if the update is required; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the update is required; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the update is required; otherwise, `false`."}],"pos":[7160,7216],"yaml":true},{"content":"Gets the minimum version that the user must have installed on the computer.","nodes":[{"pos":[0,75],"content":"Gets the minimum version that the user must have installed on the computer.","nodes":[{"content":"Gets the minimum version that the user must have installed on the computer.","pos":[0,75]}]}],"pos":[8363,8439],"yaml":true},{"content":"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months. Use  \n  \n <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> to determine if the user has not upgraded the application in a while, and has missed one or more required updates.","nodes":[{"pos":[0,136],"content":"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months. Use","nodes":[{"content":"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months. Use","pos":[0,136],"nodes":[{"content":"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months.","pos":[0,132]},{"content":"Use","pos":[133,136]}]}]},{"pos":[143,336],"content":"<xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> to determine if the user has not upgraded the application in a while, and has missed one or more required updates.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A&gt;</ph> to determine if the user has not upgraded the application in a while, and has missed one or more required updates.","pos":[0,193],"source":"<xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> to determine if the user has not upgraded the application in a while, and has missed one or more required updates."}]}],"pos":[8450,8791],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Version\"></xref> expressing the least version that the user must install.","nodes":[{"pos":[0,94],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> expressing the least version that the user must install.","source":"A <xref href=\"System.Version\"></xref> expressing the least version that the user must install."}],"pos":[9461,9556],"yaml":true},{"content":"There is no new version available to install.","nodes":[{"pos":[0,45],"content":"There is no new version available to install.","nodes":[{"content":"There is no new version available to install.","pos":[0,45]}]}],"pos":[9762,9808],"yaml":true},{"content":"Gets whether an uninstalled update is available.","nodes":[{"pos":[0,48],"content":"Gets whether an uninstalled update is available.","nodes":[{"content":"Gets whether an uninstalled update is available.","pos":[0,48]}]}],"pos":[10820,10869],"yaml":true},{"content":"`true` if new version of the application is available; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if new version of the application is available; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if new version of the application is available; otherwise, `false`."}],"pos":[11505,11582],"yaml":true},{"content":"Gets the size of the available update.","nodes":[{"pos":[0,38],"content":"Gets the size of the available update.","nodes":[{"content":"Gets the size of the available update.","pos":[0,38]}]}],"pos":[12686,12725],"yaml":true},{"content":"An <xref href=\"System.Int64\"></xref> describing the size, in bytes, of the available update. If no update is available, returns 0.","nodes":[{"pos":[0,130],"content":"An <xref href=\"System.Int64\"></xref> describing the size, in bytes, of the available update. If no update is available, returns 0.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> describing the size, in bytes, of the available update.","pos":[0,92],"source":"An <xref href=\"System.Int64\"></xref> describing the size, in bytes, of the available update."},{"content":"If no update is available, returns 0.","pos":[93,130]}]}],"pos":[12841,12972],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Deployment.Application.UpdateCheckInfo\n  commentId: T:System.Deployment.Application.UpdateCheckInfo\n  id: UpdateCheckInfo\n  children:\n  - System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n  - System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n  - System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n  - System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n  - System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n  langs:\n  - csharp\n  name: UpdateCheckInfo\n  nameWithType: UpdateCheckInfo\n  fullName: System.Deployment.Application.UpdateCheckInfo\n  type: Class\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Represents detailed update information obtained through a call to <xref href=\"System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate\"></xref>.\n  remarks: \"With <xref:System.Deployment.Application.UpdateCheckInfo>, you can decide whether to upgrade your ClickOnce application based on information about the newest version. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> will return a Boolean value indicating whether there is a new update at all. The <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> property provides the version number of the new version, while <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> provides the earliest version that the user should have installed. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresses whether the latest available update is required of the user. Finally, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresses the total size of the update.  \\n  \\n> [!NOTE]\\n>  Visual Studio adds the `<deploymentProvider>` element to the manifest only if the application is set to check for updates, so you either have to check **The application should check for updates** or specify an update URL in **Update location** in the [Application Updates Dialog Box](http://msdn.microsoft.com/en-us/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).\"\n  example:\n  - \"The following code example uses <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> to determine if there is a new application update, and <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> to determine whether to ask the user to install the update.  \\n  \\n [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]\\n [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]\\n [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]\"\n  syntax:\n    content: public class UpdateCheckInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n  commentId: P:System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n  id: AvailableVersion\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: AvailableVersion\n  nameWithType: UpdateCheckInfo.AvailableVersion\n  fullName: UpdateCheckInfo.AvailableVersion\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets the version number of the latest uninstalled version.\n  remarks: You can use <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> to decide whether to install the update based on the severity of the update. For example, if only the <xref:System.Version.Build%2A> or <xref:System.Version.Revision%2A> version properties have changed, your application may not need to update until either the <xref:System.Version.Minor%2A> or <xref:System.Version.Major%2A> properties change.\n  syntax:\n    content: public Version AvailableVersion { get; }\n    return:\n      type: System.Version\n      description: The <xref href=\"System.Version\"></xref> expressing the major and minor build and revision numbers of the latest version.\n  overload: System.Deployment.Application.UpdateCheckInfo.AvailableVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n  commentId: P:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n  id: IsUpdateRequired\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: IsUpdateRequired\n  nameWithType: UpdateCheckInfo.IsUpdateRequired\n  fullName: UpdateCheckInfo.IsUpdateRequired\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets a value indicating whether the update must be installed.\n  remarks: When you deploy an update to your ClickOnce application, you can mark it as a required update, signaling to your application that it should upgrade immediately. You want to mark the application if the latest version contains a critical update, or if it is incompatible with file formats or back-end data sources used by the former version.\n  example:\n  - \"The following code example uses <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> to determine whether to ask the user to install the update, or to install it without prompting.  \\n  \\n [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]\\n [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]\\n [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]\"\n  syntax:\n    content: public bool IsUpdateRequired { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the update is required; otherwise, `false`.'\n  overload: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n  commentId: P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n  id: MinimumRequiredVersion\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: MinimumRequiredVersion\n  nameWithType: UpdateCheckInfo.MinimumRequiredVersion\n  fullName: UpdateCheckInfo.MinimumRequiredVersion\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets the minimum version that the user must have installed on the computer.\n  remarks: \"Applications can miss required updates when the user takes on a special assignment or is away from the computer for weeks or months. Use  \\n  \\n <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> to determine if the user has not upgraded the application in a while, and has missed one or more required updates.\"\n  example:\n  - \"The following code example demonstrates displaying the <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> property to the user when there is a required update available.  \\n  \\n [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]\\n [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]\\n [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]\"\n  syntax:\n    content: public Version MinimumRequiredVersion { get; }\n    return:\n      type: System.Version\n      description: A <xref href=\"System.Version\"></xref> expressing the least version that the user must install.\n  overload: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is no new version available to install.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n  commentId: P:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n  id: UpdateAvailable\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: UpdateAvailable\n  nameWithType: UpdateCheckInfo.UpdateAvailable\n  fullName: UpdateCheckInfo.UpdateAvailable\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets whether an uninstalled update is available.\n  remarks: ''\n  example:\n  - \"The following code example inspects <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> to determine whether there is an update to install.  \\n  \\n [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]\\n [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]\\n [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]\"\n  syntax:\n    content: public bool UpdateAvailable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if new version of the application is available; otherwise, `false`.'\n  overload: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n  commentId: P:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n  id: UpdateSizeBytes\n  parent: System.Deployment.Application.UpdateCheckInfo\n  langs:\n  - csharp\n  name: UpdateSizeBytes\n  nameWithType: UpdateCheckInfo.UpdateSizeBytes\n  fullName: UpdateCheckInfo.UpdateSizeBytes\n  type: Property\n  assemblies:\n  - System.Deployment\n  namespace: System.Deployment.Application\n  summary: Gets the size of the available update.\n  syntax:\n    content: public long UpdateSizeBytes { get; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> describing the size, in bytes, of the available update. If no update is available, returns 0.\n  overload: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Deployment.Application.UpdateCheckInfo.AvailableVersion\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: AvailableVersion\n  nameWithType: UpdateCheckInfo.AvailableVersion\n  fullName: UpdateCheckInfo.AvailableVersion\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: IsUpdateRequired\n  nameWithType: UpdateCheckInfo.IsUpdateRequired\n  fullName: UpdateCheckInfo.IsUpdateRequired\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: MinimumRequiredVersion\n  nameWithType: UpdateCheckInfo.MinimumRequiredVersion\n  fullName: UpdateCheckInfo.MinimumRequiredVersion\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: UpdateAvailable\n  nameWithType: UpdateCheckInfo.UpdateAvailable\n  fullName: UpdateCheckInfo.UpdateAvailable\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: UpdateSizeBytes\n  nameWithType: UpdateCheckInfo.UpdateSizeBytes\n  fullName: UpdateCheckInfo.UpdateSizeBytes\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Deployment.Application.UpdateCheckInfo.AvailableVersion*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: AvailableVersion\n  nameWithType: UpdateCheckInfo.AvailableVersion\n  fullName: UpdateCheckInfo.AvailableVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n- uid: System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: IsUpdateRequired\n  nameWithType: UpdateCheckInfo.IsUpdateRequired\n  fullName: UpdateCheckInfo.IsUpdateRequired\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n- uid: System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: MinimumRequiredVersion\n  nameWithType: UpdateCheckInfo.MinimumRequiredVersion\n  fullName: UpdateCheckInfo.MinimumRequiredVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateAvailable*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: UpdateAvailable\n  nameWithType: UpdateCheckInfo.UpdateAvailable\n  fullName: UpdateCheckInfo.UpdateAvailable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n- uid: System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes*\n  parent: System.Deployment.Application.UpdateCheckInfo\n  isExternal: false\n  name: UpdateSizeBytes\n  nameWithType: UpdateCheckInfo.UpdateSizeBytes\n  fullName: UpdateCheckInfo.UpdateSizeBytes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Deployment.Application/UpdateCheckInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}