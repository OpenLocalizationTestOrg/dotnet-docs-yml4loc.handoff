{"nodes":[{"content":"The <xref href=\"System.DirectoryServices.Protocols.BerConverter\"></xref> class encodes and decodes structured data using basic encoding rules (BER).","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.BerConverter\"&gt;&lt;/xref&gt;</ph> class encodes and decodes structured data using basic encoding rules (BER).","source":"The <xref href=\"System.DirectoryServices.Protocols.BerConverter\"></xref> class encodes and decodes structured data using basic encoding rules (BER)."}],"pos":[619,768],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\"></xref> method decodes a binary representation of the data, using BER, to retrieve structured data.","nodes":[{"pos":[0,200],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\"&gt;&lt;/xref&gt;</ph> method decodes a binary representation of the data, using BER, to retrieve structured data.","source":"The <xref href=\"System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\"></xref> method decodes a binary representation of the data, using BER, to retrieve structured data."}],"pos":[2285,2486],"yaml":true},{"content":"The format string.","nodes":[{"pos":[0,18],"content":"The format string.","nodes":[{"content":"The format string.","pos":[0,18]}]}],"pos":[2648,2667],"yaml":true},{"content":"An array of BER data.","nodes":[{"pos":[0,21],"content":"An array of BER data.","nodes":[{"content":"An array of BER data.","pos":[0,21]}]}],"pos":[2728,2750],"yaml":true},{"content":"The decoded data.","nodes":[{"pos":[0,17],"content":"The decoded data.","nodes":[{"content":"The decoded data.","pos":[0,17]}]}],"pos":[2809,2827],"yaml":true},{"content":"The <code>format</code> parameter contains a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,88],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"The <code>format</code> parameter contains a null reference (`Nothing` in Visual Basic)."}],"pos":[3011,3100],"yaml":true},{"content":"The <code>format</code> parameter contains an undefined character.","nodes":[{"pos":[0,66],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains an undefined character.","source":"The <code>format</code> parameter contains an undefined character."}],"pos":[3194,3261],"yaml":true},{"content":"The underlying decoding fails. The decoding rules include the following.  \n  \n <table><thead><tr><th> Code  \n  \n </th><th> Corresponding Result  \n  \n </th></tr></thead><tbody><tr><td> '{' '}' '[' ']' 'n' 'x'  \n  \n </td><td> No corresponding result  \n  \n </td></tr><tr><td> 'i' 'e'  \n  \n </td><td> int  \n  \n </td></tr><tr><td> 'b'  \n  \n </td><td> bool  \n  \n </td></tr><tr><td> 'a'  \n  \n </td><td> string  \n  \n </td></tr><tr><td> 'O'  \n  \n </td><td> byte[]  \n  \n </td></tr><tr><td> 'B'  \n  \n </td><td> byte[] containing bit strings  \n  \n </td></tr><tr><td> 'v'  \n  \n </td><td> string[]  \n  \n </td></tr><tr><td> 'V'  \n  \n </td><td> byte[][]  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,72],"content":"The underlying decoding fails. The decoding rules include the following.","nodes":[{"content":"The underlying decoding fails. The decoding rules include the following.","pos":[0,72],"nodes":[{"content":"The underlying decoding fails.","pos":[0,30]},{"content":"The decoding rules include the following.","pos":[31,72]}]}]},{"pos":[79,671],"content":"<table><thead><tr><th> Code  \n  \n </th><th> Corresponding Result  \n  \n </th></tr></thead><tbody><tr><td> '{' '}' '[' ']' 'n' 'x'  \n  \n </td><td> No corresponding result  \n  \n </td></tr><tr><td> 'i' 'e'  \n  \n </td><td> int  \n  \n </td></tr><tr><td> 'b'  \n  \n </td><td> bool  \n  \n </td></tr><tr><td> 'a'  \n  \n </td><td> string  \n  \n </td></tr><tr><td> 'O'  \n  \n </td><td> byte[]  \n  \n </td></tr><tr><td> 'B'  \n  \n </td><td> byte[] containing bit strings  \n  \n </td></tr><tr><td> 'v'  \n  \n </td><td> string[]  \n  \n </td></tr><tr><td> 'V'  \n  \n </td><td> byte[][]  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Code","pos":[23,32],"source":" Code  \n  \n "},{"content":"Corresponding Result","pos":[44,69],"source":" Corresponding Result  \n  \n "},{"content":"'{' '}' '[' ']' 'n' 'x'","pos":[105,133],"source":" '{' '}' '[' ']' 'n' 'x'  \n  \n "},{"content":"No corresponding result","pos":[145,173],"source":" No corresponding result  \n  \n "},{"content":"'i' 'e'","pos":[194,206],"source":" 'i' 'e'  \n  \n "},{"content":"int","pos":[218,226],"source":" int  \n  \n "},{"content":"'b'","pos":[247,255],"source":" 'b'  \n  \n "},{"content":"bool","pos":[267,276],"source":" bool  \n  \n "},{"content":"'a'","pos":[297,305],"source":" 'a'  \n  \n "},{"content":"string","pos":[317,328],"source":" string  \n  \n "},{"content":"'O'","pos":[349,357],"source":" 'O'  \n  \n "},{"content":"byte[]","pos":[369,380],"source":" byte[]  \n  \n "},{"content":"'B'","pos":[401,409],"source":" 'B'  \n  \n "},{"content":"byte[] containing bit strings","pos":[421,455],"source":" byte[] containing bit strings  \n  \n "},{"content":"'v'","pos":[476,484],"source":" 'v'  \n  \n "},{"content":"string[]","pos":[496,509],"source":" string[]  \n  \n "},{"content":"'V'","pos":[530,538],"source":" 'V'  \n  \n "},{"content":"byte[][]","pos":[550,563],"source":" byte[][]  \n  \n "}]}],"pos":[3421,4132],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\"></xref> method encodes structured data, using BER, to retrieve a binary representation of the data.","nodes":[{"pos":[0,202],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\"&gt;&lt;/xref&gt;</ph> method encodes structured data, using BER, to retrieve a binary representation of the data.","source":"The <xref href=\"System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\"></xref> method encodes structured data, using BER, to retrieve a binary representation of the data."}],"pos":[5261,5464],"yaml":true},{"content":"The following are valid format characters.  \n  \n Encoding rules:  \n  \n|Code|Corresponding Argument|  \n|----------|----------------------------|  \n|'{' '}' '[' ']' 'n'|No corresponding argument|  \n|'t' 'i' 'e'|int|  \n|'a'|Octet string|  \n|'b'|bool|  \n|'s'|string|  \n|'o' 'X'|byte[]|  \n|'v'|string[]|  \n|'V'|byte[][]|  \n  \n> [!NOTE]\n>  'v' and 'V' are special in that a double {} is required. For example, use {{v}} and {{V}}.  \n  \n## Exceptions  \n  \n|Exception|Condition|  \n|---------------|---------------|  \n|ArgumentNullException|`format` is a null reference (`Nothing` in Visual Basic).|  \n|ArgumentException|This exception occurs in any one of the following conditions:<br /><br /> -   There are not enough arguments for the format string.<br />-   The format string argument is incorrect.<br />-   The format string contains an undefined character.|  \n|BerConversionException|Error processing return value.|","nodes":[{"pos":[0,42],"content":"The following are valid format characters.","nodes":[{"content":"The following are valid format characters.","pos":[0,42]}]},{"pos":[49,64],"content":"Encoding rules:","nodes":[{"content":"Encoding rules:","pos":[0,15]}]},{"pos":[71,75],"content":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"pos":[76,98],"content":"Corresponding Argument","nodes":[{"content":"Corresponding Argument","pos":[0,22]}]},{"pos":[147,166],"content":"'{' '}' '[' ']' 'n'","nodes":[{"content":"'{' '}' '[' ']' 'n'","pos":[0,19]}]},{"pos":[167,192],"content":"No corresponding argument","nodes":[{"content":"No corresponding argument","pos":[0,25]}]},{"pos":[197,208],"content":"'t' 'i' 'e'","nodes":[{"content":"'t' 'i' 'e'","pos":[0,11]}]},{"pos":[209,212],"content":"int","nodes":[{"content":"int","pos":[0,3]}]},{"pos":[217,220],"content":"'a'","nodes":[{"content":"'a'","pos":[0,3]}]},{"pos":[221,233],"content":"Octet string","nodes":[{"content":"Octet string","pos":[0,12]}]},{"pos":[238,241],"content":"'b'","nodes":[{"content":"'b'","pos":[0,3]}]},{"pos":[242,246],"content":"bool","nodes":[{"content":"bool","pos":[0,4]}]},{"pos":[251,254],"content":"'s'","nodes":[{"content":"'s'","pos":[0,3]}]},{"pos":[255,261],"content":"string","nodes":[{"content":"string","pos":[0,6]}]},{"pos":[266,273],"content":"'o' 'X'","nodes":[{"content":"'o' 'X'","pos":[0,7]}]},{"pos":[274,280],"content":"byte[]","nodes":[{"content":"byte[]","pos":[0,6]}]},{"pos":[285,288],"content":"'v'","nodes":[{"content":"'v'","pos":[0,3]}]},{"pos":[289,297],"content":"string[]","nodes":[{"content":"string[]","pos":[0,8]}]},{"pos":[302,305],"content":"'V'","nodes":[{"content":"'V'","pos":[0,3]}]},{"pos":[306,314],"content":"byte[][]","nodes":[{"content":"byte[][]","pos":[0,8]}]},{"pos":[323,424],"content":"[!NOTE]\n 'v' and 'V' are special in that a double {} is required. For example, use {{v}} and {{V}}.","leadings":["","> "],"nodes":[{"content":" 'v' and 'V' are special in that a double {} is required. For example, use {{v}} and {{V}}.","pos":[8,99],"nodes":[{"content":"'v' and 'V' are special in that a double {} is required.","pos":[1,57]},{"content":"For example, use {{v}} and {{V}}.","pos":[58,91]}]}]},{"pos":[433,443],"content":"Exceptions","linkify":"Exceptions","nodes":[{"content":"Exceptions","pos":[0,10]}]},{"pos":[450,459],"content":"Exception","nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[460,469],"content":"Condition","nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[510,531],"content":"ArgumentNullException","nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[532,589],"content":"<ph id=\"ph1\">`format`</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"`format` is a null reference (`Nothing` in Visual Basic)."},{"pos":[594,611],"content":"ArgumentException","nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[612,853],"content":"This exception occurs in any one of the following conditions:<br /><br /> -   There are not enough arguments for the format string.<br />-   The format string argument is incorrect.<br />-   The format string contains an undefined character.","nodes":[{"content":"This exception occurs in any one of the following conditions:","pos":[0,61]},{"content":"-   There are not enough arguments for the format string.","pos":[74,131]},{"content":"-   The format string argument is incorrect.","pos":[137,181]},{"content":"-   The format string contains an undefined character.","pos":[187,241]}]},{"pos":[858,880],"content":"BerConversionException","nodes":[{"content":"BerConversionException","pos":[0,22]}]},{"pos":[881,911],"content":"Error processing return value.","nodes":[{"content":"Error processing return value.","pos":[0,30]}]}],"pos":[5475,6414],"yaml":true,"extradata":"MT"},{"content":"The format string.","nodes":[{"pos":[0,18],"content":"The format string.","nodes":[{"content":"The format string.","pos":[0,18]}]}],"pos":[6576,6595],"yaml":true},{"content":"An array of formatted data.","nodes":[{"pos":[0,27],"content":"An array of formatted data.","nodes":[{"content":"An array of formatted data.","pos":[0,27]}]}],"pos":[6658,6686],"yaml":true},{"content":"An array of BER-encoded data.","nodes":[{"pos":[0,29],"content":"An array of BER-encoded data.","nodes":[{"content":"An array of BER-encoded data.","pos":[0,29]}]}],"pos":[6743,6773],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.Protocols.BerConverter\n  commentId: T:System.DirectoryServices.Protocols.BerConverter\n  id: BerConverter\n  children:\n  - System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\n  - System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\n  langs:\n  - csharp\n  name: BerConverter\n  nameWithType: BerConverter\n  fullName: System.DirectoryServices.Protocols.BerConverter\n  type: Class\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.BerConverter\"></xref> class encodes and decodes structured data using basic encoding rules (BER).\n  syntax:\n    content: public sealed class BerConverter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/BerConverter.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\n  commentId: M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\n  id: Decode(System.String,System.Byte[])\n  parent: System.DirectoryServices.Protocols.BerConverter\n  langs:\n  - csharp\n  name: Decode(String, Byte[])\n  nameWithType: BerConverter.Decode(String, Byte[])\n  fullName: BerConverter.Decode(String, Byte[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\"></xref> method decodes a binary representation of the data, using BER, to retrieve structured data.\n  syntax:\n    content: public static object[] Decode (string format, byte[] value);\n    parameters:\n    - id: format\n      type: System.String\n      description: The format string.\n    - id: value\n      type: System.Byte[]\n      description: An array of BER data.\n    return:\n      type: System.Object[]\n      description: The decoded data.\n  overload: System.DirectoryServices.Protocols.BerConverter.Decode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>format</code> parameter contains a null reference (`Nothing` in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>format</code> parameter contains an undefined character.\n  - type: System.DirectoryServices.Protocols.BerConversionException\n    commentId: T:System.DirectoryServices.Protocols.BerConversionException\n    description: \"The underlying decoding fails. The decoding rules include the following.  \\n  \\n <table><thead><tr><th> Code  \\n  \\n </th><th> Corresponding Result  \\n  \\n </th></tr></thead><tbody><tr><td> '{' '}' '[' ']' 'n' 'x'  \\n  \\n </td><td> No corresponding result  \\n  \\n </td></tr><tr><td> 'i' 'e'  \\n  \\n </td><td> int  \\n  \\n </td></tr><tr><td> 'b'  \\n  \\n </td><td> bool  \\n  \\n </td></tr><tr><td> 'a'  \\n  \\n </td><td> string  \\n  \\n </td></tr><tr><td> 'O'  \\n  \\n </td><td> byte[]  \\n  \\n </td></tr><tr><td> 'B'  \\n  \\n </td><td> byte[] containing bit strings  \\n  \\n </td></tr><tr><td> 'v'  \\n  \\n </td><td> string[]  \\n  \\n </td></tr><tr><td> 'V'  \\n  \\n </td><td> byte[][]  \\n  \\n </td></tr></tbody></table>\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/BerConverter.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\n  commentId: M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\n  id: Encode(System.String,System.Object[])\n  parent: System.DirectoryServices.Protocols.BerConverter\n  langs:\n  - csharp\n  name: Encode(String, Object[])\n  nameWithType: BerConverter.Encode(String, Object[])\n  fullName: BerConverter.Encode(String, Object[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The <xref href=\"System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\"></xref> method encodes structured data, using BER, to retrieve a binary representation of the data.\n  remarks: \"The following are valid format characters.  \\n  \\n Encoding rules:  \\n  \\n|Code|Corresponding Argument|  \\n|----------|----------------------------|  \\n|'{' '}' '[' ']' 'n'|No corresponding argument|  \\n|'t' 'i' 'e'|int|  \\n|'a'|Octet string|  \\n|'b'|bool|  \\n|'s'|string|  \\n|'o' 'X'|byte[]|  \\n|'v'|string[]|  \\n|'V'|byte[][]|  \\n  \\n> [!NOTE]\\n>  'v' and 'V' are special in that a double {} is required. For example, use {{v}} and {{V}}.  \\n  \\n## Exceptions  \\n  \\n|Exception|Condition|  \\n|---------------|---------------|  \\n|ArgumentNullException|`format` is a null reference (`Nothing` in Visual Basic).|  \\n|ArgumentException|This exception occurs in any one of the following conditions:<br /><br /> -   There are not enough arguments for the format string.<br />-   The format string argument is incorrect.<br />-   The format string contains an undefined character.|  \\n|BerConversionException|Error processing return value.|\"\n  syntax:\n    content: public static byte[] Encode (string format, object[] value);\n    parameters:\n    - id: format\n      type: System.String\n      description: The format string.\n    - id: value\n      type: System.Object[]\n      description: An array of formatted data.\n    return:\n      type: System.Byte[]\n      description: An array of BER-encoded data.\n  overload: System.DirectoryServices.Protocols.BerConverter.Encode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/BerConverter.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.DirectoryServices.Protocols.BerConversionException\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: BerConversionException\n  nameWithType: BerConversionException\n  fullName: System.DirectoryServices.Protocols.BerConversionException\n- uid: System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\n  parent: System.DirectoryServices.Protocols.BerConverter\n  isExternal: false\n  name: Decode(String, Byte[])\n  nameWithType: BerConverter.Decode(String, Byte[])\n  fullName: BerConverter.Decode(String, Byte[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\n  parent: System.DirectoryServices.Protocols.BerConverter\n  isExternal: false\n  name: Encode(String, Object[])\n  nameWithType: BerConverter.Encode(String, Object[])\n  fullName: BerConverter.Encode(String, Object[])\n- uid: System.DirectoryServices.Protocols.BerConverter.Decode*\n  parent: System.DirectoryServices.Protocols.BerConverter\n  isExternal: false\n  name: Decode\n  nameWithType: BerConverter.Decode\n  fullName: BerConverter.Decode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/BerConverter.xml\n- uid: System.DirectoryServices.Protocols.BerConverter.Encode*\n  parent: System.DirectoryServices.Protocols.BerConverter\n  isExternal: false\n  name: Encode\n  nameWithType: BerConverter.Encode\n  fullName: BerConverter.Encode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/BerConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}