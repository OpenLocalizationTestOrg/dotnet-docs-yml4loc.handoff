{"nodes":[{"content":"Creates an <xref href=\"System.Security.Cryptography.RSA\"></xref> PKCS #1 version 1.5 signature.","nodes":[{"pos":[0,95],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> PKCS #1 version 1.5 signature.","source":"Creates an <xref href=\"System.Security.Cryptography.RSA\"></xref> PKCS #1 version 1.5 signature."}],"pos":[1017,1115],"yaml":true},{"content":"This class is used to create a digital signature using the <xref:System.Security.Cryptography.RSA> algorithm.  \n  \n Use <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter> to verify digital signatures with the <xref:System.Security.Cryptography.RSA> algorithm.","nodes":[{"pos":[0,109],"content":"This class is used to create a digital signature using the <xref:System.Security.Cryptography.RSA> algorithm.","nodes":[{"content":"This class is used to create a digital signature using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> algorithm.","pos":[0,109],"source":"This class is used to create a digital signature using the <xref:System.Security.Cryptography.RSA> algorithm."}]},{"pos":[116,273],"content":"Use <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter> to verify digital signatures with the <xref:System.Security.Cryptography.RSA> algorithm.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter&gt;</ph> to verify digital signatures with the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> algorithm.","pos":[0,157],"source":"Use <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter> to verify digital signatures with the <xref:System.Security.Cryptography.RSA> algorithm."}]}],"pos":[1126,1404],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAPKCS1SignatureFormatter\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSAPKCS1SignatureFormatter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAPKCS1SignatureFormatter\"></xref> class."}],"pos":[4058,4176],"yaml":true},{"content":"Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey%2A> and <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the key and hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.","nodes":[{"pos":[0,295],"content":"Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey%2A> and <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the key and hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A&gt;</ph> to set the key and hash algorithm before calling <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A&gt;</ph>.","pos":[0,295],"source":"Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey%2A> and <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the key and hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>."}]}],"pos":[4187,4483],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAPKCS1SignatureFormatter\"></xref> class with the specified key.","nodes":[{"pos":[0,140],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSAPKCS1SignatureFormatter\"&gt;&lt;/xref&gt;</ph> class with the specified key.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAPKCS1SignatureFormatter\"></xref> class with the specified key."}],"pos":[6194,6335],"yaml":true},{"content":"Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.","nodes":[{"pos":[0,210],"content":"Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A&gt;</ph> to set the hash algorithm before calling <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A&gt;</ph>.","pos":[0,210],"source":"Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>."}]}],"pos":[6346,6557],"yaml":true,"extradata":"MT"},{"content":"The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key.","nodes":[{"pos":[0,111],"content":"The instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm that holds the private key.","source":"The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key."}],"pos":[6780,6892],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[7083,7111],"yaml":true},{"content":"Creates the <xref href=\"System.Security.Cryptography.RSA\"></xref> PKCS #1 signature for the specified data.","nodes":[{"pos":[0,107],"content":"Creates the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> PKCS #1 signature for the specified data.","source":"Creates the <xref href=\"System.Security.Cryptography.RSA\"></xref> PKCS #1 signature for the specified data."}],"pos":[8496,8606],"yaml":true},{"content":"You must specify a key and a hash algorithm before calling this method.","nodes":[{"pos":[0,71],"content":"You must specify a key and a hash algorithm before calling this method.","nodes":[{"content":"You must specify a key and a hash algorithm before calling this method.","pos":[0,71]}]}],"pos":[8617,8689],"yaml":true,"extradata":"MT"},{"content":"The data to be signed.","nodes":[{"pos":[0,22],"content":"The data to be signed.","nodes":[{"content":"The data to be signed.","pos":[0,22]}]}],"pos":[9378,9401],"yaml":true},{"content":"The digital signature for <code>rgbHash</code>.","nodes":[{"pos":[0,47],"content":"The digital signature for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbHash</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The digital signature for <code>rgbHash</code>."}],"pos":[9458,9506],"yaml":true},{"content":"The key is `null`.  \n  \n -or-  \n  \n The hash algorithm is `null`.","nodes":[{"pos":[0,18],"content":"The key is <ph id=\"ph1\">`null`</ph>.","source":"The key is `null`."},{"pos":[25,29],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[36,65],"content":"The hash algorithm is <ph id=\"ph1\">`null`</ph>.","source":"The hash algorithm is `null`."}],"pos":[9791,9863],"yaml":true},{"content":"The <code>rgbHash</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbHash</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rgbHash</code> parameter is `null`."}],"pos":[9965,10011],"yaml":true},{"content":"Sets the hash algorithm to use for creating the signature.","nodes":[{"pos":[0,58],"content":"Sets the hash algorithm to use for creating the signature.","nodes":[{"content":"Sets the hash algorithm to use for creating the signature.","pos":[0,58]}]}],"pos":[11402,11461],"yaml":true},{"content":"You must set a hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.","nodes":[{"pos":[0,127],"content":"You must set a hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.","nodes":[{"content":"You must set a hash algorithm before calling <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A&gt;</ph>.","pos":[0,127],"source":"You must set a hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>."}]}],"pos":[11472,11600],"yaml":true,"extradata":"MT"},{"content":"The name of the hash algorithm to use for creating the signature.","nodes":[{"pos":[0,65],"content":"The name of the hash algorithm to use for creating the signature.","nodes":[{"content":"The name of the hash algorithm to use for creating the signature.","pos":[0,65]}]}],"pos":[11758,11824],"yaml":true},{"content":"Sets the private key to use for creating the signature.","nodes":[{"pos":[0,55],"content":"Sets the private key to use for creating the signature.","nodes":[{"content":"Sets the private key to use for creating the signature.","pos":[0,55]}]}],"pos":[13402,13458],"yaml":true},{"content":"You must set a key before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.","nodes":[{"pos":[0,116],"content":"You must set a key before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.","nodes":[{"content":"You must set a key before calling <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A&gt;</ph>.","pos":[0,116],"source":"You must set a key before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>."}]}],"pos":[13469,13586],"yaml":true,"extradata":"MT"},{"content":"The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key.","nodes":[{"pos":[0,111],"content":"The instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm that holds the private key.","source":"The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key."}],"pos":[13803,13915],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[14107,14135],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  commentId: T:System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  id: RSAPKCS1SignatureFormatter\n  children:\n  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor\n  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(System.Byte[])\n  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(System.String)\n  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: RSAPKCS1SignatureFormatter\n  nameWithType: RSAPKCS1SignatureFormatter\n  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: 'Creates an <xref href=\"System.Security.Cryptography.RSA\"></xref> PKCS #1 version 1.5 signature.'\n  remarks: \"This class is used to create a digital signature using the <xref:System.Security.Cryptography.RSA> algorithm.  \\n  \\n Use <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter> to verify digital signatures with the <xref:System.Security.Cryptography.RSA> algorithm.\"\n  example:\n  - \"The following example demonstrates how to create a PKCS #1 version 1.5 signature.  \\n  \\n [!code-csharp[System.Security.Cryptography.RSAPKCS1SignatureFormatterExample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1signatureformatterexample/cs/program.cs#1)]\\n [!code-vb[System.Security.Cryptography.RSAPKCS1SignatureFormatterExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1signatureformatterexample/vb/program.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class RSAPKCS1SignatureFormatter : System.Security.Cryptography.AsymmetricSignatureFormatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricSignatureFormatter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor\n  commentId: M:System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  langs:\n  - csharp\n  name: RSAPKCS1SignatureFormatter()\n  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter()\n  fullName: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAPKCS1SignatureFormatter\"></xref> class.\n  remarks: Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey%2A> and <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the key and hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.\n  syntax:\n    content: public RSAPKCS1SignatureFormatter ();\n    parameters: []\n  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  langs:\n  - csharp\n  name: RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)\n  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)\n  fullName: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSAPKCS1SignatureFormatter\"></xref> class with the specified key.\n  remarks: Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.\n  syntax:\n    content: public RSAPKCS1SignatureFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key.\n  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(System.Byte[])\n  commentId: M:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(System.Byte[])\n  id: CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  langs:\n  - csharp\n  name: CreateSignature(Byte[])\n  nameWithType: RSAPKCS1SignatureFormatter.CreateSignature(Byte[])\n  fullName: RSAPKCS1SignatureFormatter.CreateSignature(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: 'Creates the <xref href=\"System.Security.Cryptography.RSA\"></xref> PKCS #1 signature for the specified data.'\n  remarks: You must specify a key and a hash algorithm before calling this method.\n  example:\n  - \"The following example demonstrates how to create a PKCS #1 version 1.5 signature.  \\n  \\n [!code-csharp[System.Security.Cryptography.RSAPKCS1SignatureFormatterExample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1signatureformatterexample/cs/program.cs#1)]\\n [!code-vb[System.Security.Cryptography.RSAPKCS1SignatureFormatterExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1signatureformatterexample/vb/program.vb#1)]\"\n  syntax:\n    content: public override byte[] CreateSignature (byte[] rgbHash);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: The data to be signed.\n    return:\n      type: System.Byte[]\n      description: The digital signature for <code>rgbHash</code>.\n  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: \"The key is `null`.  \\n  \\n -or-  \\n  \\n The hash algorithm is `null`.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rgbHash</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(System.String)\n  commentId: M:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(System.String)\n  id: SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  langs:\n  - csharp\n  name: SetHashAlgorithm(String)\n  nameWithType: RSAPKCS1SignatureFormatter.SetHashAlgorithm(String)\n  fullName: RSAPKCS1SignatureFormatter.SetHashAlgorithm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Sets the hash algorithm to use for creating the signature.\n  remarks: You must set a hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.\n  syntax:\n    content: public override void SetHashAlgorithm (string strName);\n    parameters:\n    - id: strName\n      type: System.String\n      description: The name of the hash algorithm to use for creating the signature.\n  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: RSAPKCS1SignatureFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: RSAPKCS1SignatureFormatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Sets the private key to use for creating the signature.\n  remarks: You must set a key before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>.\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm that holds the private key.\n  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureFormatter\n  nameWithType: AsymmetricSignatureFormatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: RSAPKCS1SignatureFormatter()\n  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter()\n  fullName: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter()\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)\n  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)\n  fullName: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: CreateSignature(Byte[])\n  nameWithType: RSAPKCS1SignatureFormatter.CreateSignature(Byte[])\n  fullName: RSAPKCS1SignatureFormatter.CreateSignature(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: SetHashAlgorithm(String)\n  nameWithType: RSAPKCS1SignatureFormatter.SetHashAlgorithm(String)\n  fullName: RSAPKCS1SignatureFormatter.SetHashAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: RSAPKCS1SignatureFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: RSAPKCS1SignatureFormatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor*\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: RSAPKCS1SignatureFormatter\n  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter\n  fullName: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature*\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: CreateSignature\n  nameWithType: RSAPKCS1SignatureFormatter.CreateSignature\n  fullName: RSAPKCS1SignatureFormatter.CreateSignature\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm*\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: SetHashAlgorithm\n  nameWithType: RSAPKCS1SignatureFormatter.SetHashAlgorithm\n  fullName: RSAPKCS1SignatureFormatter.SetHashAlgorithm\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey*\n  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter\n  isExternal: false\n  name: SetKey\n  nameWithType: RSAPKCS1SignatureFormatter.SetKey\n  fullName: RSAPKCS1SignatureFormatter.SetKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSAPKCS1SignatureFormatter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  name: CreateSignature(HashAlgorithm)\n  nameWithType: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)\n  fullName: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)\n"}