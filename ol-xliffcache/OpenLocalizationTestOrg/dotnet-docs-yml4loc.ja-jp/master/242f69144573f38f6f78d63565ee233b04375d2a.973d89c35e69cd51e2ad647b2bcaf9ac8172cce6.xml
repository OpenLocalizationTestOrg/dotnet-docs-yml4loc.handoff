{"nodes":[{"content":"Describes an incoming HTTP request to an <xref href=\"System.Net.HttpListener\"></xref> object. This class cannot be inherited.","nodes":[{"pos":[0,125],"content":"Describes an incoming HTTP request to an <xref href=\"System.Net.HttpListener\"></xref> object. This class cannot be inherited.","nodes":[{"content":"Describes an incoming HTTP request to an <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,93],"source":"Describes an incoming HTTP request to an <xref href=\"System.Net.HttpListener\"></xref> object."},{"content":"This class cannot be inherited.","pos":[94,125]}]}],"pos":[2101,2227],"yaml":true},{"content":"When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client. The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.  \n  \n The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).  \n  \n To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.","nodes":[{"pos":[0,486],"content":"When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client. The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.","nodes":[{"content":"When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client. The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.","pos":[0,486],"nodes":[{"content":"When a client makes a request to a Uniform Resource Identifier (URI) handled by an <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> object, the <ph id=\"ph2\">&lt;xref:System.Net.HttpListener&gt;</ph> provides a <ph id=\"ph3\">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object that contains information about the sender, the request, and the response that is sent to the client.","pos":[0,314],"source":"When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName&gt;</ph> property returns the <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> object that describes the request.","pos":[315,486],"source":" The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request."}]}]},{"pos":[493,815],"content":"The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> object contains information about the request, such as the request <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerRequest.HttpMethod%2A&gt;</ph> string, <ph id=\"ph3\">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> string, and request body data (see the <ph id=\"ph4\">&lt;xref:System.Net.HttpListenerRequest.InputStream%2A&gt;</ph> property).","pos":[0,322],"source":"The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property)."}]},{"pos":[822,953],"content":"To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.","nodes":[{"content":"To reply to the request, you must get the associated response using the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext.Response%2A&gt;</ph> property.","pos":[0,131],"source":"To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property."}]}],"pos":[2238,3198],"yaml":true,"extradata":"MT"},{"content":"Gets the MIME types accepted by the client.","nodes":[{"pos":[0,43],"content":"Gets the MIME types accepted by the client.","nodes":[{"content":"Gets the MIME types accepted by the client.","pos":[0,43]}]}],"pos":[4945,4989],"yaml":true},{"content":"The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response. The `*/*` entry indicates that the client accepts any MIME type. For a detailed description of the `Accept` header, see RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).  \n  \n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"pos":[0,430],"content":"The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response. The `*/*` entry indicates that the client accepts any MIME type. For a detailed description of the `Accept` header, see RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).","nodes":[{"content":"The <ph id=\"ph1\">`Accept`</ph> header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, <ph id=\"ph2\">`image/jpeg`</ph>), which indicate the MIME types that the client is prepared to accept and process in a response.","pos":[0,230],"source":"The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response."},{"content":"The <ph id=\"ph1\">`*/*`</ph> entry indicates that the client accepts any MIME type.","pos":[231,295],"source":" The `*/*` entry indicates that the client accepts any MIME type."},{"content":"For a detailed description of the <ph id=\"ph1\">`Accept`</ph> header, see RFC 2616, available at <bpt id=\"p1\">[</bpt>http://www.rfc-editor.org<ept id=\"p1\">](http://www.rfc-editor.org/)</ept>.","pos":[296,430],"source":" For a detailed description of the `Accept` header, see RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/)."}]},{"pos":[437,533],"content":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"content":"For a complete list of request headers, see the <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.","pos":[0,96],"source":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration."}]}],"pos":[5000,5538],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> array that contains the type names specified in the request's `Accept` header or `null` if the client request did not include an `Accept` header.","nodes":[{"pos":[0,182],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> array that contains the type names specified in the request's <ph id=\"ph2\">`Accept`</ph> header or <ph id=\"ph3\">`null`</ph> if the client request did not include an <ph id=\"ph4\">`Accept`</ph> header.","source":"A <xref href=\"System.String\"></xref> array that contains the type names specified in the request's `Accept` header or `null` if the client request did not include an `Accept` header."}],"pos":[5862,6045],"yaml":true},{"content":"Begins an asynchronous request for the client's X.509 v.3 certificate.","nodes":[{"pos":[0,70],"content":"Begins an asynchronous request for the client's X.509 v.3 certificate.","nodes":[{"content":"Begins an asynchronous request for the client's X.509 v.3 certificate.","pos":[0,70]}]}],"pos":[7464,7535],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete.","nodes":[{"pos":[0,122],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the operation is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete."}],"pos":[7745,7868],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the callback delegate when the operation completes.","nodes":[{"pos":[0,145],"content":"A user-defined object that contains information about the operation. This object is passed to the callback delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation. This object is passed to the callback delegate when the operation completes.","pos":[0,145],"nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the callback delegate when the operation completes.","pos":[69,145]}]}]}],"pos":[7929,8075],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that indicates the status of the operation.","nodes":[{"pos":[0,87],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that indicates the status of the operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that indicates the status of the operation."}],"pos":[8138,8226],"yaml":true},{"content":"Gets an error code that identifies a problem with the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> provided by the client.","nodes":[{"pos":[0,160],"content":"Gets an error code that identifies a problem with the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> provided by the client.","source":"Gets an error code that identifies a problem with the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> provided by the client."}],"pos":[9466,9627],"yaml":true},{"content":"This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate. For more information about SSPI support for Schannel, see \"Creating a Secure Connection Using Schannel\" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).","nodes":[{"pos":[0,381],"content":"This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate. For more information about SSPI support for Schannel, see \"Creating a Secure Connection Using Schannel\" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).","nodes":[{"content":"This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.","pos":[0,172]},{"content":"For more information about SSPI support for Schannel, see \"Creating a Secure Connection Using Schannel\" in the Security documentation at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com/library<ept id=\"p1\">](http://msdn.microsoft.com/library)</ept>.","pos":[173,381],"source":" For more information about SSPI support for Schannel, see \"Creating a Secure Connection Using Schannel\" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."}]}],"pos":[9638,10020],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> value that contains a Windows error code.","nodes":[{"pos":[0,78],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that contains a Windows error code.","source":"An <xref href=\"System.Int32\"></xref> value that contains a Windows error code."}],"pos":[10498,10577],"yaml":true},{"content":"The client certificate has not been initialized yet by a call to the <xref href=\"System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\"></xref> or <xref href=\"System.Net.HttpListenerRequest.GetClientCertificate\"></xref> methods  \n  \n -or -  \n  \n The operation is still in progress.","nodes":[{"pos":[0,266],"content":"The client certificate has not been initialized yet by a call to the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpListenerRequest.GetClientCertificate\"&gt;&lt;/xref&gt;</ph> methods","source":"The client certificate has not been initialized yet by a call to the <xref href=\"System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\"></xref> or <xref href=\"System.Net.HttpListenerRequest.GetClientCertificate\"></xref> methods"},{"pos":[273,278],"content":"-or -","nodes":[{"content":"-or -","pos":[0,5]}]},{"pos":[285,320],"content":"The operation is still in progress.","nodes":[{"content":"The operation is still in progress.","pos":[0,35]}]}],"pos":[10768,11099],"yaml":true},{"content":"Gets the content encoding that can be used with data sent with the request","nodes":[{"pos":[0,74],"content":"Gets the content encoding that can be used with data sent with the request","nodes":[{"content":"Gets the content encoding that can be used with data sent with the request","pos":[0,74]}]}],"pos":[12210,12285],"yaml":true},{"content":"An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences. This property uses the charset value from the `Content-Type` header to determine the encoding. If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=fullName>.","nodes":[{"pos":[0,364],"content":"An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences. This property uses the charset value from the `Content-Type` header to determine the encoding. If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=fullName>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.","pos":[0,144],"source":"An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences."},{"content":"This property uses the charset value from the <ph id=\"ph1\">`Content-Type`</ph> header to determine the encoding.","pos":[145,239],"source":" This property uses the charset value from the `Content-Type` header to determine the encoding."},{"content":"If that information is not available, this property returns <ph id=\"ph1\">&lt;xref:System.Text.Encoding.Default%2A?displayProperty=fullName&gt;</ph>.","pos":[240,364],"source":" If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=fullName>."}]}],"pos":[12296,12661],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Text.Encoding\"></xref> object suitable for use with the data in the <xref href=\"System.Net.HttpListenerRequest.InputStream\"></xref> property.","nodes":[{"pos":[0,163],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> object suitable for use with the data in the <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpListenerRequest.InputStream\"&gt;&lt;/xref&gt;</ph> property.","source":"An <xref href=\"System.Text.Encoding\"></xref> object suitable for use with the data in the <xref href=\"System.Net.HttpListenerRequest.InputStream\"></xref> property."}],"pos":[13062,13226],"yaml":true},{"content":"Gets the length of the body data included in the request.","nodes":[{"pos":[0,57],"content":"Gets the length of the body data included in the request.","nodes":[{"content":"Gets the length of the body data included in the request.","pos":[0,57]}]}],"pos":[14414,14472],"yaml":true},{"content":"The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.  \n  \n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">`Content-Length`</ph> header expresses the length, in bytes, of the body data that accompanies the request.","source":"The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request."},{"pos":[113,209],"content":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"content":"For a complete list of request headers, see the <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.","pos":[0,96],"source":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration."}]}],"pos":[14483,14697],"yaml":true,"extradata":"MT"},{"content":"The value from the request's `Content-Length` header. This value is -1 if the content length is not known.","nodes":[{"pos":[0,106],"content":"The value from the request's `Content-Length` header. This value is -1 if the content length is not known.","nodes":[{"content":"The value from the request's <ph id=\"ph1\">`Content-Length`</ph> header.","pos":[0,53],"source":"The value from the request's `Content-Length` header."},{"content":"This value is -1 if the content length is not known.","pos":[54,106]}]}],"pos":[15087,15194],"yaml":true},{"content":"Gets the MIME type of the body data included in the request.","nodes":[{"pos":[0,60],"content":"Gets the MIME type of the body data included in the request.","nodes":[{"content":"Gets the MIME type of the body data included in the request.","pos":[0,60]}]}],"pos":[16358,16419],"yaml":true},{"content":"If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header. For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.  \n  \n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).  \n  \n The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.","nodes":[{"pos":[0,289],"content":"If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header. For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.","nodes":[{"content":"If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the <ph id=\"ph1\">`Content-Type`</ph> header.","pos":[0,157],"source":"If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header."},{"content":"For example, the default MIME type of data returned from a Web form using the <ph id=\"ph1\">`POST`</ph> method is <ph id=\"ph2\">`application/x-www-form-urlencoded`</ph>.","pos":[158,289],"source":" For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`."}]},{"pos":[296,475],"content":"For a complete list of request headers, see the <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration and RFC 2616, available at <bpt id=\"p1\">[</bpt>http://www.rfc-editor.org<ept id=\"p1\">](http://www.rfc-editor.org/)</ept>.","source":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/)."},{"pos":[482,601],"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.ContentType%2A&gt;</ph> is null when there is no <ph id=\"ph2\">`Content-Type`</ph> header in the request.","source":"The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request."}],"pos":[16430,17038],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the text of the request's `Content-Type` header.","nodes":[{"pos":[0,99],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the text of the request's <ph id=\"ph2\">`Content-Type`</ph> header.","source":"A <xref href=\"System.String\"></xref> that contains the text of the request's `Content-Type` header."}],"pos":[17363,17463],"yaml":true},{"content":"Gets the cookies sent with the request.","nodes":[{"pos":[0,39],"content":"Gets the cookies sent with the request.","nodes":[{"content":"Gets the cookies sent with the request.","pos":[0,39]}]}],"pos":[18599,18639],"yaml":true},{"content":"A cookie is name/value text data from a Web server that is stored on the local (client) computer.","nodes":[{"pos":[0,97],"content":"A cookie is name/value text data from a Web server that is stored on the local (client) computer.","nodes":[{"content":"A cookie is name/value text data from a Web server that is stored on the local (client) computer.","pos":[0,97]}]}],"pos":[18650,18748],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.CookieCollection\"></xref> that contains cookies that accompany the request. This property returns an empty collection if the request does not contain cookies.","nodes":[{"pos":[0,183],"content":"A <xref href=\"System.Net.CookieCollection\"></xref> that contains cookies that accompany the request. This property returns an empty collection if the request does not contain cookies.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.CookieCollection\"&gt;&lt;/xref&gt;</ph> that contains cookies that accompany the request.","pos":[0,100],"source":"A <xref href=\"System.Net.CookieCollection\"></xref> that contains cookies that accompany the request."},{"content":"This property returns an empty collection if the request does not contain cookies.","pos":[101,183]}]}],"pos":[19119,19303],"yaml":true},{"content":"Ends an asynchronous request for the client's X.509 v.3 certificate.","nodes":[{"pos":[0,68],"content":"Ends an asynchronous request for the client's X.509 v.3 certificate.","nodes":[{"content":"Ends an asynchronous request for the client's X.509 v.3 certificate.","pos":[0,68]}]}],"pos":[20634,20703],"yaml":true},{"content":"The pending request for the certificate.","nodes":[{"pos":[0,40],"content":"The pending request for the certificate.","nodes":[{"content":"The pending request for the certificate.","pos":[0,40]}]}],"pos":[20937,20978],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> object that is returned when the operation started.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that is returned when the operation started.","source":"The <xref href=\"System.IAsyncResult\"></xref> object that is returned when the operation started."}],"pos":[21084,21181],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[21365,21401],"yaml":true},{"content":"<code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\"></xref><code>e.</code>","nodes":[{"pos":[0,181],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not obtained by calling <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph><ph id=\"ph3\">&lt;code&gt;e.&lt;/code&gt;</ph>","source":"<code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\"></xref><code>e.</code>"}],"pos":[21495,21677],"yaml":true},{"content":"This method was already called for the operation identified by <code>asyncResult</code>.","nodes":[{"pos":[0,88],"content":"This method was already called for the operation identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"This method was already called for the operation identified by <code>asyncResult</code>."}],"pos":[21787,21876],"yaml":true},{"content":"Retrieves the client's X.509 v.3 certificate.","nodes":[{"pos":[0,45],"content":"Retrieves the client's X.509 v.3 certificate.","nodes":[{"content":"Retrieves the client's X.509 v.3 certificate.","pos":[0,45]}]}],"pos":[23021,23067],"yaml":true},{"content":"This method blocks until the certificate is retrieved.","nodes":[{"pos":[0,54],"content":"This method blocks until the certificate is retrieved.","nodes":[{"content":"This method blocks until the certificate is retrieved.","pos":[0,54]}]}],"pos":[23078,23133],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Cryptography.X509Certificates\"></xref> object that contains the client's X.509 v.3 certificate.","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates\"&gt;&lt;/xref&gt;</ph> object that contains the client's X.509 v.3 certificate.","source":"A <xref href=\"System.Security.Cryptography.X509Certificates\"></xref> object that contains the client's X.509 v.3 certificate."}],"pos":[23376,23502],"yaml":true},{"content":"A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.","nodes":[{"pos":[0,141],"content":"A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.","nodes":[{"content":"A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.","pos":[0,141]}]}],"pos":[23691,23833],"yaml":true},{"content":"Retrieves the client's X.509 v.3 certificate as an asynchronous operation.","nodes":[{"pos":[0,74],"content":"Retrieves the client's X.509 v.3 certificate as an asynchronous operation.","nodes":[{"content":"Retrieves the client's X.509 v.3 certificate as an asynchronous operation.","pos":[0,74]}]}],"pos":[25008,25083],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.  \n  \n If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.","nodes":[{"pos":[0,144],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.","pos":[0,144],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the certificate has been retrieved.","pos":[31,144],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved."}]}]},{"pos":[151,287],"content":"If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.","nodes":[{"content":"If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.","pos":[0,136]}]}],"pos":[25094,25386],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>.  \n  \n The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns a <xref href=\"System.Security.Cryptography.X509Certificates\"></xref> object that contains the client's X.509 v.3 certificate.","nodes":[{"pos":[0,59],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>."},{"pos":[66,346],"content":"The task object representing the asynchronous operation. The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns a <xref href=\"System.Security.Cryptography.X509Certificates\"></xref> object that contains the client's X.509 v.3 certificate.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1.Result\"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates\"&gt;&lt;/xref&gt;</ph> object that contains the client's X.509 v.3 certificate.","pos":[57,280],"source":" The <xref href=\"System.Threading.Tasks.Task`1.Result\"></xref> property on the task object returns a <xref href=\"System.Security.Cryptography.X509Certificates\"></xref> object that contains the client's X.509 v.3 certificate."}]}],"pos":[25692,26049],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the request has associated body data.","nodes":[{"pos":[0,109],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the request has associated body data.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the request has associated body data."}],"pos":[27235,27345],"yaml":true},{"content":"A request that sends data to the server using the `POST` method, for example, should have an entity body.","nodes":[{"pos":[0,105],"content":"A request that sends data to the server using the <ph id=\"ph1\">`POST`</ph> method, for example, should have an entity body.","source":"A request that sends data to the server using the `POST` method, for example, should have an entity body."}],"pos":[27356,27462],"yaml":true,"extradata":"MT"},{"content":"`true` if the request has associated body data; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the request has associated body data; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the request has associated body data; otherwise, `false`."}],"pos":[27783,27853],"yaml":true},{"content":"Gets the collection of header name/value pairs sent in the request.","nodes":[{"pos":[0,67],"content":"Gets the collection of header name/value pairs sent in the request.","nodes":[{"content":"Gets the collection of header name/value pairs sent in the request.","pos":[0,67]}]}],"pos":[28991,29059],"yaml":true},{"content":"Request headers contain metadata information. For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.  \n  \n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"pos":[0,288],"content":"Request headers contain metadata information. For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.","nodes":[{"content":"Request headers contain metadata information. For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.","pos":[0,288],"nodes":[{"content":"Request headers contain metadata information.","pos":[0,45]},{"content":"For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.","pos":[46,288]}]}]},{"pos":[295,391],"content":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"content":"For a complete list of request headers, see the <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.","pos":[0,96],"source":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration."}]}],"pos":[29070,29466],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.WebHeaderCollection\"></xref> that contains the HTTP headers included in the request.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.WebHeaderCollection\"&gt;&lt;/xref&gt;</ph> that contains the HTTP headers included in the request.","source":"A <xref href=\"System.Net.WebHeaderCollection\"></xref> that contains the HTTP headers included in the request."}],"pos":[29915,30025],"yaml":true},{"content":"Gets the HTTP method specified by the client.","nodes":[{"pos":[0,45],"content":"Gets the HTTP method specified by the client.","nodes":[{"content":"Gets the HTTP method specified by the client.","pos":[0,45]}]}],"pos":[31175,31221],"yaml":true},{"content":"The HTTP method is typically GET or POST, depending on the action desired by the client.","nodes":[{"pos":[0,88],"content":"The HTTP method is typically GET or POST, depending on the action desired by the client.","nodes":[{"content":"The HTTP method is typically GET or POST, depending on the action desired by the client.","pos":[0,88]}]}],"pos":[31232,31321],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the method used in the request.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the method used in the request.","source":"A <xref href=\"System.String\"></xref> that contains the method used in the request."}],"pos":[31640,31723],"yaml":true},{"content":"Gets a stream that contains the body data sent by the client.","nodes":[{"pos":[0,61],"content":"Gets a stream that contains the body data sent by the client.","nodes":[{"content":"Gets a stream that contains the body data sent by the client.","pos":[0,61]}]}],"pos":[32882,32944],"yaml":true},{"content":"If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.  \n  \n> [!NOTE]\n>  Closing the request does not close the stream returned by this property. When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.","nodes":[{"pos":[0,128],"content":"If the client transmits data (for example, using the HTTP <ph id=\"ph1\">`POST`</ph> method), the stream returned by this method contains that data.","source":"If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data."},{"pos":[136,331],"content":"[!NOTE]\n Closing the request does not close the stream returned by this property. When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.","leadings":["","> "],"nodes":[{"content":" Closing the request does not close the stream returned by this property. When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.","pos":[8,193],"nodes":[{"content":"Closing the request does not close the stream returned by this property.","pos":[1,73]},{"content":"When you no longer need the stream, you should close it by calling the <ph id=\"ph1\">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method.","pos":[74,185],"source":" When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method."}]}]}],"pos":[32955,33292],"yaml":true,"extradata":"MT"},{"content":"A readable <xref href=\"System.IO.Stream\"></xref> object that contains the bytes sent by the client in the body of the request. This property returns <xref href=\"System.IO.Stream.Null\"></xref> if no data is sent with the request.","nodes":[{"pos":[0,228],"content":"A readable <xref href=\"System.IO.Stream\"></xref> object that contains the bytes sent by the client in the body of the request. This property returns <xref href=\"System.IO.Stream.Null\"></xref> if no data is sent with the request.","nodes":[{"content":"A readable <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object that contains the bytes sent by the client in the body of the request.","pos":[0,126],"source":"A readable <xref href=\"System.IO.Stream\"></xref> object that contains the bytes sent by the client in the body of the request."},{"content":"This property returns <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.Null\"&gt;&lt;/xref&gt;</ph> if no data is sent with the request.","pos":[127,228],"source":" This property returns <xref href=\"System.IO.Stream.Null\"></xref> if no data is sent with the request."}]}],"pos":[33662,33891],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the client sending this request is authenticated.","nodes":[{"pos":[0,121],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the client sending this request is authenticated.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the client sending this request is authenticated."}],"pos":[35075,35197],"yaml":true},{"content":"Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.  \n  \n Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.","nodes":[{"pos":[0,197],"content":"Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.","nodes":[{"content":"Your application requests client authentication using the <ph id=\"ph1\">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property.","pos":[0,197],"source":"Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property."}]},{"pos":[204,345],"content":"Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.","nodes":[{"content":"Your application does not receive an <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerContext&gt;</ph> for requests from clients that are not successfully authenticated.","pos":[0,141],"source":"Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated."}]}],"pos":[35208,35558],"yaml":true,"extradata":"MT"},{"content":"`true` if the client was authenticated; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the client was authenticated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the client was authenticated; otherwise, `false`."}],"pos":[35998,36060],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the request is sent from the local computer.","nodes":[{"pos":[0,116],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the request is sent from the local computer.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the request is sent from the local computer."}],"pos":[37240,37357],"yaml":true},{"content":"Applications can use this property to perform special processing when requests are from the local computer.","nodes":[{"pos":[0,107],"content":"Applications can use this property to perform special processing when requests are from the local computer.","nodes":[{"content":"Applications can use this property to perform special processing when requests are from the local computer.","pos":[0,107]}]}],"pos":[37368,37476],"yaml":true,"extradata":"MT"},{"content":"`true` if the request originated on the same computer as the <xref href=\"System.Net.HttpListener\"></xref> object that provided the request; otherwise, `false`.","nodes":[{"pos":[0,159],"content":"<ph id=\"ph1\">`true`</ph> if the request originated on the same computer as the <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> object that provided the request; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the request originated on the same computer as the <xref href=\"System.Net.HttpListener\"></xref> object that provided the request; otherwise, `false`."}],"pos":[37839,38001],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.","nodes":[{"pos":[0,165],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol."}],"pos":[39199,39365],"yaml":true},{"content":"To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>. If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.","nodes":[{"pos":[0,279],"content":"To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>. If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.","nodes":[{"content":"To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>. If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.","pos":[0,279],"nodes":[{"content":"To request a secure connection, the client request uses <ph id=\"ph1\">&lt;xref:System.Uri.UriSchemeHttps&gt;</ph> instead of <ph id=\"ph2\">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>.","pos":[0,132],"source":"To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>."},{"content":"If the connection cannot be established using SSL, the client receives a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> that provides information about the error.","pos":[133,279],"source":" If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error."}]}]}],"pos":[39376,39656],"yaml":true,"extradata":"MT"},{"content":"`true` if the TCP connection is using SSL; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the TCP connection is using SSL; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the TCP connection is using SSL; otherwise, `false`."}],"pos":[40041,40106],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the TCP connection was  a WebSocket request.","nodes":[{"pos":[0,116],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the TCP connection was  a WebSocket request.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the TCP connection was  a WebSocket request."}],"pos":[41315,41432],"yaml":true},{"content":"Returns <xref href=\"System.Boolean\"></xref>.  \n  \n `true` if the TCP connection is a WebSocket request; otherwise, `false`.","nodes":[{"pos":[0,44],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Boolean\"></xref>."},{"pos":[51,123],"content":"<ph id=\"ph1\">`true`</ph> if the TCP connection is a WebSocket request; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the TCP connection is a WebSocket request; otherwise, `false`."}],"pos":[41587,41717],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the client requests a persistent connection.","nodes":[{"pos":[0,116],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the client requests a persistent connection.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the client requests a persistent connection."}],"pos":[42912,43029],"yaml":true},{"content":"If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message. For clients using HTTP/1.1, the default value for this property is `true`.","nodes":[{"pos":[0,322],"content":"If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message. For clients using HTTP/1.1, the default value for this property is `true`.","nodes":[{"content":"If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.","pos":[0,247]},{"content":"For clients using HTTP/1.1, the default value for this property is <ph id=\"ph1\">`true`</ph>.","pos":[248,322],"source":" For clients using HTTP/1.1, the default value for this property is `true`."}]}],"pos":[43040,43363],"yaml":true,"extradata":"MT"},{"content":"`true` if the connection should be kept open; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the connection should be kept open; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the connection should be kept open; otherwise, `false`."}],"pos":[43680,43748],"yaml":true},{"content":"Get the server IP address and port number to which the request is directed.","nodes":[{"pos":[0,75],"content":"Get the server IP address and port number to which the request is directed.","nodes":[{"content":"Get the server IP address and port number to which the request is directed.","pos":[0,75]}]}],"pos":[44918,44994],"yaml":true},{"content":"This property is useful when you want to respond to requests based on the way they are addressed.","nodes":[{"pos":[0,97],"content":"This property is useful when you want to respond to requests based on the way they are addressed.","nodes":[{"content":"This property is useful when you want to respond to requests based on the way they are addressed.","pos":[0,97]}]}],"pos":[45005,45103],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.IPEndPoint\"></xref> that represents the IP address that the request is sent to.","nodes":[{"pos":[0,105],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph> that represents the IP address that the request is sent to.","source":"An <xref href=\"System.Net.IPEndPoint\"></xref> that represents the IP address that the request is sent to."}],"pos":[45448,45554],"yaml":true},{"content":"Gets the HTTP version used by the requesting client.","nodes":[{"pos":[0,52],"content":"Gets the HTTP version used by the requesting client.","nodes":[{"content":"Gets the HTTP version used by the requesting client.","pos":[0,52]}]}],"pos":[46740,46793],"yaml":true},{"content":"The capabilities of different HTTP versions are specified in the documents available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).","nodes":[{"pos":[0,144],"content":"The capabilities of different HTTP versions are specified in the documents available at <bpt id=\"p1\">[</bpt>http://www.rfc-editor.org<ept id=\"p1\">](http://www.rfc-editor.org/)</ept>.","source":"The capabilities of different HTTP versions are specified in the documents available at [http://www.rfc-editor.org](http://www.rfc-editor.org/)."}],"pos":[46804,46949],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Version\"></xref> that identifies the client's version of HTTP.","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> that identifies the client's version of HTTP.","source":"A <xref href=\"System.Version\"></xref> that identifies the client's version of HTTP."}],"pos":[47275,47359],"yaml":true},{"content":"Gets the query string included in the request.","nodes":[{"pos":[0,46],"content":"Gets the query string included in the request.","nodes":[{"content":"Gets the query string included in the request.","pos":[0,46]}]}],"pos":[48523,48570],"yaml":true},{"content":"In a URL, the query information is separated from the path information by a question mark (?). Name/value pairs are separated by an equals sign (=). To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.  \n  \n> [!NOTE]\n>  Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"pos":[0,335],"content":"In a URL, the query information is separated from the path information by a question mark (?). Name/value pairs are separated by an equals sign (=). To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.","nodes":[{"content":"In a URL, the query information is separated from the path information by a question mark (?). Name/value pairs are separated by an equals sign (=). To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.","pos":[0,335],"nodes":[{"content":"In a URL, the query information is separated from the path information by a question mark (?).","pos":[0,94]},{"content":"Name/value pairs are separated by an equals sign (=).","pos":[95,148]},{"content":"To access the query data as a single string, get the <ph id=\"ph1\">&lt;xref:System.Uri.Query%2A&gt;</ph> property value from the <ph id=\"ph2\">&lt;xref:System.Uri&gt;</ph> object returned by <ph id=\"ph3\">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>.","pos":[149,335],"source":" To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>."}]}]},{"pos":[343,568],"content":"[!NOTE]\n Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.","leadings":["","> "],"nodes":[{"content":"Queries without an equal sign (example: <bpt id=\"p1\">[</bpt>http://www.contoso.com/query.htm?Name<ept id=\"p1\">](http://www.contoso.com/query.htm?Name)</ept> ) are added to the <ph id=\"ph1\">`null`</ph> key in the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[9,223],"source":" Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>."}]}],"pos":[48581,49155],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that contains the query data included in the request <xref href=\"System.Net.HttpListenerRequest.Url\"></xref>.","nodes":[{"pos":[0,190],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> object that contains the query data included in the request <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpListenerRequest.Url\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that contains the query data included in the request <xref href=\"System.Net.HttpListenerRequest.Url\"></xref>."}],"pos":[49608,49799],"yaml":true},{"content":"Gets the URL information (without the host and port) requested by the client.","nodes":[{"pos":[0,77],"content":"Gets the URL information (without the host and port) requested by the client.","nodes":[{"content":"Gets the URL information (without the host and port) requested by the client.","pos":[0,77]}]}],"pos":[50929,51007],"yaml":true},{"content":"The raw URL is defined as the part of the URL following the domain information. In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`. The raw URL includes the query string, if present.  \n  \n To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.","nodes":[{"pos":[0,235],"content":"The raw URL is defined as the part of the URL following the domain information. In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`. The raw URL includes the query string, if present.","nodes":[{"content":"The raw URL is defined as the part of the URL following the domain information.","pos":[0,79]},{"content":"In the URL string <ph id=\"ph1\">`http://www.contoso.com/articles/recent.aspx`</ph>, the raw URL is <ph id=\"ph2\">`/articles/recent.aspx`</ph>.","pos":[80,184],"source":" In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`."},{"content":"The raw URL includes the query string, if present.","pos":[185,235]}]},{"pos":[242,356],"content":"To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.","nodes":[{"content":"To obtain the host and port information, use the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> property.","pos":[0,114],"source":"To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property."}]}],"pos":[51018,51379],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the raw URL for this request.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the raw URL for this request.","source":"A <xref href=\"System.String\"></xref> that contains the raw URL for this request."}],"pos":[51741,51822],"yaml":true},{"content":"Gets the client IP address and port number from which the request originated.","nodes":[{"pos":[0,77],"content":"Gets the client IP address and port number from which the request originated.","nodes":[{"content":"Gets the client IP address and port number from which the request originated.","pos":[0,77]}]}],"pos":[52995,53073],"yaml":true},{"content":"An <xref href=\"System.Net.IPEndPoint\"></xref> that represents the IP address and port number from which the request originated.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph> that represents the IP address and port number from which the request originated.","source":"An <xref href=\"System.Net.IPEndPoint\"></xref> that represents the IP address and port number from which the request originated."}],"pos":[53433,53561],"yaml":true},{"content":"Gets the request identifier of the incoming HTTP request.","nodes":[{"pos":[0,57],"content":"Gets the request identifier of the incoming HTTP request.","nodes":[{"content":"Gets the request identifier of the incoming HTTP request.","pos":[0,57]}]}],"pos":[54790,54848],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> object that contains the identifier of the HTTP request.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> object that contains the identifier of the HTTP request.","source":"A <xref href=\"System.Guid\"></xref> object that contains the identifier of the HTTP request."}],"pos":[55033,55125],"yaml":true},{"content":"Gets the Service Provider Name (SPN) that the client sent on the request.","nodes":[{"pos":[0,73],"content":"Gets the Service Provider Name (SPN) that the client sent on the request.","nodes":[{"content":"Gets the Service Provider Name (SPN) that the client sent on the request.","pos":[0,73]}]}],"pos":[56336,56410],"yaml":true},{"content":"An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.","nodes":[{"pos":[0,147],"content":"An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.","nodes":[{"content":"An application could use the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.ServiceName%2A&gt;</ph> property to perform custom Service Provide Name (SPN) validation.","pos":[0,147],"source":"An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation."}]}],"pos":[56421,56569],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the SPN the client sent on the request.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the SPN the client sent on the request.","source":"A <xref href=\"System.String\"></xref> that contains the SPN the client sent on the request."}],"pos":[56718,56809],"yaml":true},{"content":"Gets the <xref href=\"System.Net.TransportContext\"></xref> for the client request.","nodes":[{"pos":[0,81],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Net.TransportContext\"&gt;&lt;/xref&gt;</ph> for the client request.","source":"Gets the <xref href=\"System.Net.TransportContext\"></xref> for the client request."}],"pos":[58039,58121],"yaml":true},{"content":"The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.  \n  \n An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function.  \n  \n If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>. The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.","nodes":[{"pos":[0,176],"content":"The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.TransportContext&gt;</ph> property can be used to retrieve the channel binding token (CBT) for an <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> which was sent using HTTPS.","pos":[0,176],"source":"The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS."}]},{"pos":[183,401],"content":"An application could use the <ph id=\"ph1\">&lt;xref:System.Net.TransportContext&gt;</ph> property to perform custom authentication using calls to the native Win32 <bpt id=\"p1\">[</bpt>AcceptSecurityContext<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=147021)</ept> function.","source":"An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function."},{"pos":[408,1052],"content":"If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>. The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.","nodes":[{"content":"If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>. The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.","pos":[0,644],"nodes":[{"content":"If an application attempts to retrieve the channel binding token (CBT) from this <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.TransportContext%2A&gt;</ph> property using the <ph id=\"ph2\">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&gt;</ph> is not <ph id=\"ph4\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&gt;</ph>, then the <ph id=\"ph5\">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> will throw <ph id=\"ph6\">&lt;xref:System.NotSupportedException&gt;</ph>.","pos":[0,492],"source":"If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> overrides the <ph id=\"ph2\">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> method with an internal implementation.","pos":[493,644],"source":" The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation."}]}]}],"pos":[58132,59191],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.TransportContext\"></xref> object for the client request.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.TransportContext\"&gt;&lt;/xref&gt;</ph> object for the client request.","source":"A <xref href=\"System.Net.TransportContext\"></xref> object for the client request."}],"pos":[59346,59428],"yaml":true},{"content":"Gets the <xref href=\"System.Uri\"></xref> object requested by the client.","nodes":[{"pos":[0,72],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> object requested by the client.","source":"Gets the <xref href=\"System.Uri\"></xref> object requested by the client."}],"pos":[60545,60618],"yaml":true},{"content":"The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object. If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.  \n  \n The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.  \n  \n The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.  \n  \n When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> property.  \n  \n The `http.sys` service exposes two request URI strings:  \n  \n-   Raw URI  \n  \n-   Converted URI  \n  \n The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:  \n  \n `GET /path/`  \n  \n `Host: www.contoso.com`  \n  \n The raw URI provided by `http.sys` for the request mentioned above, is \"/path/\". This represents the string following the HTTP verb as it was sent over the network.  \n  \n The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to. This is done by comparing the information from the request with a set of registered URI prefixes. In order to be able to compare those values, some normalization to the request needs to be done. For the sample above the converted URI would be as follows:  \n  \n `http://www.contoso.com/path/`  \n  \n The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI. In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:  \n  \n-   Un-escapes all percent encoded values.  \n  \n-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).  \n  \n-   Executes other normalization steps, like path compression.  \n  \n Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.  \n  \n Therefore `http.sys` provides two registry keys for modifying the process:  \n  \n|Registry Key|Default Value|Description|  \n|------------------|-------------------|-----------------|  \n|EnableNonUTF8|1|If zero, `http.sys` accepts only UTF-8-encoded URLs.<br /><br /> If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.|  \n|FavorUTF8|1|If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.<br /><br /> If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|  \n  \n When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.  \n  \n There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":  \n  \n `http://www.contoso.com/Customer('1%2F3812')/`  \n  \n Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.  \n  \n Passing the string to Uri constructor will lead to the following URI:  \n  \n `http://www.contoso.com/Customer('1/3812')/`  \n  \n Splitting the path into its segments would result in the following elements:  \n  \n `Customer('1`  \n  \n `3812')`  \n  \n This is not the intent of the sender of the request.  \n  \n If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.","nodes":[{"pos":[0,284],"content":"The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object. If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.","nodes":[{"content":"The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object. If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.","pos":[0,284],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property allows you to obtain all the information available from a <ph id=\"ph2\">&lt;xref:System.Uri&gt;</ph> object.","pos":[0,141],"source":"The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object."},{"content":"If you need to know only the raw text of the URI request, consider using the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> property instead.","pos":[142,284],"source":" If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead."}]}]},{"pos":[291,418],"content":"The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property is null if the <ph id=\"ph2\">&lt;xref:System.Uri&gt;</ph> from the client could not be parsed.","pos":[0,127],"source":"The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed."}]},{"pos":[425,699],"content":"The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> property indicates if <ph id=\"ph2\">&lt;xref:System.Net.HttpListener&gt;</ph> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.","pos":[0,274],"source":"The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken."}]},{"pos":[706,970],"content":"When a <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> instance receives a request through the <ph id=\"ph2\">`http.sys`</ph> service, it creates an instance of the URI string provided by <ph id=\"ph3\">`http.sys`</ph>, and exposes it as the <ph id=\"ph4\">&lt;xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName&gt;</ph> property.","source":"When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> property."},{"pos":[977,1032],"content":"The <ph id=\"ph1\">`http.sys`</ph> service exposes two request URI strings:","source":"The `http.sys` service exposes two request URI strings:"},{"pos":[1042,1049],"content":"Raw URI","nodes":[{"content":"Raw URI","pos":[0,7]}]},{"pos":[1059,1072],"content":"Converted URI","nodes":[{"content":"Converted URI","pos":[0,13]}]},{"pos":[1079,1188],"content":"The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:","nodes":[{"content":"The raw URI is the <ph id=\"ph1\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> provided in the request line of a HTTP request:","pos":[0,109],"source":"The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:"}]},{"pos":[1244,1408],"content":"The raw URI provided by `http.sys` for the request mentioned above, is \"/path/\". This represents the string following the HTTP verb as it was sent over the network.","nodes":[{"content":"The raw URI provided by <ph id=\"ph1\">`http.sys`</ph> for the request mentioned above, is \"/path/\".","pos":[0,80],"source":"The raw URI provided by `http.sys` for the request mentioned above, is \"/path/\"."},{"content":"This represents the string following the HTTP verb as it was sent over the network.","pos":[81,164]}]},{"pos":[1415,1896],"content":"The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to. This is done by comparing the information from the request with a set of registered URI prefixes. In order to be able to compare those values, some normalization to the request needs to be done. For the sample above the converted URI would be as follows:","nodes":[{"content":"The <ph id=\"ph1\">`http.sys`</ph> service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.","pos":[0,226],"source":"The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to."},{"content":"This is done by comparing the information from the request with a set of registered URI prefixes.","pos":[227,324]},{"content":"In order to be able to compare those values, some normalization to the request needs to be done.","pos":[325,421]},{"content":"For the sample above the converted URI would be as follows:","pos":[422,481]}]},{"pos":[1940,2207],"content":"The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI. In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:","nodes":[{"content":"The <ph id=\"ph1\">`http.sys`</ph> service combines the <ph id=\"ph2\">&lt;xref:System.Uri.Host%2A?displayProperty=fullName&gt;</ph> property value and the string in the request line to create a converted URI.","pos":[0,163],"source":"The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI."},{"content":"In addition, <ph id=\"ph1\">`http.sys`</ph> and the <ph id=\"ph2\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class also do the following:","pos":[164,267],"source":" In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:"}]},{"pos":[2217,2255],"content":"Un-escapes all percent encoded values.","nodes":[{"content":"Un-escapes all percent encoded values.","pos":[0,38]}]},{"pos":[2265,2479],"content":"Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).","nodes":[{"content":"Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).","pos":[0,214],"nodes":[{"content":"Converts percent-encoded non-ASCII characters into a UTF-16 character representation.","pos":[0,85]},{"content":"Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).","pos":[86,214]}]}]},{"pos":[2489,2547],"content":"Executes other normalization steps, like path compression.","nodes":[{"content":"Executes other normalization steps, like path compression.","pos":[0,58]}]},{"pos":[2554,2756],"content":"Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.","nodes":[{"content":"Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.","pos":[0,202]}]},{"pos":[2763,2837],"content":"Therefore <ph id=\"ph1\">`http.sys`</ph> provides two registry keys for modifying the process:","source":"Therefore `http.sys` provides two registry keys for modifying the process:"},{"pos":[2844,2856],"content":"Registry Key","nodes":[{"content":"Registry Key","pos":[0,12]}]},{"pos":[2857,2870],"content":"Default Value","nodes":[{"content":"Default Value","pos":[0,13]}]},{"pos":[2871,2882],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[2948,2961],"content":"EnableNonUTF8","nodes":[{"content":"EnableNonUTF8","pos":[0,13]}]},{"pos":[2962,2963],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[2964,3112],"content":"If zero, `http.sys` accepts only UTF-8-encoded URLs.<br /><br /> If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.","nodes":[{"content":"If zero, <ph id=\"ph1\">`http.sys`</ph> accepts only UTF-8-encoded URLs.","pos":[0,52],"source":"If zero, `http.sys` accepts only UTF-8-encoded URLs."},{"content":"If non-zero, <ph id=\"ph1\">`http.sys`</ph> also accepts ANSI-encoded or DBCS-encoded URLs in requests.","pos":[65,148],"source":" If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests."}]},{"pos":[3117,3126],"content":"FavorUTF8","nodes":[{"content":"FavorUTF8","pos":[0,9]}]},{"pos":[3127,3128],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[3129,3459],"content":"If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.<br /><br /> If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.","nodes":[{"content":"If non-zero, <ph id=\"ph1\">`http.sys`</ph> always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.","pos":[0,174],"source":"If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS."},{"content":"If zero (and EnableNonUTF8 is non-zero), <ph id=\"ph1\">`http.sys`</ph> tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.","pos":[187,330],"source":" If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion."}]},{"pos":[3467,3635],"content":"When <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> receives a request, it uses the converted URI from <ph id=\"ph2\">`http.sys`</ph> as input to the <ph id=\"ph3\">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property.","source":"When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property."},{"pos":[3642,3833],"content":"There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":","nodes":[{"content":"There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":","pos":[0,191],"nodes":[{"content":"There is a need for supporting characters besides characters and numbers in URIs.","pos":[0,81]},{"content":"An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":","pos":[82,191]}]}]},{"pos":[3893,4041],"content":"Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.","nodes":[{"content":"Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.","pos":[0,148],"nodes":[{"content":"Note the percent-encoded slash in the Uri (%2F).","pos":[0,48]},{"content":"This is necessary, since in this case the slash character represents data and not a path delimiter.","pos":[49,148]}]}]},{"pos":[4048,4117],"content":"Passing the string to Uri constructor will lead to the following URI:","nodes":[{"content":"Passing the string to Uri constructor will lead to the following URI:","pos":[0,69]}]},{"pos":[4175,4251],"content":"Splitting the path into its segments would result in the following elements:","nodes":[{"content":"Splitting the path into its segments would result in the following elements:","pos":[0,76]}]},{"pos":[4293,4345],"content":"This is not the intent of the sender of the request.","nodes":[{"content":"This is not the intent of the sender of the request.","pos":[0,52]}]},{"pos":[4352,4659],"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> property is set to false, then when the <ph id=\"ph2\">&lt;xref:System.Net.HttpListener&gt;</ph> receives a request, it uses the raw URI instead of the converted URI from <ph id=\"ph3\">`http.sys`</ph> as input to the <ph id=\"ph4\">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property.","source":"If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property."}],"pos":[60629,65358],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> object that identifies the resource requested by the client.","nodes":[{"pos":[0,94],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> object that identifies the resource requested by the client.","source":"A <xref href=\"System.Uri\"></xref> object that identifies the resource requested by the client."}],"pos":[65708,65803],"yaml":true},{"content":"Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.","nodes":[{"pos":[0,98],"content":"Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.","nodes":[{"content":"Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.","pos":[0,98]}]}],"pos":[66955,67054],"yaml":true},{"content":"If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.  \n  \n Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header. Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.  \n  \n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.  \n  \n The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.","nodes":[{"pos":[0,174],"content":"If a client has followed a hyperlink to the requested URI, its request might contain a <ph id=\"ph1\">`Referrer`</ph> header that identifies the URI of the resource that contained the hyperlink.","source":"If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink."},{"pos":[181,505],"content":"Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header. Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.","nodes":[{"content":"Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header. Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.","pos":[0,324],"nodes":[{"content":"Clients can falsify or choose not to present a <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader.Referer&gt;</ph> header.","pos":[0,98],"source":"Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header."},{"content":"Therefore, while the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.","pos":[99,324],"source":" Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data."}]}]},{"pos":[512,608],"content":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"content":"For a complete list of request headers, see the <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.","pos":[0,96],"source":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration."}]},{"pos":[615,834],"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> is null when there is no <ph id=\"ph2\">`Referrer`</ph> header in the request or when the <ph id=\"ph3\">`Referrer`</ph> header is present in the request but does not parse to a valid <ph id=\"ph4\">&lt;xref:System.Uri&gt;</ph>.","source":"The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>."}],"pos":[67065,67908],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> object that contains the text of the request's <xref href=\"System.Net.HttpRequestHeader.Referer\"></xref> header, or `null` if the header was not included in the request.","nodes":[{"pos":[0,203],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> object that contains the text of the request's <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpRequestHeader.Referer\"&gt;&lt;/xref&gt;</ph> header, or <ph id=\"ph3\">`null`</ph> if the header was not included in the request.","source":"A <xref href=\"System.Uri\"></xref> object that contains the text of the request's <xref href=\"System.Net.HttpRequestHeader.Referer\"></xref> header, or `null` if the header was not included in the request."}],"pos":[68222,68426],"yaml":true},{"content":"Gets the user agent presented by the client.","nodes":[{"pos":[0,44],"content":"Gets the user agent presented by the client.","nodes":[{"content":"Gets the user agent presented by the client.","pos":[0,44]}]}],"pos":[69574,69619],"yaml":true},{"content":"The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.  \n  \n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.  \n  \n The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.","nodes":[{"pos":[0,137],"content":"The <ph id=\"ph1\">`User-Agent`</ph> header typically contains text that identifies the name and version number of the software used to generate the request.","source":"The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request."},{"pos":[144,240],"content":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"content":"For a complete list of request headers, see the <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.","pos":[0,96],"source":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration."}]},{"pos":[247,362],"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> is null when there is no <ph id=\"ph2\">`User-Agent`</ph> header in the request.","source":"The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request."}],"pos":[69630,69999],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> object that contains the text of the request's `User-Agent` header.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> object that contains the text of the request's <ph id=\"ph2\">`User-Agent`</ph> header.","source":"A <xref href=\"System.String\"></xref> object that contains the text of the request's `User-Agent` header."}],"pos":[70317,70422],"yaml":true},{"content":"Gets the server IP address and port number to which the request is directed.","nodes":[{"pos":[0,76],"content":"Gets the server IP address and port number to which the request is directed.","nodes":[{"content":"Gets the server IP address and port number to which the request is directed.","pos":[0,76]}]}],"pos":[71604,71681],"yaml":true},{"content":"The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.","nodes":[{"pos":[0,137],"content":"The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.","nodes":[{"content":"The information returned by this property is also available in the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> property value.","pos":[0,137],"source":"The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value."}]}],"pos":[71692,71830],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the host address information.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the host address information.","source":"A <xref href=\"System.String\"></xref> that contains the host address information."}],"pos":[72157,72238],"yaml":true},{"content":"Gets the DNS name and, if provided, the port number specified by the client.","nodes":[{"pos":[0,76],"content":"Gets the DNS name and, if provided, the port number specified by the client.","nodes":[{"content":"Gets the DNS name and, if provided, the port number specified by the client.","pos":[0,76]}]}],"pos":[73408,73485],"yaml":true},{"content":"The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).  \n  \n You can use this property to return different responses depending on the host name specified in the request.  \n  \n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">`Host`</ph> header contains the requested server host name and port number, if specified, separated by a colon (for example, <ph id=\"ph2\">`www.contoso.com:8080`</ph>).","source":"The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`)."},{"pos":[155,263],"content":"You can use this property to return different responses depending on the host name specified in the request.","nodes":[{"content":"You can use this property to return different responses depending on the host name specified in the request.","pos":[0,108]}]},{"pos":[270,366],"content":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"content":"For a complete list of request headers, see the <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.","pos":[0,96],"source":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration."}]}],"pos":[73496,73869],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> value that contains the text of the request's `Host` header.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value that contains the text of the request's <ph id=\"ph2\">`Host`</ph> header.","source":"A <xref href=\"System.String\"></xref> value that contains the text of the request's `Host` header."}],"pos":[74190,74288],"yaml":true},{"content":"Gets the natural languages that are preferred for the response.","nodes":[{"pos":[0,63],"content":"Gets the natural languages that are preferred for the response.","nodes":[{"content":"Gets the natural languages that are preferred for the response.","pos":[0,63]}]}],"pos":[75461,75525],"yaml":true},{"content":"For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).  \n  \n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"pos":[0,156],"content":"For a detailed description of the <ph id=\"ph1\">`Accept-Language`</ph> header, see RFC 2616 Section 14.4, available at <bpt id=\"p1\">[</bpt>http://www.rfc-editor.org<ept id=\"p1\">](http://www.rfc-editor.org/)</ept>.","source":"For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/)."},{"pos":[163,259],"content":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.","nodes":[{"content":"For a complete list of request headers, see the <ph id=\"ph1\">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.","pos":[0,96],"source":"For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration."}]}],"pos":[75536,75800],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> array that contains the languages specified in the request's <xref href=\"System.Net.HttpRequestHeader.AcceptLanguage\"></xref> header or `null` if the client request did not include an <xref href=\"System.Net.HttpRequestHeader.AcceptLanguage\"></xref> header.","nodes":[{"pos":[0,293],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> array that contains the languages specified in the request's <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpRequestHeader.AcceptLanguage\"&gt;&lt;/xref&gt;</ph> header or <ph id=\"ph3\">`null`</ph> if the client request did not include an <ph id=\"ph4\">&lt;xref href=\"System.Net.HttpRequestHeader.AcceptLanguage\"&gt;&lt;/xref&gt;</ph> header.","source":"A <xref href=\"System.String\"></xref> array that contains the languages specified in the request's <xref href=\"System.Net.HttpRequestHeader.AcceptLanguage\"></xref> header or `null` if the client request did not include an <xref href=\"System.Net.HttpRequestHeader.AcceptLanguage\"></xref> header."}],"pos":[76160,76454],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.HttpListenerRequest\n  commentId: T:System.Net.HttpListenerRequest\n  id: HttpListenerRequest\n  children:\n  - System.Net.HttpListenerRequest.AcceptTypes\n  - System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\n  - System.Net.HttpListenerRequest.ClientCertificateError\n  - System.Net.HttpListenerRequest.ContentEncoding\n  - System.Net.HttpListenerRequest.ContentLength64\n  - System.Net.HttpListenerRequest.ContentType\n  - System.Net.HttpListenerRequest.Cookies\n  - System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)\n  - System.Net.HttpListenerRequest.GetClientCertificate\n  - System.Net.HttpListenerRequest.GetClientCertificateAsync\n  - System.Net.HttpListenerRequest.HasEntityBody\n  - System.Net.HttpListenerRequest.Headers\n  - System.Net.HttpListenerRequest.HttpMethod\n  - System.Net.HttpListenerRequest.InputStream\n  - System.Net.HttpListenerRequest.IsAuthenticated\n  - System.Net.HttpListenerRequest.IsLocal\n  - System.Net.HttpListenerRequest.IsSecureConnection\n  - System.Net.HttpListenerRequest.IsWebSocketRequest\n  - System.Net.HttpListenerRequest.KeepAlive\n  - System.Net.HttpListenerRequest.LocalEndPoint\n  - System.Net.HttpListenerRequest.ProtocolVersion\n  - System.Net.HttpListenerRequest.QueryString\n  - System.Net.HttpListenerRequest.RawUrl\n  - System.Net.HttpListenerRequest.RemoteEndPoint\n  - System.Net.HttpListenerRequest.RequestTraceIdentifier\n  - System.Net.HttpListenerRequest.ServiceName\n  - System.Net.HttpListenerRequest.TransportContext\n  - System.Net.HttpListenerRequest.Url\n  - System.Net.HttpListenerRequest.UrlReferrer\n  - System.Net.HttpListenerRequest.UserAgent\n  - System.Net.HttpListenerRequest.UserHostAddress\n  - System.Net.HttpListenerRequest.UserHostName\n  - System.Net.HttpListenerRequest.UserLanguages\n  langs:\n  - csharp\n  name: HttpListenerRequest\n  nameWithType: HttpListenerRequest\n  fullName: System.Net.HttpListenerRequest\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Describes an incoming HTTP request to an <xref href=\"System.Net.HttpListener\"></xref> object. This class cannot be inherited.\n  remarks: \"When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client. The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.  \\n  \\n The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).  \\n  \\n To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.  \\n  \\n [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]\"\n  syntax:\n    content: public sealed class HttpListenerRequest\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.AcceptTypes\n  commentId: P:System.Net.HttpListenerRequest.AcceptTypes\n  id: AcceptTypes\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: AcceptTypes\n  nameWithType: HttpListenerRequest.AcceptTypes\n  fullName: HttpListenerRequest.AcceptTypes\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the MIME types accepted by the client.\n  remarks: \"The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response. The `*/*` entry indicates that the client accepts any MIME type. For a detailed description of the `Accept` header, see RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).  \\n  \\n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.\"\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]\"\n  syntax:\n    content: public string[] AcceptTypes { get; }\n    return:\n      type: System.String[]\n      description: A <xref href=\"System.String\"></xref> array that contains the type names specified in the request's `Accept` header or `null` if the client request did not include an `Accept` header.\n  overload: System.Net.HttpListenerRequest.AcceptTypes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\n  commentId: M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\n  id: BeginGetClientCertificate(System.AsyncCallback,System.Object)\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: BeginGetClientCertificate(AsyncCallback, Object)\n  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback, Object)\n  fullName: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Begins an asynchronous request for the client's X.509 v.3 certificate.\n  syntax:\n    content: public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);\n    parameters:\n    - id: requestCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete.\n    - id: state\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the callback delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that indicates the status of the operation.\n  overload: System.Net.HttpListenerRequest.BeginGetClientCertificate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.ClientCertificateError\n  commentId: P:System.Net.HttpListenerRequest.ClientCertificateError\n  id: ClientCertificateError\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: ClientCertificateError\n  nameWithType: HttpListenerRequest.ClientCertificateError\n  fullName: HttpListenerRequest.ClientCertificateError\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets an error code that identifies a problem with the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> provided by the client.\n  remarks: This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate. For more information about SSPI support for Schannel, see \"Creating a Secure Connection Using Schannel\" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).\n  example:\n  - \"The following code example checks this property to determine whether the request includes a valid client certificate.  \\n  \\n [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]\\n [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]\"\n  syntax:\n    content: public int ClientCertificateError { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value that contains a Windows error code.\n  overload: System.Net.HttpListenerRequest.ClientCertificateError*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The client certificate has not been initialized yet by a call to the <xref href=\\\"System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\\\"></xref> or <xref href=\\\"System.Net.HttpListenerRequest.GetClientCertificate\\\"></xref> methods  \\n  \\n -or -  \\n  \\n The operation is still in progress.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.ContentEncoding\n  commentId: P:System.Net.HttpListenerRequest.ContentEncoding\n  id: ContentEncoding\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: ContentEncoding\n  nameWithType: HttpListenerRequest.ContentEncoding\n  fullName: HttpListenerRequest.ContentEncoding\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the content encoding that can be used with data sent with the request\n  remarks: An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences. This property uses the charset value from the `Content-Type` header to determine the encoding. If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=fullName>.\n  example:\n  - \"The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.  \\n  \\n [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]\"\n  syntax:\n    content: public System.Text.Encoding ContentEncoding { get; }\n    return:\n      type: System.Text.Encoding\n      description: An <xref href=\"System.Text.Encoding\"></xref> object suitable for use with the data in the <xref href=\"System.Net.HttpListenerRequest.InputStream\"></xref> property.\n  overload: System.Net.HttpListenerRequest.ContentEncoding*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.ContentLength64\n  commentId: P:System.Net.HttpListenerRequest.ContentLength64\n  id: ContentLength64\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: ContentLength64\n  nameWithType: HttpListenerRequest.ContentLength64\n  fullName: HttpListenerRequest.ContentLength64\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the length of the body data included in the request.\n  remarks: \"The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.  \\n  \\n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.\"\n  example:\n  - \"The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.  \\n  \\n [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]\"\n  syntax:\n    content: public long ContentLength64 { get; }\n    return:\n      type: System.Int64\n      description: The value from the request's `Content-Length` header. This value is -1 if the content length is not known.\n  overload: System.Net.HttpListenerRequest.ContentLength64*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.ContentType\n  commentId: P:System.Net.HttpListenerRequest.ContentType\n  id: ContentType\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: ContentType\n  nameWithType: HttpListenerRequest.ContentType\n  fullName: HttpListenerRequest.ContentType\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the MIME type of the body data included in the request.\n  remarks: \"If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header. For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.  \\n  \\n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).  \\n  \\n The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.\"\n  example:\n  - \"The following code example demonstrates how to use this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]\"\n  syntax:\n    content: public string ContentType { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the text of the request's `Content-Type` header.\n  overload: System.Net.HttpListenerRequest.ContentType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.Cookies\n  commentId: P:System.Net.HttpListenerRequest.Cookies\n  id: Cookies\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: Cookies\n  nameWithType: HttpListenerRequest.Cookies\n  fullName: HttpListenerRequest.Cookies\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the cookies sent with the request.\n  remarks: A cookie is name/value text data from a Web server that is stored on the local (client) computer.\n  example:\n  - \"The following code example displays the values of cookies sent with the request.  \\n  \\n [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]\"\n  syntax:\n    content: public System.Net.CookieCollection Cookies { get; }\n    return:\n      type: System.Net.CookieCollection\n      description: A <xref href=\"System.Net.CookieCollection\"></xref> that contains cookies that accompany the request. This property returns an empty collection if the request does not contain cookies.\n  overload: System.Net.HttpListenerRequest.Cookies*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)\n  commentId: M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)\n  id: EndGetClientCertificate(System.IAsyncResult)\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: EndGetClientCertificate(IAsyncResult)\n  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)\n  fullName: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Ends an asynchronous request for the client's X.509 v.3 certificate.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The pending request for the certificate.\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The <xref href=\"System.IAsyncResult\"></xref> object that is returned when the operation started.\n  overload: System.Net.HttpListenerRequest.EndGetClientCertificate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\"></xref><code>e.</code>\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method was already called for the operation identified by <code>asyncResult</code>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.GetClientCertificate\n  commentId: M:System.Net.HttpListenerRequest.GetClientCertificate\n  id: GetClientCertificate\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: GetClientCertificate()\n  nameWithType: HttpListenerRequest.GetClientCertificate()\n  fullName: HttpListenerRequest.GetClientCertificate()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Retrieves the client's X.509 v.3 certificate.\n  remarks: This method blocks until the certificate is retrieved.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: A <xref href=\"System.Security.Cryptography.X509Certificates\"></xref> object that contains the client's X.509 v.3 certificate.\n  overload: System.Net.HttpListenerRequest.GetClientCertificate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync\n  commentId: M:System.Net.HttpListenerRequest.GetClientCertificateAsync\n  id: GetClientCertificateAsync\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: GetClientCertificateAsync()\n  nameWithType: HttpListenerRequest.GetClientCertificateAsync()\n  fullName: HttpListenerRequest.GetClientCertificateAsync()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Retrieves the client's X.509 v.3 certificate as an asynchronous operation.\n  remarks: \"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.  \\n  \\n If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.\"\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2> GetClientCertificateAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\"></xref>.  \\n  \\n The task object representing the asynchronous operation. The <xref href=\\\"System.Threading.Tasks.Task`1.Result\\\"></xref> property on the task object returns a <xref href=\\\"System.Security.Cryptography.X509Certificates\\\"></xref> object that contains the client's X.509 v.3 certificate.\"\n  overload: System.Net.HttpListenerRequest.GetClientCertificateAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.HasEntityBody\n  commentId: P:System.Net.HttpListenerRequest.HasEntityBody\n  id: HasEntityBody\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: HasEntityBody\n  nameWithType: HttpListenerRequest.HasEntityBody\n  fullName: HttpListenerRequest.HasEntityBody\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the request has associated body data.\n  remarks: A request that sends data to the server using the `POST` method, for example, should have an entity body.\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]\"\n  syntax:\n    content: public bool HasEntityBody { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the request has associated body data; otherwise, `false`.'\n  overload: System.Net.HttpListenerRequest.HasEntityBody*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.Headers\n  commentId: P:System.Net.HttpListenerRequest.Headers\n  id: Headers\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: Headers\n  nameWithType: HttpListenerRequest.Headers\n  fullName: HttpListenerRequest.Headers\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the collection of header name/value pairs sent in the request.\n  remarks: \"Request headers contain metadata information. For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.  \\n  \\n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.\"\n  example:\n  - \"The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.  \\n  \\n [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]\"\n  syntax:\n    content: public System.Collections.Specialized.NameValueCollection Headers { get; }\n    return:\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Net.WebHeaderCollection\"></xref> that contains the HTTP headers included in the request.\n  overload: System.Net.HttpListenerRequest.Headers*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.HttpMethod\n  commentId: P:System.Net.HttpListenerRequest.HttpMethod\n  id: HttpMethod\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: HttpMethod\n  nameWithType: HttpListenerRequest.HttpMethod\n  fullName: HttpListenerRequest.HttpMethod\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the HTTP method specified by the client.\n  remarks: The HTTP method is typically GET or POST, depending on the action desired by the client.\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]\"\n  syntax:\n    content: public string HttpMethod { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the method used in the request.\n  overload: System.Net.HttpListenerRequest.HttpMethod*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.InputStream\n  commentId: P:System.Net.HttpListenerRequest.InputStream\n  id: InputStream\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: InputStream\n  nameWithType: HttpListenerRequest.InputStream\n  fullName: HttpListenerRequest.InputStream\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets a stream that contains the body data sent by the client.\n  remarks: \"If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.  \\n  \\n> [!NOTE]\\n>  Closing the request does not close the stream returned by this property. When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.\"\n  example:\n  - \"The following code example demonstrates using this property to read the data sent with a request.  \\n  \\n [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]\"\n  syntax:\n    content: public System.IO.Stream InputStream { get; }\n    return:\n      type: System.IO.Stream\n      description: A readable <xref href=\"System.IO.Stream\"></xref> object that contains the bytes sent by the client in the body of the request. This property returns <xref href=\"System.IO.Stream.Null\"></xref> if no data is sent with the request.\n  overload: System.Net.HttpListenerRequest.InputStream*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.IsAuthenticated\n  commentId: P:System.Net.HttpListenerRequest.IsAuthenticated\n  id: IsAuthenticated\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: IsAuthenticated\n  nameWithType: HttpListenerRequest.IsAuthenticated\n  fullName: HttpListenerRequest.IsAuthenticated\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the client sending this request is authenticated.\n  remarks: \"Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.  \\n  \\n Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.\"\n  example:\n  - \"The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.  \\n  \\n [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO(\"Always returns false\")]\n\n      public bool IsAuthenticated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the client was authenticated; otherwise, `false`.'\n  overload: System.Net.HttpListenerRequest.IsAuthenticated*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.IsLocal\n  commentId: P:System.Net.HttpListenerRequest.IsLocal\n  id: IsLocal\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: IsLocal\n  nameWithType: HttpListenerRequest.IsLocal\n  fullName: HttpListenerRequest.IsLocal\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the request is sent from the local computer.\n  remarks: Applications can use this property to perform special processing when requests are from the local computer.\n  example:\n  - \"The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.  \\n  \\n [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]\"\n  syntax:\n    content: public bool IsLocal { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the request originated on the same computer as the <xref href=\"System.Net.HttpListener\"></xref> object that provided the request; otherwise, `false`.'\n  overload: System.Net.HttpListenerRequest.IsLocal*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.IsSecureConnection\n  commentId: P:System.Net.HttpListenerRequest.IsSecureConnection\n  id: IsSecureConnection\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: IsSecureConnection\n  nameWithType: HttpListenerRequest.IsSecureConnection\n  fullName: HttpListenerRequest.IsSecureConnection\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.\n  remarks: To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>. If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.\n  example:\n  - \"The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.  \\n  \\n [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]\"\n  syntax:\n    content: public bool IsSecureConnection { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the TCP connection is using SSL; otherwise, `false`.'\n  overload: System.Net.HttpListenerRequest.IsSecureConnection*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.IsWebSocketRequest\n  commentId: P:System.Net.HttpListenerRequest.IsWebSocketRequest\n  id: IsWebSocketRequest\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: IsWebSocketRequest\n  nameWithType: HttpListenerRequest.IsWebSocketRequest\n  fullName: HttpListenerRequest.IsWebSocketRequest\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the TCP connection was  a WebSocket request.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public bool IsWebSocketRequest { get; }\n    return:\n      type: System.Boolean\n      description: \"Returns <xref href=\\\"System.Boolean\\\"></xref>.  \\n  \\n `true` if the TCP connection is a WebSocket request; otherwise, `false`.\"\n  overload: System.Net.HttpListenerRequest.IsWebSocketRequest*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.KeepAlive\n  commentId: P:System.Net.HttpListenerRequest.KeepAlive\n  id: KeepAlive\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: KeepAlive\n  nameWithType: HttpListenerRequest.KeepAlive\n  fullName: HttpListenerRequest.KeepAlive\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the client requests a persistent connection.\n  remarks: If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message. For clients using HTTP/1.1, the default value for this property is `true`.\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]\"\n  syntax:\n    content: public bool KeepAlive { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the connection should be kept open; otherwise, `false`.'\n  overload: System.Net.HttpListenerRequest.KeepAlive*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.LocalEndPoint\n  commentId: P:System.Net.HttpListenerRequest.LocalEndPoint\n  id: LocalEndPoint\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: LocalEndPoint\n  nameWithType: HttpListenerRequest.LocalEndPoint\n  fullName: HttpListenerRequest.LocalEndPoint\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Get the server IP address and port number to which the request is directed.\n  remarks: This property is useful when you want to respond to requests based on the way they are addressed.\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]\"\n  syntax:\n    content: public System.Net.IPEndPoint LocalEndPoint { get; }\n    return:\n      type: System.Net.IPEndPoint\n      description: An <xref href=\"System.Net.IPEndPoint\"></xref> that represents the IP address that the request is sent to.\n  overload: System.Net.HttpListenerRequest.LocalEndPoint*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.ProtocolVersion\n  commentId: P:System.Net.HttpListenerRequest.ProtocolVersion\n  id: ProtocolVersion\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: ProtocolVersion\n  nameWithType: HttpListenerRequest.ProtocolVersion\n  fullName: HttpListenerRequest.ProtocolVersion\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the HTTP version used by the requesting client.\n  remarks: The capabilities of different HTTP versions are specified in the documents available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]\"\n  syntax:\n    content: public Version ProtocolVersion { get; }\n    return:\n      type: System.Version\n      description: A <xref href=\"System.Version\"></xref> that identifies the client's version of HTTP.\n  overload: System.Net.HttpListenerRequest.ProtocolVersion*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.QueryString\n  commentId: P:System.Net.HttpListenerRequest.QueryString\n  id: QueryString\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: QueryString\n  nameWithType: HttpListenerRequest.QueryString\n  fullName: HttpListenerRequest.QueryString\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the query string included in the request.\n  remarks: \"In a URL, the query information is separated from the path information by a question mark (?). Name/value pairs are separated by an equals sign (=). To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.  \\n  \\n> [!NOTE]\\n>  Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.  \\n  \\n [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]\"\n  syntax:\n    content: public System.Collections.Specialized.NameValueCollection QueryString { get; }\n    return:\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object that contains the query data included in the request <xref href=\"System.Net.HttpListenerRequest.Url\"></xref>.\n  overload: System.Net.HttpListenerRequest.QueryString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.RawUrl\n  commentId: P:System.Net.HttpListenerRequest.RawUrl\n  id: RawUrl\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: RawUrl\n  nameWithType: HttpListenerRequest.RawUrl\n  fullName: HttpListenerRequest.RawUrl\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the URL information (without the host and port) requested by the client.\n  remarks: \"The raw URL is defined as the part of the URL following the domain information. In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`. The raw URL includes the query string, if present.  \\n  \\n To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.  \\n  \\n [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]\"\n  syntax:\n    content: public string RawUrl { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the raw URL for this request.\n  overload: System.Net.HttpListenerRequest.RawUrl*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.RemoteEndPoint\n  commentId: P:System.Net.HttpListenerRequest.RemoteEndPoint\n  id: RemoteEndPoint\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: RemoteEndPoint\n  nameWithType: HttpListenerRequest.RemoteEndPoint\n  fullName: HttpListenerRequest.RemoteEndPoint\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the client IP address and port number from which the request originated.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]\"\n  syntax:\n    content: public System.Net.IPEndPoint RemoteEndPoint { get; }\n    return:\n      type: System.Net.IPEndPoint\n      description: An <xref href=\"System.Net.IPEndPoint\"></xref> that represents the IP address and port number from which the request originated.\n  overload: System.Net.HttpListenerRequest.RemoteEndPoint*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier\n  commentId: P:System.Net.HttpListenerRequest.RequestTraceIdentifier\n  id: RequestTraceIdentifier\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: RequestTraceIdentifier\n  nameWithType: HttpListenerRequest.RequestTraceIdentifier\n  fullName: HttpListenerRequest.RequestTraceIdentifier\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the request identifier of the incoming HTTP request.\n  syntax:\n    content: >-\n      [System.MonoTODO(\"Always returns Guid.Empty\")]\n\n      public Guid RequestTraceIdentifier { get; }\n    return:\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> object that contains the identifier of the HTTP request.\n  overload: System.Net.HttpListenerRequest.RequestTraceIdentifier*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.ServiceName\n  commentId: P:System.Net.HttpListenerRequest.ServiceName\n  id: ServiceName\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: ServiceName\n  nameWithType: HttpListenerRequest.ServiceName\n  fullName: HttpListenerRequest.ServiceName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the Service Provider Name (SPN) that the client sent on the request.\n  remarks: An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public string ServiceName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the SPN the client sent on the request.\n  overload: System.Net.HttpListenerRequest.ServiceName*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.TransportContext\n  commentId: P:System.Net.HttpListenerRequest.TransportContext\n  id: TransportContext\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: TransportContext\n  nameWithType: HttpListenerRequest.TransportContext\n  fullName: HttpListenerRequest.TransportContext\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the <xref href=\"System.Net.TransportContext\"></xref> for the client request.\n  remarks: \"The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.  \\n  \\n An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function.  \\n  \\n If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>. The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.\"\n  syntax:\n    content: public System.Net.TransportContext TransportContext { get; }\n    return:\n      type: System.Net.TransportContext\n      description: A <xref href=\"System.Net.TransportContext\"></xref> object for the client request.\n  overload: System.Net.HttpListenerRequest.TransportContext*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.Url\n  commentId: P:System.Net.HttpListenerRequest.Url\n  id: Url\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: Url\n  nameWithType: HttpListenerRequest.Url\n  fullName: HttpListenerRequest.Url\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the <xref href=\"System.Uri\"></xref> object requested by the client.\n  remarks: \"The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object. If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.  \\n  \\n The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.  \\n  \\n The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.  \\n  \\n When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> property.  \\n  \\n The `http.sys` service exposes two request URI strings:  \\n  \\n-   Raw URI  \\n  \\n-   Converted URI  \\n  \\n The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:  \\n  \\n `GET /path/`  \\n  \\n `Host: www.contoso.com`  \\n  \\n The raw URI provided by `http.sys` for the request mentioned above, is \\\"/path/\\\". This represents the string following the HTTP verb as it was sent over the network.  \\n  \\n The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to. This is done by comparing the information from the request with a set of registered URI prefixes. In order to be able to compare those values, some normalization to the request needs to be done. For the sample above the converted URI would be as follows:  \\n  \\n `http://www.contoso.com/path/`  \\n  \\n The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI. In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:  \\n  \\n-   Un-escapes all percent encoded values.  \\n  \\n-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).  \\n  \\n-   Executes other normalization steps, like path compression.  \\n  \\n Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.  \\n  \\n Therefore `http.sys` provides two registry keys for modifying the process:  \\n  \\n|Registry Key|Default Value|Description|  \\n|------------------|-------------------|-----------------|  \\n|EnableNonUTF8|1|If zero, `http.sys` accepts only UTF-8-encoded URLs.<br /><br /> If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.|  \\n|FavorUTF8|1|If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.<br /><br /> If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|  \\n  \\n When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.  \\n  \\n There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \\\"1/3812\\\":  \\n  \\n `http://www.contoso.com/Customer('1%2F3812')/`  \\n  \\n Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.  \\n  \\n Passing the string to Uri constructor will lead to the following URI:  \\n  \\n `http://www.contoso.com/Customer('1/3812')/`  \\n  \\n Splitting the path into its segments would result in the following elements:  \\n  \\n `Customer('1`  \\n  \\n `3812')`  \\n  \\n This is not the intent of the sender of the request.  \\n  \\n If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.  \\n  \\n [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]\"\n  syntax:\n    content: public Uri Url { get; }\n    return:\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> object that identifies the resource requested by the client.\n  overload: System.Net.HttpListenerRequest.Url*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.UrlReferrer\n  commentId: P:System.Net.HttpListenerRequest.UrlReferrer\n  id: UrlReferrer\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: UrlReferrer\n  nameWithType: HttpListenerRequest.UrlReferrer\n  fullName: HttpListenerRequest.UrlReferrer\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.\n  remarks: \"If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.  \\n  \\n Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header. Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.  \\n  \\n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.  \\n  \\n The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.\"\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]\"\n  syntax:\n    content: public Uri UrlReferrer { get; }\n    return:\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> object that contains the text of the request's <xref href=\"System.Net.HttpRequestHeader.Referer\"></xref> header, or `null` if the header was not included in the request.\n  overload: System.Net.HttpListenerRequest.UrlReferrer*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.UserAgent\n  commentId: P:System.Net.HttpListenerRequest.UserAgent\n  id: UserAgent\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: UserAgent\n  nameWithType: HttpListenerRequest.UserAgent\n  fullName: HttpListenerRequest.UserAgent\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the user agent presented by the client.\n  remarks: \"The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.  \\n  \\n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.  \\n  \\n The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.\"\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]\"\n  syntax:\n    content: public string UserAgent { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> object that contains the text of the request's `User-Agent` header.\n  overload: System.Net.HttpListenerRequest.UserAgent*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.UserHostAddress\n  commentId: P:System.Net.HttpListenerRequest.UserHostAddress\n  id: UserHostAddress\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: UserHostAddress\n  nameWithType: HttpListenerRequest.UserHostAddress\n  fullName: HttpListenerRequest.UserHostAddress\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the server IP address and port number to which the request is directed.\n  remarks: The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.\n  example:\n  - \"The following code example displays the value of this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]\"\n  syntax:\n    content: public string UserHostAddress { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the host address information.\n  overload: System.Net.HttpListenerRequest.UserHostAddress*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.UserHostName\n  commentId: P:System.Net.HttpListenerRequest.UserHostName\n  id: UserHostName\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: UserHostName\n  nameWithType: HttpListenerRequest.UserHostName\n  fullName: HttpListenerRequest.UserHostName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the DNS name and, if provided, the port number specified by the client.\n  remarks: \"The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).  \\n  \\n You can use this property to return different responses depending on the host name specified in the request.  \\n  \\n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.\"\n  example:\n  - \"The following code example demonstrates using this property.  \\n  \\n [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]\"\n  syntax:\n    content: public string UserHostName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> value that contains the text of the request's `Host` header.\n  overload: System.Net.HttpListenerRequest.UserHostName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerRequest.UserLanguages\n  commentId: P:System.Net.HttpListenerRequest.UserLanguages\n  id: UserLanguages\n  parent: System.Net.HttpListenerRequest\n  langs:\n  - csharp\n  name: UserLanguages\n  nameWithType: HttpListenerRequest.UserLanguages\n  fullName: HttpListenerRequest.UserLanguages\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets the natural languages that are preferred for the response.\n  remarks: \"For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [http://www.rfc-editor.org](http://www.rfc-editor.org/).  \\n  \\n For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.\"\n  example:\n  - \"The following code example displays the languages from the request's `Accept-Language` header.  \\n  \\n [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]\"\n  syntax:\n    content: public string[] UserLanguages { get; }\n    return:\n      type: System.String[]\n      description: A <xref href=\"System.String\"></xref> array that contains the languages specified in the request's <xref href=\"System.Net.HttpRequestHeader.AcceptLanguage\"></xref> header or `null` if the client request did not include an <xref href=\"System.Net.HttpRequestHeader.AcceptLanguage\"></xref> header.\n  overload: System.Net.HttpListenerRequest.UserLanguages*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Net.HttpListenerRequest.AcceptTypes\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: AcceptTypes\n  nameWithType: HttpListenerRequest.AcceptTypes\n  fullName: HttpListenerRequest.AcceptTypes\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: BeginGetClientCertificate(AsyncCallback, Object)\n  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback, Object)\n  fullName: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Net.HttpListenerRequest.ClientCertificateError\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ClientCertificateError\n  nameWithType: HttpListenerRequest.ClientCertificateError\n  fullName: HttpListenerRequest.ClientCertificateError\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.HttpListenerRequest.ContentEncoding\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ContentEncoding\n  nameWithType: HttpListenerRequest.ContentEncoding\n  fullName: HttpListenerRequest.ContentEncoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Net.HttpListenerRequest.ContentLength64\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ContentLength64\n  nameWithType: HttpListenerRequest.ContentLength64\n  fullName: HttpListenerRequest.ContentLength64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.HttpListenerRequest.ContentType\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ContentType\n  nameWithType: HttpListenerRequest.ContentType\n  fullName: HttpListenerRequest.ContentType\n- uid: System.Net.HttpListenerRequest.Cookies\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: Cookies\n  nameWithType: HttpListenerRequest.Cookies\n  fullName: HttpListenerRequest.Cookies\n- uid: System.Net.CookieCollection\n  parent: System.Net\n  isExternal: false\n  name: CookieCollection\n  nameWithType: CookieCollection\n  fullName: System.Net.CookieCollection\n- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: EndGetClientCertificate(IAsyncResult)\n  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)\n  fullName: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.Net.HttpListenerRequest.GetClientCertificate\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: GetClientCertificate()\n  nameWithType: HttpListenerRequest.GetClientCertificate()\n  fullName: HttpListenerRequest.GetClientCertificate()\n- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: GetClientCertificateAsync()\n  nameWithType: HttpListenerRequest.GetClientCertificateAsync()\n  fullName: HttpListenerRequest.GetClientCertificateAsync()\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<X509Certificate2>\n  nameWithType: Task<X509Certificate2>\n  fullName: System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n    name: X509Certificate2\n    nameWithType: X509Certificate2\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.HttpListenerRequest.HasEntityBody\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: HasEntityBody\n  nameWithType: HttpListenerRequest.HasEntityBody\n  fullName: HttpListenerRequest.HasEntityBody\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.HttpListenerRequest.Headers\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: Headers\n  nameWithType: HttpListenerRequest.Headers\n  fullName: HttpListenerRequest.Headers\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Net.HttpListenerRequest.HttpMethod\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: HttpMethod\n  nameWithType: HttpListenerRequest.HttpMethod\n  fullName: HttpListenerRequest.HttpMethod\n- uid: System.Net.HttpListenerRequest.InputStream\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: InputStream\n  nameWithType: HttpListenerRequest.InputStream\n  fullName: HttpListenerRequest.InputStream\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Net.HttpListenerRequest.IsAuthenticated\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: IsAuthenticated\n  nameWithType: HttpListenerRequest.IsAuthenticated\n  fullName: HttpListenerRequest.IsAuthenticated\n- uid: System.Net.HttpListenerRequest.IsLocal\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: IsLocal\n  nameWithType: HttpListenerRequest.IsLocal\n  fullName: HttpListenerRequest.IsLocal\n- uid: System.Net.HttpListenerRequest.IsSecureConnection\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: IsSecureConnection\n  nameWithType: HttpListenerRequest.IsSecureConnection\n  fullName: HttpListenerRequest.IsSecureConnection\n- uid: System.Net.HttpListenerRequest.IsWebSocketRequest\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: IsWebSocketRequest\n  nameWithType: HttpListenerRequest.IsWebSocketRequest\n  fullName: HttpListenerRequest.IsWebSocketRequest\n- uid: System.Net.HttpListenerRequest.KeepAlive\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: KeepAlive\n  nameWithType: HttpListenerRequest.KeepAlive\n  fullName: HttpListenerRequest.KeepAlive\n- uid: System.Net.HttpListenerRequest.LocalEndPoint\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: LocalEndPoint\n  nameWithType: HttpListenerRequest.LocalEndPoint\n  fullName: HttpListenerRequest.LocalEndPoint\n- uid: System.Net.IPEndPoint\n  parent: System.Net\n  isExternal: false\n  name: IPEndPoint\n  nameWithType: IPEndPoint\n  fullName: System.Net.IPEndPoint\n- uid: System.Net.HttpListenerRequest.ProtocolVersion\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ProtocolVersion\n  nameWithType: HttpListenerRequest.ProtocolVersion\n  fullName: HttpListenerRequest.ProtocolVersion\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Net.HttpListenerRequest.QueryString\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: QueryString\n  nameWithType: HttpListenerRequest.QueryString\n  fullName: HttpListenerRequest.QueryString\n- uid: System.Net.HttpListenerRequest.RawUrl\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: RawUrl\n  nameWithType: HttpListenerRequest.RawUrl\n  fullName: HttpListenerRequest.RawUrl\n- uid: System.Net.HttpListenerRequest.RemoteEndPoint\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: RemoteEndPoint\n  nameWithType: HttpListenerRequest.RemoteEndPoint\n  fullName: HttpListenerRequest.RemoteEndPoint\n- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: RequestTraceIdentifier\n  nameWithType: HttpListenerRequest.RequestTraceIdentifier\n  fullName: HttpListenerRequest.RequestTraceIdentifier\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Net.HttpListenerRequest.ServiceName\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ServiceName\n  nameWithType: HttpListenerRequest.ServiceName\n  fullName: HttpListenerRequest.ServiceName\n- uid: System.Net.HttpListenerRequest.TransportContext\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: TransportContext\n  nameWithType: HttpListenerRequest.TransportContext\n  fullName: HttpListenerRequest.TransportContext\n- uid: System.Net.TransportContext\n  parent: System.Net\n  isExternal: false\n  name: TransportContext\n  nameWithType: TransportContext\n  fullName: System.Net.TransportContext\n- uid: System.Net.HttpListenerRequest.Url\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: Url\n  nameWithType: HttpListenerRequest.Url\n  fullName: HttpListenerRequest.Url\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Net.HttpListenerRequest.UrlReferrer\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UrlReferrer\n  nameWithType: HttpListenerRequest.UrlReferrer\n  fullName: HttpListenerRequest.UrlReferrer\n- uid: System.Net.HttpListenerRequest.UserAgent\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UserAgent\n  nameWithType: HttpListenerRequest.UserAgent\n  fullName: HttpListenerRequest.UserAgent\n- uid: System.Net.HttpListenerRequest.UserHostAddress\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UserHostAddress\n  nameWithType: HttpListenerRequest.UserHostAddress\n  fullName: HttpListenerRequest.UserHostAddress\n- uid: System.Net.HttpListenerRequest.UserHostName\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UserHostName\n  nameWithType: HttpListenerRequest.UserHostName\n  fullName: HttpListenerRequest.UserHostName\n- uid: System.Net.HttpListenerRequest.UserLanguages\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UserLanguages\n  nameWithType: HttpListenerRequest.UserLanguages\n  fullName: HttpListenerRequest.UserLanguages\n- uid: System.Net.HttpListenerRequest.AcceptTypes*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: AcceptTypes\n  nameWithType: HttpListenerRequest.AcceptTypes\n  fullName: HttpListenerRequest.AcceptTypes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: BeginGetClientCertificate\n  nameWithType: HttpListenerRequest.BeginGetClientCertificate\n  fullName: HttpListenerRequest.BeginGetClientCertificate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.ClientCertificateError*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ClientCertificateError\n  nameWithType: HttpListenerRequest.ClientCertificateError\n  fullName: HttpListenerRequest.ClientCertificateError\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.ContentEncoding*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ContentEncoding\n  nameWithType: HttpListenerRequest.ContentEncoding\n  fullName: HttpListenerRequest.ContentEncoding\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.ContentLength64*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ContentLength64\n  nameWithType: HttpListenerRequest.ContentLength64\n  fullName: HttpListenerRequest.ContentLength64\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.ContentType*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ContentType\n  nameWithType: HttpListenerRequest.ContentType\n  fullName: HttpListenerRequest.ContentType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.Cookies*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: Cookies\n  nameWithType: HttpListenerRequest.Cookies\n  fullName: HttpListenerRequest.Cookies\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.EndGetClientCertificate*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: EndGetClientCertificate\n  nameWithType: HttpListenerRequest.EndGetClientCertificate\n  fullName: HttpListenerRequest.EndGetClientCertificate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.GetClientCertificate*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: GetClientCertificate\n  nameWithType: HttpListenerRequest.GetClientCertificate\n  fullName: HttpListenerRequest.GetClientCertificate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: GetClientCertificateAsync\n  nameWithType: HttpListenerRequest.GetClientCertificateAsync\n  fullName: HttpListenerRequest.GetClientCertificateAsync\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.HasEntityBody*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: HasEntityBody\n  nameWithType: HttpListenerRequest.HasEntityBody\n  fullName: HttpListenerRequest.HasEntityBody\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.Headers*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: Headers\n  nameWithType: HttpListenerRequest.Headers\n  fullName: HttpListenerRequest.Headers\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.HttpMethod*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: HttpMethod\n  nameWithType: HttpListenerRequest.HttpMethod\n  fullName: HttpListenerRequest.HttpMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.InputStream*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: InputStream\n  nameWithType: HttpListenerRequest.InputStream\n  fullName: HttpListenerRequest.InputStream\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.IsAuthenticated*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: IsAuthenticated\n  nameWithType: HttpListenerRequest.IsAuthenticated\n  fullName: HttpListenerRequest.IsAuthenticated\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.IsLocal*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: IsLocal\n  nameWithType: HttpListenerRequest.IsLocal\n  fullName: HttpListenerRequest.IsLocal\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.IsSecureConnection*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: IsSecureConnection\n  nameWithType: HttpListenerRequest.IsSecureConnection\n  fullName: HttpListenerRequest.IsSecureConnection\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.IsWebSocketRequest*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: IsWebSocketRequest\n  nameWithType: HttpListenerRequest.IsWebSocketRequest\n  fullName: HttpListenerRequest.IsWebSocketRequest\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.KeepAlive*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: KeepAlive\n  nameWithType: HttpListenerRequest.KeepAlive\n  fullName: HttpListenerRequest.KeepAlive\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.LocalEndPoint*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: LocalEndPoint\n  nameWithType: HttpListenerRequest.LocalEndPoint\n  fullName: HttpListenerRequest.LocalEndPoint\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.ProtocolVersion*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ProtocolVersion\n  nameWithType: HttpListenerRequest.ProtocolVersion\n  fullName: HttpListenerRequest.ProtocolVersion\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.QueryString*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: QueryString\n  nameWithType: HttpListenerRequest.QueryString\n  fullName: HttpListenerRequest.QueryString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.RawUrl*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: RawUrl\n  nameWithType: HttpListenerRequest.RawUrl\n  fullName: HttpListenerRequest.RawUrl\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.RemoteEndPoint*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: RemoteEndPoint\n  nameWithType: HttpListenerRequest.RemoteEndPoint\n  fullName: HttpListenerRequest.RemoteEndPoint\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: RequestTraceIdentifier\n  nameWithType: HttpListenerRequest.RequestTraceIdentifier\n  fullName: HttpListenerRequest.RequestTraceIdentifier\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.ServiceName*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: ServiceName\n  nameWithType: HttpListenerRequest.ServiceName\n  fullName: HttpListenerRequest.ServiceName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.TransportContext*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: TransportContext\n  nameWithType: HttpListenerRequest.TransportContext\n  fullName: HttpListenerRequest.TransportContext\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.Url*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: Url\n  nameWithType: HttpListenerRequest.Url\n  fullName: HttpListenerRequest.Url\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.UrlReferrer*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UrlReferrer\n  nameWithType: HttpListenerRequest.UrlReferrer\n  fullName: HttpListenerRequest.UrlReferrer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.UserAgent*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UserAgent\n  nameWithType: HttpListenerRequest.UserAgent\n  fullName: HttpListenerRequest.UserAgent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.UserHostAddress*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UserHostAddress\n  nameWithType: HttpListenerRequest.UserHostAddress\n  fullName: HttpListenerRequest.UserHostAddress\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.UserHostName*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UserHostName\n  nameWithType: HttpListenerRequest.UserHostName\n  fullName: HttpListenerRequest.UserHostName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Net.HttpListenerRequest.UserLanguages*\n  parent: System.Net.HttpListenerRequest\n  isExternal: false\n  name: UserLanguages\n  nameWithType: HttpListenerRequest.UserLanguages\n  fullName: HttpListenerRequest.UserLanguages\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerRequest.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}