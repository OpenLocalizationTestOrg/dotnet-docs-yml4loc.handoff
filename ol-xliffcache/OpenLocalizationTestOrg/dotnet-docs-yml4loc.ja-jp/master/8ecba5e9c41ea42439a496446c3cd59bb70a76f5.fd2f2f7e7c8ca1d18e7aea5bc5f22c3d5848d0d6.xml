{"nodes":[{"content":"Declares the base members for <xref href=\"System.ServiceModel.MessageBodyMemberAttribute\"></xref> and <xref href=\"System.ServiceModel.MessageHeaderAttribute\"></xref>.","nodes":[{"pos":[0,166],"content":"Declares the base members for <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageBodyMemberAttribute\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.MessageHeaderAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Declares the base members for <xref href=\"System.ServiceModel.MessageBodyMemberAttribute\"></xref> and <xref href=\"System.ServiceModel.MessageHeaderAttribute\"></xref>."}],"pos":[805,972],"yaml":true},{"content":"This class contains properties common to all parts of a SOAP message. For example, all parts have a name and a namespace, and potentially a level of security applied.  \n  \n For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), and [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).  \n  \n For more information about creating message contracts, see [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).","nodes":[{"pos":[0,166],"content":"This class contains properties common to all parts of a SOAP message. For example, all parts have a name and a namespace, and potentially a level of security applied.","nodes":[{"content":"This class contains properties common to all parts of a SOAP message. For example, all parts have a name and a namespace, and potentially a level of security applied.","pos":[0,166],"nodes":[{"content":"This class contains properties common to all parts of a SOAP message.","pos":[0,69]},{"content":"For example, all parts have a name and a namespace, and potentially a level of security applied.","pos":[70,166]}]}]},{"pos":[173,618],"content":"For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName&gt;</ph>, <bpt id=\"p1\">[</bpt>Specifying Data Transfer in Service Contracts<ept id=\"p1\">](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>, and <bpt id=\"p2\">[</bpt>Using Data Contracts<ept id=\"p2\">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.","source":"For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), and [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md)."},{"pos":[625,775],"content":"For more information about creating message contracts, see <bpt id=\"p1\">[</bpt>Using Message Contracts<ept id=\"p1\">](~/docs/framework/wcf/feature-details/using-message-contracts.md)</ept>.","source":"For more information about creating message contracts, see [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md)."}],"pos":[983,1765],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageContractMemberAttribute\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageContractMemberAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageContractMemberAttribute\"></xref> class."}],"pos":[8261,8374],"yaml":true},{"content":"When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.","nodes":[{"pos":[0,115],"content":"When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.","nodes":[{"content":"When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.","pos":[0,115]}]}],"pos":[9740,9856],"yaml":true},{"content":"`true` if the member has a protection level; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the member has a protection level; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the member has a protection level; otherwise, `false`."}],"pos":[9977,10044],"yaml":true},{"content":"Specifies the name of the element that corresponds to this member.","nodes":[{"pos":[0,66],"content":"Specifies the name of the element that corresponds to this member.","nodes":[{"content":"Specifies the name of the element that corresponds to this member.","pos":[0,66]}]}],"pos":[11252,11319],"yaml":true},{"content":"The name of the element that corresponds to this member. This string must be a valid XML element name.","nodes":[{"pos":[0,102],"content":"The name of the element that corresponds to this member. This string must be a valid XML element name.","nodes":[{"content":"The name of the element that corresponds to this member. This string must be a valid XML element name.","pos":[0,102],"nodes":[{"content":"The name of the element that corresponds to this member.","pos":[0,56]},{"content":"This string must be a valid XML element name.","pos":[57,102]}]}]}],"pos":[12630,12733],"yaml":true},{"content":"Specifies the namespace of the element that corresponds to this member.","nodes":[{"pos":[0,71],"content":"Specifies the namespace of the element that corresponds to this member.","nodes":[{"content":"Specifies the namespace of the element that corresponds to this member.","pos":[0,71]}]}],"pos":[13957,14029],"yaml":true},{"content":"A namespace URI of the element that corresponds to this member.","nodes":[{"pos":[0,63],"content":"A namespace URI of the element that corresponds to this member.","nodes":[{"content":"A namespace URI of the element that corresponds to this member.","pos":[0,63]}]}],"pos":[15462,15526],"yaml":true},{"content":"Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.","nodes":[{"pos":[0,89],"content":"Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.","nodes":[{"content":"Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.","pos":[0,89]}]}],"pos":[16791,16881],"yaml":true},{"content":"To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors. If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> with a message part without supplying security credentials) an exception is thrown at run time.  \n  \n In addition, the protection level is determined for each header individually. However, the SOAP body has only one protection level, regardless of the number of body parts. The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts. For example, consider the following class:  \n  \n```csharp  \n[MessageContract]  \npublic class PatientRecord  \n{  \n   [MessageHeader(ProtectionLevel=None)] public int recordID;  \n   [MessageHeader(ProtectionLevel=Sign)] public string patientName;  \n   [MessageHeader(ProtectionLevel=EncryptAndSign)] public string SSN;  \n   [MessageBody(ProtectionLevel=None)] public string comments;  \n   [MessageBody(ProtectionLevel=Sign)] public string diagnosis;  \n   [MessageBody(ProtectionLevel=EncryptAndSign)] public string medicalHistory;  \n}  \n```  \n  \n In this example, the `recordID` header is not protected, `patientName` is signed, and `SSN` is encrypted and signed. There is at least one body part, `medicalHistory`, with <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and thus the entire message body is encrypted and signed, even though the `comments` and `diagnosis` body parts specify lower protection levels.  \n  \n The protection behavior at runtime is the combination of the protection-level values set on the following properties. These properties have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.  \n  \n For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.  \n  \n For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \n  \n The scopes at which these values are set are:  \n  \n <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.  \n  \n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.  \n  \n When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","nodes":[{"pos":[0,542],"content":"To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors. If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> with a message part without supplying security credentials) an exception is thrown at run time.","nodes":[{"content":"To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors. If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> with a message part without supplying security credentials) an exception is thrown at run time.","pos":[0,542],"nodes":[{"content":"To make use of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> property in either the <ph id=\"ph2\">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes you must properly configure the binding and behaviors.","pos":[0,291],"source":"To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors."},{"content":"If these security features are used without a proper configuration (for example, using <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> with a message part without supplying security credentials) an exception is thrown at run time.","pos":[292,542],"source":" If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> with a message part without supplying security credentials) an exception is thrown at run time."}]}]},{"pos":[549,940],"content":"In addition, the protection level is determined for each header individually. However, the SOAP body has only one protection level, regardless of the number of body parts. The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts. For example, consider the following class:","nodes":[{"content":"In addition, the protection level is determined for each header individually. However, the SOAP body has only one protection level, regardless of the number of body parts. The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts. For example, consider the following class:","pos":[0,391],"nodes":[{"content":"In addition, the protection level is determined for each header individually.","pos":[0,77]},{"content":"However, the SOAP body has only one protection level, regardless of the number of body parts.","pos":[78,171]},{"content":"The protection level of the body is determined by the highest <ph id=\"ph1\">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> property value of all the body parts.","pos":[172,348],"source":" The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts."},{"content":"For example, consider the following class:","pos":[349,391]}]}]},{"pos":[1443,1828],"content":"In this example, the `recordID` header is not protected, `patientName` is signed, and `SSN` is encrypted and signed. There is at least one body part, `medicalHistory`, with <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and thus the entire message body is encrypted and signed, even though the `comments` and `diagnosis` body parts specify lower protection levels.","nodes":[{"content":"In this example, the <ph id=\"ph1\">`recordID`</ph> header is not protected, <ph id=\"ph2\">`patientName`</ph> is signed, and <ph id=\"ph3\">`SSN`</ph> is encrypted and signed.","pos":[0,116],"source":"In this example, the `recordID` header is not protected, `patientName` is signed, and `SSN` is encrypted and signed."},{"content":"There is at least one body part, <ph id=\"ph1\">`medicalHistory`</ph>, with <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> and thus the entire message body is encrypted and signed, even though the <ph id=\"ph3\">`comments`</ph> and <ph id=\"ph4\">`diagnosis`</ph> body parts specify lower protection levels.","pos":[117,385],"source":" There is at least one body part, `medicalHistory`, with <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and thus the entire message body is encrypted and signed, even though the `comments` and `diagnosis` body parts specify lower protection levels."}]},{"pos":[1835,2268],"content":"The protection behavior at runtime is the combination of the protection-level values set on the following properties. These properties have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","nodes":[{"content":"The protection behavior at runtime is the combination of the protection-level values set on the following properties. These properties have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","pos":[0,433],"nodes":[{"content":"The protection behavior at runtime is the combination of the protection-level values set on the following properties.","pos":[0,117]},{"content":"These properties have a hierarchical structure.","pos":[118,165]},{"content":"Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.","pos":[166,314]},{"content":"In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","pos":[315,433]}]}]},{"pos":[2275,2877],"content":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.","nodes":[{"content":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.","pos":[0,602],"nodes":[{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.","pos":[0,314],"source":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed."},{"content":"If, however, one of those operations has the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.","pos":[315,602],"source":" If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed."}]}]},{"pos":[2884,3047],"content":"For details about protection levels and their assumptions and scopes, see <bpt id=\"p1\">[</bpt>Understanding Protection Level<ept id=\"p1\">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.","source":"For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md)."},{"pos":[3054,3099],"content":"The scopes at which these values are set are:","nodes":[{"content":"The scopes at which these values are set are:","pos":[0,45]}]},{"pos":[3106,3201],"content":"<xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[3208,3305],"content":"<xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[3312,3405],"content":"<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[3412,3507],"content":"<xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[3514,3707],"content":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> property on <ph id=\"ph2\">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName&gt;</ph>.","pos":[0,193],"source":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>."}]},{"pos":[3714,3911],"content":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> property on <ph id=\"ph2\">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName&gt;</ph>.","pos":[0,197],"source":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>."}]},{"pos":[3918,4712],"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","nodes":[{"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","pos":[0,794],"nodes":[{"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>.","pos":[0,286],"source":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."},{"content":"If the binding does not support security (such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> for the whole contract.","pos":[287,559],"source":" If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract."},{"content":"The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>.","pos":[560,794],"source":" The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."}]}]}],"pos":[16892,21646],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.","nodes":[{"pos":[0,153],"content":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,75],"source":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel.None\"&gt;&lt;/xref&gt;</ph>.","pos":[76,153],"source":" The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>."}]}],"pos":[21821,21975],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.MessageContractMemberAttribute\n  commentId: T:System.ServiceModel.MessageContractMemberAttribute\n  id: MessageContractMemberAttribute\n  children:\n  - System.ServiceModel.MessageContractMemberAttribute.#ctor\n  - System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel\n  - System.ServiceModel.MessageContractMemberAttribute.Name\n  - System.ServiceModel.MessageContractMemberAttribute.Namespace\n  - System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel\n  langs:\n  - csharp\n  name: MessageContractMemberAttribute\n  nameWithType: MessageContractMemberAttribute\n  fullName: System.ServiceModel.MessageContractMemberAttribute\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Declares the base members for <xref href=\"System.ServiceModel.MessageBodyMemberAttribute\"></xref> and <xref href=\"System.ServiceModel.MessageHeaderAttribute\"></xref>.\n  remarks: \"This class contains properties common to all parts of a SOAP message. For example, all parts have a name and a namespace, and potentially a level of security applied.  \\n  \\n For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), and [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).  \\n  \\n For more information about creating message contracts, see [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).\"\n  example:\n  - \"The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>)to create custom typed messages to use in operations. In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`). In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.  \\n  \\n> [!NOTE]\\n>  The `Operation` and `Account` types must have a data contract.  \\n  \\n```csharp  \\n[MessageContract]  \\npublic class BankingTransaction  \\n{  \\n  [MessageHeader]   \\n  public Operation operation;  \\n  [MessageHeader(Namespace=\\\"http://schemas.contosobank.com/auditing/2005\\\")]   \\n  public bool IsAudited;  \\n  [MessageBody(ProtectionLevel=ProtectionLevel.EncryptAndSign)]   \\n  public Account sourceAccount;  \\n  [MessageBody]   \\n  public Account targetAccount;  \\n  [MessageBody(Name=\\\"transactionAmount\\\")]   \\n  public int amount;  \\n```\"\n  syntax:\n    content: 'public abstract class MessageContractMemberAttribute : Attribute'\n  inheritance:\n  - System.Object\n  - System.Attribute\n  derivedClasses:\n  - System.ServiceModel.MessageBodyMemberAttribute\n  - System.ServiceModel.MessageHeaderAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageContractMemberAttribute.#ctor\n  commentId: M:System.ServiceModel.MessageContractMemberAttribute.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  langs:\n  - csharp\n  name: MessageContractMemberAttribute()\n  nameWithType: MessageContractMemberAttribute.MessageContractMemberAttribute()\n  fullName: MessageContractMemberAttribute.MessageContractMemberAttribute()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageContractMemberAttribute\"></xref> class.\n  syntax:\n    content: protected MessageContractMemberAttribute ();\n    parameters: []\n  overload: System.ServiceModel.MessageContractMemberAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel\n  commentId: P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel\n  id: HasProtectionLevel\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  langs:\n  - csharp\n  name: HasProtectionLevel\n  nameWithType: MessageContractMemberAttribute.HasProtectionLevel\n  fullName: MessageContractMemberAttribute.HasProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.\n  syntax:\n    content: public bool HasProtectionLevel { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the member has a protection level; otherwise, `false`.'\n  overload: System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageContractMemberAttribute.Name\n  commentId: P:System.ServiceModel.MessageContractMemberAttribute.Name\n  id: Name\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MessageContractMemberAttribute.Name\n  fullName: MessageContractMemberAttribute.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies the name of the element that corresponds to this member.\n  remarks: ''\n  example:\n  - \"The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes to create custom, strongly-typed messages to use as parameters. In this case, there are three data members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`). In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace.  \\n  \\n> [!NOTE]\\n>  The `Operation` and `Account` types must also have a data contract.  \\n  \\n```csharp  \\n[MessageContract]  \\npublic class BankingTransaction  \\n{  \\n  [MessageHeader] public Operation operation;  \\n  [MessageHeader(Namespace=\\\"http://schemas.contosobank.com/auditing/2005\\\")] public bool IsAudited;  \\n  [MessageBody] public Account sourceAccount;  \\n  [MessageBody] public Account targetAccount;  \\n  [MessageBody(Name=\\\"transactionAmount\\\")] public int amount;  \\n```\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the element that corresponds to this member. This string must be a valid XML element name.\n  overload: System.ServiceModel.MessageContractMemberAttribute.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageContractMemberAttribute.Namespace\n  commentId: P:System.ServiceModel.MessageContractMemberAttribute.Namespace\n  id: Namespace\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: MessageContractMemberAttribute.Namespace\n  fullName: MessageContractMemberAttribute.Namespace\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies the namespace of the element that corresponds to this member.\n  remarks: ''\n  example:\n  - \"The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>)to create custom typed messages to use in operations. In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`). In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.  \\n  \\n> [!NOTE]\\n>  The `Operation` and `Account` types must have a data contract.  \\n  \\n```csharp  \\n[MessageContract]  \\npublic class BankingTransaction  \\n{  \\n  [MessageHeader] public Operation operation;  \\n  [MessageHeader(Namespace=\\\"http://schemas.contosobank.com/auditing/2005\\\")] public bool IsAudited;  \\n  [MessageBody] public Account sourceAccount;  \\n  [MessageBody] public Account targetAccount;  \\n  [MessageBody(Name=\\\"transactionAmount\\\")] public int amount;  \\n```\"\n  syntax:\n    content: public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: A namespace URI of the element that corresponds to this member.\n  overload: System.ServiceModel.MessageContractMemberAttribute.Namespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel\n  commentId: P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel\n  id: ProtectionLevel\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  langs:\n  - csharp\n  name: ProtectionLevel\n  nameWithType: MessageContractMemberAttribute.ProtectionLevel\n  fullName: MessageContractMemberAttribute.ProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.\n  remarks: \"To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors. If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> with a message part without supplying security credentials) an exception is thrown at run time.  \\n  \\n In addition, the protection level is determined for each header individually. However, the SOAP body has only one protection level, regardless of the number of body parts. The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts. For example, consider the following class:  \\n  \\n```csharp  \\n[MessageContract]  \\npublic class PatientRecord  \\n{  \\n   [MessageHeader(ProtectionLevel=None)] public int recordID;  \\n   [MessageHeader(ProtectionLevel=Sign)] public string patientName;  \\n   [MessageHeader(ProtectionLevel=EncryptAndSign)] public string SSN;  \\n   [MessageBody(ProtectionLevel=None)] public string comments;  \\n   [MessageBody(ProtectionLevel=Sign)] public string diagnosis;  \\n   [MessageBody(ProtectionLevel=EncryptAndSign)] public string medicalHistory;  \\n}  \\n```  \\n  \\n In this example, the `recordID` header is not protected, `patientName` is signed, and `SSN` is encrypted and signed. There is at least one body part, `medicalHistory`, with <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and thus the entire message body is encrypted and signed, even though the `comments` and `diagnosis` body parts specify lower protection levels.  \\n  \\n The protection behavior at runtime is the combination of the protection-level values set on the following properties. These properties have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.  \\n  \\n For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.  \\n  \\n For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \\n  \\n The scopes at which these values are set are:  \\n  \\n <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.  \\n  \\n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.  \\n  \\n When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }\n    return:\n      type: System.Net.Security.ProtectionLevel\n      description: One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.\n  overload: System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ServiceModel.MessageContractMemberAttribute.#ctor\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: MessageContractMemberAttribute()\n  nameWithType: MessageContractMemberAttribute.MessageContractMemberAttribute()\n  fullName: MessageContractMemberAttribute.MessageContractMemberAttribute()\n- uid: System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: HasProtectionLevel\n  nameWithType: MessageContractMemberAttribute.HasProtectionLevel\n  fullName: MessageContractMemberAttribute.HasProtectionLevel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.MessageContractMemberAttribute.Name\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: Name\n  nameWithType: MessageContractMemberAttribute.Name\n  fullName: MessageContractMemberAttribute.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.MessageContractMemberAttribute.Namespace\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: Namespace\n  nameWithType: MessageContractMemberAttribute.Namespace\n  fullName: MessageContractMemberAttribute.Namespace\n- uid: System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: MessageContractMemberAttribute.ProtectionLevel\n  fullName: MessageContractMemberAttribute.ProtectionLevel\n- uid: System.Net.Security.ProtectionLevel\n  parent: System.Net.Security\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ProtectionLevel\n  fullName: System.Net.Security.ProtectionLevel\n- uid: System.ServiceModel.MessageContractMemberAttribute.#ctor*\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: MessageContractMemberAttribute\n  nameWithType: MessageContractMemberAttribute.MessageContractMemberAttribute\n  fullName: MessageContractMemberAttribute.MessageContractMemberAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n- uid: System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel*\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: HasProtectionLevel\n  nameWithType: MessageContractMemberAttribute.HasProtectionLevel\n  fullName: MessageContractMemberAttribute.HasProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n- uid: System.ServiceModel.MessageContractMemberAttribute.Name*\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: Name\n  nameWithType: MessageContractMemberAttribute.Name\n  fullName: MessageContractMemberAttribute.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n- uid: System.ServiceModel.MessageContractMemberAttribute.Namespace*\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: Namespace\n  nameWithType: MessageContractMemberAttribute.Namespace\n  fullName: MessageContractMemberAttribute.Namespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n- uid: System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel*\n  parent: System.ServiceModel.MessageContractMemberAttribute\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: MessageContractMemberAttribute.ProtectionLevel\n  fullName: MessageContractMemberAttribute.ProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageContractMemberAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}