{"nodes":[{"content":"Provides methods for sharing and readapting add-ins.","nodes":[{"pos":[0,52],"content":"Provides methods for sharing and readapting add-ins.","nodes":[{"content":"Provides methods for sharing and readapting add-ins.","pos":[0,52]}]}],"pos":[731,784],"yaml":true},{"content":"You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).  \n  \n If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method.  \n  \n If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method.","nodes":[{"pos":[0,193],"content":"You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).","nodes":[{"content":"You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).","pos":[0,193]}]},{"pos":[200,362],"content":"If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method.","nodes":[{"content":"If you need to adapt an activated add-in from its host view to the contract, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A&gt;</ph> method.","pos":[0,162],"source":"If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method."}]},{"pos":[369,535],"content":"If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method.","nodes":[{"content":"If you have an instance of the contract and need to convert it to the host view, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A&gt;</ph> method.","pos":[0,166],"source":"If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method."}]}],"pos":[795,1337],"yaml":true,"extradata":"MT"},{"content":"Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a value from the <xref href=\"System.AddIn.Hosting.PipelineStoreLocation\"></xref> enumeration.","nodes":[{"pos":[0,194],"content":"Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a value from the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Hosting.PipelineStoreLocation\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a value from the <xref href=\"System.AddIn.Hosting.PipelineStoreLocation\"></xref> enumeration."}],"pos":[3132,3327],"yaml":true},{"content":"In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view. Use this method to query the system to find and instantiate an adapter to convert into that view.","nodes":[{"pos":[0,199],"content":"In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view. Use this method to query the system to find and instantiate an adapter to convert into that view.","nodes":[{"content":"In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view. Use this method to query the system to find and instantiate an adapter to convert into that view.","pos":[0,199],"nodes":[{"content":"In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view.","pos":[0,101]},{"content":"Use this method to query the system to find and instantiate an adapter to convert into that view.","pos":[102,199]}]}]}],"pos":[3338,3538],"yaml":true,"extradata":"MT"},{"content":"A handle to the contract used by the add-in to be shared.","nodes":[{"pos":[0,57],"content":"A handle to the contract used by the add-in to be shared.","nodes":[{"content":"A handle to the contract used by the add-in to be shared.","pos":[0,57]}]}],"pos":[3815,3873],"yaml":true},{"content":"The host's application base.","nodes":[{"pos":[0,28],"content":"The host's application base.","nodes":[{"content":"The host's application base.","pos":[0,28]}]}],"pos":[3966,3995],"yaml":true},{"content":"The type that defines the host view of the add-in.","nodes":[{"pos":[0,50],"content":"The type that defines the host view of the add-in.","nodes":[{"content":"The type that defines the host view of the add-in.","pos":[0,50]}]}],"pos":[4050,4101],"yaml":true},{"content":"The host view of the add-in that is shared.","nodes":[{"pos":[0,43],"content":"The host view of the add-in that is shared.","nodes":[{"content":"The host view of the add-in that is shared.","pos":[0,43]}]}],"pos":[4150,4194],"yaml":true},{"content":"<code>location</code> is invalid.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;location&lt;/code&gt;</ph> is invalid.","source":"<code>location</code> is invalid."}],"pos":[4378,4412],"yaml":true},{"content":"Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a path.","nodes":[{"pos":[0,108],"content":"Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a path.","nodes":[{"content":"Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a path.","pos":[0,108]}]}],"pos":[5689,5798],"yaml":true},{"content":"In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view. Use this method to query the system to find and instantiate an adapter to convert into that view.","nodes":[{"pos":[0,199],"content":"In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view. Use this method to query the system to find and instantiate an adapter to convert into that view.","nodes":[{"content":"In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view. Use this method to query the system to find and instantiate an adapter to convert into that view.","pos":[0,199],"nodes":[{"content":"In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view.","pos":[0,101]},{"content":"Use this method to query the system to find and instantiate an adapter to convert into that view.","pos":[102,199]}]}]}],"pos":[5809,6009],"yaml":true,"extradata":"MT"},{"content":"A handle to the contract used by the add-in to be shared.","nodes":[{"pos":[0,57],"content":"A handle to the contract used by the add-in to be shared.","nodes":[{"content":"A handle to the contract used by the add-in to be shared.","pos":[0,57]}]}],"pos":[6254,6312],"yaml":true},{"content":"A path to the add-in store.","nodes":[{"pos":[0,27],"content":"A path to the add-in store.","nodes":[{"content":"A path to the add-in store.","pos":[0,27]}]}],"pos":[6380,6408],"yaml":true},{"content":"The type that defines the host view of the add-in.","nodes":[{"pos":[0,50],"content":"The type that defines the host view of the add-in.","nodes":[{"content":"The type that defines the host view of the add-in.","pos":[0,50]}]}],"pos":[6463,6514],"yaml":true},{"content":"The host view of the add-in that is shared.","nodes":[{"pos":[0,43],"content":"The host view of the add-in that is shared.","nodes":[{"content":"The host view of the add-in that is shared.","pos":[0,43]}]}],"pos":[6563,6607],"yaml":true},{"content":"Gets the handle to the contract for a provided host view of an add-in.","nodes":[{"pos":[0,70],"content":"Gets the handle to the contract for a provided host view of an add-in.","nodes":[{"content":"Gets the handle to the contract for a provided host view of an add-in.","pos":[0,70]}]}],"pos":[7788,7859],"yaml":true},{"content":"In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).  \n  \n Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.","nodes":[{"pos":[0,122],"content":"In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).","nodes":[{"content":"In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).","pos":[0,122]}]},{"pos":[129,247],"content":"Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.","nodes":[{"content":"Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.","pos":[0,118]}]}],"pos":[7870,8122],"yaml":true,"extradata":"MT"},{"content":"The host view of an add-in activated by the system from the current application domain.","nodes":[{"pos":[0,87],"content":"The host view of an add-in activated by the system from the current application domain.","nodes":[{"content":"The host view of an add-in activated by the system from the current application domain.","pos":[0,87]}]}],"pos":[8309,8397],"yaml":true},{"content":"A handle to the contract.","nodes":[{"pos":[0,25],"content":"A handle to the contract.","nodes":[{"content":"A handle to the contract.","pos":[0,25]}]}],"pos":[8477,8503],"yaml":true},{"content":"<code>view</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;view&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>view</code> is `null`."}],"pos":[8692,8721],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Pipeline.ContractAdapter\n  commentId: T:System.AddIn.Pipeline.ContractAdapter\n  id: ContractAdapter\n  children:\n  - System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  - System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  - System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)\n  langs:\n  - csharp\n  name: ContractAdapter\n  nameWithType: ContractAdapter\n  fullName: System.AddIn.Pipeline.ContractAdapter\n  type: Class\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  summary: Provides methods for sharing and readapting add-ins.\n  remarks: \"You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).  \\n  \\n If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method.  \\n  \\n If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method.\"\n  syntax:\n    content: public static class ContractAdapter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Pipeline/ContractAdapter.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  commentId: M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  id: ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  langs:\n  - csharp\n  name: ContractToViewAdapter<TView>(ContractHandle, PipelineStoreLocation)\n  nameWithType: ContractAdapter.ContractToViewAdapter<TView>(ContractHandle, PipelineStoreLocation)\n  fullName: ContractAdapter.ContractToViewAdapter<TView>(ContractHandle, PipelineStoreLocation)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  summary: Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a value from the <xref href=\"System.AddIn.Hosting.PipelineStoreLocation\"></xref> enumeration.\n  remarks: In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view. Use this method to query the system to find and instantiate an adapter to convert into that view.\n  syntax:\n    content: public static TView ContractToViewAdapter<TView> (System.AddIn.Pipeline.ContractHandle contract, System.AddIn.Hosting.PipelineStoreLocation location);\n    parameters:\n    - id: contract\n      type: System.AddIn.Pipeline.ContractHandle\n      description: A handle to the contract used by the add-in to be shared.\n    - id: location\n      type: System.AddIn.Hosting.PipelineStoreLocation\n      description: The host's application base.\n    typeParameters:\n    - id: TView\n      description: The type that defines the host view of the add-in.\n    return:\n      type: TView\n      description: The host view of the add-in that is shared.\n  overload: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>location</code> is invalid.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Pipeline/ContractAdapter.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  commentId: M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  id: ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  langs:\n  - csharp\n  name: ContractToViewAdapter<TView>(ContractHandle, String)\n  nameWithType: ContractAdapter.ContractToViewAdapter<TView>(ContractHandle, String)\n  fullName: ContractAdapter.ContractToViewAdapter<TView>(ContractHandle, String)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  summary: Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a path.\n  remarks: In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view. Use this method to query the system to find and instantiate an adapter to convert into that view.\n  syntax:\n    content: public static TView ContractToViewAdapter<TView> (System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot);\n    parameters:\n    - id: contract\n      type: System.AddIn.Pipeline.ContractHandle\n      description: A handle to the contract used by the add-in to be shared.\n    - id: pipelineRoot\n      type: System.String\n      description: A path to the add-in store.\n    typeParameters:\n    - id: TView\n      description: The type that defines the host view of the add-in.\n    return:\n      type: TView\n      description: The host view of the add-in that is shared.\n  overload: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Pipeline/ContractAdapter.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)\n  commentId: M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)\n  id: ViewToContractAdapter(System.Object)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  langs:\n  - csharp\n  name: ViewToContractAdapter(Object)\n  nameWithType: ContractAdapter.ViewToContractAdapter(Object)\n  fullName: ContractAdapter.ViewToContractAdapter(Object)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  summary: Gets the handle to the contract for a provided host view of an add-in.\n  remarks: \"In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).  \\n  \\n Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.\"\n  syntax:\n    content: public static System.AddIn.Pipeline.ContractHandle ViewToContractAdapter (object view);\n    parameters:\n    - id: view\n      type: System.Object\n      description: The host view of an add-in activated by the system from the current application domain.\n    return:\n      type: System.AddIn.Pipeline.ContractHandle\n      description: A handle to the contract.\n  overload: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>view</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Pipeline/ContractAdapter.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ContractToViewAdapter<TView>(ContractHandle, PipelineStoreLocation)\n  nameWithType: ContractAdapter.ContractToViewAdapter<TView>(ContractHandle, PipelineStoreLocation)\n  fullName: ContractAdapter.ContractToViewAdapter<TView>(ContractHandle, PipelineStoreLocation)\n- uid: TView\n  isExternal: true\n  name: TView\n  nameWithType: TView\n  fullName: TView\n- uid: System.AddIn.Pipeline.ContractHandle\n  parent: System.AddIn.Pipeline\n  isExternal: false\n  name: ContractHandle\n  nameWithType: ContractHandle\n  fullName: System.AddIn.Pipeline.ContractHandle\n- uid: System.AddIn.Hosting.PipelineStoreLocation\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: PipelineStoreLocation\n  nameWithType: PipelineStoreLocation\n  fullName: System.AddIn.Hosting.PipelineStoreLocation\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ContractToViewAdapter<TView>(ContractHandle, String)\n  nameWithType: ContractAdapter.ContractToViewAdapter<TView>(ContractHandle, String)\n  fullName: ContractAdapter.ContractToViewAdapter<TView>(ContractHandle, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ViewToContractAdapter(Object)\n  nameWithType: ContractAdapter.ViewToContractAdapter(Object)\n  fullName: ContractAdapter.ViewToContractAdapter(Object)\n- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1*\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ContractToViewAdapter<TView>\n  nameWithType: ContractAdapter.ContractToViewAdapter<TView>\n  fullName: ContractAdapter.ContractToViewAdapter<TView>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Pipeline/ContractAdapter.xml\n- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter*\n  parent: System.AddIn.Pipeline.ContractAdapter\n  isExternal: false\n  name: ViewToContractAdapter\n  nameWithType: ContractAdapter.ViewToContractAdapter\n  fullName: ContractAdapter.ViewToContractAdapter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Pipeline/ContractAdapter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}