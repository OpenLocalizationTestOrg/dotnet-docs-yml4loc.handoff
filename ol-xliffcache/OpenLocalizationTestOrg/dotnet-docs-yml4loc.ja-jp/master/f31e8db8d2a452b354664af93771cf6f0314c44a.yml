### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.GenericTypeParameterBuilder
  commentId: T:System.Reflection.Emit.GenericTypeParameterBuilder
  id: GenericTypeParameterBuilder
  children:
  - System.Reflection.Emit.GenericTypeParameterBuilder.#ctor
  - System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  - System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  - System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  - System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  - System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  - System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  - System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  - System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  - System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  - System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors(System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents(System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetField(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetFields(System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericArguments
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface(System.String,System.Boolean)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap(System.Type)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetMembers(System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods(System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties(System.Reflection.BindingFlags)
  - System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  - System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl
  - System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Type)
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsConstructedGenericType
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsInstanceOfType(System.Object)
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsSZArray
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsTypeDefinition
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsValueTypeImpl
  - System.Reflection.Emit.GenericTypeParameterBuilder.IsVariableBoundArray
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  - System.Reflection.Emit.GenericTypeParameterBuilder.Module
  - System.Reflection.Emit.GenericTypeParameterBuilder.Name
  - System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  - System.Reflection.Emit.GenericTypeParameterBuilder.ReflectedType
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  - System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  - System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  - System.Reflection.Emit.GenericTypeParameterBuilder.TypeHandle
  - System.Reflection.Emit.GenericTypeParameterBuilder.UnderlyingSystemType
  langs:
  - csharp
  name: GenericTypeParameterBuilder
  nameWithType: GenericTypeParameterBuilder
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder
  type: Class
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines and creates generic type parameters for dynamically defined generic types and methods. This class cannot be inherited.
  remarks: "You can get an array of <xref:System.Reflection.Emit.GenericTypeParameterBuilder> objects by using the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A?displayProperty=fullName> method to add type parameters to a dynamic type, thus making it a generic type, or by using the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=fullName> method to add type parameters to a dynamic method. Use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> objects to add constraints to the type parameters. Constraints are of three kinds:  \n  \n-   The base type constraint specifies that any type assigned to the generic type parameter must derive from a particular base type. Set this constraint by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A> method.  \n  \n-   An interface constraint specifies that any type assigned to the generic type parameter must implement a particular interface. Set the interface constraints by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints%2A> method.  \n  \n-   Special constraints specify that any type assigned to the generic type parameter must have a default constructor, must be a reference type, or must be a value type. Set the special constraints for a type parameter by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes%2A> method.  \n  \n Interface constraints and special constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class. Once you have created the generic type that contains the type parameters, you can use its <xref:System.Type> object to reflect the constraints. Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method to get the type parameters, and for each type parameter use the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=fullName> method to get the base type constraint and interface constraints, and the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=fullName> property to get the special constraints."
  example:
  - "The following code example creates a generic type with two type parameters, and saves them in the assembly GenericEmitExample1.dll. You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types. For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).  \n  \n [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]\n [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]\n [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class GenericTypeParameterBuilder : System.Reflection.TypeInfo
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.TypeInfo
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.TypeInfo.AsType
  - System.Reflection.TypeInfo.DeclaredConstructors
  - System.Reflection.TypeInfo.DeclaredEvents
  - System.Reflection.TypeInfo.DeclaredFields
  - System.Reflection.TypeInfo.DeclaredMembers
  - System.Reflection.TypeInfo.DeclaredMethods
  - System.Reflection.TypeInfo.DeclaredNestedTypes
  - System.Reflection.TypeInfo.DeclaredProperties
  - System.Reflection.TypeInfo.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Reflection.TypeInfo.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Reflection.TypeInfo.GenericTypeParameters
  - System.Reflection.TypeInfo.GetConstructor(System.Type[])
  - System.Reflection.TypeInfo.GetConstructors
  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  - System.Reflection.TypeInfo.GetDeclaredField(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  - System.Reflection.TypeInfo.GetDefaultMembers
  - System.Reflection.TypeInfo.GetEnumName(System.Object)
  - System.Reflection.TypeInfo.GetEnumNames
  - System.Reflection.TypeInfo.GetEnumUnderlyingType
  - System.Reflection.TypeInfo.GetEnumValues
  - System.Reflection.TypeInfo.GetEvent(System.String)
  - System.Reflection.TypeInfo.GetField(System.String)
  - System.Reflection.TypeInfo.GetFields
  - System.Reflection.TypeInfo.GetInterface(System.String)
  - System.Reflection.TypeInfo.GetMember(System.String)
  - System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeInfo.GetMembers
  - System.Reflection.TypeInfo.GetMethod(System.String)
  - System.Reflection.TypeInfo.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeInfo.GetMethod(System.String,System.Type[])
  - System.Reflection.TypeInfo.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.TypeInfo.GetMethods
  - System.Reflection.TypeInfo.GetNestedType(System.String)
  - System.Reflection.TypeInfo.GetNestedTypes
  - System.Reflection.TypeInfo.GetProperties
  - System.Reflection.TypeInfo.GetProperty(System.String)
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type)
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[])
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type[])
  - System.Reflection.TypeInfo.HasElementType
  - System.Reflection.TypeInfo.ImplementedInterfaces
  - System.Reflection.TypeInfo.IsAbstract
  - System.Reflection.TypeInfo.IsAnsiClass
  - System.Reflection.TypeInfo.IsArray
  - System.Reflection.TypeInfo.IsAutoClass
  - System.Reflection.TypeInfo.IsAutoLayout
  - System.Reflection.TypeInfo.IsByRef
  - System.Reflection.TypeInfo.IsClass
  - System.Reflection.TypeInfo.IsCOMObject
  - System.Reflection.TypeInfo.IsEnumDefined(System.Object)
  - System.Reflection.TypeInfo.IsEquivalentTo(System.Type)
  - System.Reflection.TypeInfo.IsExplicitLayout
  - System.Reflection.TypeInfo.IsImport
  - System.Reflection.TypeInfo.IsInterface
  - System.Reflection.TypeInfo.IsLayoutSequential
  - System.Reflection.TypeInfo.IsMarshalByRef
  - System.Reflection.TypeInfo.IsNested
  - System.Reflection.TypeInfo.IsNestedAssembly
  - System.Reflection.TypeInfo.IsNestedFamANDAssem
  - System.Reflection.TypeInfo.IsNestedFamily
  - System.Reflection.TypeInfo.IsNestedFamORAssem
  - System.Reflection.TypeInfo.IsNestedPrivate
  - System.Reflection.TypeInfo.IsNestedPublic
  - System.Reflection.TypeInfo.IsNotPublic
  - System.Reflection.TypeInfo.IsPointer
  - System.Reflection.TypeInfo.IsPrimitive
  - System.Reflection.TypeInfo.IsPublic
  - System.Reflection.TypeInfo.IsSealed
  - System.Reflection.TypeInfo.IsSpecialName
  - System.Reflection.TypeInfo.IsUnicodeClass
  - System.Reflection.TypeInfo.IsValueType
  - System.Reflection.TypeInfo.IsVisible
  - System.Reflection.TypeInfo.MemberType
  - System.Reflection.TypeInfo.StructLayoutAttribute
  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  - System.Reflection.TypeInfo.TypeInitializer
  extensionMethods:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  - System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.#ctor
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.#ctor
  id: '#ctor'
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GenericTypeParameterBuilder()
  nameWithType: GenericTypeParameterBuilder.GenericTypeParameterBuilder()
  fullName: GenericTypeParameterBuilder.GenericTypeParameterBuilder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected GenericTypeParameterBuilder ();
    parameters: []
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.#ctor*
  exceptions: []
  version:
  - xamarinios-10.8
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: Assembly
  nameWithType: GenericTypeParameterBuilder.Assembly
  fullName: GenericTypeParameterBuilder.Assembly
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets an <xref href="System.Reflection.Assembly"></xref> object representing the dynamic assembly that contains the generic type definition the current type parameter belongs to.
  syntax:
    content: public override System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: An <xref href="System.Reflection.Assembly"></xref> object representing the dynamic assembly that contains the generic type definition the current type parameter belongs to.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.Assembly*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: GenericTypeParameterBuilder.AssemblyQualifiedName
  fullName: GenericTypeParameterBuilder.AssemblyQualifiedName
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets `null` in all cases.
  remarks: There is no assembly-qualified name for type parameters because their scope is limited to the generic type that declares them.
  syntax:
    content: public override string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: A null reference (`Nothing` in Visual Basic) in all cases.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: Attributes
  nameWithType: GenericTypeParameterBuilder.Attributes
  fullName: GenericTypeParameterBuilder.Attributes
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override System.Reflection.TypeAttributes Attributes { get; }
    return:
      type: System.Reflection.TypeAttributes
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.Attributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  id: BaseType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: BaseType
  nameWithType: GenericTypeParameterBuilder.BaseType
  fullName: GenericTypeParameterBuilder.BaseType
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the base type constraint of the current generic type parameter.
  remarks: To set the base type constraint, use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A> method.
  syntax:
    content: public override Type BaseType { get; }
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object that represents the base type constraint of the generic type parameter, or `null` if the type parameter has no base type constraint.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.BaseType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  id: ContainsGenericParameters
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: ContainsGenericParameters
  nameWithType: GenericTypeParameterBuilder.ContainsGenericParameters
  fullName: GenericTypeParameterBuilder.ContainsGenericParameters
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets `true` in all cases.
  remarks: A <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object always represents a generic type parameter. The value of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters%2A> property reflects that fact and does not imply anything about any generic type argument that might be assigned to the type parameter.
  syntax:
    content: public override bool ContainsGenericParameters { get; }
    return:
      type: System.Boolean
      description: '`true` in all cases.'
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  id: DeclaringMethod
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: DeclaringMethod
  nameWithType: GenericTypeParameterBuilder.DeclaringMethod
  fullName: GenericTypeParameterBuilder.DeclaringMethod
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a <xref href="System.Reflection.MethodInfo"></xref> that represents the declaring method, if the current <xref href="System.Reflection.Emit.GenericTypeParameterBuilder"></xref> represents a type parameter of a generic method.
  remarks: If the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod%2A> property is not `null`, then the declaring method is a generic method definition and `DeclaringMethod.IsGenericMethodDefinition` is `true`.
  syntax:
    content: public override System.Reflection.MethodBase DeclaringMethod { get; }
    return:
      type: System.Reflection.MethodBase
      description: A <xref href="System.Reflection.MethodInfo"></xref> that represents the declaring method, if the current <xref href="System.Reflection.Emit.GenericTypeParameterBuilder"></xref> represents a type parameter of a generic method; otherwise, `null`.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: DeclaringType
  nameWithType: GenericTypeParameterBuilder.DeclaringType
  fullName: GenericTypeParameterBuilder.DeclaringType
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the generic type definition or generic method definition to which the generic type parameter belongs.
  remarks: The declaring type is not necessarily a generic type. If the current type parameter belongs to a generic method, the type in which the method is declared might not be generic.
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: If the type parameter belongs to a generic type, a <xref href="System.Type"></xref> object representing that generic type; if the type parameter belongs to a generic method, a <xref href="System.Type"></xref> object representing that type that declared that generic method.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: GenericTypeParameterBuilder.Equals(Object)
  fullName: GenericTypeParameterBuilder.Equals(Object)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Tests whether the given object is an instance of `EventToken` and is equal to the current instance.
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: The object to be compared with the current instance.
    return:
      type: System.Boolean
      description: Returns `true` if <code>o</code> is an instance of `EventToken` and equals the current instance; otherwise, `false`.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  id: FullName
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: FullName
  nameWithType: GenericTypeParameterBuilder.FullName
  fullName: GenericTypeParameterBuilder.FullName
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets `null` in all cases.
  remarks: A generic type parameter does not have a full name, because its scope is limited to the generic type that declares it.
  syntax:
    content: public override string FullName { get; }
    return:
      type: System.String
      description: A null reference (`Nothing` in Visual Basic) in all cases.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.FullName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  id: GenericParameterAttributes
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GenericParameterAttributes
  nameWithType: GenericTypeParameterBuilder.GenericParameterAttributes
  fullName: GenericTypeParameterBuilder.GenericParameterAttributes
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a combination of <xref href="System.Reflection.GenericParameterAttributes"></xref> flags that describe the covariance and special constraints of the current generic type parameter.
  syntax:
    content: public override System.Reflection.GenericParameterAttributes GenericParameterAttributes { get; }
    return:
      type: System.Reflection.GenericParameterAttributes
      description: A bitwise combination of values that describes the covariance and special constraints of the current generic type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GenericParameterPosition
  nameWithType: GenericTypeParameterBuilder.GenericParameterPosition
  fullName: GenericTypeParameterBuilder.GenericParameterPosition
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the position of the type parameter in the type parameter list of the generic type or method that declared the parameter.
  syntax:
    content: public override int GenericParameterPosition { get; }
    return:
      type: System.Int32
      description: The position of the type parameter in the type parameter list of the generic type or method that declared the parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GenericTypeArguments
  nameWithType: GenericTypeParameterBuilder.GenericTypeArguments
  fullName: GenericTypeParameterBuilder.GenericTypeArguments
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GenericTypeArguments { get; }
    return:
      type: System.Type[]
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  id: GetArrayRank
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetArrayRank()
  nameWithType: GenericTypeParameterBuilder.GetArrayRank()
  fullName: GenericTypeParameterBuilder.GetArrayRank()
  type: Method
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override int GetArrayRank ();
    parameters: []
    return:
      type: System.Int32
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl
  id: GetAttributeFlagsImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetAttributeFlagsImpl()
  nameWithType: GenericTypeParameterBuilder.GetAttributeFlagsImpl()
  fullName: GenericTypeParameterBuilder.GetAttributeFlagsImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();
    parameters: []
    return:
      type: System.Reflection.TypeAttributes
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType: GenericTypeParameterBuilder.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: GenericTypeParameterBuilder.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: ''
    - id: binder
      type: System.Reflection.Binder
      description: ''
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: ''
    - id: types
      type: System.Type[]
      description: ''
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: ''
    return:
      type: System.Reflection.ConstructorInfo
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetConstructors(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.ConstructorInfo[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: GenericTypeParameterBuilder.GetCustomAttributes(Boolean)
  fullName: GenericTypeParameterBuilder.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: Specifies whether to search this member's inheritance chain to find the attributes.
    return:
      type: System.Object[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: GenericTypeParameterBuilder.GetCustomAttributes(Type, Boolean)
  fullName: GenericTypeParameterBuilder.GetCustomAttributes(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.
    - id: inherit
      type: System.Boolean
      description: Specifies whether to search this member's inheritance chain to find the attributes.
    return:
      type: System.Object[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  id: GetElementType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetElementType()
  nameWithType: GenericTypeParameterBuilder.GetElementType()
  fullName: GenericTypeParameterBuilder.GetElementType()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Throws a <xref href="System.NotSupportedException"></xref> in all cases.
  remarks: A generic type parameter is a placeholder for a type. Because that type cannot be known in advance, there is no way to know whether it has an element type or what that element type might be. Any return value would be misleading, so the method throws a <xref:System.NotSupportedException>.
  syntax:
    content: public override Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: The type referred to by the current array type, pointer type, or `ByRef` type; or `null` if the current type is not an array type, is not a pointer type, and is not passed by reference.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetEvent(String, BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetEvent(String, BindingFlags)
  fullName: GenericTypeParameterBuilder.GetEvent(String, BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: Not supported.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.EventInfo
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents
  id: GetEvents
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetEvents()
  nameWithType: GenericTypeParameterBuilder.GetEvents()
  fullName: GenericTypeParameterBuilder.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetEvents(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.EventInfo[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetField(System.String,System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetField(String, BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetField(String, BindingFlags)
  fullName: GenericTypeParameterBuilder.GetField(String, BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: Not supported.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.FieldInfo
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetField*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetFields(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetFields(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.FieldInfo[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetFields*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericArguments
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericArguments
  id: GetGenericArguments
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetGenericArguments()
  nameWithType: GenericTypeParameterBuilder.GetGenericArguments()
  fullName: GenericTypeParameterBuilder.GetGenericArguments()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not valid for generic type parameters.
  remarks: In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.
  syntax:
    content: public override Type[] GetGenericArguments ();
    parameters: []
    return:
      type: System.Type[]
      description: Not valid for generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericArguments*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  id: GetGenericParameterConstraints
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetGenericParameterConstraints()
  nameWithType: GenericTypeParameterBuilder.GetGenericParameterConstraints()
  fullName: GenericTypeParameterBuilder.GetGenericParameterConstraints()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: public override Type[] GetGenericParameterConstraints ();
    parameters: []
    return:
      type: System.Type[]
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetGenericTypeDefinition()
  nameWithType: GenericTypeParameterBuilder.GetGenericTypeDefinition()
  fullName: GenericTypeParameterBuilder.GetGenericTypeDefinition()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Not valid for generic type parameters.
  remarks: In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.
  syntax:
    content: public override Type GetGenericTypeDefinition ();
    parameters: []
    return:
      type: System.Type
      description: Not valid for generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: GenericTypeParameterBuilder.GetHashCode()
  fullName: GenericTypeParameterBuilder.GetHashCode()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a 32-bit integer hash code for the current instance.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit integer hash code.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface(System.String,System.Boolean)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetInterface(String, Boolean)
  nameWithType: GenericTypeParameterBuilder.GetInterface(String, Boolean)
  fullName: GenericTypeParameterBuilder.GetInterface(String, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: The name of the interface.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to search without regard for case; `false` to make a case-sensitive search.'
    return:
      type: System.Type
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap(System.Type)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: GenericTypeParameterBuilder.GetInterfaceMap(Type)
  fullName: GenericTypeParameterBuilder.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: A <xref href="System.Type"></xref> object that represents the interface type for which the mapping is to be retrieved.
    return:
      type: System.Reflection.InterfaceMapping
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces
  id: GetInterfaces
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: GenericTypeParameterBuilder.GetInterfaces()
  fullName: GenericTypeParameterBuilder.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetMember(String, MemberTypes, BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetMember(String, MemberTypes, BindingFlags)
  fullName: GenericTypeParameterBuilder.GetMember(String, MemberTypes, BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: Not supported.
    - id: type
      type: System.Reflection.MemberTypes
      description: Not supported.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.MemberInfo[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetMember*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMembers(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetMembers(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.MemberInfo[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetMembers*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType: GenericTypeParameterBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: GenericTypeParameterBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: ''
    - id: binder
      type: System.Reflection.Binder
      description: ''
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: ''
    - id: types
      type: System.Type[]
      description: ''
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: ''
    return:
      type: System.Reflection.MethodInfo
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetMethods(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.MethodInfo[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetNestedType(String, BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetNestedType(String, BindingFlags)
  fullName: GenericTypeParameterBuilder.GetNestedType(String, BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: Not supported.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Type
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetNestedTypes(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Type[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedTypes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties(System.Reflection.BindingFlags)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetProperties(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    return:
      type: System.Reflection.PropertyInfo[]
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  nameWithType: GenericTypeParameterBuilder.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  fullName: GenericTypeParameterBuilder.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: ''
    - id: binder
      type: System.Reflection.Binder
      description: ''
    - id: returnType
      type: System.Type
      description: ''
    - id: types
      type: System.Type[]
      description: ''
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: ''
    return:
      type: System.Reflection.PropertyInfo
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  id: GUID
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: GUID
  nameWithType: GenericTypeParameterBuilder.GUID
  fullName: GenericTypeParameterBuilder.GUID
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This property is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override Guid GUID { get; }
    return:
      type: System.Guid
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.GUID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl
  id: HasElementTypeImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: HasElementTypeImpl()
  nameWithType: GenericTypeParameterBuilder.HasElementTypeImpl()
  fullName: GenericTypeParameterBuilder.HasElementTypeImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool HasElementTypeImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  nameWithType: GenericTypeParameterBuilder.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  fullName: GenericTypeParameterBuilder.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: Not supported.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: Not supported.
    - id: binder
      type: System.Reflection.Binder
      description: Not supported.
    - id: target
      type: System.Object
      description: Not supported.
    - id: args
      type: System.Object[]
      description: Not supported.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: Not supported.
    - id: culture
      type: System.Globalization.CultureInfo
      description: Not supported.
    - id: namedParameters
      type: System.String[]
      description: Not supported.
    return:
      type: System.Object
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl
  id: IsArrayImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsArrayImpl()
  nameWithType: GenericTypeParameterBuilder.IsArrayImpl()
  fullName: GenericTypeParameterBuilder.IsArrayImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsArrayImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  id: IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsAssignableFrom(TypeInfo)
  nameWithType: GenericTypeParameterBuilder.IsAssignableFrom(TypeInfo)
  fullName: GenericTypeParameterBuilder.IsAssignableFrom(TypeInfo)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Throws a <xref href="System.NotSupportedException"></xref> exception in all cases.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: The object to test.
    return:
      type: System.Boolean
      description: Throws a <xref href="System.NotSupportedException"></xref> exception in all cases.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Type)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsAssignableFrom(Type)
  nameWithType: GenericTypeParameterBuilder.IsAssignableFrom(Type)
  fullName: GenericTypeParameterBuilder.IsAssignableFrom(Type)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Throws a <xref href="System.NotSupportedException"></xref> exception in all cases.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override bool IsAssignableFrom (Type c);
    parameters:
    - id: c
      type: System.Type
      description: The object to test.
    return:
      type: System.Boolean
      description: Throws a <xref href="System.NotSupportedException"></xref> exception in all cases.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl
  id: IsByRefImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsByRefImpl()
  nameWithType: GenericTypeParameterBuilder.IsByRefImpl()
  fullName: GenericTypeParameterBuilder.IsByRefImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsByRefImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl
  id: IsCOMObjectImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsCOMObjectImpl()
  nameWithType: GenericTypeParameterBuilder.IsCOMObjectImpl()
  fullName: GenericTypeParameterBuilder.IsCOMObjectImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsCOMObjectImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsConstructedGenericType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsConstructedGenericType
  id: IsConstructedGenericType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsConstructedGenericType
  nameWithType: GenericTypeParameterBuilder.IsConstructedGenericType
  fullName: GenericTypeParameterBuilder.IsConstructedGenericType
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets a value that indicates whether this object represents a constructed generic type.
  syntax:
    content: public override bool IsConstructedGenericType { get; }
    return:
      type: System.Boolean
      description: '`true` if this object represents a constructed generic type; otherwise, `false`.'
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsConstructedGenericType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsDefined(Type, Boolean)
  nameWithType: GenericTypeParameterBuilder.IsDefined(Type, Boolean)
  fullName: GenericTypeParameterBuilder.IsDefined(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: Not supported.
    - id: inherit
      type: System.Boolean
      description: Not supported.
    return:
      type: System.Boolean
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  id: IsEnum
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsEnum
  nameWithType: GenericTypeParameterBuilder.IsEnum
  fullName: GenericTypeParameterBuilder.IsEnum
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsEnum { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  id: IsGenericParameter
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsGenericParameter
  nameWithType: GenericTypeParameterBuilder.IsGenericParameter
  fullName: GenericTypeParameterBuilder.IsGenericParameter
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets `true` in all cases.
  syntax:
    content: public override bool IsGenericParameter { get; }
    return:
      type: System.Boolean
      description: '`true` in all cases.'
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  id: IsGenericType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsGenericType
  nameWithType: GenericTypeParameterBuilder.IsGenericType
  fullName: GenericTypeParameterBuilder.IsGenericType
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns `false` in all cases.
  remarks: In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.
  syntax:
    content: public override bool IsGenericType { get; }
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  id: IsGenericTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsGenericTypeDefinition
  nameWithType: GenericTypeParameterBuilder.IsGenericTypeDefinition
  fullName: GenericTypeParameterBuilder.IsGenericTypeDefinition
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets `false` in all cases.
  remarks: In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.
  syntax:
    content: public override bool IsGenericTypeDefinition { get; }
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsInstanceOfType(System.Object)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsInstanceOfType(System.Object)
  id: IsInstanceOfType(System.Object)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsInstanceOfType(Object)
  nameWithType: GenericTypeParameterBuilder.IsInstanceOfType(Object)
  fullName: GenericTypeParameterBuilder.IsInstanceOfType(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsInstanceOfType (object o);
    parameters:
    - id: o
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsInstanceOfType*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl
  id: IsPointerImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsPointerImpl()
  nameWithType: GenericTypeParameterBuilder.IsPointerImpl()
  fullName: GenericTypeParameterBuilder.IsPointerImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsPointerImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl
  id: IsPrimitiveImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsPrimitiveImpl()
  nameWithType: GenericTypeParameterBuilder.IsPrimitiveImpl()
  fullName: GenericTypeParameterBuilder.IsPrimitiveImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsPrimitiveImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  id: IsSerializable
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsSerializable
  nameWithType: GenericTypeParameterBuilder.IsSerializable
  fullName: GenericTypeParameterBuilder.IsSerializable
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsSerializable { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsSubclassOf(Type)
  nameWithType: GenericTypeParameterBuilder.IsSubclassOf(Type)
  fullName: GenericTypeParameterBuilder.IsSubclassOf(Type)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This method is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public override bool IsSubclassOf (Type c);
    parameters:
    - id: c
      type: System.Type
      description: Not supported.
    return:
      type: System.Boolean
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSZArray
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsSZArray
  id: IsSZArray
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsSZArray
  nameWithType: GenericTypeParameterBuilder.IsSZArray
  fullName: GenericTypeParameterBuilder.IsSZArray
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsSZArray { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsSZArray*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsTypeDefinition
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsTypeDefinition
  id: IsTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsTypeDefinition
  nameWithType: GenericTypeParameterBuilder.IsTypeDefinition
  fullName: GenericTypeParameterBuilder.IsTypeDefinition
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsTypeDefinition { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsTypeDefinition*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsValueTypeImpl
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.IsValueTypeImpl
  id: IsValueTypeImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsValueTypeImpl()
  nameWithType: GenericTypeParameterBuilder.IsValueTypeImpl()
  fullName: GenericTypeParameterBuilder.IsValueTypeImpl()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: protected override bool IsValueTypeImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsValueTypeImpl*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsVariableBoundArray
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.IsVariableBoundArray
  id: IsVariableBoundArray
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: IsVariableBoundArray
  nameWithType: GenericTypeParameterBuilder.IsVariableBoundArray
  fullName: GenericTypeParameterBuilder.IsVariableBoundArray
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override bool IsVariableBoundArray { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.IsVariableBoundArray*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  id: MakeArrayType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: MakeArrayType()
  nameWithType: GenericTypeParameterBuilder.MakeArrayType()
  fullName: GenericTypeParameterBuilder.MakeArrayType()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the type of a one-dimensional array whose element type is the generic type parameter.
  remarks: The <xref:System.Type.MakeArrayType%2A> method provides a way to generate array types for parameter lists.
  example:
  - "The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`. `TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`. This method returns a two-dimensional array of `T`. The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).  \n  \n [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]\n [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]\n [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]"
  syntax:
    content: public override Type MakeArrayType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object that represents the type of a one-dimensional array whose element type is the generic type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: MakeArrayType(Int32)
  nameWithType: GenericTypeParameterBuilder.MakeArrayType(Int32)
  fullName: GenericTypeParameterBuilder.MakeArrayType(Int32)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the type of an array whose element type is the generic type parameter, with the specified number of dimensions.
  remarks: The <xref:System.Type.MakeArrayType%2A> method provides a way to generate array types for parameter lists.
  example:
  - "The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`. `TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`. This method returns a two-dimensional array of `T`. The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).  \n  \n [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]\n [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]\n [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]"
  syntax:
    content: public override Type MakeArrayType (int rank);
    parameters:
    - id: rank
      type: System.Int32
      description: The number of dimensions for the array.
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object that represents the type of an array whose element type is the generic type parameter, with the specified number of dimensions.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: <code>rank</code> is not a valid number of dimensions. For example, its value is less than 1.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  id: MakeByRefType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: MakeByRefType()
  nameWithType: GenericTypeParameterBuilder.MakeByRefType()
  fullName: GenericTypeParameterBuilder.MakeByRefType()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a <xref href="System.Type"></xref> object that represents the current generic type parameter when passed as a reference parameter.
  remarks: The <xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType%2A> method provides a way to generate `ref` types (`ByRef` in Visual Basic) for parameter lists.
  example:
  - "The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`. `TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`. This method returns a two-dimensional array of `T`. The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).  \n  \n [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]\n [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]\n [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]"
  syntax:
    content: public override Type MakeByRefType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object that represents the current generic type parameter when passed as a reference parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: MakeGenericType(Type[])
  nameWithType: GenericTypeParameterBuilder.MakeGenericType(Type[])
  fullName: GenericTypeParameterBuilder.MakeGenericType(Type[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Not valid for incomplete generic type parameters.
  syntax:
    content: public override Type MakeGenericType (Type[] typeArguments);
    parameters:
    - id: typeArguments
      type: System.Type[]
      description: An array of type arguments.
    return:
      type: System.Type
      description: This method is invalid for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  id: MakePointerType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: MakePointerType()
  nameWithType: GenericTypeParameterBuilder.MakePointerType()
  fullName: GenericTypeParameterBuilder.MakePointerType()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a <xref href="System.Type"></xref> object that represents a pointer to the current generic type parameter.
  remarks: The <xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType%2A> method provides a way to generate pointer types for parameter lists.
  example:
  - "The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`. `TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`. This method returns a two-dimensional array of `T`. The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).  \n  \n [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]\n [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]\n [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]"
  syntax:
    content: public override Type MakePointerType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object that represents a pointer to the current generic type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Module
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Module
  id: Module
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: Module
  nameWithType: GenericTypeParameterBuilder.Module
  fullName: GenericTypeParameterBuilder.Module
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the dynamic module that contains the generic type parameter.
  syntax:
    content: public override System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: A <xref href="System.Reflection.Module"></xref> object that represents the dynamic module that contains the generic type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.Module*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Name
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Name
  id: Name
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: Name
  nameWithType: GenericTypeParameterBuilder.Name
  fullName: GenericTypeParameterBuilder.Name
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the name of the generic type parameter.
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: The name of the generic type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.Name*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  id: Namespace
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: Namespace
  nameWithType: GenericTypeParameterBuilder.Namespace
  fullName: GenericTypeParameterBuilder.Namespace
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets `null` in all cases.
  syntax:
    content: public override string Namespace { get; }
    return:
      type: System.String
      description: A null reference (`Nothing` in Visual Basic) in all cases.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.Namespace*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ReflectedType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: ReflectedType
  nameWithType: GenericTypeParameterBuilder.ReflectedType
  fullName: GenericTypeParameterBuilder.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the <xref href="System.Type"></xref> object that was used to obtain the <xref href="System.Reflection.Emit.GenericTypeParameterBuilder"></xref>.
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: The <xref href="System.Type"></xref> object that was used to obtain the <xref href="System.Reflection.Emit.GenericTypeParameterBuilder"></xref>.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.ReflectedType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  id: SetBaseTypeConstraint(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: SetBaseTypeConstraint(Type)
  nameWithType: GenericTypeParameterBuilder.SetBaseTypeConstraint(Type)
  fullName: GenericTypeParameterBuilder.SetBaseTypeConstraint(Type)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the base type that a type must inherit in order to be substituted for the type parameter.
  remarks: "To retrieve the base type constraint use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType%2A> property.  \n  \n Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameter and their constraints. To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method. For each type parameter, get the base type constraint and interface constraints by using the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=fullName> method, and get the special constraints by using the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=fullName> property."
  example:
  - "The following code example creates a generic type with two type parameters, the second of which has a base type constraint, and saves them in the assembly GenericEmitExample1.dll. You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types. For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).  \n  \n [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]\n [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]\n [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]"
  syntax:
    content: public void SetBaseTypeConstraint (Type baseTypeConstraint);
    parameters:
    - id: baseTypeConstraint
      type: System.Type
      description: The <xref href="System.Type"></xref> that must be inherited by any type that is to be substituted for the type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: GenericTypeParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class that defines the custom attribute.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>customBuilder</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: GenericTypeParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets a custom attribute using a specified custom attribute blob.
  remarks: >-
    > [!NOTE]

    >  For details on how to format `binaryAttribute`, see the documentation for Partition II: Metadata Definition and Semantics. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attribute.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>con</code> is `null`.  \n  \n -or-  \n  \n <code>binaryAttribute</code> is a null reference."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  id: SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: SetGenericParameterAttributes(GenericParameterAttributes)
  nameWithType: GenericTypeParameterBuilder.SetGenericParameterAttributes(GenericParameterAttributes)
  fullName: GenericTypeParameterBuilder.SetGenericParameterAttributes(GenericParameterAttributes)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the variance characteristics and special constraints of the generic parameter, such as the parameterless constructor constraint.
  remarks: "Special constraints can specify that any type assigned to the generic type parameter must have a default constructor, must be a reference type, or must be a value type.  \n  \n Special constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class. Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameters and their constraints. To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method. To get the special constraints for each type parameter, use the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=fullName> property.  \n  \n The <xref:System.Reflection.GenericParameterAttributes> enumeration values that refer to the variance characteristics of a type parameter are relevant only in languages that support covariance and contravariance, such as Microsoft intermediate language (MSIL). Visual Basic and C# currently do not support covariance and contravariance."
  example:
  - "The following code example creates a generic type with two type parameters, the first of which is constrained to have a default constructor and to be a reference type, and saves them in the assembly GenericEmitExample1.dll. You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types. For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).  \n  \n [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]\n [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]\n [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]"
  syntax:
    content: public void SetGenericParameterAttributes (System.Reflection.GenericParameterAttributes genericParameterAttributes);
    parameters:
    - id: genericParameterAttributes
      type: System.Reflection.GenericParameterAttributes
      description: A bitwise combination of <xref href="System.Reflection.GenericParameterAttributes"></xref> values that represent the variance characteristics and special constraints of the generic type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  id: SetInterfaceConstraints(System.Type[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: SetInterfaceConstraints(Type[])
  nameWithType: GenericTypeParameterBuilder.SetInterfaceConstraints(Type[])
  fullName: GenericTypeParameterBuilder.SetInterfaceConstraints(Type[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the interfaces a type must implement in order to be substituted for the type parameter.
  remarks: Interface constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class. Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameters and their constraints. To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method. For each type parameter, get the base type constraint and interface constraints by using the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=fullName> method.
  example:
  - "The following code example creates a generic type with two type parameters, the second of which has two interface constraints, and saves them in the assembly GenericEmitExample1.dll. You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types. For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).  \n  \n [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]\n [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]\n [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public void SetInterfaceConstraints (Type[] interfaceConstraints);
    parameters:
    - id: interfaceConstraints
      type: System.Type[]
      description: An array of <xref href="System.Type"></xref> objects that represent the interfaces a type must implement in order to be substituted for the type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  commentId: M:System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: ToString()
  nameWithType: GenericTypeParameterBuilder.ToString()
  fullName: GenericTypeParameterBuilder.ToString()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a string representation of the current generic type parameter.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string that contains the name of the generic type parameter.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.TypeHandle
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.TypeHandle
  id: TypeHandle
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: TypeHandle
  nameWithType: GenericTypeParameterBuilder.TypeHandle
  fullName: GenericTypeParameterBuilder.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Not supported for incomplete generic type parameters.
  remarks: This property is not supported for incomplete generic type parameters. Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.
  syntax:
    content: public override RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: Not supported for incomplete generic type parameters.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.TypeHandle*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: In all cases.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.UnderlyingSystemType
  commentId: P:System.Reflection.Emit.GenericTypeParameterBuilder.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: GenericTypeParameterBuilder.UnderlyingSystemType
  fullName: GenericTypeParameterBuilder.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the current generic type parameter.
  syntax:
    content: public override Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: The current <xref href="System.Reflection.Emit.GenericTypeParameterBuilder"></xref> object.
  overload: System.Reflection.Emit.GenericTypeParameterBuilder.UnderlyingSystemType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.IndexOutOfRangeException
  parent: System
  isExternal: false
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.#ctor
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GenericTypeParameterBuilder()
  nameWithType: GenericTypeParameterBuilder.GenericTypeParameterBuilder()
  fullName: GenericTypeParameterBuilder.GenericTypeParameterBuilder()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Assembly
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Assembly
  nameWithType: GenericTypeParameterBuilder.Assembly
  fullName: GenericTypeParameterBuilder.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: GenericTypeParameterBuilder.AssemblyQualifiedName
  fullName: GenericTypeParameterBuilder.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Attributes
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Attributes
  nameWithType: GenericTypeParameterBuilder.Attributes
  fullName: GenericTypeParameterBuilder.Attributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.BaseType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: BaseType
  nameWithType: GenericTypeParameterBuilder.BaseType
  fullName: GenericTypeParameterBuilder.BaseType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: ContainsGenericParameters
  nameWithType: GenericTypeParameterBuilder.ContainsGenericParameters
  fullName: GenericTypeParameterBuilder.ContainsGenericParameters
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: DeclaringMethod
  nameWithType: GenericTypeParameterBuilder.DeclaringMethod
  fullName: GenericTypeParameterBuilder.DeclaringMethod
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: GenericTypeParameterBuilder.DeclaringType
  fullName: GenericTypeParameterBuilder.DeclaringType
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Equals(Object)
  nameWithType: GenericTypeParameterBuilder.Equals(Object)
  fullName: GenericTypeParameterBuilder.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.FullName
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: FullName
  nameWithType: GenericTypeParameterBuilder.FullName
  fullName: GenericTypeParameterBuilder.FullName
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericTypeParameterBuilder.GenericParameterAttributes
  fullName: GenericTypeParameterBuilder.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GenericParameterPosition
  nameWithType: GenericTypeParameterBuilder.GenericParameterPosition
  fullName: GenericTypeParameterBuilder.GenericParameterPosition
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GenericTypeArguments
  nameWithType: GenericTypeParameterBuilder.GenericTypeArguments
  fullName: GenericTypeParameterBuilder.GenericTypeArguments
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetArrayRank()
  nameWithType: GenericTypeParameterBuilder.GetArrayRank()
  fullName: GenericTypeParameterBuilder.GetArrayRank()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetAttributeFlagsImpl()
  nameWithType: GenericTypeParameterBuilder.GetAttributeFlagsImpl()
  fullName: GenericTypeParameterBuilder.GetAttributeFlagsImpl()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType: GenericTypeParameterBuilder.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: GenericTypeParameterBuilder.GetConstructorImpl(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Reflection.ParameterModifier
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier[]
  nameWithType: ParameterModifier[]
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: System.Reflection.ParameterModifier
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetConstructors(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetConstructors(BindingFlags)
- uid: System.Reflection.ConstructorInfo[]
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo[]
  nameWithType: ConstructorInfo[]
  fullName: System.Reflection.ConstructorInfo[]
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: GenericTypeParameterBuilder.GetCustomAttributes(Boolean)
  fullName: GenericTypeParameterBuilder.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: GenericTypeParameterBuilder.GetCustomAttributes(Type, Boolean)
  fullName: GenericTypeParameterBuilder.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetElementType()
  nameWithType: GenericTypeParameterBuilder.GetElementType()
  fullName: GenericTypeParameterBuilder.GetElementType()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetEvent(String, BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetEvent(String, BindingFlags)
  fullName: GenericTypeParameterBuilder.GetEvent(String, BindingFlags)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: false
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetEvents()
  nameWithType: GenericTypeParameterBuilder.GetEvents()
  fullName: GenericTypeParameterBuilder.GetEvents()
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: false
  name: EventInfo[]
  nameWithType: EventInfo[]
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: System.Reflection.EventInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetEvents(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetEvents(BindingFlags)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetField(String, BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetField(String, BindingFlags)
  fullName: GenericTypeParameterBuilder.GetField(String, BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetFields(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: false
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericArguments
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetGenericArguments()
  nameWithType: GenericTypeParameterBuilder.GetGenericArguments()
  fullName: GenericTypeParameterBuilder.GetGenericArguments()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetGenericParameterConstraints()
  nameWithType: GenericTypeParameterBuilder.GetGenericParameterConstraints()
  fullName: GenericTypeParameterBuilder.GetGenericParameterConstraints()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetGenericTypeDefinition()
  nameWithType: GenericTypeParameterBuilder.GetGenericTypeDefinition()
  fullName: GenericTypeParameterBuilder.GetGenericTypeDefinition()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetHashCode()
  nameWithType: GenericTypeParameterBuilder.GetHashCode()
  fullName: GenericTypeParameterBuilder.GetHashCode()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface(System.String,System.Boolean)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetInterface(String, Boolean)
  nameWithType: GenericTypeParameterBuilder.GetInterface(String, Boolean)
  fullName: GenericTypeParameterBuilder.GetInterface(String, Boolean)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: GenericTypeParameterBuilder.GetInterfaceMap(Type)
  fullName: GenericTypeParameterBuilder.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: false
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetInterfaces()
  nameWithType: GenericTypeParameterBuilder.GetInterfaces()
  fullName: GenericTypeParameterBuilder.GetInterfaces()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetMember(String, MemberTypes, BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetMember(String, MemberTypes, BindingFlags)
  fullName: GenericTypeParameterBuilder.GetMember(String, MemberTypes, BindingFlags)
- uid: System.Reflection.MemberInfo
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: false
  name: MemberInfo[]
  nameWithType: MemberInfo[]
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetMembers(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetMembers(BindingFlags)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  nameWithType: GenericTypeParameterBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
  fullName: GenericTypeParameterBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetMethods(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: false
  name: MethodInfo[]
  nameWithType: MethodInfo[]
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetNestedType(String, BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetNestedType(String, BindingFlags)
  fullName: GenericTypeParameterBuilder.GetNestedType(String, BindingFlags)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetNestedTypes(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetNestedTypes(BindingFlags)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: GenericTypeParameterBuilder.GetProperties(BindingFlags)
  fullName: GenericTypeParameterBuilder.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo[]
  nameWithType: PropertyInfo[]
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  nameWithType: GenericTypeParameterBuilder.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
  fullName: GenericTypeParameterBuilder.GetPropertyImpl(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GUID
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GUID
  nameWithType: GenericTypeParameterBuilder.GUID
  fullName: GenericTypeParameterBuilder.GUID
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: HasElementTypeImpl()
  nameWithType: GenericTypeParameterBuilder.HasElementTypeImpl()
  fullName: GenericTypeParameterBuilder.HasElementTypeImpl()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  nameWithType: GenericTypeParameterBuilder.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
  fullName: GenericTypeParameterBuilder.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsArrayImpl()
  nameWithType: GenericTypeParameterBuilder.IsArrayImpl()
  fullName: GenericTypeParameterBuilder.IsArrayImpl()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsAssignableFrom(TypeInfo)
  nameWithType: GenericTypeParameterBuilder.IsAssignableFrom(TypeInfo)
  fullName: GenericTypeParameterBuilder.IsAssignableFrom(TypeInfo)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: GenericTypeParameterBuilder.IsAssignableFrom(Type)
  fullName: GenericTypeParameterBuilder.IsAssignableFrom(Type)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsByRefImpl()
  nameWithType: GenericTypeParameterBuilder.IsByRefImpl()
  fullName: GenericTypeParameterBuilder.IsByRefImpl()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsCOMObjectImpl()
  nameWithType: GenericTypeParameterBuilder.IsCOMObjectImpl()
  fullName: GenericTypeParameterBuilder.IsCOMObjectImpl()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsConstructedGenericType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsConstructedGenericType
  nameWithType: GenericTypeParameterBuilder.IsConstructedGenericType
  fullName: GenericTypeParameterBuilder.IsConstructedGenericType
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsDefined(Type, Boolean)
  nameWithType: GenericTypeParameterBuilder.IsDefined(Type, Boolean)
  fullName: GenericTypeParameterBuilder.IsDefined(Type, Boolean)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsEnum
  nameWithType: GenericTypeParameterBuilder.IsEnum
  fullName: GenericTypeParameterBuilder.IsEnum
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsGenericParameter
  nameWithType: GenericTypeParameterBuilder.IsGenericParameter
  fullName: GenericTypeParameterBuilder.IsGenericParameter
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsGenericType
  nameWithType: GenericTypeParameterBuilder.IsGenericType
  fullName: GenericTypeParameterBuilder.IsGenericType
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsGenericTypeDefinition
  nameWithType: GenericTypeParameterBuilder.IsGenericTypeDefinition
  fullName: GenericTypeParameterBuilder.IsGenericTypeDefinition
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsInstanceOfType(System.Object)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsInstanceOfType(Object)
  nameWithType: GenericTypeParameterBuilder.IsInstanceOfType(Object)
  fullName: GenericTypeParameterBuilder.IsInstanceOfType(Object)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsPointerImpl()
  nameWithType: GenericTypeParameterBuilder.IsPointerImpl()
  fullName: GenericTypeParameterBuilder.IsPointerImpl()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsPrimitiveImpl()
  nameWithType: GenericTypeParameterBuilder.IsPrimitiveImpl()
  fullName: GenericTypeParameterBuilder.IsPrimitiveImpl()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsSerializable
  nameWithType: GenericTypeParameterBuilder.IsSerializable
  fullName: GenericTypeParameterBuilder.IsSerializable
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: GenericTypeParameterBuilder.IsSubclassOf(Type)
  fullName: GenericTypeParameterBuilder.IsSubclassOf(Type)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSZArray
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsSZArray
  nameWithType: GenericTypeParameterBuilder.IsSZArray
  fullName: GenericTypeParameterBuilder.IsSZArray
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsTypeDefinition
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsTypeDefinition
  nameWithType: GenericTypeParameterBuilder.IsTypeDefinition
  fullName: GenericTypeParameterBuilder.IsTypeDefinition
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsValueTypeImpl
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsValueTypeImpl()
  nameWithType: GenericTypeParameterBuilder.IsValueTypeImpl()
  fullName: GenericTypeParameterBuilder.IsValueTypeImpl()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsVariableBoundArray
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsVariableBoundArray
  nameWithType: GenericTypeParameterBuilder.IsVariableBoundArray
  fullName: GenericTypeParameterBuilder.IsVariableBoundArray
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakeArrayType()
  nameWithType: GenericTypeParameterBuilder.MakeArrayType()
  fullName: GenericTypeParameterBuilder.MakeArrayType()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakeArrayType(Int32)
  nameWithType: GenericTypeParameterBuilder.MakeArrayType(Int32)
  fullName: GenericTypeParameterBuilder.MakeArrayType(Int32)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakeByRefType()
  nameWithType: GenericTypeParameterBuilder.MakeByRefType()
  fullName: GenericTypeParameterBuilder.MakeByRefType()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakeGenericType(Type[])
  nameWithType: GenericTypeParameterBuilder.MakeGenericType(Type[])
  fullName: GenericTypeParameterBuilder.MakeGenericType(Type[])
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakePointerType()
  nameWithType: GenericTypeParameterBuilder.MakePointerType()
  fullName: GenericTypeParameterBuilder.MakePointerType()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Module
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Module
  nameWithType: GenericTypeParameterBuilder.Module
  fullName: GenericTypeParameterBuilder.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Name
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Name
  nameWithType: GenericTypeParameterBuilder.Name
  fullName: GenericTypeParameterBuilder.Name
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Namespace
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Namespace
  nameWithType: GenericTypeParameterBuilder.Namespace
  fullName: GenericTypeParameterBuilder.Namespace
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ReflectedType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: GenericTypeParameterBuilder.ReflectedType
  fullName: GenericTypeParameterBuilder.ReflectedType
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetBaseTypeConstraint(Type)
  nameWithType: GenericTypeParameterBuilder.SetBaseTypeConstraint(Type)
  fullName: GenericTypeParameterBuilder.SetBaseTypeConstraint(Type)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: GenericTypeParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: GenericTypeParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetGenericParameterAttributes(GenericParameterAttributes)
  nameWithType: GenericTypeParameterBuilder.SetGenericParameterAttributes(GenericParameterAttributes)
  fullName: GenericTypeParameterBuilder.SetGenericParameterAttributes(GenericParameterAttributes)
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetInterfaceConstraints(Type[])
  nameWithType: GenericTypeParameterBuilder.SetInterfaceConstraints(Type[])
  fullName: GenericTypeParameterBuilder.SetInterfaceConstraints(Type[])
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ToString
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: ToString()
  nameWithType: GenericTypeParameterBuilder.ToString()
  fullName: GenericTypeParameterBuilder.ToString()
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.TypeHandle
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: TypeHandle
  nameWithType: GenericTypeParameterBuilder.TypeHandle
  fullName: GenericTypeParameterBuilder.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.UnderlyingSystemType
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: GenericTypeParameterBuilder.UnderlyingSystemType
  fullName: GenericTypeParameterBuilder.UnderlyingSystemType
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.#ctor*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GenericTypeParameterBuilder
  nameWithType: GenericTypeParameterBuilder.GenericTypeParameterBuilder
  fullName: GenericTypeParameterBuilder.GenericTypeParameterBuilder
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Assembly*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Assembly
  nameWithType: GenericTypeParameterBuilder.Assembly
  fullName: GenericTypeParameterBuilder.Assembly
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: GenericTypeParameterBuilder.AssemblyQualifiedName
  fullName: GenericTypeParameterBuilder.AssemblyQualifiedName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Attributes*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Attributes
  nameWithType: GenericTypeParameterBuilder.Attributes
  fullName: GenericTypeParameterBuilder.Attributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.BaseType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: BaseType
  nameWithType: GenericTypeParameterBuilder.BaseType
  fullName: GenericTypeParameterBuilder.BaseType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: ContainsGenericParameters
  nameWithType: GenericTypeParameterBuilder.ContainsGenericParameters
  fullName: GenericTypeParameterBuilder.ContainsGenericParameters
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: DeclaringMethod
  nameWithType: GenericTypeParameterBuilder.DeclaringMethod
  fullName: GenericTypeParameterBuilder.DeclaringMethod
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: GenericTypeParameterBuilder.DeclaringType
  fullName: GenericTypeParameterBuilder.DeclaringType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Equals*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Equals
  nameWithType: GenericTypeParameterBuilder.Equals
  fullName: GenericTypeParameterBuilder.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.FullName*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: FullName
  nameWithType: GenericTypeParameterBuilder.FullName
  fullName: GenericTypeParameterBuilder.FullName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericTypeParameterBuilder.GenericParameterAttributes
  fullName: GenericTypeParameterBuilder.GenericParameterAttributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GenericParameterPosition
  nameWithType: GenericTypeParameterBuilder.GenericParameterPosition
  fullName: GenericTypeParameterBuilder.GenericParameterPosition
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GenericTypeArguments
  nameWithType: GenericTypeParameterBuilder.GenericTypeArguments
  fullName: GenericTypeParameterBuilder.GenericTypeArguments
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetArrayRank
  nameWithType: GenericTypeParameterBuilder.GetArrayRank
  fullName: GenericTypeParameterBuilder.GetArrayRank
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetAttributeFlagsImpl
  nameWithType: GenericTypeParameterBuilder.GetAttributeFlagsImpl
  fullName: GenericTypeParameterBuilder.GetAttributeFlagsImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetConstructorImpl
  nameWithType: GenericTypeParameterBuilder.GetConstructorImpl
  fullName: GenericTypeParameterBuilder.GetConstructorImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetConstructors
  nameWithType: GenericTypeParameterBuilder.GetConstructors
  fullName: GenericTypeParameterBuilder.GetConstructors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetCustomAttributes
  nameWithType: GenericTypeParameterBuilder.GetCustomAttributes
  fullName: GenericTypeParameterBuilder.GetCustomAttributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetElementType
  nameWithType: GenericTypeParameterBuilder.GetElementType
  fullName: GenericTypeParameterBuilder.GetElementType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetEvent
  nameWithType: GenericTypeParameterBuilder.GetEvent
  fullName: GenericTypeParameterBuilder.GetEvent
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetEvents
  nameWithType: GenericTypeParameterBuilder.GetEvents
  fullName: GenericTypeParameterBuilder.GetEvents
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetField*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetField
  nameWithType: GenericTypeParameterBuilder.GetField
  fullName: GenericTypeParameterBuilder.GetField
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetFields*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetFields
  nameWithType: GenericTypeParameterBuilder.GetFields
  fullName: GenericTypeParameterBuilder.GetFields
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericArguments*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetGenericArguments
  nameWithType: GenericTypeParameterBuilder.GetGenericArguments
  fullName: GenericTypeParameterBuilder.GetGenericArguments
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetGenericParameterConstraints
  nameWithType: GenericTypeParameterBuilder.GetGenericParameterConstraints
  fullName: GenericTypeParameterBuilder.GetGenericParameterConstraints
  monikers:
  - netcore-1.0
  - netcore-1.1
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetGenericTypeDefinition
  nameWithType: GenericTypeParameterBuilder.GetGenericTypeDefinition
  fullName: GenericTypeParameterBuilder.GetGenericTypeDefinition
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetHashCode
  nameWithType: GenericTypeParameterBuilder.GetHashCode
  fullName: GenericTypeParameterBuilder.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetInterface
  nameWithType: GenericTypeParameterBuilder.GetInterface
  fullName: GenericTypeParameterBuilder.GetInterface
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetInterfaceMap
  nameWithType: GenericTypeParameterBuilder.GetInterfaceMap
  fullName: GenericTypeParameterBuilder.GetInterfaceMap
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetInterfaces
  nameWithType: GenericTypeParameterBuilder.GetInterfaces
  fullName: GenericTypeParameterBuilder.GetInterfaces
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMember*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetMember
  nameWithType: GenericTypeParameterBuilder.GetMember
  fullName: GenericTypeParameterBuilder.GetMember
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMembers*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetMembers
  nameWithType: GenericTypeParameterBuilder.GetMembers
  fullName: GenericTypeParameterBuilder.GetMembers
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetMethodImpl
  nameWithType: GenericTypeParameterBuilder.GetMethodImpl
  fullName: GenericTypeParameterBuilder.GetMethodImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetMethods
  nameWithType: GenericTypeParameterBuilder.GetMethods
  fullName: GenericTypeParameterBuilder.GetMethods
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetNestedType
  nameWithType: GenericTypeParameterBuilder.GetNestedType
  fullName: GenericTypeParameterBuilder.GetNestedType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedTypes*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetNestedTypes
  nameWithType: GenericTypeParameterBuilder.GetNestedTypes
  fullName: GenericTypeParameterBuilder.GetNestedTypes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetProperties
  nameWithType: GenericTypeParameterBuilder.GetProperties
  fullName: GenericTypeParameterBuilder.GetProperties
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GetPropertyImpl
  nameWithType: GenericTypeParameterBuilder.GetPropertyImpl
  fullName: GenericTypeParameterBuilder.GetPropertyImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.GUID*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: GUID
  nameWithType: GenericTypeParameterBuilder.GUID
  fullName: GenericTypeParameterBuilder.GUID
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: HasElementTypeImpl
  nameWithType: GenericTypeParameterBuilder.HasElementTypeImpl
  fullName: GenericTypeParameterBuilder.HasElementTypeImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: InvokeMember
  nameWithType: GenericTypeParameterBuilder.InvokeMember
  fullName: GenericTypeParameterBuilder.InvokeMember
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsArrayImpl
  nameWithType: GenericTypeParameterBuilder.IsArrayImpl
  fullName: GenericTypeParameterBuilder.IsArrayImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsAssignableFrom
  nameWithType: GenericTypeParameterBuilder.IsAssignableFrom
  fullName: GenericTypeParameterBuilder.IsAssignableFrom
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsByRefImpl
  nameWithType: GenericTypeParameterBuilder.IsByRefImpl
  fullName: GenericTypeParameterBuilder.IsByRefImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsCOMObjectImpl
  nameWithType: GenericTypeParameterBuilder.IsCOMObjectImpl
  fullName: GenericTypeParameterBuilder.IsCOMObjectImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsConstructedGenericType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsConstructedGenericType
  nameWithType: GenericTypeParameterBuilder.IsConstructedGenericType
  fullName: GenericTypeParameterBuilder.IsConstructedGenericType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsDefined
  nameWithType: GenericTypeParameterBuilder.IsDefined
  fullName: GenericTypeParameterBuilder.IsDefined
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsEnum
  nameWithType: GenericTypeParameterBuilder.IsEnum
  fullName: GenericTypeParameterBuilder.IsEnum
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsGenericParameter
  nameWithType: GenericTypeParameterBuilder.IsGenericParameter
  fullName: GenericTypeParameterBuilder.IsGenericParameter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsGenericType
  nameWithType: GenericTypeParameterBuilder.IsGenericType
  fullName: GenericTypeParameterBuilder.IsGenericType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsGenericTypeDefinition
  nameWithType: GenericTypeParameterBuilder.IsGenericTypeDefinition
  fullName: GenericTypeParameterBuilder.IsGenericTypeDefinition
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsInstanceOfType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsInstanceOfType
  nameWithType: GenericTypeParameterBuilder.IsInstanceOfType
  fullName: GenericTypeParameterBuilder.IsInstanceOfType
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsPointerImpl
  nameWithType: GenericTypeParameterBuilder.IsPointerImpl
  fullName: GenericTypeParameterBuilder.IsPointerImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsPrimitiveImpl
  nameWithType: GenericTypeParameterBuilder.IsPrimitiveImpl
  fullName: GenericTypeParameterBuilder.IsPrimitiveImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsSerializable
  nameWithType: GenericTypeParameterBuilder.IsSerializable
  fullName: GenericTypeParameterBuilder.IsSerializable
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsSubclassOf
  nameWithType: GenericTypeParameterBuilder.IsSubclassOf
  fullName: GenericTypeParameterBuilder.IsSubclassOf
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsSZArray*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsSZArray
  nameWithType: GenericTypeParameterBuilder.IsSZArray
  fullName: GenericTypeParameterBuilder.IsSZArray
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsTypeDefinition*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsTypeDefinition
  nameWithType: GenericTypeParameterBuilder.IsTypeDefinition
  fullName: GenericTypeParameterBuilder.IsTypeDefinition
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsValueTypeImpl*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsValueTypeImpl
  nameWithType: GenericTypeParameterBuilder.IsValueTypeImpl
  fullName: GenericTypeParameterBuilder.IsValueTypeImpl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.IsVariableBoundArray*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: IsVariableBoundArray
  nameWithType: GenericTypeParameterBuilder.IsVariableBoundArray
  fullName: GenericTypeParameterBuilder.IsVariableBoundArray
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakeArrayType
  nameWithType: GenericTypeParameterBuilder.MakeArrayType
  fullName: GenericTypeParameterBuilder.MakeArrayType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakeByRefType
  nameWithType: GenericTypeParameterBuilder.MakeByRefType
  fullName: GenericTypeParameterBuilder.MakeByRefType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakeGenericType
  nameWithType: GenericTypeParameterBuilder.MakeGenericType
  fullName: GenericTypeParameterBuilder.MakeGenericType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: MakePointerType
  nameWithType: GenericTypeParameterBuilder.MakePointerType
  fullName: GenericTypeParameterBuilder.MakePointerType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Module*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Module
  nameWithType: GenericTypeParameterBuilder.Module
  fullName: GenericTypeParameterBuilder.Module
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Name*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Name
  nameWithType: GenericTypeParameterBuilder.Name
  fullName: GenericTypeParameterBuilder.Name
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.Namespace*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: Namespace
  nameWithType: GenericTypeParameterBuilder.Namespace
  fullName: GenericTypeParameterBuilder.Namespace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ReflectedType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: GenericTypeParameterBuilder.ReflectedType
  fullName: GenericTypeParameterBuilder.ReflectedType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetBaseTypeConstraint
  nameWithType: GenericTypeParameterBuilder.SetBaseTypeConstraint
  fullName: GenericTypeParameterBuilder.SetBaseTypeConstraint
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetCustomAttribute
  nameWithType: GenericTypeParameterBuilder.SetCustomAttribute
  fullName: GenericTypeParameterBuilder.SetCustomAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetGenericParameterAttributes
  nameWithType: GenericTypeParameterBuilder.SetGenericParameterAttributes
  fullName: GenericTypeParameterBuilder.SetGenericParameterAttributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: SetInterfaceConstraints
  nameWithType: GenericTypeParameterBuilder.SetInterfaceConstraints
  fullName: GenericTypeParameterBuilder.SetInterfaceConstraints
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.ToString*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: ToString
  nameWithType: GenericTypeParameterBuilder.ToString
  fullName: GenericTypeParameterBuilder.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.TypeHandle*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: TypeHandle
  nameWithType: GenericTypeParameterBuilder.TypeHandle
  fullName: GenericTypeParameterBuilder.TypeHandle
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Reflection.Emit.GenericTypeParameterBuilder.UnderlyingSystemType*
  parent: System.Reflection.Emit.GenericTypeParameterBuilder
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: GenericTypeParameterBuilder.UnderlyingSystemType
  fullName: GenericTypeParameterBuilder.UnderlyingSystemType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/GenericTypeParameterBuilder.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  fullName: MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: MemberInfo.GetCustomAttributesData()
  fullName: MemberInfo.GetCustomAttributesData()
- uid: System.Reflection.TypeInfo.MemberType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: MemberType
  nameWithType: TypeInfo.MemberType
  fullName: TypeInfo.MemberType
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: MetadataToken
  nameWithType: MemberInfo.MetadataToken
  fullName: MemberInfo.MetadataToken
- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Equality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Inequality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.IsDefined(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetType()
  nameWithType: MemberInfo._MemberInfo.GetType()
  fullName: MemberInfo._MemberInfo.GetType()
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfoCount(UInt32)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.TypeInfo.AsType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: AsType()
  nameWithType: TypeInfo.AsType()
  fullName: TypeInfo.AsType()
- uid: System.Reflection.TypeInfo.DeclaredConstructors
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredConstructors
  nameWithType: TypeInfo.DeclaredConstructors
  fullName: TypeInfo.DeclaredConstructors
- uid: System.Reflection.TypeInfo.DeclaredEvents
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredEvents
  nameWithType: TypeInfo.DeclaredEvents
  fullName: TypeInfo.DeclaredEvents
- uid: System.Reflection.TypeInfo.DeclaredFields
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredFields
  nameWithType: TypeInfo.DeclaredFields
  fullName: TypeInfo.DeclaredFields
- uid: System.Reflection.TypeInfo.DeclaredMembers
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredMembers
  nameWithType: TypeInfo.DeclaredMembers
  fullName: TypeInfo.DeclaredMembers
- uid: System.Reflection.TypeInfo.DeclaredMethods
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredMethods
  nameWithType: TypeInfo.DeclaredMethods
  fullName: TypeInfo.DeclaredMethods
- uid: System.Reflection.TypeInfo.DeclaredNestedTypes
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredNestedTypes
  nameWithType: TypeInfo.DeclaredNestedTypes
  fullName: TypeInfo.DeclaredNestedTypes
- uid: System.Reflection.TypeInfo.DeclaredProperties
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: DeclaredProperties
  nameWithType: TypeInfo.DeclaredProperties
  fullName: TypeInfo.DeclaredProperties
- uid: System.Reflection.TypeInfo.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: FindInterfaces(TypeFilter, Object)
  nameWithType: TypeInfo.FindInterfaces(TypeFilter, Object)
  fullName: TypeInfo.FindInterfaces(TypeFilter, Object)
- uid: System.Reflection.TypeInfo.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
  nameWithType: TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
  fullName: TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)
- uid: System.Reflection.TypeInfo.GenericTypeParameters
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GenericTypeParameters
  nameWithType: TypeInfo.GenericTypeParameters
  fullName: TypeInfo.GenericTypeParameters
- uid: System.Reflection.TypeInfo.GetConstructor(System.Type[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetConstructor(Type[])
  nameWithType: TypeInfo.GetConstructor(Type[])
  fullName: TypeInfo.GetConstructor(Type[])
- uid: System.Reflection.TypeInfo.GetConstructors
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetConstructors()
  nameWithType: TypeInfo.GetConstructors()
  fullName: TypeInfo.GetConstructors()
- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredEvent(String)
  nameWithType: TypeInfo.GetDeclaredEvent(String)
  fullName: TypeInfo.GetDeclaredEvent(String)
- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredField(String)
  nameWithType: TypeInfo.GetDeclaredField(String)
  fullName: TypeInfo.GetDeclaredField(String)
- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredMethod(String)
  nameWithType: TypeInfo.GetDeclaredMethod(String)
  fullName: TypeInfo.GetDeclaredMethod(String)
- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredMethods(String)
  nameWithType: TypeInfo.GetDeclaredMethods(String)
  fullName: TypeInfo.GetDeclaredMethods(String)
- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredNestedType(String)
  nameWithType: TypeInfo.GetDeclaredNestedType(String)
  fullName: TypeInfo.GetDeclaredNestedType(String)
- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDeclaredProperty(String)
  nameWithType: TypeInfo.GetDeclaredProperty(String)
  fullName: TypeInfo.GetDeclaredProperty(String)
- uid: System.Reflection.TypeInfo.GetDefaultMembers
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetDefaultMembers()
  nameWithType: TypeInfo.GetDefaultMembers()
  fullName: TypeInfo.GetDefaultMembers()
- uid: System.Reflection.TypeInfo.GetEnumName(System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEnumName(Object)
  nameWithType: TypeInfo.GetEnumName(Object)
  fullName: TypeInfo.GetEnumName(Object)
- uid: System.Reflection.TypeInfo.GetEnumNames
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEnumNames()
  nameWithType: TypeInfo.GetEnumNames()
  fullName: TypeInfo.GetEnumNames()
- uid: System.Reflection.TypeInfo.GetEnumUnderlyingType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEnumUnderlyingType()
  nameWithType: TypeInfo.GetEnumUnderlyingType()
  fullName: TypeInfo.GetEnumUnderlyingType()
- uid: System.Reflection.TypeInfo.GetEnumValues
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEnumValues()
  nameWithType: TypeInfo.GetEnumValues()
  fullName: TypeInfo.GetEnumValues()
- uid: System.Reflection.TypeInfo.GetEvent(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetEvent(String)
  nameWithType: TypeInfo.GetEvent(String)
  fullName: TypeInfo.GetEvent(String)
- uid: System.Reflection.TypeInfo.GetField(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetField(String)
  nameWithType: TypeInfo.GetField(String)
  fullName: TypeInfo.GetField(String)
- uid: System.Reflection.TypeInfo.GetFields
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetFields()
  nameWithType: TypeInfo.GetFields()
  fullName: TypeInfo.GetFields()
- uid: System.Reflection.TypeInfo.GetInterface(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetInterface(String)
  nameWithType: TypeInfo.GetInterface(String)
  fullName: TypeInfo.GetInterface(String)
- uid: System.Reflection.TypeInfo.GetMember(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMember(String)
  nameWithType: TypeInfo.GetMember(String)
  fullName: TypeInfo.GetMember(String)
- uid: System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMember(String, BindingFlags)
  nameWithType: TypeInfo.GetMember(String, BindingFlags)
  fullName: TypeInfo.GetMember(String, BindingFlags)
- uid: System.Reflection.TypeInfo.GetMembers
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMembers()
  nameWithType: TypeInfo.GetMembers()
  fullName: TypeInfo.GetMembers()
- uid: System.Reflection.TypeInfo.GetMethod(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethod(String)
  nameWithType: TypeInfo.GetMethod(String)
  fullName: TypeInfo.GetMethod(String)
- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethod(String, BindingFlags)
  nameWithType: TypeInfo.GetMethod(String, BindingFlags)
  fullName: TypeInfo.GetMethod(String, BindingFlags)
- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Type[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethod(String, Type[])
  nameWithType: TypeInfo.GetMethod(String, Type[])
  fullName: TypeInfo.GetMethod(String, Type[])
- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethod(String, Type[], ParameterModifier[])
  nameWithType: TypeInfo.GetMethod(String, Type[], ParameterModifier[])
  fullName: TypeInfo.GetMethod(String, Type[], ParameterModifier[])
- uid: System.Reflection.TypeInfo.GetMethods
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetMethods()
  nameWithType: TypeInfo.GetMethods()
  fullName: TypeInfo.GetMethods()
- uid: System.Reflection.TypeInfo.GetNestedType(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetNestedType(String)
  nameWithType: TypeInfo.GetNestedType(String)
  fullName: TypeInfo.GetNestedType(String)
- uid: System.Reflection.TypeInfo.GetNestedTypes
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetNestedTypes()
  nameWithType: TypeInfo.GetNestedTypes()
  fullName: TypeInfo.GetNestedTypes()
- uid: System.Reflection.TypeInfo.GetProperties
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperties()
  nameWithType: TypeInfo.GetProperties()
  fullName: TypeInfo.GetProperties()
- uid: System.Reflection.TypeInfo.GetProperty(System.String)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String)
  nameWithType: TypeInfo.GetProperty(String)
  fullName: TypeInfo.GetProperty(String)
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, BindingFlags)
  nameWithType: TypeInfo.GetProperty(String, BindingFlags)
  fullName: TypeInfo.GetProperty(String, BindingFlags)
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, Type)
  nameWithType: TypeInfo.GetProperty(String, Type)
  fullName: TypeInfo.GetProperty(String, Type)
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, Type[])
  nameWithType: TypeInfo.GetProperty(String, Type[])
  fullName: TypeInfo.GetProperty(String, Type[])
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, Type, Type[])
  nameWithType: TypeInfo.GetProperty(String, Type, Type[])
  fullName: TypeInfo.GetProperty(String, Type, Type[])
- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: GetProperty(String, Type, Type[], ParameterModifier[])
  nameWithType: TypeInfo.GetProperty(String, Type, Type[], ParameterModifier[])
  fullName: TypeInfo.GetProperty(String, Type, Type[], ParameterModifier[])
- uid: System.Reflection.TypeInfo.HasElementType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: HasElementType
  nameWithType: TypeInfo.HasElementType
  fullName: TypeInfo.HasElementType
- uid: System.Reflection.TypeInfo.ImplementedInterfaces
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: ImplementedInterfaces
  nameWithType: TypeInfo.ImplementedInterfaces
  fullName: TypeInfo.ImplementedInterfaces
- uid: System.Reflection.TypeInfo.IsAbstract
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAbstract
  nameWithType: TypeInfo.IsAbstract
  fullName: TypeInfo.IsAbstract
- uid: System.Reflection.TypeInfo.IsAnsiClass
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAnsiClass
  nameWithType: TypeInfo.IsAnsiClass
  fullName: TypeInfo.IsAnsiClass
- uid: System.Reflection.TypeInfo.IsArray
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsArray
  nameWithType: TypeInfo.IsArray
  fullName: TypeInfo.IsArray
- uid: System.Reflection.TypeInfo.IsAutoClass
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAutoClass
  nameWithType: TypeInfo.IsAutoClass
  fullName: TypeInfo.IsAutoClass
- uid: System.Reflection.TypeInfo.IsAutoLayout
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsAutoLayout
  nameWithType: TypeInfo.IsAutoLayout
  fullName: TypeInfo.IsAutoLayout
- uid: System.Reflection.TypeInfo.IsByRef
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsByRef
  nameWithType: TypeInfo.IsByRef
  fullName: TypeInfo.IsByRef
- uid: System.Reflection.TypeInfo.IsClass
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsClass
  nameWithType: TypeInfo.IsClass
  fullName: TypeInfo.IsClass
- uid: System.Reflection.TypeInfo.IsCOMObject
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsCOMObject
  nameWithType: TypeInfo.IsCOMObject
  fullName: TypeInfo.IsCOMObject
- uid: System.Reflection.TypeInfo.IsEnumDefined(System.Object)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsEnumDefined(Object)
  nameWithType: TypeInfo.IsEnumDefined(Object)
  fullName: TypeInfo.IsEnumDefined(Object)
- uid: System.Reflection.TypeInfo.IsEquivalentTo(System.Type)
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsEquivalentTo(Type)
  nameWithType: TypeInfo.IsEquivalentTo(Type)
  fullName: TypeInfo.IsEquivalentTo(Type)
- uid: System.Reflection.TypeInfo.IsExplicitLayout
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsExplicitLayout
  nameWithType: TypeInfo.IsExplicitLayout
  fullName: TypeInfo.IsExplicitLayout
- uid: System.Reflection.TypeInfo.IsImport
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsImport
  nameWithType: TypeInfo.IsImport
  fullName: TypeInfo.IsImport
- uid: System.Reflection.TypeInfo.IsInterface
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsInterface
  nameWithType: TypeInfo.IsInterface
  fullName: TypeInfo.IsInterface
- uid: System.Reflection.TypeInfo.IsLayoutSequential
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsLayoutSequential
  nameWithType: TypeInfo.IsLayoutSequential
  fullName: TypeInfo.IsLayoutSequential
- uid: System.Reflection.TypeInfo.IsMarshalByRef
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsMarshalByRef
  nameWithType: TypeInfo.IsMarshalByRef
  fullName: TypeInfo.IsMarshalByRef
- uid: System.Reflection.TypeInfo.IsNested
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNested
  nameWithType: TypeInfo.IsNested
  fullName: TypeInfo.IsNested
- uid: System.Reflection.TypeInfo.IsNestedAssembly
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedAssembly
  nameWithType: TypeInfo.IsNestedAssembly
  fullName: TypeInfo.IsNestedAssembly
- uid: System.Reflection.TypeInfo.IsNestedFamANDAssem
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: TypeInfo.IsNestedFamANDAssem
  fullName: TypeInfo.IsNestedFamANDAssem
- uid: System.Reflection.TypeInfo.IsNestedFamily
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedFamily
  nameWithType: TypeInfo.IsNestedFamily
  fullName: TypeInfo.IsNestedFamily
- uid: System.Reflection.TypeInfo.IsNestedFamORAssem
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: TypeInfo.IsNestedFamORAssem
  fullName: TypeInfo.IsNestedFamORAssem
- uid: System.Reflection.TypeInfo.IsNestedPrivate
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedPrivate
  nameWithType: TypeInfo.IsNestedPrivate
  fullName: TypeInfo.IsNestedPrivate
- uid: System.Reflection.TypeInfo.IsNestedPublic
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNestedPublic
  nameWithType: TypeInfo.IsNestedPublic
  fullName: TypeInfo.IsNestedPublic
- uid: System.Reflection.TypeInfo.IsNotPublic
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsNotPublic
  nameWithType: TypeInfo.IsNotPublic
  fullName: TypeInfo.IsNotPublic
- uid: System.Reflection.TypeInfo.IsPointer
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsPointer
  nameWithType: TypeInfo.IsPointer
  fullName: TypeInfo.IsPointer
- uid: System.Reflection.TypeInfo.IsPrimitive
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsPrimitive
  nameWithType: TypeInfo.IsPrimitive
  fullName: TypeInfo.IsPrimitive
- uid: System.Reflection.TypeInfo.IsPublic
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsPublic
  nameWithType: TypeInfo.IsPublic
  fullName: TypeInfo.IsPublic
- uid: System.Reflection.TypeInfo.IsSealed
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsSealed
  nameWithType: TypeInfo.IsSealed
  fullName: TypeInfo.IsSealed
- uid: System.Reflection.TypeInfo.IsSpecialName
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: TypeInfo.IsSpecialName
  fullName: TypeInfo.IsSpecialName
- uid: System.Reflection.TypeInfo.IsUnicodeClass
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsUnicodeClass
  nameWithType: TypeInfo.IsUnicodeClass
  fullName: TypeInfo.IsUnicodeClass
- uid: System.Reflection.TypeInfo.IsValueType
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsValueType
  nameWithType: TypeInfo.IsValueType
  fullName: TypeInfo.IsValueType
- uid: System.Reflection.TypeInfo.IsVisible
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IsVisible
  nameWithType: TypeInfo.IsVisible
  fullName: TypeInfo.IsVisible
- uid: System.Reflection.TypeInfo.StructLayoutAttribute
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: StructLayoutAttribute
  nameWithType: TypeInfo.StructLayoutAttribute
  fullName: TypeInfo.StructLayoutAttribute
- uid: System.Reflection.TypeInfo.TypeInitializer
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: TypeInitializer
  nameWithType: TypeInfo.TypeInitializer
  fullName: TypeInfo.TypeInitializer
- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  parent: System.Reflection.TypeInfo
  isExternal: false
  name: IReflectableType.GetTypeInfo()
  nameWithType: TypeInfo.IReflectableType.GetTypeInfo()
  fullName: TypeInfo.IReflectableType.GetTypeInfo()
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: GetMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)
- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: HasMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)
- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)
  parent: System.Reflection.RuntimeReflectionExtensions
  isExternal: false
  name: GetRuntimeInterfaceMap(TypeInfo, Type)
  nameWithType: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type)
  fullName: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type)
