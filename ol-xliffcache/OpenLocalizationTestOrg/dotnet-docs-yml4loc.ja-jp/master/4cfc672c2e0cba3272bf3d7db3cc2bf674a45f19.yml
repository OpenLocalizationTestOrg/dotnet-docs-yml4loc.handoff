### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  commentId: T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  id: TcpClientChannel
  children:
  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor
  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName
  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured
  - System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)
  langs:
  - csharp
  name: TcpClientChannel
  nameWithType: TcpClientChannel
  fullName: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  type: Class
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: For remote calls, implements a client channel that uses the TCP protocol to transmit messages.
  remarks: "Channels transport messages across remoting boundaries (for example, computers or application domains). The <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class transports messages using the TCP protocol.  \n  \n Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.  \n  \n To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> are passed.  \n  \n By default, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class uses a binary formatter to serialize all messages.  \n  \n A <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A>."
  example:
  - "The following code example shows the use of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class to call a remote type.  \n  \n [!code-cpp[Remoting_TcpInfo#20](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#20)]\n [!code-csharp[Remoting_TcpInfo#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#20)]  \n  \n The remote type called in the example above is defined by the following code.  \n  \n [!code-cpp[Remoting_TcpInfo#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/remotable.cpp#10)]\n [!code-csharp[Remoting_TcpInfo#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/remotable.cs#10)]"
  syntax:
    content: 'public class TcpClientChannel : System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelSender
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor
  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  langs:
  - csharp
  name: TcpClientChannel()
  nameWithType: TcpClientChannel.TcpClientChannel()
  fullName: TcpClientChannel.TcpClientChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: Initializes a new instance of the <xref href="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel"></xref> class.
  remarks: The configuration properties of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> instance returned by this constructor are all set to their default values.
  example:
  - "The following code example shows the use of this constructor.  \n  \n [!code-cpp[Remoting_TcpInfo#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#21)]\n [!code-csharp[Remoting_TcpInfo#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#21)]"
  syntax:
    content: public TcpClientChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  langs:
  - csharp
  name: TcpClientChannel(IDictionary, IClientChannelSinkProvider)
  nameWithType: TcpClientChannel.TcpClientChannel(IDictionary, IClientChannelSinkProvider)
  fullName: TcpClientChannel.TcpClientChannel(IDictionary, IClientChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: Initializes a new instance of the <xref href="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel"></xref> class with the specified configuration properties and sink.
  remarks: "For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`."
  example:
  - "The following code example shows the use of this constructor to create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> object with specific configuration properties.  \n  \n [!code-cpp[Remoting_TcpAuth#31](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpAuth/CPP/client.cpp#31)]\n [!code-csharp[Remoting_TcpAuth#31](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpAuth/CS/client.cs#31)]"
  syntax:
    content: public TcpClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: A <xref href="System.Collections.IDictionary"></xref> collection that specifies values for configuration properties to be used by the channel.
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: The <xref href="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"></xref> implementation to be used by the channel.
  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A configuration property was incorrectly formatted.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  id: '#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  langs:
  - csharp
  name: TcpClientChannel(String, IClientChannelSinkProvider)
  nameWithType: TcpClientChannel.TcpClientChannel(String, IClientChannelSinkProvider)
  fullName: TcpClientChannel.TcpClientChannel(String, IClientChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: Initializes a new instance of the <xref href="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel"></xref> class with the specified name and sink.
  remarks: "This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`."
  example:
  - "The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#31](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CPP/client.cpp#31)]\n [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#31](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CS/client.cs#31)]"
  syntax:
    content: public TcpClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: The name of the channel.
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: The <xref href="System.Runtime.Remoting.Channels.IClientChannelSinkProvider"></xref> implementation to be used by the channel.
  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName
  commentId: P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: TcpClientChannel.ChannelName
  fullName: TcpClientChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: Gets the name of the current channel.
  remarks: Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.
  example:
  - "The following code example shows the use of this property.  \n  \n [!code-cpp[Remoting_TcpInfo#22](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#22)]\n [!code-csharp[Remoting_TcpInfo#22](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#22)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> instance that contains the name of the channel.
  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority
  commentId: P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: TcpClientChannel.ChannelPriority
  fullName: TcpClientChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: Gets the priority of the current channel.
  remarks: The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels. The default priority is 1; negative priorities are allowed.
  example:
  - "The following code example shows the use of this property.  \n  \n [!code-cpp[Remoting_TcpInfo#22](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#22)]\n [!code-csharp[Remoting_TcpInfo#22](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#22)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: An integer that represents the priority assigned to the channel.
  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  id: CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  langs:
  - csharp
  name: CreateMessageSink(String, Object, String)
  nameWithType: TcpClientChannel.CreateMessageSink(String, Object, String)
  fullName: TcpClientChannel.CreateMessageSink(String, Object, String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: Returns a channel message sink that delivers messages to the specified URL or channel data object.
  remarks: The <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or the channel data object. If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink. Either the `url` or `remoteChannelData` parameters can be `null`, but not both.
  example:
  - "The following code example shows the use this method.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#32](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CPP/client.cpp#32)]\n [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#32](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CS/client.cs#32)]"
  syntax:
    content: public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: The URL to which the new sink delivers messages. Can be `null`.
    - id: remoteChannelData
      type: System.Object
      description: The channel data object of the remote host to which the new sink will deliver messages. Can be `null`.
    - id: objectURI
      type: System.String
      description: When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: A channel message sink that delivers messages to the specified URL or channel data object.
  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured
  commentId: P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: TcpClientChannel.IsSecured
  fullName: TcpClientChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: Gets or sets a Boolean value that indicates whether the current channel is secure
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether the current instance is secure.
  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)
  commentId: M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  langs:
  - csharp
  name: Parse(String, String)
  nameWithType: TcpClientChannel.Parse(String, String)
  fullName: TcpClientChannel.Parse(String, String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Tcp
  summary: Extracts the channel URI and the remote well-known object URI from the specified URL.
  remarks: ''
  example:
  - "The following code example shows the use this method.  \n  \n System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#33"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: The URL from which to extract the URIs.
    - id: objectURI
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized.
    return:
      type: System.String
      description: The channel URI.
  overload: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: TcpClientChannel()
  nameWithType: TcpClientChannel.TcpClientChannel()
  fullName: TcpClientChannel.TcpClientChannel()
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: TcpClientChannel(IDictionary, IClientChannelSinkProvider)
  nameWithType: TcpClientChannel.TcpClientChannel(IDictionary, IClientChannelSinkProvider)
  fullName: TcpClientChannel.TcpClientChannel(IDictionary, IClientChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IClientChannelSinkProvider
  nameWithType: IClientChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: TcpClientChannel(String, IClientChannelSinkProvider)
  nameWithType: TcpClientChannel.TcpClientChannel(String, IClientChannelSinkProvider)
  fullName: TcpClientChannel.TcpClientChannel(String, IClientChannelSinkProvider)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: ChannelName
  nameWithType: TcpClientChannel.ChannelName
  fullName: TcpClientChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: TcpClientChannel.ChannelPriority
  fullName: TcpClientChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: CreateMessageSink(String, Object, String)
  nameWithType: TcpClientChannel.CreateMessageSink(String, Object, String)
  fullName: TcpClientChannel.CreateMessageSink(String, Object, String)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: IsSecured
  nameWithType: TcpClientChannel.IsSecured
  fullName: TcpClientChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: Parse(String, String)
  nameWithType: TcpClientChannel.Parse(String, String)
  fullName: TcpClientChannel.Parse(String, String)
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: TcpClientChannel
  nameWithType: TcpClientChannel.TcpClientChannel
  fullName: TcpClientChannel.TcpClientChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: ChannelName
  nameWithType: TcpClientChannel.ChannelName
  fullName: TcpClientChannel.ChannelName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: TcpClientChannel.ChannelPriority
  fullName: TcpClientChannel.ChannelPriority
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: CreateMessageSink
  nameWithType: TcpClientChannel.CreateMessageSink
  fullName: TcpClientChannel.CreateMessageSink
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: IsSecured
  nameWithType: TcpClientChannel.IsSecured
  fullName: TcpClientChannel.IsSecured
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
- uid: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Tcp.TcpClientChannel
  isExternal: false
  name: Parse
  nameWithType: TcpClientChannel.Parse
  fullName: TcpClientChannel.Parse
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Tcp/TcpClientChannel.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Runtime.Remoting.Channels.IChannelSender
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannelSender
  nameWithType: IChannelSender
  fullName: System.Runtime.Remoting.Channels.IChannelSender
- uid: System.Runtime.Remoting.Channels.ISecurableChannel
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ISecurableChannel
  nameWithType: ISecurableChannel
  fullName: System.Runtime.Remoting.Channels.ISecurableChannel
