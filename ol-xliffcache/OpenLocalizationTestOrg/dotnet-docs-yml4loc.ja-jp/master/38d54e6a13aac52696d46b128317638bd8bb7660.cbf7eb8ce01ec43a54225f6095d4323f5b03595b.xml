{"nodes":[{"content":"Specifies that the property can be used as an application setting.","nodes":[{"pos":[0,66],"content":"Specifies that the property can be used as an application setting.","nodes":[{"content":"Specifies that the property can be used as an application setting.","pos":[0,66]}]}],"pos":[1153,1220],"yaml":true},{"content":"Properties that are marked with the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true` display when you expand the **ConfigurableProperties** line in the **Properties** window. A property that has no recommended setting or that is marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `false` is not shown and is an unlikely candidate for being an application setting. The default is `false`.  \n  \n You can bind a property that does not have a <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> to a setting in Visual Studio by clicking the ellipsis button (…) under **Settings** in the **Properties** window and selecting the appropriate property from the list.  \n  \n> [!NOTE]\n>  When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes>. For a property marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to value `false`, the value is <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>.  \n  \n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).  \n  \n .","nodes":[{"pos":[0,448],"content":"Properties that are marked with the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true` display when you expand the **ConfigurableProperties** line in the **Properties** window. A property that has no recommended setting or that is marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `false` is not shown and is an unlikely candidate for being an application setting. The default is `false`.","nodes":[{"content":"Properties that are marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph> display when you expand the <bpt id=\"p1\">**</bpt>ConfigurableProperties<ept id=\"p1\">**</ept> line in the <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> window.","pos":[0,203],"source":"Properties that are marked with the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true` display when you expand the **ConfigurableProperties** line in the **Properties** window."},{"content":"A property that has no recommended setting or that is marked with <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph> is not shown and is an unlikely candidate for being an application setting.","pos":[204,424],"source":" A property that has no recommended setting or that is marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `false` is not shown and is an unlikely candidate for being an application setting."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[425,448],"source":" The default is `false`."}]},{"pos":[455,731],"content":"You can bind a property that does not have a <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute&gt;</ph> to a setting in Visual Studio by clicking the ellipsis button (…) under <bpt id=\"p1\">**</bpt>Settings<ept id=\"p1\">**</ept> in the <bpt id=\"p2\">**</bpt>Properties<ept id=\"p2\">**</ept> window and selecting the appropriate property from the list.","source":"You can bind a property that does not have a <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> to a setting in Visual Studio by clicking the ellipsis button (…) under **Settings** in the **Properties** window and selecting the appropriate property from the list."},{"pos":[739,1478],"content":"[!NOTE]\n When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes>. For a property marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to value `false`, the value is <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>.","leadings":["","> "],"nodes":[{"content":" When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes>. For a property marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to value `false`, the value is <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>.","pos":[8,737],"nodes":[{"content":"When you mark a property with <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes&gt;</ph>.","pos":[1,236],"source":" When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes>."},{"content":"For a property marked with <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute&gt;</ph> set to value <ph id=\"ph2\">`false`</ph>, the value is <ph id=\"ph3\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No&gt;</ph>.","pos":[237,430],"source":" For a property marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to value `false`, the value is <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>."},{"content":"Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName&gt;</ph>.","pos":[431,729],"source":" Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>."}]}]},{"pos":[1485,1596],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."},{"pos":[1603,1604],"content":".","nodes":[{"content":".","pos":[0,1]}]}],"pos":[1231,2847],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref> class.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref> class."}],"pos":[11067,11186],"yaml":true},{"content":"`true` if the property this attribute is bound to can be used as an application setting; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the property this attribute is bound to can be used as an application setting; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property this attribute is bound to can be used as an application setting; otherwise, `false`."}],"pos":[12485,12596],"yaml":true},{"content":"Specifies the default value for the <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref>, which is <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute.No\"></xref>. This `static` field is read-only.","nodes":[{"pos":[0,239],"content":"Specifies the default value for the <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref>, which is <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute.No\"></xref>. This `static` field is read-only.","nodes":[{"content":"Specifies the default value for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"&gt;&lt;/xref&gt;</ph>, which is <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute.No\"&gt;&lt;/xref&gt;</ph>.","pos":[0,205],"source":"Specifies the default value for the <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref>, which is <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute.No\"></xref>."},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[206,239],"source":" This `static` field is read-only."}]}],"pos":[13965,14205],"yaml":true},{"content":"Indicates whether this instance and a specified object are equal.","nodes":[{"pos":[0,65],"content":"Indicates whether this instance and a specified object are equal.","nodes":[{"content":"Indicates whether this instance and a specified object are equal.","pos":[0,65]}]}],"pos":[15777,15843],"yaml":true},{"content":"Another object to compare to.","nodes":[{"pos":[0,29],"content":"Another object to compare to.","nodes":[{"content":"Another object to compare to.","pos":[0,29]}]}],"pos":[15983,16013],"yaml":true},{"content":"`true` if <code>obj</code> is equal to this instance; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> is equal to this instance; otherwise, `false`."}],"pos":[16071,16147],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[17548,17589],"yaml":true},{"content":"A hash code for the current <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref>.","nodes":[{"pos":[0,106],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref>."}],"pos":[17723,17830],"yaml":true},{"content":"Indicates whether the value of this instance is the default value for the class.","nodes":[{"pos":[0,80],"content":"Indicates whether the value of this instance is the default value for the class.","nodes":[{"content":"Indicates whether the value of this instance is the default value for the class.","pos":[0,80]}]}],"pos":[19278,19359],"yaml":true},{"content":"`true` if this instance is the default attribute for the class; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if this instance is the default attribute for the class; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this instance is the default attribute for the class; otherwise, `false`."}],"pos":[19503,19589],"yaml":true},{"content":"Specifies that a property cannot be used as an application setting. This `static` field is read-only.","nodes":[{"pos":[0,101],"content":"Specifies that a property cannot be used as an application setting. This `static` field is read-only.","nodes":[{"content":"Specifies that a property cannot be used as an application setting.","pos":[0,67]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[68,101],"source":" This `static` field is read-only."}]}],"pos":[20941,21043],"yaml":true},{"content":"This field is the default setting for this attribute.  \n  \n When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>.","nodes":[{"pos":[0,53],"content":"This field is the default setting for this attribute.","nodes":[{"content":"This field is the default setting for this attribute.","pos":[0,53]}]},{"pos":[60,510],"content":"When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>.","nodes":[{"content":"When you mark a property with <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No&gt;</ph>.","pos":[0,235],"source":"When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName&gt;</ph>.","pos":[236,450],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>."}]}],"pos":[21054,21569],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the property this attribute is bound to can be used as an application setting.","nodes":[{"pos":[0,110],"content":"Gets a value indicating whether the property this attribute is bound to can be used as an application setting.","nodes":[{"content":"Gets a value indicating whether the property this attribute is bound to can be used as an application setting.","pos":[0,110]}]}],"pos":[23183,23294],"yaml":true},{"content":"`true` if the property this attribute is bound to can be used as an application setting; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the property this attribute is bound to can be used as an application setting; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property this attribute is bound to can be used as an application setting; otherwise, `false`."}],"pos":[24828,24939],"yaml":true},{"content":"Specifies that a property can be used as an application setting. This `static` field is read-only.","nodes":[{"pos":[0,98],"content":"Specifies that a property can be used as an application setting. This `static` field is read-only.","nodes":[{"content":"Specifies that a property can be used as an application setting.","pos":[0,64]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[65,98],"source":" This `static` field is read-only."}]}],"pos":[26304,26403],"yaml":true},{"content":"When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes>.  \n  \n Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName>.","nodes":[{"pos":[0,235],"content":"When you mark a property with <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes&gt;</ph>.","source":"When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes>."},{"pos":[242,460],"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName>.","nodes":[{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName&gt;</ph>.","pos":[0,218],"source":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName>."}]}],"pos":[26414,26879],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute\n  commentId: T:System.ComponentModel.RecommendedAsConfigurableAttribute\n  id: RecommendedAsConfigurableAttribute\n  children:\n  - System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.RecommendedAsConfigurableAttribute.Default\n  - System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)\n  - System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode\n  - System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute\n  - System.ComponentModel.RecommendedAsConfigurableAttribute.No\n  - System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  - System.ComponentModel.RecommendedAsConfigurableAttribute.Yes\n  langs:\n  - csharp\n  name: RecommendedAsConfigurableAttribute\n  nameWithType: RecommendedAsConfigurableAttribute\n  fullName: System.ComponentModel.RecommendedAsConfigurableAttribute\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies that the property can be used as an application setting.\n  remarks: \"Properties that are marked with the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true` display when you expand the **ConfigurableProperties** line in the **Properties** window. A property that has no recommended setting or that is marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `false` is not shown and is an unlikely candidate for being an application setting. The default is `false`.  \\n  \\n You can bind a property that does not have a <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> to a setting in Visual Studio by clicking the ellipsis button (…) under **Settings** in the **Properties** window and selecting the appropriate property from the list.  \\n  \\n> [!NOTE]\\n>  When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes>. For a property marked with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to value `false`, the value is <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>.  \\n  \\n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).  \\n  \\n .\"\n  example:\n  - \"The following example marks a property as usable as an application setting.  \\n  \\n [!code-cpp[Classic RecommendedAsConfigurableAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic RecommendedAsConfigurableAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/CS/source.cs#1)]\\n [!code-vb[Classic RecommendedAsConfigurableAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/VB/source.vb#1)]  \\n  \\n The next example shows how to check the value of the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> for `MyProperty`. First the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Then it returns the attributes for this property and saves them in the attributes variable.  \\n  \\n This example presents two different ways of checking the value of the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute>. In the second code fragment, the example calls the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable%2A> property to check the value.  \\n  \\n [!code-cpp[Classic RecommendedAsConfigurableAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/CPP/source.cpp#2)]\\n [!code-csharp[Classic RecommendedAsConfigurableAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/CS/source.cs#2)]\\n [!code-vb[Classic RecommendedAsConfigurableAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/VB/source.vb#2)]  \\n  \\n If you marked a class with the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute>, use the following code to check the value.  \\n  \\n [!code-cpp[Classic RecommendedAsConfigurableAttribute Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/CPP/source.cpp#3)]\\n [!code-csharp[Classic RecommendedAsConfigurableAttribute Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/CS/source.cs#3)]\\n [!code-vb[Classic RecommendedAsConfigurableAttribute Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute Example/VB/source.vb#3)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      [System.Obsolete(\"Use System.ComponentModel.SettingsBindableAttribute instead to work with the new settings model.\")]\n\n      public class RecommendedAsConfigurableAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  langs:\n  - csharp\n  name: RecommendedAsConfigurableAttribute(Boolean)\n  nameWithType: RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute(Boolean)\n  fullName: RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example marks a property as usable as an application setting. This code creates a new <xref:System.ComponentModel.RecommendedAsConfigurableAttribute>, sets its value to <xref:System.ComponentModel.RecommendedAsConfigurableAttribute?displayProperty=fullName>, and binds it to the property.  \\n  \\n [!code-cpp[Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute Example/CS/source.cs#1)]\\n [!code-vb[Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute Example/VB/source.vb#1)]\"\n  syntax:\n    content: public RecommendedAsConfigurableAttribute (bool recommendedAsConfigurable);\n    parameters:\n    - id: recommendedAsConfigurable\n      type: System.Boolean\n      description: '`true` if the property this attribute is bound to can be used as an application setting; otherwise, `false`.'\n  overload: System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.Default\n  commentId: F:System.ComponentModel.RecommendedAsConfigurableAttribute.Default\n  id: Default\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: RecommendedAsConfigurableAttribute.Default\n  fullName: RecommendedAsConfigurableAttribute.Default\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies the default value for the <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref>, which is <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute.No\"></xref>. This `static` field is read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.RecommendedAsConfigurableAttribute Default;\n    return:\n      type: System.ComponentModel.RecommendedAsConfigurableAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: RecommendedAsConfigurableAttribute.Equals(Object)\n  fullName: RecommendedAsConfigurableAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Indicates whether this instance and a specified object are equal.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Another object to compare to.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is equal to this instance; otherwise, `false`.'\n  overload: System.ComponentModel.RecommendedAsConfigurableAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode\n  commentId: M:System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: RecommendedAsConfigurableAttribute.GetHashCode()\n  fullName: RecommendedAsConfigurableAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.RecommendedAsConfigurableAttribute\"></xref>.\n  overload: System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute\n  commentId: M:System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: RecommendedAsConfigurableAttribute.IsDefaultAttribute()\n  fullName: RecommendedAsConfigurableAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Indicates whether the value of this instance is the default value for the class.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this instance is the default attribute for the class; otherwise, `false`.'\n  overload: System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.No\n  commentId: F:System.ComponentModel.RecommendedAsConfigurableAttribute.No\n  id: No\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: RecommendedAsConfigurableAttribute.No\n  fullName: RecommendedAsConfigurableAttribute.No\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies that a property cannot be used as an application setting. This `static` field is read-only.\n  remarks: \"This field is the default setting for this attribute.  \\n  \\n When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.No?displayProperty=fullName>.\"\n  syntax:\n    content: public static readonly System.ComponentModel.RecommendedAsConfigurableAttribute No;\n    return:\n      type: System.ComponentModel.RecommendedAsConfigurableAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  commentId: P:System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  id: RecommendedAsConfigurable\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  langs:\n  - csharp\n  name: RecommendedAsConfigurable\n  nameWithType: RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  fullName: RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the property this attribute is bound to can be used as an application setting.\n  remarks: ''\n  example:\n  - \"The following example checks to see whether `MyProperty` is bindable. First the code gets the attributes for `MyProperty` by:  \\n  \\n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \\n  \\n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \\n  \\n-   Saving the attributes for this property in the attributes variable.  \\n  \\n Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is bindable.  \\n  \\n [!code-cpp[Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurable Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurable Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurable Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurable Example/CS/source.cs#1)]\\n [!code-vb[Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RecommendedAsConfigurableAttribute.RecommendedAsConfigurable Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool RecommendedAsConfigurable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property this attribute is bound to can be used as an application setting; otherwise, `false`.'\n  overload: System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.Yes\n  commentId: F:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: RecommendedAsConfigurableAttribute.Yes\n  fullName: RecommendedAsConfigurableAttribute.Yes\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies that a property can be used as an application setting. This `static` field is read-only.\n  remarks: \"When you mark a property with <xref:System.ComponentModel.RecommendedAsConfigurableAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes>.  \\n  \\n Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes?displayProperty=fullName>.\"\n  syntax:\n    content: public static readonly System.ComponentModel.RecommendedAsConfigurableAttribute Yes;\n    return:\n      type: System.ComponentModel.RecommendedAsConfigurableAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: RecommendedAsConfigurableAttribute(Boolean)\n  nameWithType: RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute(Boolean)\n  fullName: RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.Default\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: Default\n  nameWithType: RecommendedAsConfigurableAttribute.Default\n  fullName: RecommendedAsConfigurableAttribute.Default\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: RecommendedAsConfigurableAttribute\n  nameWithType: RecommendedAsConfigurableAttribute\n  fullName: System.ComponentModel.RecommendedAsConfigurableAttribute\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: RecommendedAsConfigurableAttribute.Equals(Object)\n  fullName: RecommendedAsConfigurableAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: RecommendedAsConfigurableAttribute.GetHashCode()\n  fullName: RecommendedAsConfigurableAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: RecommendedAsConfigurableAttribute.IsDefaultAttribute()\n  fullName: RecommendedAsConfigurableAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.No\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: No\n  nameWithType: RecommendedAsConfigurableAttribute.No\n  fullName: RecommendedAsConfigurableAttribute.No\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: RecommendedAsConfigurable\n  nameWithType: RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  fullName: RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.Yes\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: RecommendedAsConfigurableAttribute.Yes\n  fullName: RecommendedAsConfigurableAttribute.Yes\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor*\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: RecommendedAsConfigurableAttribute\n  nameWithType: RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute\n  fullName: RecommendedAsConfigurableAttribute.RecommendedAsConfigurableAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.Equals*\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: RecommendedAsConfigurableAttribute.Equals\n  fullName: RecommendedAsConfigurableAttribute.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode*\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: RecommendedAsConfigurableAttribute.GetHashCode\n  fullName: RecommendedAsConfigurableAttribute.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: RecommendedAsConfigurableAttribute.IsDefaultAttribute\n  fullName: RecommendedAsConfigurableAttribute.IsDefaultAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n- uid: System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable*\n  parent: System.ComponentModel.RecommendedAsConfigurableAttribute\n  isExternal: false\n  name: RecommendedAsConfigurable\n  nameWithType: RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  fullName: RecommendedAsConfigurableAttribute.RecommendedAsConfigurable\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RecommendedAsConfigurableAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}