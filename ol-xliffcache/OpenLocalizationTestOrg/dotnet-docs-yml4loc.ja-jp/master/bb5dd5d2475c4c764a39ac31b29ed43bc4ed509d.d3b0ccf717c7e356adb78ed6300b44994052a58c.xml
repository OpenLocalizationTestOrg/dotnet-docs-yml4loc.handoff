{"nodes":[{"content":"An abstract class that can be implemented to encode the security state.","nodes":[{"pos":[0,71],"content":"An abstract class that can be implemented to encode the security state.","nodes":[{"content":"An abstract class that can be implemented to encode the security state.","pos":[0,71]}]}],"pos":[688,760],"yaml":true},{"content":"This class is used to encode and decode the content of the security context token when a binding with message security that uses a stateful security context token is used. [!INCLUDE[crabout](~/includes/crabout-md.md)] stateful security context tokens, see [How to: Create a Security Context Token for a Secure Session](~/docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md) topic.  \n  \n Microsoft’s version of <xref:System.ServiceModel.Security.SecurityStateEncoder> is <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>. It uses Microsoft’s [Windows Data Protection (DPAPI)](http://go.microsoft.com/fwlink/?LinkId=96704) technology to encrypt/decrypt the cookie. You can plug in a different mechanism for encrypting and decrypting cookies by implementing this class.  \n  \n The encoding of the security state must ensure that the state is signed and encrypted for the service.  \n  \n This class is used by the server when sending the security state as a cookie in the `SecurityContextToken` issued to the client.  \n  \n An example implementation of this class is an `X509CertificateSecurityStateEncoder` that uses the service's certificate to sign and encrypt the security state.","nodes":[{"pos":[0,426],"content":"This class is used to encode and decode the content of the security context token when a binding with message security that uses a stateful security context token is used. [!INCLUDE[crabout](~/includes/crabout-md.md)] stateful security context tokens, see [How to: Create a Security Context Token for a Secure Session](~/docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md) topic.","nodes":[{"content":"This class is used to encode and decode the content of the security context token when a binding with message security that uses a stateful security context token is used.","pos":[0,171]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> stateful security context tokens, see <bpt id=\"p1\">[</bpt>How to: Create a Security Context Token for a Secure Session<ept id=\"p1\">](~/docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md)</ept> topic.","pos":[172,426],"source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] stateful security context tokens, see [How to: Create a Security Context Token for a Secure Session](~/docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md) topic."}]},{"pos":[433,833],"content":"Microsoft’s version of <xref:System.ServiceModel.Security.SecurityStateEncoder> is <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>. It uses Microsoft’s [Windows Data Protection (DPAPI)](http://go.microsoft.com/fwlink/?LinkId=96704) technology to encrypt/decrypt the cookie. You can plug in a different mechanism for encrypting and decrypting cookies by implementing this class.","nodes":[{"content":"Microsoft’s version of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph>.","pos":[0,154],"source":"Microsoft’s version of <xref:System.ServiceModel.Security.SecurityStateEncoder> is <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>."},{"content":"It uses Microsoft’s <bpt id=\"p1\">[</bpt>Windows Data Protection (DPAPI)<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=96704)</ept> technology to encrypt/decrypt the cookie.","pos":[155,296],"source":" It uses Microsoft’s [Windows Data Protection (DPAPI)](http://go.microsoft.com/fwlink/?LinkId=96704) technology to encrypt/decrypt the cookie."},{"content":"You can plug in a different mechanism for encrypting and decrypting cookies by implementing this class.","pos":[297,400]}]},{"pos":[840,942],"content":"The encoding of the security state must ensure that the state is signed and encrypted for the service.","nodes":[{"content":"The encoding of the security state must ensure that the state is signed and encrypted for the service.","pos":[0,102]}]},{"pos":[949,1077],"content":"This class is used by the server when sending the security state as a cookie in the <ph id=\"ph1\">`SecurityContextToken`</ph> issued to the client.","source":"This class is used by the server when sending the security state as a cookie in the `SecurityContextToken` issued to the client."},{"pos":[1084,1243],"content":"An example implementation of this class is an <ph id=\"ph1\">`X509CertificateSecurityStateEncoder`</ph> that uses the service's certificate to sign and encrypt the security state.","source":"An example implementation of this class is an `X509CertificateSecurityStateEncoder` that uses the service's certificate to sign and encrypt the security state."}],"pos":[771,2025],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.SecurityStateEncoder\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.SecurityStateEncoder\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.SecurityStateEncoder\"></xref> class."}],"pos":[3590,3702],"yaml":true},{"content":"Decodes the security state.","nodes":[{"pos":[0,27],"content":"Decodes the security state.","nodes":[{"content":"Decodes the security state.","pos":[0,27]}]}],"pos":[5029,5057],"yaml":true},{"content":"Security data.","nodes":[{"pos":[0,14],"content":"Security data.","nodes":[{"content":"Security data.","pos":[0,14]}]}],"pos":[5217,5232],"yaml":true},{"content":"A byte array that represents the security state.","nodes":[{"pos":[0,48],"content":"A byte array that represents the security state.","nodes":[{"content":"A byte array that represents the security state.","pos":[0,48]}]}],"pos":[5289,5338],"yaml":true},{"content":"Encodes the security state.","nodes":[{"pos":[0,27],"content":"Encodes the security state.","nodes":[{"content":"Encodes the security state.","pos":[0,27]}]}],"pos":[6602,6630],"yaml":true},{"content":"The security state data.","nodes":[{"pos":[0,24],"content":"The security state data.","nodes":[{"content":"The security state data.","pos":[0,24]}]}],"pos":[6790,6815],"yaml":true},{"content":"A byte array that results from encoding the security state.","nodes":[{"pos":[0,59],"content":"A byte array that results from encoding the security state.","nodes":[{"content":"A byte array that results from encoding the security state.","pos":[0,59]}]}],"pos":[6872,6932],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.SecurityStateEncoder\n  commentId: T:System.ServiceModel.Security.SecurityStateEncoder\n  id: SecurityStateEncoder\n  children:\n  - System.ServiceModel.Security.SecurityStateEncoder.#ctor\n  - System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])\n  - System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])\n  langs:\n  - csharp\n  name: SecurityStateEncoder\n  nameWithType: SecurityStateEncoder\n  fullName: System.ServiceModel.Security.SecurityStateEncoder\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: An abstract class that can be implemented to encode the security state.\n  remarks: \"This class is used to encode and decode the content of the security context token when a binding with message security that uses a stateful security context token is used. [!INCLUDE[crabout](~/includes/crabout-md.md)] stateful security context tokens, see [How to: Create a Security Context Token for a Secure Session](~/docs/framework/wcf/feature-details/how-to-create-a-security-context-token-for-a-secure-session.md) topic.  \\n  \\n Microsoft’s version of <xref:System.ServiceModel.Security.SecurityStateEncoder> is <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>. It uses Microsoft’s [Windows Data Protection (DPAPI)](http://go.microsoft.com/fwlink/?LinkId=96704) technology to encrypt/decrypt the cookie. You can plug in a different mechanism for encrypting and decrypting cookies by implementing this class.  \\n  \\n The encoding of the security state must ensure that the state is signed and encrypted for the service.  \\n  \\n This class is used by the server when sending the security state as a cookie in the `SecurityContextToken` issued to the client.  \\n  \\n An example implementation of this class is an `X509CertificateSecurityStateEncoder` that uses the service's certificate to sign and encrypt the security state.\"\n  syntax:\n    content: public abstract class SecurityStateEncoder\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.Security.DataProtectionSecurityStateEncoder\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityStateEncoder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityStateEncoder.#ctor\n  commentId: M:System.ServiceModel.Security.SecurityStateEncoder.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  langs:\n  - csharp\n  name: SecurityStateEncoder()\n  nameWithType: SecurityStateEncoder.SecurityStateEncoder()\n  fullName: SecurityStateEncoder.SecurityStateEncoder()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.SecurityStateEncoder\"></xref> class.\n  syntax:\n    content: protected SecurityStateEncoder ();\n    parameters: []\n  overload: System.ServiceModel.Security.SecurityStateEncoder.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityStateEncoder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])\n  commentId: M:System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])\n  id: DecodeSecurityState(System.Byte[])\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  langs:\n  - csharp\n  name: DecodeSecurityState(Byte[])\n  nameWithType: SecurityStateEncoder.DecodeSecurityState(Byte[])\n  fullName: SecurityStateEncoder.DecodeSecurityState(Byte[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Decodes the security state.\n  syntax:\n    content: protected abstract byte[] DecodeSecurityState (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Security data.\n    return:\n      type: System.Byte[]\n      description: A byte array that represents the security state.\n  overload: System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityStateEncoder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])\n  commentId: M:System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])\n  id: EncodeSecurityState(System.Byte[])\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  langs:\n  - csharp\n  name: EncodeSecurityState(Byte[])\n  nameWithType: SecurityStateEncoder.EncodeSecurityState(Byte[])\n  fullName: SecurityStateEncoder.EncodeSecurityState(Byte[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Encodes the security state.\n  syntax:\n    content: protected abstract byte[] EncodeSecurityState (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The security state data.\n    return:\n      type: System.Byte[]\n      description: A byte array that results from encoding the security state.\n  overload: System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityStateEncoder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Security.SecurityStateEncoder.#ctor\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  isExternal: false\n  name: SecurityStateEncoder()\n  nameWithType: SecurityStateEncoder.SecurityStateEncoder()\n  fullName: SecurityStateEncoder.SecurityStateEncoder()\n- uid: System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  isExternal: false\n  name: DecodeSecurityState(Byte[])\n  nameWithType: SecurityStateEncoder.DecodeSecurityState(Byte[])\n  fullName: SecurityStateEncoder.DecodeSecurityState(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  isExternal: false\n  name: EncodeSecurityState(Byte[])\n  nameWithType: SecurityStateEncoder.EncodeSecurityState(Byte[])\n  fullName: SecurityStateEncoder.EncodeSecurityState(Byte[])\n- uid: System.ServiceModel.Security.SecurityStateEncoder.#ctor*\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  isExternal: false\n  name: SecurityStateEncoder\n  nameWithType: SecurityStateEncoder.SecurityStateEncoder\n  fullName: SecurityStateEncoder.SecurityStateEncoder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityStateEncoder.xml\n- uid: System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState*\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  isExternal: false\n  name: DecodeSecurityState\n  nameWithType: SecurityStateEncoder.DecodeSecurityState\n  fullName: SecurityStateEncoder.DecodeSecurityState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityStateEncoder.xml\n- uid: System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState*\n  parent: System.ServiceModel.Security.SecurityStateEncoder\n  isExternal: false\n  name: EncodeSecurityState\n  nameWithType: SecurityStateEncoder.EncodeSecurityState\n  fullName: SecurityStateEncoder.EncodeSecurityState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/SecurityStateEncoder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}