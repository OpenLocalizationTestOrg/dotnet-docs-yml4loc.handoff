{"nodes":[{"content":"Provides an interface to modify the set of member descriptors for a component in design mode.","nodes":[{"pos":[0,93],"content":"Provides an interface to modify the set of member descriptors for a component in design mode.","nodes":[{"content":"Provides an interface to modify the set of member descriptors for a component in design mode.","pos":[0,93]}]}],"pos":[973,1067],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time. This modification occurs through the set of descriptors that a component provides through a <xref:System.ComponentModel.TypeDescriptor>. The type descriptor will query a component's site for the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service and, if it exists, the type descriptor will pass all metadata it has collected to this service. The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.  \n  \n For example, the properties of a component can be modified through a call to the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> method. The filter service obtains a dictionary that contains property names and their property descriptors of type <xref:System.ComponentModel.PropertyDescriptor>. The modifications are implemented using the following logic.  \n  \n|Modification|Implementation|  \n|------------------|--------------------|  \n|Removal|Delete the corresponding entry in the dictionary.|  \n|Addition|Add the appropriate entry to the dictionary.|  \n|Alteration|Call existing property descriptor methods, replace the associated property descriptor entry, or replace the entire property key/value pair in the dictionary.|  \n  \n The return value of <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> determines if this set of properties is fixed. If this method returns `true`, the <xref:System.ComponentModel.TypeDescriptor> for this component can cache the results. This cache is maintained until either the component is garbage collected or the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method of the type descriptor is called.","nodes":[{"pos":[0,692],"content":"The <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time. This modification occurs through the set of descriptors that a component provides through a <xref:System.ComponentModel.TypeDescriptor>. The type descriptor will query a component's site for the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service and, if it exists, the type descriptor will pass all metadata it has collected to this service. The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.","nodes":[{"content":"The <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time. This modification occurs through the set of descriptors that a component provides through a <xref:System.ComponentModel.TypeDescriptor>. The type descriptor will query a component's site for the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service and, if it exists, the type descriptor will pass all metadata it has collected to this service. The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.","pos":[0,692],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time.","pos":[0,210],"source":"The <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time."},{"content":"This modification occurs through the set of descriptors that a component provides through a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[211,347],"source":" This modification occurs through the set of descriptors that a component provides through a <xref:System.ComponentModel.TypeDescriptor>."},{"content":"The type descriptor will query a component's site for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;</ph> service and, if it exists, the type descriptor will pass all metadata it has collected to this service.","pos":[348,574],"source":" The type descriptor will query a component's site for the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service and, if it exists, the type descriptor will pass all metadata it has collected to this service."},{"content":"The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.","pos":[575,692]}]}]},{"pos":[699,1090],"content":"For example, the properties of a component can be modified through a call to the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> method. The filter service obtains a dictionary that contains property names and their property descriptors of type <xref:System.ComponentModel.PropertyDescriptor>. The modifications are implemented using the following logic.","nodes":[{"content":"For example, the properties of a component can be modified through a call to the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> method. The filter service obtains a dictionary that contains property names and their property descriptors of type <xref:System.ComponentModel.PropertyDescriptor>. The modifications are implemented using the following logic.","pos":[0,391],"nodes":[{"content":"For example, the properties of a component can be modified through a call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A&gt;</ph> method.","pos":[0,173],"source":"For example, the properties of a component can be modified through a call to the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> method."},{"content":"The filter service obtains a dictionary that contains property names and their property descriptors of type <ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.","pos":[174,330],"source":" The filter service obtains a dictionary that contains property names and their property descriptors of type <xref:System.ComponentModel.PropertyDescriptor>."},{"content":"The modifications are implemented using the following logic.","pos":[331,391]}]}]},{"pos":[1097,1109],"content":"Modification","nodes":[{"content":"Modification","pos":[0,12]}]},{"pos":[1110,1124],"content":"Implementation","nodes":[{"content":"Implementation","pos":[0,14]}]},{"pos":[1173,1180],"content":"Removal","nodes":[{"content":"Removal","pos":[0,7]}]},{"pos":[1181,1230],"content":"Delete the corresponding entry in the dictionary.","nodes":[{"content":"Delete the corresponding entry in the dictionary.","pos":[0,49]}]},{"pos":[1235,1243],"content":"Addition","nodes":[{"content":"Addition","pos":[0,8]}]},{"pos":[1244,1288],"content":"Add the appropriate entry to the dictionary.","nodes":[{"content":"Add the appropriate entry to the dictionary.","pos":[0,44]}]},{"pos":[1293,1303],"content":"Alteration","nodes":[{"content":"Alteration","pos":[0,10]}]},{"pos":[1304,1461],"content":"Call existing property descriptor methods, replace the associated property descriptor entry, or replace the entire property key/value pair in the dictionary.","nodes":[{"content":"Call existing property descriptor methods, replace the associated property descriptor entry, or replace the entire property key/value pair in the dictionary.","pos":[0,157]}]},{"pos":[1469,1917],"content":"The return value of <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> determines if this set of properties is fixed. If this method returns `true`, the <xref:System.ComponentModel.TypeDescriptor> for this component can cache the results. This cache is maintained until either the component is garbage collected or the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method of the type descriptor is called.","nodes":[{"content":"The return value of <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A&gt;</ph> determines if this set of properties is fixed.","pos":[0,151],"source":"The return value of <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> determines if this set of properties is fixed."},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> for this component can cache the results.","pos":[152,272],"source":" If this method returns `true`, the <xref:System.ComponentModel.TypeDescriptor> for this component can cache the results."},{"content":"This cache is maintained until either the component is garbage collected or the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</ph> method of the type descriptor is called.","pos":[273,448],"source":" This cache is maintained until either the component is garbage collected or the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method of the type descriptor is called."}]}],"pos":[1078,3008],"yaml":true,"extradata":"MT"},{"content":"Filters the attributes that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,116],"content":"Filters the attributes that a component exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"Filters the attributes that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[7092,7209],"yaml":true},{"content":"This method is called when a user requests a set of attributes for a component. The attributes are added to the dictionary with the attribute's <xref:System.Attribute.TypeId%2A> as the keys and the actual attribute as the value. Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.","nodes":[{"pos":[0,329],"content":"This method is called when a user requests a set of attributes for a component. The attributes are added to the dictionary with the attribute's <xref:System.Attribute.TypeId%2A> as the keys and the actual attribute as the value. Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.","nodes":[{"content":"This method is called when a user requests a set of attributes for a component. The attributes are added to the dictionary with the attribute's <xref:System.Attribute.TypeId%2A> as the keys and the actual attribute as the value. Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.","pos":[0,329],"nodes":[{"content":"This method is called when a user requests a set of attributes for a component.","pos":[0,79]},{"content":"The attributes are added to the dictionary with the attribute's <ph id=\"ph1\">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> as the keys and the actual attribute as the value.","pos":[80,228],"source":" The attributes are added to the dictionary with the attribute's <xref:System.Attribute.TypeId%2A> as the keys and the actual attribute as the value."},{"content":"Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.","pos":[229,329]}]}]}],"pos":[7220,7550],"yaml":true,"extradata":"MT"},{"content":"The component to filter the attributes of.","nodes":[{"pos":[0,42],"content":"The component to filter the attributes of.","nodes":[{"content":"The component to filter the attributes of.","pos":[0,42]}]}],"pos":[7791,7834],"yaml":true},{"content":"A dictionary of attributes that can be modified.","nodes":[{"pos":[0,48],"content":"A dictionary of attributes that can be modified.","nodes":[{"content":"A dictionary of attributes that can be modified.","pos":[0,48]}]}],"pos":[7917,7966],"yaml":true},{"content":"`true` if the set of filtered attributes is to be cached; `false` if the filter service must query again.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the set of filtered attributes is to be cached; <ph id=\"ph2\">`false`</ph> if the filter service must query again.","source":"`true` if the set of filtered attributes is to be cached; `false` if the filter service must query again."}],"pos":[8024,8132],"yaml":true},{"content":"Filters the events that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,112],"content":"Filters the events that a component exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"Filters the events that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[9813,9926],"yaml":true},{"content":"This method is called when a user requests a set of events for a component. The events are added to the dictionary with the event names as the keys and the corresponding <xref:System.ComponentModel.EventDescriptor> objects as the values. Implementers of this service can add, remove, or alter event entries in the dictionary.","nodes":[{"pos":[0,325],"content":"This method is called when a user requests a set of events for a component. The events are added to the dictionary with the event names as the keys and the corresponding <xref:System.ComponentModel.EventDescriptor> objects as the values. Implementers of this service can add, remove, or alter event entries in the dictionary.","nodes":[{"content":"This method is called when a user requests a set of events for a component. The events are added to the dictionary with the event names as the keys and the corresponding <xref:System.ComponentModel.EventDescriptor> objects as the values. Implementers of this service can add, remove, or alter event entries in the dictionary.","pos":[0,325],"nodes":[{"content":"This method is called when a user requests a set of events for a component.","pos":[0,75]},{"content":"The events are added to the dictionary with the event names as the keys and the corresponding <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> objects as the values.","pos":[76,237],"source":" The events are added to the dictionary with the event names as the keys and the corresponding <xref:System.ComponentModel.EventDescriptor> objects as the values."},{"content":"Implementers of this service can add, remove, or alter event entries in the dictionary.","pos":[238,325]}]}]}],"pos":[9937,10263],"yaml":true,"extradata":"MT"},{"content":"The component to filter events for.","nodes":[{"pos":[0,35],"content":"The component to filter events for.","nodes":[{"content":"The component to filter events for.","pos":[0,35]}]}],"pos":[10496,10532],"yaml":true},{"content":"A dictionary of events that can be modified.","nodes":[{"pos":[0,44],"content":"A dictionary of events that can be modified.","nodes":[{"content":"A dictionary of events that can be modified.","pos":[0,44]}]}],"pos":[10611,10656],"yaml":true},{"content":"`true` if the set of filtered events is to be cached; `false` if the filter service must query again.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if the set of filtered events is to be cached; <ph id=\"ph2\">`false`</ph> if the filter service must query again.","source":"`true` if the set of filtered events is to be cached; `false` if the filter service must query again."}],"pos":[10714,10818],"yaml":true},{"content":"Filters the properties that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,116],"content":"Filters the properties that a component exposes through a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"Filters the properties that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[12519,12636],"yaml":true},{"content":"This method is called when a user requests a set of properties for a component. The properties are added to the dictionary with the property names as the keys and the corresponding <xref:System.ComponentModel.PropertyDescriptor> objects as the values. Implementers of this service can add, remove, or alter property entries in the dictionary.","nodes":[{"pos":[0,342],"content":"This method is called when a user requests a set of properties for a component. The properties are added to the dictionary with the property names as the keys and the corresponding <xref:System.ComponentModel.PropertyDescriptor> objects as the values. Implementers of this service can add, remove, or alter property entries in the dictionary.","nodes":[{"content":"This method is called when a user requests a set of properties for a component. The properties are added to the dictionary with the property names as the keys and the corresponding <xref:System.ComponentModel.PropertyDescriptor> objects as the values. Implementers of this service can add, remove, or alter property entries in the dictionary.","pos":[0,342],"nodes":[{"content":"This method is called when a user requests a set of properties for a component.","pos":[0,79]},{"content":"The properties are added to the dictionary with the property names as the keys and the corresponding <ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> objects as the values.","pos":[80,251],"source":" The properties are added to the dictionary with the property names as the keys and the corresponding <xref:System.ComponentModel.PropertyDescriptor> objects as the values."},{"content":"Implementers of this service can add, remove, or alter property entries in the dictionary.","pos":[252,342]}]}]}],"pos":[12647,12990],"yaml":true,"extradata":"MT"},{"content":"The component to filter properties for.","nodes":[{"pos":[0,39],"content":"The component to filter properties for.","nodes":[{"content":"The component to filter properties for.","pos":[0,39]}]}],"pos":[13231,13271],"yaml":true},{"content":"A dictionary of properties that can be modified.","nodes":[{"pos":[0,48],"content":"A dictionary of properties that can be modified.","nodes":[{"content":"A dictionary of properties that can be modified.","pos":[0,48]}]}],"pos":[13354,13403],"yaml":true},{"content":"`true` if the set of filtered properties is to be cached; `false` if the filter service must query again.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the set of filtered properties is to be cached; <ph id=\"ph2\">`false`</ph> if the filter service must query again.","source":"`true` if the set of filtered properties is to be cached; `false` if the filter service must query again."}],"pos":[13461,13569],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService\n  commentId: T:System.ComponentModel.Design.ITypeDescriptorFilterService\n  id: ITypeDescriptorFilterService\n  children:\n  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  langs:\n  - csharp\n  name: ITypeDescriptorFilterService\n  nameWithType: ITypeDescriptorFilterService\n  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService\n  type: Interface\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Provides an interface to modify the set of member descriptors for a component in design mode.\n  remarks: \"The <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time. This modification occurs through the set of descriptors that a component provides through a <xref:System.ComponentModel.TypeDescriptor>. The type descriptor will query a component's site for the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service and, if it exists, the type descriptor will pass all metadata it has collected to this service. The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.  \\n  \\n For example, the properties of a component can be modified through a call to the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> method. The filter service obtains a dictionary that contains property names and their property descriptors of type <xref:System.ComponentModel.PropertyDescriptor>. The modifications are implemented using the following logic.  \\n  \\n|Modification|Implementation|  \\n|------------------|--------------------|  \\n|Removal|Delete the corresponding entry in the dictionary.|  \\n|Addition|Add the appropriate entry to the dictionary.|  \\n|Alteration|Call existing property descriptor methods, replace the associated property descriptor entry, or replace the entire property key/value pair in the dictionary.|  \\n  \\n The return value of <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> determines if this set of properties is fixed. If this method returns `true`, the <xref:System.ComponentModel.TypeDescriptor> for this component can cache the results. This cache is maintained until either the component is garbage collected or the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method of the type descriptor is called.\"\n  example:\n  - \"The following code example demonstrates a designer that uses the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> to filter the attributes collection of any new or existing <xref:System.Windows.Forms.Button> to add a designer attribute for a new designer before loading or reloading the designer for the button.  \\n  \\n To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.  \\n  \\n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\\\(v=vs.110\\\\).aspx).  \\n  \\n Add some buttons to your form. Add a `ButtonDesignerFilterComponent` to your form, and it will appear in the component tray. The `ButtonDesignerFilterComponent` will add a `ButtonDesignerFilterService`, which implements <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, as a design mode service provider. Existing or new <xref:System.Windows.Forms.Button> objects on the form will begin color cycling after the `ButtonDesignerFilterService` replaces the designer for each existing and new button with a `ColorCycleButtonDesigner`. The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on `MouseLeave` events. New <xref:System.Windows.Forms.Button> objects will be given the `ColorCycleButtonDesigner` through the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> method of the `ButtonDesignerFilterService` that has been loaded, until the `ButtonDesignerFilterComponent` is disposed and replaces the original <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>. The `ColorCycleButton` class in this example is a <xref:System.Windows.Forms.Button> associated with a `ColorCycleButtonDesigner`.  \\n  \\n [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]\\n [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]\\n [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]\"\n  syntax:\n    content: public interface ITypeDescriptorFilterService\n  derivedClasses:\n  - System.Windows.Forms.Design.ComponentDocumentDesigner\n  implements: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  id: FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  langs:\n  - csharp\n  name: FilterAttributes(IComponent, IDictionary)\n  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent, IDictionary)\n  fullName: ITypeDescriptorFilterService.FilterAttributes(IComponent, IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Filters the attributes that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: This method is called when a user requests a set of attributes for a component. The attributes are added to the dictionary with the attribute's <xref:System.Attribute.TypeId%2A> as the keys and the actual attribute as the value. Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.\n  syntax:\n    content: public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component to filter the attributes of.\n    - id: attributes\n      type: System.Collections.IDictionary\n      description: A dictionary of attributes that can be modified.\n    return:\n      type: System.Boolean\n      description: '`true` if the set of filtered attributes is to be cached; `false` if the filter service must query again.'\n  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  id: FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  langs:\n  - csharp\n  name: FilterEvents(IComponent, IDictionary)\n  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent, IDictionary)\n  fullName: ITypeDescriptorFilterService.FilterEvents(IComponent, IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Filters the events that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: This method is called when a user requests a set of events for a component. The events are added to the dictionary with the event names as the keys and the corresponding <xref:System.ComponentModel.EventDescriptor> objects as the values. Implementers of this service can add, remove, or alter event entries in the dictionary.\n  syntax:\n    content: public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component to filter events for.\n    - id: events\n      type: System.Collections.IDictionary\n      description: A dictionary of events that can be modified.\n    return:\n      type: System.Boolean\n      description: '`true` if the set of filtered events is to be cached; `false` if the filter service must query again.'\n  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  id: FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  langs:\n  - csharp\n  name: FilterProperties(IComponent, IDictionary)\n  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent, IDictionary)\n  fullName: ITypeDescriptorFilterService.FilterProperties(IComponent, IDictionary)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Filters the properties that a component exposes through a <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: This method is called when a user requests a set of properties for a component. The properties are added to the dictionary with the property names as the keys and the corresponding <xref:System.ComponentModel.PropertyDescriptor> objects as the values. Implementers of this service can add, remove, or alter property entries in the dictionary.\n  syntax:\n    content: public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component to filter properties for.\n    - id: properties\n      type: System.Collections.IDictionary\n      description: A dictionary of properties that can be modified.\n    return:\n      type: System.Boolean\n      description: '`true` if the set of filtered properties is to be cached; `false` if the filter service must query again.'\n  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  isExternal: false\n  name: FilterAttributes(IComponent, IDictionary)\n  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent, IDictionary)\n  fullName: ITypeDescriptorFilterService.FilterAttributes(IComponent, IDictionary)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  isExternal: false\n  name: FilterEvents(IComponent, IDictionary)\n  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent, IDictionary)\n  fullName: ITypeDescriptorFilterService.FilterEvents(IComponent, IDictionary)\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  isExternal: false\n  name: FilterProperties(IComponent, IDictionary)\n  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent, IDictionary)\n  fullName: ITypeDescriptorFilterService.FilterProperties(IComponent, IDictionary)\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  isExternal: false\n  name: FilterAttributes\n  nameWithType: ITypeDescriptorFilterService.FilterAttributes\n  fullName: ITypeDescriptorFilterService.FilterAttributes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  isExternal: false\n  name: FilterEvents\n  nameWithType: ITypeDescriptorFilterService.FilterEvents\n  fullName: ITypeDescriptorFilterService.FilterEvents\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml\n- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*\n  parent: System.ComponentModel.Design.ITypeDescriptorFilterService\n  isExternal: false\n  name: FilterProperties\n  nameWithType: ITypeDescriptorFilterService.FilterProperties\n  fullName: ITypeDescriptorFilterService.FilterProperties\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml\n"}