{"nodes":[{"content":"Specifies the name of the return value of a method in a Windows Runtime component.","nodes":[{"pos":[0,82],"content":"Specifies the name of the return value of a method in a Windows Runtime component.","nodes":[{"content":"Specifies the name of the return value of a method in a Windows Runtime component.","pos":[0,82]}]}],"pos":[757,840],"yaml":true},{"content":"In a [!INCLUDE[wrt](~/includes/wrt-md.md)] component, all the parameters of a method and the return value must have names. By default, [Winmdexp.exe (Windows Runtime Metadata Export Tool)](~/docs/framework/tools/winmdexp-exe-windows-runtime-metadata-export-tool.md) gives the return value the name \"value\". When you use a component in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app written in JavaScript, you can use this name to retrieve the return value. For example, suppose a component defines a method that has a return value and two `out` parameters (`ByRef` parameters with the <xref:System.Runtime.InteropServices.OutAttribute> attribute in Visual Basic):  \n  \n```csharp  \npublic static int ComputeAverage([ReadOnlyArray()] int[] input,  \n    out int minValue, out int maxValue)  \n{  \n    …  \n}  \n```  \n  \n```vb  \nPublic Shared Function ComputeAverage( _  \n        <ReadOnlyArray()> ByVal input As Integer, _  \n        <Out()> ByRef minValue As Integer, _  \n        <Out()> ByRef maxValue As Integer) As Integer  \n    …  \nEnd Function  \n  \n```  \n  \n When you call the function from JavaScript, you can access the return value by its default name (`value`):  \n  \n```javascript  \nvar data = [5, 13, 23, 37];  \nvar results = SampleComponent.TestStuff.computeAverage(data);  \nvar formattedResults = \"Min=\" + results.minValue + \", Avg=\" +   \n    results.value + \", Max=\" + results.maxValue;  \n  \n```  \n  \n You must give the return value a different name if you already have a parameter named \"value\". Or you might simply want to use a more meaningful name (such as \"average\" in this example). Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute> attribute to your method and specify a new name.  \n  \n```csharp  \n[return: ReturnValueName(\"average\")]  \npublic static int ComputeAverage([ReadOnlyArray()] int[] input,  \n    out int minValue, out int maxValue)  \n{  \n    …  \n}  \n  \n```  \n  \n```vb  \nPublic Shared Function ComputeAverage( _  \n        <ReadOnlyArray()> ByVal input As Integer, _  \n        <Out()> ByRef minValue As Integer, _  \n        <Out()> ByRef maxValue As Integer) _  \n            As <ReturnValueName(\"average\")> Integer  \n    …  \nEnd Function  \n  \n```","nodes":[{"pos":[0,688],"content":"In a [!INCLUDE[wrt](~/includes/wrt-md.md)] component, all the parameters of a method and the return value must have names. By default, [Winmdexp.exe (Windows Runtime Metadata Export Tool)](~/docs/framework/tools/winmdexp-exe-windows-runtime-metadata-export-tool.md) gives the return value the name \"value\". When you use a component in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app written in JavaScript, you can use this name to retrieve the return value. For example, suppose a component defines a method that has a return value and two `out` parameters (`ByRef` parameters with the <xref:System.Runtime.InteropServices.OutAttribute> attribute in Visual Basic):","nodes":[{"content":"In a <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component, all the parameters of a method and the return value must have names.","pos":[0,122],"source":"In a [!INCLUDE[wrt](~/includes/wrt-md.md)] component, all the parameters of a method and the return value must have names."},{"content":"By default, <bpt id=\"p1\">[</bpt>Winmdexp.exe (Windows Runtime Metadata Export Tool)<ept id=\"p1\">](~/docs/framework/tools/winmdexp-exe-windows-runtime-metadata-export-tool.md)</ept> gives the return value the name \"value\".","pos":[123,306],"source":" By default, [Winmdexp.exe (Windows Runtime Metadata Export Tool)](~/docs/framework/tools/winmdexp-exe-windows-runtime-metadata-export-tool.md) gives the return value the name \"value\"."},{"content":"When you use a component in a <ph id=\"ph1\">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> app written in JavaScript, you can use this name to retrieve the return value.","pos":[307,481],"source":" When you use a component in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app written in JavaScript, you can use this name to retrieve the return value."},{"content":"For example, suppose a component defines a method that has a return value and two <ph id=\"ph1\">`out`</ph> parameters (<ph id=\"ph2\">`ByRef`</ph> parameters with the <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> attribute in Visual Basic):","pos":[482,688],"source":" For example, suppose a component defines a method that has a return value and two `out` parameters (`ByRef` parameters with the <xref:System.Runtime.InteropServices.OutAttribute> attribute in Visual Basic):"}]},{"pos":[1083,1189],"content":"When you call the function from JavaScript, you can access the return value by its default name (<ph id=\"ph1\">`value`</ph>):","source":"When you call the function from JavaScript, you can access the return value by its default name (`value`):"},{"pos":[1434,1757],"content":"You must give the return value a different name if you already have a parameter named \"value\". Or you might simply want to use a more meaningful name (such as \"average\" in this example). Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute> attribute to your method and specify a new name.","nodes":[{"content":"You must give the return value a different name if you already have a parameter named \"value\". Or you might simply want to use a more meaningful name (such as \"average\" in this example). Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute> attribute to your method and specify a new name.","pos":[0,323],"nodes":[{"content":"You must give the return value a different name if you already have a parameter named \"value\".","pos":[0,94]},{"content":"Or you might simply want to use a more meaningful name (such as \"average\" in this example).","pos":[95,186]},{"content":"Apply the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute&gt;</ph> attribute to your method and specify a new name.","pos":[187,323],"source":" Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute> attribute to your method and specify a new name."}]}]}],"pos":[851,3153],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\"></xref> class, and specifies the name of the return value.","nodes":[{"pos":[0,176],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\"&gt;&lt;/xref&gt;</ph> class, and specifies the name of the return value.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\"></xref> class, and specifies the name of the return value."}],"pos":[8628,8805],"yaml":true},{"content":"The name of the return value.","nodes":[{"pos":[0,29],"content":"The name of the return value.","nodes":[{"content":"The name of the return value.","pos":[0,29]}]}],"pos":[8951,8981],"yaml":true},{"content":"Gets the name that was specified for the return value of a method in a [!INCLUDE[wrt](~/includes/wrt-md.md)] component.","nodes":[{"pos":[0,119],"content":"Gets the name that was specified for the return value of a method in a <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component.","source":"Gets the name that was specified for the return value of a method in a [!INCLUDE[wrt](~/includes/wrt-md.md)] component."}],"pos":[10430,10550],"yaml":true},{"content":"The name of the method's return value.","nodes":[{"pos":[0,38],"content":"The name of the method's return value.","nodes":[{"content":"The name of the method's return value.","pos":[0,38]}]}],"pos":[10658,10697],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  commentId: T:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  id: ReturnValueNameAttribute\n  children:\n  - System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor(System.String)\n  - System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name\n  langs:\n  - csharp\n  name: ReturnValueNameAttribute\n  nameWithType: ReturnValueNameAttribute\n  fullName: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices.WindowsRuntime\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Specifies the name of the return value of a method in a Windows Runtime component.\n  remarks: \"In a [!INCLUDE[wrt](~/includes/wrt-md.md)] component, all the parameters of a method and the return value must have names. By default, [Winmdexp.exe (Windows Runtime Metadata Export Tool)](~/docs/framework/tools/winmdexp-exe-windows-runtime-metadata-export-tool.md) gives the return value the name \\\"value\\\". When you use a component in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app written in JavaScript, you can use this name to retrieve the return value. For example, suppose a component defines a method that has a return value and two `out` parameters (`ByRef` parameters with the <xref:System.Runtime.InteropServices.OutAttribute> attribute in Visual Basic):  \\n  \\n```csharp  \\npublic static int ComputeAverage([ReadOnlyArray()] int[] input,  \\n    out int minValue, out int maxValue)  \\n{  \\n    …  \\n}  \\n```  \\n  \\n```vb  \\nPublic Shared Function ComputeAverage( _  \\n        <ReadOnlyArray()> ByVal input As Integer, _  \\n        <Out()> ByRef minValue As Integer, _  \\n        <Out()> ByRef maxValue As Integer) As Integer  \\n    …  \\nEnd Function  \\n  \\n```  \\n  \\n When you call the function from JavaScript, you can access the return value by its default name (`value`):  \\n  \\n```javascript  \\nvar data = [5, 13, 23, 37];  \\nvar results = SampleComponent.TestStuff.computeAverage(data);  \\nvar formattedResults = \\\"Min=\\\" + results.minValue + \\\", Avg=\\\" +   \\n    results.value + \\\", Max=\\\" + results.maxValue;  \\n  \\n```  \\n  \\n You must give the return value a different name if you already have a parameter named \\\"value\\\". Or you might simply want to use a more meaningful name (such as \\\"average\\\" in this example). Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute> attribute to your method and specify a new name.  \\n  \\n```csharp  \\n[return: ReturnValueName(\\\"average\\\")]  \\npublic static int ComputeAverage([ReadOnlyArray()] int[] input,  \\n    out int minValue, out int maxValue)  \\n{  \\n    …  \\n}  \\n  \\n```  \\n  \\n```vb  \\nPublic Shared Function ComputeAverage( _  \\n        <ReadOnlyArray()> ByVal input As Integer, _  \\n        <Out()> ByRef minValue As Integer, _  \\n        <Out()> ByRef maxValue As Integer) _  \\n            As <ReturnValueName(\\\"average\\\")> Integer  \\n    …  \\nEnd Function  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Delegate | System.AttributeTargets.ReturnValue, AllowMultiple=false, Inherited=false)]\n\n      public sealed class ReturnValueNameAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/ReturnValueNameAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor(System.String)\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  langs:\n  - csharp\n  name: ReturnValueNameAttribute(String)\n  nameWithType: ReturnValueNameAttribute.ReturnValueNameAttribute(String)\n  fullName: ReturnValueNameAttribute.ReturnValueNameAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices.WindowsRuntime\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\"></xref> class, and specifies the name of the return value.\n  syntax:\n    content: public ReturnValueNameAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the return value.\n  overload: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/ReturnValueNameAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name\n  commentId: P:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name\n  id: Name\n  parent: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ReturnValueNameAttribute.Name\n  fullName: ReturnValueNameAttribute.Name\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices.WindowsRuntime\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Gets the name that was specified for the return value of a method in a [!INCLUDE[wrt](~/includes/wrt-md.md)] component.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the method's return value.\n  overload: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/ReturnValueNameAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor(System.String)\n  parent: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  isExternal: false\n  name: ReturnValueNameAttribute(String)\n  nameWithType: ReturnValueNameAttribute.ReturnValueNameAttribute(String)\n  fullName: ReturnValueNameAttribute.ReturnValueNameAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name\n  parent: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ReturnValueNameAttribute.Name\n  fullName: ReturnValueNameAttribute.Name\n- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor*\n  parent: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  isExternal: false\n  name: ReturnValueNameAttribute\n  nameWithType: ReturnValueNameAttribute.ReturnValueNameAttribute\n  fullName: ReturnValueNameAttribute.ReturnValueNameAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/ReturnValueNameAttribute.xml\n- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name*\n  parent: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ReturnValueNameAttribute.Name\n  fullName: ReturnValueNameAttribute.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/ReturnValueNameAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}