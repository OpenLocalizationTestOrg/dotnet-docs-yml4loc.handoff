{"nodes":[{"content":"A binding terminal that represents the flow of data into and out of an activity.","nodes":[{"pos":[0,80],"content":"A binding terminal that represents the flow of data into and out of an activity.","nodes":[{"content":"A binding terminal that represents the flow of data into and out of an activity.","pos":[0,80]}]}],"pos":[1557,1638],"yaml":true},{"content":"In this example, a custom `Square` activity has an <xref:System.Activities.InOutArgument%601> of type <xref:System.Int32> named `N1`. This argument is used to receive the value to be operated on and is also used to pass the result of the operation back out.  \n  \n```csharp  \nclass Square : CodeActivity  \n{  \n    public Square() : base() { }  \n  \n    public InOutArgument<int> N1  \n    {  \n        get;  \n  \n        set;  \n    }  \n  \n    protected override void Execute(CodeActivityContext context)  \n    {  \n        context.SetValue<int>(N1, N1.Get(context) * N1.Get(context));  \n    }  \n}  \n```  \n  \n In the following example, the `Square` activity is hosted in a workflow. A value is passed into the activity and the result is then displayed to the console window by a <xref:System.Activities.Statements.WriteLine> activity.  \n  \n```csharp  \nVariable<int> n1 = new Variable<int>() { Default = 25 };  \n  \nActivity activity1 = new Sequence()  \n{  \n    Variables =   \n    {  \n        n1  \n    },  \n    Activities =   \n    {  \n        new Square()  \n        {  \n            N1 = new InOutArgument<int>(n1)  \n        },  \n        new WriteLine()  \n        {  \n            Text = new InArgument<string>(ctx => \"Squared result: \" + n1.Get(ctx))  \n        }  \n    }  \n};  \n  \nWorkflowInvoker.Invoke(activity1);  \n```","nodes":[{"pos":[0,257],"content":"In this example, a custom `Square` activity has an <xref:System.Activities.InOutArgument%601> of type <xref:System.Int32> named `N1`. This argument is used to receive the value to be operated on and is also used to pass the result of the operation back out.","nodes":[{"content":"In this example, a custom <ph id=\"ph1\">`Square`</ph> activity has an <ph id=\"ph2\">&lt;xref:System.Activities.InOutArgument%601&gt;</ph> of type <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> named <ph id=\"ph4\">`N1`</ph>.","pos":[0,133],"source":"In this example, a custom `Square` activity has an <xref:System.Activities.InOutArgument%601> of type <xref:System.Int32> named `N1`."},{"content":"This argument is used to receive the value to be operated on and is also used to pass the result of the operation back out.","pos":[134,257]}]},{"pos":[603,827],"content":"In the following example, the `Square` activity is hosted in a workflow. A value is passed into the activity and the result is then displayed to the console window by a <xref:System.Activities.Statements.WriteLine> activity.","nodes":[{"content":"In the following example, the <ph id=\"ph1\">`Square`</ph> activity is hosted in a workflow.","pos":[0,72],"source":"In the following example, the `Square` activity is hosted in a workflow."},{"content":"A value is passed into the activity and the result is then displayed to the console window by a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.WriteLine&gt;</ph> activity.","pos":[73,224],"source":" A value is passed into the activity and the result is then displayed to the console window by a <xref:System.Activities.Statements.WriteLine> activity."}]}],"pos":[1649,3011],"yaml":true,"extradata":"MT"},{"content":"The data type of the <xref href=\"System.Activities.InOutArgument`1\"></xref>.","nodes":[{"pos":[0,76],"content":"The data type of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph>.","source":"The data type of the <xref href=\"System.Activities.InOutArgument`1\"></xref>."}],"pos":[3337,3414],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using default values.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph> class using default values.","source":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using default values."}],"pos":[5550,5667],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Activity`1\"></xref>.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Activity`1\"></xref>."}],"pos":[6981,7147],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[7389,7416],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable\"></xref>.","nodes":[{"pos":[0,163],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Variable\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable\"></xref>."}],"pos":[8528,8692],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[8868,8895],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable`1\"></xref>.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Variable`1\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable`1\"></xref>."}],"pos":[10028,10194],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[10375,10402],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified expression.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph> class using the specified expression.","source":"Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified expression."}],"pos":[11772,11899],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[12188,12215],"yaml":true},{"content":"Gets an <xref href=\"System.Activities.Activity`1\"></xref> that represents the value of this <xref href=\"System.Activities.InOutArgument`1\"></xref>.","nodes":[{"pos":[0,147],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph> that represents the value of this <ph id=\"ph2\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an <xref href=\"System.Activities.Activity`1\"></xref> that represents the value of this <xref href=\"System.Activities.InOutArgument`1\"></xref>."}],"pos":[13205,13353],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[13567,13594],"yaml":true},{"content":"Initializes and returns a new <xref href=\"System.Activities.InOutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Activity`1\"></xref>.","nodes":[{"pos":[0,167],"content":"Initializes and returns a new <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph> constructed using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Activity`1\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes and returns a new <xref href=\"System.Activities.InOutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Activity`1\"></xref>."}],"pos":[14877,15045],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[15330,15357],"yaml":true},{"content":"The new argument.","nodes":[{"pos":[0,17],"content":"The new argument.","nodes":[{"content":"The new argument.","pos":[0,17]}]}],"pos":[15434,15452],"yaml":true},{"content":"Initializes and returns a new <xref href=\"System.Activities.InOutArgument`1\"></xref> constructed by using the specified <xref href=\"System.Activities.Variable`1\"></xref>.","nodes":[{"pos":[0,170],"content":"Initializes and returns a new <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph> constructed by using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.Variable`1\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes and returns a new <xref href=\"System.Activities.InOutArgument`1\"></xref> constructed by using the specified <xref href=\"System.Activities.Variable`1\"></xref>."}],"pos":[16596,16767],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[16989,17016],"yaml":true},{"content":"The new argument.","nodes":[{"pos":[0,17],"content":"The new argument.","nodes":[{"content":"The new argument.","pos":[0,17]}]}],"pos":[17093,17111],"yaml":true},{"content":"Gets the value of the <xref href=\"System.Activities.InOutArgument`1\"></xref> using the specified <xref href=\"System.Activities.ActivityContext\"></xref>.","nodes":[{"pos":[0,152],"content":"Gets the value of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph> using the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.ActivityContext\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the <xref href=\"System.Activities.InOutArgument`1\"></xref> using the specified <xref href=\"System.Activities.ActivityContext\"></xref>."}],"pos":[18220,18373],"yaml":true},{"content":"The activity context that contains the value of the argument.","nodes":[{"pos":[0,61],"content":"The activity context that contains the value of the argument.","nodes":[{"content":"The activity context that contains the value of the argument.","pos":[0,61]}]}],"pos":[18553,18615],"yaml":true},{"content":"The value of the argument.","nodes":[{"pos":[0,26],"content":"The value of the argument.","nodes":[{"content":"The value of the argument.","pos":[0,26]}]}],"pos":[18660,18687],"yaml":true},{"content":"Gets the location of the value for the <xref href=\"System.Activities.InOutArgument`1\"></xref>.","nodes":[{"pos":[0,94],"content":"Gets the location of the value for the <ph id=\"ph1\">&lt;xref href=\"System.Activities.InOutArgument`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the location of the value for the <xref href=\"System.Activities.InOutArgument`1\"></xref>."}],"pos":[19835,19930],"yaml":true},{"content":"The activity context that contains the location of the argument value.","nodes":[{"pos":[0,70],"content":"The activity context that contains the location of the argument value.","nodes":[{"content":"The activity context that contains the location of the argument value.","pos":[0,70]}]}],"pos":[20146,20217],"yaml":true},{"content":"A reference to the location where the value of the argument is stored.","nodes":[{"pos":[0,70],"content":"A reference to the location where the value of the argument is stored.","nodes":[{"content":"A reference to the location where the value of the argument is stored.","pos":[0,70]}]}],"pos":[20289,20360],"yaml":true},{"content":"Sets the value of the argument using the specified value.","nodes":[{"pos":[0,57],"content":"Sets the value of the argument using the specified value.","nodes":[{"content":"Sets the value of the argument using the specified value.","pos":[0,57]}]}],"pos":[24677,24735],"yaml":true},{"content":"The current activity context.","nodes":[{"pos":[0,29],"content":"The current activity context.","nodes":[{"content":"The current activity context.","pos":[0,29]}]}],"pos":[24927,24957],"yaml":true},{"content":"The new value.","nodes":[{"pos":[0,14],"content":"The new value.","nodes":[{"content":"The new value.","pos":[0,14]}]}],"pos":[25006,25021],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.InOutArgument`1\n  commentId: T:System.Activities.InOutArgument`1\n  id: InOutArgument`1\n  children:\n  - System.Activities.InOutArgument`1.#ctor\n  - System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})\n  - System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)\n  - System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})\n  - System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  - System.Activities.InOutArgument`1.Expression\n  - System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  - System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)\n  - System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)\n  - System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.InOutArgument{T})\n  - System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{T} to System.Activities.InOutArgument{T})\n  - System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)\n  langs:\n  - csharp\n  name: InOutArgument<T>\n  nameWithType: InOutArgument<T>\n  fullName: System.Activities.InOutArgument<T>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: A binding terminal that represents the flow of data into and out of an activity.\n  remarks: \"In this example, a custom `Square` activity has an <xref:System.Activities.InOutArgument%601> of type <xref:System.Int32> named `N1`. This argument is used to receive the value to be operated on and is also used to pass the result of the operation back out.  \\n  \\n```csharp  \\nclass Square : CodeActivity  \\n{  \\n    public Square() : base() { }  \\n  \\n    public InOutArgument<int> N1  \\n    {  \\n        get;  \\n  \\n        set;  \\n    }  \\n  \\n    protected override void Execute(CodeActivityContext context)  \\n    {  \\n        context.SetValue<int>(N1, N1.Get(context) * N1.Get(context));  \\n    }  \\n}  \\n```  \\n  \\n In the following example, the `Square` activity is hosted in a workflow. A value is passed into the activity and the result is then displayed to the console window by a <xref:System.Activities.Statements.WriteLine> activity.  \\n  \\n```csharp  \\nVariable<int> n1 = new Variable<int>() { Default = 25 };  \\n  \\nActivity activity1 = new Sequence()  \\n{  \\n    Variables =   \\n    {  \\n        n1  \\n    },  \\n    Activities =   \\n    {  \\n        new Square()  \\n        {  \\n            N1 = new InOutArgument<int>(n1)  \\n        },  \\n        new WriteLine()  \\n        {  \\n            Text = new InArgument<string>(ctx => \\\"Squared result: \\\" + n1.Get(ctx))  \\n        }  \\n    }  \\n};  \\n  \\nWorkflowInvoker.Invoke(activity1);  \\n```\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.InOutArgumentConverter))]\n\n      [System.Windows.Markup.ContentProperty(\"Expression\")]\n\n      public sealed class InOutArgument<T> : System.Activities.InOutArgument\n    typeParameters:\n    - id: T\n      description: The data type of the <xref href=\"System.Activities.InOutArgument`1\"></xref>.\n  inheritance:\n  - System.Object\n  - System.Activities.Argument\n  - System.Activities.InOutArgument\n  implements: []\n  inheritedMembers:\n  - System.Activities.Argument.ArgumentType\n  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)\n  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)\n  - System.Activities.Argument.Direction\n  - System.Activities.Argument.EvaluationOrder\n  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)\n  - System.Activities.Argument.ResultValue\n  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)\n  - System.Activities.Argument.UnspecifiedEvaluationOrder\n  - System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.#ctor\n  commentId: M:System.Activities.InOutArgument`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: InOutArgument<T>()\n  nameWithType: InOutArgument<T>.InOutArgument<T>()\n  fullName: InOutArgument<T>.InOutArgument<T>()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using default values.\n  syntax:\n    content: public InOutArgument ();\n    parameters: []\n  overload: System.Activities.InOutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})\n  commentId: M:System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})\n  id: '#ctor(System.Activities.Activity{System.Activities.Location{`0}})'\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: InOutArgument<T>(Activity<Location<T>>)\n  nameWithType: InOutArgument<T>.InOutArgument<T>(Activity<Location<T>>)\n  fullName: InOutArgument<T>.InOutArgument<T>(Activity<Location<T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Activity`1\"></xref>.\n  syntax:\n    content: public InOutArgument (System.Activities.Activity<System.Activities.Location<T>> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{System.Activities.Location{T}}\n      description: The value of the argument.\n  overload: System.Activities.InOutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)\n  commentId: M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)\n  id: '#ctor(System.Activities.Variable)'\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: InOutArgument<T>(Variable)\n  nameWithType: InOutArgument<T>.InOutArgument<T>(Variable)\n  fullName: InOutArgument<T>.InOutArgument<T>(Variable)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable\"></xref>.\n  syntax:\n    content: public InOutArgument (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: The value of the argument.\n  overload: System.Activities.InOutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})\n  commentId: M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})\n  id: '#ctor(System.Activities.Variable{`0})'\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: InOutArgument<T>(Variable<T>)\n  nameWithType: InOutArgument<T>.InOutArgument<T>(Variable<T>)\n  fullName: InOutArgument<T>.InOutArgument<T>(Variable<T>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified <xref href=\"System.Activities.Variable`1\"></xref>.\n  syntax:\n    content: public InOutArgument (System.Activities.Variable<T> variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable`1\n      description: The value of the argument.\n  overload: System.Activities.InOutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  commentId: M:System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: InOutArgument<T>(Expression<Func<ActivityContext,T>>)\n  nameWithType: InOutArgument<T>.InOutArgument<T>(Expression<Func<ActivityContext,T>>)\n  fullName: InOutArgument<T>.InOutArgument<T>(Expression<Func<ActivityContext,T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.InOutArgument`1\"></xref> class using the specified expression.\n  syntax:\n    content: public InOutArgument (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n      description: The value of the argument.\n  overload: System.Activities.InOutArgument`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.Expression\n  commentId: P:System.Activities.InOutArgument`1.Expression\n  id: Expression\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: InOutArgument<T>.Expression\n  fullName: InOutArgument<T>.Expression\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets an <xref href=\"System.Activities.Activity`1\"></xref> that represents the value of this <xref href=\"System.Activities.InOutArgument`1\"></xref>.\n  syntax:\n    content: public System.Activities.Activity<System.Activities.Location<T>> Expression { get; set; }\n    return:\n      type: System.Activities.Activity{System.Activities.Location{T}}\n      description: The value of the argument.\n  overload: System.Activities.InOutArgument`1.Expression*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  commentId: M:System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  id: FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: FromExpression(Activity<Location<T>>)\n  nameWithType: InOutArgument<T>.FromExpression(Activity<Location<T>>)\n  fullName: InOutArgument<T>.FromExpression(Activity<Location<T>>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes and returns a new <xref href=\"System.Activities.InOutArgument`1\"></xref> constructed using the specified <xref href=\"System.Activities.Activity`1\"></xref>.\n  syntax:\n    content: public static System.Activities.InOutArgument<T> FromExpression (System.Activities.Activity<System.Activities.Location<T>> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{System.Activities.Location{T}}\n      description: The value of the argument.\n    return:\n      type: System.Activities.InOutArgument`1\n      description: The new argument.\n  overload: System.Activities.InOutArgument`1.FromExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})\n  commentId: M:System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})\n  id: FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: FromVariable(Variable<T>)\n  nameWithType: InOutArgument<T>.FromVariable(Variable<T>)\n  fullName: InOutArgument<T>.FromVariable(Variable<T>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes and returns a new <xref href=\"System.Activities.InOutArgument`1\"></xref> constructed by using the specified <xref href=\"System.Activities.Variable`1\"></xref>.\n  syntax:\n    content: public static System.Activities.InOutArgument<T> FromVariable (System.Activities.Variable<T> variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable`1\n      description: The value of the argument.\n    return:\n      type: System.Activities.InOutArgument`1\n      description: The new argument.\n  overload: System.Activities.InOutArgument`1.FromVariable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)\n  commentId: M:System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)\n  id: Get(System.Activities.ActivityContext)\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: Get(ActivityContext)\n  nameWithType: InOutArgument<T>.Get(ActivityContext)\n  fullName: InOutArgument<T>.Get(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the value of the <xref href=\"System.Activities.InOutArgument`1\"></xref> using the specified <xref href=\"System.Activities.ActivityContext\"></xref>.\n  syntax:\n    content: public T Get (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: The activity context that contains the value of the argument.\n    return:\n      type: T\n      description: The value of the argument.\n  overload: System.Activities.InOutArgument`1.Get*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)\n  commentId: M:System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)\n  id: GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: GetLocation(ActivityContext)\n  nameWithType: InOutArgument<T>.GetLocation(ActivityContext)\n  fullName: InOutArgument<T>.GetLocation(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the location of the value for the <xref href=\"System.Activities.InOutArgument`1\"></xref>.\n  syntax:\n    content: public System.Activities.Location<T> GetLocation (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: The activity context that contains the location of the argument value.\n    return:\n      type: System.Activities.Location`1\n      description: A reference to the location where the value of the argument is stored.\n  overload: System.Activities.InOutArgument`1.GetLocation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.InOutArgument{T})\n  commentId: M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}\n  id: op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.InOutArgument{T})\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(Activity<Location<T>> to InOutArgument<T>)\n  nameWithType: InOutArgument<T>.op_Implicit(Activity<Location<T>> to InOutArgument<T>)\n  fullName: InOutArgument<T>.op_Implicit(Activity<Location<T>> to InOutArgument<T>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InOutArgument<T> op_Implicit (System.Activities.Activity<System.Activities.Location<T>> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{System.Activities.Location{T}}\n      description: ''\n    return:\n      type: System.Activities.InOutArgument`1\n      description: ''\n  overload: System.Activities.InOutArgument`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{T} to System.Activities.InOutArgument{T})\n  commentId: M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}\n  id: op_Implicit(System.Activities.Variable{T} to System.Activities.InOutArgument{T})\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(Variable<T> to InOutArgument<T>)\n  nameWithType: InOutArgument<T>.op_Implicit(Variable<T> to InOutArgument<T>)\n  fullName: InOutArgument<T>.op_Implicit(Variable<T> to InOutArgument<T>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InOutArgument<T> op_Implicit (System.Activities.Variable<T> variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable`1\n      description: ''\n    return:\n      type: System.Activities.InOutArgument`1\n      description: ''\n  overload: System.Activities.InOutArgument`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)\n  commentId: M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)\n  id: Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.InOutArgument`1\n  langs:\n  - csharp\n  name: Set(ActivityContext, T)\n  nameWithType: InOutArgument<T>.Set(ActivityContext, T)\n  fullName: InOutArgument<T>.Set(ActivityContext, T)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Sets the value of the argument using the specified value.\n  syntax:\n    content: public void Set (System.Activities.ActivityContext context, T value);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: The current activity context.\n    - id: value\n      type: T\n      description: The new value.\n  overload: System.Activities.InOutArgument`1.Set*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.InOutArgument\n  parent: System.Activities\n  isExternal: false\n  name: InOutArgument\n  nameWithType: InOutArgument\n  fullName: System.Activities.InOutArgument\n- uid: System.Activities.InOutArgument`1.#ctor\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: InOutArgument<T>()\n  nameWithType: InOutArgument<T>.InOutArgument<T>()\n  fullName: InOutArgument<T>.InOutArgument<T>()\n- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: InOutArgument<T>(Activity<Location<T>>)\n  nameWithType: InOutArgument<T>.InOutArgument<T>(Activity<Location<T>>)\n  fullName: InOutArgument<T>.InOutArgument<T>(Activity<Location<T>>)\n- uid: System.Activities.Activity`1\n  name: Activity<TResult>\n  nameWithType: Activity<TResult>\n  fullName: System.Activities.Activity<TResult>\n- uid: System.Activities.Location`1\n  name: Location<T>\n  nameWithType: Location<T>\n  fullName: System.Activities.Location<T>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.Activity{System.Activities.Location{T}}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<Location<T>>\n  nameWithType: Activity<Location<T>>\n  fullName: System.Activities.Activity<System.Activities.Location<T>>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Location`1\n    name: Location\n    nameWithType: Location\n    fullName: System.Activities.Location\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: InOutArgument<T>(Variable)\n  nameWithType: InOutArgument<T>.InOutArgument<T>(Variable)\n  fullName: InOutArgument<T>.InOutArgument<T>(Variable)\n- uid: System.Activities.Variable\n  parent: System.Activities\n  isExternal: false\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: InOutArgument<T>(Variable<T>)\n  nameWithType: InOutArgument<T>.InOutArgument<T>(Variable<T>)\n  fullName: InOutArgument<T>.InOutArgument<T>(Variable<T>)\n- uid: System.Activities.Variable`1\n  parent: System.Activities\n  isExternal: false\n  name: Variable<T>\n  nameWithType: Variable<T>\n  fullName: System.Activities.Variable<T>\n- uid: System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: InOutArgument<T>(Expression<Func<ActivityContext,T>>)\n  nameWithType: InOutArgument<T>.InOutArgument<T>(Expression<Func<ActivityContext,T>>)\n  fullName: InOutArgument<T>.InOutArgument<T>(Expression<Func<ActivityContext,T>>)\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Activities.ActivityContext\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ActivityContext,T>>\n  nameWithType: Expression<Func<ActivityContext,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: System.Activities.ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.InOutArgument`1.Expression\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: Expression\n  nameWithType: InOutArgument<T>.Expression\n  fullName: InOutArgument<T>.Expression\n- uid: System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: FromExpression(Activity<Location<T>>)\n  nameWithType: InOutArgument<T>.FromExpression(Activity<Location<T>>)\n  fullName: InOutArgument<T>.FromExpression(Activity<Location<T>>)\n- uid: System.Activities.InOutArgument`1\n  parent: System.Activities\n  isExternal: false\n  name: InOutArgument<T>\n  nameWithType: InOutArgument<T>\n  fullName: System.Activities.InOutArgument<T>\n- uid: System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: FromVariable(Variable<T>)\n  nameWithType: InOutArgument<T>.FromVariable(Variable<T>)\n  fullName: InOutArgument<T>.FromVariable(Variable<T>)\n- uid: System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: Get(ActivityContext)\n  nameWithType: InOutArgument<T>.Get(ActivityContext)\n  fullName: InOutArgument<T>.Get(ActivityContext)\n- uid: System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: GetLocation(ActivityContext)\n  nameWithType: InOutArgument<T>.GetLocation(ActivityContext)\n  fullName: InOutArgument<T>.GetLocation(ActivityContext)\n- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.InOutArgument{T})\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: op_Implicit(Activity<Location<T>> to InOutArgument<T>)\n  nameWithType: InOutArgument<T>.op_Implicit(Activity<Location<T>> to InOutArgument<T>)\n  fullName: InOutArgument<T>.op_Implicit(Activity<Location<T>> to InOutArgument<T>)\n- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{T} to System.Activities.InOutArgument{T})\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: op_Implicit(Variable<T> to InOutArgument<T>)\n  nameWithType: InOutArgument<T>.op_Implicit(Variable<T> to InOutArgument<T>)\n  fullName: InOutArgument<T>.op_Implicit(Variable<T> to InOutArgument<T>)\n- uid: System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: Set(ActivityContext, T)\n  nameWithType: InOutArgument<T>.Set(ActivityContext, T)\n  fullName: InOutArgument<T>.Set(ActivityContext, T)\n- uid: System.Activities.InOutArgument`1.#ctor*\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: InOutArgument<T>\n  nameWithType: InOutArgument<T>.InOutArgument<T>\n  fullName: InOutArgument<T>.InOutArgument<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.Expression*\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: Expression\n  nameWithType: InOutArgument<T>.Expression\n  fullName: InOutArgument<T>.Expression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.FromExpression*\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: FromExpression\n  nameWithType: InOutArgument<T>.FromExpression\n  fullName: InOutArgument<T>.FromExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.FromVariable*\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: FromVariable\n  nameWithType: InOutArgument<T>.FromVariable\n  fullName: InOutArgument<T>.FromVariable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.Get*\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: Get\n  nameWithType: InOutArgument<T>.Get\n  fullName: InOutArgument<T>.Get\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.GetLocation*\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: GetLocation\n  nameWithType: InOutArgument<T>.GetLocation\n  fullName: InOutArgument<T>.GetLocation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.op_Implicit*\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: InOutArgument<T>.op_Implicit\n  fullName: InOutArgument<T>.op_Implicit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Activities.InOutArgument`1.Set*\n  parent: System.Activities.InOutArgument`1\n  isExternal: false\n  name: Set\n  nameWithType: InOutArgument<T>.Set\n  fullName: InOutArgument<T>.Set\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.Argument.ArgumentType\n  parent: System.Activities.Argument\n  isExternal: false\n  name: ArgumentType\n  nameWithType: Argument.ArgumentType\n  fullName: Argument.ArgumentType\n- uid: System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)\n  parent: System.Activities.Argument\n  isExternal: false\n  name: Create(Type, ArgumentDirection)\n  nameWithType: Argument.Create(Type, ArgumentDirection)\n  fullName: Argument.Create(Type, ArgumentDirection)\n- uid: System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)\n  parent: System.Activities.Argument\n  isExternal: false\n  name: CreateReference(Argument, String)\n  nameWithType: Argument.CreateReference(Argument, String)\n  fullName: Argument.CreateReference(Argument, String)\n- uid: System.Activities.Argument.Direction\n  parent: System.Activities.Argument\n  isExternal: false\n  name: Direction\n  nameWithType: Argument.Direction\n  fullName: Argument.Direction\n- uid: System.Activities.Argument.EvaluationOrder\n  parent: System.Activities.Argument\n  isExternal: false\n  name: EvaluationOrder\n  nameWithType: Argument.EvaluationOrder\n  fullName: Argument.EvaluationOrder\n- uid: System.Activities.Argument.Get``1(System.Activities.ActivityContext)\n  parent: System.Activities.Argument\n  isExternal: false\n  name: Get<T>(ActivityContext)\n  nameWithType: Argument.Get<T>(ActivityContext)\n  fullName: Argument.Get<T>(ActivityContext)\n- uid: System.Activities.Argument.ResultValue\n  parent: System.Activities.Argument\n  isExternal: false\n  name: ResultValue\n  nameWithType: Argument.ResultValue\n  fullName: Argument.ResultValue\n- uid: System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)\n  parent: System.Activities.Argument\n  isExternal: false\n  name: Set(ActivityContext, Object)\n  nameWithType: Argument.Set(ActivityContext, Object)\n  fullName: Argument.Set(ActivityContext, Object)\n- uid: System.Activities.Argument.UnspecifiedEvaluationOrder\n  parent: System.Activities.Argument\n  isExternal: false\n  name: UnspecifiedEvaluationOrder\n  nameWithType: Argument.UnspecifiedEvaluationOrder\n  fullName: Argument.UnspecifiedEvaluationOrder\n- uid: System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)\n  parent: System.Activities.InOutArgument\n  isExternal: false\n  name: CreateReference(InOutArgument, String)\n  nameWithType: InOutArgument.CreateReference(InOutArgument, String)\n  fullName: InOutArgument.CreateReference(InOutArgument, String)\n"}