{"nodes":[{"content":"Represents an object cache and provides the base methods and properties for accessing the object cache.","nodes":[{"pos":[0,103],"content":"Represents an object cache and provides the base methods and properties for accessing the object cache.","nodes":[{"content":"Represents an object cache and provides the base methods and properties for accessing the object cache.","pos":[0,103]}]}],"pos":[2845,2949],"yaml":true},{"content":"The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache. To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.  \n  \n> [!NOTE]\n>  The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].  \n  \n The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class. The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.","nodes":[{"pos":[0,213],"content":"The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache. To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.","nodes":[{"content":"The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache. To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.","pos":[0,213],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> type is the primary type for the in-memory object cache.","pos":[0,102],"source":"The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache."},{"content":"To develop a custom cache implementation, you derive from the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.","pos":[103,213],"source":" To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class."}]}]},{"pos":[221,359],"content":"[!NOTE]\n The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class is new as of the <ph id=\"ph2\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>.","pos":[9,136],"source":" The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]."}]},{"pos":[366,729],"content":"The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class. The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.","nodes":[{"content":"The built-in <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class derives from the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.","pos":[0,126],"source":"The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is the only concrete object cache implementation in the <ph id=\"ph2\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> that derives from the <ph id=\"ph3\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.","pos":[127,363],"source":" The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class."}]}],"pos":[2960,3697],"yaml":true,"extradata":"MT"},{"content":"Called from constructors in derived classes in order to initialize the <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> class.","nodes":[{"pos":[0,133],"content":"Called from constructors in derived classes in order to initialize the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.ObjectCache\"&gt;&lt;/xref&gt;</ph> class.","source":"Called from constructors in derived classes in order to initialize the <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> class."}],"pos":[32141,32275],"yaml":true},{"content":"When overridden in a derived class, tries to insert a cache entry into the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance, and adds details about how the entry should be evicted.","nodes":[{"pos":[0,205],"content":"When overridden in a derived class, tries to insert a cache entry into the cache as a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.CacheItem\"&gt;&lt;/xref&gt;</ph> instance, and adds details about how the entry should be evicted.","source":"When overridden in a derived class, tries to insert a cache entry into the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance, and adds details about how the entry should be evicted."}],"pos":[33580,33786],"yaml":true},{"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","nodes":[{"pos":[0,620],"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","nodes":[{"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","pos":[0,620],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id=\"ph3\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id=\"ph4\">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.","pos":[0,300],"source":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>."},{"content":"This reduces the number of method overloads that a cache implementer has to provide.","pos":[301,385]},{"content":"If a cache implementation does not require any special behavior for the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.","pos":[386,620],"source":" If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads."}]}]}],"pos":[33797,34418],"yaml":true,"extradata":"MT"},{"content":"The object to add.","nodes":[{"pos":[0,18],"content":"The object to add.","nodes":[{"content":"The object to add.","pos":[0,18]}]}],"pos":[34648,34667],"yaml":true},{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"pos":[0,143],"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","pos":[0,143],"nodes":[{"content":"An object that contains eviction details for the cache entry.","pos":[0,61]},{"content":"This object provides more options for eviction than a simple absolute expiration.","pos":[62,143]}]}]}],"pos":[34754,34898],"yaml":true},{"content":"`true` if insertion succeeded, or `false` if there is an already an entry in the cache that has the same key as <code>item</code>.","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">`true`</ph> if insertion succeeded, or <ph id=\"ph2\">`false`</ph> if there is an already an entry in the cache that has the same key as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"`true` if insertion succeeded, or `false` if there is an already an entry in the cache that has the same key as <code>item</code>."}],"pos":[34956,35089],"yaml":true},{"content":"When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.","nodes":[{"pos":[0,118],"content":"When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.","nodes":[{"content":"When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.","pos":[0,118]}]}],"pos":[36336,36455],"yaml":true},{"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","nodes":[{"pos":[0,620],"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","nodes":[{"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","pos":[0,620],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id=\"ph3\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id=\"ph4\">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.","pos":[0,300],"source":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>."},{"content":"This reduces the number of method overloads that a cache implementer has to provide.","pos":[301,385]},{"content":"If a cache implementation does not require any special behavior for the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.","pos":[386,620],"source":" If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads."}]}]}],"pos":[36466,37087],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the cache entry.","nodes":[{"pos":[0,40],"content":"A unique identifier for the cache entry.","nodes":[{"content":"A unique identifier for the cache entry.","pos":[0,40]}]}],"pos":[37298,37339],"yaml":true},{"content":"The object to insert.","nodes":[{"pos":[0,21],"content":"The object to insert.","nodes":[{"content":"The object to insert.","pos":[0,21]}]}],"pos":[37400,37422],"yaml":true},{"content":"The fixed date and time at which the cache entry will expire. This parameter is required when the <xref href=\"System.Runtime.Caching.ObjectCache.Add*\"></xref> method is called.","nodes":[{"pos":[0,176],"content":"The fixed date and time at which the cache entry will expire. This parameter is required when the <xref href=\"System.Runtime.Caching.ObjectCache.Add*\"></xref> method is called.","nodes":[{"content":"The fixed date and time at which the cache entry will expire.","pos":[0,61]},{"content":"This parameter is required when the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.ObjectCache.Add*\"&gt;&lt;/xref&gt;</ph> method is called.","pos":[62,176],"source":" This parameter is required when the <xref href=\"System.Runtime.Caching.ObjectCache.Add*\"></xref> method is called."}]}],"pos":[37504,37681],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is `null`.","nodes":[{"pos":[0,231],"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry can be added, if regions are implemented.","pos":[10,104]},{"content":"Because regions are not implemented in <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default value is <ph id=\"ph2\">`null`</ph>.","pos":[105,231],"source":" Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is `null`."}]}],"pos":[37747,37979],"yaml":true},{"content":"`true` if insertion succeeded, or `false` if there is an already an entry in the cache that has the same key as <code>key</code>.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if insertion succeeded, or <ph id=\"ph2\">`false`</ph> if there is an already an entry in the cache that has the same key as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"`true` if insertion succeeded, or `false` if there is an already an entry in the cache that has the same key as <code>key</code>."}],"pos":[38037,38169],"yaml":true},{"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.","nodes":[{"pos":[0,133],"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.","nodes":[{"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.","pos":[0,133]}]}],"pos":[39470,39604],"yaml":true},{"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","nodes":[{"pos":[0,620],"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","nodes":[{"content":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.","pos":[0,620],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id=\"ph3\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id=\"ph4\">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.","pos":[0,300],"source":"The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>."},{"content":"This reduces the number of method overloads that a cache implementer has to provide.","pos":[301,385]},{"content":"If a cache implementation does not require any special behavior for the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.","pos":[386,620],"source":" If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads."}]}]}],"pos":[39615,40236],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the cache entry.","nodes":[{"pos":[0,40],"content":"A unique identifier for the cache entry.","nodes":[{"content":"A unique identifier for the cache entry.","pos":[0,40]}]}],"pos":[40459,40500],"yaml":true},{"content":"The object to insert.","nodes":[{"pos":[0,21],"content":"The object to insert.","nodes":[{"content":"The object to insert.","pos":[0,21]}]}],"pos":[40561,40583],"yaml":true},{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"pos":[0,143],"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","pos":[0,143],"nodes":[{"content":"An object that contains eviction details for the cache entry.","pos":[0,61]},{"content":"This object provides more options for eviction than a simple absolute expiration.","pos":[62,143]}]}]}],"pos":[40670,40814],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,160],"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry can be added, if regions are implemented.","pos":[10,104]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[105,160],"source":" The default value for the optional parameter is `null`."}]}],"pos":[40880,41041],"yaml":true},{"content":"`true` if the insertion try succeeds, or `false` if there is an already an entry in the cache with the same key as <code>key</code>.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">`true`</ph> if the insertion try succeeds, or <ph id=\"ph2\">`false`</ph> if there is an already an entry in the cache with the same key as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"`true` if the insertion try succeeds, or `false` if there is an already an entry in the cache with the same key as <code>key</code>."}],"pos":[41099,41234],"yaml":true},{"content":"When overridden in a derived class, inserts the specified <xref href=\"System.Runtime.Caching.CacheItem\"></xref> object into the cache, specifying information about how the entry will be evicted.","nodes":[{"pos":[0,194],"content":"When overridden in a derived class, inserts the specified <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.CacheItem\"&gt;&lt;/xref&gt;</ph> object into the cache, specifying information about how the entry will be evicted.","source":"When overridden in a derived class, inserts the specified <xref href=\"System.Runtime.Caching.CacheItem\"></xref> object into the cache, specifying information about how the entry will be evicted."}],"pos":[42547,42742],"yaml":true},{"content":"The object to insert.","nodes":[{"pos":[0,21],"content":"The object to insert.","nodes":[{"content":"The object to insert.","pos":[0,21]}]}],"pos":[43016,43038],"yaml":true},{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"pos":[0,143],"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","pos":[0,143],"nodes":[{"content":"An object that contains eviction details for the cache entry.","pos":[0,61]},{"content":"This object provides more options for eviction than a simple absolute expiration.","pos":[62,143]}]}]}],"pos":[43125,43269],"yaml":true},{"content":"If a cache entry with the same key exists, the specified cache entry; otherwise, `null`.","nodes":[{"pos":[0,88],"content":"If a cache entry with the same key exists, the specified cache entry; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"If a cache entry with the same key exists, the specified cache entry; otherwise, `null`."}],"pos":[43345,43434],"yaml":true},{"content":"When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.","nodes":[{"pos":[0,196],"content":"When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.","nodes":[{"content":"When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.","pos":[0,196]}]}],"pos":[44772,44969],"yaml":true},{"content":"This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.","nodes":[{"pos":[0,233],"content":"This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.","nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> method overload returns an object value, not a <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object.","pos":[0,233],"source":"This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object."}]}],"pos":[44980,45214],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the cache entry.","nodes":[{"pos":[0,40],"content":"A unique identifier for the cache entry.","nodes":[{"content":"A unique identifier for the cache entry.","pos":[0,40]}]}],"pos":[45441,45482],"yaml":true},{"content":"The object to insert.","nodes":[{"pos":[0,21],"content":"The object to insert.","nodes":[{"content":"The object to insert.","pos":[0,21]}]}],"pos":[45543,45565],"yaml":true},{"content":"The fixed date and time at which the cache entry will expire.","nodes":[{"pos":[0,61],"content":"The fixed date and time at which the cache entry will expire.","nodes":[{"content":"The fixed date and time at which the cache entry will expire.","pos":[0,61]}]}],"pos":[45647,45709],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,160],"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry can be added, if regions are implemented.","pos":[10,104]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[105,160],"source":" The default value for the optional parameter is `null`."}]}],"pos":[45775,45936],"yaml":true},{"content":"If a cache entry with the same key exists, the specified cache entry's value; otherwise, `null`.","nodes":[{"pos":[0,96],"content":"If a cache entry with the same key exists, the specified cache entry's value; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"If a cache entry with the same key exists, the specified cache entry's value; otherwise, `null`."}],"pos":[45993,46090],"yaml":true},{"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.","nodes":[{"pos":[0,176],"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.","nodes":[{"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.","pos":[0,176]}]}],"pos":[47482,47659],"yaml":true},{"content":"The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.","nodes":[{"pos":[0,240],"content":"The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29&gt;</ph> method returns an object value, not a <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object.","pos":[0,240],"source":"The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object."}]}],"pos":[47670,47911],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the cache entry.","nodes":[{"pos":[0,40],"content":"A unique identifier for the cache entry.","nodes":[{"content":"A unique identifier for the cache entry.","pos":[0,40]}]}],"pos":[48150,48191],"yaml":true},{"content":"The object to insert.","nodes":[{"pos":[0,21],"content":"The object to insert.","nodes":[{"content":"The object to insert.","pos":[0,21]}]}],"pos":[48252,48274],"yaml":true},{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"pos":[0,143],"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","pos":[0,143],"nodes":[{"content":"An object that contains eviction details for the cache entry.","pos":[0,61]},{"content":"This object provides more options for eviction than a simple absolute expiration.","pos":[62,143]}]}]}],"pos":[48361,48505],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,160],"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry can be added, if regions are implemented.","pos":[10,104]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[105,160],"source":" The default value for the optional parameter is `null`."}]}],"pos":[48571,48732],"yaml":true},{"content":"If a cache entry with the same key exists, the specified cache entry's value; otherwise, `null`.","nodes":[{"pos":[0,96],"content":"If a cache entry with the same key exists, the specified cache entry's value; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"If a cache entry with the same key exists, the specified cache entry's value; otherwise, `null`."}],"pos":[48789,48886],"yaml":true},{"content":"When overridden in a derived class, checks whether the cache entry already exists in the cache.","nodes":[{"pos":[0,95],"content":"When overridden in a derived class, checks whether the cache entry already exists in the cache.","nodes":[{"content":"When overridden in a derived class, checks whether the cache entry already exists in the cache.","pos":[0,95]}]}],"pos":[49996,50092],"yaml":true},{"content":"A unique identifier for the cache entry.","nodes":[{"pos":[0,40],"content":"A unique identifier for the cache entry.","nodes":[{"content":"A unique identifier for the cache entry.","pos":[0,40]}]}],"pos":[50260,50301],"yaml":true},{"content":"Optional. A named region in the cache where the cache can be found, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,151],"content":"Optional. A named region in the cache where the cache can be found, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache where the cache can be found, if regions are implemented.","pos":[10,95]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[96,151],"source":" The default value for the optional parameter is `null`."}]}],"pos":[50367,50519],"yaml":true},{"content":"`true` if the cache contains a cache entry with the same key value as <code>key</code>; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> if the cache contains a cache entry with the same key value as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the cache contains a cache entry with the same key value as <code>key</code>; otherwise, `false`."}],"pos":[50577,50687],"yaml":true},{"content":"When overridden in a derived class, creates a <xref href=\"System.Runtime.Caching.CacheEntryChangeMonitor\"></xref> object that can trigger events in response to changes to specified cache entries.","nodes":[{"pos":[0,195],"content":"When overridden in a derived class, creates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.CacheEntryChangeMonitor\"&gt;&lt;/xref&gt;</ph> object that can trigger events in response to changes to specified cache entries.","source":"When overridden in a derived class, creates a <xref href=\"System.Runtime.Caching.CacheEntryChangeMonitor\"></xref> object that can trigger events in response to changes to specified cache entries."}],"pos":[52074,52270],"yaml":true},{"content":"When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object. This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter. For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.  \n  \n If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter. Otherwise, the parameter defaults to `null`.  \n  \n> [!NOTE]\n>  Not all cache implementations support cache-entry change monitors. To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.","nodes":[{"pos":[0,558],"content":"When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object. This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter. For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.","nodes":[{"content":"When a derived <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class overrides the base <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A&gt;</ph> method, the cache implementation must create a <ph id=\"ph3\">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> object.","pos":[0,265],"source":"When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object."},{"content":"This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the <ph id=\"ph1\">`keys`</ph> parameter.","pos":[266,402],"source":" This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter."},{"content":"For example, if a monitored item in the <ph id=\"ph1\">`keys`</ph> parameter is updated or removed from the cache, the change monitor created by this method triggers an event.","pos":[403,558],"source":" For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event."}]},{"pos":[565,728],"content":"If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter. Otherwise, the parameter defaults to `null`.","nodes":[{"content":"If a cache implementation supports named cache regions, a string value can be specified as the <ph id=\"ph1\">`regionName`</ph> parameter.","pos":[0,118],"source":"If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter."},{"content":"Otherwise, the parameter defaults to <ph id=\"ph1\">`null`</ph>.","pos":[119,163],"source":" Otherwise, the parameter defaults to `null`."}]},{"pos":[736,993],"content":"[!NOTE]\n Not all cache implementations support cache-entry change monitors. To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.","leadings":["","> "],"nodes":[{"content":" Not all cache implementations support cache-entry change monitors. To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.","pos":[8,255],"nodes":[{"content":"Not all cache implementations support cache-entry change monitors.","pos":[1,67]},{"content":"To determine whether your cache implementation supports <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> objects, see the documentation for the specific cache implementation.","pos":[68,247],"source":" To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation."}]}]}],"pos":[52281,53282],"yaml":true,"extradata":"MT"},{"content":"The unique identifiers for cache entries to monitor.","nodes":[{"pos":[0,52],"content":"The unique identifiers for cache entries to monitor.","nodes":[{"content":"The unique identifiers for cache entries to monitor.","pos":[0,52]}]}],"pos":[53595,53648],"yaml":true},{"content":"Optional. A named region in the cache where the cache keys in the <code>keys</code> parameter exist, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,184],"content":"Optional. A named region in the cache where the cache keys in the <code>keys</code> parameter exist, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache where the cache keys in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keys</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter exist, if regions are implemented.","pos":[10,128],"source":" A named region in the cache where the cache keys in the <code>keys</code> parameter exist, if regions are implemented."},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[129,184],"source":" The default value for the optional parameter is `null`."}]}],"pos":[53714,53899],"yaml":true},{"content":"A change monitor that monitors cache entries in the cache.","nodes":[{"pos":[0,58],"content":"A change monitor that monitors cache entries in the cache.","nodes":[{"content":"A change monitor that monitors cache entries in the cache.","pos":[0,58]}]}],"pos":[53989,54048],"yaml":true},{"content":"When overridden in a derived class, gets a description of the features that a cache implementation provides.","nodes":[{"pos":[0,108],"content":"When overridden in a derived class, gets a description of the features that a cache implementation provides.","nodes":[{"content":"When overridden in a derived class, gets a description of the features that a cache implementation provides.","pos":[0,108]}]}],"pos":[55134,55243],"yaml":true},{"content":"A bitwise combination of flags that indicate the default capabilities of a cache implementation.","nodes":[{"pos":[0,96],"content":"A bitwise combination of flags that indicate the default capabilities of a cache implementation.","nodes":[{"content":"A bitwise combination of flags that indicate the default capabilities of a cache implementation.","pos":[0,96]}]}],"pos":[55455,55552],"yaml":true},{"content":"When overridden in a derived class, gets the specified cache entry from the cache as an object.","nodes":[{"pos":[0,95],"content":"When overridden in a derived class, gets the specified cache entry from the cache as an object.","nodes":[{"content":"When overridden in a derived class, gets the specified cache entry from the cache as an object.","pos":[0,95]}]}],"pos":[56640,56736],"yaml":true},{"content":"A unique identifier for the cache entry to get.","nodes":[{"pos":[0,47],"content":"A unique identifier for the cache entry to get.","nodes":[{"content":"A unique identifier for the cache entry to get.","pos":[0,47]}]}],"pos":[56901,56949],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry was added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,157],"content":"Optional. A named region in the cache to which the cache entry was added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry was added, if regions are implemented.","pos":[10,101]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[102,157],"source":" The default value for the optional parameter is `null`."}]}],"pos":[57015,57173],"yaml":true},{"content":"The cache entry that is identified by <code>key</code>.","nodes":[{"pos":[0,55],"content":"The cache entry that is identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The cache entry that is identified by <code>key</code>."}],"pos":[57230,57286],"yaml":true},{"content":"When overridden in a derived class, gets the specified cache entry from the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance.","nodes":[{"pos":[0,150],"content":"When overridden in a derived class, gets the specified cache entry from the cache as a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.CacheItem\"&gt;&lt;/xref&gt;</ph> instance.","source":"When overridden in a derived class, gets the specified cache entry from the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance."}],"pos":[58407,58558],"yaml":true},{"content":"This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class. In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data. However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.  \n  \n The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.","nodes":[{"pos":[0,491],"content":"This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class. In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data. However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.","nodes":[{"content":"This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class. In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data. However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.","pos":[0,491],"nodes":[{"content":"This method overload exists because some cache implementations might extend the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> class.","pos":[0,126],"source":"This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class."},{"content":"In that case, the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> method overload will not necessarily return all the information about cached data.","pos":[127,308],"source":" In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method overload enables custom caches to return more than just the cache value.","pos":[309,491],"source":" However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value."}]}]},{"pos":[498,898],"content":"The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method is like the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> method, except that the <ph id=\"ph3\">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method returns return the cache entry as a <ph id=\"ph4\">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> instance.","pos":[0,400],"source":"The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance."}]}],"pos":[58569,59472],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the cache entry to get.","nodes":[{"pos":[0,47],"content":"A unique identifier for the cache entry to get.","nodes":[{"content":"A unique identifier for the cache entry to get.","pos":[0,47]}]}],"pos":[59672,59720],"yaml":true},{"content":"Optional. A named region in the cache to which the cache was added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is `null`.","nodes":[{"pos":[0,216],"content":"Optional. A named region in the cache to which the cache was added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache was added, if regions are implemented.","pos":[10,95]},{"content":"Because regions are not implemented in <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default is <ph id=\"ph2\">`null`</ph>.","pos":[96,216],"source":" Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is `null`."}]}],"pos":[59786,60003],"yaml":true},{"content":"The cache entry that is identified by <code>key</code>.","nodes":[{"pos":[0,55],"content":"The cache entry that is identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The cache entry that is identified by <code>key</code>."}],"pos":[60079,60135],"yaml":true},{"content":"When overridden in a derived class, gets the total number of cache entries in the cache.","nodes":[{"pos":[0,88],"content":"When overridden in a derived class, gets the total number of cache entries in the cache.","nodes":[{"content":"When overridden in a derived class, gets the total number of cache entries in the cache.","pos":[0,88]}]}],"pos":[61175,61264],"yaml":true},{"content":"Optional. A named region in the cache for which the cache entry count should be computed, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,173],"content":"Optional. A named region in the cache for which the cache entry count should be computed, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache for which the cache entry count should be computed, if regions are implemented.","pos":[10,117]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[118,173],"source":" The default value for the optional parameter is `null`."}]}],"pos":[61427,61601],"yaml":true},{"content":"The number of cache entries in the cache. If <code>regionName</code> is not `null`, the count indicates the number of entries that are in the specified cache region.","nodes":[{"pos":[0,165],"content":"The number of cache entries in the cache. If <code>regionName</code> is not `null`, the count indicates the number of entries that are in the specified cache region.","nodes":[{"content":"The number of cache entries in the cache.","pos":[0,41]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">regionName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph2\">`null`</ph>, the count indicates the number of entries that are in the specified cache region.","pos":[42,165],"source":" If <code>regionName</code> is not `null`, the count indicates the number of entries that are in the specified cache region."}]}],"pos":[61657,61823],"yaml":true},{"content":"When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.","nodes":[{"pos":[0,124],"content":"When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.","nodes":[{"content":"When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.","pos":[0,124]}]}],"pos":[62826,62951],"yaml":true},{"content":"Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.  \n  \n> [!NOTE]\n>  Returning an enumerator is typically a more expensive operation than returning the entire cache entry.  \n  \n This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.","nodes":[{"pos":[0,132],"content":"Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.","nodes":[{"content":"Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.","pos":[0,132]}]},{"pos":[140,253],"content":"[!NOTE]\n Returning an enumerator is typically a more expensive operation than returning the entire cache entry.","leadings":["","> "],"nodes":[{"content":"Returning an enumerator is typically a more expensive operation than returning the entire cache entry.","pos":[9,111]}]},{"pos":[260,527],"content":"This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.","nodes":[{"content":"This method is called by the explicit interface implementations that the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class has for the <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> methods.","pos":[0,267],"source":"This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods."}]}],"pos":[62962,63497],"yaml":true,"extradata":"MT"},{"content":"The enumerator object that provides access to the cache entries in the cache.","nodes":[{"pos":[0,77],"content":"The enumerator object that provides access to the cache entries in the cache.","nodes":[{"content":"The enumerator object that provides access to the cache entries in the cache.","pos":[0,77]}]}],"pos":[63823,63901],"yaml":true},{"content":"When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.","nodes":[{"pos":[0,102],"content":"When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.","nodes":[{"content":"When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.","pos":[0,102]}]}],"pos":[65173,65276],"yaml":true},{"content":"The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.  \n  \n Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache. Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.","nodes":[{"pos":[0,293],"content":"The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.","pos":[0,293],"source":"The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call."}]},{"pos":[300,543],"content":"Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache. Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.","nodes":[{"content":"Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache. Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.","pos":[0,243],"nodes":[{"content":"Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.","pos":[0,126]},{"content":"Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.","pos":[127,243]}]}]}],"pos":[65287,65835],"yaml":true,"extradata":"MT"},{"content":"A collection of unique identifiers for the cache entries to get.","nodes":[{"pos":[0,64],"content":"A collection of unique identifiers for the cache entries to get.","nodes":[{"content":"A collection of unique identifiers for the cache entries to get.","pos":[0,64]}]}],"pos":[66135,66200],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry or entries were added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,169],"content":"Optional. A named region in the cache to which the cache entry or entries were added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry or entries were added, if regions are implemented.","pos":[10,113]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[114,169],"source":" The default value for the optional parameter is `null`."}]}],"pos":[66266,66436],"yaml":true},{"content":"A dictionary of key/value pairs that represent cache entries.","nodes":[{"pos":[0,61],"content":"A dictionary of key/value pairs that represent cache entries.","nodes":[{"content":"A dictionary of key/value pairs that represent cache entries.","pos":[0,61]}]}],"pos":[66547,66609],"yaml":true},{"content":"Gets a set of cache entries that correspond to the specified keys.","nodes":[{"pos":[0,66],"content":"Gets a set of cache entries that correspond to the specified keys.","nodes":[{"content":"Gets a set of cache entries that correspond to the specified keys.","pos":[0,66]}]}],"pos":[67730,67797],"yaml":true},{"content":"The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=fullName> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.  \n  \n This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.","nodes":[{"pos":[0,380],"content":"The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=fullName> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=fullName&gt;</ph> method overload is like the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.","pos":[0,380],"source":"The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=fullName> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#."}]},{"pos":[387,698],"content":"This method is a virtual method because the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class provides a default implementation that passes the <ph id=\"ph2\">`params`</ph> array to the <ph id=\"ph3\">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload.","source":"This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload."}],"pos":[67808,68511],"yaml":true,"extradata":"MT"},{"content":"Optional. A named region in the cache to which the cache entry or entries were added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is `null`.","nodes":[{"pos":[0,234],"content":"Optional. A named region in the cache to which the cache entry or entries were added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry or entries were added, if regions are implemented.","pos":[10,113]},{"content":"Because regions are not implemented in <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default is <ph id=\"ph2\">`null`</ph>.","pos":[114,234],"source":" Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is `null`."}]}],"pos":[68731,68966],"yaml":true},{"content":"A collection of unique identifiers for the cache entries to get.","nodes":[{"pos":[0,64],"content":"A collection of unique identifiers for the cache entries to get.","nodes":[{"content":"A collection of unique identifiers for the cache entries to get.","pos":[0,64]}]}],"pos":[69028,69093],"yaml":true},{"content":"A dictionary of key/value pairs that represent cache entries.","nodes":[{"pos":[0,61],"content":"A dictionary of key/value pairs that represent cache entries.","nodes":[{"content":"A dictionary of key/value pairs that represent cache entries.","pos":[0,61]}]}],"pos":[69204,69266],"yaml":true},{"content":"Gets or set a reference to a managed hosting environment that is available to <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> implementations and that can provide host-specific services to <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> implementations.","nodes":[{"pos":[0,269],"content":"Gets or set a reference to a managed hosting environment that is available to <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.ObjectCache\"&gt;&lt;/xref&gt;</ph> implementations and that can provide host-specific services to <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Caching.ObjectCache\"&gt;&lt;/xref&gt;</ph> implementations.","source":"Gets or set a reference to a managed hosting environment that is available to <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> implementations and that can provide host-specific services to <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> implementations."}],"pos":[70212,70482],"yaml":true},{"content":"The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.  \n  \n The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:  \n  \n|Service|Description|  \n|-------------|-----------------|  \n|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.|  \n|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].|  \n|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|Lets cache implementations report cache memory consumption to the host environment. This enables host environments to centrally manage memory consumption across multiple cache implementations.|  \n  \n> [!NOTE]\n>  Callers of this property value require unrestricted code access security permissions.","nodes":[{"pos":[0,263],"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property is intended for use by <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.","source":"The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment."},{"pos":[270,547],"content":"The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:","nodes":[{"content":"The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> implementations through the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property:","pos":[0,277],"source":"The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:"}]},{"pos":[554,561],"content":"Service","nodes":[{"content":"Service","pos":[0,7]}]},{"pos":[562,573],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[614,674],"content":"<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>","nodes":[]},{"pos":[675,838],"content":"Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.","nodes":[{"content":"Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.","pos":[0,163]}]},{"pos":[843,910],"content":"<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>","nodes":[]},{"pos":[911,1079],"content":"Lets host environments provide a custom file-change notification system, instead of using the one provided in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.","source":"Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]."},{"pos":[1084,1141],"content":"<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>","nodes":[]},{"pos":[1142,1334],"content":"Lets cache implementations report cache memory consumption to the host environment. This enables host environments to centrally manage memory consumption across multiple cache implementations.","nodes":[{"content":"Lets cache implementations report cache memory consumption to the host environment. This enables host environments to centrally manage memory consumption across multiple cache implementations.","pos":[0,192],"nodes":[{"content":"Lets cache implementations report cache memory consumption to the host environment.","pos":[0,83]},{"content":"This enables host environments to centrally manage memory consumption across multiple cache implementations.","pos":[84,192]}]}]},{"pos":[1343,1439],"content":"[!NOTE]\n Callers of this property value require unrestricted code access security permissions.","leadings":["","> "],"nodes":[{"content":"Callers of this property value require unrestricted code access security permissions.","pos":[9,94]}]}],"pos":[70493,71946],"yaml":true,"extradata":"MT"},{"content":"A reference to a cache-aware managed hosting environment.","nodes":[{"pos":[0,57],"content":"A reference to a cache-aware managed hosting environment.","nodes":[{"content":"A reference to a cache-aware managed hosting environment.","pos":[0,57]}]}],"pos":[72189,72247],"yaml":true},{"content":"The value being assigned to the property is `null`.","nodes":[{"pos":[0,51],"content":"The value being assigned to the property is <ph id=\"ph1\">`null`</ph>.","source":"The value being assigned to the property is `null`."}],"pos":[72416,72468],"yaml":true},{"content":"An attempt was made to set the property value more than one time.","nodes":[{"pos":[0,65],"content":"An attempt was made to set the property value more than one time.","nodes":[{"content":"An attempt was made to set the property value more than one time.","pos":[0,65]}]}],"pos":[72578,72644],"yaml":true},{"content":"Gets a value that indicates that a cache entry has no absolute expiration.","nodes":[{"pos":[0,74],"content":"Gets a value that indicates that a cache entry has no absolute expiration.","nodes":[{"content":"Gets a value that indicates that a cache entry has no absolute expiration.","pos":[0,74]}]}],"pos":[73758,73833],"yaml":true},{"content":"A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time. However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.","nodes":[{"pos":[0,433],"content":"A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time. However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.","nodes":[{"content":"A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time. However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.","pos":[0,433],"nodes":[{"content":"A cache entry that is inserted into the cache with the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> field value set as the expiration value should never expire based on an absolute point in time.","pos":[0,219],"source":"A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time."},{"content":"However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.","pos":[220,433]}]}]}],"pos":[73844,74278],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the default indexer for the <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> class.","nodes":[{"pos":[0,103],"content":"Gets or sets the default indexer for the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.ObjectCache\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets or sets the default indexer for the <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> class."}],"pos":[75392,75496],"yaml":true},{"content":"The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method. Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method. However this behavior is ultimately up to the cache implementation.  \n  \n The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.","nodes":[{"pos":[0,434],"content":"The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method. Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method. However this behavior is ultimately up to the cache implementation.","nodes":[{"content":"The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method. Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method. However this behavior is ultimately up to the cache implementation.","pos":[0,434],"nodes":[{"content":"The behavior of the set accessor of this property is like the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> method.","pos":[0,190],"source":"The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method."},{"content":"Internally, a cache implementation could set the absolute expiration of the specified value to the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> method.","pos":[191,366],"source":" Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method."},{"content":"However this behavior is ultimately up to the cache implementation.","pos":[367,434]}]}]},{"pos":[441,615],"content":"The behavior of get accessor is like calling the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</ph> method and using <ph id=\"ph2\">`null`</ph> for the region name.","source":"The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name."}],"pos":[75507,76127],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for a cache entry in the cache.","nodes":[{"pos":[0,51],"content":"A unique identifier for a cache entry in the cache.","nodes":[{"content":"A unique identifier for a cache entry in the cache.","pos":[0,51]}]}],"pos":[76279,76331],"yaml":true},{"content":"A key that serves as an indexer into the cache instance.","nodes":[{"pos":[0,56],"content":"A key that serves as an indexer into the cache instance.","nodes":[{"content":"A key that serves as an indexer into the cache instance.","pos":[0,56]}]}],"pos":[76388,76445],"yaml":true},{"content":"Gets the name of a specific <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> instance.","nodes":[{"pos":[0,93],"content":"Gets the name of a specific <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.ObjectCache\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the name of a specific <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> instance."}],"pos":[77386,77480],"yaml":true},{"content":"Some cache implementations might support multiple instances of the cache that is running in a single application. This property lets cache implementers return a name that identifies a specific cache instance.","nodes":[{"pos":[0,208],"content":"Some cache implementations might support multiple instances of the cache that is running in a single application. This property lets cache implementers return a name that identifies a specific cache instance.","nodes":[{"content":"Some cache implementations might support multiple instances of the cache that is running in a single application. This property lets cache implementers return a name that identifies a specific cache instance.","pos":[0,208],"nodes":[{"content":"Some cache implementations might support multiple instances of the cache that is running in a single application.","pos":[0,113]},{"content":"This property lets cache implementers return a name that identifies a specific cache instance.","pos":[114,208]}]}]}],"pos":[77491,77700],"yaml":true,"extradata":"MT"},{"content":"The name of a specific cache instance.","nodes":[{"pos":[0,38],"content":"The name of a specific cache instance.","nodes":[{"content":"The name of a specific cache instance.","pos":[0,38]}]}],"pos":[77817,77856],"yaml":true},{"content":"Indicates that a cache entry has no sliding expiration time.","nodes":[{"pos":[0,60],"content":"Indicates that a cache entry has no sliding expiration time.","nodes":[{"content":"Indicates that a cache entry has no sliding expiration time.","pos":[0,60]}]}],"pos":[78884,78945],"yaml":true},{"content":"Expiration that is based on duration or a defined window of time is also referred to as sliding expiration. Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.  \n  \n A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window. However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.","nodes":[{"pos":[0,275],"content":"Expiration that is based on duration or a defined window of time is also referred to as sliding expiration. Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.","nodes":[{"content":"Expiration that is based on duration or a defined window of time is also referred to as sliding expiration. Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.","pos":[0,275],"nodes":[{"content":"Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.","pos":[0,107]},{"content":"Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.","pos":[108,275]}]}]},{"pos":[282,665],"content":"A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window. However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.","nodes":[{"content":"A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window. However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.","pos":[0,383],"nodes":[{"content":"A cache entry that is inserted into the cache with the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration&gt;</ph> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.","pos":[0,230],"source":"A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window."},{"content":"However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.","pos":[231,383]}]}]}],"pos":[78956,79626],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, removes the cache entry from the cache.","nodes":[{"pos":[0,75],"content":"When overridden in a derived class, removes the cache entry from the cache.","nodes":[{"content":"When overridden in a derived class, removes the cache entry from the cache.","pos":[0,75]}]}],"pos":[80797,80873],"yaml":true},{"content":"If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned. If nothing was removed from the cache, the method should return `null`.  \n  \n> [!NOTE]\n>  Some distributed cache implementations might not support the ability to return the value that was removed from the cache. This might be because the cache implementation does not support returning the value of a removed cache item. It might also be because marshaling the object as a return value is too expensive. In such cases, cache implementations can return `null`.","nodes":[{"pos":[0,249],"content":"If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned. If nothing was removed from the cache, the method should return `null`.","nodes":[{"content":"If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to <ph id=\"ph1\">`key`</ph>, the value of the removed item should be returned.","pos":[0,177],"source":"If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned."},{"content":"If nothing was removed from the cache, the method should return <ph id=\"ph1\">`null`</ph>.","pos":[178,249],"source":" If nothing was removed from the cache, the method should return `null`."}]},{"pos":[257,637],"content":"[!NOTE]\n Some distributed cache implementations might not support the ability to return the value that was removed from the cache. This might be because the cache implementation does not support returning the value of a removed cache item. It might also be because marshaling the object as a return value is too expensive. In such cases, cache implementations can return `null`.","leadings":["","> "],"nodes":[{"content":" Some distributed cache implementations might not support the ability to return the value that was removed from the cache. This might be because the cache implementation does not support returning the value of a removed cache item. It might also be because marshaling the object as a return value is too expensive. In such cases, cache implementations can return `null`.","pos":[8,378],"nodes":[{"content":"Some distributed cache implementations might not support the ability to return the value that was removed from the cache.","pos":[1,122]},{"content":"This might be because the cache implementation does not support returning the value of a removed cache item.","pos":[123,231]},{"content":"It might also be because marshaling the object as a return value is too expensive.","pos":[232,314]},{"content":"In such cases, cache implementations can return <ph id=\"ph1\">`null`</ph>.","pos":[315,370],"source":" In such cases, cache implementations can return `null`."}]}]}],"pos":[80884,81527],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the cache entry.","nodes":[{"pos":[0,40],"content":"A unique identifier for the cache entry.","nodes":[{"content":"A unique identifier for the cache entry.","pos":[0,40]}]}],"pos":[81695,81736],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry was added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,157],"content":"Optional. A named region in the cache to which the cache entry was added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry was added, if regions are implemented.","pos":[10,101]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[102,157],"source":" The default value for the optional parameter is `null`."}]}],"pos":[81802,81960],"yaml":true},{"content":"An object that represents the value of the removed cache entry that was specified by the key, or `null` if the specified entry was not found.","nodes":[{"pos":[0,141],"content":"An object that represents the value of the removed cache entry that was specified by the key, or <ph id=\"ph1\">`null`</ph> if the specified entry was not found.","source":"An object that represents the value of the removed cache entry that was specified by the key, or `null` if the specified entry was not found."}],"pos":[82017,82159],"yaml":true},{"content":"When overridden in a derived class, inserts the cache entry into the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance, specifying information about how the entry will be evicted.","nodes":[{"pos":[0,203],"content":"When overridden in a derived class, inserts the cache entry into the cache as a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.CacheItem\"&gt;&lt;/xref&gt;</ph> instance, specifying information about how the entry will be evicted.","source":"When overridden in a derived class, inserts the cache entry into the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance, specifying information about how the entry will be evicted."}],"pos":[83397,83601],"yaml":true},{"content":"If the key for `item` does not exist, `item` is inserted as a new cache entry. If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.","nodes":[{"pos":[0,220],"content":"If the key for `item` does not exist, `item` is inserted as a new cache entry. If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.","nodes":[{"content":"If the key for <ph id=\"ph1\">`item`</ph> does not exist, <ph id=\"ph2\">`item`</ph> is inserted as a new cache entry.","pos":[0,78],"source":"If the key for `item` does not exist, `item` is inserted as a new cache entry."},{"content":"If an item with a key that matches <ph id=\"ph1\">`item`</ph> exists, the value from <ph id=\"ph2\">`item`</ph> is used to update or overwrite the value of the existing cache entry.","pos":[79,220],"source":" If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry."}]}],"pos":[83612,83833],"yaml":true,"extradata":"MT"},{"content":"The cache item to add.","nodes":[{"pos":[0,22],"content":"The cache item to add.","nodes":[{"content":"The cache item to add.","pos":[0,22]}]}],"pos":[84064,84087],"yaml":true},{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"pos":[0,143],"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","pos":[0,143],"nodes":[{"content":"An object that contains eviction details for the cache entry.","pos":[0,61]},{"content":"This object provides more options for eviction than a simple absolute expiration.","pos":[62,143]}]}]}],"pos":[84174,84318],"yaml":true},{"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.","nodes":[{"pos":[0,115],"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.","nodes":[{"content":"When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.","pos":[0,115]}]}],"pos":[85565,85681],"yaml":true},{"content":"If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry. If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.","nodes":[{"pos":[0,227],"content":"If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry. If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.","nodes":[{"content":"If an item that matches <ph id=\"ph1\">`key`</ph> does not exist in the cache, <ph id=\"ph2\">`value`</ph> and <ph id=\"ph3\">`key`</ph> are used to insert as a new cache entry.","pos":[0,117],"source":"If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry."},{"content":"If an item with a key that matches <ph id=\"ph1\">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id=\"ph2\">`value`</ph>.","pos":[118,227],"source":" If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`."}]}],"pos":[85692,85920],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the cache entry.","nodes":[{"pos":[0,40],"content":"A unique identifier for the cache entry.","nodes":[{"content":"A unique identifier for the cache entry.","pos":[0,40]}]}],"pos":[86132,86173],"yaml":true},{"content":"The object to insert.","nodes":[{"pos":[0,21],"content":"The object to insert.","nodes":[{"content":"The object to insert.","pos":[0,21]}]}],"pos":[86234,86256],"yaml":true},{"content":"The fixed date and time at which the cache entry will expire.","nodes":[{"pos":[0,61],"content":"The fixed date and time at which the cache entry will expire.","nodes":[{"content":"The fixed date and time at which the cache entry will expire.","pos":[0,61]}]}],"pos":[86338,86400],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,160],"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry can be added, if regions are implemented.","pos":[10,104]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[105,160],"source":" The default value for the optional parameter is `null`."}]}],"pos":[86466,86627],"yaml":true},{"content":"When overridden in a derived class, inserts a cache entry into the cache.","nodes":[{"pos":[0,73],"content":"When overridden in a derived class, inserts a cache entry into the cache.","nodes":[{"content":"When overridden in a derived class, inserts a cache entry into the cache.","pos":[0,73]}]}],"pos":[87928,88002],"yaml":true},{"content":"This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.  \n  \n If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry. If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.","nodes":[{"pos":[0,138],"content":"This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.","nodes":[{"content":"This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.","pos":[0,138]}]},{"pos":[145,372],"content":"If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry. If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.","nodes":[{"content":"If an item that matches <ph id=\"ph1\">`key`</ph> does not exist in the cache, <ph id=\"ph2\">`value`</ph> and <ph id=\"ph3\">`key`</ph> are used to insert as a new cache entry.","pos":[0,117],"source":"If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry."},{"content":"If an item with a key that matches <ph id=\"ph1\">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id=\"ph2\">`value`</ph>.","pos":[118,227],"source":" If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`."}]}],"pos":[88013,88390],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the cache entry.","nodes":[{"pos":[0,40],"content":"A unique identifier for the cache entry.","nodes":[{"content":"A unique identifier for the cache entry.","pos":[0,40]}]}],"pos":[88614,88655],"yaml":true},{"content":"The object to insert.","nodes":[{"pos":[0,21],"content":"The object to insert.","nodes":[{"content":"The object to insert.","pos":[0,21]}]}],"pos":[88716,88738],"yaml":true},{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"pos":[0,143],"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","nodes":[{"content":"An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.","pos":[0,143],"nodes":[{"content":"An object that contains eviction details for the cache entry.","pos":[0,61]},{"content":"This object provides more options for eviction than a simple absolute expiration.","pos":[62,143]}]}]}],"pos":[88825,88969],"yaml":true},{"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"pos":[0,160],"content":"Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A named region in the cache to which the cache entry can be added, if regions are implemented.","pos":[10,104]},{"content":"The default value for the optional parameter is <ph id=\"ph1\">`null`</ph>.","pos":[105,160],"source":" The default value for the optional parameter is `null`."}]}],"pos":[89035,89196],"yaml":true},{"content":"Supports iteration over a generic collection.","nodes":[{"pos":[0,45],"content":"Supports iteration over a generic collection.","nodes":[{"content":"Supports iteration over a generic collection.","pos":[0,45]}]}],"pos":[92183,92229],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.  \n  \n Developers can use this method to iterate through a generic collection of cache entries.  \n  \n This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.","nodes":[{"pos":[0,208],"content":"This member is an explicit interface member implementation. It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.","pos":[0,208],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when a derived <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.","pos":[60,208],"source":" It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface."}]}]},{"pos":[215,303],"content":"Developers can use this method to iterate through a generic collection of cache entries.","nodes":[{"content":"Developers can use this method to iterate through a generic collection of cache entries.","pos":[0,88]}]},{"pos":[310,492],"content":"This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.","nodes":[{"content":"This is the default <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> implementation that internally calls the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;</ph> method.","pos":[0,182],"source":"This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method."}]}],"pos":[92240,92739],"yaml":true,"extradata":"MT"},{"content":"The enumerator object that provides access to the items in the cache.","nodes":[{"pos":[0,69],"content":"The enumerator object that provides access to the items in the cache.","nodes":[{"content":"The enumerator object that provides access to the items in the cache.","pos":[0,69]}]}],"pos":[92916,92986],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Caching.ObjectCache\n  commentId: T:System.Runtime.Caching.ObjectCache\n  id: ObjectCache\n  children:\n  - System.Runtime.Caching.ObjectCache.#ctor\n  - System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)\n  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)\n  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  - System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)\n  - System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)\n  - System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities\n  - System.Runtime.Caching.ObjectCache.Get(System.String,System.String)\n  - System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)\n  - System.Runtime.Caching.ObjectCache.GetCount(System.String)\n  - System.Runtime.Caching.ObjectCache.GetEnumerator\n  - System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)\n  - System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])\n  - System.Runtime.Caching.ObjectCache.Host\n  - System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration\n  - System.Runtime.Caching.ObjectCache.Item(System.String)\n  - System.Runtime.Caching.ObjectCache.Name\n  - System.Runtime.Caching.ObjectCache.NoSlidingExpiration\n  - System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)\n  - System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)\n  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  - System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator\n  - System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: ObjectCache\n  nameWithType: ObjectCache\n  fullName: System.Runtime.Caching.ObjectCache\n  type: Class\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Represents an object cache and provides the base methods and properties for accessing the object cache.\n  remarks: \"The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache. To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].  \\n  \\n The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class. The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.\"\n  syntax:\n    content: 'public abstract class ObjectCache : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Runtime.Caching.MemoryCache\n  implements:\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.#ctor\n  commentId: M:System.Runtime.Caching.ObjectCache.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: ObjectCache()\n  nameWithType: ObjectCache.ObjectCache()\n  fullName: ObjectCache.ObjectCache()\n  type: Constructor\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Called from constructors in derived classes in order to initialize the <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> class.\n  syntax:\n    content: protected ObjectCache ();\n    parameters: []\n  overload: System.Runtime.Caching.ObjectCache.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  commentId: M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  id: Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Add(CacheItem, CacheItemPolicy)\n  nameWithType: ObjectCache.Add(CacheItem, CacheItemPolicy)\n  fullName: ObjectCache.Add(CacheItem, CacheItemPolicy)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, tries to insert a cache entry into the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance, and adds details about how the entry should be evicted.\n  remarks: The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.\n  syntax:\n    content: public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);\n    parameters:\n    - id: item\n      type: System.Runtime.Caching.CacheItem\n      description: The object to add.\n    - id: policy\n      type: System.Runtime.Caching.CacheItemPolicy\n      description: An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.\n    return:\n      type: System.Boolean\n      description: '`true` if insertion succeeded, or `false` if there is an already an entry in the cache that has the same key as <code>item</code>.'\n  overload: System.Runtime.Caching.ObjectCache.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)\n  id: Add(System.String,System.Object,System.DateTimeOffset,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Add(String, Object, DateTimeOffset, String)\n  nameWithType: ObjectCache.Add(String, Object, DateTimeOffset, String)\n  fullName: ObjectCache.Add(String, Object, DateTimeOffset, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.\n  remarks: The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.\n  syntax:\n    content: public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry.\n    - id: value\n      type: System.Object\n      description: The object to insert.\n    - id: absoluteExpiration\n      type: System.DateTimeOffset\n      description: The fixed date and time at which the cache entry will expire. This parameter is required when the <xref href=\"System.Runtime.Caching.ObjectCache.Add*\"></xref> method is called.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if insertion succeeded, or `false` if there is an already an entry in the cache that has the same key as <code>key</code>.'\n  overload: System.Runtime.Caching.ObjectCache.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  id: Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Add(String, Object, CacheItemPolicy, String)\n  nameWithType: ObjectCache.Add(String, Object, CacheItemPolicy, String)\n  fullName: ObjectCache.Add(String, Object, CacheItemPolicy, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.\n  remarks: The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. This reduces the number of method overloads that a cache implementer has to provide. If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.\n  syntax:\n    content: public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry.\n    - id: value\n      type: System.Object\n      description: The object to insert.\n    - id: policy\n      type: System.Runtime.Caching.CacheItemPolicy\n      description: An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the insertion try succeeds, or `false` if there is an already an entry in the cache with the same key as <code>key</code>.'\n  overload: System.Runtime.Caching.ObjectCache.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  commentId: M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  id: AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: AddOrGetExisting(CacheItem, CacheItemPolicy)\n  nameWithType: ObjectCache.AddOrGetExisting(CacheItem, CacheItemPolicy)\n  fullName: ObjectCache.AddOrGetExisting(CacheItem, CacheItemPolicy)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, inserts the specified <xref href=\"System.Runtime.Caching.CacheItem\"></xref> object into the cache, specifying information about how the entry will be evicted.\n  syntax:\n    content: public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);\n    parameters:\n    - id: value\n      type: System.Runtime.Caching.CacheItem\n      description: The object to insert.\n    - id: policy\n      type: System.Runtime.Caching.CacheItemPolicy\n      description: An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.\n    return:\n      type: System.Runtime.Caching.CacheItem\n      description: If a cache entry with the same key exists, the specified cache entry; otherwise, `null`.\n  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)\n  id: AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: AddOrGetExisting(String, Object, DateTimeOffset, String)\n  nameWithType: ObjectCache.AddOrGetExisting(String, Object, DateTimeOffset, String)\n  fullName: ObjectCache.AddOrGetExisting(String, Object, DateTimeOffset, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.\n  remarks: This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.\n  syntax:\n    content: public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry.\n    - id: value\n      type: System.Object\n      description: The object to insert.\n    - id: absoluteExpiration\n      type: System.DateTimeOffset\n      description: The fixed date and time at which the cache entry will expire.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Object\n      description: If a cache entry with the same key exists, the specified cache entry's value; otherwise, `null`.\n  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  id: AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: AddOrGetExisting(String, Object, CacheItemPolicy, String)\n  nameWithType: ObjectCache.AddOrGetExisting(String, Object, CacheItemPolicy, String)\n  fullName: ObjectCache.AddOrGetExisting(String, Object, CacheItemPolicy, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.\n  remarks: The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.\n  syntax:\n    content: public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry.\n    - id: value\n      type: System.Object\n      description: The object to insert.\n    - id: policy\n      type: System.Runtime.Caching.CacheItemPolicy\n      description: An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Object\n      description: If a cache entry with the same key exists, the specified cache entry's value; otherwise, `null`.\n  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)\n  id: Contains(System.String,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Contains(String, String)\n  nameWithType: ObjectCache.Contains(String, String)\n  fullName: ObjectCache.Contains(String, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, checks whether the cache entry already exists in the cache.\n  syntax:\n    content: public abstract bool Contains (string key, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache where the cache can be found, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the cache contains a cache entry with the same key value as <code>key</code>; otherwise, `false`.'\n  overload: System.Runtime.Caching.ObjectCache.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)\n  id: CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: CreateCacheEntryChangeMonitor(IEnumerable<String>, String)\n  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>, String)\n  fullName: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, creates a <xref href=\"System.Runtime.Caching.CacheEntryChangeMonitor\"></xref> object that can trigger events in response to changes to specified cache entries.\n  remarks: \"When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object. This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter. For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.  \\n  \\n If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter. Otherwise, the parameter defaults to `null`.  \\n  \\n> [!NOTE]\\n>  Not all cache implementations support cache-entry change monitors. To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.\"\n  syntax:\n    content: public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);\n    parameters:\n    - id: keys\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The unique identifiers for cache entries to monitor.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache where the cache keys in the <code>keys</code> parameter exist, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Runtime.Caching.CacheEntryChangeMonitor\n      description: A change monitor that monitors cache entries in the cache.\n  overload: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities\n  commentId: P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities\n  id: DefaultCacheCapabilities\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: DefaultCacheCapabilities\n  nameWithType: ObjectCache.DefaultCacheCapabilities\n  fullName: ObjectCache.DefaultCacheCapabilities\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, gets a description of the features that a cache implementation provides.\n  syntax:\n    content: public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }\n    return:\n      type: System.Runtime.Caching.DefaultCacheCapabilities\n      description: A bitwise combination of flags that indicate the default capabilities of a cache implementation.\n  overload: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)\n  id: Get(System.String,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Get(String, String)\n  nameWithType: ObjectCache.Get(String, String)\n  fullName: ObjectCache.Get(String, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, gets the specified cache entry from the cache as an object.\n  syntax:\n    content: public abstract object Get (string key, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry to get.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry was added, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Object\n      description: The cache entry that is identified by <code>key</code>.\n  overload: System.Runtime.Caching.ObjectCache.Get*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)\n  id: GetCacheItem(System.String,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: GetCacheItem(String, String)\n  nameWithType: ObjectCache.GetCacheItem(String, String)\n  fullName: ObjectCache.GetCacheItem(String, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, gets the specified cache entry from the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance.\n  remarks: \"This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class. In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data. However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.  \\n  \\n The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.\"\n  syntax:\n    content: public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry to get.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache was added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is `null`.\n    return:\n      type: System.Runtime.Caching.CacheItem\n      description: The cache entry that is identified by <code>key</code>.\n  overload: System.Runtime.Caching.ObjectCache.GetCacheItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.GetCount(System.String)\n  id: GetCount(System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: GetCount(String)\n  nameWithType: ObjectCache.GetCount(String)\n  fullName: ObjectCache.GetCount(String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, gets the total number of cache entries in the cache.\n  syntax:\n    content: public abstract long GetCount (string regionName = null);\n    parameters:\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache for which the cache entry count should be computed, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Int64\n      description: The number of cache entries in the cache. If <code>regionName</code> is not `null`, the count indicates the number of entries that are in the specified cache region.\n  overload: System.Runtime.Caching.ObjectCache.GetCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.GetEnumerator\n  commentId: M:System.Runtime.Caching.ObjectCache.GetEnumerator\n  id: GetEnumerator\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ObjectCache.GetEnumerator()\n  fullName: ObjectCache.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.\n  remarks: \"Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.  \\n  \\n> [!NOTE]\\n>  Returning an enumerator is typically a more expensive operation than returning the entire cache entry.  \\n  \\n This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.\"\n  syntax:\n    content: protected abstract System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n      description: The enumerator object that provides access to the cache entries in the cache.\n  overload: System.Runtime.Caching.ObjectCache.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)\n  id: GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: GetValues(IEnumerable<String>, String)\n  nameWithType: ObjectCache.GetValues(IEnumerable<String>, String)\n  fullName: ObjectCache.GetValues(IEnumerable<String>, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.\n  remarks: \"The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.  \\n  \\n Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache. Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.\"\n  syntax:\n    content: public abstract System.Collections.Generic.IDictionary<string,object> GetValues (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);\n    parameters:\n    - id: keys\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: A collection of unique identifiers for the cache entries to get.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry or entries were added, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A dictionary of key/value pairs that represent cache entries.\n  overload: System.Runtime.Caching.ObjectCache.GetValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])\n  commentId: M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])\n  id: GetValues(System.String,System.String[])\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: GetValues(String, String[])\n  nameWithType: ObjectCache.GetValues(String, String[])\n  fullName: ObjectCache.GetValues(String, String[])\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Gets a set of cache entries that correspond to the specified keys.\n  remarks: \"The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=fullName> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.  \\n  \\n This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.\"\n  syntax:\n    content: public virtual System.Collections.Generic.IDictionary<string,object> GetValues (string regionName, string[] keys);\n    parameters:\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry or entries were added, if regions are implemented. Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is `null`.\n    - id: keys\n      type: System.String[]\n      description: A collection of unique identifiers for the cache entries to get.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A dictionary of key/value pairs that represent cache entries.\n  overload: System.Runtime.Caching.ObjectCache.GetValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Host\n  commentId: P:System.Runtime.Caching.ObjectCache.Host\n  id: Host\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Host\n  nameWithType: ObjectCache.Host\n  fullName: ObjectCache.Host\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Gets or set a reference to a managed hosting environment that is available to <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> implementations and that can provide host-specific services to <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> implementations.\n  remarks: \"The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.  \\n  \\n The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.|  \\n|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].|  \\n|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|Lets cache implementations report cache memory consumption to the host environment. This enables host environments to centrally manage memory consumption across multiple cache implementations.|  \\n  \\n> [!NOTE]\\n>  Callers of this property value require unrestricted code access security permissions.\"\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      [set: System.Security.SecurityCritical]\n\n      public static IServiceProvider Host { get; set; }\n    return:\n      type: System.IServiceProvider\n      description: A reference to a cache-aware managed hosting environment.\n  overload: System.Runtime.Caching.ObjectCache.Host*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value being assigned to the property is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to set the property value more than one time.\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration\n  commentId: F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration\n  id: InfiniteAbsoluteExpiration\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: InfiniteAbsoluteExpiration\n  nameWithType: ObjectCache.InfiniteAbsoluteExpiration\n  fullName: ObjectCache.InfiniteAbsoluteExpiration\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Gets a value that indicates that a cache entry has no absolute expiration.\n  remarks: A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time. However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.\n  syntax:\n    content: public static readonly DateTimeOffset InfiniteAbsoluteExpiration;\n    return:\n      type: System.DateTimeOffset\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Item(System.String)\n  commentId: P:System.Runtime.Caching.ObjectCache.Item(System.String)\n  id: Item(System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ObjectCache.Item(String)\n  fullName: ObjectCache.Item(String)\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Gets or sets the default indexer for the <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> class.\n  remarks: \"The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method. Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method. However this behavior is ultimately up to the cache implementation.  \\n  \\n The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.\"\n  syntax:\n    content: public abstract object this[string key] { get; set; }\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for a cache entry in the cache.\n    return:\n      type: System.Object\n      description: A key that serves as an indexer into the cache instance.\n  overload: System.Runtime.Caching.ObjectCache.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Name\n  commentId: P:System.Runtime.Caching.ObjectCache.Name\n  id: Name\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ObjectCache.Name\n  fullName: ObjectCache.Name\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Gets the name of a specific <xref href=\"System.Runtime.Caching.ObjectCache\"></xref> instance.\n  remarks: Some cache implementations might support multiple instances of the cache that is running in a single application. This property lets cache implementers return a name that identifies a specific cache instance.\n  syntax:\n    content: public abstract string Name { get; }\n    return:\n      type: System.String\n      description: The name of a specific cache instance.\n  overload: System.Runtime.Caching.ObjectCache.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration\n  commentId: F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration\n  id: NoSlidingExpiration\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: NoSlidingExpiration\n  nameWithType: ObjectCache.NoSlidingExpiration\n  fullName: ObjectCache.NoSlidingExpiration\n  type: Field\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Indicates that a cache entry has no sliding expiration time.\n  remarks: \"Expiration that is based on duration or a defined window of time is also referred to as sliding expiration. Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.  \\n  \\n A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window. However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.\"\n  syntax:\n    content: public static readonly TimeSpan NoSlidingExpiration;\n    return:\n      type: System.TimeSpan\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)\n  id: Remove(System.String,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Remove(String, String)\n  nameWithType: ObjectCache.Remove(String, String)\n  fullName: ObjectCache.Remove(String, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, removes the cache entry from the cache.\n  remarks: \"If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned. If nothing was removed from the cache, the method should return `null`.  \\n  \\n> [!NOTE]\\n>  Some distributed cache implementations might not support the ability to return the value that was removed from the cache. This might be because the cache implementation does not support returning the value of a removed cache item. It might also be because marshaling the object as a return value is too expensive. In such cases, cache implementations can return `null`.\"\n  syntax:\n    content: public abstract object Remove (string key, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry was added, if regions are implemented. The default value for the optional parameter is `null`.\n    return:\n      type: System.Object\n      description: An object that represents the value of the removed cache entry that was specified by the key, or `null` if the specified entry was not found.\n  overload: System.Runtime.Caching.ObjectCache.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  commentId: M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  id: Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Set(CacheItem, CacheItemPolicy)\n  nameWithType: ObjectCache.Set(CacheItem, CacheItemPolicy)\n  fullName: ObjectCache.Set(CacheItem, CacheItemPolicy)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, inserts the cache entry into the cache as a <xref href=\"System.Runtime.Caching.CacheItem\"></xref> instance, specifying information about how the entry will be evicted.\n  remarks: If the key for `item` does not exist, `item` is inserted as a new cache entry. If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.\n  syntax:\n    content: public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);\n    parameters:\n    - id: item\n      type: System.Runtime.Caching.CacheItem\n      description: The cache item to add.\n    - id: policy\n      type: System.Runtime.Caching.CacheItemPolicy\n      description: An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.\n  overload: System.Runtime.Caching.ObjectCache.Set*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)\n  id: Set(System.String,System.Object,System.DateTimeOffset,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Set(String, Object, DateTimeOffset, String)\n  nameWithType: ObjectCache.Set(String, Object, DateTimeOffset, String)\n  fullName: ObjectCache.Set(String, Object, DateTimeOffset, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.\n  remarks: If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry. If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.\n  syntax:\n    content: public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry.\n    - id: value\n      type: System.Object\n      description: The object to insert.\n    - id: absoluteExpiration\n      type: System.DateTimeOffset\n      description: The fixed date and time at which the cache entry will expire.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.\n  overload: System.Runtime.Caching.ObjectCache.Set*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  commentId: M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  id: Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: Set(String, Object, CacheItemPolicy, String)\n  nameWithType: ObjectCache.Set(String, Object, CacheItemPolicy, String)\n  fullName: ObjectCache.Set(String, Object, CacheItemPolicy, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: When overridden in a derived class, inserts a cache entry into the cache.\n  remarks: \"This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.  \\n  \\n If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry. If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.\"\n  syntax:\n    content: public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);\n    parameters:\n    - id: key\n      type: System.String\n      description: A unique identifier for the cache entry.\n    - id: value\n      type: System.Object\n      description: The object to insert.\n    - id: policy\n      type: System.Runtime.Caching.CacheItemPolicy\n      description: An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.\n    - id: regionName\n      type: System.String\n      description: Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is `null`.\n  overload: System.Runtime.Caching.ObjectCache.Set*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator\n  commentId: M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator\n  isEii: true\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()\n  nameWithType: ObjectCache.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()\n  fullName: ObjectCache.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> IEnumerable<KeyValuePair<string,object>>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n      description: ''\n  overload: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Runtime.Caching.ObjectCache\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: ObjectCache.IEnumerable.GetEnumerator()\n  fullName: ObjectCache.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Supports iteration over a generic collection.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.  \\n  \\n Developers can use this method to iterate through a generic collection of cache entries.  \\n  \\n This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: The enumerator object that provides access to the items in the cache.\n  overload: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Runtime.Caching.ObjectCache.#ctor\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: ObjectCache()\n  nameWithType: ObjectCache.ObjectCache()\n  fullName: ObjectCache.ObjectCache()\n- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Add(CacheItem, CacheItemPolicy)\n  nameWithType: ObjectCache.Add(CacheItem, CacheItemPolicy)\n  fullName: ObjectCache.Add(CacheItem, CacheItemPolicy)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Caching.CacheItem\n  parent: System.Runtime.Caching\n  isExternal: false\n  name: CacheItem\n  nameWithType: CacheItem\n  fullName: System.Runtime.Caching.CacheItem\n- uid: System.Runtime.Caching.CacheItemPolicy\n  parent: System.Runtime.Caching\n  isExternal: false\n  name: CacheItemPolicy\n  nameWithType: CacheItemPolicy\n  fullName: System.Runtime.Caching.CacheItemPolicy\n- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Add(String, Object, DateTimeOffset, String)\n  nameWithType: ObjectCache.Add(String, Object, DateTimeOffset, String)\n  fullName: ObjectCache.Add(String, Object, DateTimeOffset, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Add(String, Object, CacheItemPolicy, String)\n  nameWithType: ObjectCache.Add(String, Object, CacheItemPolicy, String)\n  fullName: ObjectCache.Add(String, Object, CacheItemPolicy, String)\n- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: AddOrGetExisting(CacheItem, CacheItemPolicy)\n  nameWithType: ObjectCache.AddOrGetExisting(CacheItem, CacheItemPolicy)\n  fullName: ObjectCache.AddOrGetExisting(CacheItem, CacheItemPolicy)\n- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: AddOrGetExisting(String, Object, DateTimeOffset, String)\n  nameWithType: ObjectCache.AddOrGetExisting(String, Object, DateTimeOffset, String)\n  fullName: ObjectCache.AddOrGetExisting(String, Object, DateTimeOffset, String)\n- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: AddOrGetExisting(String, Object, CacheItemPolicy, String)\n  nameWithType: ObjectCache.AddOrGetExisting(String, Object, CacheItemPolicy, String)\n  fullName: ObjectCache.AddOrGetExisting(String, Object, CacheItemPolicy, String)\n- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Contains(String, String)\n  nameWithType: ObjectCache.Contains(String, String)\n  fullName: ObjectCache.Contains(String, String)\n- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: CreateCacheEntryChangeMonitor(IEnumerable<String>, String)\n  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>, String)\n  fullName: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>, String)\n- uid: System.Runtime.Caching.CacheEntryChangeMonitor\n  parent: System.Runtime.Caching\n  isExternal: false\n  name: CacheEntryChangeMonitor\n  nameWithType: CacheEntryChangeMonitor\n  fullName: System.Runtime.Caching.CacheEntryChangeMonitor\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: DefaultCacheCapabilities\n  nameWithType: ObjectCache.DefaultCacheCapabilities\n  fullName: ObjectCache.DefaultCacheCapabilities\n- uid: System.Runtime.Caching.DefaultCacheCapabilities\n  parent: System.Runtime.Caching\n  isExternal: false\n  name: DefaultCacheCapabilities\n  nameWithType: DefaultCacheCapabilities\n  fullName: System.Runtime.Caching.DefaultCacheCapabilities\n- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Get(String, String)\n  nameWithType: ObjectCache.Get(String, String)\n  fullName: ObjectCache.Get(String, String)\n- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetCacheItem(String, String)\n  nameWithType: ObjectCache.GetCacheItem(String, String)\n  fullName: ObjectCache.GetCacheItem(String, String)\n- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetCount(String)\n  nameWithType: ObjectCache.GetCount(String)\n  fullName: ObjectCache.GetCount(String)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Runtime.Caching.ObjectCache.GetEnumerator\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ObjectCache.GetEnumerator()\n  fullName: ObjectCache.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<KeyValuePair<String,Object>>\n  nameWithType: IEnumerator<KeyValuePair<String,Object>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetValues(IEnumerable<String>, String)\n  nameWithType: ObjectCache.GetValues(IEnumerable<String>, String)\n  fullName: ObjectCache.GetValues(IEnumerable<String>, String)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetValues(String, String[])\n  nameWithType: ObjectCache.GetValues(String, String[])\n  fullName: ObjectCache.GetValues(String, String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Caching.ObjectCache.Host\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Host\n  nameWithType: ObjectCache.Host\n  fullName: ObjectCache.Host\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: InfiniteAbsoluteExpiration\n  nameWithType: ObjectCache.InfiniteAbsoluteExpiration\n  fullName: ObjectCache.InfiniteAbsoluteExpiration\n- uid: System.Runtime.Caching.ObjectCache.Item(System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Item(String)\n  nameWithType: ObjectCache.Item(String)\n  fullName: ObjectCache.Item(String)\n- uid: System.Runtime.Caching.ObjectCache.Name\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Name\n  nameWithType: ObjectCache.Name\n  fullName: ObjectCache.Name\n- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: NoSlidingExpiration\n  nameWithType: ObjectCache.NoSlidingExpiration\n  fullName: ObjectCache.NoSlidingExpiration\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Remove(String, String)\n  nameWithType: ObjectCache.Remove(String, String)\n  fullName: ObjectCache.Remove(String, String)\n- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Set(CacheItem, CacheItemPolicy)\n  nameWithType: ObjectCache.Set(CacheItem, CacheItemPolicy)\n  fullName: ObjectCache.Set(CacheItem, CacheItemPolicy)\n- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Set(String, Object, DateTimeOffset, String)\n  nameWithType: ObjectCache.Set(String, Object, DateTimeOffset, String)\n  fullName: ObjectCache.Set(String, Object, DateTimeOffset, String)\n- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Set(String, Object, CacheItemPolicy, String)\n  nameWithType: ObjectCache.Set(String, Object, CacheItemPolicy, String)\n  fullName: ObjectCache.Set(String, Object, CacheItemPolicy, String)\n- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()\n  nameWithType: ObjectCache.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()\n  fullName: ObjectCache.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()\n- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: ObjectCache.IEnumerable.GetEnumerator()\n  fullName: ObjectCache.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Runtime.Caching.ObjectCache.Add*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Add\n  nameWithType: ObjectCache.Add\n  fullName: ObjectCache.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: AddOrGetExisting\n  nameWithType: ObjectCache.AddOrGetExisting\n  fullName: ObjectCache.AddOrGetExisting\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.Set*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Set\n  nameWithType: ObjectCache.Set\n  fullName: ObjectCache.Set\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.#ctor*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: ObjectCache\n  nameWithType: ObjectCache.ObjectCache\n  fullName: ObjectCache.ObjectCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.Contains*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Contains\n  nameWithType: ObjectCache.Contains\n  fullName: ObjectCache.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: CreateCacheEntryChangeMonitor\n  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor\n  fullName: ObjectCache.CreateCacheEntryChangeMonitor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: DefaultCacheCapabilities\n  nameWithType: ObjectCache.DefaultCacheCapabilities\n  fullName: ObjectCache.DefaultCacheCapabilities\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.Get*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Get\n  nameWithType: ObjectCache.Get\n  fullName: ObjectCache.Get\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.GetCacheItem*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetCacheItem\n  nameWithType: ObjectCache.GetCacheItem\n  fullName: ObjectCache.GetCacheItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.GetCount*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetCount\n  nameWithType: ObjectCache.GetCount\n  fullName: ObjectCache.GetCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.GetEnumerator*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ObjectCache.GetEnumerator\n  fullName: ObjectCache.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.GetValues*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: GetValues\n  nameWithType: ObjectCache.GetValues\n  fullName: ObjectCache.GetValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.Host*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Host\n  nameWithType: ObjectCache.Host\n  fullName: ObjectCache.Host\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.Item*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Item\n  nameWithType: ObjectCache.Item\n  fullName: ObjectCache.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.Name*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Name\n  nameWithType: ObjectCache.Name\n  fullName: ObjectCache.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.Remove*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: Remove\n  nameWithType: ObjectCache.Remove\n  fullName: ObjectCache.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator\n  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator\n  fullName: ObjectCache.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Runtime.Caching.ObjectCache\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator\n  fullName: ObjectCache.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/ObjectCache.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,Object>>\n  nameWithType: IEnumerable<KeyValuePair<String,Object>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}