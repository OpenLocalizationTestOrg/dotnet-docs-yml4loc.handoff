### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Network
  commentId: T:Microsoft.VisualBasic.Devices.Network
  id: Network
  children:
  - Microsoft.VisualBasic.Devices.Network.#ctor
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.IsAvailable
  - Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  - Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  langs:
  - csharp
  name: Network
  nameWithType: Network
  fullName: Microsoft.VisualBasic.Devices.Network
  type: Class
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Provides a property, event, and methods for interacting with the network to which the computer is connected.
  remarks: "The following table lists examples of tasks involving the `My.Computer.Network` object.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  \n|Check connection status|[How to: Check Connection Status](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|"
  example:
  - "This example uploads the file `Order.txt` to http://www.cohowinery.com/uploads.  \n  \n [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]"
  syntax:
    content: public class Network
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.#ctor
  commentId: M:Microsoft.VisualBasic.Devices.Network.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Network()
  nameWithType: Network.Network()
  fullName: Network.Network()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Initializes a new instance of the <xref href="Microsoft.VisualBasic.Devices.Network"></xref> class.
  syntax:
    content: public Network ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Network.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  id: DownloadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String, String)
  nameWithType: Network.DownloadFile(String, String)
  fullName: Network.DownloadFile(String, String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If the destination file already exists, the `DownloadFile` method will not overwrite the existing file. You can use one of the other overloads of the <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> method to instruct it to overwrite existing files, provide user credentials, or specify a specific timeout value.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName);
    parameters:
    - id: address
      type: System.String
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the default timeout (100 seconds).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  id: DownloadFile(System.Uri,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri, String)
  nameWithType: Network.DownloadFile(Uri, String)
  fullName: Network.DownloadFile(Uri, String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If the destination file already exists, the `DownloadFile` method will not overwrite the existing file. You can use one of the other overloads of the <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> method to instruct it to overwrite existing files, provide user credentials, or specify a specific timeout value. `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName);
    parameters:
    - id: address
      type: System.Uri
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the default timeout (100 seconds).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  id: DownloadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String, String, String, String)
  nameWithType: Network.DownloadFile(String, String, String, String)
  fullName: Network.DownloadFile(String, String, String, String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If the destination file already exists, the `DownloadFile` method will not overwrite the existing file. You can use one of the other overloads of the <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> method to instruct it to overwrite existing files or specify a specific timeout value.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password);
    parameters:
    - id: address
      type: System.String
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
    - id: userName
      type: System.String
      description: User name to authenticate. Default is an empty string, "".
    - id: password
      type: System.String
      description: Password to authenticate. Default is an empty string, "".
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the default timeout (100 seconds).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  id: DownloadFile(System.Uri,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri, String, String, String)
  nameWithType: Network.DownloadFile(Uri, String, String, String)
  fullName: Network.DownloadFile(Uri, String, String, String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If the destination file already exists, the `DownloadFile` method will not overwrite the existing file. You can use one of the other overloads of the <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> method to instruct it to overwrite existing files or specify a specific timeout value.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password);
    parameters:
    - id: address
      type: System.Uri
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
    - id: userName
      type: System.String
      description: User name to authenticate. Default is an empty string, "".
    - id: password
      type: System.String
      description: Password to authenticate. Default is an empty string, "".
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the default timeout (100 seconds).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean)
  nameWithType: Network.DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean)
  fullName: Network.DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If `showUI` is set to `True`, a dialog box appears that shows the progress of the operation; the dialog box contains a **Cancel** button that can be used to cancel the operation. The dialog box is not modal, and therefore does not block user input to other windows in the program.  \n  \n If the server does not respond within the specified `connectionTimeout`, the operation is cancelled, and an exception is thrown.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.Uri
      description: '`String` or <xref href="System.Uri"></xref>. Path of the file to download, including file name and host address.'
    - id: destinationFileName
      type: System.String
      description: '`String`. File name and path of the downloaded file.'
    - id: networkCredentials
      type: System.Net.ICredentials
      description: <xref href="System.Net.ICredentials"></xref>. Credentials to be supplied.
    - id: showUI
      type: System.Boolean
      description: '`True` to display the progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval, in milliseconds. Default is 100 seconds.
    - id: overwrite
      type: System.Boolean
      description: '`True` to overwrite existing files; otherwise `False`. Default is `False`.'
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>overwrite</code> is set to `False` and the destination file already exists.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String, String, String, String, Boolean, Int32, Boolean)
  nameWithType: Network.DownloadFile(String, String, String, String, Boolean, Int32, Boolean)
  fullName: Network.DownloadFile(String, String, String, String, Boolean, Int32, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If `showUI` is set to `True`, a dialog box appears that shows the progress of the operation; the dialog box contains a **Cancel** button that can be used to cancel the operation. The dialog box is not modal, and therefore does not block user input to other windows in the program.  \n  \n If the server does not respond within the specified `connectionTimeout`, the operation is cancelled, and an exception is thrown.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.String
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
    - id: userName
      type: System.String
      description: User name to authenticate. Default is an empty string, "".
    - id: password
      type: System.String
      description: Password to authenticate. Default is an empty string, "".
    - id: showUI
      type: System.Boolean
      description: '`True` to display the progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: <xref href="System.Int32"></xref>. Timeout interval, in milliseconds. Default is 100 seconds.
    - id: overwrite
      type: System.Boolean
      description: '`True` to overwrite existing files; otherwise `False`. Default is `False`.'
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>overwrite</code> is set to `False` and the destination file already exists.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean, UICancelOption)
  nameWithType: Network.DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean, UICancelOption)
  fullName: Network.DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean, UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If `showUI` is set to `True`, a dialog box appears that shows the progress of the operation; the dialog box contains a **Cancel** button that can be used to cancel the operation. The dialog box is not modal, and therefore does not block user input to other windows in the program.  \n  \n If the server does not respond within the specified `connectionTimeout`, the operation is cancelled, and an exception is thrown.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.Uri
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
    - id: networkCredentials
      type: System.Net.ICredentials
      description: Credentials to be supplied.
    - id: showUI
      type: System.Boolean
      description: '`True` to display the progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval, in milliseconds. Default is 100 seconds.
    - id: overwrite
      type: System.Boolean
      description: '`True` to overwrite existing files; otherwise `False`. Default is `False`.'
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <code>showUI</code> set to `True`. Default is <xref href="Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException"></xref>.
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>overwrite</code> is set to `False` and the destination file already exists.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean)
  nameWithType: Network.DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean)
  fullName: Network.DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If `showUI` is set to `True`, a dialog box appears that shows the progress of the operation; the dialog box contains a **Cancel** button that can be used to cancel the operation. The dialog box is not modal, and therefore does not block user input to other windows in the program.  \n  \n If the server does not respond within the specified `connectionTimeout`, the operation is cancelled, and an exception is thrown.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.Uri
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
    - id: userName
      type: System.String
      description: User name to authenticate. Default is an empty string, "".
    - id: password
      type: System.String
      description: Password to authenticate. Default is an empty string, "".
    - id: showUI
      type: System.Boolean
      description: '`True` to display the progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval, in milliseconds. Default is 100 seconds.
    - id: overwrite
      type: System.Boolean
      description: '`True` to overwrite existing files; otherwise `False`. Default is `False`.'
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>overwrite</code> is set to `False` and the destination file already exists.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  nameWithType: Network.DownloadFile(String, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  fullName: Network.DownloadFile(String, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If `showUI` is set to `True`, a dialog box appears that shows the progress of the operation; the dialog box contains a **Cancel** button that can be used to cancel the operation. The dialog box is not modal, and therefore does not block user input to other windows in the program.  \n  \n If the server does not respond within the specified `connectionTimeout`, the operation is cancelled, and an exception is thrown.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.String
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
    - id: userName
      type: System.String
      description: User name to authenticate. Default is an empty string, "".
    - id: password
      type: System.String
      description: Password to authenticate. Default is an empty string, "".
    - id: showUI
      type: System.Boolean
      description: '`True` to display the progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval, in milliseconds. Default is 100 seconds.
    - id: overwrite
      type: System.Boolean
      description: '`True` to overwrite existing files; otherwise `False`. Default is `False`.'
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <code>ShowUI</code> set to `True`. Default is <xref href="Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException"></xref>.
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>overwrite</code> is set to `False` and the destination file already exists.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  commentId: M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  nameWithType: Network.DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  fullName: Network.DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Downloads the specified remote file and saves it in the specified location.
  remarks: "If `showUI` is set to `True`, a dialog box appears that shows the progress of the operation; the dialog box contains a **Cancel** button that can be used to cancel the operation. The dialog box is not modal, and therefore does not block user input to other windows in the program.  \n  \n If the server does not respond within the specified `connectionTimeout`, the operation is cancelled, and an exception is thrown.  \n  \n `DownloadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The `DownloadFile` method does not send optional HTTP headers. Some servers may return 500 (Internal Server Error) if the optional user agent header is missing. To send optional headers, you must construct a request using the <xref:System.Net.WebClient> class.  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.DownloadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Download a file|[How to: Download a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.Uri
      description: Path of the file to download, including file name and host address.
    - id: destinationFileName
      type: System.String
      description: File name and path of the downloaded file.
    - id: userName
      type: System.String
      description: User name to authenticate. Default is an empty string, "".
    - id: password
      type: System.String
      description: Password to authenticate. Default is an empty string, "".
    - id: showUI
      type: System.Boolean
      description: '`True` to display the progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval, in milliseconds. Default is 100 seconds.
    - id: overwrite
      type: System.Boolean
      description: '`True` to overwrite existing files; otherwise `False`. Default is `False`.'
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <code>ShowUI</code> set to `True`. Default is <xref href="Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException"></xref>.
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>destinationFileName</code> ends with a trailing slash.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>overwrite</code> is set to `False` and the destination file already exists.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable
  commentId: P:Microsoft.VisualBasic.Devices.Network.IsAvailable
  id: IsAvailable
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: IsAvailable
  nameWithType: Network.IsAvailable
  fullName: Network.IsAvailable
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Indicates whether a computer is connected to a network.
  remarks: "`IsAvailable` always returns `False` when called from a `Click Once` application or if the user does not have <xref:System.Net.NetworkInformation.NetworkInformationPermission>.  \n  \n The following table lists examples of tasks involving the `My.Computer.Network.IsAvailable` property.  \n  \n|To|See|  \n|-|-|  \n|Check whether a computer is connected to a network|[How to: Check Connection Status](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|"
  example:
  - "This example checks the property's status and reports it.  \n  \n [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]"
  syntax:
    content: public bool IsAvailable { get; }
    return:
      type: System.Boolean
      description: '`True` if the computer is connected to a network; otherwise `False`.'
  overload: Microsoft.VisualBasic.Devices.Network.IsAvailable*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  commentId: E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  id: NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: NetworkAvailabilityChanged
  nameWithType: Network.NetworkAvailabilityChanged
  fullName: Network.NetworkAvailabilityChanged
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Occurs when the network availability changes.
  remarks: "An application raises the `NetworkAvailabilityChanged` event every time the availability of the network changes. You can use the <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> property of the `e` parameter to get the new state of the network connection. To get the current state of the network connection, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property.  \n  \n In a Windows Forms application, this event is raised on the application's main thread with the other user-interface events. This allows the event handler to access directly the application's user interface. However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.  \n  \n You cannot use the `Handles` statement to handle the `NetworkAvailabilityChanged` event; you must use the `AddHandler` statement.  \n  \n In Windows Forms applications, the `MyApplication` object exposes a `NetworkAvailabilityChanged` event that provides the same functionality as this event, but you can handle it with the `Handles` statement.  \n  \n> [!NOTE]\n>  Many network hubs provide a network connection, even if the hub is disconnected from a larger network. Consequently, for wired connections, this event indicates a change in the connection between the computer and a hub.  \n  \n> [!NOTE]\n>  The `NetworkAvailabilityChanged` event is not raised by applications that run on Windows 95 and Windows 98 or by applications that are run on Windows 2000 by a non-administrator. If your application might run on those platforms, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property."
  example:
  - "This example uses the `My.Computer.Network.NetworkAvailabilityChanged` event to update the user interface of a form or control.  \n  \n This code should to be in a form or control that has a <xref:System.Windows.Forms.Label> named `Label1`.  \n  \n [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]"
  syntax:
    content: public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;
    return:
      type: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  commentId: M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  id: Ping(System.Uri,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(Uri, Int32)
  nameWithType: Network.Ping(Uri, Int32)
  fullName: Network.Ping(Uri, Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Pings the specified server.
  remarks: "The `Ping` method is not a fail-safe method for determining the availability of a remote computer: the ping port on the target computer may be turned off or the ping request may be blocked by a firewall or router.  \n  \n The address passed to the `Ping` method must be DNS resolvable and cannot be preceded by \"http://\"."
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (Uri address, int timeout);
    parameters:
    - id: address
      type: System.Uri
      description: The URI of the server to ping.
    - id: timeout
      type: System.Int32
      description: Time threshold in milliseconds for contacting the destination. Default is 500.
    return:
      type: System.Boolean
      description: '`True` if the operation was successful; otherwise `False`.'
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: No network connection is available.
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: URL was not valid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  commentId: M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  id: Ping(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(String, Int32)
  nameWithType: Network.Ping(String, Int32)
  fullName: Network.Ping(String, Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Pings the specified server.
  remarks: "The `Ping` method is not a fail-safe method for determining the availability of a remote computer: the ping port on the target computer may be turned off or the ping request may be blocked by a firewall or router.  \n  \n The address passed to the `Ping` method must be DNS resolvable and cannot be preceded by \"http://\"."
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: The URL, computer name, or IP number of the server to ping.
    - id: timeout
      type: System.Int32
      description: Time threshold in milliseconds for contacting the destination. Default is 500.
    return:
      type: System.Boolean
      description: '`True` if the operation was successful; otherwise `False`.'
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: No network connection is available.
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: URL was not valid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  commentId: M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  id: Ping(System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(String)
  nameWithType: Network.Ping(String)
  fullName: Network.Ping(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Pings the specified server.
  remarks: "The `Ping` method is not a fail-safe method for determining the availability of a remote computer: the ping port on the target computer may be turned off or the ping request may be blocked by a firewall or router.  \n  \n The address passed to the `Ping` method must be DNS resolvable and cannot be preceded by \"http://\"."
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: The URL, computer name, or IP number of the server to ping.
    return:
      type: System.Boolean
      description: '`True` if the operation was successful; otherwise `False`.'
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: No network connection is available.
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: URL was not valid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  commentId: M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  id: Ping(System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(Uri)
  nameWithType: Network.Ping(Uri)
  fullName: Network.Ping(Uri)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Pings the specified server.
  remarks: "The `Ping` method is not a fail-safe method for determining the availability of a remote computer: the ping port on the target computer may be turned off or the ping request may be blocked by a firewall or router.  \n  \n The address passed to the `Ping` method must be DNS resolvable and cannot be preceded by \"http://\"."
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: The URI of the server to ping.
    return:
      type: System.Boolean
      description: '`True` if the operation was successful; otherwise `False`.'
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: No network connection is available.
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: URL was not valid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, String, String, String, Boolean, Int32, UICancelOption)
  nameWithType: Network.UploadFile(String, String, String, String, Boolean, Int32, UICancelOption)
  fullName: Network.UploadFile(String, String, String, String, Boolean, Int32, UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "If `showUI` is set to `True`, a dialog box shows the progress of the operation and includes a **Cancel** button that the user can click to cancel the operation. Because the dialog box is not modal, it does not block user input to other windows in the program.  \n  \n If the server does not respond within the interval specified in `connectionTimeout`, the operation is cancelled and an exception is thrown.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.String
      description: URL, IP address, or URI of destination server.
    - id: userName
      type: System.String
      description: 'User name to authenticate. Default is an empty string: <code>""</code>.'
    - id: password
      type: System.String
      description: 'Password to authenticate. Default is an empty string: <code>""</code>.'
    - id: showUI
      type: System.Boolean
      description: Whether to display progress of the operation. Default is `False`.
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval in milliseconds. Default is 100 seconds.
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: Action to be taken when the user clicks **Cancel**. Default is <xref href="Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException"></xref>.
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connectionTimeout</code> is less than or equal to zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  id: UploadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, String)
  nameWithType: Network.UploadFile(String, String)
  fullName: Network.UploadFile(String, String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "You can use one of the other overloads of the <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> method to provide user credentials or specify a specific timeout value.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.String
      description: URL, IP address, or URI of destination server.
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The source file path is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the default timeout (100 seconds).
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  id: UploadFile(System.String,System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, Uri)
  nameWithType: Network.UploadFile(String, Uri)
  fullName: Network.UploadFile(String, Uri)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "You can use one of the other overloads of the <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> method to provide user credentials or specify a specific timeout value.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.Uri
      description: URL, IP address, or URI of destination server.
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The source file path is not valid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the default timeout (100 seconds).
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  id: UploadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, String, String, String)
  nameWithType: Network.UploadFile(String, String, String, String)
  fullName: Network.UploadFile(String, String, String, String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "You can use one of the other overloads of the <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> method to specify a specific timeout value.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.String
      description: URL, IP address, or URI of destination server.
    - id: userName
      type: System.String
      description: 'User name to authenticate. Default is an empty string: <code>""</code>.'
    - id: password
      type: System.String
      description: 'Password to authenticate. Default is an empty string: <code>""</code>.'
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connectionTimeout</code> is less than or equal to zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the default timeout (100 seconds).
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  id: UploadFile(System.String,System.Uri,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, Uri, String, String)
  nameWithType: Network.UploadFile(String, Uri, String, String)
  fullName: Network.UploadFile(String, Uri, String, String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "You can use one of the other overloads of the <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> method to specify a specific timeout value.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.Uri
      description: URL, IP address, or URI of destination server.
    - id: userName
      type: System.String
      description: 'User name to authenticate. Default is an empty string: <code>""</code>.'
    - id: password
      type: System.String
      description: 'Password to authenticate. Default is an empty string: <code>""</code>.'
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connectionTimeout</code> is less than or equal to zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the default timeout (100 seconds).
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, Uri, ICredentials, Boolean, Int32)
  nameWithType: Network.UploadFile(String, Uri, ICredentials, Boolean, Int32)
  fullName: Network.UploadFile(String, Uri, ICredentials, Boolean, Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "If `showUI` is set to `True`, a dialog box shows the progress of the operation and includes a **Cancel** button that the user can click to cancel the operation. Because the dialog box is not modal, it does not block user input to other windows in the program.  \n  \n If the server does not respond within the interval specified in `connectionTimeout`, the operation is cancelled and an exception is thrown.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.Uri
      description: URL, IP address, or URI of destination server.
    - id: networkCredentials
      type: System.Net.ICredentials
      description: Credentials for authentication.
    - id: showUI
      type: System.Boolean
      description: '`True` to display progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval in milliseconds. Default is 100 seconds.
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connectionTimeout</code> is less than or equal to zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, String, String, String, Boolean, Int32)
  nameWithType: Network.UploadFile(String, String, String, String, Boolean, Int32)
  fullName: Network.UploadFile(String, String, String, String, Boolean, Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "If `showUI` is set to `True`, a dialog box shows the progress of the operation and includes a **Cancel** button that the user can click to cancel the operation. Because the dialog box is not modal, it does not block user input to other windows in the program.  \n  \n If the server does not respond within the interval specified in `connectionTimeout`, the operation is cancelled and an exception is thrown.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.String
      description: URL, IP address, or URI of destination server.
    - id: userName
      type: System.String
      description: 'User name to authenticate. Default is an empty string: <code>""</code>.'
    - id: password
      type: System.String
      description: 'Password to authenticate. Default is an empty string: <code>""</code>.'
    - id: showUI
      type: System.Boolean
      description: '`True` to display progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval in milliseconds. Default is 100 seconds.
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connectionTimeout</code> is less than or equal to zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, Uri, ICredentials, Boolean, Int32, UICancelOption)
  nameWithType: Network.UploadFile(String, Uri, ICredentials, Boolean, Int32, UICancelOption)
  fullName: Network.UploadFile(String, Uri, ICredentials, Boolean, Int32, UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "If `showUI` is set to `True`, a dialog box shows the progress of the operation and includes a **Cancel** button that the user can click to cancel the operation. Because the dialog box is not modal, it does not block user input to other windows in the program.  \n  \n If the server does not respond within the interval specified in `connectionTimeout`, the operation is cancelled and an exception is thrown.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.Uri
      description: URL, IP address, or URI of destination server.
    - id: networkCredentials
      type: System.Net.ICredentials
      description: Credentials for authentication.
    - id: showUI
      type: System.Boolean
      description: '`True` to display progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval in milliseconds. Default is 100 seconds.
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: Action to be taken when the user clicks **Cancel**. Default is <xref href="Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException"></xref>.
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connectionTimeout</code> is less than or equal to zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, Uri, String, String, Boolean, Int32)
  nameWithType: Network.UploadFile(String, Uri, String, String, Boolean, Int32)
  fullName: Network.UploadFile(String, Uri, String, String, Boolean, Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "If `showUI` is set to `True`, a dialog box shows the progress of the operation and includes a **Cancel** button that the user can click to cancel the operation. Because the dialog box is not modal, it does not block user input to other windows in the program.  \n  \n If the server does not respond within the interval specified in `connectionTimeout`, the operation is cancelled and an exception is thrown.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.Uri
      description: URL, IP address, or URI of destination server.
    - id: userName
      type: System.String
      description: 'User name to authenticate. Default is an empty string: <code>""</code>.'
    - id: password
      type: System.String
      description: 'Password to authenticate. Default is an empty string: <code>""</code>.'
    - id: showUI
      type: System.Boolean
      description: '`True` to display progress of the operation; otherwise `False`. Default is `False`.'
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval in milliseconds. Default is 100 seconds.
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connectionTimeout</code> is less than or equal to zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  commentId: M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String, Uri, String, String, Boolean, Int32, UICancelOption)
  nameWithType: Network.UploadFile(String, Uri, String, String, Boolean, Int32, UICancelOption)
  fullName: Network.UploadFile(String, Uri, String, String, Boolean, Int32, UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Sends the specified file to the specified host address.
  remarks: "If `showUI` is set to `True`, a dialog box shows the progress of the operation and includes a **Cancel** button that the user can click to cancel the operation. Because the dialog box is not modal, it does not block user input to other windows in the program.  \n  \n If the server does not respond within the interval specified in `connectionTimeout`, the operation is cancelled and an exception is thrown.  \n  \n `My.Computer.Network.UploadFile` outputs trace information when you enable network tracing in your application. For more information, see [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  \n  \n> [!NOTE]\n>  The FTP protocol sends information, including passwords, in plain text and should not be used for transmitting sensitive information.  \n  \n The following table lists an example of a task involving the `My.Computer.Network.UploadFile` method.  \n  \n|To|See|  \n|-|-|  \n|Upload a file|[How to: Upload a File](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: Path and name of file to upload.
    - id: address
      type: System.Uri
      description: URL, IP address, or URI of destination server.
    - id: userName
      type: System.String
      description: 'User name to authenticate. Default is an empty string: <code>""</code>.'
    - id: password
      type: System.String
      description: 'Password to authenticate. Default is an empty string: <code>""</code>.'
    - id: showUI
      type: System.Boolean
      description: Whether to display progress of the operation. Default is `False`.
    - id: connectionTimeout
      type: System.Int32
      description: Timeout interval in milliseconds. Default is 100 seconds.
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: Action to be taken when the user clicks **Cancel**. Default is <xref href="Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException"></xref>.
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connectionTimeout</code> is less than or equal to zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>address</code> does not include a file name.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: User lacks necessary permissions to perform a network operation.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The server does not respond within the specified <code>connectionTimeout</code>.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The request is denied by the target web server.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.TimeoutException
  parent: System
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.TimeoutException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.Net.WebException
  parent: System.Net
  isExternal: false
  name: WebException
  nameWithType: WebException
  fullName: System.Net.WebException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: Microsoft.VisualBasic.Devices.Network.#ctor
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Network()
  nameWithType: Network.Network()
  fullName: Network.Network()
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String, String)
  nameWithType: Network.DownloadFile(String, String)
  fullName: Network.DownloadFile(String, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri, String)
  nameWithType: Network.DownloadFile(Uri, String)
  fullName: Network.DownloadFile(Uri, String)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String, String, String, String)
  nameWithType: Network.DownloadFile(String, String, String, String)
  fullName: Network.DownloadFile(String, String, String, String)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri, String, String, String)
  nameWithType: Network.DownloadFile(Uri, String, String, String)
  fullName: Network.DownloadFile(Uri, String, String, String)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean)
  nameWithType: Network.DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean)
  fullName: Network.DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean)
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String, String, String, String, Boolean, Int32, Boolean)
  nameWithType: Network.DownloadFile(String, String, String, String, Boolean, Int32, Boolean)
  fullName: Network.DownloadFile(String, String, String, String, Boolean, Int32, Boolean)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean, UICancelOption)
  nameWithType: Network.DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean, UICancelOption)
  fullName: Network.DownloadFile(Uri, String, ICredentials, Boolean, Int32, Boolean, UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean)
  nameWithType: Network.DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean)
  fullName: Network.DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  nameWithType: Network.DownloadFile(String, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  fullName: Network.DownloadFile(String, String, String, String, Boolean, Int32, Boolean, UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  nameWithType: Network.DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean, UICancelOption)
  fullName: Network.DownloadFile(Uri, String, String, String, Boolean, Int32, Boolean, UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: IsAvailable
  nameWithType: Network.IsAvailable
  fullName: Network.IsAvailable
- uid: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: NetworkAvailabilityChanged
  nameWithType: Network.NetworkAvailabilityChanged
  fullName: Network.NetworkAvailabilityChanged
- uid: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
  parent: Microsoft.VisualBasic.Devices
  isExternal: false
  name: NetworkAvailableEventHandler
  nameWithType: NetworkAvailableEventHandler
  fullName: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(Uri, Int32)
  nameWithType: Network.Ping(Uri, Int32)
  fullName: Network.Ping(Uri, Int32)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(String, Int32)
  nameWithType: Network.Ping(String, Int32)
  fullName: Network.Ping(String, Int32)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(String)
  nameWithType: Network.Ping(String)
  fullName: Network.Ping(String)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(Uri)
  nameWithType: Network.Ping(Uri)
  fullName: Network.Ping(Uri)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, String, String, String, Boolean, Int32, UICancelOption)
  nameWithType: Network.UploadFile(String, String, String, String, Boolean, Int32, UICancelOption)
  fullName: Network.UploadFile(String, String, String, String, Boolean, Int32, UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, String)
  nameWithType: Network.UploadFile(String, String)
  fullName: Network.UploadFile(String, String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, Uri)
  nameWithType: Network.UploadFile(String, Uri)
  fullName: Network.UploadFile(String, Uri)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, String, String, String)
  nameWithType: Network.UploadFile(String, String, String, String)
  fullName: Network.UploadFile(String, String, String, String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, Uri, String, String)
  nameWithType: Network.UploadFile(String, Uri, String, String)
  fullName: Network.UploadFile(String, Uri, String, String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, Uri, ICredentials, Boolean, Int32)
  nameWithType: Network.UploadFile(String, Uri, ICredentials, Boolean, Int32)
  fullName: Network.UploadFile(String, Uri, ICredentials, Boolean, Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, String, String, String, Boolean, Int32)
  nameWithType: Network.UploadFile(String, String, String, String, Boolean, Int32)
  fullName: Network.UploadFile(String, String, String, String, Boolean, Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, Uri, ICredentials, Boolean, Int32, UICancelOption)
  nameWithType: Network.UploadFile(String, Uri, ICredentials, Boolean, Int32, UICancelOption)
  fullName: Network.UploadFile(String, Uri, ICredentials, Boolean, Int32, UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, Uri, String, String, Boolean, Int32)
  nameWithType: Network.UploadFile(String, Uri, String, String, Boolean, Int32)
  fullName: Network.UploadFile(String, Uri, String, String, Boolean, Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String, Uri, String, String, Boolean, Int32, UICancelOption)
  nameWithType: Network.UploadFile(String, Uri, String, String, Boolean, Int32, UICancelOption)
  fullName: Network.UploadFile(String, Uri, String, String, Boolean, Int32, UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.#ctor*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Network
  nameWithType: Network.Network
  fullName: Network.Network
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile
  nameWithType: Network.DownloadFile
  fullName: Network.DownloadFile
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: IsAvailable
  nameWithType: Network.IsAvailable
  fullName: Network.IsAvailable
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
- uid: Microsoft.VisualBasic.Devices.Network.Ping*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping
  nameWithType: Network.Ping
  fullName: Network.Ping
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile
  nameWithType: Network.UploadFile
  fullName: Network.UploadFile
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Network.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
