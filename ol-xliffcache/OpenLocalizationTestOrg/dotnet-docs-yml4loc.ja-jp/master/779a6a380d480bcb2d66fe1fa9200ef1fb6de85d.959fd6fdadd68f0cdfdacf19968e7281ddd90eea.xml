{"nodes":[{"content":"Defines the method a class implements to process an assembly after the assembly has been built.","nodes":[{"pos":[0,95],"content":"Defines the method a class implements to process an assembly after the assembly has been built.","nodes":[{"content":"Defines the method a class implements to process an assembly after the assembly has been built.","pos":[0,95]}]}],"pos":[518,614],"yaml":true},{"content":"A class implementing this interface can access an assembly after it has been compiled. The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file. If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly. For example, a profiler tool could implement this interface to establish probes in the assembly.  \n  \n When an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.","nodes":[{"pos":[0,714],"content":"A class implementing this interface can access an assembly after it has been compiled. The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file. If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly. For example, a profiler tool could implement this interface to establish probes in the assembly.","nodes":[{"content":"A class implementing this interface can access an assembly after it has been compiled. The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file. If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly. For example, a profiler tool could implement this interface to establish probes in the assembly.","pos":[0,714],"nodes":[{"content":"A class implementing this interface can access an assembly after it has been compiled.","pos":[0,86]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> class compiles assemblies and then checks to see whether an <ph id=\"ph2\">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface has been registered in the Web configuration file.","pos":[87,310],"source":" The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file."},{"content":"If so, the <ph id=\"ph1\">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> instance calls the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt;</ph> method for the <ph id=\"ph3\">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface to perform any action after the compilation and before loading the assembly.","pos":[311,617],"source":" If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly."},{"content":"For example, a profiler tool could implement this interface to establish probes in the assembly.","pos":[618,714]}]}]},{"pos":[721,888],"content":"When an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.","nodes":[{"content":"When an <ph id=\"ph1\">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.","pos":[0,167],"source":"When an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode."}]}],"pos":[625,1518],"yaml":true,"extradata":"MT"},{"content":"Called before the assembly is loaded to allow the implementing class to modify the assembly.","nodes":[{"pos":[0,92],"content":"Called before the assembly is loaded to allow the implementing class to modify the assembly.","nodes":[{"content":"Called before the assembly is loaded to allow the implementing class to modify the assembly.","pos":[0,92]}]}],"pos":[4180,4273],"yaml":true},{"content":"The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled. Any actions to be taken before loading the assembly should be included in this method.","nodes":[{"pos":[0,198],"content":"The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled. Any actions to be taken before loading the assembly should be included in this method.","nodes":[{"content":"The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled. Any actions to be taken before loading the assembly should be included in this method.","pos":[0,198],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> class calls this method after the assembly has been compiled.","pos":[0,111],"source":"The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled."},{"content":"Any actions to be taken before loading the assembly should be included in this method.","pos":[112,198]}]}]}],"pos":[4284,4483],"yaml":true,"extradata":"MT"},{"content":"The path to the assembly.","nodes":[{"pos":[0,25],"content":"The path to the assembly.","nodes":[{"content":"The path to the assembly.","pos":[0,25]}]}],"pos":[6070,6096],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Compilation.IAssemblyPostProcessor\n  commentId: T:System.Web.Compilation.IAssemblyPostProcessor\n  id: IAssemblyPostProcessor\n  children:\n  - System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)\n  langs:\n  - csharp\n  name: IAssemblyPostProcessor\n  nameWithType: IAssemblyPostProcessor\n  fullName: System.Web.Compilation.IAssemblyPostProcessor\n  type: Interface\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Defines the method a class implements to process an assembly after the assembly has been built.\n  remarks: \"A class implementing this interface can access an assembly after it has been compiled. The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file. If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly. For example, a profiler tool could implement this interface to establish probes in the assembly.  \\n  \\n When an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.\"\n  example:\n  - \"The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.  \\n  \\n The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface. This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.  \\n  \\n [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]\\n [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  \\n  \\n Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`. Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.  \\n  \\n```  \\n<compilation debug=\\\"true\\\" assemblyPostProcessorType=\\\"Samples.Process.postProcessTest\\\" />  \\n```  \\n  \\n When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\\\\compile.\"\n  syntax:\n    content: 'public interface IAssemblyPostProcessor : IDisposable'\n  implements:\n  - System.IDisposable\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/IAssemblyPostProcessor.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)\n  commentId: M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)\n  id: PostProcessAssembly(System.String)\n  parent: System.Web.Compilation.IAssemblyPostProcessor\n  langs:\n  - csharp\n  name: PostProcessAssembly(String)\n  nameWithType: IAssemblyPostProcessor.PostProcessAssembly(String)\n  fullName: IAssemblyPostProcessor.PostProcessAssembly(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Called before the assembly is loaded to allow the implementing class to modify the assembly.\n  remarks: The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled. Any actions to be taken before loading the assembly should be included in this method.\n  example:\n  - \"The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.  \\n  \\n The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface. This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.  \\n  \\n [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]\\n [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  \\n  \\n Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`. Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.  \\n  \\n```  \\n<compilation debug=\\\"true\\\" assemblyPostProcessorType=\\\"Samples.Process.postProcessTest\\\" />  \\n```  \\n  \\n When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\\\\compile.\"\n  syntax:\n    content: public void PostProcessAssembly (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the assembly.\n  overload: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/IAssemblyPostProcessor.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)\n  parent: System.Web.Compilation.IAssemblyPostProcessor\n  isExternal: false\n  name: PostProcessAssembly(String)\n  nameWithType: IAssemblyPostProcessor.PostProcessAssembly(String)\n  fullName: IAssemblyPostProcessor.PostProcessAssembly(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly*\n  parent: System.Web.Compilation.IAssemblyPostProcessor\n  isExternal: false\n  name: PostProcessAssembly\n  nameWithType: IAssemblyPostProcessor.PostProcessAssembly\n  fullName: IAssemblyPostProcessor.PostProcessAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/IAssemblyPostProcessor.xml\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}