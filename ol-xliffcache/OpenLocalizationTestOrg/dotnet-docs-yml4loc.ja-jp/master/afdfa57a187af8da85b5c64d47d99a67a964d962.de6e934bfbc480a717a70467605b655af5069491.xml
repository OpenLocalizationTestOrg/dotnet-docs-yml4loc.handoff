{"nodes":[{"content":"Provides a type converter to convert <xref href=\"System.DateTimeOffset\"></xref> structures to and from various other representations.","nodes":[{"pos":[0,133],"content":"Provides a type converter to convert <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> structures to and from various other representations.","source":"Provides a type converter to convert <xref href=\"System.DateTimeOffset\"></xref> structures to and from various other representations."}],"pos":[1103,1237],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DateTimeOffsetConverter\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DateTimeOffsetConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DateTimeOffsetConverter\"></xref> class."}],"pos":[6292,6400],"yaml":true},{"content":"Returns a value that indicates whether an object of the specified source type can be converted to a <xref href=\"System.DateTimeOffset\"></xref>.","nodes":[{"pos":[0,143],"content":"Returns a value that indicates whether an object of the specified source type can be converted to a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a value that indicates whether an object of the specified source type can be converted to a <xref href=\"System.DateTimeOffset\"></xref>."}],"pos":[8140,8284],"yaml":true},{"content":"The date format context.","nodes":[{"pos":[0,24],"content":"The date format context.","nodes":[{"content":"The date format context.","pos":[0,24]}]}],"pos":[8526,8551],"yaml":true},{"content":"The source type to check.","nodes":[{"pos":[0,25],"content":"The source type to check.","nodes":[{"content":"The source type to check.","pos":[0,25]}]}],"pos":[8615,8641],"yaml":true},{"content":"`true` if the specified type can be converted to a <xref href=\"System.DateTimeOffset\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the specified type can be converted to a <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified type can be converted to a <xref href=\"System.DateTimeOffset\"></xref>; otherwise, `false`."}],"pos":[8699,8816],"yaml":true},{"content":"Returns a value that indicates whether a <xref href=\"System.DateTimeOffset\"></xref> can be converted to an object of the specified type.","nodes":[{"pos":[0,136],"content":"Returns a value that indicates whether a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> can be converted to an object of the specified type.","source":"Returns a value that indicates whether a <xref href=\"System.DateTimeOffset\"></xref> can be converted to an object of the specified type."}],"pos":[10476,10613],"yaml":true},{"content":"The date format context.","nodes":[{"pos":[0,24],"content":"The date format context.","nodes":[{"content":"The date format context.","pos":[0,24]}]}],"pos":[10858,10883],"yaml":true},{"content":"The destination type to check.","nodes":[{"pos":[0,30],"content":"The destination type to check.","nodes":[{"content":"The destination type to check.","pos":[0,30]}]}],"pos":[10952,10983],"yaml":true},{"content":"`true` if a <xref href=\"System.DateTimeOffset\"></xref> can be converted to the specified type; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if a <ph id=\"ph2\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> can be converted to the specified type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if a <xref href=\"System.DateTimeOffset\"></xref> can be converted to the specified type; otherwise, `false`."}],"pos":[11041,11158],"yaml":true},{"content":"Converts the specified object to a <xref href=\"System.DateTimeOffset\"></xref>.","nodes":[{"pos":[0,78],"content":"Converts the specified object to a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph>.","source":"Converts the specified object to a <xref href=\"System.DateTimeOffset\"></xref>."}],"pos":[12960,13039],"yaml":true},{"content":"The date format context.","nodes":[{"pos":[0,24],"content":"The date format context.","nodes":[{"content":"The date format context.","pos":[0,24]}]}],"pos":[13319,13344],"yaml":true},{"content":"The date culture.","nodes":[{"pos":[0,17],"content":"The date culture.","nodes":[{"content":"The date culture.","pos":[0,17]}]}],"pos":[13426,13444],"yaml":true},{"content":"The object to be converted.","nodes":[{"pos":[0,27],"content":"The object to be converted.","nodes":[{"content":"The object to be converted.","pos":[0,27]}]}],"pos":[13505,13533],"yaml":true},{"content":"A <xref href=\"System.DateTimeOffset\"></xref> that represents the specified object.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> that represents the specified object.","source":"A <xref href=\"System.DateTimeOffset\"></xref> that represents the specified object."}],"pos":[13590,13673],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[13860,13896],"yaml":true},{"content":"Converts a <xref href=\"System.DateTimeOffset\"></xref> to an object of the specified type.","nodes":[{"pos":[0,89],"content":"Converts a <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> to an object of the specified type.","source":"Converts a <xref href=\"System.DateTimeOffset\"></xref> to an object of the specified type."}],"pos":[15651,15741],"yaml":true},{"content":"The date format context.","nodes":[{"pos":[0,24],"content":"The date format context.","nodes":[{"content":"The date format context.","pos":[0,24]}]}],"pos":[16041,16066],"yaml":true},{"content":"The date culture.","nodes":[{"pos":[0,17],"content":"The date culture.","nodes":[{"content":"The date culture.","pos":[0,17]}]}],"pos":[16148,16166],"yaml":true},{"content":"The <xref href=\"System.DateTimeOffset\"></xref> to be converted.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph> to be converted.","source":"The <xref href=\"System.DateTimeOffset\"></xref> to be converted."}],"pos":[16227,16291],"yaml":true},{"content":"The type to convert to.","nodes":[{"pos":[0,23],"content":"The type to convert to.","nodes":[{"content":"The type to convert to.","pos":[0,23]}]}],"pos":[16360,16384],"yaml":true},{"content":"An object of the specified type that represents the <xref href=\"System.DateTimeOffset\"></xref>.","nodes":[{"pos":[0,95],"content":"An object of the specified type that represents the <ph id=\"ph1\">&lt;xref href=\"System.DateTimeOffset\"&gt;&lt;/xref&gt;</ph>.","source":"An object of the specified type that represents the <xref href=\"System.DateTimeOffset\"></xref>."}],"pos":[16441,16537],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[16722,16758],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DateTimeOffsetConverter\n  commentId: T:System.ComponentModel.DateTimeOffsetConverter\n  id: DateTimeOffsetConverter\n  children:\n  - System.ComponentModel.DateTimeOffsetConverter.#ctor\n  - System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: DateTimeOffsetConverter\n  nameWithType: DateTimeOffsetConverter\n  fullName: System.ComponentModel.DateTimeOffsetConverter\n  type: Class\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Provides a type converter to convert <xref href=\"System.DateTimeOffset\"></xref> structures to and from various other representations.\n  syntax:\n    content: 'public class DateTimeOffsetConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DateTimeOffsetConverter.#ctor\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  name: DateTimeOffsetConverter()\n  nameWithType: DateTimeOffsetConverter.DateTimeOffsetConverter()\n  fullName: DateTimeOffsetConverter.DateTimeOffsetConverter()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DateTimeOffsetConverter\"></xref> class.\n  syntax:\n    content: public DateTimeOffsetConverter ();\n    parameters: []\n  overload: System.ComponentModel.DateTimeOffsetConverter.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: DateTimeOffsetConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: DateTimeOffsetConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a value that indicates whether an object of the specified source type can be converted to a <xref href=\"System.DateTimeOffset\"></xref>.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The date format context.\n    - id: sourceType\n      type: System.Type\n      description: The source type to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified type can be converted to a <xref href=\"System.DateTimeOffset\"></xref>; otherwise, `false`.'\n  overload: System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: DateTimeOffsetConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: DateTimeOffsetConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a value that indicates whether a <xref href=\"System.DateTimeOffset\"></xref> can be converted to an object of the specified type.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The date format context.\n    - id: destinationType\n      type: System.Type\n      description: The destination type to check.\n    return:\n      type: System.Boolean\n      description: '`true` if a <xref href=\"System.DateTimeOffset\"></xref> can be converted to the specified type; otherwise, `false`.'\n  overload: System.ComponentModel.DateTimeOffsetConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: DateTimeOffsetConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: DateTimeOffsetConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the specified object to a <xref href=\"System.DateTimeOffset\"></xref>.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The date format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The date culture.\n    - id: value\n      type: System.Object\n      description: The object to be converted.\n    return:\n      type: System.Object\n      description: A <xref href=\"System.DateTimeOffset\"></xref> that represents the specified object.\n  overload: System.ComponentModel.DateTimeOffsetConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: DateTimeOffsetConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: DateTimeOffsetConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts a <xref href=\"System.DateTimeOffset\"></xref> to an object of the specified type.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The date format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The date culture.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.DateTimeOffset\"></xref> to be converted.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Object\n      description: An object of the specified type that represents the <xref href=\"System.DateTimeOffset\"></xref>.\n  overload: System.ComponentModel.DateTimeOffsetConverter.ConvertTo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ComponentModel.DateTimeOffsetConverter.#ctor\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: DateTimeOffsetConverter()\n  nameWithType: DateTimeOffsetConverter.DateTimeOffsetConverter()\n  fullName: DateTimeOffsetConverter.DateTimeOffsetConverter()\n- uid: System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: DateTimeOffsetConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: DateTimeOffsetConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: DateTimeOffsetConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: DateTimeOffsetConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: DateTimeOffsetConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: DateTimeOffsetConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: DateTimeOffsetConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: DateTimeOffsetConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ComponentModel.DateTimeOffsetConverter.#ctor*\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: DateTimeOffsetConverter\n  nameWithType: DateTimeOffsetConverter.DateTimeOffsetConverter\n  fullName: DateTimeOffsetConverter.DateTimeOffsetConverter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n- uid: System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom*\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: DateTimeOffsetConverter.CanConvertFrom\n  fullName: DateTimeOffsetConverter.CanConvertFrom\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n- uid: System.ComponentModel.DateTimeOffsetConverter.CanConvertTo*\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: DateTimeOffsetConverter.CanConvertTo\n  fullName: DateTimeOffsetConverter.CanConvertTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n- uid: System.ComponentModel.DateTimeOffsetConverter.ConvertFrom*\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: DateTimeOffsetConverter.ConvertFrom\n  fullName: DateTimeOffsetConverter.ConvertFrom\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n- uid: System.ComponentModel.DateTimeOffsetConverter.ConvertTo*\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: DateTimeOffsetConverter.ConvertTo\n  fullName: DateTimeOffsetConverter.ConvertTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DateTimeOffsetConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}