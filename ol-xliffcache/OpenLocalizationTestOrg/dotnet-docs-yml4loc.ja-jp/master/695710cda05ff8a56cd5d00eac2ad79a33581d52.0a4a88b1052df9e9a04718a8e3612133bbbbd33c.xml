{"nodes":[{"content":"Provides conduits for messages that cross remoting boundaries.","nodes":[{"pos":[0,62],"content":"Provides conduits for messages that cross remoting boundaries.","nodes":[{"content":"Provides conduits for messages that cross remoting boundaries.","pos":[0,62]}]}],"pos":[589,652],"yaml":true},{"content":"Remoting boundaries can be <xref:System.Runtime.Remoting.Contexts.Context>s, <xref:System.AppDomain>s, processes, or computers. An application can cross these boundaries only by using channels. These crossings can be inbound and outbound. A channel can listen on an endpoint for inbound messages, send to an endpoint for outbound messages, or both. This provides an extensibility point in the runtime to plug in a wide range protocols, even though the runtime might not be at the other end of the channel.  \n  \n Run-time objects can be used to represent a wide and rich set of semantics and entities. The channel provides the extensibility point to convert the messages to and from the specific protocols. If there are runtimes at both ends of the channel, a virtual channel is created between the two ends, in order to connect the client and server sink chains on either side of the boundary.  \n  \n The client part of the channel is located at the end of a client context sink chain. The server part of the channel is located at the start of the server context sink chain. Messages are delivered to the client channel using the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface, travel through the channel, and are then received by the server channel. The server channel delivers the message to the first server context sink.  \n  \n Channels must expose the <xref:System.Runtime.Remoting.Channels.IChannel> interface, which provides informational properties such as the <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> and <xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A> properties. Channels can be registered using the <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,505],"content":"Remoting boundaries can be <xref:System.Runtime.Remoting.Contexts.Context>s, <xref:System.AppDomain>s, processes, or computers. An application can cross these boundaries only by using channels. These crossings can be inbound and outbound. A channel can listen on an endpoint for inbound messages, send to an endpoint for outbound messages, or both. This provides an extensibility point in the runtime to plug in a wide range protocols, even though the runtime might not be at the other end of the channel.","nodes":[{"content":"Remoting boundaries can be <xref:System.Runtime.Remoting.Contexts.Context>s, <xref:System.AppDomain>s, processes, or computers. An application can cross these boundaries only by using channels. These crossings can be inbound and outbound. A channel can listen on an endpoint for inbound messages, send to an endpoint for outbound messages, or both. This provides an extensibility point in the runtime to plug in a wide range protocols, even though the runtime might not be at the other end of the channel.","pos":[0,505],"nodes":[{"content":"Remoting boundaries can be <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph>s, <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph>s, processes, or computers.","pos":[0,127],"source":"Remoting boundaries can be <xref:System.Runtime.Remoting.Contexts.Context>s, <xref:System.AppDomain>s, processes, or computers."},{"content":"An application can cross these boundaries only by using channels.","pos":[128,193]},{"content":"These crossings can be inbound and outbound.","pos":[194,238]},{"content":"A channel can listen on an endpoint for inbound messages, send to an endpoint for outbound messages, or both.","pos":[239,348]},{"content":"This provides an extensibility point in the runtime to plug in a wide range protocols, even though the runtime might not be at the other end of the channel.","pos":[349,505]}]}]},{"pos":[512,893],"content":"Run-time objects can be used to represent a wide and rich set of semantics and entities. The channel provides the extensibility point to convert the messages to and from the specific protocols. If there are runtimes at both ends of the channel, a virtual channel is created between the two ends, in order to connect the client and server sink chains on either side of the boundary.","nodes":[{"content":"Run-time objects can be used to represent a wide and rich set of semantics and entities. The channel provides the extensibility point to convert the messages to and from the specific protocols. If there are runtimes at both ends of the channel, a virtual channel is created between the two ends, in order to connect the client and server sink chains on either side of the boundary.","pos":[0,381],"nodes":[{"content":"Run-time objects can be used to represent a wide and rich set of semantics and entities.","pos":[0,88]},{"content":"The channel provides the extensibility point to convert the messages to and from the specific protocols.","pos":[89,193]},{"content":"If there are runtimes at both ends of the channel, a virtual channel is created between the two ends, in order to connect the client and server sink chains on either side of the boundary.","pos":[194,381]}]}]},{"pos":[900,1340],"content":"The client part of the channel is located at the end of a client context sink chain. The server part of the channel is located at the start of the server context sink chain. Messages are delivered to the client channel using the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface, travel through the channel, and are then received by the server channel. The server channel delivers the message to the first server context sink.","nodes":[{"content":"The client part of the channel is located at the end of a client context sink chain. The server part of the channel is located at the start of the server context sink chain. Messages are delivered to the client channel using the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface, travel through the channel, and are then received by the server channel. The server channel delivers the message to the first server context sink.","pos":[0,440],"nodes":[{"content":"The client part of the channel is located at the end of a client context sink chain.","pos":[0,84]},{"content":"The server part of the channel is located at the start of the server context sink chain.","pos":[85,173]},{"content":"Messages are delivered to the client channel using the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMessageSink&gt;</ph> interface, travel through the channel, and are then received by the server channel.","pos":[174,366],"source":" Messages are delivered to the client channel using the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface, travel through the channel, and are then received by the server channel."},{"content":"The server channel delivers the message to the first server context sink.","pos":[367,440]}]}]},{"pos":[1347,1776],"content":"Channels must expose the <xref:System.Runtime.Remoting.Channels.IChannel> interface, which provides informational properties such as the <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> and <xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A> properties. Channels can be registered using the <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName> method.","nodes":[{"content":"Channels must expose the <xref:System.Runtime.Remoting.Channels.IChannel> interface, which provides informational properties such as the <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> and <xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A> properties. Channels can be registered using the <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName> method.","pos":[0,429],"nodes":[{"content":"Channels must expose the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IChannel&gt;</ph> interface, which provides informational properties such as the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A&gt;</ph> properties.","pos":[0,284],"source":"Channels must expose the <xref:System.Runtime.Remoting.Channels.IChannel> interface, which provides informational properties such as the <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> and <xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A> properties."},{"content":"Channels can be registered using the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName&gt;</ph> method.","pos":[285,429],"source":" Channels can be registered using the <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName> method."}]}]}],"pos":[663,2448],"yaml":true,"extradata":"MT"},{"content":"Gets the name of the channel.","nodes":[{"pos":[0,29],"content":"Gets the name of the channel.","nodes":[{"content":"Gets the name of the channel.","pos":[0,29]}]}],"pos":[3814,3844],"yaml":true},{"content":"The name of the channel.","nodes":[{"pos":[0,24],"content":"The name of the channel.","nodes":[{"content":"The name of the channel.","pos":[0,24]}]}],"pos":[4497,4522],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[4715,4777],"yaml":true},{"content":"Gets the priority of the channel.","nodes":[{"pos":[0,33],"content":"Gets the priority of the channel.","nodes":[{"content":"Gets the priority of the channel.","pos":[0,33]}]}],"pos":[5836,5870],"yaml":true},{"content":"Higher numbers indicate higher priority, so a channel with priority of 50 has a higher priority than a channel with priority 25. The cross application domain channel has a priority of 100.  \n  \n Client channels with higher priority are given the first chance to connect to a remote object specified by a URL or a particular channel data entry from a <xref:System.Runtime.Remoting.ObjRef>.  \n  \n For server channels, the priority indicates the order in which their channel data will appear in a <xref:System.Runtime.Remoting.ObjRef>, which in turn affects the order in which clients will try to connect to the server object. If the server is listening on an HTTP channel with priority 50 and a TCP channel with priority 25 and the client has registered both an HTTP and TCP channel, then the client will use the HTTP channel to talk to the server.","nodes":[{"pos":[0,188],"content":"Higher numbers indicate higher priority, so a channel with priority of 50 has a higher priority than a channel with priority 25. The cross application domain channel has a priority of 100.","nodes":[{"content":"Higher numbers indicate higher priority, so a channel with priority of 50 has a higher priority than a channel with priority 25. The cross application domain channel has a priority of 100.","pos":[0,188],"nodes":[{"content":"Higher numbers indicate higher priority, so a channel with priority of 50 has a higher priority than a channel with priority 25.","pos":[0,128]},{"content":"The cross application domain channel has a priority of 100.","pos":[129,188]}]}]},{"pos":[195,388],"content":"Client channels with higher priority are given the first chance to connect to a remote object specified by a URL or a particular channel data entry from a <xref:System.Runtime.Remoting.ObjRef>.","nodes":[{"content":"Client channels with higher priority are given the first chance to connect to a remote object specified by a URL or a particular channel data entry from a <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph>.","pos":[0,193],"source":"Client channels with higher priority are given the first chance to connect to a remote object specified by a URL or a particular channel data entry from a <xref:System.Runtime.Remoting.ObjRef>."}]},{"pos":[395,846],"content":"For server channels, the priority indicates the order in which their channel data will appear in a <xref:System.Runtime.Remoting.ObjRef>, which in turn affects the order in which clients will try to connect to the server object. If the server is listening on an HTTP channel with priority 50 and a TCP channel with priority 25 and the client has registered both an HTTP and TCP channel, then the client will use the HTTP channel to talk to the server.","nodes":[{"content":"For server channels, the priority indicates the order in which their channel data will appear in a <xref:System.Runtime.Remoting.ObjRef>, which in turn affects the order in which clients will try to connect to the server object. If the server is listening on an HTTP channel with priority 50 and a TCP channel with priority 25 and the client has registered both an HTTP and TCP channel, then the client will use the HTTP channel to talk to the server.","pos":[0,451],"nodes":[{"content":"For server channels, the priority indicates the order in which their channel data will appear in a <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph>, which in turn affects the order in which clients will try to connect to the server object.","pos":[0,228],"source":"For server channels, the priority indicates the order in which their channel data will appear in a <xref:System.Runtime.Remoting.ObjRef>, which in turn affects the order in which clients will try to connect to the server object."},{"content":"If the server is listening on an HTTP channel with priority 50 and a TCP channel with priority 25 and the client has registered both an HTTP and TCP channel, then the client will use the HTTP channel to talk to the server.","pos":[229,451]}]}]}],"pos":[5881,6734],"yaml":true,"extradata":"MT"},{"content":"An integer that indicates the priority of the channel.","nodes":[{"pos":[0,54],"content":"An integer that indicates the priority of the channel.","nodes":[{"content":"An integer that indicates the priority of the channel.","pos":[0,54]}]}],"pos":[7373,7428],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[7625,7687],"yaml":true},{"content":"Returns the object URI as an out parameter, and the URI of the current channel as the return value.","nodes":[{"pos":[0,99],"content":"Returns the object URI as an out parameter, and the URI of the current channel as the return value.","nodes":[{"content":"Returns the object URI as an out parameter, and the URI of the current channel as the return value.","pos":[0,99]}]}],"pos":[8822,8922],"yaml":true},{"content":"The URL of the object.","nodes":[{"pos":[0,22],"content":"The URL of the object.","nodes":[{"content":"The URL of the object.","pos":[0,22]}]}],"pos":[9614,9637],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.String\"></xref> that holds the object URI. This parameter is passed uninitialized.","nodes":[{"pos":[0,138],"content":"When this method returns, contains a <xref href=\"System.String\"></xref> that holds the object URI. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that holds the object URI.","pos":[0,98],"source":"When this method returns, contains a <xref href=\"System.String\"></xref> that holds the object URI."},{"content":"This parameter is passed uninitialized.","pos":[99,138]}]}],"pos":[9702,9841],"yaml":true},{"content":"The URI of the current channel, or `null` if the URI does not belong to this channel.","nodes":[{"pos":[0,85],"content":"The URI of the current channel, or <ph id=\"ph1\">`null`</ph> if the URI does not belong to this channel.","source":"The URI of the current channel, or `null` if the URI does not belong to this channel."}],"pos":[9898,9984],"yaml":true},{"content":"The immediate caller does not have infrastructure permission.","nodes":[{"pos":[0,61],"content":"The immediate caller does not have infrastructure permission.","nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"pos":[10171,10233],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.IChannel\n  commentId: T:System.Runtime.Remoting.Channels.IChannel\n  id: IChannel\n  children:\n  - System.Runtime.Remoting.Channels.IChannel.ChannelName\n  - System.Runtime.Remoting.Channels.IChannel.ChannelPriority\n  - System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)\n  langs:\n  - csharp\n  name: IChannel\n  nameWithType: IChannel\n  fullName: System.Runtime.Remoting.Channels.IChannel\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Provides conduits for messages that cross remoting boundaries.\n  remarks: \"Remoting boundaries can be <xref:System.Runtime.Remoting.Contexts.Context>s, <xref:System.AppDomain>s, processes, or computers. An application can cross these boundaries only by using channels. These crossings can be inbound and outbound. A channel can listen on an endpoint for inbound messages, send to an endpoint for outbound messages, or both. This provides an extensibility point in the runtime to plug in a wide range protocols, even though the runtime might not be at the other end of the channel.  \\n  \\n Run-time objects can be used to represent a wide and rich set of semantics and entities. The channel provides the extensibility point to convert the messages to and from the specific protocols. If there are runtimes at both ends of the channel, a virtual channel is created between the two ends, in order to connect the client and server sink chains on either side of the boundary.  \\n  \\n The client part of the channel is located at the end of a client context sink chain. The server part of the channel is located at the start of the server context sink chain. Messages are delivered to the client channel using the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface, travel through the channel, and are then received by the server channel. The server channel delivers the message to the first server context sink.  \\n  \\n Channels must expose the <xref:System.Runtime.Remoting.Channels.IChannel> interface, which provides informational properties such as the <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> and <xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A> properties. Channels can be registered using the <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IChannel\n  derivedClasses:\n  - System.Runtime.Remoting.Channels.IChannelReceiver\n  - System.Runtime.Remoting.Channels.IChannelSender\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName\n  commentId: P:System.Runtime.Remoting.Channels.IChannel.ChannelName\n  id: ChannelName\n  parent: System.Runtime.Remoting.Channels.IChannel\n  langs:\n  - csharp\n  name: ChannelName\n  nameWithType: IChannel.ChannelName\n  fullName: IChannel.ChannelName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets the name of the channel.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[HttpServerChannel_Server_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpServerChannel_Server_Client/CPP/httpserverchannel_9_server.cpp#2)]\n     [!code-csharp[HttpServerChannel_Server_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpServerChannel_Server_Client/CS/httpserverchannel_9_server.cs#2)]\n     [!code-vb[HttpServerChannel_Server_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpServerChannel_Server_Client/VB/httpserverchannel_9_server.vb#2)]\n  syntax:\n    content: public string ChannelName { get; }\n    return:\n      type: System.String\n      description: The name of the channel.\n  overload: System.Runtime.Remoting.Channels.IChannel.ChannelName*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority\n  commentId: P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority\n  id: ChannelPriority\n  parent: System.Runtime.Remoting.Channels.IChannel\n  langs:\n  - csharp\n  name: ChannelPriority\n  nameWithType: IChannel.ChannelPriority\n  fullName: IChannel.ChannelPriority\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets the priority of the channel.\n  remarks: \"Higher numbers indicate higher priority, so a channel with priority of 50 has a higher priority than a channel with priority 25. The cross application domain channel has a priority of 100.  \\n  \\n Client channels with higher priority are given the first chance to connect to a remote object specified by a URL or a particular channel data entry from a <xref:System.Runtime.Remoting.ObjRef>.  \\n  \\n For server channels, the priority indicates the order in which their channel data will appear in a <xref:System.Runtime.Remoting.ObjRef>, which in turn affects the order in which clients will try to connect to the server object. If the server is listening on an HTTP channel with priority 50 and a TCP channel with priority 25 and the client has registered both an HTTP and TCP channel, then the client will use the HTTP channel to talk to the server.\"\n  example:\n  - >-\n    [!code-cpp[HttpServerChannel_Server_Client#5](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpServerChannel_Server_Client/CPP/httpclientchannel_6_client.cpp#5)]\n     [!code-csharp[HttpServerChannel_Server_Client#5](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpServerChannel_Server_Client/CS/httpclientchannel_6_client.cs#5)]\n     [!code-vb[HttpServerChannel_Server_Client#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpServerChannel_Server_Client/VB/httpclientchannel_6_client.vb#5)]\n  syntax:\n    content: public int ChannelPriority { get; }\n    return:\n      type: System.Int32\n      description: An integer that indicates the priority of the channel.\n  overload: System.Runtime.Remoting.Channels.IChannel.ChannelPriority*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)\n  commentId: M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)\n  id: Parse(System.String,System.String@)\n  parent: System.Runtime.Remoting.Channels.IChannel\n  langs:\n  - csharp\n  name: Parse(String, String)\n  nameWithType: IChannel.Parse(String, String)\n  fullName: IChannel.Parse(String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Returns the object URI as an out parameter, and the URI of the current channel as the return value.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[HttpServerChannel_Server_Client#5](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpServerChannel_Server_Client/CPP/httpclientchannel_6_client.cpp#5)]\n     [!code-csharp[HttpServerChannel_Server_Client#5](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpServerChannel_Server_Client/CS/httpclientchannel_6_client.cs#5)]\n     [!code-vb[HttpServerChannel_Server_Client#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpServerChannel_Server_Client/VB/httpclientchannel_6_client.vb#5)]\n  syntax:\n    content: public string Parse (string url, out string objectURI);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL of the object.\n    - id: objectURI\n      type: System.String\n      description: When this method returns, contains a <xref href=\"System.String\"></xref> that holds the object URI. This parameter is passed uninitialized.\n    return:\n      type: System.String\n      description: The URI of the current channel, or `null` if the URI does not belong to this channel.\n  overload: System.Runtime.Remoting.Channels.IChannel.Parse*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IChannel.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName\n  parent: System.Runtime.Remoting.Channels.IChannel\n  isExternal: false\n  name: ChannelName\n  nameWithType: IChannel.ChannelName\n  fullName: IChannel.ChannelName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority\n  parent: System.Runtime.Remoting.Channels.IChannel\n  isExternal: false\n  name: ChannelPriority\n  nameWithType: IChannel.ChannelPriority\n  fullName: IChannel.ChannelPriority\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)\n  parent: System.Runtime.Remoting.Channels.IChannel\n  isExternal: false\n  name: Parse(String, String)\n  nameWithType: IChannel.Parse(String, String)\n  fullName: IChannel.Parse(String, String)\n- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName*\n  parent: System.Runtime.Remoting.Channels.IChannel\n  isExternal: false\n  name: ChannelName\n  nameWithType: IChannel.ChannelName\n  fullName: IChannel.ChannelName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IChannel.xml\n- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority*\n  parent: System.Runtime.Remoting.Channels.IChannel\n  isExternal: false\n  name: ChannelPriority\n  nameWithType: IChannel.ChannelPriority\n  fullName: IChannel.ChannelPriority\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IChannel.xml\n- uid: System.Runtime.Remoting.Channels.IChannel.Parse*\n  parent: System.Runtime.Remoting.Channels.IChannel\n  isExternal: false\n  name: Parse\n  nameWithType: IChannel.Parse\n  fullName: IChannel.Parse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/IChannel.xml\n"}