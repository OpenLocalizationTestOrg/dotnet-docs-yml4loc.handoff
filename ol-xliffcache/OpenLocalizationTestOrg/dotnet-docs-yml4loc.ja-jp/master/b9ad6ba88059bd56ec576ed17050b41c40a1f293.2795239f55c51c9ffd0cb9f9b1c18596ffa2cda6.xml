{"nodes":[{"content":"Represents a `<securityTokenHandlers>` element in a configuration file. This class cannot be inherited.","nodes":[{"pos":[0,103],"content":"Represents a `<securityTokenHandlers>` element in a configuration file. This class cannot be inherited.","nodes":[{"content":"Represents a <ph id=\"ph1\">`&lt;securityTokenHandlers&gt;`</ph> element in a configuration file.","pos":[0,71],"source":"Represents a `<securityTokenHandlers>` element in a configuration file."},{"content":"This class cannot be inherited.","pos":[72,103]}]}],"pos":[1251,1355],"yaml":true},{"content":"The `<securityTokenHandlers>` element contains the set of security token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) that are registered with the endpoint. By default, the collection is populated with <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>, and <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>.  \n  \n In the configuration file, each token handler can have custom configuration as a child element to its `<add>` element. <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler> and <xref:System.IdentityModel.Tokens.MembershipUserNameSecurityTokenHandler> have a pre-defined custom configuration section.  \n  \n Security token handler collections can also be named; to be used in certain circumstances. The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens; for example `<securityTokenHandlers name=\"ActAs\">`. The `name` attribute is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name%2A> property.  \n  \n The `<securityTokenHandlerConfiguration>` child element defines default settings for the handlers in the collection (which can be overridden by the settings defined by individual handlers in the \\<add> element). The `<securityTokenHandlerElement>` is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class and is accessed through the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration> property.","nodes":[{"pos":[0,738],"content":"The `<securityTokenHandlers>` element contains the set of security token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) that are registered with the endpoint. By default, the collection is populated with <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>, and <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>.","nodes":[{"content":"The <ph id=\"ph1\">`&lt;securityTokenHandlers&gt;`</ph> element contains the set of security token handlers (<ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;</ph>) that are registered with the endpoint.","pos":[0,178],"source":"The `<securityTokenHandlers>` element contains the set of security token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) that are registered with the endpoint."},{"content":"By default, the collection is populated with <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler&gt;</ph>.","pos":[179,738],"source":" By default, the collection is populated with <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>, and <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>."}]},{"pos":[745,1173],"content":"In the configuration file, each token handler can have custom configuration as a child element to its `<add>` element. <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler> and <xref:System.IdentityModel.Tokens.MembershipUserNameSecurityTokenHandler> have a pre-defined custom configuration section.","nodes":[{"content":"In the configuration file, each token handler can have custom configuration as a child element to its <ph id=\"ph1\">`&lt;add&gt;`</ph> element.","pos":[0,118],"source":"In the configuration file, each token handler can have custom configuration as a child element to its `<add>` element."},{"content":"<ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.IdentityModel.Tokens.MembershipUserNameSecurityTokenHandler&gt;</ph> have a pre-defined custom configuration section.","pos":[119,428],"source":" <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler> and <xref:System.IdentityModel.Tokens.MembershipUserNameSecurityTokenHandler> have a pre-defined custom configuration section."}]},{"pos":[1180,1669],"content":"Security token handler collections can also be named; to be used in certain circumstances. The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens; for example `<securityTokenHandlers name=\"ActAs\">`. The `name` attribute is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name%2A> property.","nodes":[{"content":"Security token handler collections can also be named; to be used in certain circumstances.","pos":[0,90]},{"content":"The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\".","pos":[91,162]},{"content":"If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens; for example <ph id=\"ph1\">`&lt;securityTokenHandlers name=\"ActAs\"&gt;`</ph>.","pos":[163,348],"source":" If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens; for example `<securityTokenHandlers name=\"ActAs\">`."},{"content":"The <ph id=\"ph1\">`name`</ph> attribute is represented by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name%2A&gt;</ph> property.","pos":[349,489],"source":" The `name` attribute is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name%2A> property."}]},{"pos":[1676,2186],"content":"The `<securityTokenHandlerConfiguration>` child element defines default settings for the handlers in the collection (which can be overridden by the settings defined by individual handlers in the \\<add> element). The `<securityTokenHandlerElement>` is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class and is accessed through the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration> property.","nodes":[{"content":"The <ph id=\"ph1\">`&lt;securityTokenHandlerConfiguration&gt;`</ph> child element defines default settings for the handlers in the collection (which can be overridden by the settings defined by individual handlers in the <ph id=\"ph2\">\\&lt;</ph>add&gt; element).","pos":[0,211],"source":"The `<securityTokenHandlerConfiguration>` child element defines default settings for the handlers in the collection (which can be overridden by the settings defined by individual handlers in the \\<add> element)."},{"content":"The <ph id=\"ph1\">`&lt;securityTokenHandlerElement&gt;`</ph> is represented by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement&gt;</ph> class and is accessed through the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration&gt;</ph> property.","pos":[212,510],"source":" The `<securityTokenHandlerElement>` is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class and is accessed through the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration> property."}]}],"pos":[1366,3568],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\"></xref> class.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\"></xref> class."}],"pos":[10995,11130],"yaml":true},{"content":"Gets or sets the name of the collection.","nodes":[{"pos":[0,40],"content":"Gets or sets the name of the collection.","nodes":[{"content":"Gets or sets the name of the collection.","pos":[0,40]}]}],"pos":[16660,16701],"yaml":true},{"content":"Represents the `name` attribute of the `<securityTokenHandlers>` element.  \n  \n The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens.","nodes":[{"pos":[0,73],"content":"Represents the <ph id=\"ph1\">`name`</ph> attribute of the <ph id=\"ph2\">`&lt;securityTokenHandlers&gt;`</ph> element.","source":"Represents the `name` attribute of the `<securityTokenHandlers>` element."},{"pos":[80,285],"content":"The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens.","nodes":[{"content":"The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens.","pos":[0,205],"nodes":[{"content":"The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\".","pos":[0,71]},{"content":"If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens.","pos":[72,205]}]}]}],"pos":[16712,17006],"yaml":true,"extradata":"MT"},{"content":"The name of the collection.","nodes":[{"pos":[0,27],"content":"The name of the collection.","nodes":[{"content":"The name of the collection.","pos":[0,27]}]}],"pos":[17312,17340],"yaml":true},{"content":"Gets or sets the default settings for the handlers in the collection.","nodes":[{"pos":[0,69],"content":"Gets or sets the default settings for the handlers in the collection.","nodes":[{"content":"Gets or sets the default settings for the handlers in the collection.","pos":[0,69]}]}],"pos":[20205,20275],"yaml":true},{"content":"Represents the `<securityTokenHandlerConfiguration>` child element of the `<securityTokenHandlers>` element.","nodes":[{"pos":[0,108],"content":"Represents the <ph id=\"ph1\">`&lt;securityTokenHandlerConfiguration&gt;`</ph> child element of the <ph id=\"ph2\">`&lt;securityTokenHandlers&gt;`</ph> element.","source":"Represents the `<securityTokenHandlerConfiguration>` child element of the `<securityTokenHandlers>` element."}],"pos":[20286,20395],"yaml":true,"extradata":"MT"},{"content":"The default settings for the handlers in the collection.","nodes":[{"pos":[0,56],"content":"The default settings for the handlers in the collection.","nodes":[{"content":"The default settings for the handlers in the collection.","pos":[0,56]}]}],"pos":[20784,20841],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  commentId: T:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  id: SecurityTokenHandlerElementCollection\n  children:\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  langs:\n  - csharp\n  name: SecurityTokenHandlerElementCollection\n  nameWithType: SecurityTokenHandlerElementCollection\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Represents a `<securityTokenHandlers>` element in a configuration file. This class cannot be inherited.\n  remarks: \"The `<securityTokenHandlers>` element contains the set of security token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) that are registered with the endpoint. By default, the collection is populated with <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>, and <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>.  \\n  \\n In the configuration file, each token handler can have custom configuration as a child element to its `<add>` element. <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler> and <xref:System.IdentityModel.Tokens.MembershipUserNameSecurityTokenHandler> have a pre-defined custom configuration section.  \\n  \\n Security token handler collections can also be named; to be used in certain circumstances. The only names that the framework handles are \\\"ActAs\\\" and \\\"OnBehalfOf\\\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens; for example `<securityTokenHandlers name=\\\"ActAs\\\">`. The `name` attribute is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name%2A> property.  \\n  \\n The `<securityTokenHandlerConfiguration>` child element defines default settings for the handlers in the collection (which can be overridden by the settings defined by individual handlers in the \\\\<add> element). The `<securityTokenHandlerElement>` is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class and is accessed through the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration> property.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationCollection(typeof(System.IdentityModel.Configuration.CustomTypeElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]\n\n      public sealed class SecurityTokenHandlerElementCollection : System.Configuration.ConfigurationElementCollection\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationElementCollection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.AddElementName\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseClear\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys\n  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ClearElementName\n  - System.Configuration.ConfigurationElementCollection.CollectionType\n  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)\n  - System.Configuration.ConfigurationElementCollection.Count\n  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)\n  - System.Configuration.ConfigurationElementCollection.ElementName\n  - System.Configuration.ConfigurationElementCollection.EmitClear\n  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)\n  - System.Configuration.ConfigurationElementCollection.GetEnumerator\n  - System.Configuration.ConfigurationElementCollection.GetHashCode\n  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)\n  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.IsModified\n  - System.Configuration.ConfigurationElementCollection.IsReadOnly\n  - System.Configuration.ConfigurationElementCollection.IsSynchronized\n  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElementCollection.RemoveElementName\n  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.ResetModified\n  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.SetReadOnly\n  - System.Configuration.ConfigurationElementCollection.SyncRoot\n  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate\n  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  attributes:\n  - type: System.Configuration.ConfigurationCollectionAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor\n  commentId: M:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: SecurityTokenHandlerElementCollection()\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()\n  fullName: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\"></xref> class.\n  syntax:\n    content: public SecurityTokenHandlerElementCollection ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement\n  commentId: M:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement\n  id: CreateNewElement\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: CreateNewElement()\n  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement()\n  fullName: SecurityTokenHandlerElementCollection.CreateNewElement()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationElement CreateNewElement ();\n    parameters: []\n    return:\n      type: System.Configuration.ConfigurationElement\n      description: ''\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  commentId: M:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  id: GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)\n  fullName: SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: ''\n    return:\n      type: System.Object\n      description: ''\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init\n  commentId: M:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init\n  id: Init\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: Init()\n  nameWithType: SecurityTokenHandlerElementCollection.Init()\n  fullName: SecurityTokenHandlerElementCollection.Init()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override void Init ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n  commentId: P:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n  id: Name\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: Name\n  nameWithType: SecurityTokenHandlerElementCollection.Name\n  fullName: SecurityTokenHandlerElementCollection.Name\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the name of the collection.\n  remarks: \"Represents the `name` attribute of the `<securityTokenHandlers>` element.  \\n  \\n The only names that the framework handles are \\\"ActAs\\\" and \\\"OnBehalfOf\\\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"name\", Options=System.Configuration.ConfigurationPropertyOptions.IsKey)]\n\n      [System.Configuration.StringValidator(MinLength=0)]\n\n      public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the collection.\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n  commentId: P:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n  id: Properties\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: SecurityTokenHandlerElementCollection.Properties\n  fullName: SecurityTokenHandlerElementCollection.Properties\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  commentId: P:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  id: SecurityTokenHandlerConfiguration\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  langs:\n  - csharp\n  name: SecurityTokenHandlerConfiguration\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  fullName: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the default settings for the handlers in the collection.\n  remarks: Represents the `<securityTokenHandlerConfiguration>` child element of the `<securityTokenHandlers>` element.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"securityTokenHandlerConfiguration\", IsRequired=false)]\n\n      public System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement SecurityTokenHandlerConfiguration { get; set; }\n    return:\n      type: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n      description: The default settings for the handlers in the collection.\n  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Configuration.ConfigurationElementCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElementCollection\n  nameWithType: ConfigurationElementCollection\n  fullName: System.Configuration.ConfigurationElementCollection\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: SecurityTokenHandlerElementCollection()\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()\n  fullName: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: CreateNewElement()\n  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement()\n  fullName: SecurityTokenHandlerElementCollection.CreateNewElement()\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)\n  fullName: SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Init()\n  nameWithType: SecurityTokenHandlerElementCollection.Init()\n  fullName: SecurityTokenHandlerElementCollection.Init()\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Name\n  nameWithType: SecurityTokenHandlerElementCollection.Name\n  fullName: SecurityTokenHandlerElementCollection.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Properties\n  nameWithType: SecurityTokenHandlerElementCollection.Properties\n  fullName: SecurityTokenHandlerElementCollection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: SecurityTokenHandlerConfiguration\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  fullName: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: SecurityTokenHandlerConfigurationElement\n  nameWithType: SecurityTokenHandlerConfigurationElement\n  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: SecurityTokenHandlerElementCollection\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection\n  fullName: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: CreateNewElement\n  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement\n  fullName: SecurityTokenHandlerElementCollection.CreateNewElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: GetElementKey\n  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey\n  fullName: SecurityTokenHandlerElementCollection.GetElementKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Init\n  nameWithType: SecurityTokenHandlerElementCollection.Init\n  fullName: SecurityTokenHandlerElementCollection.Init\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Name\n  nameWithType: SecurityTokenHandlerElementCollection.Name\n  fullName: SecurityTokenHandlerElementCollection.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: Properties\n  nameWithType: SecurityTokenHandlerElementCollection.Properties\n  fullName: SecurityTokenHandlerElementCollection.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration*\n  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection\n  isExternal: false\n  name: SecurityTokenHandlerConfiguration\n  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  fullName: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/SecurityTokenHandlerElementCollection.xml\n- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElementCollection.Equals(Object)\n  fullName: ConfigurationElementCollection.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElementCollection.GetHashCode\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElementCollection.GetHashCode()\n  fullName: ConfigurationElementCollection.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElementCollection.IsModified\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElementCollection.IsModified()\n  fullName: ConfigurationElementCollection.IsModified()\n- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElementCollection.IsReadOnly()\n  fullName: ConfigurationElementCollection.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)\n  fullName: ConfigurationElementCollection.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElementCollection.ResetModified\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElementCollection.ResetModified()\n  fullName: ConfigurationElementCollection.ResetModified()\n- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElementCollection.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElementCollection.SetReadOnly()\n  fullName: ConfigurationElementCollection.SetReadOnly()\n- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElementCollection.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationElementCollection.AddElementName\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: AddElementName\n  nameWithType: ConfigurationElementCollection.AddElementName\n  fullName: ConfigurationElementCollection.AddElementName\n- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseAdd(ConfigurationElement)\n  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)\n  fullName: ConfigurationElementCollection.BaseAdd(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseAdd(ConfigurationElement, Boolean)\n  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement, Boolean)\n  fullName: ConfigurationElementCollection.BaseAdd(ConfigurationElement, Boolean)\n- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseAdd(Int32, ConfigurationElement)\n  nameWithType: ConfigurationElementCollection.BaseAdd(Int32, ConfigurationElement)\n  fullName: ConfigurationElementCollection.BaseAdd(Int32, ConfigurationElement)\n- uid: System.Configuration.ConfigurationElementCollection.BaseClear\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseClear()\n  nameWithType: ConfigurationElementCollection.BaseClear()\n  fullName: ConfigurationElementCollection.BaseClear()\n- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseGet(Int32)\n  nameWithType: ConfigurationElementCollection.BaseGet(Int32)\n  fullName: ConfigurationElementCollection.BaseGet(Int32)\n- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseGet(Object)\n  nameWithType: ConfigurationElementCollection.BaseGet(Object)\n  fullName: ConfigurationElementCollection.BaseGet(Object)\n- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseGetAllKeys()\n  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()\n  fullName: ConfigurationElementCollection.BaseGetAllKeys()\n- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseGetKey(Int32)\n  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)\n  fullName: ConfigurationElementCollection.BaseGetKey(Int32)\n- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseIndexOf(ConfigurationElement)\n  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)\n  fullName: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseIsRemoved(Object)\n  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)\n  fullName: ConfigurationElementCollection.BaseIsRemoved(Object)\n- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseRemove(Object)\n  nameWithType: ConfigurationElementCollection.BaseRemove(Object)\n  fullName: ConfigurationElementCollection.BaseRemove(Object)\n- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: BaseRemoveAt(Int32)\n  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)\n  fullName: ConfigurationElementCollection.BaseRemoveAt(Int32)\n- uid: System.Configuration.ConfigurationElementCollection.ClearElementName\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: ClearElementName\n  nameWithType: ConfigurationElementCollection.ClearElementName\n  fullName: ConfigurationElementCollection.ClearElementName\n- uid: System.Configuration.ConfigurationElementCollection.CollectionType\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: CollectionType\n  nameWithType: ConfigurationElementCollection.CollectionType\n  fullName: ConfigurationElementCollection.CollectionType\n- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: CopyTo(ConfigurationElement[], Int32)\n  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[], Int32)\n  fullName: ConfigurationElementCollection.CopyTo(ConfigurationElement[], Int32)\n- uid: System.Configuration.ConfigurationElementCollection.Count\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: Count\n  nameWithType: ConfigurationElementCollection.Count\n  fullName: ConfigurationElementCollection.Count\n- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: CreateNewElement(String)\n  nameWithType: ConfigurationElementCollection.CreateNewElement(String)\n  fullName: ConfigurationElementCollection.CreateNewElement(String)\n- uid: System.Configuration.ConfigurationElementCollection.ElementName\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: ElementName\n  nameWithType: ConfigurationElementCollection.ElementName\n  fullName: ConfigurationElementCollection.ElementName\n- uid: System.Configuration.ConfigurationElementCollection.EmitClear\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: EmitClear\n  nameWithType: ConfigurationElementCollection.EmitClear\n  fullName: ConfigurationElementCollection.EmitClear\n- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ConfigurationElementCollection.GetEnumerator()\n  fullName: ConfigurationElementCollection.GetEnumerator()\n- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: IsElementName(String)\n  nameWithType: ConfigurationElementCollection.IsElementName(String)\n  fullName: ConfigurationElementCollection.IsElementName(String)\n- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: IsElementRemovable(ConfigurationElement)\n  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)\n  fullName: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ConfigurationElementCollection.IsSynchronized\n  fullName: ConfigurationElementCollection.IsSynchronized\n- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: RemoveElementName\n  nameWithType: ConfigurationElementCollection.RemoveElementName\n  fullName: ConfigurationElementCollection.RemoveElementName\n- uid: System.Configuration.ConfigurationElementCollection.SyncRoot\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ConfigurationElementCollection.SyncRoot\n  fullName: ConfigurationElementCollection.SyncRoot\n- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: ThrowOnDuplicate\n  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate\n  fullName: ConfigurationElementCollection.ThrowOnDuplicate\n- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Configuration.ConfigurationElementCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ConfigurationElementCollection.ICollection.CopyTo(Array, Int32)\n  fullName: ConfigurationElementCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}