### YamlMime:ManagedReference
items:
- uid: System.IDisposable
  commentId: T:System.IDisposable
  id: IDisposable
  children:
  - System.IDisposable.Dispose
  langs:
  - csharp
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
  type: Interface
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Provides a mechanism for releasing unmanaged resources.
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/idisposable.cs#1f55292c3174123d). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n The primary use of this interface is to release unmanaged resources. The garbage collector automatically releases the memory allocated to a managed object when that object is no longer used. However, it is not possible to predict when garbage collection will occur. Furthermore, the garbage collector has no knowledge of unmanaged resources such as window handles, or open files and streams.  \n  \n Use the <xref:System.IDisposable.Dispose%2A> method of this interface to explicitly release unmanaged resources in conjunction with the garbage collector. The consumer of an object can call this method when the object is no longer needed.  \n  \n> [!WARNING]\n>  It is a breaking change to add the <xref:System.IDisposable> interface to an existing class. Because pre-existing consumers of your type cannot call <xref:System.IDisposable.Dispose%2A>, you cannot be certain that unmanaged resources held by your type will be released.  \n  \n Because the <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> implementation is called by the consumer of a type when the resources owned by an instance are no longer needed, you should either wrap the managed object in a <xref:System.Runtime.InteropServices.SafeHandle> (the recommended alternative), or you should override <xref:System.Object.Finalize%2A?displayProperty=fullName> to free unmanaged resources in the event that the consumer forgets to call <xref:System.IDisposable.Dispose%2A>.  \n  \n> [!IMPORTANT]\n>  In the .NET Framework, the C++ compiler supports deterministic disposal of resources and does not allow direct implementation of the <xref:System.IDisposable.Dispose%2A> method.  \n  \n For a detailed discussion about how this interface and the <xref:System.Object.Finalize%2A?displayProperty=fullName> method are used, see the [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) topics.  \n  \n## Using an object that implements IDisposable  \n Implement <xref:System.IDisposable> only if you are using unmanaged resources directly. If your app simply uses an object that implements <xref:System.IDisposable>, don't provide an <xref:System.IDisposable> implementation. Instead, you should call the object's <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> implementation when you are finished using it. Depending on your programming language, you can do this in one of two ways:  \n  \n-   By using a language construct such as the `using` statement in C# and Visual Basic.  \n  \n-   By wrapping the call to the <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> implementation in a `try`/`catch` block.  \n  \n> [!NOTE]\n>  Documentation for types that implement <xref:System.IDisposable> note that fact and include a reminder to call its <xref:System.IDisposable.Dispose%2A> implementation.  \n  \n<a name=\"Using\"></a>   \n### The C# and Visual Basic Using statement  \n If your language supports a construct such as the [using](~/docs/csharp/language-reference/keywords/using.md) statement in C# and the [Using](~/docs/visual-basic/language-reference/statements/using-statement.md) statement in Visual Basic, you can use it instead of explicitly calling <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> yourself. The following example uses this approach in defining a `WordCount` class that preserves information about a file and the number of words in it.  \n  \n [!code-csharp[System.IDisposable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.idisposable/cs/calling1.cs#1)]\n [!code-vb[System.IDisposable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.idisposable/vb/calling1.vb#1)]  \n  \n The `using` statement is actually a syntactic convenience. At compile time, the language compiler implements the intermediate language (IL) for a `try`/`catch` block.  \n  \n For more information about the `using` statement, see the [Using Statement](~/docs/visual-basic/language-reference/statements/using-statement.md) or [using Statement](~/docs/csharp/language-reference/keywords/using-statement.md) topics.  \n  \n### The Try/Catch block  \n If your programming language does not support a construct like the `using` statement in C# or Visual Basic, or if you prefer not to use it, you can call the <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> implementation from the `finally` block of a `try`/`catch` statement. The following example replaces the `using` block in the previous example with a `try`/`catch`/`finally` block.  \n  \n [!code-csharp[System.IDisposable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.idisposable/cs/calling2.cs#2)]\n [!code-vb[System.IDisposable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.idisposable/vb/calling2.vb#2)]  \n  \n For more information about the `try`/`finally` pattern, see [Try...Catch...Finally Statement](~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md), [try-finally](~/docs/csharp/language-reference/keywords/try-finally.md), or [try-finally Statement](http://msdn.microsoft.com/library/514400c1-c322-4bf3-9e48-3047240b8a82).  \n  \n## Implementing IDisposable  \n You should implement <xref:System.IDisposable> only if your type uses unmanaged resources directly. The consumers of your type can call your <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> implementation to free resources when the instance is no longer needed. To handle cases in which they fail to call <xref:System.IDisposable.Dispose%2A>, you should either use a class derived from <xref:System.Runtime.InteropServices.SafeHandle> to wrap the unmanaged resources, or you should override the <xref:System.Object.Finalize%2A?displayProperty=fullName> method for a reference type. In either case, you use the <xref:System.IDisposable.Dispose%2A> method to perform whatever cleanup is necessary after using the unmanaged resources, such as freeing, releasing, or resetting the unmanaged resources.  \n  \n> [!IMPORTANT]\n>  If you are defining a base class that uses unmanaged resources and that either has, or is likely to have, subclasses that should be disposed, you should implement the <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> method and provide a second overload of `Dispose`, as discussed in the next section.  \n  \n<a name=\"BaseClasses\"></a>   \n## IDisposable and the inheritance hierarchy  \n A base class with subclasses that should be disposable must implement <xref:System.IDisposable> as follows. You should use this pattern whenever you implement <xref:System.IDisposable> on any type that isn't `sealed` (`NotInheritable` in Visual Basic).  \n  \n-   It should provide one public, non-virtual <xref:System.IDisposable.Dispose> method and a protected virtual `Dispose(Boolean disposing)` method.  \n  \n-   The <xref:System.IDisposable.Dispose> method must call `Dispose(true)` and should suppress finalization for performance.  \n  \n-   The base type should not include any finalizers.  \n  \n The following code fragment reflects the dispose pattern for base classes. It assumes that your type does not override the <xref:System.Object.Finalize%2A?displayProperty=fullName> method.  \n  \n [!code-csharp[System.IDisposable#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.idisposable/cs/base1.cs#3)]\n [!code-vb[System.IDisposable#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.idisposable/vb/base1.vb#3)]  \n  \n If you do override the <xref:System.Object.Finalize%2A?displayProperty=fullName> method, your class should implement the following pattern.  \n  \n [!code-csharp[System.IDisposable#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.idisposable/cs/base2.cs#5)]\n [!code-vb[System.IDisposable#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.idisposable/vb/base2.vb#5)]  \n  \n Subclasses should implement the disposable pattern as follows:  \n  \n-   They must override `Dispose(Boolean)` and call the base class `Dispose(Boolean)` implementation.  \n  \n-   They can provide a finalizer if needed. The finalizer must call `Dispose(false)`.  \n  \n Note that derived classes do not themselves implement the <xref:System.IDisposable> interface and do not include a parameterless <xref:System.IDisposable.Dispose%2A> method. They only override the base class `Dispose(Boolean)` method.  \n  \n The following code fragment reflects the dispose pattern for derived classes. It assumes that your type does not override the <xref:System.Object.Finalize%2A?displayProperty=fullName> method.  \n  \n [!code-csharp[System.IDisposable#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.idisposable/cs/derived1.cs#4)]\n [!code-vb[System.IDisposable#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.idisposable/vb/derived1.vb#4)]"
  example:
  - "The following example demonstrates how to create a resource class that implements the <xref:System.IDisposable> interface.  \n  \n [!code-cpp[System.IDisposable.Dispose Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IDisposable.Dispose Example/CPP/idisposabledispose.cpp#1)]\n [!code-csharp[System.IDisposable.Dispose Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IDisposable.Dispose Example/CS/idisposabledispose.cs#1)]\n [!code-vb[System.IDisposable.Dispose Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IDisposable.Dispose Example/VB/idisposabledispose.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDisposable
  derivedClasses:
  - DbLinq.Util.BaseLock
  - Microsoft.Build.Debugging.DebuggerManager.IslandThread
  - Microsoft.Build.Evaluation.ProjectCollection
  - Microsoft.Build.Execution.BuildManager
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  - Microsoft.FSharp.Core.CompilerServices.ITypeProvider
  - Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment
  - Microsoft.VisualBasic.Compatibility.VB6.MBinding
  - Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection
  - Microsoft.VisualBasic.FileIO.TextFieldParser
  - Microsoft.Win32.RegistryKey
  - Mono.Security.Interface.IMonoSslStream
  - Mono.Security.Protocol.Ntlm.ChallengeResponse
  - System.ActivationContext
  - System.Activities.WorkflowDataContext
  - System.Activities.Debugger.StateManager
  - System.Activities.Presentation.EditingContext
  - System.Activities.Presentation.Model.ModelEditingScope
  - System.Activities.Statements.DurableTimerExtension
  - System.AddIn.Contract.IEnumeratorContract`1
  - System.AddIn.Pipeline.ContractHandle
  - System.CodeDom.Compiler.TempFileCollection
  - System.Collections.Concurrent.BlockingCollection`1
  - System.Collections.Generic.IEnumerator`1
  - System.ComponentModel.Component
  - System.ComponentModel.Container
  - System.ComponentModel.EventHandlerList
  - System.ComponentModel.IComponent
  - System.ComponentModel.IContainer
  - System.ComponentModel.INestedContainer
  - System.ComponentModel.License
  - System.ComponentModel.MarshalByValueComponent
  - System.ComponentModel.NestedContainer
  - System.ComponentModel.Composition.ExportLifetimeContext`1
  - System.ComponentModel.Composition.Hosting.AggregateExportProvider
  - System.ComponentModel.Composition.Hosting.AtomicComposition
  - System.ComponentModel.Composition.Hosting.CatalogExportProvider
  - System.ComponentModel.Composition.Hosting.ComposablePartExportProvider
  - System.ComponentModel.Composition.Hosting.CompositionContainer
  - System.ComponentModel.Composition.Hosting.CompositionService
  - System.ComponentModel.Composition.Hosting.ImportEngine
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  - System.ComponentModel.Design.ComponentDesigner
  - System.ComponentModel.Design.DesignerActionService
  - System.ComponentModel.Design.DesignerActionUIService
  - System.ComponentModel.Design.DesignerTransaction
  - System.ComponentModel.Design.DesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager
  - System.ComponentModel.Design.IDesigner
  - System.ComponentModel.Design.InheritanceService
  - System.ComponentModel.Design.IRootDesigner
  - System.ComponentModel.Design.ITreeDesigner
  - System.ComponentModel.Design.LocalizationExtenderProvider
  - System.ComponentModel.Design.MenuCommandService
  - System.ComponentModel.Design.ServiceContainer
  - System.ComponentModel.Design.UndoEngine
  - System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider
  - System.ComponentModel.Design.Serialization.SerializationStore
  - System.Composition.Export`1
  - System.Composition.Hosting.CompositionHost
  - System.Composition.Hosting.Core.CompositionOperation
  - System.Composition.Hosting.Core.LifetimeContext
  - System.Data.IDataReader
  - System.Data.IDbCommand
  - System.Data.IDbConnection
  - System.Data.IDbTransaction
  - System.Data.Common.DbCommand
  - System.Data.Common.DbConnection
  - System.Data.Common.DbDataReader
  - System.Data.Common.DbTransaction
  - System.Data.Linq.DataContext
  - System.Data.Linq.IExecuteResult
  - System.Data.Linq.IMultipleResults
  - System.Data.Linq.ISingleResult`1
  - System.Data.Linq.SqlClient.SqlProvider
  - System.Data.Objects.ObjectContext
  - System.Data.Objects.ObjectResult
  - System.Data.OleDb.OleDbCommand
  - System.Data.OleDb.OleDbConnection
  - System.Data.Services.Client.DataServiceStreamResponse
  - System.Data.SqlClient.SqlBulkCopy
  - System.Data.SqlClient.SqlCommand
  - System.Data.SqlClient.SqlConnection
  - System.Data.SqlClient.SqlDataReader
  - System.Data.SqlClient.SqlTransaction
  - System.Deployment.Application.InPlaceHostingManager
  - System.Device.Location.GeoCoordinateWatcher
  - System.Diagnostics.DiagnosticListener
  - System.Diagnostics.TraceListener
  - System.Diagnostics.Eventing.EventProvider
  - System.Diagnostics.Eventing.Reader.EventLogConfiguration
  - System.Diagnostics.Eventing.Reader.EventLogPropertySelector
  - System.Diagnostics.Eventing.Reader.EventLogReader
  - System.Diagnostics.Eventing.Reader.EventLogSession
  - System.Diagnostics.Eventing.Reader.EventLogWatcher
  - System.Diagnostics.Eventing.Reader.EventRecord
  - System.Diagnostics.Eventing.Reader.ProviderMetadata
  - System.Diagnostics.PerformanceData.CounterSet
  - System.Diagnostics.PerformanceData.CounterSetInstance
  - System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet
  - System.Diagnostics.SymbolStore.SymBinder
  - System.Diagnostics.SymbolStore.SymDocument
  - System.Diagnostics.SymbolStore.SymDocumentWriter
  - System.Diagnostics.SymbolStore.SymMethod
  - System.Diagnostics.SymbolStore.SymReader
  - System.Diagnostics.SymbolStore.SymScope
  - System.Diagnostics.SymbolStore.SymVariable
  - System.Diagnostics.SymbolStore.SymWriter
  - System.Diagnostics.Tracing.EventListener
  - System.Diagnostics.Tracing.EventSource
  - System.DirectoryServices.SearchResultCollection
  - System.DirectoryServices.AccountManagement.Principal
  - System.DirectoryServices.AccountManagement.PrincipalContext
  - System.DirectoryServices.AccountManagement.PrincipalSearcher
  - System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySite
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet
  - System.DirectoryServices.ActiveDirectory.DirectoryServer
  - System.DirectoryServices.ActiveDirectory.Forest
  - System.DirectoryServices.ActiveDirectory.ReplicationConnection
  - System.DirectoryServices.Protocols.LdapConnection
  - System.Drawing.Brush
  - System.Drawing.BufferedGraphics
  - System.Drawing.BufferedGraphicsContext
  - System.Drawing.Font
  - System.Drawing.FontConverter.FontNameConverter
  - System.Drawing.FontFamily
  - System.Drawing.Graphics
  - System.Drawing.Icon
  - System.Drawing.IDeviceContext
  - System.Drawing.Image
  - System.Drawing.Pen
  - System.Drawing.Region
  - System.Drawing.StringFormat
  - System.Drawing.Drawing2D.CustomLineCap
  - System.Drawing.Drawing2D.GraphicsPath
  - System.Drawing.Drawing2D.GraphicsPathIterator
  - System.Drawing.Drawing2D.Matrix
  - System.Drawing.Imaging.EncoderParameter
  - System.Drawing.Imaging.EncoderParameters
  - System.Drawing.Imaging.ImageAttributes
  - System.Drawing.Text.FontCollection
  - System.IdentityModel.AsyncResult
  - System.IdentityModel.Claims.WindowsClaimSet
  - System.IdentityModel.Claims.X509CertificateClaimSet
  - System.IdentityModel.Selectors.X509SecurityTokenProvider
  - System.IdentityModel.Tokens.X509SecurityToken
  - System.IO.BinaryReader
  - System.IO.BinaryWriter
  - System.IO.Stream
  - System.IO.TextReader
  - System.IO.TextWriter
  - System.IO.UnmanagedMemoryAccessor
  - System.IO.Compression.ZipArchive
  - System.IO.IsolatedStorage.IsolatedStorageFile
  - System.IO.Log.FileRecordSequence
  - System.IO.Log.IRecordSequence
  - System.IO.Log.LogRecord
  - System.IO.Log.LogRecordSequence
  - System.IO.Log.LogStore
  - System.IO.MemoryMappedFiles.MemoryMappedFile
  - System.IO.Packaging.EncryptedPackageEnvelope
  - System.IO.Packaging.Package
  - System.IO.Packaging.PackageProperties
  - System.Management.ManagementObjectCollection.ManagementObjectEnumerator
  - System.Management.ManagementObjectCollection
  - System.Messaging.Cursor
  - System.Messaging.MessageEnumerator
  - System.Messaging.MessageQueueEnumerator
  - System.Messaging.MessageQueueTransaction
  - System.Messaging.SecurityContext
  - System.Net.HttpListener
  - System.Net.HttpListenerResponse
  - System.Net.HttpWebResponse
  - System.Net.WebResponse
  - System.Net.Http.HttpContent
  - System.Net.Http.HttpMessageHandler
  - System.Net.Http.HttpMessageInvoker
  - System.Net.Http.HttpRequestMessage
  - System.Net.Http.HttpResponseMessage
  - System.Net.Mail.AlternateViewCollection
  - System.Net.Mail.AttachmentBase
  - System.Net.Mail.AttachmentCollection
  - System.Net.Mail.LinkedResourceCollection
  - System.Net.Mail.MailMessage
  - System.Net.Mail.SmtpClient
  - System.Net.NetworkInformation.Ping
  - System.Net.PeerToPeer.PeerNameRegistration
  - System.Net.PeerToPeer.Collaboration.ContactManager
  - System.Net.PeerToPeer.Collaboration.Peer
  - System.Net.PeerToPeer.Collaboration.PeerApplication
  - System.Net.PeerToPeer.Collaboration.PeerEndPoint
  - System.Net.PeerToPeer.Collaboration.PeerObject
  - System.Net.Sockets.Socket
  - System.Net.Sockets.SocketAsyncEventArgs
  - System.Net.Sockets.TcpClient
  - System.Net.Sockets.UdpAnySourceMulticastClient
  - System.Net.Sockets.UdpClient
  - System.Net.Sockets.UdpSingleSourceMulticastClient
  - System.Net.WebSockets.ClientWebSocket
  - System.Net.WebSockets.WebSocket
  - System.Printing.PrintJobInfoCollection
  - System.Printing.PrintQueueCollection
  - System.Printing.PrintSystemObject
  - System.Printing.PrintSystemObjectPropertiesChangedEventArgs
  - System.Printing.PrintSystemObjectPropertyChangedEventArgs
  - System.Printing.PrintSystemObjects
  - System.Printing.IndexedProperties.PrintProperty
  - System.Printing.IndexedProperties.PrintPropertyDictionary
  - System.Printing.Interop.PrintTicketConverter
  - System.Reflection.Metadata.MetadataReaderProvider
  - System.Reflection.PortableExecutable.PEReader
  - System.Resources.IResourceReader
  - System.Resources.IResourceWriter
  - System.Resources.ResourceSet
  - System.Runtime.MemoryFailPoint
  - System.Runtime.Caching.ChangeMonitor
  - System.Runtime.Caching.MemoryCache
  - System.Runtime.InteropServices.CriticalHandle
  - System.Runtime.InteropServices.SafeHandle
  - System.Security.SecureString
  - System.Security.SecurityContext
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.CngKey
  - System.Security.Cryptography.DeriveBytes
  - System.Security.Cryptography.ECDiffieHellmanPublicKey
  - System.Security.Cryptography.ICryptoTransform
  - System.Security.Cryptography.IncrementalHash
  - System.Security.Cryptography.RandomNumberGenerator
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate
  - System.Security.Cryptography.X509Certificates.X509Chain
  - System.Security.Cryptography.X509Certificates.X509Store
  - System.Security.Principal.WindowsIdentity
  - System.Security.Principal.WindowsImpersonationContext
  - System.Security.RightsManagement.CryptoProvider
  - System.Security.RightsManagement.SecureEnvironment
  - System.ServiceModel.ChannelFactory
  - System.ServiceModel.ClientBase`1.ChannelBase`1
  - System.ServiceModel.ClientBase`1
  - System.ServiceModel.IClientChannel
  - System.ServiceModel.OperationContextScope
  - System.ServiceModel.ServiceHostBase
  - System.ServiceModel.Activities.SendMessageChannelCache
  - System.ServiceModel.Channels.Message
  - System.ServiceModel.Channels.MessageBuffer
  - System.ServiceModel.Channels.MessageProperties
  - System.ServiceModel.Channels.RequestContext
  - System.ServiceModel.Discovery.AnnouncementClient
  - System.ServiceModel.Discovery.DiscoveryClient
  - System.ServiceModel.Dispatcher.XPathResult
  - System.ServiceModel.Routing.RoutingService
  - System.ServiceModel.Security.SecurityMessageProperty
  - System.Speech.Recognition.RecognizerInfo
  - System.Speech.Recognition.SpeechRecognitionEngine
  - System.Speech.Recognition.SpeechRecognizer
  - System.Speech.Synthesis.SpeechSynthesizer
  - System.Threading.AsyncFlowControl
  - System.Threading.Barrier
  - System.Threading.CancellationTokenRegistration
  - System.Threading.CancellationTokenSource
  - System.Threading.CountdownEvent
  - System.Threading.ExecutionContext
  - System.Threading.HostExecutionContext
  - System.Threading.ManualResetEventSlim
  - System.Threading.PreAllocatedOverlapped
  - System.Threading.ReaderWriterLockSlim
  - System.Threading.SemaphoreSlim
  - System.Threading.ThreadLocal`1
  - System.Threading.ThreadPoolBoundHandle
  - System.Threading.Timer
  - System.Threading.WaitHandle
  - System.Threading.Tasks.Task
  - System.Transactions.CommittableTransaction
  - System.Transactions.Transaction
  - System.Transactions.TransactionScope
  - System.Web.HttpApplication
  - System.Web.XmlSiteMapProvider
  - System.Web.Caching.CacheDependency
  - System.Web.Caching.CacheStoreProvider
  - System.Web.ClientServices.ClientFormsIdentity
  - System.Web.Compilation.ClientBuildManager
  - System.Web.Compilation.IAssemblyPostProcessor
  - System.Web.Hosting.AspNetMemoryMonitor
  - System.Web.Hosting.IApplicationMonitor
  - System.Web.Security.PassportIdentity
  - System.Web.UI.Control
  - System.Web.UI.DataVisualization.Charting.ChartElement
  - System.Web.UI.DataVisualization.Charting.ChartElementCollection`1
  - System.Web.UI.DataVisualization.Charting.ChartElementOutline
  - System.Web.UI.DataVisualization.Charting.Title
  - System.Web.UI.Design.ITemplateEditingFrame
  - System.Web.UI.Design.TemplateEditingService
  - System.Web.UI.Design.TemplateEditingVerb
  - System.Web.UI.Design.WebFormsRootDesigner
  - System.Web.UI.WebControls.WebParts.WebPartTracker
  - System.Windows.Annotations.Storage.AnnotationStore
  - System.Windows.Controls.SoundPlayerAction
  - System.Windows.Controls.Primitives.DocumentPageView
  - System.Windows.Documents.DocumentPage
  - System.Windows.Forms.ApplicationContext
  - System.Windows.Forms.Control
  - System.Windows.Forms.Cursor
  - System.Windows.Forms.DataGridViewBand
  - System.Windows.Forms.DataGridViewCell
  - System.Windows.Forms.DataGridViewColumn
  - System.Windows.Forms.HtmlHistory
  - System.Windows.Forms.IBindableComponent
  - System.Windows.Forms.ImageListStreamer
  - System.Windows.Forms.PaintEventArgs
  - System.Windows.Forms.ScrollableControl
  - System.Windows.Forms.ToolStrip
  - System.Windows.Forms.ToolStripItem
  - System.Windows.Forms.ToolStripOverflow
  - System.Windows.Forms.ToolStripPanel
  - System.Windows.Forms.ToolStripPanelRow
  - System.Windows.Forms.WebBrowserSiteBase
  - System.Windows.Forms.WindowsFormsSynchronizationContext
  - System.Windows.Forms.DataVisualization.Charting.AxisScrollBar
  - System.Windows.Forms.DataVisualization.Charting.Chart
  - System.Windows.Forms.DataVisualization.Charting.ChartElement
  - System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1
  - System.Windows.Forms.DataVisualization.Charting.ChartElementOutline
  - System.Windows.Forms.DataVisualization.Charting.Cursor
  - System.Windows.Forms.DataVisualization.Charting.PrintingManager
  - System.Windows.Forms.DataVisualization.Charting.Title
  - System.Windows.Forms.Design.ComponentDocumentDesigner
  - System.Windows.Forms.Design.DocumentDesigner
  - System.Windows.Forms.Design.Behavior.BehaviorService
  - System.Windows.Ink.GestureRecognizer
  - System.Windows.Input.Cursor
  - System.Windows.Interop.HwndHost
  - System.Windows.Interop.HwndSource
  - System.Windows.Markup.Primitives.MarkupWriter
  - System.Windows.Media.CompositionTarget
  - System.Windows.Media.DrawingContext
  - System.Windows.Media.StreamGeometryContext
  - System.Windows.Media.TextFormatting.TextFormatter
  - System.Windows.Media.TextFormatting.TextLine
  - System.Windows.Media.TextFormatting.TextLineBreak
  - System.Windows.Threading.DispatcherProcessingDisabled
  - System.Windows.Xps.Packaging.XpsDocument
  - System.Windows.Xps.Packaging.XpsResource
  - System.Windows.Xps.Serialization.BasePackagingPolicy
  - System.Windows.Xps.Serialization.PackageSerializationManager
  - System.Workflow.Activities.ActiveDirectoryRole
  - System.Workflow.ComponentModel.ActivityExecutionContext
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Compiler.TypeProvider
  - System.Workflow.ComponentModel.Design.ActivityDesigner
  - System.Workflow.ComponentModel.Design.Connector
  - System.Workflow.ComponentModel.Design.DesignerTheme
  - System.Workflow.ComponentModel.Design.IWorkflowRootDesigner
  - System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter
  - System.Workflow.ComponentModel.Design.WorkflowTheme
  - System.Workflow.Runtime.WorkflowRuntime
  - System.Xaml.XamlReader
  - System.Xaml.XamlWriter
  - System.Xml.XmlNodeList
  - System.Xml.XmlReader
  - System.Xml.XmlWriter
  implements: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IDisposable.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  id: Dispose
  parent: System.IDisposable
  langs:
  - csharp
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  remarks: "Use this method to close or release unmanaged resources such as files, streams, and handles held by an instance of the class that implements this interface. By convention, this method is used for all tasks associated with freeing resources held by an object, or preparing an object for reuse.  \n  \n> [!WARNING]\n>  If you are using a class that implements the <xref:System.IDisposable> interface, you should call its <xref:System.IDisposable.Dispose%2A> implementation when you are finished using the class. For more information, see the \"Using an object that implements IDisposable\" section in the <xref:System.IDisposable> topic.  \n  \n When implementing this method, ensure that all held resources are freed by propagating the call through the containment hierarchy. For example, if an object A allocates an object B, and object B allocates an object C, then A's <xref:System.IDisposable.Dispose%2A> implementation must call <xref:System.IDisposable.Dispose%2A> on B, which must in turn call <xref:System.IDisposable.Dispose%2A> on C.  \n  \n> [!IMPORTANT]\n>  The C++ compiler supports deterministic disposal of resources and does not allow direct implementation of the <xref:System.IDisposable.Dispose%2A> method.  \n  \n An object must also call the <xref:System.IDisposable.Dispose%2A> method of its base class if the base class implements <xref:System.IDisposable>. For more information about implementing <xref:System.IDisposable> on a base class and its subclasses, see the \"IDisposable and the inheritance hierarchy\" section in the <xref:System.IDisposable> topic.  \n  \n If an object's <xref:System.IDisposable.Dispose%2A> method is called more than once, the object must ignore all calls after the first one. The object must not throw an exception if its <xref:System.IDisposable.Dispose%2A> method is called multiple times. Instance methods other than <xref:System.IDisposable.Dispose%2A> can throw an <xref:System.ObjectDisposedException> when resources are already disposed.  \n  \n Users might expect a resource type to use a particular convention to denote an allocated state versus a freed state. An example of this is stream classes, which are traditionally thought of as open or closed. The implementer of a class that has such a convention might choose to implement a public method with a customized name, such as `Close`, that calls the <xref:System.IDisposable.Dispose%2A> method.  \n  \n Because the <xref:System.IDisposable.Dispose%2A> method must be called explicitly, there is always a danger that the unmanaged resources will not be released, because the consumer of an object fails to call its <xref:System.IDisposable.Dispose%2A> method. There are two ways to avoid this:  \n  \n-   Wrap the managed resource in an object derived from <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName>. Your <xref:System.IDisposable.Dispose%2A> implementation then calls the <xref:System.IDisposable.Dispose%2A> method of the <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName> instances. For more information, see \"The SafeHandle alternative\" section in the <xref:System.Object.Finalize%2A?displayProperty=fullName> topic.  \n  \n-   Implement a finalizer to free resources when <xref:System.IDisposable.Dispose%2A> is not called. By default, the garbage collector automatically calls an object's finalizer before reclaiming its memory. However, if the <xref:System.IDisposable.Dispose%2A> method has been called, it is typically unnecessary for the garbage collector to call the disposed object's finalizer. To prevent automatic finalization, <xref:System.IDisposable.Dispose%2A> implementations can call the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method.  \n  \n When you use an object that accesses unmanaged resources, such as a <xref:System.IO.StreamWriter>, a good practice is to create the instance with a `using` statement. The `using` statement automatically closes the stream and calls <xref:System.IDisposable.Dispose%2A> on the object when the code that is using it has completed. For an example, see the <xref:System.IO.StreamWriter> class."
  example:
  - "The following example shows how you can implement the <xref:System.IDisposable.Dispose%2A> method.  \n  \n [!code-cpp[System.IDisposable.Dispose Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IDisposable.Dispose Example/CPP/idisposabledispose.cpp#1)]\n [!code-csharp[System.IDisposable.Dispose Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IDisposable.Dispose Example/CS/idisposabledispose.cs#1)]\n [!code-vb[System.IDisposable.Dispose Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IDisposable.Dispose Example/VB/idisposabledispose.vb#1)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IDisposable.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IDisposable.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: IDisposable.Dispose()
- uid: System.IDisposable.Dispose*
  parent: System.IDisposable
  isExternal: false
  name: Dispose
  nameWithType: IDisposable.Dispose
  fullName: IDisposable.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IDisposable.xml
