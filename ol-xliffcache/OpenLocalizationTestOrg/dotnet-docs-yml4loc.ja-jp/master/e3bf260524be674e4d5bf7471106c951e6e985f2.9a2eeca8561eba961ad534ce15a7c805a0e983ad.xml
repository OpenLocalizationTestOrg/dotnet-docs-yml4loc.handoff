{"nodes":[{"content":"Provides access to an add-in for a variety of tasks.","nodes":[{"pos":[0,52],"content":"Provides access to an add-in for a variety of tasks.","nodes":[{"content":"Provides access to an add-in for a variety of tasks.","pos":[0,52]}]}],"pos":[662,715],"yaml":true},{"content":"Use this class to perform the following tasks:  \n  \n-   Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.  \n  \n-   Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in. Then use that object to activate other add-ins in the same application domain as the original add-in. Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.  \n  \n-   Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.  \n  \n-   Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.  \n  \n To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.","nodes":[{"pos":[0,46],"content":"Use this class to perform the following tasks:","nodes":[{"content":"Use this class to perform the following tasks:","pos":[0,46]}]},{"pos":[56,330],"content":"Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.","nodes":[{"content":"Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.","pos":[0,274],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt;</ph> property to obtain an <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object for an add-in.","pos":[0,160],"source":"Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in."},{"content":"Then use that object to activate other add-ins in the same application domain and process as the original add-in.","pos":[161,274]}]}]},{"pos":[340,717],"content":"Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in. Then use that object to activate other add-ins in the same application domain as the original add-in. Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.","nodes":[{"content":"Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in. Then use that object to activate other add-ins in the same application domain as the original add-in. Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.","pos":[0,377],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInController.AppDomain%2A&gt;</ph> property to obtain an <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph> object for an add-in.","pos":[0,132],"source":"Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in."},{"content":"Then use that object to activate other add-ins in the same application domain as the original add-in.","pos":[133,234]},{"content":"Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.","pos":[235,377]}]}]},{"pos":[727,882],"content":"Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInController.Token%2A&gt;</ph> property to obtain an <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph> object that represents an add-in.","pos":[0,155],"source":"Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in."}]},{"pos":[892,984],"content":"Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.","nodes":[{"content":"Shut down an add-in with the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph> method.","pos":[0,92],"source":"Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method."}]},{"pos":[991,1165],"content":"To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.","nodes":[{"content":"To obtain the controller for an add-in, call the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInController.GetAddInController%2A&gt;</ph> method and pass an instance of the add-in as its parameter.","pos":[0,174],"source":"To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter."}]}],"pos":[726,1904],"yaml":true,"extradata":"MT"},{"content":"Gets an <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> object.","nodes":[{"pos":[0,74],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Hosting.AddInEnvironment\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets an <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> object."}],"pos":[3671,3746],"yaml":true},{"content":"Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.","nodes":[{"pos":[0,209],"content":"Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.","nodes":[{"content":"Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.","pos":[0,209],"nodes":[{"content":"Use this property to get the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object for an add-in.","pos":[0,95],"source":"Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in."},{"content":"Then use that object to activate other add-ins in the same application domain and process as the original add-in.","pos":[96,209]}]}]}],"pos":[3757,3967],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to activate other add-ins in the same environment as the original add-in.","nodes":[{"pos":[0,100],"content":"An object that can be used to activate other add-ins in the same environment as the original add-in.","nodes":[{"content":"An object that can be used to activate other add-ins in the same environment as the original add-in.","pos":[0,100]}]}],"pos":[4467,4568],"yaml":true},{"content":"Gets the application domain that contains an add-in.","nodes":[{"pos":[0,52],"content":"Gets the application domain that contains an add-in.","nodes":[{"content":"Gets the application domain that contains an add-in.","pos":[0,52]}]}],"pos":[5579,5632],"yaml":true},{"content":"Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain.","nodes":[{"pos":[0,132],"content":"Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain.","nodes":[{"content":"Use this property to obtain an add-in's <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> object and to activate other add-ins in the same application domain.","pos":[0,132],"source":"Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain."}]}],"pos":[5643,5776],"yaml":true,"extradata":"MT"},{"content":"The application domain of the add-in.","nodes":[{"pos":[0,37],"content":"The application domain of the add-in.","nodes":[{"content":"The application domain of the add-in.","pos":[0,37]}]}],"pos":[6223,6261],"yaml":true},{"content":"Obtains the controller for an add-in.","nodes":[{"pos":[0,37],"content":"Obtains the controller for an add-in.","nodes":[{"content":"Obtains the controller for an add-in.","pos":[0,37]}]}],"pos":[7386,7424],"yaml":true},{"content":"The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in.","nodes":[{"pos":[0,126],"content":"The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt;</ph> methods return an object that represents the host's view of the add-in.","pos":[0,126],"source":"The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in."}]}],"pos":[7435,7562],"yaml":true,"extradata":"MT"},{"content":"The host view of the add-in.","nodes":[{"pos":[0,28],"content":"The host view of the add-in.","nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]}],"pos":[7748,7777],"yaml":true},{"content":"The controller for the add-in.","nodes":[{"pos":[0,30],"content":"The controller for the add-in.","nodes":[{"content":"The controller for the add-in.","pos":[0,30]}]}],"pos":[7857,7888],"yaml":true},{"content":"Disables an add-in.","nodes":[{"pos":[0,19],"content":"Disables an add-in.","nodes":[{"content":"Disables an add-in.","pos":[0,19]}]}],"pos":[8899,8919],"yaml":true},{"content":"This method breaks the communication pipeline between an add-in and its host. If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.  \n  \n If the add-in was loaded into its own application domain, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.  \n  \n If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in. In this case, the add-in will be eligible to be reclaimed by garbage collection.  \n  \n You can also use this class to shut down an add-in that is activated in an external process.","nodes":[{"pos":[0,473],"content":"This method breaks the communication pipeline between an add-in and its host. If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.","nodes":[{"content":"This method breaks the communication pipeline between an add-in and its host. If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.","pos":[0,473],"nodes":[{"content":"This method breaks the communication pipeline between an add-in and its host.","pos":[0,77]},{"content":"If the add-in was activated in an automatically generated application domain by using the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29&gt;</ph> methods, the <ph id=\"ph3\">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph> method also unloads the application domain.","pos":[78,473],"source":" If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain."}]}]},{"pos":[480,641],"content":"If the add-in was loaded into its own application domain, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.","nodes":[{"content":"If the add-in was loaded into its own application domain, the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInController.Shutdown%2A&gt;</ph> method also unloads the application domain.","pos":[0,161],"source":"If the add-in was loaded into its own application domain, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain."}]},{"pos":[648,872],"content":"If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in. In this case, the add-in will be eligible to be reclaimed by garbage collection.","nodes":[{"content":"If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in. In this case, the add-in will be eligible to be reclaimed by garbage collection.","pos":[0,224],"nodes":[{"content":"If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in.","pos":[0,143]},{"content":"In this case, the add-in will be eligible to be reclaimed by garbage collection.","pos":[144,224]}]}]},{"pos":[879,971],"content":"You can also use this class to shut down an add-in that is activated in an external process.","nodes":[{"content":"You can also use this class to shut down an add-in that is activated in an external process.","pos":[0,92]}]}],"pos":[8930,9910],"yaml":true,"extradata":"MT"},{"content":"Gets the token that represents the add-in.","nodes":[{"pos":[0,42],"content":"Gets the token that represents the add-in.","nodes":[{"content":"Gets the token that represents the add-in.","pos":[0,42]}]}],"pos":[11416,11459],"yaml":true},{"content":"Typically, you use this property to obtain a token to activate an add-in at a later time.","nodes":[{"pos":[0,89],"content":"Typically, you use this property to obtain a token to activate an add-in at a later time.","nodes":[{"content":"Typically, you use this property to obtain a token to activate an add-in at a later time.","pos":[0,89]}]}],"pos":[11470,11560],"yaml":true,"extradata":"MT"},{"content":"An object that represents the add-in.","nodes":[{"pos":[0,37],"content":"An object that represents the add-in.","nodes":[{"content":"An object that represents the add-in.","pos":[0,37]}]}],"pos":[11712,11750],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Hosting.AddInController\n  commentId: T:System.AddIn.Hosting.AddInController\n  id: AddInController\n  children:\n  - System.AddIn.Hosting.AddInController.AddInEnvironment\n  - System.AddIn.Hosting.AddInController.AppDomain\n  - System.AddIn.Hosting.AddInController.GetAddInController(System.Object)\n  - System.AddIn.Hosting.AddInController.Shutdown\n  - System.AddIn.Hosting.AddInController.Token\n  langs:\n  - csharp\n  name: AddInController\n  nameWithType: AddInController\n  fullName: System.AddIn.Hosting.AddInController\n  type: Class\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Provides access to an add-in for a variety of tasks.\n  remarks: \"Use this class to perform the following tasks:  \\n  \\n-   Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.  \\n  \\n-   Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in. Then use that object to activate other add-ins in the same application domain as the original add-in. Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.  \\n  \\n-   Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.  \\n  \\n-   Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.  \\n  \\n To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.\"\n  example:\n  - \"The following example activates an add-in within the same environment as a previously activated add-in by using an <xref:System.AddIn.Hosting.AddInController> object.  \\n  \\n [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]\\n [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]\"\n  syntax:\n    content: public sealed class AddInController\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInController.AddInEnvironment\n  commentId: P:System.AddIn.Hosting.AddInController.AddInEnvironment\n  id: AddInEnvironment\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: AddInEnvironment\n  nameWithType: AddInController.AddInEnvironment\n  fullName: AddInController.AddInEnvironment\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets an <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> object.\n  remarks: Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in. Then use that object to activate other add-ins in the same application domain and process as the original add-in.\n  example:\n  - \"The following example activates a second add-in within the same environment as the first add-in.  \\n  \\n [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]\\n [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]\"\n  syntax:\n    content: public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }\n    return:\n      type: System.AddIn.Hosting.AddInEnvironment\n      description: An object that can be used to activate other add-ins in the same environment as the original add-in.\n  overload: System.AddIn.Hosting.AddInController.AddInEnvironment*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInController.AppDomain\n  commentId: P:System.AddIn.Hosting.AddInController.AppDomain\n  id: AppDomain\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: AppDomain\n  nameWithType: AddInController.AppDomain\n  fullName: AddInController.AppDomain\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the application domain that contains an add-in.\n  remarks: Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain.\n  example:\n  - \"The following example activates a second add-in in the same application domain as the first add-in.  \\n  \\n [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]\\n [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]\"\n  syntax:\n    content: public AppDomain AppDomain { get; }\n    return:\n      type: System.AppDomain\n      description: The application domain of the add-in.\n  overload: System.AddIn.Hosting.AddInController.AppDomain*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)\n  commentId: M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)\n  id: GetAddInController(System.Object)\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: GetAddInController(Object)\n  nameWithType: AddInController.GetAddInController(Object)\n  fullName: AddInController.GetAddInController(Object)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Obtains the controller for an add-in.\n  remarks: The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in.\n  syntax:\n    content: public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);\n    parameters:\n    - id: addIn\n      type: System.Object\n      description: The host view of the add-in.\n    return:\n      type: System.AddIn.Hosting.AddInController\n      description: The controller for the add-in.\n  overload: System.AddIn.Hosting.AddInController.GetAddInController*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInController.Shutdown\n  commentId: M:System.AddIn.Hosting.AddInController.Shutdown\n  id: Shutdown\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: Shutdown()\n  nameWithType: AddInController.Shutdown()\n  fullName: AddInController.Shutdown()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Disables an add-in.\n  remarks: \"This method breaks the communication pipeline between an add-in and its host. If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.  \\n  \\n If the add-in was loaded into its own application domain, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.  \\n  \\n If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in. In this case, the add-in will be eligible to be reclaimed by garbage collection.  \\n  \\n You can also use this class to shut down an add-in that is activated in an external process.\"\n  example:\n  - \"The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.  \\n  \\n [!code-csharp[AddInCollectionPipelineHost#6](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHost/cs/Program.cs#6)]\\n [!code-vb[AddInCollectionPipelineHost#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHost/vb/Program.vb#6)]\"\n  syntax:\n    content: public void Shutdown ();\n    parameters: []\n  overload: System.AddIn.Hosting.AddInController.Shutdown*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInController.Token\n  commentId: P:System.AddIn.Hosting.AddInController.Token\n  id: Token\n  parent: System.AddIn.Hosting.AddInController\n  langs:\n  - csharp\n  name: Token\n  nameWithType: AddInController.Token\n  fullName: AddInController.Token\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the token that represents the add-in.\n  remarks: Typically, you use this property to obtain a token to activate an add-in at a later time.\n  syntax:\n    content: public System.AddIn.Hosting.AddInToken Token { get; }\n    return:\n      type: System.AddIn.Hosting.AddInToken\n      description: An object that represents the add-in.\n  overload: System.AddIn.Hosting.AddInController.Token*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.AddIn.Hosting.AddInController.AddInEnvironment\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInController.AddInEnvironment\n  fullName: AddInController.AddInEnvironment\n- uid: System.AddIn.Hosting.AddInEnvironment\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInEnvironment\n  fullName: System.AddIn.Hosting.AddInEnvironment\n- uid: System.AddIn.Hosting.AddInController.AppDomain\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: AppDomain\n  nameWithType: AddInController.AppDomain\n  fullName: AddInController.AppDomain\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: GetAddInController(Object)\n  nameWithType: AddInController.GetAddInController(Object)\n  fullName: AddInController.GetAddInController(Object)\n- uid: System.AddIn.Hosting.AddInController\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInController\n  nameWithType: AddInController\n  fullName: System.AddIn.Hosting.AddInController\n- uid: System.AddIn.Hosting.AddInController.Shutdown\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: Shutdown()\n  nameWithType: AddInController.Shutdown()\n  fullName: AddInController.Shutdown()\n- uid: System.AddIn.Hosting.AddInController.Token\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: Token\n  nameWithType: AddInController.Token\n  fullName: AddInController.Token\n- uid: System.AddIn.Hosting.AddInToken\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInToken\n  nameWithType: AddInToken\n  fullName: System.AddIn.Hosting.AddInToken\n- uid: System.AddIn.Hosting.AddInController.AddInEnvironment*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInController.AddInEnvironment\n  fullName: AddInController.AddInEnvironment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n- uid: System.AddIn.Hosting.AddInController.AppDomain*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: AppDomain\n  nameWithType: AddInController.AppDomain\n  fullName: AddInController.AppDomain\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n- uid: System.AddIn.Hosting.AddInController.GetAddInController*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: GetAddInController\n  nameWithType: AddInController.GetAddInController\n  fullName: AddInController.GetAddInController\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n- uid: System.AddIn.Hosting.AddInController.Shutdown*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: Shutdown\n  nameWithType: AddInController.Shutdown\n  fullName: AddInController.Shutdown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n- uid: System.AddIn.Hosting.AddInController.Token*\n  parent: System.AddIn.Hosting.AddInController\n  isExternal: false\n  name: Token\n  nameWithType: AddInController.Token\n  fullName: AddInController.Token\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInController.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}