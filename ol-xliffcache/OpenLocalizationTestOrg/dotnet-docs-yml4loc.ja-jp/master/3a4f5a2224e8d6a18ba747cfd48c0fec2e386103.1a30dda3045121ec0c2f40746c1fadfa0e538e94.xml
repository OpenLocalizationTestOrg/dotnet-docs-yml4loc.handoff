{"nodes":[{"content":"A component that accepts channels and associates them with a service.","nodes":[{"pos":[0,69],"content":"A component that accepts channels and associates them with a service.","nodes":[{"content":"A component that accepts channels and associates them with a service.","pos":[0,69]}]}],"pos":[3479,3549],"yaml":true},{"content":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service. Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.  \n  \n When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can. The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.  \n  \n All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object. In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.","nodes":[{"pos":[0,409],"content":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service. Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.","nodes":[{"content":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service. Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.","pos":[0,409],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> object associates an <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> at a particular URI (called a listen URI) with an instance of a service.","pos":[0,204],"source":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object can have many <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects, each associated with a different listener and listen URI for that service.","pos":[205,409],"source":" Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service."}]}]},{"pos":[416,1111],"content":"When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can. The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.","nodes":[{"content":"When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can. The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.","pos":[0,695],"nodes":[{"content":"When a message arrives, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> queries each of the associated <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph> objects whether the endpoint can accept the message, and passes the message to the one that can.","pos":[0,268],"source":"When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph> object is responsible for processing messages from a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> when the destination address of a message matches the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A&gt;</ph> property and the message action matches the <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A&gt;</ph> property.","pos":[269,695],"source":" The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property."}]}]},{"pos":[1118,1638],"content":"All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object. In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.","nodes":[{"content":"All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object. In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.","pos":[0,520],"nodes":[{"content":"All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> object.","pos":[0,190],"source":"All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object."},{"content":"In addition to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph>, these include custom <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ph> objects, the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, the <ph id=\"ph4\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, the associated and <ph id=\"ph5\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>.","pos":[191,520],"source":" In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>."}]}]}],"pos":[3560,5205],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class."}],"pos":[9149,9260],"yaml":true},{"content":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> class from the provided listener, with system-provided default timeouts.","pos":[0,162],"source":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts."}]}],"pos":[9271,9434],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the channel dispatcher.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener\"&gt;&lt;/xref&gt;</ph> for the channel dispatcher.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the channel dispatcher."}],"pos":[9928,10027],"yaml":true},{"content":"<code>listener</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;listener&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>listener</code> is `null`."}],"pos":[10211,10244],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class."}],"pos":[11513,11624],"yaml":true},{"content":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.","nodes":[{"pos":[0,174],"content":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> class from the provided listener and binding, with system-provided default timeouts.","pos":[0,174],"source":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts."}]}],"pos":[11635,11810],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the channel dispatcher.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener\"&gt;&lt;/xref&gt;</ph> for the channel dispatcher.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the channel dispatcher."}],"pos":[12324,12423],"yaml":true},{"content":"The name of the binding used to configure the service.","nodes":[{"pos":[0,54],"content":"The name of the binding used to configure the service.","nodes":[{"content":"The name of the binding used to configure the service.","pos":[0,54]}]}],"pos":[12490,12545],"yaml":true},{"content":"<code>listener</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;listener&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>listener</code> is `null`."}],"pos":[12729,12762],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class."}],"pos":[14274,14385],"yaml":true},{"content":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.","nodes":[{"pos":[0,172],"content":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> class from the provided listener and binding, with the specified default timeouts.","pos":[0,172],"source":"Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts."}]}],"pos":[14396,14569],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the service.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener\"&gt;&lt;/xref&gt;</ph> for the service.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the service."}],"pos":[15143,15231],"yaml":true},{"content":"The name of the binding used to configure the service.","nodes":[{"pos":[0,54],"content":"The name of the binding used to configure the service.","nodes":[{"content":"The name of the binding used to configure the service.","pos":[0,54]}]}],"pos":[15298,15353],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> for the service.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"&gt;&lt;/xref&gt;</ph> for the service.","source":"The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> for the service."}],"pos":[15453,15545],"yaml":true},{"content":"<code>listener</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;listener&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>listener</code> is `null`."}],"pos":[15729,15762],"yaml":true},{"content":"Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.","nodes":[{"pos":[0,100],"content":"Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.","nodes":[{"content":"Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.","pos":[0,100]}]}],"pos":[16909,17010],"yaml":true},{"content":"`true` if the transacted accept method calls on listener are asynchronous; otherwise, `false`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the transacted accept method calls on listener are asynchronous; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the transacted accept method calls on listener are asynchronous; otherwise, `false`."}],"pos":[17153,17250],"yaml":true},{"content":"Attaches the channel dispatcher to the host.","nodes":[{"pos":[0,44],"content":"Attaches the channel dispatcher to the host.","nodes":[{"content":"Attaches the channel dispatcher to the host.","pos":[0,44]}]}],"pos":[18498,18543],"yaml":true},{"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,246],"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This property can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,246],"source":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[18554,18801],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> for the service.","source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service."}],"pos":[18997,19075],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[19268,19447],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[19553,19731],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[19887,19995],"yaml":true},{"content":"Gets the name of the binding used to configure the service.","nodes":[{"pos":[0,59],"content":"Gets the name of the binding used to configure the service.","nodes":[{"content":"Gets the name of the binding used to configure the service.","pos":[0,59]}]}],"pos":[20998,21058],"yaml":true},{"content":"Used to obtain the binding name for the binding with which this channel dispatcher is associated.","nodes":[{"pos":[0,97],"content":"Used to obtain the binding name for the binding with which this channel dispatcher is associated.","nodes":[{"content":"Used to obtain the binding name for the binding with which this channel dispatcher is associated.","pos":[0,97]}]}],"pos":[21069,21167],"yaml":true,"extradata":"MT"},{"content":"The binding name of the service.","nodes":[{"pos":[0,32],"content":"The binding name of the service.","nodes":[{"content":"The binding name of the service.","pos":[0,32]}]}],"pos":[21558,21591],"yaml":true},{"content":"Gets a set of <xref href=\"System.ServiceModel.Dispatcher.IChannelInitializer\"></xref> objects that you can use to inspect and add state to channels when they are first created.","nodes":[{"pos":[0,176],"content":"Gets a set of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.IChannelInitializer\"&gt;&lt;/xref&gt;</ph> objects that you can use to inspect and add state to channels when they are first created.","source":"Gets a set of <xref href=\"System.ServiceModel.Dispatcher.IChannelInitializer\"></xref> objects that you can use to inspect and add state to channels when they are first created."}],"pos":[22733,22910],"yaml":true},{"content":"Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created. This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.","nodes":[{"pos":[0,286],"content":"Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created. This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.","nodes":[{"content":"Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created. This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.","pos":[0,286],"nodes":[{"content":"Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created.","pos":[0,149]},{"content":"This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.","pos":[150,286]}]}]}],"pos":[22921,23208],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of type <xref href=\"System.ServiceModel.Dispatcher.IChannelInitializer\"></xref> objects.","nodes":[{"pos":[0,163],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SynchronizedCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.IChannelInitializer\"&gt;&lt;/xref&gt;</ph> objects.","source":"A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of type <xref href=\"System.ServiceModel.Dispatcher.IChannelInitializer\"></xref> objects."}],"pos":[23790,23954],"yaml":true},{"content":"Stops the listener from accepting new channels.","nodes":[{"pos":[0,47],"content":"Stops the listener from accepting new channels.","nodes":[{"content":"Stops the listener from accepting new channels.","pos":[0,47]}]}],"pos":[25054,25102],"yaml":true},{"content":"Calling this method stops the listener listening.","nodes":[{"pos":[0,49],"content":"Calling this method stops the listener listening.","nodes":[{"content":"Calling this method stops the listener listening.","pos":[0,49]}]}],"pos":[25113,25163],"yaml":true,"extradata":"MT"},{"content":"Gets the default interval of time allowed for the channel dispatcher to close.","nodes":[{"pos":[0,78],"content":"Gets the default interval of time allowed for the channel dispatcher to close.","nodes":[{"content":"Gets the default interval of time allowed for the channel dispatcher to close.","pos":[0,78]}]}],"pos":[26382,26461],"yaml":true},{"content":"This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.","nodes":[{"pos":[0,289],"content":"This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.","nodes":[{"content":"This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.","pos":[0,289],"nodes":[{"content":"This default close timeout can be set using <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph>.","pos":[0,227],"source":"This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>."},{"content":"Otherwise, a service model default value of 1 minute is used.","pos":[228,289]}]}]}],"pos":[26472,26762],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the default interval of time allowed for the channel dispatcher to close.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the default interval of time allowed for the channel dispatcher to close.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the default interval of time allowed for the channel dispatcher to close."}],"pos":[26901,27031],"yaml":true},{"content":"Gets the default interval of time allowed for the channel dispatcher to open.","nodes":[{"pos":[0,77],"content":"Gets the default interval of time allowed for the channel dispatcher to open.","nodes":[{"content":"Gets the default interval of time allowed for the channel dispatcher to open.","pos":[0,77]}]}],"pos":[28175,28253],"yaml":true},{"content":"This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.","nodes":[{"pos":[0,288],"content":"This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.","nodes":[{"content":"This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.","pos":[0,288],"nodes":[{"content":"This default open timeout can be set using <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph>.","pos":[0,226],"source":"This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>."},{"content":"Otherwise, a service model default value of 1 minute is used.","pos":[227,288]}]}]}],"pos":[28264,28553],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the default interval of time allowed for the channel dispatcher to close.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the default interval of time allowed for the channel dispatcher to close.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the default interval of time allowed for the channel dispatcher to close."}],"pos":[28691,28821],"yaml":true},{"content":"Detaches the service host from the channel dispatcher.","nodes":[{"pos":[0,54],"content":"Detaches the service host from the channel dispatcher.","nodes":[{"content":"Detaches the service host from the channel dispatcher.","pos":[0,54]}]}],"pos":[30052,30107],"yaml":true},{"content":"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \n  \n Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.","nodes":[{"pos":[0,284],"content":"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> can only be detached when the instance of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph3\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,284],"source":"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]},{"pos":[291,392],"content":"Sets the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> associated with the channel dispatcher to <ph id=\"ph2\">`null`</ph>.","source":"Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`."}],"pos":[30118,30515],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> for the service.","source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service."}],"pos":[30991,31069],"yaml":true},{"content":"<code>host</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;host&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>host</code> is `null`."}],"pos":[31254,31283],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[31393,31572],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[31678,31856],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[32012,32120],"yaml":true},{"content":"Gets the endpoint dispatchers which forward messages to the channel endpoints.","nodes":[{"pos":[0,78],"content":"Gets the endpoint dispatchers which forward messages to the channel endpoints.","nodes":[{"content":"Gets the endpoint dispatchers which forward messages to the channel endpoints.","pos":[0,78]}]}],"pos":[33111,33190],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.  \n  \n Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.","nodes":[{"pos":[0,179],"content":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> has a distinct <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph> for each endpoint that the channel can support.","pos":[0,179],"source":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support."}]},{"pos":[186,357],"content":"Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.","pos":[0,171],"source":"Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint."}]}],"pos":[33201,33563],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of <xref href=\"System.ServiceModel.Dispatcher.EndpointDispatcher\"></xref> which forward messages to the channel endpoints.","nodes":[{"pos":[0,197],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SynchronizedCollection`1\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.EndpointDispatcher\"&gt;&lt;/xref&gt;</ph> which forward messages to the channel endpoints.","source":"A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of <xref href=\"System.ServiceModel.Dispatcher.EndpointDispatcher\"></xref> which forward messages to the channel endpoints."}],"pos":[34133,34331],"yaml":true},{"content":"Gets a set of <xref href=\"System.ServiceModel.Dispatcher.IErrorHandler\"></xref> objects that can be used to insert custom error handling functionality for an endpoint.","nodes":[{"pos":[0,167],"content":"Gets a set of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.IErrorHandler\"&gt;&lt;/xref&gt;</ph> objects that can be used to insert custom error handling functionality for an endpoint.","source":"Gets a set of <xref href=\"System.ServiceModel.Dispatcher.IErrorHandler\"></xref> objects that can be used to insert custom error handling functionality for an endpoint."}],"pos":[35435,35603],"yaml":true},{"content":"A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of <xref href=\"System.ServiceModel.Dispatcher.IErrorHandler\"></xref> objects.","nodes":[{"pos":[0,152],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.SynchronizedCollection`1\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.IErrorHandler\"&gt;&lt;/xref&gt;</ph> objects.","source":"A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of <xref href=\"System.ServiceModel.Dispatcher.IErrorHandler\"></xref> objects."}],"pos":[36165,36318],"yaml":true},{"content":"Gets the host for the service associated with the dispatcher.","nodes":[{"pos":[0,61],"content":"Gets the host for the service associated with the dispatcher.","nodes":[{"content":"Gets the host for the service associated with the dispatcher.","pos":[0,61]}]}],"pos":[37372,37434],"yaml":true},{"content":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.","nodes":[{"pos":[0,233],"content":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.","nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object can have many <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects, each associated with a different <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> for that service.","pos":[0,233],"source":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service."}]}],"pos":[37445,37679],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service associated with the dispatcher.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> for the service associated with the dispatcher.","source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service associated with the dispatcher."}],"pos":[38123,38232],"yaml":true},{"content":"Gets or sets a value that indicates whether to include the details about an exception in a fault.","nodes":[{"pos":[0,97],"content":"Gets or sets a value that indicates whether to include the details about an exception in a fault.","nodes":[{"content":"Gets or sets a value that indicates whether to include the details about an exception in a fault.","pos":[0,97]}]}],"pos":[39433,39531],"yaml":true},{"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,246],"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This property can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,246],"source":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[39542,39789],"yaml":true,"extradata":"MT"},{"content":"`true` if the details about an exception are included in the faults; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if the details about an exception are included in the faults; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the details about an exception are included in the faults; otherwise, `false`."}],"pos":[40207,40298],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[40515,40694],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[40800,40978],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[41134,41242],"yaml":true},{"content":"Gets a value that indicates whether the accept method calls on the listener are done under a transaction.","nodes":[{"pos":[0,105],"content":"Gets a value that indicates whether the accept method calls on the listener are done under a transaction.","nodes":[{"content":"Gets a value that indicates whether the accept method calls on the listener are done under a transaction.","pos":[0,105]}]}],"pos":[42287,42393],"yaml":true},{"content":"`true` if the accept method calls on the listener are done under a transaction; otherwise, `false`.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">`true`</ph> if the accept method calls on the listener are done under a transaction; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the accept method calls on the listener are done under a transaction; otherwise, `false`."}],"pos":[42804,42906],"yaml":true},{"content":"Gets a value that indicates whether the receive method calls on the listener are done under a transaction.","nodes":[{"pos":[0,106],"content":"Gets a value that indicates whether the receive method calls on the listener are done under a transaction.","nodes":[{"content":"Gets a value that indicates whether the receive method calls on the listener are done under a transaction.","pos":[0,106]}]}],"pos":[44055,44162],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,324],"content":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A&gt;</ph> property can only be set when the instance of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph3\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,324],"source":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[44173,44498],"yaml":true,"extradata":"MT"},{"content":"`true` if the receive method calls on the listener are done under a transaction; otherwise, `false`.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> if the receive method calls on the listener are done under a transaction; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the receive method calls on the listener are done under a transaction; otherwise, `false`."}],"pos":[44905,45008],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[45214,45393],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[45499,45677],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[45833,45941],"yaml":true},{"content":"Gets the listener associated with the channel dispatcher.","nodes":[{"pos":[0,57],"content":"Gets the listener associated with the channel dispatcher.","nodes":[{"content":"Gets the listener associated with the channel dispatcher.","pos":[0,57]}]}],"pos":[46926,46984],"yaml":true},{"content":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.","nodes":[{"pos":[0,175],"content":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> associates an <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> at a particular URI with an instance of a service.","pos":[0,175],"source":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service."}]}],"pos":[46995,47171],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> associated with the channel dispatcher.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener\"&gt;&lt;/xref&gt;</ph> associated with the channel dispatcher.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> associated with the channel dispatcher."}],"pos":[47643,47754],"yaml":true},{"content":"Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.","nodes":[{"pos":[0,117],"content":"Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.","nodes":[{"content":"Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.","pos":[0,117]}]}],"pos":[48875,48993],"yaml":true},{"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \n  \n Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.","nodes":[{"pos":[0,246],"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This property can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,246],"source":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]},{"pos":[253,520],"content":"Set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.","source":"Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers."}],"pos":[49004,49529],"yaml":true,"extradata":"MT"},{"content":"`true` if the proxy does not add any addressing headers; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,100],"content":"`true` if the proxy does not add any addressing headers; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the proxy does not add any addressing headers; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,76],"source":"`true` if the proxy does not add any addressing headers; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[77,100],"source":" The default is `false`."}]}],"pos":[49933,50036],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[50239,50418],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[50524,50702],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[50858,50966],"yaml":true},{"content":"Gets or sets the maximum pending messages per channel.","nodes":[{"pos":[0,54],"content":"Gets or sets the maximum pending messages per channel.","nodes":[{"content":"Gets or sets the maximum pending messages per channel.","pos":[0,54]}]}],"pos":[52011,52066],"yaml":true},{"content":"An integer representing a maximum number of messages.","nodes":[{"pos":[0,53],"content":"An integer representing a maximum number of messages.","nodes":[{"content":"An integer representing a maximum number of messages.","pos":[0,53]}]}],"pos":[52189,52243],"yaml":true},{"content":"Gets or sets the maximum size for a transacted batch.","nodes":[{"pos":[0,53],"content":"Gets or sets the maximum size for a transacted batch.","nodes":[{"content":"Gets or sets the maximum size for a transacted batch.","pos":[0,53]}]}],"pos":[53410,53464],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,327],"content":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A&gt;</ph> property can only be set when the instance of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph3\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,327],"source":"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[53475,53803],"yaml":true,"extradata":"MT"},{"content":"The maximum size for a transacted batch.","nodes":[{"pos":[0,40],"content":"The maximum size for a transacted batch.","nodes":[{"content":"The maximum size for a transacted batch.","pos":[0,40]}]}],"pos":[54210,54251],"yaml":true},{"content":"The value set is less than zero.","nodes":[{"pos":[0,32],"content":"The value set is less than zero.","nodes":[{"content":"The value set is less than zero.","pos":[0,32]}]}],"pos":[54464,54497],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[54607,54786],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[54892,55070],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[55226,55334],"yaml":true},{"content":"Gets or sets the SOAP message and WS-Addressing versions that are used or expected.","nodes":[{"pos":[0,83],"content":"Gets or sets the SOAP message and WS-Addressing versions that are used or expected.","nodes":[{"content":"Gets or sets the SOAP message and WS-Addressing versions that are used or expected.","pos":[0,83]}]}],"pos":[56355,56439],"yaml":true},{"content":"Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.  \n  \n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,92],"content":"Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.","nodes":[{"content":"Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.","pos":[0,92]}]},{"pos":[99,345],"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This property can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,246],"source":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[56450,56800],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageVersion\"></xref> that is used or expected.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageVersion\"&gt;&lt;/xref&gt;</ph> that is used or expected.","source":"The <xref href=\"System.ServiceModel.Channels.MessageVersion\"></xref> that is used or expected."}],"pos":[57270,57365],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[57566,57745],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[57851,58029],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[58185,58293],"yaml":true},{"content":"Aborts the listener associated with the dispatcher.","nodes":[{"pos":[0,51],"content":"Aborts the listener associated with the dispatcher.","nodes":[{"content":"Aborts the listener associated with the dispatcher.","pos":[0,51]}]}],"pos":[59276,59328],"yaml":true},{"content":"Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.","nodes":[{"pos":[0,139],"content":"Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.","nodes":[{"content":"Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.","pos":[0,139]}]}],"pos":[60755,60895],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out.","nodes":[{"pos":[0,119],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the close operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out."}],"pos":[61102,61222],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the close operation.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the close operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the close operation."}],"pos":[61293,61434],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","nodes":[{"pos":[0,122],"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous close operation.","pos":[0,122]}]}],"pos":[61495,61618],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous operation to close a channel listener for the dispatcher.","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous operation to close a channel listener for the dispatcher.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous operation to close a channel listener for the dispatcher."}],"pos":[61681,61817],"yaml":true},{"content":"Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.","nodes":[{"pos":[0,138],"content":"Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.","nodes":[{"content":"Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.","pos":[0,138]}]}],"pos":[63165,63304],"yaml":true},{"content":"The channel dispatcher must be associated with a non-`null` service host when this method is called.","nodes":[{"pos":[0,100],"content":"The channel dispatcher must be associated with a non-<ph id=\"ph1\">`null`</ph> service host when this method is called.","source":"The channel dispatcher must be associated with a non-`null` service host when this method is called."}],"pos":[63315,63416],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the open operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out."}],"pos":[63622,63741],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the open operation.","nodes":[{"pos":[0,139],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the open operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the open operation."}],"pos":[63812,63952],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous open operation.","nodes":[{"pos":[0,121],"content":"An object, specified by the application, that contains state information associated with the asynchronous open operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous open operation.","pos":[0,121]}]}],"pos":[64013,64135],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous operation to open a channel listener for the dispatcher.","nodes":[{"pos":[0,134],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous operation to open a channel listener for the dispatcher.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous operation to open a channel listener for the dispatcher."}],"pos":[64198,64333],"yaml":true},{"content":"The host or the message version is `null`.","nodes":[{"pos":[0,42],"content":"The host or the message version is <ph id=\"ph1\">`null`</ph>.","source":"The host or the message version is `null`."}],"pos":[64531,64574],"yaml":true},{"content":"Closes the channel listener associated with the dispatcher within a specified interval of time.","nodes":[{"pos":[0,95],"content":"Closes the channel listener associated with the dispatcher within a specified interval of time.","nodes":[{"content":"Closes the channel listener associated with the dispatcher within a specified interval of time.","pos":[0,95]}]}],"pos":[65632,65728],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time allowed for the listener to close.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time allowed for the listener to close.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time allowed for the listener to close."}],"pos":[65884,65996],"yaml":true},{"content":"Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.","nodes":[{"pos":[0,99],"content":"Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.","nodes":[{"content":"Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.","pos":[0,99]}]}],"pos":[67072,67172],"yaml":true},{"content":"Completes an asynchronous operation to close a channel listener for the dispatcher.","nodes":[{"pos":[0,83],"content":"Completes an asynchronous operation to close a channel listener for the dispatcher.","nodes":[{"content":"Completes an asynchronous operation to close a channel listener for the dispatcher.","pos":[0,83]}]}],"pos":[68439,68523],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.","nodes":[{"pos":[0,213],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method."}],"pos":[68688,68902],"yaml":true},{"content":"Completes an asynchronous operation to open a channel listener for the dispatcher.","nodes":[{"pos":[0,82],"content":"Completes an asynchronous operation to open a channel listener for the dispatcher.","nodes":[{"content":"Completes an asynchronous operation to open a channel listener for the dispatcher.","pos":[0,82]}]}],"pos":[70086,70169],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.","nodes":[{"pos":[0,212],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method."}],"pos":[70333,70546],"yaml":true},{"content":"Opens the listener associated with the channel dispatcher.","nodes":[{"pos":[0,58],"content":"Opens the listener associated with the channel dispatcher.","nodes":[{"content":"Opens the listener associated with the channel dispatcher.","pos":[0,58]}]}],"pos":[71687,71746],"yaml":true},{"content":"The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value.","nodes":[{"pos":[0,154],"content":"The channel dispatcher must be associated with a non-<ph id=\"ph1\">`null`</ph> service host when this method is called and message version must be set to a non-<ph id=\"ph2\">`null`</ph> value.","source":"The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value."}],"pos":[71757,71912],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time allowed for the listener to open.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time allowed for the listener to open.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time allowed for the listener to open."}],"pos":[72067,72178],"yaml":true},{"content":"The host or the message version is `null`.","nodes":[{"pos":[0,42],"content":"The host or the message version is <ph id=\"ph1\">`null`</ph>.","source":"The host or the message version is `null`."}],"pos":[72371,72414],"yaml":true},{"content":"Populates and validates filter table used to dispatch to the endpoints.","nodes":[{"pos":[0,71],"content":"Populates and validates filter table used to dispatch to the endpoints.","nodes":[{"content":"Populates and validates filter table used to dispatch to the endpoints.","pos":[0,71]}]}],"pos":[73403,73475],"yaml":true},{"content":"The channel dispatcher must be associated with a non-`null` service host when this method is called.","nodes":[{"pos":[0,100],"content":"The channel dispatcher must be associated with a non-<ph id=\"ph1\">`null`</ph> service host when this method is called.","source":"The channel dispatcher must be associated with a non-`null` service host when this method is called."}],"pos":[73486,73587],"yaml":true,"extradata":"MT"},{"content":"The host is `null`.","nodes":[{"pos":[0,19],"content":"The host is <ph id=\"ph1\">`null`</ph>.","source":"The host is `null`."}],"pos":[73861,73881],"yaml":true},{"content":"Checks whether the channel dispatcher is attached to a host.","nodes":[{"pos":[0,60],"content":"Checks whether the channel dispatcher is attached to a host.","nodes":[{"content":"Checks whether the channel dispatcher is attached to a host.","pos":[0,60]}]}],"pos":[74876,74937],"yaml":true},{"content":"The channel dispatcher must be associated with a non-`null` service host on opening.","nodes":[{"pos":[0,84],"content":"The channel dispatcher must be associated with a non-<ph id=\"ph1\">`null`</ph> service host on opening.","source":"The channel dispatcher must be associated with a non-`null` service host on opening."}],"pos":[74948,75033],"yaml":true,"extradata":"MT"},{"content":"The host is `null`.","nodes":[{"pos":[0,19],"content":"The host is <ph id=\"ph1\">`null`</ph>.","source":"The host is `null`."}],"pos":[75309,75329],"yaml":true},{"content":"Gets or sets whether ReceiveContext is enabled.","nodes":[{"pos":[0,47],"content":"Gets or sets whether ReceiveContext is enabled.","nodes":[{"content":"Gets or sets whether ReceiveContext is enabled.","pos":[0,47]}]}],"pos":[76392,76440],"yaml":true},{"content":"The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.","nodes":[{"pos":[0,138],"content":"The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.","nodes":[{"content":"The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.","pos":[0,138]}]}],"pos":[76451,76590],"yaml":true,"extradata":"MT"},{"content":"`true` if ReceiveContext is enabled; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if ReceiveContext is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if ReceiveContext is enabled; otherwise, `false`."}],"pos":[76719,76778],"yaml":true},{"content":"Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.","nodes":[{"pos":[0,113],"content":"Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.","nodes":[{"content":"Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.","pos":[0,113]}]}],"pos":[77936,78050],"yaml":true},{"content":"If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property. So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.  \n  \n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,431],"content":"If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property. So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.","nodes":[{"content":"If a binding implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IBindingRuntimePreferences&gt;</ph>, <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> assigns the value of the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A&gt;</ph> property to this property.","pos":[0,272],"source":"If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property."},{"content":"So if this value is <ph id=\"ph1\">`true`</ph>, the <ph id=\"ph2\">`false`</ph> default value of <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A&gt;</ph> is overridden.","pos":[273,431],"source":" So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden."}]},{"pos":[438,684],"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This property can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,246],"source":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[78061,78750],"yaml":true,"extradata":"MT"},{"content":"`true` if the dispatcher uses synchronous methods to read messages from channels; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,125],"content":"`true` if the dispatcher uses synchronous methods to read messages from channels; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dispatcher uses synchronous methods to read messages from channels; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,101],"source":"`true` if the dispatcher uses synchronous methods to read messages from channels; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[102,125],"source":" The default is `false`."}]}],"pos":[79158,79286],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[79493,79672],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[79778,79956],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[80112,80220],"yaml":true},{"content":"Gets or sets whether messages are sent asynchronously.","nodes":[{"pos":[0,54],"content":"Gets or sets whether messages are sent asynchronously.","nodes":[{"content":"Gets or sets whether messages are sent asynchronously.","pos":[0,54]}]}],"pos":[81265,81320],"yaml":true},{"content":"`true` if messages are sent asynchronously; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if messages are sent asynchronously; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if messages are sent asynchronously; otherwise, `false`."}],"pos":[81446,81512],"yaml":true},{"content":"Gets or sets the service throttle for the service associated with the channel dispatcher.","nodes":[{"pos":[0,89],"content":"Gets or sets the service throttle for the service associated with the channel dispatcher.","nodes":[{"content":"Gets or sets the service throttle for the service associated with the channel dispatcher.","pos":[0,89]}]}],"pos":[82637,82727],"yaml":true},{"content":"This provides access to the controls used to optimize the availability and performance of a service.  \n  \n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,100],"content":"This provides access to the controls used to optimize the availability and performance of a service.","nodes":[{"content":"This provides access to the controls used to optimize the availability and performance of a service.","pos":[0,100]}]},{"pos":[107,353],"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This property can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,246],"source":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[82738,83096],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ServiceModel.Dispatcher.ServiceThrottle\"></xref> object.","nodes":[{"pos":[0,77],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ServiceThrottle\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.ServiceModel.Dispatcher.ServiceThrottle\"></xref> object."}],"pos":[83573,83651],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[83853,84032],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[84138,84316],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[84472,84580],"yaml":true},{"content":"Gets or sets the default isolation level for transactions.","nodes":[{"pos":[0,58],"content":"Gets or sets the default isolation level for transactions.","nodes":[{"content":"Gets or sets the default isolation level for transactions.","pos":[0,58]}]}],"pos":[85667,85726],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.  \n  \n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,207],"content":"Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A&gt;</ph> property to get or set the default isolation level for new transactions created by the dispatcher for the service.","pos":[0,207],"source":"Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service."}]},{"pos":[214,460],"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This property can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,246],"source":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[85737,86202],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Transactions.IsolationLevel\"></xref> values. The default is <xref href=\"System.Transactions.IsolationLevel.Unspecified\"></xref>.","nodes":[{"pos":[0,158],"content":"One of the <xref href=\"System.Transactions.IsolationLevel\"></xref> values. The default is <xref href=\"System.Transactions.IsolationLevel.Unspecified\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Transactions.IsolationLevel\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,74],"source":"One of the <xref href=\"System.Transactions.IsolationLevel\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Transactions.IsolationLevel.Unspecified\"&gt;&lt;/xref&gt;</ph>.","pos":[75,158],"source":" The default is <xref href=\"System.Transactions.IsolationLevel.Unspecified\"></xref>."}]}],"pos":[86665,86824],"yaml":true},{"content":"The isolation level set is not defined.","nodes":[{"pos":[0,39],"content":"The isolation level set is not defined.","nodes":[{"content":"The isolation level set is not defined.","pos":[0,39]}]}],"pos":[87040,87080],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[87190,87369],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[87475,87653],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[87809,87917],"yaml":true},{"content":"Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.","nodes":[{"pos":[0,128],"content":"Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.","nodes":[{"content":"Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.","pos":[0,128]}]}],"pos":[88962,89091],"yaml":true},{"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"pos":[0,246],"content":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This property can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,246],"source":"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]}],"pos":[89102,89349],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> value that represents the default timeout period for transactions. The default is <xref href=\"System.TimeSpan.Zero\"></xref>.","nodes":[{"pos":[0,163],"content":"A <xref href=\"System.TimeSpan\"></xref> value that represents the default timeout period for transactions. The default is <xref href=\"System.TimeSpan.Zero\"></xref>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> value that represents the default timeout period for transactions.","pos":[0,105],"source":"A <xref href=\"System.TimeSpan\"></xref> value that represents the default timeout period for transactions."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan.Zero\"&gt;&lt;/xref&gt;</ph>.","pos":[106,163],"source":" The default is <xref href=\"System.TimeSpan.Zero\"></xref>."}]}],"pos":[89760,89924],"yaml":true},{"content":"The value set is less than zero or is too large.","nodes":[{"pos":[0,48],"content":"The value set is less than zero or is too large.","nodes":[{"content":"The value set is less than zero or is too large.","pos":[0,48]}]}],"pos":[90133,90182],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.","nodes":[{"pos":[0,178],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state."}],"pos":[90292,90471],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[90577,90755],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[90911,91019],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher\n  commentId: T:System.ServiceModel.Dispatcher.ChannelDispatcher\n  id: ChannelDispatcher\n  children:\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.Host\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.Listener\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel\n  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout\n  langs:\n  - csharp\n  name: ChannelDispatcher\n  nameWithType: ChannelDispatcher\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: A component that accepts channels and associates them with a service.\n  remarks: \"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service. Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.  \\n  \\n When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can. The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.  \\n  \\n All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object. In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.\"\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/service.cs#0)]\n     [!code-vb[S_UE_ChannelDispatcher#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/service.vb#0)]\n  syntax:\n    content: 'public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)\n  id: '#ctor(System.ServiceModel.Channels.IChannelListener)'\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ChannelDispatcher(IChannelListener)\n  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)\n  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class.\n  remarks: Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#1)]\n     [!code-vb[S_UE_ChannelDispatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#1)]\n  syntax:\n    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);\n    parameters:\n    - id: listener\n      type: System.ServiceModel.Channels.IChannelListener\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the channel dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>listener</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)\n  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String)'\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ChannelDispatcher(IChannelListener, String)\n  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener, String)\n  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class.\n  remarks: Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#2)]\n     [!code-vb[S_UE_ChannelDispatcher#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#2)]\n  syntax:\n    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);\n    parameters:\n    - id: listener\n      type: System.ServiceModel.Channels.IChannelListener\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the channel dispatcher.\n    - id: bindingName\n      type: System.String\n      description: The name of the binding used to configure the service.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>listener</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)\n  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)'\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)\n  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)\n  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher\"></xref> class.\n  remarks: Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#3)]\n     [!code-vb[S_UE_ChannelDispatcher#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#3)]\n  syntax:\n    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);\n    parameters:\n    - id: listener\n      type: System.ServiceModel.Channels.IChannelListener\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> for the service.\n    - id: bindingName\n      type: System.String\n      description: The name of the binding used to configure the service.\n    - id: timeouts\n      type: System.ServiceModel.IDefaultCommunicationTimeouts\n      description: The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> for the service.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>listener</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  id: AsynchronousTransactedAcceptEnabled\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: AsynchronousTransactedAcceptEnabled\n  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  fullName: ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.\n  syntax:\n    content: public bool AsynchronousTransactedAcceptEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the transacted accept method calls on listener are asynchronous; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)\n  id: Attach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: Attach(ServiceHostBase)\n  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)\n  fullName: ChannelDispatcher.Attach(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Attaches the channel dispatcher to the host.\n  remarks: This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\n  syntax:\n    content: protected override void Attach (System.ServiceModel.ServiceHostBase host);\n    parameters:\n    - id: host\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName\n  id: BindingName\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: BindingName\n  nameWithType: ChannelDispatcher.BindingName\n  fullName: ChannelDispatcher.BindingName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the name of the binding used to configure the service.\n  remarks: Used to obtain the binding name for the binding with which this channel dispatcher is associated.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#4)]\n     [!code-vb[S_UE_ChannelDispatcher#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#4)]\n  syntax:\n    content: public string BindingName { get; }\n    return:\n      type: System.String\n      description: The binding name of the service.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers\n  id: ChannelInitializers\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ChannelInitializers\n  nameWithType: ChannelDispatcher.ChannelInitializers\n  fullName: ChannelDispatcher.ChannelInitializers\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a set of <xref href=\"System.ServiceModel.Dispatcher.IChannelInitializer\"></xref> objects that you can use to inspect and add state to channels when they are first created.\n  remarks: Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created. This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#5)]\n     [!code-vb[S_UE_ChannelDispatcher#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#5)]\n  syntax:\n    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer> ChannelInitializers { get; }\n    return:\n      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}\n      description: A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of type <xref href=\"System.ServiceModel.Dispatcher.IChannelInitializer\"></xref> objects.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput\n  id: CloseInput\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: CloseInput()\n  nameWithType: ChannelDispatcher.CloseInput()\n  fullName: ChannelDispatcher.CloseInput()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Stops the listener from accepting new channels.\n  remarks: Calling this method stops the listener listening.\n  syntax:\n    content: public override void CloseInput ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout\n  id: DefaultCloseTimeout\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: DefaultCloseTimeout\n  nameWithType: ChannelDispatcher.DefaultCloseTimeout\n  fullName: ChannelDispatcher.DefaultCloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the default interval of time allowed for the channel dispatcher to close.\n  remarks: This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.\n  syntax:\n    content: protected override TimeSpan DefaultCloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the default interval of time allowed for the channel dispatcher to close.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout\n  id: DefaultOpenTimeout\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: DefaultOpenTimeout\n  nameWithType: ChannelDispatcher.DefaultOpenTimeout\n  fullName: ChannelDispatcher.DefaultOpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the default interval of time allowed for the channel dispatcher to open.\n  remarks: This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.\n  syntax:\n    content: protected override TimeSpan DefaultOpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the default interval of time allowed for the channel dispatcher to close.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)\n  id: Detach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: Detach(ServiceHostBase)\n  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)\n  fullName: ChannelDispatcher.Detach(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Detaches the service host from the channel dispatcher.\n  remarks: \"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \\n  \\n Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.\"\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#18)]\n     [!code-vb[S_UE_ChannelDispatcher#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#18)]\n  syntax:\n    content: protected override void Detach (System.ServiceModel.ServiceHostBase host);\n    parameters:\n    - id: host\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>host</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints\n  id: Endpoints\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: Endpoints\n  nameWithType: ChannelDispatcher.Endpoints\n  fullName: ChannelDispatcher.Endpoints\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the endpoint dispatchers which forward messages to the channel endpoints.\n  remarks: \"The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.  \\n  \\n Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.\"\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#6)]\n     [!code-vb[S_UE_ChannelDispatcher#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#6)]\n  syntax:\n    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher> Endpoints { get; }\n    return:\n      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}\n      description: A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of <xref href=\"System.ServiceModel.Dispatcher.EndpointDispatcher\"></xref> which forward messages to the channel endpoints.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers\n  id: ErrorHandlers\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ErrorHandlers\n  nameWithType: ChannelDispatcher.ErrorHandlers\n  fullName: ChannelDispatcher.ErrorHandlers\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a set of <xref href=\"System.ServiceModel.Dispatcher.IErrorHandler\"></xref> objects that can be used to insert custom error handling functionality for an endpoint.\n  remarks: ''\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#7)]\n     [!code-vb[S_UE_ChannelDispatcher#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#7)]\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler> ErrorHandlers { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}\n      description: A <xref href=\"System.Collections.Generic.SynchronizedCollection`1\"></xref> of <xref href=\"System.ServiceModel.Dispatcher.IErrorHandler\"></xref> objects.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host\n  id: Host\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: Host\n  nameWithType: ChannelDispatcher.Host\n  fullName: ChannelDispatcher.Host\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the host for the service associated with the dispatcher.\n  remarks: Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#8)]\n     [!code-vb[S_UE_ChannelDispatcher#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#8)]\n  syntax:\n    content: public override System.ServiceModel.ServiceHostBase Host { get; }\n    return:\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service associated with the dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults\n  id: IncludeExceptionDetailInFaults\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: IncludeExceptionDetailInFaults\n  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults\n  fullName: ChannelDispatcher.IncludeExceptionDetailInFaults\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets a value that indicates whether to include the details about an exception in a fault.\n  remarks: This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#19)]\n     [!code-vb[S_UE_ChannelDispatcher#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#19)]\n  syntax:\n    content: public bool IncludeExceptionDetailInFaults { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the details about an exception are included in the faults; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept\n  id: IsTransactedAccept\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: IsTransactedAccept\n  nameWithType: ChannelDispatcher.IsTransactedAccept\n  fullName: ChannelDispatcher.IsTransactedAccept\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a value that indicates whether the accept method calls on the listener are done under a transaction.\n  remarks: ''\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#9)]\n     [!code-vb[S_UE_ChannelDispatcher#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#9)]\n  syntax:\n    content: public bool IsTransactedAccept { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the accept method calls on the listener are done under a transaction; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive\n  id: IsTransactedReceive\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: IsTransactedReceive\n  nameWithType: ChannelDispatcher.IsTransactedReceive\n  fullName: ChannelDispatcher.IsTransactedReceive\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a value that indicates whether the receive method calls on the listener are done under a transaction.\n  remarks: The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#10)]\n     [!code-vb[S_UE_ChannelDispatcher#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#10)]\n  syntax:\n    content: public bool IsTransactedReceive { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the receive method calls on the listener are done under a transaction; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener\n  id: Listener\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: Listener\n  nameWithType: ChannelDispatcher.Listener\n  fullName: ChannelDispatcher.Listener\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the listener associated with the channel dispatcher.\n  remarks: A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#11)]\n     [!code-vb[S_UE_ChannelDispatcher#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#11)]\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelListener Listener { get; }\n    return:\n      type: System.ServiceModel.Channels.IChannelListener\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> associated with the channel dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing\n  id: ManualAddressing\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ManualAddressing\n  nameWithType: ChannelDispatcher.ManualAddressing\n  fullName: ChannelDispatcher.ManualAddressing\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.\n  remarks: \"This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \\n  \\n Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.\"\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#12)]\n     [!code-vb[S_UE_ChannelDispatcher#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#12)]\n  syntax:\n    content: public bool ManualAddressing { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the proxy does not add any addressing headers; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives\n  id: MaxPendingReceives\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: MaxPendingReceives\n  nameWithType: ChannelDispatcher.MaxPendingReceives\n  fullName: ChannelDispatcher.MaxPendingReceives\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the maximum pending messages per channel.\n  syntax:\n    content: public int MaxPendingReceives { get; set; }\n    return:\n      type: System.Int32\n      description: An integer representing a maximum number of messages.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize\n  id: MaxTransactedBatchSize\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: MaxTransactedBatchSize\n  nameWithType: ChannelDispatcher.MaxTransactedBatchSize\n  fullName: ChannelDispatcher.MaxTransactedBatchSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the maximum size for a transacted batch.\n  remarks: The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#13)]\n     [!code-vb[S_UE_ChannelDispatcher#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#13)]\n  syntax:\n    content: public int MaxTransactedBatchSize { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size for a transacted batch.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is less than zero.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion\n  id: MessageVersion\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: MessageVersion\n  nameWithType: ChannelDispatcher.MessageVersion\n  fullName: ChannelDispatcher.MessageVersion\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the SOAP message and WS-Addressing versions that are used or expected.\n  remarks: \"Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.  \\n  \\n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\"\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#20)]\n     [!code-vb[S_UE_ChannelDispatcher#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#20)]\n  syntax:\n    content: public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }\n    return:\n      type: System.ServiceModel.Channels.MessageVersion\n      description: The <xref href=\"System.ServiceModel.Channels.MessageVersion\"></xref> that is used or expected.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort\n  id: OnAbort\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnAbort()\n  nameWithType: ChannelDispatcher.OnAbort()\n  fullName: ChannelDispatcher.OnAbort()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Aborts the listener associated with the dispatcher.\n  syntax:\n    content: protected override void OnAbort ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelDispatcher.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.\n  syntax:\n    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the close operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous close operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous operation to close a channel listener for the dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelDispatcher.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.\n  remarks: The channel dispatcher must be associated with a non-`null` service host when this method is called.\n  syntax:\n    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the open operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous open operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous operation to open a channel listener for the dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The host or the message version is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)\n  id: OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnClose(TimeSpan)\n  nameWithType: ChannelDispatcher.OnClose(TimeSpan)\n  fullName: ChannelDispatcher.OnClose(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Closes the channel listener associated with the dispatcher within a specified interval of time.\n  syntax:\n    content: protected override void OnClose (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time allowed for the listener to close.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed\n  id: OnClosed\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnClosed()\n  nameWithType: ChannelDispatcher.OnClosed()\n  fullName: ChannelDispatcher.OnClosed()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.\n  syntax:\n    content: protected override void OnClosed ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)\n  id: OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)\n  fullName: ChannelDispatcher.OnEndClose(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Completes an asynchronous operation to close a channel listener for the dispatcher.\n  syntax:\n    content: protected override void OnEndClose (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)\n  id: OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)\n  fullName: ChannelDispatcher.OnEndOpen(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Completes an asynchronous operation to open a channel listener for the dispatcher.\n  syntax:\n    content: protected override void OnEndOpen (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)\n  id: OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnOpen(TimeSpan)\n  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)\n  fullName: ChannelDispatcher.OnOpen(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Opens the listener associated with the channel dispatcher.\n  remarks: The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value.\n  syntax:\n    content: protected override void OnOpen (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time allowed for the listener to open.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The host or the message version is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened\n  id: OnOpened\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnOpened()\n  nameWithType: ChannelDispatcher.OnOpened()\n  fullName: ChannelDispatcher.OnOpened()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Populates and validates filter table used to dispatch to the endpoints.\n  remarks: The channel dispatcher must be associated with a non-`null` service host when this method is called.\n  syntax:\n    content: protected override void OnOpened ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The host is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening\n  id: OnOpening\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: OnOpening()\n  nameWithType: ChannelDispatcher.OnOpening()\n  fullName: ChannelDispatcher.OnOpening()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Checks whether the channel dispatcher is attached to a host.\n  remarks: The channel dispatcher must be associated with a non-`null` service host on opening.\n  syntax:\n    content: protected override void OnOpening ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The host is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled\n  id: ReceiveContextEnabled\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ReceiveContextEnabled\n  nameWithType: ChannelDispatcher.ReceiveContextEnabled\n  fullName: ChannelDispatcher.ReceiveContextEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets whether ReceiveContext is enabled.\n  remarks: The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.\n  syntax:\n    content: public bool ReceiveContextEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if ReceiveContext is enabled; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously\n  id: ReceiveSynchronously\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ReceiveSynchronously\n  nameWithType: ChannelDispatcher.ReceiveSynchronously\n  fullName: ChannelDispatcher.ReceiveSynchronously\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.\n  remarks: \"If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property. So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.  \\n  \\n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\"\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#14)]\n     [!code-vb[S_UE_ChannelDispatcher#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#14)]\n  syntax:\n    content: public bool ReceiveSynchronously { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dispatcher uses synchronous methods to read messages from channels; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously\n  id: SendAsynchronously\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: SendAsynchronously\n  nameWithType: ChannelDispatcher.SendAsynchronously\n  fullName: ChannelDispatcher.SendAsynchronously\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets whether messages are sent asynchronously.\n  syntax:\n    content: public bool SendAsynchronously { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if messages are sent asynchronously; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle\n  id: ServiceThrottle\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: ServiceThrottle\n  nameWithType: ChannelDispatcher.ServiceThrottle\n  fullName: ChannelDispatcher.ServiceThrottle\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the service throttle for the service associated with the channel dispatcher.\n  remarks: \"This provides access to the controls used to optimize the availability and performance of a service.  \\n  \\n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\"\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#15)]\n     [!code-vb[S_UE_ChannelDispatcher#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#15)]\n  syntax:\n    content: public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }\n    return:\n      type: System.ServiceModel.Dispatcher.ServiceThrottle\n      description: A <xref href=\"System.ServiceModel.Dispatcher.ServiceThrottle\"></xref> object.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel\n  id: TransactionIsolationLevel\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: TransactionIsolationLevel\n  nameWithType: ChannelDispatcher.TransactionIsolationLevel\n  fullName: ChannelDispatcher.TransactionIsolationLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the default isolation level for transactions.\n  remarks: \"Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.  \\n  \\n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\"\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#16)]\n     [!code-vb[S_UE_ChannelDispatcher#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#16)]\n  syntax:\n    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }\n    return:\n      type: System.Transactions.IsolationLevel\n      description: One of the <xref href=\"System.Transactions.IsolationLevel\"></xref> values. The default is <xref href=\"System.Transactions.IsolationLevel.Unspecified\"></xref>.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The isolation level set is not defined.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout\n  id: TransactionTimeout\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  langs:\n  - csharp\n  name: TransactionTimeout\n  nameWithType: ChannelDispatcher.TransactionTimeout\n  fullName: ChannelDispatcher.TransactionTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.\n  remarks: This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.\n  example:\n  - >-\n    [!code-csharp[S_UE_ChannelDispatcher#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#17)]\n     [!code-vb[S_UE_ChannelDispatcher#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#17)]\n  syntax:\n    content: public TimeSpan TransactionTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> value that represents the default timeout period for transactions. The default is <xref href=\"System.TimeSpan.Zero\"></xref>.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is less than zero or is too large.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: ChannelDispatcherBase\n  nameWithType: ChannelDispatcherBase\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ServiceModel.CommunicationObjectFaultedException\n  parent: System.ServiceModel\n  isExternal: false\n  name: CommunicationObjectFaultedException\n  nameWithType: CommunicationObjectFaultedException\n  fullName: System.ServiceModel.CommunicationObjectFaultedException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ChannelDispatcher(IChannelListener)\n  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)\n  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener)\n- uid: System.ServiceModel.Channels.IChannelListener\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener\n  nameWithType: IChannelListener\n  fullName: System.ServiceModel.Channels.IChannelListener\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ChannelDispatcher(IChannelListener, String)\n  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener, String)\n  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)\n  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)\n  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: false\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: AsynchronousTransactedAcceptEnabled\n  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  fullName: ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Attach(ServiceHostBase)\n  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)\n  fullName: ChannelDispatcher.Attach(ServiceHostBase)\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: BindingName\n  nameWithType: ChannelDispatcher.BindingName\n  fullName: ChannelDispatcher.BindingName\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ChannelInitializers\n  nameWithType: ChannelDispatcher.ChannelInitializers\n  fullName: ChannelDispatcher.ChannelInitializers\n- uid: System.Collections.Generic.SynchronizedCollection`1\n  name: SynchronizedCollection<T>\n  nameWithType: SynchronizedCollection<T>\n  fullName: System.Collections.Generic.SynchronizedCollection<T>\n- uid: System.ServiceModel.Dispatcher.IChannelInitializer\n  name: IChannelInitializer\n  nameWithType: IChannelInitializer\n  fullName: System.ServiceModel.Dispatcher.IChannelInitializer\n- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SynchronizedCollection<IChannelInitializer>\n  nameWithType: SynchronizedCollection<IChannelInitializer>\n  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer>\n  spec.csharp:\n  - uid: System.Collections.Generic.SynchronizedCollection`1\n    name: SynchronizedCollection\n    nameWithType: SynchronizedCollection\n    fullName: System.Collections.Generic.SynchronizedCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.IChannelInitializer\n    name: IChannelInitializer\n    nameWithType: IChannelInitializer\n    fullName: System.ServiceModel.Dispatcher.IChannelInitializer\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: CloseInput()\n  nameWithType: ChannelDispatcher.CloseInput()\n  fullName: ChannelDispatcher.CloseInput()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelDispatcher.DefaultCloseTimeout\n  fullName: ChannelDispatcher.DefaultCloseTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelDispatcher.DefaultOpenTimeout\n  fullName: ChannelDispatcher.DefaultOpenTimeout\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Detach(ServiceHostBase)\n  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)\n  fullName: ChannelDispatcher.Detach(ServiceHostBase)\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Endpoints\n  nameWithType: ChannelDispatcher.Endpoints\n  fullName: ChannelDispatcher.Endpoints\n- uid: System.ServiceModel.Dispatcher.EndpointDispatcher\n  name: EndpointDispatcher\n  nameWithType: EndpointDispatcher\n  fullName: System.ServiceModel.Dispatcher.EndpointDispatcher\n- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SynchronizedCollection<EndpointDispatcher>\n  nameWithType: SynchronizedCollection<EndpointDispatcher>\n  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher>\n  spec.csharp:\n  - uid: System.Collections.Generic.SynchronizedCollection`1\n    name: SynchronizedCollection\n    nameWithType: SynchronizedCollection\n    fullName: System.Collections.Generic.SynchronizedCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.EndpointDispatcher\n    name: EndpointDispatcher\n    nameWithType: EndpointDispatcher\n    fullName: System.ServiceModel.Dispatcher.EndpointDispatcher\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ErrorHandlers\n  nameWithType: ChannelDispatcher.ErrorHandlers\n  fullName: ChannelDispatcher.ErrorHandlers\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.ServiceModel.Dispatcher.IErrorHandler\n  name: IErrorHandler\n  nameWithType: IErrorHandler\n  fullName: System.ServiceModel.Dispatcher.IErrorHandler\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<IErrorHandler>\n  nameWithType: Collection<IErrorHandler>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.IErrorHandler\n    name: IErrorHandler\n    nameWithType: IErrorHandler\n    fullName: System.ServiceModel.Dispatcher.IErrorHandler\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Host\n  nameWithType: ChannelDispatcher.Host\n  fullName: ChannelDispatcher.Host\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: IncludeExceptionDetailInFaults\n  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults\n  fullName: ChannelDispatcher.IncludeExceptionDetailInFaults\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: IsTransactedAccept\n  nameWithType: ChannelDispatcher.IsTransactedAccept\n  fullName: ChannelDispatcher.IsTransactedAccept\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: IsTransactedReceive\n  nameWithType: ChannelDispatcher.IsTransactedReceive\n  fullName: ChannelDispatcher.IsTransactedReceive\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Listener\n  nameWithType: ChannelDispatcher.Listener\n  fullName: ChannelDispatcher.Listener\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ManualAddressing\n  nameWithType: ChannelDispatcher.ManualAddressing\n  fullName: ChannelDispatcher.ManualAddressing\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: MaxPendingReceives\n  nameWithType: ChannelDispatcher.MaxPendingReceives\n  fullName: ChannelDispatcher.MaxPendingReceives\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: MaxTransactedBatchSize\n  nameWithType: ChannelDispatcher.MaxTransactedBatchSize\n  fullName: ChannelDispatcher.MaxTransactedBatchSize\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: MessageVersion\n  nameWithType: ChannelDispatcher.MessageVersion\n  fullName: ChannelDispatcher.MessageVersion\n- uid: System.ServiceModel.Channels.MessageVersion\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageVersion\n  nameWithType: MessageVersion\n  fullName: System.ServiceModel.Channels.MessageVersion\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ChannelDispatcher.OnAbort()\n  fullName: ChannelDispatcher.OnAbort()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelDispatcher.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelDispatcher.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ChannelDispatcher.OnClose(TimeSpan)\n  fullName: ChannelDispatcher.OnClose(TimeSpan)\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnClosed()\n  nameWithType: ChannelDispatcher.OnClosed()\n  fullName: ChannelDispatcher.OnClosed()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)\n  fullName: ChannelDispatcher.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)\n  fullName: ChannelDispatcher.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)\n  fullName: ChannelDispatcher.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnOpened()\n  nameWithType: ChannelDispatcher.OnOpened()\n  fullName: ChannelDispatcher.OnOpened()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnOpening()\n  nameWithType: ChannelDispatcher.OnOpening()\n  fullName: ChannelDispatcher.OnOpening()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ReceiveContextEnabled\n  nameWithType: ChannelDispatcher.ReceiveContextEnabled\n  fullName: ChannelDispatcher.ReceiveContextEnabled\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ReceiveSynchronously\n  nameWithType: ChannelDispatcher.ReceiveSynchronously\n  fullName: ChannelDispatcher.ReceiveSynchronously\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: SendAsynchronously\n  nameWithType: ChannelDispatcher.SendAsynchronously\n  fullName: ChannelDispatcher.SendAsynchronously\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ServiceThrottle\n  nameWithType: ChannelDispatcher.ServiceThrottle\n  fullName: ChannelDispatcher.ServiceThrottle\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: ServiceThrottle\n  nameWithType: ServiceThrottle\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: TransactionIsolationLevel\n  nameWithType: ChannelDispatcher.TransactionIsolationLevel\n  fullName: ChannelDispatcher.TransactionIsolationLevel\n- uid: System.Transactions.IsolationLevel\n  parent: System.Transactions\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Transactions.IsolationLevel\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: TransactionTimeout\n  nameWithType: ChannelDispatcher.TransactionTimeout\n  fullName: ChannelDispatcher.TransactionTimeout\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ChannelDispatcher\n  nameWithType: ChannelDispatcher.ChannelDispatcher\n  fullName: ChannelDispatcher.ChannelDispatcher\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: AsynchronousTransactedAcceptEnabled\n  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  fullName: ChannelDispatcher.AsynchronousTransactedAcceptEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Attach\n  nameWithType: ChannelDispatcher.Attach\n  fullName: ChannelDispatcher.Attach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: BindingName\n  nameWithType: ChannelDispatcher.BindingName\n  fullName: ChannelDispatcher.BindingName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ChannelInitializers\n  nameWithType: ChannelDispatcher.ChannelInitializers\n  fullName: ChannelDispatcher.ChannelInitializers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: CloseInput\n  nameWithType: ChannelDispatcher.CloseInput\n  fullName: ChannelDispatcher.CloseInput\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelDispatcher.DefaultCloseTimeout\n  fullName: ChannelDispatcher.DefaultCloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelDispatcher.DefaultOpenTimeout\n  fullName: ChannelDispatcher.DefaultOpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Detach\n  nameWithType: ChannelDispatcher.Detach\n  fullName: ChannelDispatcher.Detach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Endpoints\n  nameWithType: ChannelDispatcher.Endpoints\n  fullName: ChannelDispatcher.Endpoints\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ErrorHandlers\n  nameWithType: ChannelDispatcher.ErrorHandlers\n  fullName: ChannelDispatcher.ErrorHandlers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Host\n  nameWithType: ChannelDispatcher.Host\n  fullName: ChannelDispatcher.Host\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: IncludeExceptionDetailInFaults\n  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults\n  fullName: ChannelDispatcher.IncludeExceptionDetailInFaults\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: IsTransactedAccept\n  nameWithType: ChannelDispatcher.IsTransactedAccept\n  fullName: ChannelDispatcher.IsTransactedAccept\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: IsTransactedReceive\n  nameWithType: ChannelDispatcher.IsTransactedReceive\n  fullName: ChannelDispatcher.IsTransactedReceive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: Listener\n  nameWithType: ChannelDispatcher.Listener\n  fullName: ChannelDispatcher.Listener\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ManualAddressing\n  nameWithType: ChannelDispatcher.ManualAddressing\n  fullName: ChannelDispatcher.ManualAddressing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: MaxPendingReceives\n  nameWithType: ChannelDispatcher.MaxPendingReceives\n  fullName: ChannelDispatcher.MaxPendingReceives\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: MaxTransactedBatchSize\n  nameWithType: ChannelDispatcher.MaxTransactedBatchSize\n  fullName: ChannelDispatcher.MaxTransactedBatchSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: MessageVersion\n  nameWithType: ChannelDispatcher.MessageVersion\n  fullName: ChannelDispatcher.MessageVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnAbort\n  nameWithType: ChannelDispatcher.OnAbort\n  fullName: ChannelDispatcher.OnAbort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnBeginClose\n  nameWithType: ChannelDispatcher.OnBeginClose\n  fullName: ChannelDispatcher.OnBeginClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnBeginOpen\n  nameWithType: ChannelDispatcher.OnBeginOpen\n  fullName: ChannelDispatcher.OnBeginOpen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnClose\n  nameWithType: ChannelDispatcher.OnClose\n  fullName: ChannelDispatcher.OnClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnClosed\n  nameWithType: ChannelDispatcher.OnClosed\n  fullName: ChannelDispatcher.OnClosed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnEndClose\n  nameWithType: ChannelDispatcher.OnEndClose\n  fullName: ChannelDispatcher.OnEndClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnEndOpen\n  nameWithType: ChannelDispatcher.OnEndOpen\n  fullName: ChannelDispatcher.OnEndOpen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnOpen\n  nameWithType: ChannelDispatcher.OnOpen\n  fullName: ChannelDispatcher.OnOpen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnOpened\n  nameWithType: ChannelDispatcher.OnOpened\n  fullName: ChannelDispatcher.OnOpened\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: OnOpening\n  nameWithType: ChannelDispatcher.OnOpening\n  fullName: ChannelDispatcher.OnOpening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ReceiveContextEnabled\n  nameWithType: ChannelDispatcher.ReceiveContextEnabled\n  fullName: ChannelDispatcher.ReceiveContextEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ReceiveSynchronously\n  nameWithType: ChannelDispatcher.ReceiveSynchronously\n  fullName: ChannelDispatcher.ReceiveSynchronously\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: SendAsynchronously\n  nameWithType: ChannelDispatcher.SendAsynchronously\n  fullName: ChannelDispatcher.SendAsynchronously\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: ServiceThrottle\n  nameWithType: ChannelDispatcher.ServiceThrottle\n  fullName: ChannelDispatcher.ServiceThrottle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: TransactionIsolationLevel\n  nameWithType: ChannelDispatcher.TransactionIsolationLevel\n  fullName: ChannelDispatcher.TransactionIsolationLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcher\n  isExternal: false\n  name: TransactionTimeout\n  nameWithType: ChannelDispatcher.TransactionTimeout\n  fullName: ChannelDispatcher.TransactionTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n"}