{"nodes":[{"content":"Represents a collection of strings.","nodes":[{"pos":[0,35],"content":"Represents a collection of strings.","nodes":[{"content":"Represents a collection of strings.","pos":[0,35]}]}],"pos":[2594,2630],"yaml":true},{"content":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \n  \n String comparisons are case-sensitive.  \n  \n Elements in this collection can be accessed using an integer index.  Indexes in this collection are zero-based.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id=\"ph2\">`null`</ph> as a valid value and allows duplicate elements.","source":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements."},{"pos":[124,162],"content":"String comparisons are case-sensitive.","nodes":[{"content":"String comparisons are case-sensitive.","pos":[0,38]}]},{"pos":[169,280],"content":"Elements in this collection can be accessed using an integer index.  Indexes in this collection are zero-based.","nodes":[{"content":"Elements in this collection can be accessed using an integer index.  Indexes in this collection are zero-based.","pos":[0,111],"nodes":[{"content":"Elements in this collection can be accessed using an integer index.","pos":[0,67]},{"content":"Indexes in this collection are zero-based.","pos":[69,111]}]}]}],"pos":[2641,2928],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> class."}],"pos":[5799,5909],"yaml":true},{"content":"This constructor is an O(1) operation.","nodes":[{"pos":[0,38],"content":"This constructor is an O(1) operation.","nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]}],"pos":[5920,5959],"yaml":true,"extradata":"MT"},{"content":"Adds a string to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,101],"content":"Adds a string to the end of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Adds a string to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[7429,7531],"yaml":true},{"content":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \n  \n If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id=\"ph2\">`null`</ph> as a valid value and allows duplicate elements.","source":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements."},{"pos":[124,440],"content":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.","pos":[0,127],"source":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation."},{"content":"If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","pos":[128,316],"source":" If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}]}],"pos":[7542,7987],"yaml":true,"extradata":"MT"},{"content":"The string to add to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"pos":[0,130],"content":"The string to add to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"content":"The string to add to the end of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,105],"source":"The string to add to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[106,130],"source":" The value can be `null`."}]}],"pos":[8846,8977],"yaml":true},{"content":"The zero-based index at which the new element is inserted.","nodes":[{"pos":[0,58],"content":"The zero-based index at which the new element is inserted.","nodes":[{"content":"The zero-based index at which the new element is inserted.","pos":[0,58]}]}],"pos":[9033,9092],"yaml":true},{"content":"Copies the elements of a string array to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,125],"content":"Copies the elements of a string array to the end of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Copies the elements of a string array to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[10532,10658],"yaml":true},{"content":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \n  \n If the <xref:System.Collections.Specialized.StringCollection> can accommodate the new elements without increasing the capacity, this method is an O(`n`) operation, where `n` is the number of elements to be added. If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id=\"ph2\">`null`</ph> as a valid value and allows duplicate elements.","source":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements."},{"pos":[124,578],"content":"If the <xref:System.Collections.Specialized.StringCollection> can accommodate the new elements without increasing the capacity, this method is an O(`n`) operation, where `n` is the number of elements to be added. If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> can accommodate the new elements without increasing the capacity, this method is an O(<ph id=\"ph2\">`n`</ph>) operation, where <ph id=\"ph3\">`n`</ph> is the number of elements to be added.","pos":[0,212],"source":"If the <xref:System.Collections.Specialized.StringCollection> can accommodate the new elements without increasing the capacity, this method is an O(`n`) operation, where `n` is the number of elements to be added."},{"content":"If the capacity needs to be increased to accommodate the new elements, this method becomes an O(<ph id=\"ph1\">`n`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">`m`</ph>) operation, where <ph id=\"ph4\">`n`</ph> is the number of elements to be added and <ph id=\"ph5\">`m`</ph> is <ph id=\"ph6\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","pos":[213,454],"source":" If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}]}],"pos":[10669,11252],"yaml":true,"extradata":"MT"},{"content":"An array of strings to add to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The array itself can not be `null` but it can contain elements that are `null`.","nodes":[{"pos":[0,194],"content":"An array of strings to add to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The array itself can not be `null` but it can contain elements that are `null`.","nodes":[{"content":"An array of strings to add to the end of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,114],"source":"An array of strings to add to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The array itself can not be <ph id=\"ph1\">`null`</ph> but it can contain elements that are <ph id=\"ph2\">`null`</ph>.","pos":[115,194],"source":" The array itself can not be `null` but it can contain elements that are `null`."}]}],"pos":[12121,12316],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[12502,12532],"yaml":true},{"content":"Removes all the strings from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,102],"content":"Removes all the strings from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all the strings from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[13797,13900],"yaml":true},{"content":"<xref:System.Collections.Specialized.StringCollection.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,162],"content":"<xref:System.Collections.Specialized.StringCollection.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.","pos":[0,162],"source":"<xref:System.Collections.Specialized.StringCollection.Count%2A> is set to zero, and references to other objects from elements of the collection are also released."}]},{"pos":[169,282],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}],"pos":[13911,14198],"yaml":true,"extradata":"MT"},{"content":"Determines whether the specified string is in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,119],"content":"Determines whether the specified string is in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the specified string is in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[16448,16568],"yaml":true},{"content":"The <xref:System.Collections.Specialized.StringCollection.Contains%2A> method can confirm the existence of a string before performing further operations.  \n  \n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.  \n  \n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"pos":[0,153],"content":"The <xref:System.Collections.Specialized.StringCollection.Contains%2A> method can confirm the existence of a string before performing further operations.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.Contains%2A&gt;</ph> method can confirm the existence of a string before performing further operations.","pos":[0,153],"source":"The <xref:System.Collections.Specialized.StringCollection.Contains%2A> method can confirm the existence of a string before performing further operations."}]},{"pos":[160,298],"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.","nodes":[{"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.","pos":[0,138],"nodes":[{"content":"This method determines equality by calling <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.","pos":[0,99],"source":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>."},{"content":"String comparisons are case-sensitive.","pos":[100,138]}]}]},{"pos":[305,467],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."},{"pos":[474,908],"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id=\"ph3\">`item`</ph> to determine whether item exists.","pos":[0,206],"source":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id=\"ph3\">`item`</ph> parameter on the objects in the collection.","pos":[207,434],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]}],"pos":[16579,17496],"yaml":true,"extradata":"MT"},{"content":"The string to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"pos":[0,122],"content":"The string to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"content":"The string to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,97],"source":"The string to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[98,122],"source":" The value can be `null`."}]}],"pos":[18409,18532],"yaml":true},{"content":"`true` if <code>value</code> is found in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value</code> is found in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>; otherwise, `false`."}],"pos":[18590,18727],"yaml":true},{"content":"Copies the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref> values to a one-dimensional array of strings, starting at the specified index of the target array.","nodes":[{"pos":[0,185],"content":"Copies the entire <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> values to a one-dimensional array of strings, starting at the specified index of the target array.","source":"Copies the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref> values to a one-dimensional array of strings, starting at the specified index of the target array."}],"pos":[20220,20406],"yaml":true},{"content":"The specified array must be of a compatible type.  \n  \n The elements are copied to the <xref:System.Array> in the same order in which the enumerator of the <xref:System.Collections.Specialized.StringCollection> iterates through the <xref:System.Collections.Specialized.StringCollection>.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,49],"content":"The specified array must be of a compatible type.","nodes":[{"content":"The specified array must be of a compatible type.","pos":[0,49]}]},{"pos":[56,287],"content":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator of the <xref:System.Collections.Specialized.StringCollection> iterates through the <xref:System.Collections.Specialized.StringCollection>.","nodes":[{"content":"The elements are copied to the <ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> iterates through the <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.","pos":[0,231],"source":"The elements are copied to the <xref:System.Array> in the same order in which the enumerator of the <xref:System.Collections.Specialized.StringCollection> iterates through the <xref:System.Collections.Specialized.StringCollection>."}]},{"pos":[294,407],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}],"pos":[20417,20831],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional array of strings that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,227],"content":"The one-dimensional array of strings that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional array of strings that is the destination of the elements copied from <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,158],"source":"The one-dimensional array of strings that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[159,227],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[21732,21960],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[22020,22088],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[22272,22302],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[22416,22454],"yaml":true},{"content":"<code>array</code> is multidimensional.  \n  \n -or-  \n  \n The number of elements in the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","source":"<code>array</code> is multidimensional."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,272],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."}],"pos":[22548,22829],"yaml":true},{"content":"The type of the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.","nodes":[{"pos":[0,171],"content":"The type of the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> cannot be cast automatically to the type of the destination <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>."}],"pos":[22929,23101],"yaml":true},{"content":"Gets the number of strings contained in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,113],"content":"Gets the number of strings contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of strings contained in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[24362,24476],"yaml":true},{"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,59],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[24487,24547],"yaml":true,"extradata":"MT"},{"content":"The number of strings contained in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,108],"content":"The number of strings contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The number of strings contained in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[25403,25512],"yaml":true},{"content":"Returns a <xref href=\"System.Collections.Specialized.StringEnumerator\"></xref> that iterates through the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,174],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringEnumerator\"&gt;&lt;/xref&gt;</ph> that iterates through the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Collections.Specialized.StringEnumerator\"></xref> that iterates through the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[26909,27084],"yaml":true},{"content":"[Visual Basic, C#]  \n  \n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.  \n  \n <xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called. <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.  \n  \n If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined. To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,18],"content":"[Visual Basic, C#]","nodes":[{"content":"[Visual Basic, C#]","pos":[0,18]}]},{"pos":[25,230],"content":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,112],"source":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[114,205],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."}]},{"pos":[237,357],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]}]},{"pos":[364,912],"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.","pos":[0,548],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.","pos":[84,197],"source":" <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> is undefined.","pos":[199,296],"source":"  At this position, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>.","pos":[297,548],"source":" Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>."}]}]},{"pos":[919,1325],"content":"<xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called. <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called. <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.","pos":[0,406],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,247],"source":"<xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> to the next element.","pos":[248,406],"source":" <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element."}]}]},{"pos":[1332,2203],"content":"If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined. To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,261],"source":"If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph>.","pos":[262,410],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> is undefined.","pos":[411,595],"source":" If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined."},{"content":"To set <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> followed by <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph>.","pos":[596,871],"source":" To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>."}]},{"pos":[2210,2445],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[0,235],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[73,235]}]}]},{"pos":[2452,2843],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[0,391],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.","pos":[0,154]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[156,261]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[263,391]}]}]},{"pos":[2850,2883],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[27095,29997],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.Specialized.StringEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,148],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringEnumerator\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Collections.Specialized.StringEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[30203,30352],"yaml":true},{"content":"Searches for the specified string and returns the zero-based index of the first occurrence within the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,171],"content":"Searches for the specified string and returns the zero-based index of the first occurrence within the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Searches for the specified string and returns the zero-based index of the first occurrence within the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[31784,31956],"yaml":true},{"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.  \n  \n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"pos":[0,138],"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.","nodes":[{"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.","pos":[0,138],"nodes":[{"content":"This method determines equality by calling <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.","pos":[0,99],"source":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>."},{"content":"String comparisons are case-sensitive.","pos":[100,138]}]}]},{"pos":[145,307],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."},{"pos":[314,748],"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id=\"ph3\">`item`</ph> to determine whether item exists.","pos":[0,206],"source":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id=\"ph3\">`item`</ph> parameter on the objects in the collection.","pos":[207,434],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]}],"pos":[31967,32722],"yaml":true,"extradata":"MT"},{"content":"The string to locate. The value can be `null`.","nodes":[{"pos":[0,46],"content":"The string to locate. The value can be `null`.","nodes":[{"content":"The string to locate.","pos":[0,21]},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[22,46],"source":" The value can be `null`."}]}],"pos":[33633,33680],"yaml":true},{"content":"The zero-based index of the first occurrence of <code>value</code> in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>, if found; otherwise, -1.","nodes":[{"pos":[0,168],"content":"The zero-based index of the first occurrence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, -1.","source":"The zero-based index of the first occurrence of <code>value</code> in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>, if found; otherwise, -1."}],"pos":[33736,33905],"yaml":true},{"content":"Inserts a string into the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> at the specified index.","nodes":[{"pos":[0,118],"content":"Inserts a string into the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts a string into the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> at the specified index."}],"pos":[35385,35504],"yaml":true},{"content":"Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.  \n  \n If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,88],"content":"Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.","nodes":[{"content":"Duplicate strings are allowed in <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.","pos":[0,88],"source":"Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>."}]},{"pos":[95,269],"content":"If <ph id=\"ph1\">`index`</ph> is equal to <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>, <ph id=\"ph3\">`value`</ph> is added to the end of <ph id=\"ph4\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.","source":"If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>."},{"pos":[276,627],"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,351],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.","pos":[0,140]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[141,231]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[232,351]}]}]},{"pos":[634,747],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}],"pos":[35515,36271],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> is inserted.","nodes":[{"pos":[0,61],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is inserted.","source":"The zero-based index at which <code>value</code> is inserted."}],"pos":[37144,37206],"yaml":true},{"content":"The string to insert. The value can be `null`.","nodes":[{"pos":[0,46],"content":"The string to insert. The value can be `null`.","nodes":[{"content":"The string to insert.","pos":[0,21]},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[22,46],"source":" The value can be `null`."}]}],"pos":[37267,37314],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,162],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> greater than <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>."}],"pos":[37510,37681],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only.","nodes":[{"pos":[0,118],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only."}],"pos":[38972,39091],"yaml":true},{"content":"<xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=fullName> interface.  \n  \n A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \n  \n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \n  \n A <xref:System.Collections.Specialized.StringCollection> instance is always writable.  \n  \n Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,245],"content":"<xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=fullName> interface.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> implements the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A&gt;</ph> property because it is required by the <ph id=\"ph3\">&lt;xref:System.Collections.IList?displayProperty=fullName&gt;</ph> interface.","pos":[0,245],"source":"<xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=fullName> interface."}]},{"pos":[252,381],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]}]},{"pos":[388,606],"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","nodes":[{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[0,218]}]},{"pos":[613,698],"content":"A <xref:System.Collections.Specialized.StringCollection> instance is always writable.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> instance is always writable.","pos":[0,85],"source":"A <xref:System.Collections.Specialized.StringCollection> instance is always writable."}]},{"pos":[705,764],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[39102,39877],"yaml":true,"extradata":"MT"},{"content":"This property always returns `false`.","nodes":[{"pos":[0,37],"content":"This property always returns <ph id=\"ph1\">`false`</ph>.","source":"This property always returns `false`."}],"pos":[39990,40028],"yaml":true},{"content":"Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is synchronized (thread safe).","nodes":[{"pos":[0,145],"content":"Gets a value indicating whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).","source":"Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is synchronized (thread safe)."}],"pos":[41432,41578],"yaml":true},{"content":"<xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection> interface.  \n  \n Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \n  \n The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:  \n  \n [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]\n [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]\n [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  \n  \n Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,230],"content":"<xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection> interface.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> implements the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A&gt;</ph> property because it is required by the <ph id=\"ph3\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[0,230],"source":"<xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection> interface."}]},{"pos":[237,635],"content":"Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,398],"nodes":[{"content":"Enumerating through a collection is intrinsically not a thread safe procedure.","pos":[0,78]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[79,216]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[217,398]}]}]},{"pos":[642,809],"content":"The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:","nodes":[{"content":"The following code example shows how to lock the collection using the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph> during the entire enumeration:","pos":[0,167],"source":"The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:"}]},{"pos":[816,1360],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.Collections.Specialized.StringCollection2#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.Collections.Specialized.StringCollection2#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Collections.Specialized.StringCollection2#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]\n [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]\n [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]"},{"pos":[1367,1426],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[41589,43028],"yaml":true,"extradata":"MT"},{"content":"This property always returns `false`.","nodes":[{"pos":[0,37],"content":"This property always returns <ph id=\"ph1\">`false`</ph>.","source":"This property always returns `false`."}],"pos":[43145,43183],"yaml":true},{"content":"Gets or sets the element at the specified index.","nodes":[{"pos":[0,48],"content":"Gets or sets the element at the specified index.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]}],"pos":[44594,44643],"yaml":true},{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \n  \n <xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \n  \n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.StringCollection.Item%2A> as a default property, which provides the same indexing functionality.  \n  \n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","nodes":[{"pos":[0,135],"content":"This property provides the ability to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[index]`</ph>.","source":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`."},{"pos":[142,259],"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id=\"ph2\">`null`</ph> as a valid value and allows duplicate elements.","source":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements."},{"pos":[266,581],"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.StringCollection.Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.StringCollection.Item%2A> as a default property, which provides the same indexing functionality.","pos":[0,315],"nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.Item%2A&gt;</ph> property.","pos":[0,157],"source":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.Item%2A> property."},{"content":"Visual Basic implements <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.","pos":[158,315],"source":" Visual Basic implements <xref:System.Collections.Specialized.StringCollection.Item%2A> as a default property, which provides the same indexing functionality."}]}]},{"pos":[588,695],"content":"Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","pos":[0,107]}]}],"pos":[44654,45358],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the entry to get or set.","nodes":[{"pos":[0,48],"content":"The zero-based index of the entry to get or set.","nodes":[{"content":"The zero-based index of the entry to get or set.","pos":[0,48]}]}],"pos":[45501,45550],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[45607,45643],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,177],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>."}],"pos":[45837,46023],"yaml":true},{"content":"Removes the first occurrence of a specific string from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,128],"content":"Removes the first occurrence of a specific string from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of a specific string from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[47357,47486],"yaml":true},{"content":"Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>. Only the first occurrence is removed. To remove all occurrences of the specified string, use `RemoveAt(IndexOf(value))` repeatedly while <xref:System.Collections.Specialized.StringCollection.IndexOf%2A> does not return -1.  \n  \n If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged. No exception is thrown.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,311],"content":"Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>. Only the first occurrence is removed. To remove all occurrences of the specified string, use `RemoveAt(IndexOf(value))` repeatedly while <xref:System.Collections.Specialized.StringCollection.IndexOf%2A> does not return -1.","nodes":[{"content":"Duplicate strings are allowed in <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.","pos":[0,88],"source":"Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>."},{"content":"Only the first occurrence is removed.","pos":[89,126]},{"content":"To remove all occurrences of the specified string, use <ph id=\"ph1\">`RemoveAt(IndexOf(value))`</ph> repeatedly while <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection.IndexOf%2A&gt;</ph> does not return -1.","pos":[127,311],"source":" To remove all occurrences of the specified string, use `RemoveAt(IndexOf(value))` repeatedly while <xref:System.Collections.Specialized.StringCollection.IndexOf%2A> does not return -1."}]},{"pos":[318,520],"content":"If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged. No exception is thrown.","nodes":[{"content":"If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged. No exception is thrown.","pos":[0,202],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> does not contain the specified object, the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> remains unchanged.","pos":[0,178],"source":"If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged."},{"content":"No exception is thrown.","pos":[179,202]}]}]},{"pos":[527,872],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,345],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]}]}]},{"pos":[879,1017],"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.","nodes":[{"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.","pos":[0,138],"nodes":[{"content":"This method determines equality by calling <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.","pos":[0,99],"source":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>."},{"content":"String comparisons are case-sensitive.","pos":[100,138]}]}]},{"pos":[1024,1186],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}],"pos":[47497,48694],"yaml":true,"extradata":"MT"},{"content":"The string to remove from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"pos":[0,124],"content":"The string to remove from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"content":"The string to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,99],"source":"The string to remove from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[100,124],"source":" The value can be `null`."}]}],"pos":[49585,49710],"yaml":true},{"content":"Removes the string at the specified index of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,118],"content":"Removes the string at the specified index of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the string at the specified index of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[51135,51254],"yaml":true},{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,345],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,345],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]}]}]},{"pos":[352,465],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}],"pos":[51265,51735],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the string to remove.","nodes":[{"pos":[0,45],"content":"The zero-based index of the string to remove.","nodes":[{"content":"The zero-based index of the string to remove.","pos":[0,45]}]}],"pos":[52624,52670],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,177],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>."}],"pos":[52868,53054],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,130],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[54333,54464],"yaml":true},{"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringCollection> using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringCollection>, not directly on the <xref:System.Collections.Specialized.StringCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringCollection> object.  \n  \n Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \n  \n The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:  \n  \n [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]\n [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]\n [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  \n  \n Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,724],"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringCollection> using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringCollection>, not directly on the <xref:System.Collections.Specialized.StringCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringCollection> object.","nodes":[{"content":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringCollection> using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringCollection>, not directly on the <xref:System.Collections.Specialized.StringCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringCollection> object.","pos":[0,724],"nodes":[{"content":"Derived classes can provide their own synchronized version of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph> property.","pos":[0,207],"source":"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringCollection> using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> property."},{"content":"The synchronizing code must perform operations on the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>, not directly on the <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.","pos":[208,467],"source":" The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringCollection>, not directly on the <xref:System.Collections.Specialized.StringCollection>."},{"content":"This ensures proper operation of collections that are derived from other objects.","pos":[468,549]},{"content":"Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> object.","pos":[550,724],"source":" Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringCollection> object."}]}]},{"pos":[731,1129],"content":"Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,398],"nodes":[{"content":"Enumerating through a collection is intrinsically not a thread safe procedure.","pos":[0,78]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[79,216]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[217,398]}]}]},{"pos":[1136,1303],"content":"The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:","nodes":[{"content":"The following code example shows how to lock the collection using the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.SyncRoot%2A&gt;</ph> during the entire enumeration:","pos":[0,167],"source":"The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:"}]},{"pos":[1310,1854],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.Collections.Specialized.StringCollection2#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.Collections.Specialized.StringCollection2#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Collections.Specialized.StringCollection2#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]\n [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]\n [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]"},{"pos":[1861,1920],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[54475,56408],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,125],"content":"An object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[56520,56646],"yaml":true},{"content":"Copies the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.","nodes":[{"pos":[0,206],"content":"Copies the entire <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at the specified index of the target array.","source":"Copies the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array."}],"pos":[58264,58471],"yaml":true},{"content":"The specified array must be of a compatible type.  \n  \n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,49],"content":"The specified array must be of a compatible type.","nodes":[{"content":"The specified array must be of a compatible type.","pos":[0,49]}]},{"pos":[56,147],"content":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.","nodes":[{"content":"This method uses <ph id=\"ph1\">&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;</ph> to copy the elements.","pos":[0,91],"source":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements."}]},{"pos":[154,267],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}],"pos":[58482,58756],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,244],"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,175],"source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[176,244],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[58905,59150],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[59210,59278],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[59493,59523],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[59637,59675],"yaml":true},{"content":"<code>array</code> is multidimensional.  \n  \n -or-  \n  \n The number of elements in the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","source":"<code>array</code> is multidimensional."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,272],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."}],"pos":[59769,60050],"yaml":true},{"content":"The type of the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.","nodes":[{"pos":[0,171],"content":"The type of the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> cannot be cast automatically to the type of the destination <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>."}],"pos":[60150,60322],"yaml":true},{"content":"Returns a <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,157],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that iterates through the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[61778,61936],"yaml":true},{"content":"[Visual Basic, C#]  \n  \n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \n  \n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,18],"content":"[Visual Basic, C#]","nodes":[{"content":"[Visual Basic, C#]","pos":[0,18]}]},{"pos":[25,230],"content":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,112],"source":"The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[114,205],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."}]},{"pos":[237,357],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]}]},{"pos":[364,858],"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","pos":[0,494],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.","pos":[84,180],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, calling <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.","pos":[181,276],"source":" At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.","pos":[277,494],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."}]}]},{"pos":[865,1186],"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","pos":[0,321],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,196],"source":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.","pos":[197,321],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."}]}]},{"pos":[1193,1943],"content":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,227],"source":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph>.","pos":[228,359],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, calling <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.","pos":[360,525],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"To set <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.","pos":[526,750],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."}]},{"pos":[1950,2603],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.","pos":[0,653],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[73,376],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>."},{"content":"If the collection is modified between <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.","pos":[377,653],"source":" If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated."}]}]},{"pos":[2610,3084],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,474],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.","pos":[0,154]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[155,292]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[293,474]}]}]},{"pos":[3091,3124],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[61947,65090],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,131],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[65267,65399],"yaml":true},{"content":"Adds an object to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,102],"content":"Adds an object to the end of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Adds an object to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[66945,67048],"yaml":true},{"content":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \n  \n If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \n  \n If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id=\"ph2\">`null`</ph> as a valid value and allows duplicate elements.","source":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements."},{"pos":[124,444],"content":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","pos":[0,320],"source":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added."}]},{"pos":[451,767],"content":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.","pos":[0,127],"source":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation."},{"content":"If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","pos":[128,316],"source":" If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}]}],"pos":[67059,67833],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to be added to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"pos":[0,163],"content":"The <xref href=\"System.Object\"></xref> to be added to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to be added to the end of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,138],"source":"The <xref href=\"System.Object\"></xref> to be added to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[139,163],"source":" The value can be `null`."}]}],"pos":[67963,68127],"yaml":true},{"content":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> index at which the <code>value</code> has been added.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> index at which the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> has been added.","source":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> index at which the <code>value</code> has been added."}],"pos":[68183,68310],"yaml":true},{"content":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> has a fixed size.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only."},{"pos":[93,97],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[104,194],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> has a fixed size."}],"pos":[68516,68721],"yaml":true},{"content":"Determines whether an element is in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,109],"content":"Determines whether an element is in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether an element is in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[70174,70284],"yaml":true},{"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.  \n  \n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"pos":[0,99],"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.","nodes":[{"content":"This method determines equality by calling <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.","pos":[0,99],"source":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>."}]},{"pos":[106,268],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."},{"pos":[275,709],"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id=\"ph3\">`item`</ph> to determine whether item exists.","pos":[0,206],"source":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id=\"ph3\">`item`</ph> parameter on the objects in the collection.","pos":[207,434],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]}],"pos":[70295,71011],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"pos":[0,150],"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,125],"source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[126,150],"source":" The value can be `null`."}]}],"pos":[71147,71298],"yaml":true},{"content":"`true` if <code>value</code> is found in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value</code> is found in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>; otherwise, `false`."}],"pos":[71356,71493],"yaml":true},{"content":"Searches for the specified <xref href=\"System.Object\"></xref> and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,206],"content":"Searches for the specified <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> and returns the zero-based index of the first occurrence within the entire <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Searches for the specified <xref href=\"System.Object\"></xref> and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[73052,73259],"yaml":true},{"content":"The <xref:System.Collections.Specialized.StringCollection> is searched forward starting at the first element and ending at the last element.  \n  \n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.  \n  \n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"pos":[0,140],"content":"The <xref:System.Collections.Specialized.StringCollection> is searched forward starting at the first element and ending at the last element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> is searched forward starting at the first element and ending at the last element.","pos":[0,140],"source":"The <xref:System.Collections.Specialized.StringCollection> is searched forward starting at the first element and ending at the last element."}]},{"pos":[147,246],"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.","nodes":[{"content":"This method determines equality by calling <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.","pos":[0,99],"source":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>."}]},{"pos":[253,415],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."},{"pos":[422,856],"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.","nodes":[{"content":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id=\"ph3\">`item`</ph> to determine whether item exists.","pos":[0,206],"source":"Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists."},{"content":"In the earlier versions of the .NET Framework, this determination was made by using the <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id=\"ph3\">`item`</ph> parameter on the objects in the collection.","pos":[207,434],"source":" In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."}]}],"pos":[73270,74135],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"pos":[0,150],"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,125],"source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[126,150],"source":" The value can be `null`."}]}],"pos":[74269,74420],"yaml":true},{"content":"The zero-based index of the first occurrence of <code>value</code> within the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref>, if found; otherwise, -1.","nodes":[{"pos":[0,179],"content":"The zero-based index of the first occurrence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> within the entire <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, -1.","source":"The zero-based index of the first occurrence of <code>value</code> within the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref>, if found; otherwise, -1."}],"pos":[74476,74656],"yaml":true},{"content":"Inserts an element into the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> at the specified index.","nodes":[{"pos":[0,120],"content":"Inserts an element into the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts an element into the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> at the specified index."}],"pos":[76268,76389],"yaml":true},{"content":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \n  \n If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,320],"content":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","pos":[0,320],"source":"If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added."}]},{"pos":[327,501],"content":"If <ph id=\"ph1\">`index`</ph> is equal to <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>, <ph id=\"ph3\">`value`</ph> is added to the end of <ph id=\"ph4\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>.","source":"If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>."},{"pos":[508,859],"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,351],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.","pos":[0,140]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[141,231]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[232,351]}]}]},{"pos":[866,979],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}],"pos":[76400,77388],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[77532,77601],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to insert. The value can be `null`.","nodes":[{"pos":[0,74],"content":"The <xref href=\"System.Object\"></xref> to insert. The value can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to insert.","pos":[0,49],"source":"The <xref href=\"System.Object\"></xref> to insert."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[50,74],"source":" The value can be `null`."}]}],"pos":[77662,77737],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,165],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>."}],"pos":[77958,78132],"yaml":true},{"content":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> has a fixed size.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only."},{"pos":[93,97],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[104,194],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> has a fixed size."}],"pos":[78234,78439],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object has a fixed size.","nodes":[{"pos":[0,129],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> object has a fixed size.","source":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object has a fixed size."}],"pos":[79843,79973],"yaml":true},{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.  \n  \n A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.  \n  \n Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,168],"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.","nodes":[{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.","pos":[0,168]}]},{"pos":[175,445],"content":"A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.","nodes":[{"content":"A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.","pos":[0,270]}]},{"pos":[452,511],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[79984,80502],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object has a fixed size; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,151],"content":"`true` if the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object has a fixed size; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> object has a fixed size; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,127],"source":"`true` if the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object has a fixed size; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[128,151],"source":" The default is `false`."}]}],"pos":[80634,80788],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object is read-only.","nodes":[{"pos":[0,125],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object is read-only."}],"pos":[82264,82390],"yaml":true},{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \n  \n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \n  \n Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,129],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]}]},{"pos":[136,354],"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","nodes":[{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[0,218]}]},{"pos":[361,420],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[82401,82828],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object is read-only; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,147],"content":"`true` if the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object is read-only; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> object is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,123],"source":"`true` if the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object is read-only; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[124,147],"source":" The default is `false`."}]}],"pos":[82959,83109],"yaml":true},{"content":"Gets or sets the element at the specified index.","nodes":[{"pos":[0,48],"content":"Gets or sets the element at the specified index.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]}],"pos":[84611,84660],"yaml":true},{"content":"Thismethod provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \n  \n The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.  \n  \n <xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \n  \n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","nodes":[{"pos":[0,132],"content":"Thismethod provides the ability to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[index]`</ph>.","source":"Thismethod provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`."},{"pos":[139,573],"content":"The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the <bpt id=\"p1\">[</bpt>this<ept id=\"p1\">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A&gt;</ph> property.","pos":[0,245],"source":"The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> property."},{"content":"Visual Basic implements <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.","pos":[246,434],"source":" Visual Basic implements <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality."}]},{"pos":[580,697],"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> accepts <ph id=\"ph2\">`null`</ph> as a valid value and allows duplicate elements.","source":"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements."},{"pos":[704,811],"content":"Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.","pos":[0,107]}]}],"pos":[84671,85491],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the element to get or set.","nodes":[{"pos":[0,50],"content":"The zero-based index of the element to get or set.","nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]}],"pos":[85652,85703],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[85760,85796],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,177],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than <xref href=\"System.Collections.Specialized.StringCollection.Count\"></xref>."}],"pos":[86015,86201],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.","nodes":[{"pos":[0,128],"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."}],"pos":[87605,87734],"yaml":true},{"content":"If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged. No exception is thrown.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.","nodes":[{"pos":[0,202],"content":"If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged. No exception is thrown.","nodes":[{"content":"If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged. No exception is thrown.","pos":[0,202],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> does not contain the specified object, the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> remains unchanged.","pos":[0,178],"source":"If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged."},{"content":"No exception is thrown.","pos":[179,202]}]}]},{"pos":[209,554],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,345],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]}]}]},{"pos":[561,660],"content":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.","nodes":[{"content":"This method determines equality by calling <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.","pos":[0,99],"source":"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>."}]},{"pos":[667,829],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.StringCollection.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>."}],"pos":[87745,88583],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"pos":[0,152],"content":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to remove from the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,127],"source":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[128,152],"source":" The value can be `null`."}]}],"pos":[88717,88870],"yaml":true},{"content":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> has a fixed size.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only."},{"pos":[93,97],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[104,194],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.StringCollection\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> has a fixed size."}],"pos":[89079,89284],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Specialized.StringCollection\n  commentId: T:System.Collections.Specialized.StringCollection\n  id: StringCollection\n  children:\n  - System.Collections.Specialized.StringCollection.#ctor\n  - System.Collections.Specialized.StringCollection.Add(System.String)\n  - System.Collections.Specialized.StringCollection.AddRange(System.String[])\n  - System.Collections.Specialized.StringCollection.Clear\n  - System.Collections.Specialized.StringCollection.Contains(System.String)\n  - System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)\n  - System.Collections.Specialized.StringCollection.Count\n  - System.Collections.Specialized.StringCollection.GetEnumerator\n  - System.Collections.Specialized.StringCollection.IndexOf(System.String)\n  - System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)\n  - System.Collections.Specialized.StringCollection.IsReadOnly\n  - System.Collections.Specialized.StringCollection.IsSynchronized\n  - System.Collections.Specialized.StringCollection.Item(System.Int32)\n  - System.Collections.Specialized.StringCollection.Remove(System.String)\n  - System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)\n  - System.Collections.Specialized.StringCollection.SyncRoot\n  - System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)\n  - System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)\n  - System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize\n  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly\n  - System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)\n  - System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: StringCollection\n  nameWithType: StringCollection\n  fullName: System.Collections.Specialized.StringCollection\n  type: Class\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Represents a collection of strings.\n  remarks: \"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \\n  \\n String comparisons are case-sensitive.  \\n  \\n Elements in this collection can be accessed using an integer index.  Indexes in this collection are zero-based.\"\n  example:\n  - \"The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/stringcollection.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/stringcollection.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/stringcollection.vb#1)]\"\n  syntax:\n    content: 'public class StringCollection : System.Collections.IList'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Configuration.CommaDelimitedStringCollection\n  implements:\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.#ctor\n  commentId: M:System.Collections.Specialized.StringCollection.#ctor\n  id: '#ctor'\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: StringCollection()\n  nameWithType: StringCollection.StringCollection()\n  fullName: StringCollection.StringCollection()\n  type: Constructor\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> class.\n  remarks: This constructor is an O(1) operation.\n  syntax:\n    content: public StringCollection ();\n    parameters: []\n  overload: System.Collections.Specialized.StringCollection.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.Add(System.String)\n  commentId: M:System.Collections.Specialized.StringCollection.Add(System.String)\n  id: Add(System.String)\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: Add(String)\n  nameWithType: StringCollection.Add(String)\n  fullName: StringCollection.Add(String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Adds a string to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \\n  \\n If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  example:\n  - \"The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]\"\n  syntax:\n    content: public int Add (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to add to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.\n    return:\n      type: System.Int32\n      description: The zero-based index at which the new element is inserted.\n  overload: System.Collections.Specialized.StringCollection.Add*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])\n  commentId: M:System.Collections.Specialized.StringCollection.AddRange(System.String[])\n  id: AddRange(System.String[])\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: AddRange(String[])\n  nameWithType: StringCollection.AddRange(String[])\n  fullName: StringCollection.AddRange(String[])\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Copies the elements of a string array to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \\n  \\n If the <xref:System.Collections.Specialized.StringCollection> can accommodate the new elements without increasing the capacity, this method is an O(`n`) operation, where `n` is the number of elements to be added. If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  example:\n  - \"The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]\"\n  syntax:\n    content: public void AddRange (string[] value);\n    parameters:\n    - id: value\n      type: System.String[]\n      description: An array of strings to add to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The array itself can not be `null` but it can contain elements that are `null`.\n  overload: System.Collections.Specialized.StringCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.Clear\n  commentId: M:System.Collections.Specialized.StringCollection.Clear\n  id: Clear\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: StringCollection.Clear()\n  fullName: StringCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Removes all the strings from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"<xref:System.Collections.Specialized.StringCollection.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  example:\n  - \"The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Collections.Specialized.StringCollection.Clear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.Contains(System.String)\n  commentId: M:System.Collections.Specialized.StringCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: StringCollection.Contains(String)\n  fullName: StringCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Determines whether the specified string is in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"The <xref:System.Collections.Specialized.StringCollection.Contains%2A> method can confirm the existence of a string before performing further operations.  \\n  \\n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.  \\n  \\n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\"\n  example:\n  - \"The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CPP/stringcollectioncontains.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CS/stringcollectioncontains.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/VB/stringcollectioncontains.vb#1)]\"\n  syntax:\n    content: public bool Contains (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is found in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>; otherwise, `false`.'\n  overload: System.Collections.Specialized.StringCollection.Contains*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)\n  commentId: M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)\n  id: CopyTo(System.String[],System.Int32)\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: CopyTo(String[], Int32)\n  nameWithType: StringCollection.CopyTo(String[], Int32)\n  fullName: StringCollection.CopyTo(String[], Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Copies the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref> values to a one-dimensional array of strings, starting at the specified index of the target array.\n  remarks: \"The specified array must be of a compatible type.  \\n  \\n The elements are copied to the <xref:System.Array> in the same order in which the enumerator of the <xref:System.Collections.Specialized.StringCollection> iterates through the <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  example:\n  - \"The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CPP/stringcollectioncopyto.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CS/stringcollectioncopyto.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/VB/stringcollectioncopyto.vb#1)]\"\n  syntax:\n    content: public void CopyTo (string[] array, int index);\n    parameters:\n    - id: array\n      type: System.String[]\n      description: The one-dimensional array of strings that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Collections.Specialized.StringCollection.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the source <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The type of the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.Count\n  commentId: P:System.Collections.Specialized.StringCollection.Count\n  id: Count\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: StringCollection.Count\n  fullName: StringCollection.Count\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the number of strings contained in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: Retrieving the value of this property is an O(1) operation.\n  example:\n  - \"The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CPP/stringcollectioncopyto.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/CS/stringcollectioncopyto.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionCopyTo/VB/stringcollectioncopyto.vb#1)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of strings contained in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  overload: System.Collections.Specialized.StringCollection.Count*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.GetEnumerator\n  commentId: M:System.Collections.Specialized.StringCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: StringCollection.GetEnumerator()\n  fullName: StringCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Returns a <xref href=\"System.Collections.Specialized.StringEnumerator\"></xref> that iterates through the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"[Visual Basic, C#]  \\n  \\n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called. <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined. To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: public System.Collections.Specialized.StringEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Specialized.StringEnumerator\n      description: A <xref href=\"System.Collections.Specialized.StringEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  overload: System.Collections.Specialized.StringCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)\n  commentId: M:System.Collections.Specialized.StringCollection.IndexOf(System.String)\n  id: IndexOf(System.String)\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IndexOf(String)\n  nameWithType: StringCollection.IndexOf(String)\n  fullName: StringCollection.IndexOf(String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Searches for the specified string and returns the zero-based index of the first occurrence within the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.  \\n  \\n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\"\n  example:\n  - \"The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CPP/stringcollectioncontains.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/CS/stringcollectioncontains.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionContains/VB/stringcollectioncontains.vb#1)]\"\n  syntax:\n    content: public int IndexOf (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to locate. The value can be `null`.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first occurrence of <code>value</code> in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>, if found; otherwise, -1.\n  overload: System.Collections.Specialized.StringCollection.IndexOf*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)\n  commentId: M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)\n  id: Insert(System.Int32,System.String)\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: Insert(Int32, String)\n  nameWithType: StringCollection.Insert(Int32, String)\n  fullName: StringCollection.Insert(Int32, String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Inserts a string into the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> at the specified index.\n  remarks: \"Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  example:\n  - \"The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CPP/stringcollectionadd.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/CS/stringcollectionadd.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionAdd/VB/stringcollectionadd.vb#1)]\"\n  syntax:\n    content: public void Insert (int index, string value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> is inserted.\n    - id: value\n      type: System.String\n      description: The string to insert. The value can be `null`.\n  overload: System.Collections.Specialized.StringCollection.Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> greater than <xref href=\\\"System.Collections.Specialized.StringCollection.Count\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.IsReadOnly\n  commentId: P:System.Collections.Specialized.StringCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: StringCollection.IsReadOnly\n  fullName: StringCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is read-only.\n  remarks: \"<xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=fullName> interface.  \\n  \\n A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \\n  \\n A <xref:System.Collections.Specialized.StringCollection> instance is always writable.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: This property always returns `false`.\n  overload: System.Collections.Specialized.StringCollection.IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.IsSynchronized\n  commentId: P:System.Collections.Specialized.StringCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: StringCollection.IsSynchronized\n  fullName: StringCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> is synchronized (thread safe).\n  remarks: \"<xref:System.Collections.Specialized.StringCollection> implements the <xref:System.Collections.Specialized.StringCollection.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection> interface.  \\n  \\n Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \\n  \\n The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]\\n [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]\\n [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: This property always returns `false`.\n  overload: System.Collections.Specialized.StringCollection.IsSynchronized*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)\n  commentId: P:System.Collections.Specialized.StringCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: StringCollection.Item(Int32)\n  fullName: StringCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets or sets the element at the specified index.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \\n  \\n <xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \\n  \\n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.StringCollection.Item%2A> as a default property, which provides the same indexing functionality.  \\n  \\n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.\"\n  syntax:\n    content: public string this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry to get or set.\n    return:\n      type: System.String\n      description: The element at the specified index.\n  overload: System.Collections.Specialized.StringCollection.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than <xref href=\\\"System.Collections.Specialized.StringCollection.Count\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.Remove(System.String)\n  commentId: M:System.Collections.Specialized.StringCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: StringCollection.Remove(String)\n  fullName: StringCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Removes the first occurrence of a specific string from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"Duplicate strings are allowed in <xref:System.Collections.Specialized.StringCollection>. Only the first occurrence is removed. To remove all occurrences of the specified string, use `RemoveAt(IndexOf(value))` repeatedly while <xref:System.Collections.Specialized.StringCollection.IndexOf%2A> does not return -1.  \\n  \\n If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged. No exception is thrown.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \\n  \\n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>. String comparisons are case-sensitive.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  example:\n  - \"The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]\"\n  syntax:\n    content: public void Remove (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to remove from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.\n  overload: System.Collections.Specialized.StringCollection.Remove*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)\n  commentId: M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: StringCollection.RemoveAt(Int32)\n  fullName: StringCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Removes the string at the specified index of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  example:\n  - \"The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CPP/stringcollectionremove.cpp#1)]\\n [!code-csharp[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/CS/stringcollectionremove.cs#1)]\\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollectionRemove/VB/stringcollectionremove.vb#1)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the string to remove.\n  overload: System.Collections.Specialized.StringCollection.RemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than <xref href=\\\"System.Collections.Specialized.StringCollection.Count\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.SyncRoot\n  commentId: P:System.Collections.Specialized.StringCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: StringCollection.SyncRoot\n  fullName: StringCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringCollection> using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringCollection>, not directly on the <xref:System.Collections.Specialized.StringCollection>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringCollection> object.  \\n  \\n Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \\n  \\n The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A> during the entire enumeration:  \\n  \\n [!code-cpp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CPP/remarks.cpp#2)]\\n [!code-csharp[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/CS/remarks.cs#2)]\\n [!code-vb[System.Collections.Specialized.StringCollection2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringCollection2/VB/remarks.vb#2)]  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  overload: System.Collections.Specialized.StringCollection.SyncRoot*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: StringCollection.ICollection.CopyTo(Array, Int32)\n  fullName: StringCollection.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Copies the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.\n  remarks: \"The specified array must be of a compatible type.  \\n  \\n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the source <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The type of the source <xref href=\"System.Collections.Specialized.StringCollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: StringCollection.IEnumerable.GetEnumerator()\n  fullName: StringCollection.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Returns a <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"[Visual Basic, C#]  \\n  \\n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: A <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: StringCollection.IList.Add(Object)\n  fullName: StringCollection.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Adds an object to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"<xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \\n  \\n If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \\n  \\n If <xref:System.Collections.Specialized.StringCollection.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to be added to the end of the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.\n    return:\n      type: System.Int32\n      description: The <xref href=\"System.Collections.Specialized.StringCollection\"></xref> index at which the <code>value</code> has been added.\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> has a fixed size.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: StringCollection.IList.Contains(Object)\n  fullName: StringCollection.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Determines whether an element is in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.  \\n  \\n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\"\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is found in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>; otherwise, `false`.'\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: StringCollection.IList.IndexOf(Object)\n  fullName: StringCollection.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Searches for the specified <xref href=\"System.Object\"></xref> and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"The <xref:System.Collections.Specialized.StringCollection> is searched forward starting at the first element and ending at the last element.  \\n  \\n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.  \\n  \\n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.\"\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first occurrence of <code>value</code> within the entire <xref href=\"System.Collections.Specialized.StringCollection\"></xref>, if found; otherwise, -1.\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: StringCollection.IList.Insert(Int32, Object)\n  fullName: StringCollection.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Inserts an element into the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> at the specified index.\n  remarks: \"If <xref:System.Collections.Specialized.StringCollection.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.StringCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \\n  \\n If `index` is equal to <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` is added to the end of <xref:System.Collections.Specialized.StringCollection>.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to insert. The value can be `null`.\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is greater than <xref href=\\\"System.Collections.Specialized.StringCollection.Count\\\"></xref>.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> has a fixed size.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize\n  commentId: P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: StringCollection.IList.IsFixedSize\n  fullName: StringCollection.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object has a fixed size.\n  remarks: \"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.  \\n  \\n A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object has a fixed size; otherwise, `false`. The default is `false`.'\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly\n  commentId: P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IList.IsReadOnly\n  nameWithType: StringCollection.IList.IsReadOnly\n  fullName: StringCollection.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object is read-only.\n  remarks: \"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Specialized.StringCollection\"></xref> object is read-only; otherwise, `false`. The default is `false`.'\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: StringCollection.IList.Item(Int32)\n  fullName: StringCollection.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets or sets the element at the specified index.\n  remarks: \"Thismethod provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \\n  \\n The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.StringCollection.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.  \\n  \\n <xref:System.Collections.Specialized.StringCollection> accepts `null` as a valid value and allows duplicate elements.  \\n  \\n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.\"\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than <xref href=\\\"System.Collections.Specialized.StringCollection.Count\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.Specialized.StringCollection\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: StringCollection.IList.Remove(Object)\n  fullName: StringCollection.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>.\n  remarks: \"If the <xref:System.Collections.Specialized.StringCollection> does not contain the specified object, the <xref:System.Collections.Specialized.StringCollection> remains unchanged. No exception is thrown.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \\n  \\n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringCollection.Count%2A>.\"\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.Specialized.StringCollection\"></xref>. The value can be `null`.\n  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> is read-only.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Collections.Specialized.StringCollection\\\"></xref> has a fixed size.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Collections.Specialized.StringCollection.#ctor\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: StringCollection()\n  nameWithType: StringCollection.StringCollection()\n  fullName: StringCollection.StringCollection()\n- uid: System.Collections.Specialized.StringCollection.Add(System.String)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Add(String)\n  nameWithType: StringCollection.Add(String)\n  fullName: StringCollection.Add(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: AddRange(String[])\n  nameWithType: StringCollection.AddRange(String[])\n  fullName: StringCollection.AddRange(String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Collections.Specialized.StringCollection.Clear\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: StringCollection.Clear()\n  fullName: StringCollection.Clear()\n- uid: System.Collections.Specialized.StringCollection.Contains(System.String)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: StringCollection.Contains(String)\n  fullName: StringCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: CopyTo(String[], Int32)\n  nameWithType: StringCollection.CopyTo(String[], Int32)\n  fullName: StringCollection.CopyTo(String[], Int32)\n- uid: System.Collections.Specialized.StringCollection.Count\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Count\n  nameWithType: StringCollection.Count\n  fullName: StringCollection.Count\n- uid: System.Collections.Specialized.StringCollection.GetEnumerator\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: StringCollection.GetEnumerator()\n  fullName: StringCollection.GetEnumerator()\n- uid: System.Collections.Specialized.StringEnumerator\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: StringEnumerator\n  nameWithType: StringEnumerator\n  fullName: System.Collections.Specialized.StringEnumerator\n- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IndexOf(String)\n  nameWithType: StringCollection.IndexOf(String)\n  fullName: StringCollection.IndexOf(String)\n- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Insert(Int32, String)\n  nameWithType: StringCollection.Insert(Int32, String)\n  fullName: StringCollection.Insert(Int32, String)\n- uid: System.Collections.Specialized.StringCollection.IsReadOnly\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: StringCollection.IsReadOnly\n  fullName: StringCollection.IsReadOnly\n- uid: System.Collections.Specialized.StringCollection.IsSynchronized\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: StringCollection.IsSynchronized\n  fullName: StringCollection.IsSynchronized\n- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: StringCollection.Item(Int32)\n  fullName: StringCollection.Item(Int32)\n- uid: System.Collections.Specialized.StringCollection.Remove(System.String)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: StringCollection.Remove(String)\n  fullName: StringCollection.Remove(String)\n- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: StringCollection.RemoveAt(Int32)\n  fullName: StringCollection.RemoveAt(Int32)\n- uid: System.Collections.Specialized.StringCollection.SyncRoot\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: StringCollection.SyncRoot\n  fullName: StringCollection.SyncRoot\n- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: StringCollection.ICollection.CopyTo(Array, Int32)\n  fullName: StringCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: StringCollection.IEnumerable.GetEnumerator()\n  fullName: StringCollection.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: StringCollection.IList.Add(Object)\n  fullName: StringCollection.IList.Add(Object)\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: StringCollection.IList.Contains(Object)\n  fullName: StringCollection.IList.Contains(Object)\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: StringCollection.IList.IndexOf(Object)\n  fullName: StringCollection.IList.IndexOf(Object)\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: StringCollection.IList.Insert(Int32, Object)\n  fullName: StringCollection.IList.Insert(Int32, Object)\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: StringCollection.IList.IsFixedSize\n  fullName: StringCollection.IList.IsFixedSize\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: StringCollection.IList.IsReadOnly\n  fullName: StringCollection.IList.IsReadOnly\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: StringCollection.IList.Item(Int32)\n  fullName: StringCollection.IList.Item(Int32)\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: StringCollection.IList.Remove(Object)\n  fullName: StringCollection.IList.Remove(Object)\n- uid: System.Collections.Specialized.StringCollection.#ctor*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: StringCollection\n  nameWithType: StringCollection.StringCollection\n  fullName: StringCollection.StringCollection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.Add*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Add\n  nameWithType: StringCollection.Add\n  fullName: StringCollection.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.AddRange*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: StringCollection.AddRange\n  fullName: StringCollection.AddRange\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.Clear*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Clear\n  nameWithType: StringCollection.Clear\n  fullName: StringCollection.Clear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.Contains*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Contains\n  nameWithType: StringCollection.Contains\n  fullName: StringCollection.Contains\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.CopyTo*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: StringCollection.CopyTo\n  fullName: StringCollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.Count*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Count\n  nameWithType: StringCollection.Count\n  fullName: StringCollection.Count\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.GetEnumerator*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: StringCollection.GetEnumerator\n  fullName: StringCollection.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.IndexOf*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: StringCollection.IndexOf\n  fullName: StringCollection.IndexOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.Insert*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Insert\n  nameWithType: StringCollection.Insert\n  fullName: StringCollection.Insert\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.IsReadOnly*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: StringCollection.IsReadOnly\n  fullName: StringCollection.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.IsSynchronized*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: StringCollection.IsSynchronized\n  fullName: StringCollection.IsSynchronized\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.Item*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Item\n  nameWithType: StringCollection.Item\n  fullName: StringCollection.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.Remove*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: Remove\n  nameWithType: StringCollection.Remove\n  fullName: StringCollection.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.RemoveAt*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: StringCollection.RemoveAt\n  fullName: StringCollection.RemoveAt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.SyncRoot*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: StringCollection.SyncRoot\n  fullName: StringCollection.SyncRoot\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: StringCollection.System.Collections.ICollection.CopyTo\n  fullName: StringCollection.System.Collections.ICollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator\n  fullName: StringCollection.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: StringCollection.System.Collections.IList.Add\n  fullName: StringCollection.System.Collections.IList.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: StringCollection.System.Collections.IList.Contains\n  fullName: StringCollection.System.Collections.IList.Contains\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: StringCollection.System.Collections.IList.IndexOf\n  fullName: StringCollection.System.Collections.IList.IndexOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: StringCollection.System.Collections.IList.Insert\n  fullName: StringCollection.System.Collections.IList.Insert\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: StringCollection.System.Collections.IList.IsFixedSize\n  fullName: StringCollection.System.Collections.IList.IsFixedSize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: StringCollection.System.Collections.IList.IsReadOnly\n  fullName: StringCollection.System.Collections.IList.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: StringCollection.System.Collections.IList.Item\n  fullName: StringCollection.System.Collections.IList.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*\n  parent: System.Collections.Specialized.StringCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: StringCollection.System.Collections.IList.Remove\n  fullName: StringCollection.System.Collections.IList.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/StringCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n"}