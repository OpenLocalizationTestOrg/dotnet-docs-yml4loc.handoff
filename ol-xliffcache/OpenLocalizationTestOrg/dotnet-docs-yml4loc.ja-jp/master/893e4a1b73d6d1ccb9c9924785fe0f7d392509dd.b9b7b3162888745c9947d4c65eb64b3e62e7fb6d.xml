{"nodes":[{"content":"Provides for deferred loading and relationship maintenance for the collection side of one-to-many and one-to-one relationships in a LINQ to SQL applications.","nodes":[{"pos":[0,157],"content":"Provides for deferred loading and relationship maintenance for the collection side of one-to-many and one-to-one relationships in a LINQ to SQL applications.","nodes":[{"content":"Provides for deferred loading and relationship maintenance for the collection side of one-to-many and one-to-one relationships in a LINQ to SQL applications.","pos":[0,157]}]}],"pos":[3029,3187],"yaml":true},{"content":"This class is used in combination with <xref:System.Data.Linq.EntityRef%601>.","nodes":[{"pos":[0,77],"content":"This class is used in combination with <xref:System.Data.Linq.EntityRef%601>.","nodes":[{"content":"This class is used in combination with <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph>.","pos":[0,77],"source":"This class is used in combination with <xref:System.Data.Linq.EntityRef%601>."}]}],"pos":[3198,3276],"yaml":true,"extradata":"MT"},{"content":"The data type of the target entity.","nodes":[{"pos":[0,35],"content":"The data type of the target entity.","nodes":[{"content":"The data type of the target entity.","pos":[0,35]}]}],"pos":[3622,3658],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> class.","nodes":[{"pos":[0,90],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> class."}],"pos":[32053,32144],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> class while supplying handlers for add and remove operations.","nodes":[{"pos":[0,145],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> class while supplying handlers for add and remove operations.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> class while supplying handlers for add and remove operations."}],"pos":[33445,33591],"yaml":true},{"content":"Delegate for <xref href=\"System.Data.Linq.EntitySet`1.Add(`0)\"></xref>.","nodes":[{"pos":[0,71],"content":"Delegate for <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1.Add(`0)\"&gt;&lt;/xref&gt;</ph>.","source":"Delegate for <xref href=\"System.Data.Linq.EntitySet`1.Add(`0)\"></xref>."}],"pos":[33768,33840],"yaml":true},{"content":"Delegate for <xref href=\"System.Data.Linq.EntitySet`1.Remove(`0)\"></xref>.","nodes":[{"pos":[0,74],"content":"Delegate for <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1.Remove(`0)\"&gt;&lt;/xref&gt;</ph>.","source":"Delegate for <xref href=\"System.Data.Linq.EntitySet`1.Remove(`0)\"></xref>."}],"pos":[33913,33988],"yaml":true},{"content":"Adds an entity.","nodes":[{"pos":[0,15],"content":"Adds an entity.","nodes":[{"content":"Adds an entity.","pos":[0,15]}]}],"pos":[34994,35010],"yaml":true},{"content":"The entity to add.","nodes":[{"pos":[0,18],"content":"The entity to add.","nodes":[{"content":"The entity to add.","pos":[0,18]}]}],"pos":[35139,35158],"yaml":true},{"content":"Adds a collection of entities.","nodes":[{"pos":[0,30],"content":"Adds a collection of entities.","nodes":[{"content":"Adds a collection of entities.","pos":[0,30]}]}],"pos":[36351,36382],"yaml":true},{"content":"The collection to be added.","nodes":[{"pos":[0,27],"content":"The collection to be added.","nodes":[{"content":"The collection to be added.","pos":[0,27]}]}],"pos":[36604,36632],"yaml":true},{"content":"Assigns an <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection to another <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection.","nodes":[{"pos":[0,144],"content":"Assigns an <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> collection to another <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Assigns an <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection to another <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection."}],"pos":[37818,37963],"yaml":true},{"content":"The collection to assign.","nodes":[{"pos":[0,25],"content":"The collection to assign.","nodes":[{"content":"The collection to assign.","pos":[0,25]}]}],"pos":[38187,38213],"yaml":true},{"content":"Removes all items.","nodes":[{"pos":[0,18],"content":"Removes all items.","nodes":[{"content":"Removes all items.","pos":[0,18]}]}],"pos":[39199,39218],"yaml":true},{"content":"Specifies whether the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> contains a specific entity.","nodes":[{"pos":[0,99],"content":"Specifies whether the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> contains a specific entity.","source":"Specifies whether the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> contains a specific entity."}],"pos":[40318,40418],"yaml":true},{"content":"The entity.","nodes":[{"pos":[0,11],"content":"The entity.","nodes":[{"content":"The entity.","pos":[0,11]}]}],"pos":[40552,40564],"yaml":true},{"content":"`true` if the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> contains the entity; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> contains the entity; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> contains the entity; otherwise, `false`."}],"pos":[40622,40729],"yaml":true},{"content":"Copies the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> to an array.","nodes":[{"pos":[0,73],"content":"Copies the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> to an array.","source":"Copies the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> to an array."}],"pos":[41828,41902],"yaml":true},{"content":"The following C# sample shows one use of this method:  \n  \n```  \nvar customer = (from c in db.Customers  \n   where c.CustomerID == \"ALFKI\"  \n   select c).Single();  \n  \nOrder[] orderArray = new Order[customer.Orders.Count];  \n```  \n  \n customer.Orders.CopyTo(orderArray,0);In Visual Basic:  \n  \n```  \nDim customer = (From c In db.Customers _   \n   Where c.CustomerID = \"ALFKI\" _   \n   Select c).[Single]()  \n  \nDim orderArray As Order() = New Order(customer.Orders.Count - 1) {}  \ncustomer.Orders.CopyTo(orderArray, 0)  \n```","nodes":[{"pos":[0,53],"content":"The following C# sample shows one use of this method:","nodes":[{"content":"The following C# sample shows one use of this method:","pos":[0,53]}]},{"pos":[236,289],"content":"customer.Orders.CopyTo(orderArray,0);In Visual Basic:","nodes":[{"content":"customer.Orders.CopyTo(orderArray,0);In Visual Basic:","pos":[0,53]}]}],"pos":[41913,42463],"yaml":true,"extradata":"MT"},{"content":"The array to copy to.","nodes":[{"pos":[0,21],"content":"The array to copy to.","nodes":[{"content":"The array to copy to.","pos":[0,21]}]}],"pos":[42613,42635],"yaml":true},{"content":"The starting index in the array.","nodes":[{"pos":[0,32],"content":"The starting index in the array.","nodes":[{"content":"The starting index in the array.","pos":[0,32]}]}],"pos":[42700,42733],"yaml":true},{"content":"Gets the number of entities in the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection.","nodes":[{"pos":[0,96],"content":"Gets the number of entities in the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the number of entities in the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection."}],"pos":[43715,43812],"yaml":true},{"content":"An integer representing the number of entities.","nodes":[{"pos":[0,47],"content":"An integer representing the number of entities.","nodes":[{"content":"An integer representing the number of entities.","pos":[0,47]}]}],"pos":[43917,43965],"yaml":true},{"content":"Returns an enumerator that iterates through a collection.","nodes":[{"pos":[0,57],"content":"Returns an enumerator that iterates through a collection.","nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]}],"pos":[44998,45056],"yaml":true},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref>.","nodes":[{"pos":[0,65],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref>."}],"pos":[45262,45328],"yaml":true},{"content":"Creates a new list for binding to a data source.","nodes":[{"pos":[0,48],"content":"Creates a new list for binding to a data source.","nodes":[{"content":"Creates a new list for binding to a data source.","pos":[0,48]}]}],"pos":[46393,46442],"yaml":true},{"content":"A new <xref href=\"System.ComponentModel.IBindingList\"></xref> for binding to a data source.","nodes":[{"pos":[0,91],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList\"&gt;&lt;/xref&gt;</ph> for binding to a data source.","source":"A new <xref href=\"System.ComponentModel.IBindingList\"></xref> for binding to a data source."}],"pos":[46626,46718],"yaml":true},{"content":"Specifies whether the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has loaded or assigned a value.","nodes":[{"pos":[0,103],"content":"Specifies whether the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> has loaded or assigned a value.","source":"Specifies whether the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has loaded or assigned a value."}],"pos":[48600,48704],"yaml":true},{"content":"\"Loaded\" means that the data was loaded during materialization or at deferred loading. \"Assigned\" means that you have manually given the data a value.","nodes":[{"pos":[0,150],"content":"\"Loaded\" means that the data was loaded during materialization or at deferred loading. \"Assigned\" means that you have manually given the data a value.","nodes":[{"content":"\"Loaded\" means that the data was loaded during materialization or at deferred loading. \"Assigned\" means that you have manually given the data a value.","pos":[0,150],"nodes":[{"content":"\"Loaded\" means that the data was loaded during materialization or at deferred loading.","pos":[0,86]},{"content":"\"Assigned\" means that you have manually given the data a value.","pos":[87,150]}]}]}],"pos":[48715,48872],"yaml":true,"extradata":"MT"},{"content":"Returns true if the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has either loaded or assigned a value.","nodes":[{"pos":[0,108],"content":"Returns true if the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> has either loaded or assigned a value.","source":"Returns true if the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has either loaded or assigned a value."}],"pos":[49000,49109],"yaml":true},{"content":"Returns the index of the entity.","nodes":[{"pos":[0,32],"content":"Returns the index of the entity.","nodes":[{"content":"Returns the index of the entity.","pos":[0,32]}]}],"pos":[50912,50945],"yaml":true},{"content":"The entity whose index is to be returned.","nodes":[{"pos":[0,41],"content":"The entity whose index is to be returned.","nodes":[{"content":"The entity whose index is to be returned.","pos":[0,41]}]}],"pos":[51077,51119],"yaml":true},{"content":"An integer representing the index.","nodes":[{"pos":[0,34],"content":"An integer representing the index.","nodes":[{"content":"An integer representing the index.","pos":[0,34]}]}],"pos":[51175,51210],"yaml":true},{"content":"Inserts an entity at an index position.","nodes":[{"pos":[0,39],"content":"Inserts an entity at an index position.","nodes":[{"content":"Inserts an entity at an index position.","pos":[0,39]}]}],"pos":[52296,52336],"yaml":true},{"content":"The index representing the position at which to insert the entity.","nodes":[{"pos":[0,66],"content":"The index representing the position at which to insert the entity.","nodes":[{"content":"The index representing the position at which to insert the entity.","pos":[0,66]}]}],"pos":[52483,52550],"yaml":true},{"content":"The entity to be inserted.","nodes":[{"pos":[0,26],"content":"The entity to be inserted.","nodes":[{"content":"The entity to be inserted.","pos":[0,26]}]}],"pos":[52606,52633],"yaml":true},{"content":"Specifies whether this <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has a deferred query that has not yet executed.","nodes":[{"pos":[0,120],"content":"Specifies whether this <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> has a deferred query that has not yet executed.","source":"Specifies whether this <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has a deferred query that has not yet executed."}],"pos":[53645,53766],"yaml":true},{"content":"`true` if a deferred query has not yet been executed; otherwise `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if a deferred query has not yet been executed; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if a deferred query has not yet been executed; otherwise `false`."}],"pos":[53879,53954],"yaml":true},{"content":"Gets or sets the element at the specified index.","nodes":[{"pos":[0,48],"content":"Gets or sets the element at the specified index.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]}],"pos":[54997,55046],"yaml":true},{"content":"The index of the element.","nodes":[{"pos":[0,25],"content":"The index of the element.","nodes":[{"content":"The index of the element.","pos":[0,25]}]}],"pos":[55190,55216],"yaml":true},{"content":"An <xref href=\"System.Data.Linq.EntitySet`1\"></xref> representing the item.","nodes":[{"pos":[0,75],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph> representing the item.","source":"An <xref href=\"System.Data.Linq.EntitySet`1\"></xref> representing the item."}],"pos":[55267,55343],"yaml":true},{"content":"Occurs when the contents of a list are changed.","nodes":[{"pos":[0,47],"content":"Occurs when the contents of a list are changed.","nodes":[{"content":"Occurs when the contents of a list are changed.","pos":[0,47]}]}],"pos":[56356,56404],"yaml":true},{"content":"Loads the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>.","nodes":[{"pos":[0,60],"content":"Loads the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph>.","source":"Loads the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>."}],"pos":[57522,57583],"yaml":true},{"content":"Removes an entity.","nodes":[{"pos":[0,18],"content":"Removes an entity.","nodes":[{"content":"Removes an entity.","pos":[0,18]}]}],"pos":[58669,58688],"yaml":true},{"content":"The entity to be removed.","nodes":[{"pos":[0,25],"content":"The entity to be removed.","nodes":[{"content":"The entity to be removed.","pos":[0,25]}]}],"pos":[58820,58846],"yaml":true},{"content":"`true` if the entity is successfully removed; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the entity is successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the entity is successfully removed; otherwise, `false`."}],"pos":[58904,58972],"yaml":true},{"content":"Removes an entity at a specified index.","nodes":[{"pos":[0,39],"content":"Removes an entity at a specified index.","nodes":[{"content":"Removes an entity at a specified index.","pos":[0,39]}]}],"pos":[60033,60073],"yaml":true},{"content":"The index of the entity to be removed.","nodes":[{"pos":[0,38],"content":"The index of the entity to be removed.","nodes":[{"content":"The index of the entity to be removed.","pos":[0,38]}]}],"pos":[60206,60245],"yaml":true},{"content":"Sets the source of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>.","nodes":[{"pos":[0,73],"content":"Sets the source of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph>.","source":"Sets the source of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>."}],"pos":[61449,61523],"yaml":true},{"content":"The source of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>.","nodes":[{"pos":[0,68],"content":"The source of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.EntitySet`1\"&gt;&lt;/xref&gt;</ph>.","source":"The source of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>."}],"pos":[61750,61819],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.Generic.ICollection`1.IsReadOnly\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1.IsReadOnly\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.Generic.ICollection`1.IsReadOnly\"></xref>."}],"pos":[63055,63167],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"pos":[0,210],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","pos":[0,210],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.","pos":[60,210],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface."}]}]}],"pos":[63178,63389],"yaml":true,"extradata":"MT"},{"content":"`true` if the collection is read-only; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the collection is read-only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection is read-only; otherwise, `false`."}],"pos":[63543,63604],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.ICollection.CopyTo(System.Array,System.Int32)\"></xref>.","nodes":[{"pos":[0,124],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection.CopyTo(System.Array,System.Int32)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.ICollection.CopyTo(System.Array,System.Int32)\"></xref>."}],"pos":[64876,65001],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[0,198],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,198],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,198],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[65012,65211],"yaml":true,"extradata":"MT"},{"content":"The array to which elements of the collection are copied.","nodes":[{"pos":[0,57],"content":"The array to which elements of the collection are copied.","nodes":[{"content":"The array to which elements of the collection are copied.","pos":[0,57]}]}],"pos":[65360,65418],"yaml":true},{"content":"The array index at which copying begins.","nodes":[{"pos":[0,40],"content":"The array index at which copying begins.","nodes":[{"content":"The array index at which copying begins.","pos":[0,40]}]}],"pos":[65478,65519],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.ICollection.IsSynchronized\"></xref>.","nodes":[{"pos":[0,105],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection.IsSynchronized\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.ICollection.IsSynchronized\"></xref>."}],"pos":[67597,67703],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[0,198],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,198],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,198],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[67714,67913],"yaml":true,"extradata":"MT"},{"content":"`true` if access to the collection is synchronized (thread-safe); otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if access to the collection is synchronized (thread-safe); otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if access to the collection is synchronized (thread-safe); otherwise, `false`."}],"pos":[68054,68142],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.ICollection.SyncRoot\"></xref>.","nodes":[{"pos":[0,99],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection.SyncRoot\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.ICollection.SyncRoot\"></xref>."}],"pos":[69292,69392],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[0,198],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,198],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,198],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[69403,69602],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize access to the collection.","nodes":[{"pos":[0,67],"content":"An object that can be used to synchronize access to the collection.","nodes":[{"content":"An object that can be used to synchronize access to the collection.","pos":[0,67]}]}],"pos":[69738,69806],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>.","nodes":[{"pos":[0,104],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerable.GetEnumerator\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>."}],"pos":[70984,71089],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IEnumerable?displayProperty=fullName> interface.","nodes":[{"pos":[0,223],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IEnumerable?displayProperty=fullName> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IEnumerable?displayProperty=fullName> interface.","pos":[0,223],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt;</ph> interface.","pos":[60,223],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IEnumerable?displayProperty=fullName> interface."}]}]}],"pos":[71100,71324],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through a collection.","nodes":[{"pos":[0,111],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> object that can be used to iterate through a collection.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through a collection."}],"pos":[71501,71613],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Add(System.Object)\"></xref>.","nodes":[{"pos":[0,103],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Add(System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Add(System.Object)\"></xref>."}],"pos":[72795,72899],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","nodes":[{"pos":[0,217],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","pos":[0,217],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList?displayProperty=fullName&gt;</ph> interface.","pos":[60,217],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface."}]}]}],"pos":[72910,73128],"yaml":true,"extradata":"MT"},{"content":"The object to add to the list.","nodes":[{"pos":[0,30],"content":"The object to add to the list.","nodes":[{"content":"The object to add to the list.","pos":[0,30]}]}],"pos":[73258,73289],"yaml":true},{"content":"The position into which the new element was inserted.","nodes":[{"pos":[0,53],"content":"The position into which the new element was inserted.","nodes":[{"content":"The position into which the new element was inserted.","pos":[0,53]}]}],"pos":[73345,73399],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Contains(System.Object)\"></xref>.","nodes":[{"pos":[0,108],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Contains(System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Contains(System.Object)\"></xref>."}],"pos":[75356,75465],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","nodes":[{"pos":[0,217],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","pos":[0,217],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList?displayProperty=fullName&gt;</ph> interface.","pos":[60,217],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface."}]}]}],"pos":[75476,75694],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the list.","nodes":[{"pos":[0,33],"content":"The object to locate in the list.","nodes":[{"content":"The object to locate in the list.","pos":[0,33]}]}],"pos":[75830,75864],"yaml":true},{"content":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,131],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`."}],"pos":[75922,76056],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.IndexOf(System.Object)\"></xref>.","nodes":[{"pos":[0,107],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.IndexOf(System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.IndexOf(System.Object)\"></xref>."}],"pos":[77251,77359],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","nodes":[{"pos":[0,217],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.","pos":[0,217],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList?displayProperty=fullName&gt;</ph> interface.","pos":[60,217],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface."}]}]}],"pos":[77370,77588],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the list.","nodes":[{"pos":[0,33],"content":"The object to locate in the list.","nodes":[{"content":"The object to locate in the list.","pos":[0,33]}]}],"pos":[77722,77756],"yaml":true},{"content":"The index of <code>value</code> if found in the list; otherwise, -1.","nodes":[{"pos":[0,68],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","source":"The index of <code>value</code> if found in the list; otherwise, -1."}],"pos":[77812,77881],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Insert(System.Int32,System.Object)\"></xref>.","nodes":[{"pos":[0,119],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Insert(System.Int32,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Insert(System.Int32,System.Object)\"></xref>."}],"pos":[79129,79249],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,192],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,192],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,192],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[79260,79453],"yaml":true,"extradata":"MT"},{"content":"The index of the object in the list.","nodes":[{"pos":[0,36],"content":"The index of the object in the list.","nodes":[{"content":"The index of the object in the list.","pos":[0,36]}]}],"pos":[79597,79634],"yaml":true},{"content":"The object to insert into the list.","nodes":[{"pos":[0,35],"content":"The object to insert into the list.","nodes":[{"content":"The object to insert into the list.","pos":[0,35]}]}],"pos":[79695,79731],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.IsFixedSize\"></xref>.","nodes":[{"pos":[0,96],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.IsFixedSize\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.IsFixedSize\"></xref>."}],"pos":[80881,80978],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,192],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,192],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,192],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[80989,81182],"yaml":true,"extradata":"MT"},{"content":"`true` if the collection has a fixed size; otherwise `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if the collection has a fixed size; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection has a fixed size; otherwise `false`."}],"pos":[81314,81378],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.IsReadOnly\"></xref>.","nodes":[{"pos":[0,95],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.IsReadOnly\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.IsReadOnly\"></xref>."}],"pos":[82495,82591],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,192],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,192],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,192],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[82602,82795],"yaml":true,"extradata":"MT"},{"content":"`true` if the collection is read-only; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the collection is read-only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection is read-only; otherwise, `false`."}],"pos":[82926,82987],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Item(System.Int32)\"></xref>.","nodes":[{"pos":[0,103],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Item(System.Int32)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Item(System.Int32)\"></xref>."}],"pos":[84130,84234],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,192],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,192],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,192],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[84245,84438],"yaml":true,"extradata":"MT"},{"content":"The index at which to set or get the element.","nodes":[{"pos":[0,45],"content":"The index at which to set or get the element.","nodes":[{"content":"The index at which to set or get the element.","pos":[0,45]}]}],"pos":[84599,84645],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[84702,84738],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref>.","nodes":[{"pos":[0,106],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Remove(System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref>."}],"pos":[85891,85998],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,192],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,192],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,192],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[86009,86202],"yaml":true,"extradata":"MT"},{"content":"The object to remove from the list.","nodes":[{"pos":[0,35],"content":"The object to remove from the list.","nodes":[{"content":"The object to remove from the list.","pos":[0,35]}]}],"pos":[86336,86372],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.ComponentModel.IListSource.ContainsListCollection\"></xref>.","nodes":[{"pos":[0,116],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IListSource.ContainsListCollection\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.ComponentModel.IListSource.ContainsListCollection\"></xref>."}],"pos":[88544,88661],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.","nodes":[{"pos":[0,201],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface."}]}]}],"pos":[88672,88874],"yaml":true,"extradata":"MT"},{"content":"`true` if the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects; otherwise `false`;","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> if the collection is a collection of <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> objects; otherwise <ph id=\"ph3\">`false`</ph>;","source":"`true` if the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects; otherwise `false`;"}],"pos":[89026,89146],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.ComponentModel.IListSource.GetList\"></xref>.","nodes":[{"pos":[0,101],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IListSource.GetList\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.ComponentModel.IListSource.GetList\"></xref>."}],"pos":[90314,90416],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource?displayProperty=fullName> interface.","nodes":[{"pos":[0,226],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource?displayProperty=fullName> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource?displayProperty=fullName> interface.","pos":[0,226],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.ComponentModel.IListSource?displayProperty=fullName&gt;</ph> interface.","pos":[60,226],"source":" It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource?displayProperty=fullName> interface."}]}]}],"pos":[90427,90654],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from the object.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> that can be bound to a data source from the object.","source":"An <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from the object."}],"pos":[90813,90914],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.EntitySet`1\n  commentId: T:System.Data.Linq.EntitySet`1\n  id: EntitySet`1\n  children:\n  - System.Data.Linq.EntitySet`1.#ctor\n  - System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})\n  - System.Data.Linq.EntitySet`1.Add(`0)\n  - System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})\n  - System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})\n  - System.Data.Linq.EntitySet`1.Clear\n  - System.Data.Linq.EntitySet`1.Contains(`0)\n  - System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)\n  - System.Data.Linq.EntitySet`1.Count\n  - System.Data.Linq.EntitySet`1.GetEnumerator\n  - System.Data.Linq.EntitySet`1.GetNewBindingList\n  - System.Data.Linq.EntitySet`1.HasAssignedValues\n  - System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues\n  - System.Data.Linq.EntitySet`1.HasLoadedValues\n  - System.Data.Linq.EntitySet`1.IndexOf(`0)\n  - System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)\n  - System.Data.Linq.EntitySet`1.IsDeferred\n  - System.Data.Linq.EntitySet`1.Item(System.Int32)\n  - System.Data.Linq.EntitySet`1.ListChanged\n  - System.Data.Linq.EntitySet`1.Load\n  - System.Data.Linq.EntitySet`1.Remove(`0)\n  - System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)\n  - System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})\n  - System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly\n  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#Count\n  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized\n  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot\n  - System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#Clear\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)\n  - System.Data.Linq.EntitySet`1.System#Collections#IList#RemoveAt(System.Int32)\n  - System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList\n  langs:\n  - csharp\n  name: EntitySet<TEntity>\n  nameWithType: EntitySet<TEntity>\n  fullName: System.Data.Linq.EntitySet<TEntity>\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Provides for deferred loading and relationship maintenance for the collection side of one-to-many and one-to-one relationships in a LINQ to SQL applications.\n  remarks: This class is used in combination with <xref:System.Data.Linq.EntityRef%601>.\n  syntax:\n    content: 'public sealed class EntitySet<TEntity> : System.Collections.Generic.ICollection<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.Collections.Generic.IList<TEntity>, System.Collections.IList, System.ComponentModel.IListSource where TEntity : class'\n    typeParameters:\n    - id: TEntity\n      description: The data type of the target entity.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{TEntity}\n  - System.Collections.Generic.IEnumerable{TEntity}\n  - System.Collections.Generic.IList{TEntity}\n  - System.Collections.IList\n  - System.ComponentModel.IListSource\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.#ctor\n  commentId: M:System.Data.Linq.EntitySet`1.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: EntitySet<TEntity>()\n  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>()\n  fullName: EntitySet<TEntity>.EntitySet<TEntity>()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> class.\n  syntax:\n    content: public EntitySet ();\n    parameters: []\n  overload: System.Data.Linq.EntitySet`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})\n  commentId: M:System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})\n  id: '#ctor(System.Action{`0},System.Action{`0})'\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: EntitySet<TEntity>(Action<TEntity>, Action<TEntity>)\n  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>(Action<TEntity>, Action<TEntity>)\n  fullName: EntitySet<TEntity>.EntitySet<TEntity>(Action<TEntity>, Action<TEntity>)\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> class while supplying handlers for add and remove operations.\n  syntax:\n    content: public EntitySet (Action<TEntity> onAdd, Action<TEntity> onRemove);\n    parameters:\n    - id: onAdd\n      type: System.Action{TEntity}\n      description: Delegate for <xref href=\"System.Data.Linq.EntitySet`1.Add(`0)\"></xref>.\n    - id: onRemove\n      type: System.Action{TEntity}\n      description: Delegate for <xref href=\"System.Data.Linq.EntitySet`1.Remove(`0)\"></xref>.\n  overload: System.Data.Linq.EntitySet`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Add(`0)\n  commentId: M:System.Data.Linq.EntitySet`1.Add(`0)\n  id: Add(`0)\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Add(TEntity)\n  nameWithType: EntitySet<TEntity>.Add(TEntity)\n  fullName: EntitySet<TEntity>.Add(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Adds an entity.\n  syntax:\n    content: public void Add (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: The entity to add.\n  overload: System.Data.Linq.EntitySet`1.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})\n  id: AddRange(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: AddRange(IEnumerable<TEntity>)\n  nameWithType: EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)\n  fullName: EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Adds a collection of entities.\n  syntax:\n    content: public void AddRange (System.Collections.Generic.IEnumerable<TEntity> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{TEntity}\n      description: The collection to be added.\n  overload: System.Data.Linq.EntitySet`1.AddRange*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})\n  id: Assign(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Assign(IEnumerable<TEntity>)\n  nameWithType: EntitySet<TEntity>.Assign(IEnumerable<TEntity>)\n  fullName: EntitySet<TEntity>.Assign(IEnumerable<TEntity>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Assigns an <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection to another <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection.\n  syntax:\n    content: public void Assign (System.Collections.Generic.IEnumerable<TEntity> entitySource);\n    parameters:\n    - id: entitySource\n      type: System.Collections.Generic.IEnumerable{TEntity}\n      description: The collection to assign.\n  overload: System.Data.Linq.EntitySet`1.Assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Clear\n  commentId: M:System.Data.Linq.EntitySet`1.Clear\n  id: Clear\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: EntitySet<TEntity>.Clear()\n  fullName: EntitySet<TEntity>.Clear()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Removes all items.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Data.Linq.EntitySet`1.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Contains(`0)\n  commentId: M:System.Data.Linq.EntitySet`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Contains(TEntity)\n  nameWithType: EntitySet<TEntity>.Contains(TEntity)\n  fullName: EntitySet<TEntity>.Contains(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Specifies whether the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> contains a specific entity.\n  syntax:\n    content: public bool Contains (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: The entity.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> contains the entity; otherwise, `false`.'\n  overload: System.Data.Linq.EntitySet`1.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)\n  commentId: M:System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: CopyTo(TEntity[], Int32)\n  nameWithType: EntitySet<TEntity>.CopyTo(TEntity[], Int32)\n  fullName: EntitySet<TEntity>.CopyTo(TEntity[], Int32)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Copies the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> to an array.\n  remarks: \"The following C# sample shows one use of this method:  \\n  \\n```  \\nvar customer = (from c in db.Customers  \\n   where c.CustomerID == \\\"ALFKI\\\"  \\n   select c).Single();  \\n  \\nOrder[] orderArray = new Order[customer.Orders.Count];  \\n```  \\n  \\n customer.Orders.CopyTo(orderArray,0);In Visual Basic:  \\n  \\n```  \\nDim customer = (From c In db.Customers _   \\n   Where c.CustomerID = \\\"ALFKI\\\" _   \\n   Select c).[Single]()  \\n  \\nDim orderArray As Order() = New Order(customer.Orders.Count - 1) {}  \\ncustomer.Orders.CopyTo(orderArray, 0)  \\n```\"\n  syntax:\n    content: public void CopyTo (TEntity[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: TEntity[]\n      description: The array to copy to.\n    - id: arrayIndex\n      type: System.Int32\n      description: The starting index in the array.\n  overload: System.Data.Linq.EntitySet`1.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Count\n  commentId: P:System.Data.Linq.EntitySet`1.Count\n  id: Count\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: EntitySet<TEntity>.Count\n  fullName: EntitySet<TEntity>.Count\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the number of entities in the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: An integer representing the number of entities.\n  overload: System.Data.Linq.EntitySet`1.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.GetEnumerator\n  commentId: M:System.Data.Linq.EntitySet`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: EntitySet<TEntity>.GetEnumerator()\n  fullName: EntitySet<TEntity>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns an enumerator that iterates through a collection.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TEntity}\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref>.\n  overload: System.Data.Linq.EntitySet`1.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.GetNewBindingList\n  commentId: M:System.Data.Linq.EntitySet`1.GetNewBindingList\n  id: GetNewBindingList\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: GetNewBindingList()\n  nameWithType: EntitySet<TEntity>.GetNewBindingList()\n  fullName: EntitySet<TEntity>.GetNewBindingList()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Creates a new list for binding to a data source.\n  syntax:\n    content: public System.ComponentModel.IBindingList GetNewBindingList ();\n    parameters: []\n    return:\n      type: System.ComponentModel.IBindingList\n      description: A new <xref href=\"System.ComponentModel.IBindingList\"></xref> for binding to a data source.\n  overload: System.Data.Linq.EntitySet`1.GetNewBindingList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.HasAssignedValues\n  commentId: P:System.Data.Linq.EntitySet`1.HasAssignedValues\n  id: HasAssignedValues\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: HasAssignedValues\n  nameWithType: EntitySet<TEntity>.HasAssignedValues\n  fullName: EntitySet<TEntity>.HasAssignedValues\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool HasAssignedValues { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Data.Linq.EntitySet`1.HasAssignedValues*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues\n  commentId: P:System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues\n  id: HasLoadedOrAssignedValues\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: HasLoadedOrAssignedValues\n  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues\n  fullName: EntitySet<TEntity>.HasLoadedOrAssignedValues\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Specifies whether the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has loaded or assigned a value.\n  remarks: \"\\\"Loaded\\\" means that the data was loaded during materialization or at deferred loading. \\\"Assigned\\\" means that you have manually given the data a value.\"\n  syntax:\n    content: public bool HasLoadedOrAssignedValues { get; }\n    return:\n      type: System.Boolean\n      description: Returns true if the <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has either loaded or assigned a value.\n  overload: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.HasLoadedValues\n  commentId: P:System.Data.Linq.EntitySet`1.HasLoadedValues\n  id: HasLoadedValues\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: HasLoadedValues\n  nameWithType: EntitySet<TEntity>.HasLoadedValues\n  fullName: EntitySet<TEntity>.HasLoadedValues\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool HasLoadedValues { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Data.Linq.EntitySet`1.HasLoadedValues*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.IndexOf(`0)\n  commentId: M:System.Data.Linq.EntitySet`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IndexOf(TEntity)\n  nameWithType: EntitySet<TEntity>.IndexOf(TEntity)\n  fullName: EntitySet<TEntity>.IndexOf(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns the index of the entity.\n  syntax:\n    content: public int IndexOf (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: The entity whose index is to be returned.\n    return:\n      type: System.Int32\n      description: An integer representing the index.\n  overload: System.Data.Linq.EntitySet`1.IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)\n  commentId: M:System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Insert(Int32, TEntity)\n  nameWithType: EntitySet<TEntity>.Insert(Int32, TEntity)\n  fullName: EntitySet<TEntity>.Insert(Int32, TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Inserts an entity at an index position.\n  syntax:\n    content: public void Insert (int index, TEntity entity);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index representing the position at which to insert the entity.\n    - id: entity\n      type: TEntity\n      description: The entity to be inserted.\n  overload: System.Data.Linq.EntitySet`1.Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.IsDeferred\n  commentId: P:System.Data.Linq.EntitySet`1.IsDeferred\n  id: IsDeferred\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IsDeferred\n  nameWithType: EntitySet<TEntity>.IsDeferred\n  fullName: EntitySet<TEntity>.IsDeferred\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Specifies whether this <xref href=\"System.Data.Linq.EntitySet`1\"></xref> has a deferred query that has not yet executed.\n  syntax:\n    content: public bool IsDeferred { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a deferred query has not yet been executed; otherwise `false`.'\n  overload: System.Data.Linq.EntitySet`1.IsDeferred*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Item(System.Int32)\n  commentId: P:System.Data.Linq.EntitySet`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: EntitySet<TEntity>.Item(Int32)\n  fullName: EntitySet<TEntity>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets or sets the element at the specified index.\n  syntax:\n    content: public TEntity this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the element.\n    return:\n      type: TEntity\n      description: An <xref href=\"System.Data.Linq.EntitySet`1\"></xref> representing the item.\n  overload: System.Data.Linq.EntitySet`1.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.ListChanged\n  commentId: E:System.Data.Linq.EntitySet`1.ListChanged\n  id: ListChanged\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: ListChanged\n  nameWithType: EntitySet<TEntity>.ListChanged\n  fullName: EntitySet<TEntity>.ListChanged\n  type: Event\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Occurs when the contents of a list are changed.\n  syntax:\n    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;\n    return:\n      type: System.ComponentModel.ListChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Load\n  commentId: M:System.Data.Linq.EntitySet`1.Load\n  id: Load\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Load()\n  nameWithType: EntitySet<TEntity>.Load()\n  fullName: EntitySet<TEntity>.Load()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Loads the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>.\n  syntax:\n    content: public void Load ();\n    parameters: []\n  overload: System.Data.Linq.EntitySet`1.Load*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.Remove(`0)\n  commentId: M:System.Data.Linq.EntitySet`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: Remove(TEntity)\n  nameWithType: EntitySet<TEntity>.Remove(TEntity)\n  fullName: EntitySet<TEntity>.Remove(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Removes an entity.\n  syntax:\n    content: public bool Remove (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: The entity to be removed.\n    return:\n      type: System.Boolean\n      description: '`true` if the entity is successfully removed; otherwise, `false`.'\n  overload: System.Data.Linq.EntitySet`1.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)\n  commentId: M:System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: EntitySet<TEntity>.RemoveAt(Int32)\n  fullName: EntitySet<TEntity>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Removes an entity at a specified index.\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the entity to be removed.\n  overload: System.Data.Linq.EntitySet`1.RemoveAt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})\n  id: SetSource(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: SetSource(IEnumerable<TEntity>)\n  nameWithType: EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)\n  fullName: EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Sets the source of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>.\n  syntax:\n    content: public void SetSource (System.Collections.Generic.IEnumerable<TEntity> entitySource);\n    parameters:\n    - id: entitySource\n      type: System.Collections.Generic.IEnumerable{TEntity}\n      description: The source of the <xref href=\"System.Data.Linq.EntitySet`1\"></xref>.\n  overload: System.Data.Linq.EntitySet`1.SetSource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly\n  commentId: P:System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection<TEntity>#IsReadOnly\n  id: System#Collections#Generic#ICollection{TEntity}#IsReadOnly\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: ICollection<TEntity>.IsReadOnly\n  nameWithType: EntitySet<TEntity>.ICollection<TEntity>.IsReadOnly\n  fullName: EntitySet<TEntity>.ICollection<TEntity>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.Generic.ICollection`1.IsReadOnly\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.\n  syntax:\n    content: bool System.Collections.Generic.ICollection<TEntity>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection is read-only; otherwise, `false`.'\n  overload: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: EntitySet<TEntity>.ICollection.CopyTo(Array, Int32)\n  fullName: EntitySet<TEntity>.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.ICollection.CopyTo(System.Array,System.Int32)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The array to which elements of the collection are copied.\n    - id: index\n      type: System.Int32\n      description: The array index at which copying begins.\n  overload: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#Count\n  commentId: P:System.Data.Linq.EntitySet`1.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: ICollection.Count\n  nameWithType: EntitySet<TEntity>.ICollection.Count\n  fullName: EntitySet<TEntity>.ICollection.Count\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Data.Linq.EntitySet`1.System#Collections#ICollection#Count*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: EntitySet<TEntity>.ICollection.IsSynchronized\n  fullName: EntitySet<TEntity>.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.ICollection.IsSynchronized\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to the collection is synchronized (thread-safe); otherwise, `false`.'\n  overload: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: EntitySet<TEntity>.ICollection.SyncRoot\n  fullName: EntitySet<TEntity>.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.ICollection.SyncRoot\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the collection.\n  overload: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: EntitySet<TEntity>.IEnumerable.GetEnumerator()\n  fullName: EntitySet<TEntity>.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IEnumerable?displayProperty=fullName> interface.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through a collection.\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: EntitySet<TEntity>.IList.Add(Object)\n  fullName: EntitySet<TEntity>.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Add(System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to add to the list.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted.\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Clear\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.Clear()\n  nameWithType: EntitySet<TEntity>.IList.Clear()\n  fullName: EntitySet<TEntity>.IList.Clear()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Clear*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: EntitySet<TEntity>.IList.Contains(Object)\n  fullName: EntitySet<TEntity>.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Contains(System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the list.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`.'\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: EntitySet<TEntity>.IList.IndexOf(Object)\n  fullName: EntitySet<TEntity>.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.IndexOf(System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the list.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: EntitySet<TEntity>.IList.Insert(Int32, Object)\n  fullName: EntitySet<TEntity>.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Insert(System.Int32,System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the object in the list.\n    - id: value\n      type: System.Object\n      description: The object to insert into the list.\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize\n  commentId: P:System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: EntitySet<TEntity>.IList.IsFixedSize\n  fullName: EntitySet<TEntity>.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.IsFixedSize\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection has a fixed size; otherwise `false`.'\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly\n  commentId: P:System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.IsReadOnly\n  nameWithType: EntitySet<TEntity>.IList.IsReadOnly\n  fullName: EntitySet<TEntity>.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.IsReadOnly\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection is read-only; otherwise, `false`.'\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: EntitySet<TEntity>.IList.Item(Int32)\n  fullName: EntitySet<TEntity>.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Item(System.Int32)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index at which to set or get the element.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: EntitySet<TEntity>.IList.Remove(Object)\n  fullName: EntitySet<TEntity>.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to remove from the list.\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#RemoveAt(System.Int32)\n  commentId: M:System.Data.Linq.EntitySet`1.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IList.RemoveAt(Int32)\n  nameWithType: EntitySet<TEntity>.IList.RemoveAt(Int32)\n  fullName: EntitySet<TEntity>.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#RemoveAt*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection\n  commentId: P:System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection\n  id: System#ComponentModel#IListSource#ContainsListCollection\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IListSource.ContainsListCollection\n  nameWithType: EntitySet<TEntity>.IListSource.ContainsListCollection\n  fullName: EntitySet<TEntity>.IListSource.ContainsListCollection\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.ComponentModel.IListSource.ContainsListCollection\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.\n  syntax:\n    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects; otherwise `false`;'\n  overload: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList\n  commentId: M:System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList\n  id: System#ComponentModel#IListSource#GetList\n  isEii: true\n  parent: System.Data.Linq.EntitySet`1\n  langs:\n  - csharp\n  name: IListSource.GetList()\n  nameWithType: EntitySet<TEntity>.IListSource.GetList()\n  fullName: EntitySet<TEntity>.IListSource.GetList()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: For a description of this member, see <xref href=\"System.ComponentModel.IListSource.GetList\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource?displayProperty=fullName> interface.\n  syntax:\n    content: System.Collections.IList IListSource.GetList ();\n    parameters: []\n    return:\n      type: System.Collections.IList\n      description: An <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from the object.\n  overload: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.EntitySet`1.#ctor\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: EntitySet<TEntity>()\n  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>()\n  fullName: EntitySet<TEntity>.EntitySet<TEntity>()\n- uid: System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: EntitySet<TEntity>(Action<TEntity>, Action<TEntity>)\n  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>(Action<TEntity>, Action<TEntity>)\n  fullName: EntitySet<TEntity>.EntitySet<TEntity>(Action<TEntity>, Action<TEntity>)\n- uid: System.Action`1\n  name: Action<T>\n  nameWithType: Action<T>\n  fullName: System.Action<T>\n- uid: TEntity\n  name: TEntity\n  nameWithType: TEntity\n  fullName: TEntity\n- uid: System.Action{TEntity}\n  parent: System\n  isExternal: false\n  name: Action<TEntity>\n  nameWithType: Action<TEntity>\n  fullName: System.Action<TEntity>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.EntitySet`1.Add(`0)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Add(TEntity)\n  nameWithType: EntitySet<TEntity>.Add(TEntity)\n  fullName: EntitySet<TEntity>.Add(TEntity)\n- uid: System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: AddRange(IEnumerable<TEntity>)\n  nameWithType: EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)\n  fullName: EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{TEntity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TEntity>\n  nameWithType: IEnumerable<TEntity>\n  fullName: System.Collections.Generic.IEnumerable<TEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Assign(IEnumerable<TEntity>)\n  nameWithType: EntitySet<TEntity>.Assign(IEnumerable<TEntity>)\n  fullName: EntitySet<TEntity>.Assign(IEnumerable<TEntity>)\n- uid: System.Data.Linq.EntitySet`1.Clear\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Clear()\n  nameWithType: EntitySet<TEntity>.Clear()\n  fullName: EntitySet<TEntity>.Clear()\n- uid: System.Data.Linq.EntitySet`1.Contains(`0)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Contains(TEntity)\n  nameWithType: EntitySet<TEntity>.Contains(TEntity)\n  fullName: EntitySet<TEntity>.Contains(TEntity)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: CopyTo(TEntity[], Int32)\n  nameWithType: EntitySet<TEntity>.CopyTo(TEntity[], Int32)\n  fullName: EntitySet<TEntity>.CopyTo(TEntity[], Int32)\n- uid: TEntity[]\n  isExternal: true\n  name: TEntity[]\n  nameWithType: TEntity[]\n  fullName: TEntity[]\n  spec.csharp:\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.EntitySet`1.Count\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Count\n  nameWithType: EntitySet<TEntity>.Count\n  fullName: EntitySet<TEntity>.Count\n- uid: System.Data.Linq.EntitySet`1.GetEnumerator\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: EntitySet<TEntity>.GetEnumerator()\n  fullName: EntitySet<TEntity>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{TEntity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<TEntity>\n  nameWithType: IEnumerator<TEntity>\n  fullName: System.Collections.Generic.IEnumerator<TEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.EntitySet`1.GetNewBindingList\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: GetNewBindingList()\n  nameWithType: EntitySet<TEntity>.GetNewBindingList()\n  fullName: EntitySet<TEntity>.GetNewBindingList()\n- uid: System.ComponentModel.IBindingList\n  parent: System.ComponentModel\n  isExternal: false\n  name: IBindingList\n  nameWithType: IBindingList\n  fullName: System.ComponentModel.IBindingList\n- uid: System.Data.Linq.EntitySet`1.HasAssignedValues\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: HasAssignedValues\n  nameWithType: EntitySet<TEntity>.HasAssignedValues\n  fullName: EntitySet<TEntity>.HasAssignedValues\n- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: HasLoadedOrAssignedValues\n  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues\n  fullName: EntitySet<TEntity>.HasLoadedOrAssignedValues\n- uid: System.Data.Linq.EntitySet`1.HasLoadedValues\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: HasLoadedValues\n  nameWithType: EntitySet<TEntity>.HasLoadedValues\n  fullName: EntitySet<TEntity>.HasLoadedValues\n- uid: System.Data.Linq.EntitySet`1.IndexOf(`0)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IndexOf(TEntity)\n  nameWithType: EntitySet<TEntity>.IndexOf(TEntity)\n  fullName: EntitySet<TEntity>.IndexOf(TEntity)\n- uid: System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Insert(Int32, TEntity)\n  nameWithType: EntitySet<TEntity>.Insert(Int32, TEntity)\n  fullName: EntitySet<TEntity>.Insert(Int32, TEntity)\n- uid: System.Data.Linq.EntitySet`1.IsDeferred\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IsDeferred\n  nameWithType: EntitySet<TEntity>.IsDeferred\n  fullName: EntitySet<TEntity>.IsDeferred\n- uid: System.Data.Linq.EntitySet`1.Item(System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: EntitySet<TEntity>.Item(Int32)\n  fullName: EntitySet<TEntity>.Item(Int32)\n- uid: System.Data.Linq.EntitySet`1.ListChanged\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: ListChanged\n  nameWithType: EntitySet<TEntity>.ListChanged\n  fullName: EntitySet<TEntity>.ListChanged\n- uid: System.ComponentModel.ListChangedEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: ListChangedEventHandler\n  nameWithType: ListChangedEventHandler\n  fullName: System.ComponentModel.ListChangedEventHandler\n- uid: System.Data.Linq.EntitySet`1.Load\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Load()\n  nameWithType: EntitySet<TEntity>.Load()\n  fullName: EntitySet<TEntity>.Load()\n- uid: System.Data.Linq.EntitySet`1.Remove(`0)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Remove(TEntity)\n  nameWithType: EntitySet<TEntity>.Remove(TEntity)\n  fullName: EntitySet<TEntity>.Remove(TEntity)\n- uid: System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: EntitySet<TEntity>.RemoveAt(Int32)\n  fullName: EntitySet<TEntity>.RemoveAt(Int32)\n- uid: System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: SetSource(IEnumerable<TEntity>)\n  nameWithType: EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)\n  fullName: EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)\n- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: ICollection<TEntity>.IsReadOnly\n  nameWithType: EntitySet<TEntity>.ICollection<TEntity>.IsReadOnly\n  fullName: EntitySet<TEntity>.ICollection<TEntity>.IsReadOnly\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: EntitySet<TEntity>.ICollection.CopyTo(Array, Int32)\n  fullName: EntitySet<TEntity>.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#Count\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: ICollection.Count\n  nameWithType: EntitySet<TEntity>.ICollection.Count\n  fullName: EntitySet<TEntity>.ICollection.Count\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: EntitySet<TEntity>.ICollection.IsSynchronized\n  fullName: EntitySet<TEntity>.ICollection.IsSynchronized\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: EntitySet<TEntity>.ICollection.SyncRoot\n  fullName: EntitySet<TEntity>.ICollection.SyncRoot\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: EntitySet<TEntity>.IEnumerable.GetEnumerator()\n  fullName: EntitySet<TEntity>.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: EntitySet<TEntity>.IList.Add(Object)\n  fullName: EntitySet<TEntity>.IList.Add(Object)\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Clear\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.Clear()\n  nameWithType: EntitySet<TEntity>.IList.Clear()\n  fullName: EntitySet<TEntity>.IList.Clear()\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: EntitySet<TEntity>.IList.Contains(Object)\n  fullName: EntitySet<TEntity>.IList.Contains(Object)\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: EntitySet<TEntity>.IList.IndexOf(Object)\n  fullName: EntitySet<TEntity>.IList.IndexOf(Object)\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: EntitySet<TEntity>.IList.Insert(Int32, Object)\n  fullName: EntitySet<TEntity>.IList.Insert(Int32, Object)\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: EntitySet<TEntity>.IList.IsFixedSize\n  fullName: EntitySet<TEntity>.IList.IsFixedSize\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: EntitySet<TEntity>.IList.IsReadOnly\n  fullName: EntitySet<TEntity>.IList.IsReadOnly\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: EntitySet<TEntity>.IList.Item(Int32)\n  fullName: EntitySet<TEntity>.IList.Item(Int32)\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: EntitySet<TEntity>.IList.Remove(Object)\n  fullName: EntitySet<TEntity>.IList.Remove(Object)\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IList.RemoveAt(Int32)\n  nameWithType: EntitySet<TEntity>.IList.RemoveAt(Int32)\n  fullName: EntitySet<TEntity>.IList.RemoveAt(Int32)\n- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IListSource.ContainsListCollection\n  nameWithType: EntitySet<TEntity>.IListSource.ContainsListCollection\n  fullName: EntitySet<TEntity>.IListSource.ContainsListCollection\n- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IListSource.GetList()\n  nameWithType: EntitySet<TEntity>.IListSource.GetList()\n  fullName: EntitySet<TEntity>.IListSource.GetList()\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Data.Linq.EntitySet`1.#ctor*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: EntitySet<TEntity>\n  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>\n  fullName: EntitySet<TEntity>.EntitySet<TEntity>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Add*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Add\n  nameWithType: EntitySet<TEntity>.Add\n  fullName: EntitySet<TEntity>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.AddRange*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: AddRange\n  nameWithType: EntitySet<TEntity>.AddRange\n  fullName: EntitySet<TEntity>.AddRange\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Assign*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Assign\n  nameWithType: EntitySet<TEntity>.Assign\n  fullName: EntitySet<TEntity>.Assign\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Clear*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Clear\n  nameWithType: EntitySet<TEntity>.Clear\n  fullName: EntitySet<TEntity>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Contains*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Contains\n  nameWithType: EntitySet<TEntity>.Contains\n  fullName: EntitySet<TEntity>.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.CopyTo*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: EntitySet<TEntity>.CopyTo\n  fullName: EntitySet<TEntity>.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Count*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Count\n  nameWithType: EntitySet<TEntity>.Count\n  fullName: EntitySet<TEntity>.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.GetEnumerator*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: EntitySet<TEntity>.GetEnumerator\n  fullName: EntitySet<TEntity>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.GetNewBindingList*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: GetNewBindingList\n  nameWithType: EntitySet<TEntity>.GetNewBindingList\n  fullName: EntitySet<TEntity>.GetNewBindingList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.HasAssignedValues*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: HasAssignedValues\n  nameWithType: EntitySet<TEntity>.HasAssignedValues\n  fullName: EntitySet<TEntity>.HasAssignedValues\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: HasLoadedOrAssignedValues\n  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues\n  fullName: EntitySet<TEntity>.HasLoadedOrAssignedValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.HasLoadedValues*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: HasLoadedValues\n  nameWithType: EntitySet<TEntity>.HasLoadedValues\n  fullName: EntitySet<TEntity>.HasLoadedValues\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.IndexOf*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IndexOf\n  nameWithType: EntitySet<TEntity>.IndexOf\n  fullName: EntitySet<TEntity>.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Insert*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Insert\n  nameWithType: EntitySet<TEntity>.Insert\n  fullName: EntitySet<TEntity>.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.IsDeferred*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: IsDeferred\n  nameWithType: EntitySet<TEntity>.IsDeferred\n  fullName: EntitySet<TEntity>.IsDeferred\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Item*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Item\n  nameWithType: EntitySet<TEntity>.Item\n  fullName: EntitySet<TEntity>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Load*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Load\n  nameWithType: EntitySet<TEntity>.Load\n  fullName: EntitySet<TEntity>.Load\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.Remove*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: Remove\n  nameWithType: EntitySet<TEntity>.Remove\n  fullName: EntitySet<TEntity>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.RemoveAt*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: RemoveAt\n  nameWithType: EntitySet<TEntity>.RemoveAt\n  fullName: EntitySet<TEntity>.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.SetSource*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: SetSource\n  nameWithType: EntitySet<TEntity>.SetSource\n  fullName: EntitySet<TEntity>.SetSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<TEntity>.IsReadOnly\n  nameWithType: EntitySet<TEntity>.System.Collections.Generic.ICollection<TEntity>.IsReadOnly\n  fullName: EntitySet<TEntity>.System.Collections.Generic.ICollection<TEntity>.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.CopyTo\n  fullName: EntitySet<TEntity>.System.Collections.ICollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#Count*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.Count\n  fullName: EntitySet<TEntity>.System.Collections.ICollection.Count\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized\n  fullName: EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.SyncRoot\n  fullName: EntitySet<TEntity>.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator\n  fullName: EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.Add\n  fullName: EntitySet<TEntity>.System.Collections.IList.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Clear*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.Clear\n  fullName: EntitySet<TEntity>.System.Collections.IList.Clear\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.Contains\n  fullName: EntitySet<TEntity>.System.Collections.IList.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.IndexOf\n  fullName: EntitySet<TEntity>.System.Collections.IList.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.Insert\n  fullName: EntitySet<TEntity>.System.Collections.IList.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsFixedSize\n  fullName: EntitySet<TEntity>.System.Collections.IList.IsFixedSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsReadOnly\n  fullName: EntitySet<TEntity>.System.Collections.IList.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.Item\n  fullName: EntitySet<TEntity>.System.Collections.IList.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.Remove\n  fullName: EntitySet<TEntity>.System.Collections.IList.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#RemoveAt*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: EntitySet<TEntity>.System.Collections.IList.RemoveAt\n  fullName: EntitySet<TEntity>.System.Collections.IList.RemoveAt\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.ContainsListCollection\n  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n  fullName: EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList*\n  parent: System.Data.Linq.EntitySet`1\n  isExternal: false\n  name: System.ComponentModel.IListSource.GetList\n  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.GetList\n  fullName: EntitySet<TEntity>.System.ComponentModel.IListSource.GetList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/EntitySet`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{TEntity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TEntity>\n  nameWithType: ICollection<TEntity>\n  fullName: System.Collections.Generic.ICollection<TEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.Generic.IList{TEntity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<TEntity>\n  nameWithType: IList<TEntity>\n  fullName: System.Collections.Generic.IList<TEntity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TEntity\n    name: TEntity\n    nameWithType: TEntity\n    fullName: TEntity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.IListSource\n  parent: System.ComponentModel\n  isExternal: false\n  name: IListSource\n  nameWithType: IListSource\n  fullName: System.ComponentModel.IListSource\n"}