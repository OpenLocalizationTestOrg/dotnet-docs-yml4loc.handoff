{"nodes":[{"content":"Specifies a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key. This class cannot be inherited.","nodes":[{"pos":[0,283],"content":"Specifies a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key. This class cannot be inherited.","nodes":[{"content":"Specifies a bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key.","pos":[0,251],"source":"Specifies a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key."},{"content":"This class cannot be inherited.","pos":[252,283]}]}],"pos":[771,1055],"yaml":true},{"content":"The <xref:System.Reflection.AssemblyNameFlags> enumeration describes the assembly characteristics that can be set using this attribute.  \n  \n To access the flags that have been specified for an assembly, use the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=fullName> property to obtain an <xref:System.Reflection.AssemblyName> object, then use the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property to obtain an <xref:System.Reflection.AssemblyNameFlags> value.  \n  \n To specify <xref:System.Reflection.AssemblyNameFlags> flags for a dynamic assembly, set the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> object that you pass to the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,135],"content":"The <xref:System.Reflection.AssemblyNameFlags> enumeration describes the assembly characteristics that can be set using this attribute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> enumeration describes the assembly characteristics that can be set using this attribute.","pos":[0,135],"source":"The <xref:System.Reflection.AssemblyNameFlags> enumeration describes the assembly characteristics that can be set using this attribute."}]},{"pos":[142,506],"content":"To access the flags that have been specified for an assembly, use the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=fullName> property to obtain an <xref:System.Reflection.AssemblyName> object, then use the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property to obtain an <xref:System.Reflection.AssemblyNameFlags> value.","nodes":[{"content":"To access the flags that have been specified for an assembly, use the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=fullName&gt;</ph> property to obtain an <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object, then use the <ph id=\"ph3\">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName&gt;</ph> property to obtain an <ph id=\"ph4\">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> value.","pos":[0,364],"source":"To access the flags that have been specified for an assembly, use the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=fullName> property to obtain an <xref:System.Reflection.AssemblyName> object, then use the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property to obtain an <xref:System.Reflection.AssemblyNameFlags> value."}]},{"pos":[513,840],"content":"To specify <xref:System.Reflection.AssemblyNameFlags> flags for a dynamic assembly, set the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> object that you pass to the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName> method.","nodes":[{"content":"To specify <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> flags for a dynamic assembly, set the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object that you pass to the <ph id=\"ph4\">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,327],"source":"To specify <xref:System.Reflection.AssemblyNameFlags> flags for a dynamic assembly, set the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> object that you pass to the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName> method."}]}],"pos":[1066,1913],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an integer value.","nodes":[{"pos":[0,225],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyFlagsAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified combination of <ph id=\"ph2\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags, cast as an integer value.","source":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an integer value."}],"pos":[8491,8717],"yaml":true},{"content":"This untyped constructor is now obsolete. Do not use.","nodes":[{"pos":[0,53],"content":"This untyped constructor is now obsolete. Do not use.","nodes":[{"content":"This untyped constructor is now obsolete. Do not use.","pos":[0,53],"nodes":[{"content":"This untyped constructor is now obsolete.","pos":[0,41]},{"content":"Do not use.","pos":[42,53]}]}]}],"pos":[8728,8782],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.","nodes":[{"pos":[0,263],"content":"A bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags, cast as an integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.","source":"A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key."}],"pos":[9122,9386],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags.","nodes":[{"pos":[0,199],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyFlagsAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified combination of <ph id=\"ph2\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags.","source":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags."}],"pos":[10893,11093],"yaml":true},{"content":"A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.","nodes":[{"pos":[0,236],"content":"A bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.","source":"A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key."}],"pos":[12225,12462],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an unsigned integer value.","nodes":[{"pos":[0,234],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyFlagsAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified combination of <ph id=\"ph2\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags, cast as an unsigned integer value.","source":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an unsigned integer value."}],"pos":[14165,14400],"yaml":true},{"content":"This untyped constructor is now obsolete. Do not use.","nodes":[{"pos":[0,53],"content":"This untyped constructor is now obsolete. Do not use.","nodes":[{"content":"This untyped constructor is now obsolete. Do not use.","pos":[0,53],"nodes":[{"content":"This untyped constructor is now obsolete.","pos":[0,41]},{"content":"Do not use.","pos":[42,53]}]}]}],"pos":[14411,14465],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an unsigned integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.","nodes":[{"pos":[0,272],"content":"A bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags, cast as an unsigned integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.","source":"A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an unsigned integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key."}],"pos":[14827,15100],"yaml":true},{"content":"Gets an integer value representing the combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags specified when this attribute instance was created.","nodes":[{"pos":[0,168],"content":"Gets an integer value representing the combination of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags specified when this attribute instance was created.","source":"Gets an integer value representing the combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags specified when this attribute instance was created."}],"pos":[16570,16739],"yaml":true},{"content":"This property returns an integer for backward compatibility. Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.","nodes":[{"pos":[0,147],"content":"This property returns an integer for backward compatibility. Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.","nodes":[{"content":"This property returns an integer for backward compatibility. Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.","pos":[0,147],"nodes":[{"content":"This property returns an integer for backward compatibility.","pos":[0,60]},{"content":"Cast the value to the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> type before using it.","pos":[61,147],"source":" Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it."}]}]}],"pos":[16750,16898],"yaml":true,"extradata":"MT"},{"content":"An integer value representing a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags.","nodes":[{"pos":[0,118],"content":"An integer value representing a bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags.","source":"An integer value representing a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags."}],"pos":[17916,18035],"yaml":true},{"content":"Gets an unsigned integer value representing the combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags specified when this attribute instance was created.","nodes":[{"pos":[0,177],"content":"Gets an unsigned integer value representing the combination of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags specified when this attribute instance was created.","source":"Gets an unsigned integer value representing the combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags specified when this attribute instance was created."}],"pos":[19621,19799],"yaml":true},{"content":"This property returns an integer for backward compatibility. Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.","nodes":[{"pos":[0,147],"content":"This property returns an integer for backward compatibility. Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.","nodes":[{"content":"This property returns an integer for backward compatibility. Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.","pos":[0,147],"nodes":[{"content":"This property returns an integer for backward compatibility.","pos":[0,60]},{"content":"Cast the value to the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> type before using it.","pos":[61,147],"source":" Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it."}]}]}],"pos":[19810,19958],"yaml":true,"extradata":"MT"},{"content":"An unsigned integer value representing a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags.","nodes":[{"pos":[0,127],"content":"An unsigned integer value representing a bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyNameFlags\"&gt;&lt;/xref&gt;</ph> flags.","source":"An unsigned integer value representing a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags."}],"pos":[20252,20380],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.AssemblyFlagsAttribute\n  commentId: T:System.Reflection.AssemblyFlagsAttribute\n  id: AssemblyFlagsAttribute\n  children:\n  - System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)\n  - System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)\n  - System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)\n  - System.Reflection.AssemblyFlagsAttribute.AssemblyFlags\n  - System.Reflection.AssemblyFlagsAttribute.Flags\n  langs:\n  - csharp\n  name: AssemblyFlagsAttribute\n  nameWithType: AssemblyFlagsAttribute\n  fullName: System.Reflection.AssemblyFlagsAttribute\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection\n  summary: Specifies a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key. This class cannot be inherited.\n  remarks: \"The <xref:System.Reflection.AssemblyNameFlags> enumeration describes the assembly characteristics that can be set using this attribute.  \\n  \\n To access the flags that have been specified for an assembly, use the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=fullName> property to obtain an <xref:System.Reflection.AssemblyName> object, then use the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property to obtain an <xref:System.Reflection.AssemblyNameFlags> value.  \\n  \\n To specify <xref:System.Reflection.AssemblyNameFlags> flags for a dynamic assembly, set the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> object that you pass to the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time. The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags. For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property.  \\n  \\n [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]\\n [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]\\n [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class AssemblyFlagsAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)\n  commentId: M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Reflection.AssemblyFlagsAttribute\n  langs:\n  - csharp\n  name: AssemblyFlagsAttribute(Int32)\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlagsAttribute(Int32)\n  fullName: AssemblyFlagsAttribute.AssemblyFlagsAttribute(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an integer value.\n  remarks: This untyped constructor is now obsolete. Do not use.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public AssemblyFlagsAttribute (int assemblyFlags);\n    parameters:\n    - id: assemblyFlags\n      type: System.Int32\n      description: A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.\n  overload: System.Reflection.AssemblyFlagsAttribute.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)\n  commentId: M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)\n  id: '#ctor(System.Reflection.AssemblyNameFlags)'\n  parent: System.Reflection.AssemblyFlagsAttribute\n  langs:\n  - csharp\n  name: AssemblyFlagsAttribute(AssemblyNameFlags)\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlagsAttribute(AssemblyNameFlags)\n  fullName: AssemblyFlagsAttribute.AssemblyFlagsAttribute(AssemblyNameFlags)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags.\n  remarks: ''\n  example:\n  - \"The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time. The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags. For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property.  \\n  \\n [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]\\n [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]\\n [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]\"\n  syntax:\n    content: public AssemblyFlagsAttribute (System.Reflection.AssemblyNameFlags assemblyFlags);\n    parameters:\n    - id: assemblyFlags\n      type: System.Reflection.AssemblyNameFlags\n      description: A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.\n  overload: System.Reflection.AssemblyFlagsAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)\n  commentId: M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)\n  id: '#ctor(System.UInt32)'\n  parent: System.Reflection.AssemblyFlagsAttribute\n  langs:\n  - csharp\n  name: AssemblyFlagsAttribute(UInt32)\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlagsAttribute(UInt32)\n  fullName: AssemblyFlagsAttribute.AssemblyFlagsAttribute(UInt32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.AssemblyFlagsAttribute\"></xref> class with the specified combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an unsigned integer value.\n  remarks: This untyped constructor is now obsolete. Do not use.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Obsolete(\"This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public AssemblyFlagsAttribute (uint flags);\n    parameters:\n    - id: flags\n      type: System.UInt32\n      description: A bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags, cast as an unsigned integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.\n  overload: System.Reflection.AssemblyFlagsAttribute.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyFlagsAttribute.AssemblyFlags\n  commentId: P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags\n  id: AssemblyFlags\n  parent: System.Reflection.AssemblyFlagsAttribute\n  langs:\n  - csharp\n  name: AssemblyFlags\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlags\n  fullName: AssemblyFlagsAttribute.AssemblyFlags\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection\n  summary: Gets an integer value representing the combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags specified when this attribute instance was created.\n  remarks: This property returns an integer for backward compatibility. Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.\n  example:\n  - \"The following code example shows how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to an assembly, and how to read the flags at run time. The example also creates an instance of the attribute, and uses the <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> property to display the flags. For an example of how to apply the <xref:System.Reflection.AssemblyFlagsAttribute> to a dynamic assembly, see the <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=fullName> property.  \\n  \\n [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]\\n [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]\\n [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]\"\n  syntax:\n    content: public int AssemblyFlags { get; }\n    return:\n      type: System.Int32\n      description: An integer value representing a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags.\n  overload: System.Reflection.AssemblyFlagsAttribute.AssemblyFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyFlagsAttribute.Flags\n  commentId: P:System.Reflection.AssemblyFlagsAttribute.Flags\n  id: Flags\n  parent: System.Reflection.AssemblyFlagsAttribute\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: AssemblyFlagsAttribute.Flags\n  fullName: AssemblyFlagsAttribute.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets an unsigned integer value representing the combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags specified when this attribute instance was created.\n  remarks: This property returns an integer for backward compatibility. Cast the value to the <xref:System.Reflection.AssemblyNameFlags> type before using it.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Obsolete(\"This property has been deprecated. Please use AssemblyFlags instead. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public uint Flags { get; }\n    return:\n      type: System.UInt32\n      description: An unsigned integer value representing a bitwise combination of <xref href=\"System.Reflection.AssemblyNameFlags\"></xref> flags.\n  overload: System.Reflection.AssemblyFlagsAttribute.Flags*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Reflection.AssemblyFlagsAttribute.AssemblyFlags\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)\n  parent: System.Reflection.AssemblyFlagsAttribute\n  isExternal: false\n  name: AssemblyFlagsAttribute(Int32)\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlagsAttribute(Int32)\n  fullName: AssemblyFlagsAttribute.AssemblyFlagsAttribute(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)\n  parent: System.Reflection.AssemblyFlagsAttribute\n  isExternal: false\n  name: AssemblyFlagsAttribute(AssemblyNameFlags)\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlagsAttribute(AssemblyNameFlags)\n  fullName: AssemblyFlagsAttribute.AssemblyFlagsAttribute(AssemblyNameFlags)\n- uid: System.Reflection.AssemblyNameFlags\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyNameFlags\n  nameWithType: AssemblyNameFlags\n  fullName: System.Reflection.AssemblyNameFlags\n- uid: System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)\n  parent: System.Reflection.AssemblyFlagsAttribute\n  isExternal: false\n  name: AssemblyFlagsAttribute(UInt32)\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlagsAttribute(UInt32)\n  fullName: AssemblyFlagsAttribute.AssemblyFlagsAttribute(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.AssemblyFlagsAttribute.AssemblyFlags\n  parent: System.Reflection.AssemblyFlagsAttribute\n  isExternal: false\n  name: AssemblyFlags\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlags\n  fullName: AssemblyFlagsAttribute.AssemblyFlags\n- uid: System.Reflection.AssemblyFlagsAttribute.Flags\n  parent: System.Reflection.AssemblyFlagsAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: AssemblyFlagsAttribute.Flags\n  fullName: AssemblyFlagsAttribute.Flags\n- uid: System.Reflection.AssemblyFlagsAttribute.#ctor*\n  parent: System.Reflection.AssemblyFlagsAttribute\n  isExternal: false\n  name: AssemblyFlagsAttribute\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlagsAttribute\n  fullName: AssemblyFlagsAttribute.AssemblyFlagsAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n- uid: System.Reflection.AssemblyFlagsAttribute.AssemblyFlags*\n  parent: System.Reflection.AssemblyFlagsAttribute\n  isExternal: false\n  name: AssemblyFlags\n  nameWithType: AssemblyFlagsAttribute.AssemblyFlags\n  fullName: AssemblyFlagsAttribute.AssemblyFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n- uid: System.Reflection.AssemblyFlagsAttribute.Flags*\n  parent: System.Reflection.AssemblyFlagsAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: AssemblyFlagsAttribute.Flags\n  fullName: AssemblyFlagsAttribute.Flags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyFlagsAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}