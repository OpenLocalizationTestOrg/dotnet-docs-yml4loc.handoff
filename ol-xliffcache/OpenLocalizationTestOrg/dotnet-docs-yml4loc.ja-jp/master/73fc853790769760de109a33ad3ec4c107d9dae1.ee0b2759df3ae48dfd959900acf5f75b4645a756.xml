{"nodes":[{"content":"Defines functionality that enables transformations in a 2-D plane. Transformations include rotation (<xref href=\"System.Windows.Media.RotateTransform\"></xref>), scale (<xref href=\"System.Windows.Media.ScaleTransform\"></xref>), skew (<xref href=\"System.Windows.Media.SkewTransform\"></xref>), and translation (<xref href=\"System.Windows.Media.TranslateTransform\"></xref>). This class hierarchy differs from the <xref href=\"System.Windows.Media.Matrix\"></xref> structure because it is a class and it supports animation and enumeration semantics.","nodes":[{"pos":[0,542],"content":"Defines functionality that enables transformations in a 2-D plane. Transformations include rotation (<xref href=\"System.Windows.Media.RotateTransform\"></xref>), scale (<xref href=\"System.Windows.Media.ScaleTransform\"></xref>), skew (<xref href=\"System.Windows.Media.SkewTransform\"></xref>), and translation (<xref href=\"System.Windows.Media.TranslateTransform\"></xref>). This class hierarchy differs from the <xref href=\"System.Windows.Media.Matrix\"></xref> structure because it is a class and it supports animation and enumeration semantics.","nodes":[{"content":"Defines functionality that enables transformations in a 2-D plane.","pos":[0,66]},{"content":"Transformations include rotation (<ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.RotateTransform\"&gt;&lt;/xref&gt;</ph>), scale (<ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.ScaleTransform\"&gt;&lt;/xref&gt;</ph>), skew (<ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.SkewTransform\"&gt;&lt;/xref&gt;</ph>), and translation (<ph id=\"ph4\">&lt;xref href=\"System.Windows.Media.TranslateTransform\"&gt;&lt;/xref&gt;</ph>).","pos":[67,370],"source":" Transformations include rotation (<xref href=\"System.Windows.Media.RotateTransform\"></xref>), scale (<xref href=\"System.Windows.Media.ScaleTransform\"></xref>), skew (<xref href=\"System.Windows.Media.SkewTransform\"></xref>), and translation (<xref href=\"System.Windows.Media.TranslateTransform\"></xref>)."},{"content":"This class hierarchy differs from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;&lt;/xref&gt;</ph> structure because it is a class and it supports animation and enumeration semantics.","pos":[371,542],"source":" This class hierarchy differs from the <xref href=\"System.Windows.Media.Matrix\"></xref> structure because it is a class and it supports animation and enumeration semantics."}]}],"pos":[791,1334],"yaml":true},{"content":"Use the <xref:System.Windows.Media.MatrixTransform> class to create custom transformations that are not provided by the <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform> classes.  \n  \n A [!INCLUDE[TLA#tla_2d](~/includes/tlasharptla-2d-md.md)] x-y plane uses a 3x3 matrix for transformations. You can multiply affine transformation matrices to form linear transformations, such as rotation and skew (shear) that are followed by translation.  \n  \n An affine transformation matrix has its final column equal to (0, 0, 1); therefore, you only have to specify the members in the first two columns.  \n  \n A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> has the following structure:  \n  \n||||  \n|-|-|-|  \n|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  \n|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  \n|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|  \n  \n The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.  \n  \n Methods and properties usually specify the transformation matrix as a vector that has only six members; they are as follows:  \n  \n (<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)","nodes":[{"pos":[0,311],"content":"Use the <xref:System.Windows.Media.MatrixTransform> class to create custom transformations that are not provided by the <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform> classes.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.MatrixTransform&gt;</ph> class to create custom transformations that are not provided by the <ph id=\"ph2\">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Media.ScaleTransform&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Media.SkewTransform&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Windows.Media.TranslateTransform&gt;</ph> classes.","pos":[0,311],"source":"Use the <xref:System.Windows.Media.MatrixTransform> class to create custom transformations that are not provided by the <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform> classes."}]},{"pos":[318,572],"content":"A [!INCLUDE[TLA#tla_2d](~/includes/tlasharptla-2d-md.md)] x-y plane uses a 3x3 matrix for transformations. You can multiply affine transformation matrices to form linear transformations, such as rotation and skew (shear) that are followed by translation.","nodes":[{"content":"A <ph id=\"ph1\">[!INCLUDE[TLA#tla_2d](~/includes/tlasharptla-2d-md.md)]</ph> x-y plane uses a 3x3 matrix for transformations.","pos":[0,106],"source":"A [!INCLUDE[TLA#tla_2d](~/includes/tlasharptla-2d-md.md)] x-y plane uses a 3x3 matrix for transformations."},{"content":"You can multiply affine transformation matrices to form linear transformations, such as rotation and skew (shear) that are followed by translation.","pos":[107,254]}]},{"pos":[579,725],"content":"An affine transformation matrix has its final column equal to (0, 0, 1); therefore, you only have to specify the members in the first two columns.","nodes":[{"content":"An affine transformation matrix has its final column equal to (0, 0, 1); therefore, you only have to specify the members in the first two columns.","pos":[0,146]}]},{"pos":[732,867],"content":"A <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> <ph id=\"ph2\">&lt;xref:System.Windows.Media.Matrix&gt;</ph> has the following structure:","source":"A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> has the following structure:"},{"pos":[891,932],"content":"<xref:System.Windows.Media.Matrix.M11%2A>","nodes":[]},{"pos":[933,974],"content":"<xref:System.Windows.Media.Matrix.M12%2A>","nodes":[]},{"pos":[975,976],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[981,1022],"content":"<xref:System.Windows.Media.Matrix.M21%2A>","nodes":[]},{"pos":[1023,1064],"content":"<xref:System.Windows.Media.Matrix.M22%2A>","nodes":[]},{"pos":[1065,1066],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[1071,1116],"content":"<xref:System.Windows.Media.Matrix.OffsetX%2A>","nodes":[]},{"pos":[1117,1162],"content":"<xref:System.Windows.Media.Matrix.OffsetY%2A>","nodes":[]},{"pos":[1163,1164],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[1172,1327],"content":"The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.","nodes":[{"content":"The members in the last row, <ph id=\"ph1\">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph>, represent translation values.","pos":[0,155],"source":"The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values."}]},{"pos":[1334,1458],"content":"Methods and properties usually specify the transformation matrix as a vector that has only six members; they are as follows:","nodes":[{"content":"Methods and properties usually specify the transformation matrix as a vector that has only six members; they are as follows:","pos":[0,124]}]},{"pos":[1465,1731],"content":"(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)","nodes":[{"content":"(<ph id=\"ph1\">&lt;xref:System.Windows.Media.Matrix.M11%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Matrix.M12%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Media.Matrix.M21%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Media.Matrix.M22%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph>)","pos":[0,266],"source":"(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)"}]}],"pos":[1345,3097],"yaml":true,"extradata":"MT"},{"content":"Creates a modifiable copy of this <xref href=\"System.Windows.Media.Transform\"></xref> by making deep copies of its values.","nodes":[{"pos":[0,122],"content":"Creates a modifiable copy of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Transform\"&gt;&lt;/xref&gt;</ph> by making deep copies of its values.","source":"Creates a modifiable copy of this <xref href=\"System.Windows.Media.Transform\"></xref> by making deep copies of its values."}],"pos":[9055,9178],"yaml":true},{"content":"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n When this method copies dependency properties, it copies resource references and data bindings although they might no longer resolve. It does not copy animations or their current values.  \n  \n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"pos":[0,195],"content":"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,195],"nodes":[{"content":"Use this method to produce modifiable copies of read-only <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects.","pos":[0,98],"source":"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[99,195]}]}]},{"pos":[202,388],"content":"When this method copies dependency properties, it copies resource references and data bindings although they might no longer resolve. It does not copy animations or their current values.","nodes":[{"content":"When this method copies dependency properties, it copies resource references and data bindings although they might no longer resolve. It does not copy animations or their current values.","pos":[0,186],"nodes":[{"content":"When this method copies dependency properties, it copies resource references and data bindings although they might no longer resolve.","pos":[0,133]},{"content":"It does not copy animations or their current values.","pos":[134,186]}]}]},{"pos":[395,487],"content":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}],"pos":[9189,9683],"yaml":true,"extradata":"MT"},{"content":"A modifiable deep copy of the current object. The <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the cloned object returns `false` even if the <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the source is `true.`","nodes":[{"pos":[0,251],"content":"A modifiable deep copy of the current object. The <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the cloned object returns `false` even if the <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the source is `true.`","nodes":[{"content":"A modifiable deep copy of the current object.","pos":[0,45]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property of the cloned object returns <ph id=\"ph2\">`false`</ph> even if the <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property of the source is <ph id=\"ph4\">`true.`</ph>","pos":[46,251],"source":" The <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the cloned object returns `false` even if the <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the source is `true.`"}]}],"pos":[9847,10099],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Transform\"></xref> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values.","nodes":[{"pos":[0,251],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Transform\"></xref> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Transform\"&gt;&lt;/xref&gt;</ph> object by making deep copies of its values.","pos":[0,130],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Transform\"></xref> object by making deep copies of its values."},{"content":"This method does not copy resource references, data bindings, or animations, although it does copy their current values.","pos":[131,251]}]}],"pos":[11107,11359],"yaml":true},{"content":"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"pos":[0,195],"content":"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,195],"nodes":[{"content":"Use this method to produce modifiable copies of read-only <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects.","pos":[0,98],"source":"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[99,195]}]}]},{"pos":[202,306],"content":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.","pos":[0,104],"source":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}],"pos":[11370,11681],"yaml":true,"extradata":"MT"},{"content":"A modifiable deep copy of the current object. The <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the cloned object is `false` even if the <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the source is `true`.","nodes":[{"pos":[0,246],"content":"A modifiable deep copy of the current object. The <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the cloned object is `false` even if the <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the source is `true`.","nodes":[{"content":"A modifiable deep copy of the current object.","pos":[0,45]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property of the cloned object is <ph id=\"ph2\">`false`</ph> even if the <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property of the source is <ph id=\"ph4\">`true`</ph>.","pos":[46,246],"source":" The <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the cloned object is `false` even if the <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the source is `true`."}]}],"pos":[11857,12104],"yaml":true},{"content":"Gets an identity transform.","nodes":[{"pos":[0,27],"content":"Gets an identity transform.","nodes":[{"content":"Gets an identity transform.","pos":[0,27]}]}],"pos":[13066,13094],"yaml":true},{"content":"An identity transform (identity matrix) that has the following configuration:  \n  \n||||  \n|-|-|-|  \n|1|0|0|  \n|0|1|0|  \n|0|0|1|  \n  \n When you apply an identity matrix, it does not change the object. It is like multiplying by `1`.","nodes":[{"pos":[0,77],"content":"An identity transform (identity matrix) that has the following configuration:","nodes":[{"content":"An identity transform (identity matrix) that has the following configuration:","pos":[0,77]}]},{"pos":[101,102],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[103,104],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[105,106],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[111,112],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[113,114],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[115,116],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[121,122],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[123,124],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[125,126],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[134,230],"content":"When you apply an identity matrix, it does not change the object. It is like multiplying by `1`.","nodes":[{"content":"When you apply an identity matrix, it does not change the object.","pos":[0,65]},{"content":"It is like multiplying by <ph id=\"ph1\">`1`</ph>.","pos":[66,96],"source":" It is like multiplying by `1`."}]}],"pos":[13105,13346],"yaml":true,"extradata":"MT"},{"content":"An identity transform.","nodes":[{"pos":[0,22],"content":"An identity transform.","nodes":[{"content":"An identity transform.","pos":[0,22]}]}],"pos":[13506,13529],"yaml":true},{"content":"Gets the inverse of this transform, if it exists.","nodes":[{"pos":[0,49],"content":"Gets the inverse of this transform, if it exists.","nodes":[{"content":"Gets the inverse of this transform, if it exists.","pos":[0,49]}]}],"pos":[14476,14526],"yaml":true},{"content":"The inverse of this transform, if it exists; otherwise, `null`.","nodes":[{"pos":[0,63],"content":"The inverse of this transform, if it exists; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The inverse of this transform, if it exists; otherwise, `null`."}],"pos":[14701,14765],"yaml":true},{"content":"Creates a new <xref href=\"System.Windows.Media.Transform\"></xref> from the specified string representation of a transformation matrix.","nodes":[{"pos":[0,134],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Transform\"&gt;&lt;/xref&gt;</ph> from the specified string representation of a transformation matrix.","source":"Creates a new <xref href=\"System.Windows.Media.Transform\"></xref> from the specified string representation of a transformation matrix."}],"pos":[15766,15901],"yaml":true},{"content":"For more information, see the XAML Attribute Usage section of the <xref:System.Windows.Media.MatrixTransform> class page.","nodes":[{"pos":[0,121],"content":"For more information, see the XAML Attribute Usage section of the <xref:System.Windows.Media.MatrixTransform> class page.","nodes":[{"content":"For more information, see the XAML Attribute Usage section of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.MatrixTransform&gt;</ph> class page.","pos":[0,121],"source":"For more information, see the XAML Attribute Usage section of the <xref:System.Windows.Media.MatrixTransform> class page."}]}],"pos":[15912,16034],"yaml":true,"extradata":"MT"},{"content":"Six comma-delimited <xref href=\"System.Double\"></xref> values that describe the new <xref href=\"System.Windows.Media.Transform\"></xref>. See also Remarks.","nodes":[{"pos":[0,154],"content":"Six comma-delimited <xref href=\"System.Double\"></xref> values that describe the new <xref href=\"System.Windows.Media.Transform\"></xref>. See also Remarks.","nodes":[{"content":"Six comma-delimited <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> values that describe the new <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Transform\"&gt;&lt;/xref&gt;</ph>.","pos":[0,136],"source":"Six comma-delimited <xref href=\"System.Double\"></xref> values that describe the new <xref href=\"System.Windows.Media.Transform\"></xref>."},{"content":"See also Remarks.","pos":[137,154]}]}],"pos":[16203,16358],"yaml":true},{"content":"A new transform that is constructed from the specified string.","nodes":[{"pos":[0,62],"content":"A new transform that is constructed from the specified string.","nodes":[{"content":"A new transform that is constructed from the specified string.","pos":[0,62]}]}],"pos":[16432,16495],"yaml":true},{"content":"Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.","nodes":[{"pos":[0,122],"content":"Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.","nodes":[{"content":"Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.","pos":[0,122]}]}],"pos":[17566,17689],"yaml":true},{"content":"The bounding box to transform.","nodes":[{"pos":[0,30],"content":"The bounding box to transform.","nodes":[{"content":"The bounding box to transform.","pos":[0,30]}]}],"pos":[17874,17905],"yaml":true},{"content":"The smallest axis-aligned bounding box that can contain the transformed <code>rect</code>.","nodes":[{"pos":[0,90],"content":"The smallest axis-aligned bounding box that can contain the transformed <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rect</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The smallest axis-aligned bounding box that can contain the transformed <code>rect</code>."}],"pos":[17968,18059],"yaml":true},{"content":"Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.","nodes":[{"pos":[0,119],"content":"Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.","nodes":[{"content":"Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.","pos":[0,119]}]}],"pos":[19193,19313],"yaml":true},{"content":"Unlike the <xref:System.Windows.Media.GeneralTransform.Transform%2A> method, this method does not throw an exception if the transformation is unsuccessful.","nodes":[{"pos":[0,155],"content":"Unlike the <xref:System.Windows.Media.GeneralTransform.Transform%2A> method, this method does not throw an exception if the transformation is unsuccessful.","nodes":[{"content":"Unlike the <ph id=\"ph1\">&lt;xref:System.Windows.Media.GeneralTransform.Transform%2A&gt;</ph> method, this method does not throw an exception if the transformation is unsuccessful.","pos":[0,155],"source":"Unlike the <xref:System.Windows.Media.GeneralTransform.Transform%2A> method, this method does not throw an exception if the transformation is unsuccessful."}]}],"pos":[19324,19480],"yaml":true,"extradata":"MT"},{"content":"The point to transform.","nodes":[{"pos":[0,23],"content":"The point to transform.","nodes":[{"content":"The point to transform.","pos":[0,23]}]}],"pos":[19688,19712],"yaml":true},{"content":"The result of transforming <code>inPoint</code>.","nodes":[{"pos":[0,48],"content":"The result of transforming <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inPoint</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The result of transforming <code>inPoint</code>."}],"pos":[19781,19830],"yaml":true},{"content":"`true` if <code>inPoint</code> was transformed; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">inPoint</ph><ept id=\"p1\">&lt;/code&gt;</ept> was transformed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>inPoint</code> was transformed; otherwise, `false`."}],"pos":[19888,19958],"yaml":true},{"content":"Gets the current transformation as a <xref href=\"System.Windows.Media.Matrix\"></xref> object.","nodes":[{"pos":[0,93],"content":"Gets the current transformation as a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the current transformation as a <xref href=\"System.Windows.Media.Matrix\"></xref> object."}],"pos":[20897,20991],"yaml":true},{"content":"The current matrix transformation.","nodes":[{"pos":[0,34],"content":"The current matrix transformation.","nodes":[{"content":"The current matrix transformation.","pos":[0,34]}]}],"pos":[21144,21179],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Transform\n  commentId: T:System.Windows.Media.Transform\n  id: Transform\n  children:\n  - System.Windows.Media.Transform.Clone\n  - System.Windows.Media.Transform.CloneCurrentValue\n  - System.Windows.Media.Transform.Identity\n  - System.Windows.Media.Transform.Inverse\n  - System.Windows.Media.Transform.Parse(System.String)\n  - System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)\n  - System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)\n  - System.Windows.Media.Transform.Value\n  langs:\n  - csharp\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Defines functionality that enables transformations in a 2-D plane. Transformations include rotation (<xref href=\"System.Windows.Media.RotateTransform\"></xref>), scale (<xref href=\"System.Windows.Media.ScaleTransform\"></xref>), skew (<xref href=\"System.Windows.Media.SkewTransform\"></xref>), and translation (<xref href=\"System.Windows.Media.TranslateTransform\"></xref>). This class hierarchy differs from the <xref href=\"System.Windows.Media.Matrix\"></xref> structure because it is a class and it supports animation and enumeration semantics.\n  remarks: \"Use the <xref:System.Windows.Media.MatrixTransform> class to create custom transformations that are not provided by the <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform> classes.  \\n  \\n A [!INCLUDE[TLA#tla_2d](~/includes/tlasharptla-2d-md.md)] x-y plane uses a 3x3 matrix for transformations. You can multiply affine transformation matrices to form linear transformations, such as rotation and skew (shear) that are followed by translation.  \\n  \\n An affine transformation matrix has its final column equal to (0, 0, 1); therefore, you only have to specify the members in the first two columns.  \\n  \\n A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> has the following structure:  \\n  \\n||||  \\n|-|-|-|  \\n|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|  \\n|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|  \\n|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|  \\n  \\n The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.  \\n  \\n Methods and properties usually specify the transformation matrix as a vector that has only six members; they are as follows:  \\n  \\n (<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.TransformConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public abstract class Transform : System.Windows.Media.GeneralTransform\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.GeneralTransform\n  derivedClasses:\n  - System.Windows.Media.MatrixTransform\n  - System.Windows.Media.RotateTransform\n  - System.Windows.Media.ScaleTransform\n  - System.Windows.Media.SkewTransform\n  - System.Windows.Media.TransformGroup\n  - System.Windows.Media.TranslateTransform\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.CreateInstanceCore\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.GeneralTransform.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.GeneralTransform.ToString\n  - System.Windows.Media.GeneralTransform.ToString(System.IFormatProvider)\n  - System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Windows.LocalizabilityAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Transform.Clone\n  commentId: M:System.Windows.Media.Transform.Clone\n  id: Clone\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Transform.Clone()\n  fullName: Transform.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable copy of this <xref href=\"System.Windows.Media.Transform\"></xref> by making deep copies of its values.\n  remarks: \"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n When this method copies dependency properties, it copies resource references and data bindings although they might no longer resolve. It does not copy animations or their current values.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Transform Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Transform\n      description: A modifiable deep copy of the current object. The <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the cloned object returns `false` even if the <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the source is `true.`\n  overload: System.Windows.Media.Transform.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Transform.CloneCurrentValue\n  commentId: M:System.Windows.Media.Transform.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: Transform.CloneCurrentValue()\n  fullName: Transform.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Transform\"></xref> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values.\n  remarks: \"Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Transform CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Transform\n      description: A modifiable deep copy of the current object. The <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the cloned object is `false` even if the <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property of the source is `true`.\n  overload: System.Windows.Media.Transform.CloneCurrentValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Transform.Identity\n  commentId: P:System.Windows.Media.Transform.Identity\n  id: Identity\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: Transform.Identity\n  fullName: Transform.Identity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets an identity transform.\n  remarks: \"An identity transform (identity matrix) that has the following configuration:  \\n  \\n||||  \\n|-|-|-|  \\n|1|0|0|  \\n|0|1|0|  \\n|0|0|1|  \\n  \\n When you apply an identity matrix, it does not change the object. It is like multiplying by `1`.\"\n  syntax:\n    content: public static System.Windows.Media.Transform Identity { get; }\n    return:\n      type: System.Windows.Media.Transform\n      description: An identity transform.\n  overload: System.Windows.Media.Transform.Identity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Transform.Inverse\n  commentId: P:System.Windows.Media.Transform.Inverse\n  id: Inverse\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Inverse\n  nameWithType: Transform.Inverse\n  fullName: Transform.Inverse\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the inverse of this transform, if it exists.\n  syntax:\n    content: public override System.Windows.Media.GeneralTransform Inverse { get; }\n    return:\n      type: System.Windows.Media.GeneralTransform\n      description: The inverse of this transform, if it exists; otherwise, `null`.\n  overload: System.Windows.Media.Transform.Inverse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Transform.Parse(System.String)\n  commentId: M:System.Windows.Media.Transform.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Transform.Parse(String)\n  fullName: Transform.Parse(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a new <xref href=\"System.Windows.Media.Transform\"></xref> from the specified string representation of a transformation matrix.\n  remarks: For more information, see the XAML Attribute Usage section of the <xref:System.Windows.Media.MatrixTransform> class page.\n  syntax:\n    content: public static System.Windows.Media.Transform Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: Six comma-delimited <xref href=\"System.Double\"></xref> values that describe the new <xref href=\"System.Windows.Media.Transform\"></xref>. See also Remarks.\n    return:\n      type: System.Windows.Media.Transform\n      description: A new transform that is constructed from the specified string.\n  overload: System.Windows.Media.Transform.Parse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)\n  commentId: M:System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)\n  id: TransformBounds(System.Windows.Rect)\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: TransformBounds(Rect)\n  nameWithType: Transform.TransformBounds(Rect)\n  fullName: Transform.TransformBounds(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.\n  syntax:\n    content: public override System.Windows.Rect TransformBounds (System.Windows.Rect rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: The bounding box to transform.\n    return:\n      type: System.Windows.Rect\n      description: The smallest axis-aligned bounding box that can contain the transformed <code>rect</code>.\n  overload: System.Windows.Media.Transform.TransformBounds*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)\n  commentId: M:System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)\n  id: TryTransform(System.Windows.Point,System.Windows.Point@)\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: TryTransform(Point, Point)\n  nameWithType: Transform.TryTransform(Point, Point)\n  fullName: Transform.TryTransform(Point, Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.\n  remarks: Unlike the <xref:System.Windows.Media.GeneralTransform.Transform%2A> method, this method does not throw an exception if the transformation is unsuccessful.\n  syntax:\n    content: public override bool TryTransform (System.Windows.Point inPoint, out System.Windows.Point result);\n    parameters:\n    - id: inPoint\n      type: System.Windows.Point\n      description: The point to transform.\n    - id: result\n      type: System.Windows.Point\n      description: The result of transforming <code>inPoint</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>inPoint</code> was transformed; otherwise, `false`.'\n  overload: System.Windows.Media.Transform.TryTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Transform.Value\n  commentId: P:System.Windows.Media.Transform.Value\n  id: Value\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Value\n  nameWithType: Transform.Value\n  fullName: Transform.Value\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the current transformation as a <xref href=\"System.Windows.Media.Matrix\"></xref> object.\n  syntax:\n    content: public abstract System.Windows.Media.Matrix Value { get; }\n    return:\n      type: System.Windows.Media.Matrix\n      description: The current matrix transformation.\n  overload: System.Windows.Media.Transform.Value*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.GeneralTransform\n  parent: System.Windows.Media\n  isExternal: false\n  name: GeneralTransform\n  nameWithType: GeneralTransform\n  fullName: System.Windows.Media.GeneralTransform\n- uid: System.Windows.Media.Transform.Clone\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Clone()\n  nameWithType: Transform.Clone()\n  fullName: Transform.Clone()\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.Transform.CloneCurrentValue\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Transform.CloneCurrentValue()\n  fullName: Transform.CloneCurrentValue()\n- uid: System.Windows.Media.Transform.Identity\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Identity\n  nameWithType: Transform.Identity\n  fullName: Transform.Identity\n- uid: System.Windows.Media.Transform.Inverse\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Inverse\n  nameWithType: Transform.Inverse\n  fullName: Transform.Inverse\n- uid: System.Windows.Media.Transform.Parse(System.String)\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Transform.Parse(String)\n  fullName: Transform.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: TransformBounds(Rect)\n  nameWithType: Transform.TransformBounds(Rect)\n  fullName: Transform.TransformBounds(Rect)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: TryTransform(Point, Point)\n  nameWithType: Transform.TryTransform(Point, Point)\n  fullName: Transform.TryTransform(Point, Point)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.Transform.Value\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Value\n  nameWithType: Transform.Value\n  fullName: Transform.Value\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Media.Transform.Clone*\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Clone\n  nameWithType: Transform.Clone\n  fullName: Transform.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n- uid: System.Windows.Media.Transform.CloneCurrentValue*\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: Transform.CloneCurrentValue\n  fullName: Transform.CloneCurrentValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n- uid: System.Windows.Media.Transform.Identity*\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Identity\n  nameWithType: Transform.Identity\n  fullName: Transform.Identity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n- uid: System.Windows.Media.Transform.Inverse*\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Inverse\n  nameWithType: Transform.Inverse\n  fullName: Transform.Inverse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n- uid: System.Windows.Media.Transform.Parse*\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Parse\n  nameWithType: Transform.Parse\n  fullName: Transform.Parse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n- uid: System.Windows.Media.Transform.TransformBounds*\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: TransformBounds\n  nameWithType: Transform.TransformBounds\n  fullName: Transform.TransformBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n- uid: System.Windows.Media.Transform.TryTransform*\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: TryTransform\n  nameWithType: Transform.TryTransform\n  fullName: Transform.TryTransform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n- uid: System.Windows.Media.Transform.Value*\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Value\n  nameWithType: Transform.Value\n  fullName: Transform.Value\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/Transform.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Windows.Media.GeneralTransform.ToString\n  parent: System.Windows.Media.GeneralTransform\n  isExternal: false\n  name: ToString()\n  nameWithType: GeneralTransform.ToString()\n  fullName: GeneralTransform.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.CreateInstanceCore\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: Freezable.CreateInstanceCore()\n  fullName: Freezable.CreateInstanceCore()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: Animatable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.Media.GeneralTransform.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.GeneralTransform\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: GeneralTransform.ToString(IFormatProvider)\n  fullName: GeneralTransform.ToString(IFormatProvider)\n- uid: System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)\n  parent: System.Windows.Media.GeneralTransform\n  isExternal: false\n  name: Transform(Point)\n  nameWithType: GeneralTransform.Transform(Point)\n  fullName: GeneralTransform.Transform(Point)\n- uid: System.Windows.Media.GeneralTransform.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.GeneralTransform\n  isExternal: false\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: GeneralTransform.IFormattable.ToString(String, IFormatProvider)\n  fullName: GeneralTransform.IFormattable.ToString(String, IFormatProvider)\n"}