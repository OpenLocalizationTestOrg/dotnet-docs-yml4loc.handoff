### YamlMime:ManagedReference
items:
- uid: System.Windows.WeakEventManager.ListenerList
  commentId: T:System.Windows.WeakEventManager.ListenerList
  id: WeakEventManager.ListenerList
  children:
  - System.Windows.WeakEventManager.ListenerList.#ctor
  - System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)
  - System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)
  - System.Windows.WeakEventManager.ListenerList.BeginUse
  - System.Windows.WeakEventManager.ListenerList.Clone
  - System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.ListenerList.Count
  - System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)
  - System.Windows.WeakEventManager.ListenerList.Empty
  - System.Windows.WeakEventManager.ListenerList.EndUse
  - System.Windows.WeakEventManager.ListenerList.IsEmpty
  - System.Windows.WeakEventManager.ListenerList.Item(System.Int32)
  - System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  - System.Windows.WeakEventManager.ListenerList.Purge
  - System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)
  langs:
  - csharp
  name: WeakEventManager.ListenerList
  nameWithType: WeakEventManager.ListenerList
  fullName: System.Windows.WeakEventManager.ListenerList
  type: Class
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Provides a built-in collection list for storing listeners for a <xref href="System.Windows.WeakEventManager"></xref>.
  remarks: "Although this list contains members that resemble those defined by <xref:System.Collections.IList> and <xref:System.Collections.ICollection>, and provide similar functionality, this class implements neither of those interfaces.  \n  \n Most <xref:System.Windows.WeakEventManager> derived classes do not need to use any members on <xref:System.Windows.WeakEventManager.ListenerList>. The <xref:System.Windows.WeakEventManager> methods <xref:System.Windows.WeakEventManager.ProtectedAddListener%2A> and <xref:System.Windows.WeakEventManager.ProtectedRemoveListener%2A>use a default <xref:System.Windows.WeakEventManager.ListenerList> internally, one list for each `source`.  \n  \n You only need to call <xref:System.Windows.WeakEventManager.ListenerList> methods if your <xref:System.Windows.WeakEventManager> class maintains multiple lists for the same event-source combination, with each list created to account for different conditions of the event. In this case, you would not use <xref:System.Windows.WeakEventManager.ProtectedAddListener%2A> and <xref:System.Windows.WeakEventManager.ProtectedRemoveListener%2A> and would instead implement `AddListener` or `RemoveListener` to act upon listeners in just one of the internal listener lists, typically based on a parameter that you add to `AddListener` or `RemoveListener`. Also, the handler implementation that receives the raw event cannot simply call <xref:System.Windows.WeakEventManager.DeliverEvent%2A>; you must instead keep track of the specifics of the event and deliver the event only to the appropriate list using <xref:System.Windows.WeakEventManager.DeliverEventToList%2A>.  \n  \n The various methods of <xref:System.Windows.WeakEventManager.ListenerList> are provided so that you can work with your internal lists and so that you can prevent modification of the list during actual delivery of the event.  \n  \n An example class that used this implementation technique is <xref:System.ComponentModel.PropertyChangedEventManager>, which maintains separate listener lists for `PropertyChanged` based on which property changed.  \n  \n<a name=\"xamlTextUsage_ListenerList\"></a>   \n## XAML Text Usage  \n You cannot use this class in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: protected class WeakEventManager.ListenerList
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.#ctor
  commentId: M:System.Windows.WeakEventManager.ListenerList.#ctor
  id: '#ctor'
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: WeakEventManager.ListenerList()
  nameWithType: WeakEventManager.ListenerList.WeakEventManager.ListenerList()
  fullName: WeakEventManager.ListenerList.WeakEventManager.ListenerList()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Initializes a new instance of the <xref href="System.Windows.WeakEventManager.ListenerList"></xref> class.
  syntax:
    content: public ListenerList ();
    parameters: []
  overload: System.Windows.WeakEventManager.ListenerList.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)
  commentId: M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: WeakEventManager.ListenerList(Int32)
  nameWithType: WeakEventManager.ListenerList.WeakEventManager.ListenerList(Int32)
  fullName: WeakEventManager.ListenerList.WeakEventManager.ListenerList(Int32)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Initializes a new instance of the <xref href="System.Windows.WeakEventManager.ListenerList"></xref> class with the specified initial capacity.
  syntax:
    content: public ListenerList (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: The number of items that should be allocated in the initial list.
  overload: System.Windows.WeakEventManager.ListenerList.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)
  commentId: M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)
  id: Add(System.Windows.IWeakEventListener)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Add(IWeakEventListener)
  nameWithType: WeakEventManager.ListenerList.Add(IWeakEventListener)
  fullName: WeakEventManager.ListenerList.Add(IWeakEventListener)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Adds a <xref href="System.Windows.IWeakEventListener"></xref> object to the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  remarks: "The object provided as listener should be a <xref:System.Windows.DependencyObject> that implements the <xref:System.Windows.IWeakEventListener> interface and therefore has a working <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> implementation.  \n  \n You should always call <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> before changing the list contents. Otherwise, the list may be in process of delivering events and therefore the original is locked. Calling <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> changes the input `list` to be a clone so that your <xref:System.Windows.WeakEventManager.ListenerList.Add%2A> call can still work on the clone. If <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> returns `true`, you might need to update any private references to the list that you maintain in other areas of your code."
  syntax:
    content: public void Add (System.Windows.IWeakEventListener listener);
    parameters:
    - id: listener
      type: System.Windows.IWeakEventListener
      description: The listener element to add to the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  overload: System.Windows.WeakEventManager.ListenerList.Add*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)
  commentId: M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)
  id: AddHandler(System.Delegate)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: AddHandler(Delegate)
  nameWithType: WeakEventManager.ListenerList.AddHandler(Delegate)
  fullName: WeakEventManager.ListenerList.AddHandler(Delegate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Adds an event handler to the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  syntax:
    content: public void AddHandler (Delegate handler);
    parameters:
    - id: handler
      type: System.Delegate
      description: The event handler to add to the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  overload: System.Windows.WeakEventManager.ListenerList.AddHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.BeginUse
  commentId: M:System.Windows.WeakEventManager.ListenerList.BeginUse
  id: BeginUse
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: BeginUse()
  nameWithType: WeakEventManager.ListenerList.BeginUse()
  fullName: WeakEventManager.ListenerList.BeginUse()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.
  remarks: A <xref:System.Windows.WeakEventManager> implementation should call <xref:System.Windows.WeakEventManager.ListenerList.BeginUse%2A> before iterating through the list to deliver an event to the listeners, and should call <xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A> when it is done. This prevents another caller from modifying the list while the iteration for purposes of event delivery is in progress. If the list is modified during this time, then the list is cloned. If the list is cloned, then <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> returns `true`, which means that you have missed a recent listener change in the last delivery.
  syntax:
    content: public bool BeginUse ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the list was already declared to be in use; otherwise, `false`.'
  overload: System.Windows.WeakEventManager.ListenerList.BeginUse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.Clone
  commentId: M:System.Windows.WeakEventManager.ListenerList.Clone
  id: Clone
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Clone()
  nameWithType: WeakEventManager.ListenerList.Clone()
  fullName: WeakEventManager.ListenerList.Clone()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Creates a modifiable clone of this <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  syntax:
    content: public virtual System.Windows.WeakEventManager.ListenerList Clone ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager+ListenerList
      description: A modifiable clone of the current object.
  overload: System.Windows.WeakEventManager.ListenerList.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)
  commentId: M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)
  id: CopyTo(System.Windows.WeakEventManager.ListenerList)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: CopyTo(WeakEventManager+ListenerList)
  nameWithType: WeakEventManager.ListenerList.CopyTo(WeakEventManager+ListenerList)
  fullName: WeakEventManager.ListenerList.CopyTo(WeakEventManager+ListenerList)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Copies the current <xref href="System.Windows.WeakEventManager.ListenerList"></xref> to the specified <xref href="System.Windows.WeakEventManager.ListenerList"></xref>
  syntax:
    content: protected void CopyTo (System.Windows.WeakEventManager.ListenerList newList);
    parameters:
    - id: newList
      type: System.Windows.WeakEventManager+ListenerList
      description: The object to copy to.
  overload: System.Windows.WeakEventManager.ListenerList.CopyTo*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.Count
  commentId: P:System.Windows.WeakEventManager.ListenerList.Count
  id: Count
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Count
  nameWithType: WeakEventManager.ListenerList.Count
  fullName: WeakEventManager.ListenerList.Count
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Gets the number of items contained in the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: The number of items contained in the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  overload: System.Windows.WeakEventManager.ListenerList.Count*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)
  commentId: M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)
  id: DeliverEvent(System.Object,System.EventArgs,System.Type)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: DeliverEvent(Object, EventArgs, Type)
  nameWithType: WeakEventManager.ListenerList.DeliverEvent(Object, EventArgs, Type)
  fullName: WeakEventManager.ListenerList.DeliverEvent(Object, EventArgs, Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Delivers the event being managed to each listener in the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  syntax:
    content: public virtual bool DeliverEvent (object sender, EventArgs args, Type managerType);
    parameters:
    - id: sender
      type: System.Object
      description: The object that raised the event.
    - id: args
      type: System.EventArgs
      description: An object that contains the event data.
    - id: managerType
      type: System.Type
      description: The type of the <xref href="System.Windows.WeakEventManager"></xref> that calls this method.
    return:
      type: System.Boolean
      description: '`true` if any of the listeners in the <xref href="System.Windows.WeakEventManager.ListenerList"></xref> refer to an object that has been garbage collected; otherwise, `false`.'
  overload: System.Windows.WeakEventManager.ListenerList.DeliverEvent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.Empty
  commentId: P:System.Windows.WeakEventManager.ListenerList.Empty
  id: Empty
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Empty
  nameWithType: WeakEventManager.ListenerList.Empty
  fullName: WeakEventManager.ListenerList.Empty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Gets a value that represents an empty list for purposes of comparisons.
  syntax:
    content: public static System.Windows.WeakEventManager.ListenerList Empty { get; }
    return:
      type: System.Windows.WeakEventManager+ListenerList
      description: The empty list representation.
  overload: System.Windows.WeakEventManager.ListenerList.Empty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.WeakEventManager.ListenerList.EndUse
  commentId: M:System.Windows.WeakEventManager.ListenerList.EndUse
  id: EndUse
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: EndUse()
  nameWithType: WeakEventManager.ListenerList.EndUse()
  fullName: WeakEventManager.ListenerList.EndUse()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Unlocks the locked state initiated by <xref href="System.Windows.WeakEventManager.ListenerList.BeginUse"></xref>.
  syntax:
    content: public void EndUse ();
    parameters: []
  overload: System.Windows.WeakEventManager.ListenerList.EndUse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.IsEmpty
  commentId: P:System.Windows.WeakEventManager.ListenerList.IsEmpty
  id: IsEmpty
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: IsEmpty
  nameWithType: WeakEventManager.ListenerList.IsEmpty
  fullName: WeakEventManager.ListenerList.IsEmpty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Gets a value that declares whether this <xref href="System.Windows.WeakEventManager.ListenerList"></xref> is empty.
  remarks: This method is equivalent to checking whether the <xref:System.Windows.WeakEventManager.ListenerList.Count%2A> is zero, and does not check whether any of the references in the list are now stale. If you want to assure that all references are still valid, call <xref:System.Windows.WeakEventManager.ListenerList.Purge%2A> just prior to checking the empty status of the list.
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: '`true` if the list is empty; otherwise, `false`.'
  overload: System.Windows.WeakEventManager.ListenerList.IsEmpty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.Item(System.Int32)
  commentId: P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: WeakEventManager.ListenerList.Item(Int32)
  fullName: WeakEventManager.ListenerList.Item(Int32)
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Gets or sets a specific listener item in the <xref href="System.Windows.WeakEventManager.ListenerList"></xref> .
  syntax:
    content: public System.Windows.IWeakEventListener this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the listener in the list.
    return:
      type: System.Windows.IWeakEventListener
      description: The item at that index, or a null reference if no item was at that index.
  overload: System.Windows.WeakEventManager.ListenerList.Item*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  commentId: M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  id: PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: PrepareForWriting(WeakEventManager+ListenerList)
  nameWithType: WeakEventManager.ListenerList.PrepareForWriting(WeakEventManager+ListenerList)
  fullName: WeakEventManager.ListenerList.PrepareForWriting(WeakEventManager+ListenerList)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.
  remarks: "If the given list is in use (which means an event is currently being delivered), calling this method will replace the input `list` with a clone.  The existing users will finish delivering the event to the original list, without interference from changes to the new list.  \n  \n If the method returns `true`, callers may want to insert the new list in their own data structures, since this indicates the possibility that the provided list is no longer current.  \n  \n This method calls <xref:System.Windows.WeakEventManager.ListenerList.BeginUse%2A> internally and then immediately calls <xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A>. Therefore calling <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> does not itself introduce a lock on the list. Even the clone copy is done as a secondary operation after calling <xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A>."
  syntax:
    content: public static bool PrepareForWriting (ref System.Windows.WeakEventManager.ListenerList list);
    parameters:
    - id: list
      type: System.Windows.WeakEventManager+ListenerList
      description: The list to check for use state and potentially copy.
    return:
      type: System.Boolean
      description: '`true` if the provided list was in use at the time of call and therefore the <code>list</code> parameter reference was reset to be a copy. `false` if the provided list was not in use, in which case the <code>list</code> parameter reference remains unaltered.'
  overload: System.Windows.WeakEventManager.ListenerList.PrepareForWriting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.WeakEventManager.ListenerList.Purge
  commentId: M:System.Windows.WeakEventManager.ListenerList.Purge
  id: Purge
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Purge()
  nameWithType: WeakEventManager.ListenerList.Purge()
  fullName: WeakEventManager.ListenerList.Purge()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Removes all entries from the list where the underlying reference target is a null reference.
  syntax:
    content: public bool Purge ();
    parameters: []
    return:
      type: System.Boolean
      description: Returns `true` if any entries were purged; otherwise, `false`.
  overload: System.Windows.WeakEventManager.ListenerList.Purge*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)
  commentId: M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)
  id: Remove(System.Windows.IWeakEventListener)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Remove(IWeakEventListener)
  nameWithType: WeakEventManager.ListenerList.Remove(IWeakEventListener)
  fullName: WeakEventManager.ListenerList.Remove(IWeakEventListener)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Removes the first occurrence of a listener item from the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  remarks: You should always call <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> before changing the list contents. Otherwise, the list may be in process of delivering events and therefore the original is locked. Calling <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> changes the input `list` to be a clone so that your <xref:System.Windows.WeakEventManager.ListenerList.Remove%2A> call can still work on the clone. If <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> returns `true`, you might need to update any private references to the list that you maintain in other areas of your code.
  syntax:
    content: public void Remove (System.Windows.IWeakEventListener listener);
    parameters:
    - id: listener
      type: System.Windows.IWeakEventListener
      description: The item to remove.
  overload: System.Windows.WeakEventManager.ListenerList.Remove*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)
  commentId: M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)
  id: RemoveHandler(System.Delegate)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: RemoveHandler(Delegate)
  nameWithType: WeakEventManager.ListenerList.RemoveHandler(Delegate)
  fullName: WeakEventManager.ListenerList.RemoveHandler(Delegate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: Removes an event handler from the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  syntax:
    content: public void RemoveHandler (Delegate handler);
    parameters:
    - id: handler
      type: System.Delegate
      description: The event handler to remove from the <xref href="System.Windows.WeakEventManager.ListenerList"></xref>.
  overload: System.Windows.WeakEventManager.ListenerList.RemoveHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.WeakEventManager.ListenerList.#ctor
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: WeakEventManager.ListenerList()
  nameWithType: WeakEventManager.ListenerList.WeakEventManager.ListenerList()
  fullName: WeakEventManager.ListenerList.WeakEventManager.ListenerList()
- uid: System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: WeakEventManager.ListenerList(Int32)
  nameWithType: WeakEventManager.ListenerList.WeakEventManager.ListenerList(Int32)
  fullName: WeakEventManager.ListenerList.WeakEventManager.ListenerList(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Add(IWeakEventListener)
  nameWithType: WeakEventManager.ListenerList.Add(IWeakEventListener)
  fullName: WeakEventManager.ListenerList.Add(IWeakEventListener)
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: false
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: AddHandler(Delegate)
  nameWithType: WeakEventManager.ListenerList.AddHandler(Delegate)
  fullName: WeakEventManager.ListenerList.AddHandler(Delegate)
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.WeakEventManager.ListenerList.BeginUse
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: BeginUse()
  nameWithType: WeakEventManager.ListenerList.BeginUse()
  fullName: WeakEventManager.ListenerList.BeginUse()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.WeakEventManager.ListenerList.Clone
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Clone()
  nameWithType: WeakEventManager.ListenerList.Clone()
  fullName: WeakEventManager.ListenerList.Clone()
- uid: System.Windows.WeakEventManager
  parent: System.Windows
  isExternal: false
  name: WeakEventManager
  nameWithType: WeakEventManager
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: CopyTo(WeakEventManager+ListenerList)
  nameWithType: WeakEventManager.ListenerList.CopyTo(WeakEventManager+ListenerList)
  fullName: WeakEventManager.ListenerList.CopyTo(WeakEventManager+ListenerList)
- uid: System.Windows.WeakEventManager.ListenerList.Count
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Count
  nameWithType: WeakEventManager.ListenerList.Count
  fullName: WeakEventManager.ListenerList.Count
- uid: System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: DeliverEvent(Object, EventArgs, Type)
  nameWithType: WeakEventManager.ListenerList.DeliverEvent(Object, EventArgs, Type)
  fullName: WeakEventManager.ListenerList.DeliverEvent(Object, EventArgs, Type)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.WeakEventManager.ListenerList.Empty
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Empty
  nameWithType: WeakEventManager.ListenerList.Empty
  fullName: WeakEventManager.ListenerList.Empty
- uid: System.Windows.WeakEventManager.ListenerList.EndUse
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: EndUse()
  nameWithType: WeakEventManager.ListenerList.EndUse()
  fullName: WeakEventManager.ListenerList.EndUse()
- uid: System.Windows.WeakEventManager.ListenerList.IsEmpty
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: IsEmpty
  nameWithType: WeakEventManager.ListenerList.IsEmpty
  fullName: WeakEventManager.ListenerList.IsEmpty
- uid: System.Windows.WeakEventManager.ListenerList.Item(System.Int32)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Item(Int32)
  nameWithType: WeakEventManager.ListenerList.Item(Int32)
  fullName: WeakEventManager.ListenerList.Item(Int32)
- uid: System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: PrepareForWriting(WeakEventManager+ListenerList)
  nameWithType: WeakEventManager.ListenerList.PrepareForWriting(WeakEventManager+ListenerList)
  fullName: WeakEventManager.ListenerList.PrepareForWriting(WeakEventManager+ListenerList)
- uid: System.Windows.WeakEventManager.ListenerList.Purge
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Purge()
  nameWithType: WeakEventManager.ListenerList.Purge()
  fullName: WeakEventManager.ListenerList.Purge()
- uid: System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Remove(IWeakEventListener)
  nameWithType: WeakEventManager.ListenerList.Remove(IWeakEventListener)
  fullName: WeakEventManager.ListenerList.Remove(IWeakEventListener)
- uid: System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: RemoveHandler(Delegate)
  nameWithType: WeakEventManager.ListenerList.RemoveHandler(Delegate)
  fullName: WeakEventManager.ListenerList.RemoveHandler(Delegate)
- uid: System.Windows.WeakEventManager.ListenerList.#ctor*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: WeakEventManager.ListenerList
  nameWithType: WeakEventManager.ListenerList.WeakEventManager.ListenerList
  fullName: WeakEventManager.ListenerList.WeakEventManager.ListenerList
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.Add*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Add
  nameWithType: WeakEventManager.ListenerList.Add
  fullName: WeakEventManager.ListenerList.Add
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.AddHandler*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: AddHandler
  nameWithType: WeakEventManager.ListenerList.AddHandler
  fullName: WeakEventManager.ListenerList.AddHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.BeginUse*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: BeginUse
  nameWithType: WeakEventManager.ListenerList.BeginUse
  fullName: WeakEventManager.ListenerList.BeginUse
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.Clone*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Clone
  nameWithType: WeakEventManager.ListenerList.Clone
  fullName: WeakEventManager.ListenerList.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.CopyTo*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: CopyTo
  nameWithType: WeakEventManager.ListenerList.CopyTo
  fullName: WeakEventManager.ListenerList.CopyTo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.Count*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Count
  nameWithType: WeakEventManager.ListenerList.Count
  fullName: WeakEventManager.ListenerList.Count
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.DeliverEvent*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: DeliverEvent
  nameWithType: WeakEventManager.ListenerList.DeliverEvent
  fullName: WeakEventManager.ListenerList.DeliverEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.Empty*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Empty
  nameWithType: WeakEventManager.ListenerList.Empty
  fullName: WeakEventManager.ListenerList.Empty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.EndUse*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: EndUse
  nameWithType: WeakEventManager.ListenerList.EndUse
  fullName: WeakEventManager.ListenerList.EndUse
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.IsEmpty*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: IsEmpty
  nameWithType: WeakEventManager.ListenerList.IsEmpty
  fullName: WeakEventManager.ListenerList.IsEmpty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.Item*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Item
  nameWithType: WeakEventManager.ListenerList.Item
  fullName: WeakEventManager.ListenerList.Item
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.PrepareForWriting*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: PrepareForWriting
  nameWithType: WeakEventManager.ListenerList.PrepareForWriting
  fullName: WeakEventManager.ListenerList.PrepareForWriting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.Purge*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Purge
  nameWithType: WeakEventManager.ListenerList.Purge
  fullName: WeakEventManager.ListenerList.Purge
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.Remove*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Remove
  nameWithType: WeakEventManager.ListenerList.Remove
  fullName: WeakEventManager.ListenerList.Remove
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Windows.WeakEventManager.ListenerList.RemoveHandler*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: RemoveHandler
  nameWithType: WeakEventManager.ListenerList.RemoveHandler
  fullName: WeakEventManager.ListenerList.RemoveHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/WeakEventManager+ListenerList.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
