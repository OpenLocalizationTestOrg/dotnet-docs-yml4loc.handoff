{"nodes":[{"content":"Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.","nodes":[{"pos":[0,128],"content":"Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.","nodes":[{"content":"Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.","pos":[0,128]}]}],"pos":[4234,4363],"yaml":true},{"content":"The most common type of converter is one that converts to and from a text representation. The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>. Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.  \n  \n> [!NOTE]\n>  For general type system purposes, do not access a type converter directly. Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>. For more information, see the code examples provided.  \n  \n **Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>. For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.  \n  \n Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation. Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation. For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).","nodes":[{"pos":[0,327],"content":"The most common type of converter is one that converts to and from a text representation. The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>. Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.","nodes":[{"content":"The most common type of converter is one that converts to and from a text representation. The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>. Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.","pos":[0,327],"nodes":[{"content":"The most common type of converter is one that converts to and from a text representation.","pos":[0,89]},{"content":"The type converter for a class is bound to the class with a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.","pos":[90,202],"source":" The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>."},{"content":"Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.","pos":[203,327]}]}]},{"pos":[335,570],"content":"[!NOTE]\n For general type system purposes, do not access a type converter directly. Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>. For more information, see the code examples provided.","leadings":["","> "],"nodes":[{"content":" For general type system purposes, do not access a type converter directly. Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>. For more information, see the code examples provided.","pos":[8,233],"nodes":[{"content":"For general type system purposes, do not access a type converter directly.","pos":[1,75]},{"content":"Instead, access the appropriate converter by using <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[76,171],"source":" Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>."},{"content":"For more information, see the code examples provided.","pos":[172,225]}]}]},{"pos":[577,1071],"content":"**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>. For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> For XAML purposes, a XAML processor searches for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> directly, instead of going through <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[0,193],"source":"**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>."},{"content":"For cases where you do want a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> or other reflection and type system support.","pos":[194,494],"source":" For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support."}]},{"pos":[1078,2174],"content":"Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation. Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation. For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).","nodes":[{"content":"Classes derived from <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.","pos":[0,265],"source":"Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation."},{"content":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class that supports their own unique <ph id=\"ph2\">`ConvertFrom`</ph> behavior from a string.","pos":[266,484],"source":" Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string."},{"content":"This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.","pos":[485,725]},{"content":"Custom types or members of custom types are indicated by applying <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the definitions, with the attribute referencing the custom <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> implementation.","pos":[726,964],"source":" Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Type Converters for XAML Overview<ept id=\"p1\">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.","pos":[965,1096],"source":" For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)."}]}],"pos":[4374,6558],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter\"></xref> class."}],"pos":[18606,18704],"yaml":true},{"content":"Returns whether this converter can convert an object of the given type to the type of this converter.","nodes":[{"pos":[0,101],"content":"Returns whether this converter can convert an object of the given type to the type of this converter.","nodes":[{"content":"Returns whether this converter can convert an object of the given type to the type of this converter.","pos":[0,101]}]}],"pos":[20157,20259],"yaml":true},{"content":"As implemented in this class, this method always returns `false`. It never returns `true`.","nodes":[{"pos":[0,90],"content":"As implemented in this class, this method always returns `false`. It never returns `true`.","nodes":[{"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`false`</ph>.","pos":[0,65],"source":"As implemented in this class, this method always returns `false`."},{"content":"It never returns <ph id=\"ph1\">`true`</ph>.","pos":[66,90],"source":" It never returns `true`."}]}],"pos":[20270,20361],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert from.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type you want to convert from.","source":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert from."}],"pos":[20510,20596],"yaml":true},{"content":"`true` if this converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if this converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter can perform the conversion; otherwise, `false`."}],"pos":[20654,20729],"yaml":true},{"content":"Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.","nodes":[{"pos":[0,130],"content":"Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.","nodes":[{"content":"Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.","pos":[0,130]}]}],"pos":[22331,22462],"yaml":true},{"content":"As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.","nodes":[{"pos":[0,154],"content":"As implemented in this class, this method returns <ph id=\"ph1\">`false`</ph>, unless <ph id=\"ph2\">`sourceType`</ph> is an <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.Serialization.InstanceDescriptor&gt;</ph>.","source":"As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>."}],"pos":[22473,22628],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[22869,22970],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert from.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type you want to convert from.","source":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert from."}],"pos":[23034,23120],"yaml":true},{"content":"`true` if this converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if this converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter can perform the conversion; otherwise, `false`."}],"pos":[23178,23253],"yaml":true},{"content":"Returns whether this converter can convert the object to the specified type.","nodes":[{"pos":[0,76],"content":"Returns whether this converter can convert the object to the specified type.","nodes":[{"content":"Returns whether this converter can convert the object to the specified type.","pos":[0,76]}]}],"pos":[24636,24713],"yaml":true},{"content":"If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.","nodes":[{"pos":[0,145],"content":"If <ph id=\"ph1\">`destinationType`</ph> is a string, the default implementation of <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertTo%2A&gt;</ph> always returns <ph id=\"ph3\">`true`</ph>.","source":"If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`."}],"pos":[24724,24870],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert to.","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type you want to convert to.","source":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert to."}],"pos":[25027,25111],"yaml":true},{"content":"`true` if this converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if this converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter can perform the conversion; otherwise, `false`."}],"pos":[25169,25244],"yaml":true},{"content":"Returns whether this converter can convert the object to the specified type, using the specified context.","nodes":[{"pos":[0,105],"content":"Returns whether this converter can convert the object to the specified type, using the specified context.","nodes":[{"content":"Returns whether this converter can convert the object to the specified type, using the specified context.","pos":[0,105]}]}],"pos":[26832,26938],"yaml":true},{"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.","nodes":[{"pos":[0,229],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]},{"pos":[236,381],"content":"If <ph id=\"ph1\">`destinationType`</ph> is a string, the default implementation of <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertTo%2A&gt;</ph> always returns <ph id=\"ph3\">`true`</ph>.","source":"If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`."}],"pos":[26949,27335],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[27579,27680],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert to.","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type you want to convert to.","source":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert to."}],"pos":[27749,27833],"yaml":true},{"content":"`true` if this converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if this converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter can perform the conversion; otherwise, `false`."}],"pos":[27891,27966],"yaml":true},{"content":"Converts the given value to the type of this converter.","nodes":[{"pos":[0,55],"content":"Converts the given value to the type of this converter.","nodes":[{"content":"Converts the given value to the type of this converter.","pos":[0,55]}]}],"pos":[29353,29409],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[29551,29602],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted value.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"An <xref href=\"System.Object\"></xref> that represents the converted value."}],"pos":[29659,29734],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[29911,29947],"yaml":true},{"content":"Converts the given object to the type of this converter, using the specified context and culture information.","nodes":[{"pos":[0,109],"content":"Converts the given object to the type of this converter, using the specified context and culture information.","nodes":[{"content":"Converts the given object to the type of this converter, using the specified context and culture information.","pos":[0,109]}]}],"pos":[31600,31710],"yaml":true},{"content":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.  \n  \n For XAML purposes, you do not typically provide branching implementations based on `culture`. This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion. For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).","nodes":[{"pos":[0,725],"content":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.","nodes":[{"content":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.","pos":[0,725],"nodes":[{"content":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class that supports <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> behavior from a string.","pos":[0,245],"source":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string."},{"content":"This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.","pos":[246,486]},{"content":"Custom types or members of custom types are indicated by applying <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the definitions, with the attribute referencing the custom <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> implementation.","pos":[487,725],"source":" Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation."}]}]},{"pos":[732,1123],"content":"For XAML purposes, you do not typically provide branching implementations based on `culture`. This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion. For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).","nodes":[{"content":"For XAML purposes, you do not typically provide branching implementations based on <ph id=\"ph1\">`culture`</ph>.","pos":[0,93],"source":"For XAML purposes, you do not typically provide branching implementations based on `culture`."},{"content":"This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.","pos":[94,259]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Type Converters for XAML Overview<ept id=\"p1\">](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)</ept>.","pos":[260,391],"source":" For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)."}]}],"pos":[31721,32849],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[33128,33229],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use as the current culture.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture."}],"pos":[33311,33400],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[33461,33512],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted value.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"An <xref href=\"System.Object\"></xref> that represents the converted value."}],"pos":[33569,33644],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[33821,33857],"yaml":true},{"content":"Converts the given string to the type of this converter, using the invariant culture.","nodes":[{"pos":[0,85],"content":"Converts the given string to the type of this converter, using the invariant culture.","nodes":[{"content":"Converts the given string to the type of this converter, using the invariant culture.","pos":[0,85]}]}],"pos":[35255,35341],"yaml":true},{"content":"The default implementation always returns `null`.","nodes":[{"pos":[0,49],"content":"The default implementation always returns <ph id=\"ph1\">`null`</ph>.","source":"The default implementation always returns `null`."}],"pos":[35352,35402],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.String\"></xref> to convert."}],"pos":[35557,35608],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted text.","nodes":[{"pos":[0,73],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted text.","source":"An <xref href=\"System.Object\"></xref> that represents the converted text."}],"pos":[35665,35739],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[35931,35967],"yaml":true},{"content":"Converts the given string to the type of this converter, using the invariant culture and the specified context.","nodes":[{"pos":[0,111],"content":"Converts the given string to the type of this converter, using the invariant culture and the specified context.","nodes":[{"content":"Converts the given string to the type of this converter, using the invariant culture and the specified context.","pos":[0,111]}]}],"pos":[37572,37684],"yaml":true},{"content":"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,135],"content":"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.","nodes":[{"content":"An exception is raised if the string cannot be converted into the appropriate object.","pos":[0,85]},{"content":"The default implementation always returns <ph id=\"ph1\">`null`</ph>.","pos":[86,135],"source":" The default implementation always returns `null`."}]},{"pos":[142,371],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]}],"pos":[37695,38071],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[38314,38415],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.String\"></xref> to convert."}],"pos":[38475,38526],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted text.","nodes":[{"pos":[0,73],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted text.","source":"An <xref href=\"System.Object\"></xref> that represents the converted text."}],"pos":[38583,38657],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[38849,38885],"yaml":true},{"content":"Converts the given text to an object, using the specified context and culture information.","nodes":[{"pos":[0,90],"content":"Converts the given text to an object, using the specified context and culture information.","nodes":[{"content":"Converts the given text to an object, using the specified context and culture information.","pos":[0,90]}]}],"pos":[40574,40665],"yaml":true},{"content":"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,135],"content":"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.","nodes":[{"content":"An exception is raised if the string cannot be converted into the appropriate object.","pos":[0,85]},{"content":"The default implementation always returns <ph id=\"ph1\">`null`</ph>.","pos":[86,135],"source":" The default implementation always returns `null`."}]},{"pos":[142,371],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]}],"pos":[40676,41052],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[41328,41429],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.","nodes":[{"pos":[0,109],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph>.","pos":[0,56],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref>."},{"content":"If <ph id=\"ph1\">`null`</ph> is passed, the current culture is assumed.","pos":[57,109],"source":" If `null` is passed, the current culture is assumed."}]}],"pos":[41511,41621],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.String\"></xref> to convert."}],"pos":[41681,41732],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted text.","nodes":[{"pos":[0,73],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted text.","source":"An <xref href=\"System.Object\"></xref> that represents the converted text."}],"pos":[41789,41863],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[42046,42082],"yaml":true},{"content":"Converts the specified text to an object.","nodes":[{"pos":[0,41],"content":"Converts the specified text to an object.","nodes":[{"content":"Converts the specified text to an object.","pos":[0,41]}]}],"pos":[43426,43468],"yaml":true},{"content":"The default implementation always returns `null`.","nodes":[{"pos":[0,49],"content":"The default implementation always returns <ph id=\"ph1\">`null`</ph>.","source":"The default implementation always returns `null`."}],"pos":[43479,43529],"yaml":true,"extradata":"MT"},{"content":"The text representation of the object to convert.","nodes":[{"pos":[0,49],"content":"The text representation of the object to convert.","nodes":[{"content":"The text representation of the object to convert.","pos":[0,49]}]}],"pos":[43781,43831],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted text.","nodes":[{"pos":[0,73],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted text.","source":"An <xref href=\"System.Object\"></xref> that represents the converted text."}],"pos":[43888,43962],"yaml":true},{"content":"The string cannot be converted into the appropriate object.","nodes":[{"pos":[0,59],"content":"The string cannot be converted into the appropriate object.","nodes":[{"content":"The string cannot be converted into the appropriate object.","pos":[0,59]}]}],"pos":[44145,44205],"yaml":true},{"content":"Converts the given text to an object, using the specified context.","nodes":[{"pos":[0,66],"content":"Converts the given text to an object, using the specified context.","nodes":[{"content":"Converts the given text to an object, using the specified context.","pos":[0,66]}]}],"pos":[45756,45823],"yaml":true},{"content":"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,135],"content":"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.","nodes":[{"content":"An exception is raised if the string cannot be converted into the appropriate object.","pos":[0,85]},{"content":"The default implementation always returns <ph id=\"ph1\">`null`</ph>.","pos":[86,135],"source":" The default implementation always returns `null`."}]},{"pos":[142,371],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]}],"pos":[45834,46210],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[46444,46545],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.String\"></xref> to convert."}],"pos":[46605,46656],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted text.","nodes":[{"pos":[0,73],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted text.","source":"An <xref href=\"System.Object\"></xref> that represents the converted text."}],"pos":[46713,46787],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[46970,47006],"yaml":true},{"content":"Converts the given value object to the specified type, using the arguments.","nodes":[{"pos":[0,75],"content":"Converts the given value object to the specified type, using the arguments.","nodes":[{"content":"Converts the given value object to the specified type, using the arguments.","pos":[0,75]}]}],"pos":[48356,48432],"yaml":true},{"content":"The most common type to convert to and from is a string object. This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.","nodes":[{"pos":[0,201],"content":"The most common type to convert to and from is a string object. This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.","nodes":[{"content":"The most common type to convert to and from is a string object. This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.","pos":[0,201],"nodes":[{"content":"The most common type to convert to and from is a string object.","pos":[0,63]},{"content":"This implementation calls <ph id=\"ph1\">&lt;xref:System.Object.ToString%2A&gt;</ph> on the object, if the object is valid and if the destination type is a string.","pos":[64,201],"source":" This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string."}]}]}],"pos":[48443,48645],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[48807,48858],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to convert the <code>value</code> parameter to.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to convert the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to.","source":"The <xref href=\"System.Type\"></xref> to convert the <code>value</code> parameter to."}],"pos":[48927,49012],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted value.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"An <xref href=\"System.Object\"></xref> that represents the converted value."}],"pos":[49069,49144],"yaml":true},{"content":"The <code>destinationType</code> parameter is `null`.","nodes":[{"pos":[0,53],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>destinationType</code> parameter is `null`."}],"pos":[49319,49373],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[49475,49511],"yaml":true},{"content":"Converts the given value object to the specified type, using the specified context and culture information.","nodes":[{"pos":[0,107],"content":"Converts the given value object to the specified type, using the specified context and culture information.","nodes":[{"content":"Converts the given value object to the specified type, using the specified context and culture information.","pos":[0,107]}]}],"pos":[51206,51314],"yaml":true},{"content":"The most common types to convert are to and from a string object. This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.  \n  \n Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone. In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>. For more information, see <xref:System.Windows.Markup.ValueSerializer>.","nodes":[{"pos":[0,202],"content":"The most common types to convert are to and from a string object. This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.","nodes":[{"content":"The most common types to convert are to and from a string object. This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.","pos":[0,202],"nodes":[{"content":"The most common types to convert are to and from a string object.","pos":[0,65]},{"content":"This implementation calls <ph id=\"ph1\">&lt;xref:System.Object.ToString%2A&gt;</ph> on the object if the object is valid and if the destination type is a string.","pos":[66,202],"source":" This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string."}]}]},{"pos":[209,438],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]},{"pos":[445,828],"content":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.","nodes":[{"content":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.","pos":[0,383],"nodes":[{"content":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class that supports <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> behavior from a string.","pos":[0,245],"source":"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string."},{"content":"These type converters might also implement <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt;</ph> to support serialization back to XAML.","pos":[246,383],"source":" These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML."}]}]},{"pos":[835,1253],"content":"Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone. In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>. For more information, see <xref:System.Windows.Markup.ValueSerializer>.","nodes":[{"content":"Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone. In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>. For more information, see <xref:System.Windows.Markup.ValueSerializer>.","pos":[0,418],"nodes":[{"content":"Some XAML serialization scenarios cannot be adequately addressed with <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> alone.","pos":[0,119],"source":"Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone."},{"content":"In these cases, it may be necessary to also define a <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> that handles the serialization cases that would otherwise be handled by <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A&gt;</ph>.","pos":[120,346],"source":" In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.","pos":[347,418],"source":" For more information, see <xref:System.Windows.Markup.ValueSerializer>."}]}]}],"pos":[51325,52587],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[52886,52987],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.","nodes":[{"pos":[0,109],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph>.","pos":[0,56],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref>."},{"content":"If <ph id=\"ph1\">`null`</ph> is passed, the current culture is assumed.","pos":[57,109],"source":" If `null` is passed, the current culture is assumed."}]}],"pos":[53069,53179],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[53240,53291],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to convert the <code>value</code> parameter to.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to convert the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to.","source":"The <xref href=\"System.Type\"></xref> to convert the <code>value</code> parameter to."}],"pos":[53360,53445],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted value.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"An <xref href=\"System.Object\"></xref> that represents the converted value."}],"pos":[53502,53577],"yaml":true},{"content":"The <code>destinationType</code> parameter is `null`.","nodes":[{"pos":[0,53],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>destinationType</code> parameter is `null`."}],"pos":[53752,53806],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[53908,53944],"yaml":true},{"content":"Converts the specified value to a culture-invariant string representation.","nodes":[{"pos":[0,74],"content":"Converts the specified value to a culture-invariant string representation.","nodes":[{"content":"Converts the specified value to a culture-invariant string representation.","pos":[0,74]}]}],"pos":[55330,55405],"yaml":true},{"content":"The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`.  \n  \n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"pos":[0,230],"content":"The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment from which this converter is being invoked.","pos":[0,135],"source":"The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[136,172],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[173,230],"source":" Also, properties on the context object can return `null`."}]},{"pos":[237,411],"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","pos":[0,174]}]}],"pos":[55416,55832],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[55987,56038],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that represents the converted value.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"A <xref href=\"System.String\"></xref> that represents the converted value."}],"pos":[56095,56169],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[56359,56395],"yaml":true},{"content":"Converts the specified value to a culture-invariant string representation, using the specified context.","nodes":[{"pos":[0,103],"content":"Converts the specified value to a culture-invariant string representation, using the specified context.","nodes":[{"content":"Converts the specified value to a culture-invariant string representation, using the specified context.","pos":[0,103]}]}],"pos":[57988,58092],"yaml":true},{"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"pos":[0,229],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]},{"pos":[236,410],"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","pos":[0,174]}]}],"pos":[58103,58518],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[58760,58861],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[58922,58973],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that represents the converted value.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"A <xref href=\"System.String\"></xref> that represents the converted value."}],"pos":[59030,59104],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[59294,59330],"yaml":true},{"content":"Converts the given value to a string representation, using the specified context and culture information.","nodes":[{"pos":[0,105],"content":"Converts the given value to a string representation, using the specified context and culture information.","nodes":[{"content":"Converts the given value to a string representation, using the specified context and culture information.","pos":[0,105]}]}],"pos":[61007,61113],"yaml":true},{"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"pos":[0,229],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]},{"pos":[236,410],"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","pos":[0,174]}]}],"pos":[61124,61539],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[61814,61915],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.","nodes":[{"pos":[0,109],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph>.","pos":[0,56],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref>."},{"content":"If <ph id=\"ph1\">`null`</ph> is passed, the current culture is assumed.","pos":[57,109],"source":" If `null` is passed, the current culture is assumed."}]}],"pos":[61997,62107],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[62168,62219],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted value.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"An <xref href=\"System.Object\"></xref> that represents the converted value."}],"pos":[62276,62351],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[62532,62568],"yaml":true},{"content":"Converts the specified value to a string representation.","nodes":[{"pos":[0,56],"content":"Converts the specified value to a string representation.","nodes":[{"content":"Converts the specified value to a string representation.","pos":[0,56]}]}],"pos":[63900,63957],"yaml":true},{"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"pos":[0,174],"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","pos":[0,174]}]}],"pos":[63968,64143],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[64395,64446],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted value.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"An <xref href=\"System.Object\"></xref> that represents the converted value."}],"pos":[64503,64578],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[64759,64795],"yaml":true},{"content":"Converts the given value to a string representation, using the given context.","nodes":[{"pos":[0,77],"content":"Converts the given value to a string representation, using the given context.","nodes":[{"content":"Converts the given value to a string representation, using the given context.","pos":[0,77]}]}],"pos":[66334,66412],"yaml":true},{"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"pos":[0,229],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]},{"pos":[236,410],"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","nodes":[{"content":"Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.","pos":[0,174]}]}],"pos":[66423,66838],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[67071,67172],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Object\"></xref> to convert."}],"pos":[67233,67284],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the converted value.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the converted value.","source":"An <xref href=\"System.Object\"></xref> that represents the converted value."}],"pos":[67341,67416],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[67597,67633],"yaml":true},{"content":"Creates an instance of the type that this <xref href=\"System.ComponentModel.TypeConverter\"></xref> is associated with, using the specified context, given a set of property values for the object.","nodes":[{"pos":[0,194],"content":"Creates an instance of the type that this <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> is associated with, using the specified context, given a set of property values for the object.","source":"Creates an instance of the type that this <xref href=\"System.ComponentModel.TypeConverter\"></xref> is associated with, using the specified context, given a set of property values for the object."}],"pos":[69232,69427],"yaml":true},{"content":"Use this method for objects that are immutable, but for which you want to provide changeable properties.","nodes":[{"pos":[0,104],"content":"Use this method for objects that are immutable, but for which you want to provide changeable properties.","nodes":[{"content":"Use this method for objects that are immutable, but for which you want to provide changeable properties.","pos":[0,104]}]}],"pos":[69438,69543],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[69816,69917],"yaml":true},{"content":"An <xref href=\"System.Collections.IDictionary\"></xref> of new property values.","nodes":[{"pos":[0,78],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> of new property values.","source":"An <xref href=\"System.Collections.IDictionary\"></xref> of new property values."}],"pos":[70004,70083],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> representing the given <xref href=\"System.Collections.IDictionary\"></xref>, or `null` if the object cannot be created. This method always returns `null`.","nodes":[{"pos":[0,191],"content":"An <xref href=\"System.Object\"></xref> representing the given <xref href=\"System.Collections.IDictionary\"></xref>, or `null` if the object cannot be created. This method always returns `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> representing the given <ph id=\"ph2\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">`null`</ph> if the object cannot be created.","pos":[0,156],"source":"An <xref href=\"System.Object\"></xref> representing the given <xref href=\"System.Collections.IDictionary\"></xref>, or `null` if the object cannot be created."},{"content":"This method always returns <ph id=\"ph1\">`null`</ph>.","pos":[157,191],"source":" This method always returns `null`."}]}],"pos":[70140,70332],"yaml":true},{"content":"Re-creates an <xref href=\"System.Object\"></xref> given a set of property values for the object.","nodes":[{"pos":[0,95],"content":"Re-creates an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> given a set of property values for the object.","source":"Re-creates an <xref href=\"System.Object\"></xref> given a set of property values for the object."}],"pos":[71805,71901],"yaml":true},{"content":"Use this method for objects that are immutable, but for which you want to provide changeable properties.  \n  \n The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.","nodes":[{"pos":[0,104],"content":"Use this method for objects that are immutable, but for which you want to provide changeable properties.","nodes":[{"content":"Use this method for objects that are immutable, but for which you want to provide changeable properties.","pos":[0,104]}]},{"pos":[111,299],"content":"The dictionary provided by the <ph id=\"ph1\">`propertyValues`</ph> parameter has a series of name/value pairs, one for each property returned from <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph>.","source":"The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>."}],"pos":[71912,72216],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IDictionary\"></xref> that represents a dictionary of new property values.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> that represents a dictionary of new property values.","source":"An <xref href=\"System.Collections.IDictionary\"></xref> that represents a dictionary of new property values."}],"pos":[72420,72528],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> representing the given <xref href=\"System.Collections.IDictionary\"></xref>, or `null` if the object cannot be created. This method always returns `null`.","nodes":[{"pos":[0,191],"content":"An <xref href=\"System.Object\"></xref> representing the given <xref href=\"System.Collections.IDictionary\"></xref>, or `null` if the object cannot be created. This method always returns `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> representing the given <ph id=\"ph2\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">`null`</ph> if the object cannot be created.","pos":[0,156],"source":"An <xref href=\"System.Object\"></xref> representing the given <xref href=\"System.Collections.IDictionary\"></xref>, or `null` if the object cannot be created."},{"content":"This method always returns <ph id=\"ph1\">`null`</ph>.","pos":[157,191],"source":" This method always returns `null`."}]}],"pos":[72585,72777],"yaml":true},{"content":"Returns an exception to throw when a conversion cannot be performed.","nodes":[{"pos":[0,68],"content":"Returns an exception to throw when a conversion cannot be performed.","nodes":[{"content":"Returns an exception to throw when a conversion cannot be performed.","pos":[0,68]}]}],"pos":[74238,74307],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert, or `null` if the object is not available.","nodes":[{"pos":[0,92],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert, or <ph id=\"ph2\">`null`</ph> if the object is not available.","source":"The <xref href=\"System.Object\"></xref> to convert, or `null` if the object is not available."}],"pos":[74467,74560],"yaml":true},{"content":"An <xref href=\"System.Exception\"></xref> that represents the exception to throw when a conversion cannot be performed.","nodes":[{"pos":[0,118],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that represents the exception to throw when a conversion cannot be performed.","source":"An <xref href=\"System.Exception\"></xref> that represents the exception to throw when a conversion cannot be performed."}],"pos":[74620,74739],"yaml":true},{"content":"Automatically thrown by this method.","nodes":[{"pos":[0,36],"content":"Automatically thrown by this method.","nodes":[{"content":"Automatically thrown by this method.","pos":[0,36]}]}],"pos":[74928,74965],"yaml":true},{"content":"Returns an exception to throw when a conversion cannot be performed.","nodes":[{"pos":[0,68],"content":"Returns an exception to throw when a conversion cannot be performed.","nodes":[{"content":"Returns an exception to throw when a conversion cannot be performed.","pos":[0,68]}]}],"pos":[76387,76456],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to convert, or `null` if the object is not available.","nodes":[{"pos":[0,92],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to convert, or <ph id=\"ph2\">`null`</ph> if the object is not available.","source":"The <xref href=\"System.Object\"></xref> to convert, or `null` if the object is not available."}],"pos":[76636,76729],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type the conversion was trying to convert to.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type the conversion was trying to convert to.","source":"A <xref href=\"System.Type\"></xref> that represents the type the conversion was trying to convert to."}],"pos":[76798,76899],"yaml":true},{"content":"An <xref href=\"System.Exception\"></xref> that represents the exception to throw when a conversion cannot be performed.","nodes":[{"pos":[0,118],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that represents the exception to throw when a conversion cannot be performed.","source":"An <xref href=\"System.Exception\"></xref> that represents the exception to throw when a conversion cannot be performed."}],"pos":[76959,77078],"yaml":true},{"content":"Automatically thrown by this method.","nodes":[{"pos":[0,36],"content":"Automatically thrown by this method.","nodes":[{"content":"Automatically thrown by this method.","pos":[0,36]}]}],"pos":[77265,77302],"yaml":true},{"content":"Returns whether changing a value on this object requires a call to the <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> method to create a new value.","nodes":[{"pos":[0,204],"content":"Returns whether changing a value on this object requires a call to the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"&gt;&lt;/xref&gt;</ph> method to create a new value.","source":"Returns whether changing a value on this object requires a call to the <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> method to create a new value."}],"pos":[78637,78842],"yaml":true},{"content":"`true` if changing a property on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value; otherwise, `false`.","nodes":[{"pos":[0,210],"content":"<ph id=\"ph1\">`true`</ph> if changing a property on this object requires a call to <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"&gt;&lt;/xref&gt;</ph> to create a new value; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if changing a property on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value; otherwise, `false`."}],"pos":[78985,79198],"yaml":true},{"content":"Returns whether changing a value on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value, using the specified context.","nodes":[{"pos":[0,222],"content":"Returns whether changing a value on this object requires a call to <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"&gt;&lt;/xref&gt;</ph> to create a new value, using the specified context.","source":"Returns whether changing a value on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value, using the specified context."}],"pos":[80830,81053],"yaml":true},{"content":"As implemented in this class, this method always returns `false`.","nodes":[{"pos":[0,65],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`false`</ph>.","source":"As implemented in this class, this method always returns `false`."}],"pos":[81064,81130],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[81366,81467],"yaml":true},{"content":"`true` if changing a property on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value; otherwise, `false`.","nodes":[{"pos":[0,210],"content":"<ph id=\"ph1\">`true`</ph> if changing a property on this object requires a call to <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"&gt;&lt;/xref&gt;</ph> to create a new value; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if changing a property on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value; otherwise, `false`."}],"pos":[81525,81738],"yaml":true},{"content":"Returns a collection of properties for the type of array specified by the value parameter.","nodes":[{"pos":[0,90],"content":"Returns a collection of properties for the type of array specified by the value parameter.","nodes":[{"content":"Returns a collection of properties for the type of array specified by the value parameter.","pos":[0,90]}]}],"pos":[83151,83242],"yaml":true},{"content":"As implemented in this class, this method always returns `null`.  \n  \n By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.","nodes":[{"pos":[0,64],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`null`</ph>.","source":"As implemented in this class, this method always returns `null`."},{"pos":[71,252],"content":"By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.","nodes":[{"content":"By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.","pos":[0,181],"nodes":[{"content":"By default, a type does not return properties.","pos":[0,46]},{"content":"An easy implementation of this method can call <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> for the correct data type.","pos":[47,181],"source":" An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type."}]}]}],"pos":[83253,83510],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties.","nodes":[{"pos":[0,99],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that specifies the type of array for which to get properties.","source":"An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties."}],"pos":[83698,83798],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.","nodes":[{"pos":[0,168],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> with the properties that are exposed for this data type, or <ph id=\"ph2\">`null`</ph> if there are no properties.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties."}],"pos":[83892,84061],"yaml":true},{"content":"Returns a collection of properties for the type of array specified by the value parameter, using the specified context.","nodes":[{"pos":[0,119],"content":"Returns a collection of properties for the type of array specified by the value parameter, using the specified context.","nodes":[{"content":"Returns a collection of properties for the type of array specified by the value parameter, using the specified context.","pos":[0,119]}]}],"pos":[85668,85788],"yaml":true},{"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n As implemented in this class, this method always returns `null`.  \n  \n By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.","nodes":[{"pos":[0,229],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]},{"pos":[236,300],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`null`</ph>.","source":"As implemented in this class, this method always returns `null`."},{"pos":[307,488],"content":"By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.","nodes":[{"content":"By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.","pos":[0,181],"nodes":[{"content":"By default, a type does not return properties.","pos":[0,46]},{"content":"An easy implementation of this method can call <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> for the correct data type.","pos":[47,181],"source":" An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type."}]}]}],"pos":[85799,86294],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[86569,86670],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties.","nodes":[{"pos":[0,99],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that specifies the type of array for which to get properties.","source":"An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties."}],"pos":[86731,86831],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.","nodes":[{"pos":[0,168],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> with the properties that are exposed for this data type, or <ph id=\"ph2\">`null`</ph> if there are no properties.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties."}],"pos":[86925,87094],"yaml":true},{"content":"Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.","nodes":[{"pos":[0,134],"content":"Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.","nodes":[{"content":"Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.","pos":[0,134]}]}],"pos":[88797,88932],"yaml":true},{"content":"As implemented in this class, this method always returns `null`.","nodes":[{"pos":[0,64],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`null`</ph>.","source":"As implemented in this class, this method always returns `null`."}],"pos":[88943,89008],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[89315,89416],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties.","nodes":[{"pos":[0,99],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that specifies the type of array for which to get properties.","source":"An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties."}],"pos":[89477,89577],"yaml":true},{"content":"An array of type <xref href=\"System.Attribute\"></xref> that is used as a filter.","nodes":[{"pos":[0,80],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> that is used as a filter.","source":"An array of type <xref href=\"System.Attribute\"></xref> that is used as a filter."}],"pos":[89648,89729],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.","nodes":[{"pos":[0,168],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> with the properties that are exposed for this data type, or <ph id=\"ph2\">`null`</ph> if there are no properties.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties."}],"pos":[89823,89992],"yaml":true},{"content":"Returns whether this object supports properties, using the specified context.","nodes":[{"pos":[0,77],"content":"Returns whether this object supports properties, using the specified context.","nodes":[{"content":"Returns whether this object supports properties, using the specified context.","pos":[0,77]}]}],"pos":[91587,91665],"yaml":true},{"content":"As implemented in this class, this method always returns `false`.","nodes":[{"pos":[0,65],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`false`</ph>.","source":"As implemented in this class, this method always returns `false`."}],"pos":[91676,91742],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[91974,92075],"yaml":true},{"content":"`true` if <xref href=\"System.ComponentModel.TypeConverter.GetProperties(System.Object)\"></xref> should be called to find the properties of this object; otherwise, `false`.","nodes":[{"pos":[0,171],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetProperties(System.Object)\"&gt;&lt;/xref&gt;</ph> should be called to find the properties of this object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <xref href=\"System.ComponentModel.TypeConverter.GetProperties(System.Object)\"></xref> should be called to find the properties of this object; otherwise, `false`."}],"pos":[92133,92307],"yaml":true},{"content":"Returns whether this object supports properties.","nodes":[{"pos":[0,48],"content":"Returns whether this object supports properties.","nodes":[{"content":"Returns whether this object supports properties.","pos":[0,48]}]}],"pos":[93707,93756],"yaml":true},{"content":"As implemented in this class, this method always returns `false`.","nodes":[{"pos":[0,65],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`false`</ph>.","source":"As implemented in this class, this method always returns `false`."}],"pos":[93767,93833],"yaml":true,"extradata":"MT"},{"content":"`true` if <xref href=\"System.ComponentModel.TypeConverter.GetProperties(System.Object)\"></xref> should be called to find the properties of this object; otherwise, `false`.","nodes":[{"pos":[0,171],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetProperties(System.Object)\"&gt;&lt;/xref&gt;</ph> should be called to find the properties of this object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <xref href=\"System.ComponentModel.TypeConverter.GetProperties(System.Object)\"></xref> should be called to find the properties of this object; otherwise, `false`."}],"pos":[93972,94146],"yaml":true},{"content":"Returns a collection of standard values from the default context for the data type this type converter is designed for.","nodes":[{"pos":[0,119],"content":"Returns a collection of standard values from the default context for the data type this type converter is designed for.","nodes":[{"content":"Returns a collection of standard values from the default context for the data type this type converter is designed for.","pos":[0,119]}]}],"pos":[95516,95636],"yaml":true},{"content":"As implemented in this class, this method always returns `null`.","nodes":[{"pos":[0,64],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`null`</ph>.","source":"As implemented in this class, this method always returns `null`."}],"pos":[95647,95712],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing a standard set of valid values, or `null` if the data type does not support a standard set of values.","nodes":[{"pos":[0,196],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> containing a standard set of valid values, or <ph id=\"ph2\">`null`</ph> if the data type does not support a standard set of values.","source":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing a standard set of valid values, or `null` if the data type does not support a standard set of values."}],"pos":[95888,96085],"yaml":true},{"content":"Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.","nodes":[{"pos":[0,130],"content":"Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.","nodes":[{"content":"Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.","pos":[0,130]}]}],"pos":[97654,97785],"yaml":true},{"content":"As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.","nodes":[{"pos":[0,96],"content":"As implemented in <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>, this method always returns <ph id=\"ph2\">`null`</ph>.","source":"As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`."}],"pos":[97796,97893],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.","nodes":[{"pos":[0,272],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.","pos":[0,210],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter or properties of this parameter can be <ph id=\"ph1\">`null`</ph>.","pos":[211,272],"source":" This parameter or properties of this parameter can be `null`."}]}],"pos":[98282,98555],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that holds a standard set of valid values, or `null` if the data type does not support a standard set of values.","nodes":[{"pos":[0,196],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> that holds a standard set of valid values, or <ph id=\"ph2\">`null`</ph> if the data type does not support a standard set of values.","source":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that holds a standard set of valid values, or `null` if the data type does not support a standard set of values."}],"pos":[98659,98856],"yaml":true},{"content":"Returns whether the collection of standard values returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exclusive list.","nodes":[{"pos":[0,160],"content":"Returns whether the collection of standard values returned from <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"&gt;&lt;/xref&gt;</ph> is an exclusive list.","source":"Returns whether the collection of standard values returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exclusive list."}],"pos":[100275,100436],"yaml":true},{"content":"As implemented in this class, this method always returns `false`.  \n  \n If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.","nodes":[{"pos":[0,65],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`false`</ph>.","source":"As implemented in this class, this method always returns `false`."},{"pos":[72,523],"content":"If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.","nodes":[{"content":"If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.","pos":[0,451],"nodes":[{"content":"If the list is exclusive, such as in an enumeration data type, then no other values are valid.","pos":[0,94]},{"content":"If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph> method provides.","pos":[95,293],"source":" If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides."},{"content":"If the values are exclusive, the list returned by <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph> should not allow these values to be edited.","pos":[294,451],"source":" If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited."}]}]}],"pos":[100447,100975],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exhaustive list of possible values; `false` if other values are possible.","nodes":[{"pos":[0,264],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> returned from <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"&gt;&lt;/xref&gt;</ph> is an exhaustive list of possible values; <ph id=\"ph4\">`false`</ph> if other values are possible.","source":"`true` if the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exhaustive list of possible values; `false` if other values are possible."}],"pos":[101118,101385],"yaml":true},{"content":"Returns whether the collection of standard values returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exclusive list of possible values, using the specified context.","nodes":[{"pos":[0,208],"content":"Returns whether the collection of standard values returned from <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"&gt;&lt;/xref&gt;</ph> is an exclusive list of possible values, using the specified context.","source":"Returns whether the collection of standard values returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exclusive list of possible values, using the specified context."}],"pos":[103017,103226],"yaml":true},{"content":"As implemented in this class, this method always returns `false`.  \n  \n If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.","nodes":[{"pos":[0,65],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`false`</ph>.","source":"As implemented in this class, this method always returns `false`."},{"pos":[72,523],"content":"If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.","nodes":[{"content":"If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.","pos":[0,451],"nodes":[{"content":"If the list is exclusive, such as in an enumeration data type, then no other values are valid.","pos":[0,94]},{"content":"If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph> method provides.","pos":[95,293],"source":" If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides."},{"content":"If the values are exclusive, the list returned by <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter.GetStandardValues%2A&gt;</ph> should not allow these values to be edited.","pos":[294,451],"source":" If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited."}]}]}],"pos":[103237,103765],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[104001,104102],"yaml":true},{"content":"`true` if the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exhaustive list of possible values; `false` if other values are possible.","nodes":[{"pos":[0,264],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> returned from <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"&gt;&lt;/xref&gt;</ph> is an exhaustive list of possible values; <ph id=\"ph4\">`false`</ph> if other values are possible.","source":"`true` if the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exhaustive list of possible values; `false` if other values are possible."}],"pos":[104160,104427],"yaml":true},{"content":"Returns whether this object supports a standard set of values that can be picked from a list.","nodes":[{"pos":[0,93],"content":"Returns whether this object supports a standard set of values that can be picked from a list.","nodes":[{"content":"Returns whether this object supports a standard set of values that can be picked from a list.","pos":[0,93]}]}],"pos":[105855,105949],"yaml":true},{"content":"`true` if <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> should be called to find a common set of values the object supports; otherwise, `false`.","nodes":[{"pos":[0,173],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"&gt;&lt;/xref&gt;</ph> should be called to find a common set of values the object supports; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> should be called to find a common set of values the object supports; otherwise, `false`."}],"pos":[106092,106268],"yaml":true},{"content":"Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.","nodes":[{"pos":[0,122],"content":"Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.","nodes":[{"content":"Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.","pos":[0,122]}]}],"pos":[107900,108023],"yaml":true},{"content":"As implemented in this class, this method always returns `false`.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,65],"content":"As implemented in this class, this method always returns <ph id=\"ph1\">`false`</ph>.","source":"As implemented in this class, this method always returns `false`."},{"pos":[72,301],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]}],"pos":[108034,108340],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[108576,108677],"yaml":true},{"content":"`true` if <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> should be called to find a common set of values the object supports; otherwise, `false`.","nodes":[{"pos":[0,173],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"&gt;&lt;/xref&gt;</ph> should be called to find a common set of values the object supports; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> should be called to find a common set of values the object supports; otherwise, `false`."}],"pos":[108735,108911],"yaml":true},{"content":"Returns whether the given value object is valid for this type and for the specified context.","nodes":[{"pos":[0,92],"content":"Returns whether the given value object is valid for this type and for the specified context.","nodes":[{"content":"Returns whether the given value object is valid for this type and for the specified context.","pos":[0,92]}]}],"pos":[110495,110588],"yaml":true},{"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \n  \n Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods. If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.  \n  \n To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.  \n  \n```xml  \n<configuration>  \n  <appSettings>  \n    <add key=\"UseCompatibleTypeConverterBehavior\" value=\"true\" />  \n  </appSettings>  \n</configuration>  \n```","nodes":[{"pos":[0,229],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, so always check it.","pos":[122,171],"source":" This parameter can be `null`, so always check it."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[172,229],"source":" Also, properties on the context object can return `null`."}]},{"pos":[236,832],"content":"Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods. If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.","nodes":[{"content":"Starting in <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> method catches exceptions from the <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> methods.","pos":[0,293],"source":"Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods."},{"content":"If the input value type causes <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> to return <ph id=\"ph2\">`false`</ph>, or if the input value causes <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> to raise an exception, the <ph id=\"ph4\">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> method returns <ph id=\"ph5\">`false`</ph>.","pos":[294,596],"source":" If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`."}]},{"pos":[839,982],"content":"To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.","nodes":[{"content":"To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.","pos":[0,143]}]}],"pos":[110599,111760],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[112097,112198],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to test for validity.","nodes":[{"pos":[0,60],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to test for validity.","source":"The <xref href=\"System.Object\"></xref> to test for validity."}],"pos":[112259,112320],"yaml":true},{"content":"`true` if the specified value is valid for this object; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if the specified value is valid for this object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified value is valid for this object; otherwise, `false`."}],"pos":[112378,112456],"yaml":true},{"content":"Returns whether the given value object is valid for this type.","nodes":[{"pos":[0,62],"content":"Returns whether the given value object is valid for this type.","nodes":[{"content":"Returns whether the given value object is valid for this type.","pos":[0,62]}]}],"pos":[113814,113877],"yaml":true},{"content":"Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods. If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.  \n  \n To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.  \n  \n```xml  \n<configuration>  \n  <appSettings>  \n    <add key=\"UseCompatibleTypeConverterBehavior\" value=\"true\" />  \n  </appSettings>  \n</configuration>  \n```","nodes":[{"pos":[0,596],"content":"Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods. If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.","nodes":[{"content":"Starting in <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> method catches exceptions from the <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> methods.","pos":[0,293],"source":"Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods."},{"content":"If the input value type causes <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> to return <ph id=\"ph2\">`false`</ph>, or if the input value causes <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.ConvertFrom%2A&gt;</ph> to raise an exception, the <ph id=\"ph4\">&lt;xref:System.ComponentModel.TypeConverter.IsValid%2A&gt;</ph> method returns <ph id=\"ph5\">`false`</ph>.","pos":[294,596],"source":" If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`."}]},{"pos":[603,746],"content":"To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.","nodes":[{"content":"To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.","pos":[0,143]}]}],"pos":[113888,114811],"yaml":true,"extradata":"MT"},{"content":"The object to test for validity.","nodes":[{"pos":[0,32],"content":"The object to test for validity.","nodes":[{"content":"The object to test for validity.","pos":[0,32]}]}],"pos":[114947,114980],"yaml":true},{"content":"`true` if the specified value is valid for this object; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if the specified value is valid for this object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified value is valid for this object; otherwise, `false`."}],"pos":[115038,115116],"yaml":true},{"content":"Sorts a collection of properties.","nodes":[{"pos":[0,33],"content":"Sorts a collection of properties.","nodes":[{"content":"Sorts a collection of properties.","pos":[0,33]}]}],"pos":[116771,116805],"yaml":true},{"content":"All properties in the collection that are not already in the array of names are added alphabetically to the end. If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.","nodes":[{"pos":[0,230],"content":"All properties in the collection that are not already in the array of names are added alphabetically to the end. If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.","nodes":[{"content":"All properties in the collection that are not already in the array of names are added alphabetically to the end.","pos":[0,112]},{"content":"If the <ph id=\"ph1\">`names`</ph> parameter is an empty array or <ph id=\"ph2\">`null`</ph>, all the properties in the collection are sorted alphabetically.","pos":[113,230],"source":" If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically."}]}],"pos":[116816,117047],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that has the properties to sort.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> that has the properties to sort.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that has the properties to sort."}],"pos":[117336,117443],"yaml":true},{"content":"An array of names in the order you want the properties to appear in the collection.","nodes":[{"pos":[0,83],"content":"An array of names in the order you want the properties to appear in the collection.","nodes":[{"content":"An array of names in the order you want the properties to appear in the collection.","pos":[0,83]}]}],"pos":[117506,117590],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that contains the sorted properties.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> that contains the sorted properties.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that contains the sorted properties."}],"pos":[117684,117795],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.TypeConverter\n  commentId: T:System.ComponentModel.TypeConverter\n  id: TypeConverter\n  children:\n  - System.ComponentModel.TypeConverter.#ctor\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  langs:\n  - csharp\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n  type: Class\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.\n  remarks: \"The most common type of converter is one that converts to and from a text representation. The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>. Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.  \\n  \\n> [!NOTE]\\n>  For general type system purposes, do not access a type converter directly. Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>. For more information, see the code examples provided.  \\n  \\n **Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>. For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.  \\n  \\n Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation. Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation. For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).\"\n  example:\n  - \"The following code example shows how to create an instance of a type converter and bind it to a class. The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.  \\n  \\n [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]\\n [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  \\n  \\n When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property. The next code example requires that an enumeration called `MyPropertyEnum` has been declared.  \\n  \\n [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]\\n [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]\\n [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  \\n  \\n Another common type converter usage is to convert an object to a string. The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.  \\n  \\n [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]\\n [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]\\n [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  \\n  \\n You can also use a type converter to convert a value from its name, as shown in the next code example.  \\n  \\n [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]\\n [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]\\n [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  \\n  \\n In the following code example, you can use a type converter to print out the set of standard values that the object supports.  \\n  \\n [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]\\n [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]\\n [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class TypeConverter\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter\n  - Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter\n  - System.UriTypeConverter\n  - System.Activities.XamlIntegration.AssemblyReferenceConverter\n  - System.Activities.XamlIntegration.DynamicUpdateMapConverter\n  - System.Activities.XamlIntegration.DynamicUpdateMapItemConverter\n  - System.Activities.XamlIntegration.ImplementationVersionConverter\n  - System.Activities.XamlIntegration.TypeConverterBase\n  - System.Activities.XamlIntegration.WorkflowIdentityConverter\n  - System.ComponentModel.BaseNumberConverter\n  - System.ComponentModel.BooleanConverter\n  - System.ComponentModel.CharConverter\n  - System.ComponentModel.CollectionConverter\n  - System.ComponentModel.CultureInfoConverter\n  - System.ComponentModel.DateTimeConverter\n  - System.ComponentModel.DateTimeOffsetConverter\n  - System.ComponentModel.EnumConverter\n  - System.ComponentModel.ExpandableObjectConverter\n  - System.ComponentModel.GuidConverter\n  - System.ComponentModel.MultilineStringConverter\n  - System.ComponentModel.NullableConverter\n  - System.ComponentModel.ReferenceConverter\n  - System.ComponentModel.StringConverter\n  - System.ComponentModel.TimeSpanConverter\n  - System.ComponentModel.TypeListConverter\n  - System.Configuration.ConfigurationConverterBase\n  - System.Diagnostics.Design.LogConverter\n  - System.Drawing.ColorConverter\n  - System.Drawing.FontConverter.FontNameConverter\n  - System.Drawing.FontConverter\n  - System.Drawing.ImageConverter\n  - System.Drawing.ImageFormatConverter\n  - System.Drawing.PointConverter\n  - System.Drawing.RectangleConverter\n  - System.Drawing.SizeConverter\n  - System.Drawing.SizeFConverter\n  - System.Resources.ResXFileRef.Converter\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter\n  - System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter\n  - System.ServiceModel.XamlIntegration.EndpointIdentityConverter\n  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter\n  - System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  - System.Web.Configuration.LowerCaseStringConverter\n  - System.Web.UI.Design.DataBindingCollectionConverter\n  - System.Web.UI.Design.DataColumnSelectionConverter\n  - System.Web.UI.Design.DataFieldConverter\n  - System.Web.UI.Design.DataMemberConverter\n  - System.Web.UI.Design.DataSourceConverter\n  - System.Web.UI.Design.DataSourceViewSchemaConverter\n  - System.Web.UI.Design.ExpressionsCollectionConverter\n  - System.Web.UI.Design.SkinIDTypeConverter\n  - System.Web.UI.Design.MobileControls.Converters.DataFieldConverter\n  - System.Web.UI.Design.MobileControls.Converters.DataMemberConverter\n  - System.Web.UI.Design.WebControls.DataSourceIDConverter\n  - System.Web.UI.WebControls.FontNamesConverter\n  - System.Web.UI.WebControls.FontUnitConverter\n  - System.Web.UI.WebControls.StringArrayConverter\n  - System.Web.UI.WebControls.UnitConverter\n  - System.Windows.CornerRadiusConverter\n  - System.Windows.CultureInfoIetfLanguageTagConverter\n  - System.Windows.DeferrableContentConverter\n  - System.Windows.DialogResultConverter\n  - System.Windows.DurationConverter\n  - System.Windows.DynamicResourceExtensionConverter\n  - System.Windows.ExpressionConverter\n  - System.Windows.FigureLengthConverter\n  - System.Windows.FontSizeConverter\n  - System.Windows.FontStretchConverter\n  - System.Windows.FontStyleConverter\n  - System.Windows.FontWeightConverter\n  - System.Windows.GridLengthConverter\n  - System.Windows.Int32RectConverter\n  - System.Windows.KeySplineConverter\n  - System.Windows.KeyTimeConverter\n  - System.Windows.LengthConverter\n  - System.Windows.PointConverter\n  - System.Windows.PropertyPathConverter\n  - System.Windows.RectConverter\n  - System.Windows.SizeConverter\n  - System.Windows.StrokeCollectionConverter\n  - System.Windows.TemplateBindingExpressionConverter\n  - System.Windows.TemplateBindingExtensionConverter\n  - System.Windows.TextDecorationCollectionConverter\n  - System.Windows.ThicknessConverter\n  - System.Windows.VectorConverter\n  - System.Windows.Controls.DataGridLengthConverter\n  - System.Windows.Controls.VirtualizationCacheLengthConverter\n  - System.Windows.Controls.Ribbon.RibbonControlLengthConverter\n  - System.Windows.Controls.Ribbon.StringCollectionConverter\n  - System.Windows.Forms.AxHost.StateConverter\n  - System.Windows.Forms.CursorConverter\n  - System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter\n  - System.Windows.Forms.DataGridViewCellStyleConverter\n  - System.Windows.Forms.KeysConverter\n  - System.Windows.Forms.LinkArea.LinkAreaConverter\n  - System.Windows.Forms.LinkConverter\n  - System.Windows.Forms.ListBindingConverter\n  - System.Windows.Forms.OpacityConverter\n  - System.Windows.Forms.PaddingConverter\n  - System.Windows.Forms.ScrollableControl.DockPaddingEdgesConverter\n  - System.Windows.Forms.SelectionRangeConverter\n  - System.Windows.Forms.TreeNodeConverter\n  - System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter\n  - System.Windows.Input.CommandConverter\n  - System.Windows.Input.CursorConverter\n  - System.Windows.Input.InputScopeConverter\n  - System.Windows.Input.InputScopeNameConverter\n  - System.Windows.Input.KeyConverter\n  - System.Windows.Input.KeyGestureConverter\n  - System.Windows.Input.ModifierKeysConverter\n  - System.Windows.Input.MouseActionConverter\n  - System.Windows.Input.MouseGestureConverter\n  - System.Windows.Markup.DependencyPropertyConverter\n  - System.Windows.Markup.EventSetterHandlerConverter\n  - System.Windows.Markup.NameReferenceConverter\n  - System.Windows.Markup.RoutedEventConverter\n  - System.Windows.Markup.SetterTriggerConditionValueConverter\n  - System.Windows.Markup.TemplateKeyConverter\n  - System.Windows.Markup.XmlLanguageConverter\n  - System.Windows.Media.BrushConverter\n  - System.Windows.Media.CacheModeConverter\n  - System.Windows.Media.ColorConverter\n  - System.Windows.Media.DoubleCollectionConverter\n  - System.Windows.Media.FontFamilyConverter\n  - System.Windows.Media.GeometryConverter\n  - System.Windows.Media.ImageSourceConverter\n  - System.Windows.Media.Int32CollectionConverter\n  - System.Windows.Media.MatrixConverter\n  - System.Windows.Media.PathFigureCollectionConverter\n  - System.Windows.Media.PixelFormatConverter\n  - System.Windows.Media.PointCollectionConverter\n  - System.Windows.Media.RequestCachePolicyConverter\n  - System.Windows.Media.TransformConverter\n  - System.Windows.Media.VectorCollectionConverter\n  - System.Windows.Media.Animation.RepeatBehaviorConverter\n  - System.Windows.Media.Converters.BaseIListConverter\n  - System.Windows.Media.Media3D.Matrix3DConverter\n  - System.Windows.Media.Media3D.Point3DCollectionConverter\n  - System.Windows.Media.Media3D.Point3DConverter\n  - System.Windows.Media.Media3D.Point4DConverter\n  - System.Windows.Media.Media3D.QuaternionConverter\n  - System.Windows.Media.Media3D.Rect3DConverter\n  - System.Windows.Media.Media3D.Size3DConverter\n  - System.Windows.Media.Media3D.Vector3DCollectionConverter\n  - System.Windows.Media.Media3D.Vector3DConverter\n  - System.Workflow.ComponentModel.Design.ActivityBindTypeConverter\n  - System.Xaml.Schema.XamlTypeTypeConverter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.#ctor\n  commentId: M:System.ComponentModel.TypeConverter.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: TypeConverter()\n  nameWithType: TypeConverter.TypeConverter()\n  fullName: TypeConverter.TypeConverter()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter\"></xref> class.\n  syntax:\n    content: public TypeConverter ();\n    parameters: []\n  overload: System.ComponentModel.TypeConverter.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  id: CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether this converter can convert an object of the given type to the type of this converter.\n  remarks: As implemented in this class, this method always returns `false`. It never returns `true`.\n  syntax:\n    content: public bool CanConvertFrom (Type sourceType);\n    parameters:\n    - id: sourceType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type you want to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter can perform the conversion; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.\n  remarks: As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.\n  syntax:\n    content: public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type you want to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter can perform the conversion; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  id: CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether this converter can convert the object to the specified type.\n  remarks: If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.\n  syntax:\n    content: public bool CanConvertTo (Type destinationType);\n    parameters:\n    - id: destinationType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type you want to convert to.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter can perform the conversion; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether this converter can convert the object to the specified type, using the specified context.\n  remarks: \"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \\n  \\n If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.\"\n  syntax:\n    content: public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type you want to convert to.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter can perform the conversion; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  id: ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given value to the type of this converter.\n  syntax:\n    content: public object ConvertFrom (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given object to the type of this converter, using the specified context and culture information.\n  remarks: \"Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.  \\n  \\n For XAML purposes, you do not typically provide branching implementations based on `culture`. This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion. For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).\"\n  syntax:\n    content: public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  id: ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given string to the type of this converter, using the invariant culture.\n  remarks: The default implementation always returns `null`.\n  syntax:\n    content: public object ConvertFromInvariantString (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted text.\n  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  id: ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given string to the type of this converter, using the invariant culture and the specified context.\n  remarks: \"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \\n  \\n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: text\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted text.\n  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given text to an object, using the specified context and culture information.\n  remarks: \"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \\n  \\n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.\n    - id: text\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted text.\n  overload: System.ComponentModel.TypeConverter.ConvertFromString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  id: ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the specified text to an object.\n  remarks: The default implementation always returns `null`.\n  example:\n  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.\n  syntax:\n    content: public object ConvertFromString (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text representation of the object to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted text.\n  overload: System.ComponentModel.TypeConverter.ConvertFromString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The string cannot be converted into the appropriate object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given text to an object, using the specified context.\n  remarks: \"An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns `null`.  \\n  \\n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: text\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted text.\n  overload: System.ComponentModel.TypeConverter.ConvertFromString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  id: ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given value object to the specified type, using the arguments.\n  remarks: The most common type to convert to and from is a string object. This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.\n  syntax:\n    content: public object ConvertTo (object value, Type destinationType);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to convert the <code>value</code> parameter to.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>destinationType</code> parameter is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given value object to the specified type, using the specified context and culture information.\n  remarks: \"The most common types to convert are to and from a string object. This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.  \\n  \\n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \\n  \\n Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string. These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.  \\n  \\n Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone. In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>. For more information, see <xref:System.Windows.Markup.ValueSerializer>.\"\n  syntax:\n    content: public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    - id: destinationType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to convert the <code>value</code> parameter to.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>destinationType</code> parameter is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  id: ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the specified value to a culture-invariant string representation.\n  remarks: \"The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`.  \\n  \\n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.\"\n  syntax:\n    content: public string ConvertToInvariantString (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  id: ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the specified value to a culture-invariant string representation, using the specified context.\n  remarks: \"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \\n  \\n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.\"\n  syntax:\n    content: public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given value to a string representation, using the specified context and culture information.\n  remarks: \"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \\n  \\n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.\"\n  syntax:\n    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref>. If `null` is passed, the current culture is assumed.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    return:\n      type: System.String\n      description: An <xref href=\"System.Object\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertToString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  id: ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the specified value to a string representation.\n  remarks: Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.\n  example:\n  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.\n  syntax:\n    content: public string ConvertToString (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    return:\n      type: System.String\n      description: An <xref href=\"System.Object\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertToString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts the given value to a string representation, using the given context.\n  remarks: \"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \\n  \\n Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.\"\n  syntax:\n    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert.\n    return:\n      type: System.String\n      description: An <xref href=\"System.Object\"></xref> that represents the converted value.\n  overload: System.ComponentModel.TypeConverter.ConvertToString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Creates an instance of the type that this <xref href=\"System.ComponentModel.TypeConverter\"></xref> is associated with, using the specified context, given a set of property values for the object.\n  remarks: Use this method for objects that are immutable, but for which you want to provide changeable properties.\n  syntax:\n    content: public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: propertyValues\n      type: System.Collections.IDictionary\n      description: An <xref href=\"System.Collections.IDictionary\"></xref> of new property values.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> representing the given <xref href=\"System.Collections.IDictionary\"></xref>, or `null` if the object cannot be created. This method always returns `null`.\n  overload: System.ComponentModel.TypeConverter.CreateInstance*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  id: CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Re-creates an <xref href=\"System.Object\"></xref> given a set of property values for the object.\n  remarks: \"Use this method for objects that are immutable, but for which you want to provide changeable properties.  \\n  \\n The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.\"\n  syntax:\n    content: public object CreateInstance (System.Collections.IDictionary propertyValues);\n    parameters:\n    - id: propertyValues\n      type: System.Collections.IDictionary\n      description: An <xref href=\"System.Collections.IDictionary\"></xref> that represents a dictionary of new property values.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> representing the given <xref href=\"System.Collections.IDictionary\"></xref>, or `null` if the object cannot be created. This method always returns `null`.\n  overload: System.ComponentModel.TypeConverter.CreateInstance*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  id: GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns an exception to throw when a conversion cannot be performed.\n  syntax:\n    content: protected Exception GetConvertFromException (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert, or `null` if the object is not available.\n    return:\n      type: System.Exception\n      description: An <xref href=\"System.Exception\"></xref> that represents the exception to throw when a conversion cannot be performed.\n  overload: System.ComponentModel.TypeConverter.GetConvertFromException*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Automatically thrown by this method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  id: GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns an exception to throw when a conversion cannot be performed.\n  syntax:\n    content: protected Exception GetConvertToException (object value, Type destinationType);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to convert, or `null` if the object is not available.\n    - id: destinationType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type the conversion was trying to convert to.\n    return:\n      type: System.Exception\n      description: An <xref href=\"System.Exception\"></xref> that represents the exception to throw when a conversion cannot be performed.\n  overload: System.ComponentModel.TypeConverter.GetConvertToException*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Automatically thrown by this method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  id: GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether changing a value on this object requires a call to the <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> method to create a new value.\n  syntax:\n    content: public bool GetCreateInstanceSupported ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if changing a property on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether changing a value on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value, using the specified context.\n  remarks: As implemented in this class, this method always returns `false`.\n  syntax:\n    content: public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: '`true` if changing a property on this object requires a call to <xref href=\"System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\"></xref> to create a new value; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  id: GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a collection of properties for the type of array specified by the value parameter.\n  remarks: \"As implemented in this class, this method always returns `null`.  \\n  \\n By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.\"\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.\n  overload: System.ComponentModel.TypeConverter.GetProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a collection of properties for the type of array specified by the value parameter, using the specified context.\n  remarks: \"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \\n  \\n As implemented in this class, this method always returns `null`.  \\n  \\n By default, a type does not return properties. An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.\"\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: value\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.\n  overload: System.ComponentModel.TypeConverter.GetProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.\n  remarks: As implemented in this class, this method always returns `null`.\n  syntax:\n    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: value\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that specifies the type of array for which to get properties.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of type <xref href=\"System.Attribute\"></xref> that is used as a filter.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that are exposed for this data type, or `null` if there are no properties.\n  overload: System.ComponentModel.TypeConverter.GetProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether this object supports properties, using the specified context.\n  remarks: As implemented in this class, this method always returns `false`.\n  syntax:\n    content: public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.ComponentModel.TypeConverter.GetProperties(System.Object)\"></xref> should be called to find the properties of this object; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported\n  id: GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether this object supports properties.\n  remarks: As implemented in this class, this method always returns `false`.\n  syntax:\n    content: public bool GetPropertiesSupported ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.ComponentModel.TypeConverter.GetProperties(System.Object)\"></xref> should be called to find the properties of this object; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues\n  id: GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a collection of standard values from the default context for the data type this type converter is designed for.\n  remarks: As implemented in this class, this method always returns `null`.\n  syntax:\n    content: public System.Collections.ICollection GetStandardValues ();\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing a standard set of valid values, or `null` if the data type does not support a standard set of values.\n  overload: System.ComponentModel.TypeConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.\n  remarks: As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.\n  example:\n  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.\n  syntax:\n    content: public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that holds a standard set of valid values, or `null` if the data type does not support a standard set of values.\n  overload: System.ComponentModel.TypeConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  id: GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether the collection of standard values returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exclusive list.\n  remarks: \"As implemented in this class, this method always returns `false`.  \\n  \\n If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.\"\n  syntax:\n    content: public bool GetStandardValuesExclusive ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exhaustive list of possible values; `false` if other values are possible.'\n  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether the collection of standard values returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exclusive list of possible values, using the specified context.\n  remarks: \"As implemented in this class, this method always returns `false`.  \\n  \\n If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides. If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.\"\n  syntax:\n    content: public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> is an exhaustive list of possible values; `false` if other values are possible.'\n  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  id: GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether this object supports a standard set of values that can be picked from a list.\n  syntax:\n    content: public bool GetStandardValuesSupported ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> should be called to find a common set of values the object supports; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.\n  remarks: \"As implemented in this class, this method always returns `false`.  \\n  \\n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\"></xref> should be called to find a common set of values the object supports; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether the given value object is valid for this type and for the specified context.\n  remarks: \"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, so always check it. Also, properties on the context object can return `null`.  \\n  \\n Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods. If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.  \\n  \\n To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.  \\n  \\n```xml  \\n<configuration>  \\n  <appSettings>  \\n    <add key=\\\"UseCompatibleTypeConverterBehavior\\\" value=\\\"true\\\" />  \\n  </appSettings>  \\n</configuration>  \\n```\"\n  example:\n  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.\n  syntax:\n    content: public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to test for validity.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified value is valid for this object; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.IsValid*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.Object)\n  id: IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether the given value object is valid for this type.\n  remarks: \"Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods. If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.  \\n  \\n To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.  \\n  \\n```xml  \\n<configuration>  \\n  <appSettings>  \\n    <add key=\\\"UseCompatibleTypeConverterBehavior\\\" value=\\\"true\\\" />  \\n  </appSettings>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public bool IsValid (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to test for validity.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified value is valid for this object; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.IsValid*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  commentId: M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  id: SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  langs:\n  - csharp\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Sorts a collection of properties.\n  remarks: All properties in the collection that are not already in the array of names are added alphabetically to the end. If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.\n  syntax:\n    content: protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);\n    parameters:\n    - id: props\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that has the properties to sort.\n    - id: names\n      type: System.String[]\n      description: An array of names in the order you want the properties to appear in the collection.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> that contains the sorted properties.\n  overload: System.ComponentModel.TypeConverter.SortProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.TypeConverter.#ctor\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: TypeConverter()\n  nameWithType: TypeConverter.TypeConverter()\n  fullName: TypeConverter.TypeConverter()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.Attribute\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Attribute[]\n  parent: System\n  isExternal: false\n  name: Attribute[]\n  nameWithType: Attribute[]\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: System.Attribute\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeConverter.#ctor*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter.TypeConverter\n  fullName: TypeConverter.TypeConverter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: TypeConverter.CanConvertFrom\n  fullName: TypeConverter.CanConvertFrom\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.CanConvertTo*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: TypeConverter.CanConvertTo\n  fullName: TypeConverter.CanConvertTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.ConvertFrom*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: TypeConverter.ConvertFrom\n  fullName: TypeConverter.ConvertFrom\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString\n  nameWithType: TypeConverter.ConvertFromInvariantString\n  fullName: TypeConverter.ConvertFromInvariantString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.ConvertFromString*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString\n  nameWithType: TypeConverter.ConvertFromString\n  fullName: TypeConverter.ConvertFromString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.ConvertTo*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: TypeConverter.ConvertTo\n  fullName: TypeConverter.ConvertTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString\n  nameWithType: TypeConverter.ConvertToInvariantString\n  fullName: TypeConverter.ConvertToInvariantString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.ConvertToString*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString\n  nameWithType: TypeConverter.ConvertToString\n  fullName: TypeConverter.ConvertToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.CreateInstance*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance\n  nameWithType: TypeConverter.CreateInstance\n  fullName: TypeConverter.CreateInstance\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException\n  nameWithType: TypeConverter.GetConvertFromException\n  fullName: TypeConverter.GetConvertFromException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.GetConvertToException*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException\n  nameWithType: TypeConverter.GetConvertToException\n  fullName: TypeConverter.GetConvertToException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported\n  nameWithType: TypeConverter.GetCreateInstanceSupported\n  fullName: TypeConverter.GetCreateInstanceSupported\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.GetProperties*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties\n  nameWithType: TypeConverter.GetProperties\n  fullName: TypeConverter.GetProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported\n  nameWithType: TypeConverter.GetPropertiesSupported\n  fullName: TypeConverter.GetPropertiesSupported\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.GetStandardValues*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: TypeConverter.GetStandardValues\n  fullName: TypeConverter.GetStandardValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: TypeConverter.GetStandardValuesExclusive\n  fullName: TypeConverter.GetStandardValuesExclusive\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: TypeConverter.GetStandardValuesSupported\n  fullName: TypeConverter.GetStandardValuesSupported\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.IsValid*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid\n  nameWithType: TypeConverter.IsValid\n  fullName: TypeConverter.IsValid\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.ComponentModel.TypeConverter.SortProperties*\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties\n  nameWithType: TypeConverter.SortProperties\n  fullName: TypeConverter.SortProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}