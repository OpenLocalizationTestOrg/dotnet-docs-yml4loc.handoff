### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.IsolatedStorageContainment
  commentId: T:System.Security.Permissions.IsolatedStorageContainment
  id: IsolatedStorageContainment
  children:
  - System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser
  - System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine
  - System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser
  - System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser
  - System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine
  - System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser
  - System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser
  - System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine
  - System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser
  - System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser
  - System.Security.Permissions.IsolatedStorageContainment.None
  - System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage
  langs:
  - csharp
  name: IsolatedStorageContainment
  nameWithType: IsolatedStorageContainment
  fullName: System.Security.Permissions.IsolatedStorageContainment
  type: Enum
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Specifies the permitted use of isolated storage.
  remarks: "Isolated storage uses evidence to determine a unique storage area for use by an application or component. The identity of an assembly uniquely determines the root of a virtual file system for use by that assembly. Thus, rather than many applications and components sharing a common resource such as the file system or registry, each has its own file area inherently assigned to it.  \n  \n Four basic isolation scopes are used when assigning isolated storage:  \n  \n-   `User` - Code is always scoped according to the current user. The same assembly will receive different stores when being run by different users.  \n  \n-   `Machine` - Code is always scoped according to the machine. The same assembly will receive the same stores when being run by different users on the same machine.  \n  \n-   `Assembly` - Code is identified cryptographically by strong name (for example, Microsoft.Office.* or Microsoft.Office.Word), by publisher (based on public key), by URL (for example, http://www.fourthcoffee.com/process/grind.htm), by site, or by zone.  \n  \n-   `Domain` - Code is identified based on evidence associated with the application domain. Web application identity is derived from the site's URL, or by the Web page's URL, site, or zone. Local code identity is based on the application directory path.  \n  \n For definitions of URL, site, and zone, see <xref:System.Security.Permissions.UrlIdentityPermission>, <xref:System.Security.Permissions.SiteIdentityPermission>, and <xref:System.Security.Permissions.ZoneIdentityPermission>.  \n  \n These identities are grouped together, in which case the identities are applied one after another until the desired isolated storage is created. The valid groupings are User+Assembly and User+Assembly+Domain. This grouping of identities is useful in many different applications.  \n  \n If data is stored by domain, user, and assembly, the data is private in that only code in that assembly can access the data. The data store is also isolated by the application in which it runs, so that the assembly does not represent a potential leak by exposing data to other applications.  \n  \n Isolation by assembly and user could be used for user data that applies across multiple applications; for example, license information, or a user's personal information (name, authentication credentials, and so on) that is independent of an application.  \n  \n <xref:System.Security.Permissions.IsolatedStorageContainment> exposes flags that determine whether an application is allowed to use isolated storage and, if so, which identity combinations are allowed to use it. It also determines whether an application is allowed to store information in a location that can roam with a user (Windows Roaming User Profiles or Folder Redirection must be configured)."
  example:
  - "This example shows how to tell the CLR that code in this assembly requires the <xref:System.Security.Permissions.IsolatedStoragePermission> and also demonstrates how to write and read from isolated storage.  \n  \n [!code-cpp[IsolatedStoragePermissionAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsolatedStoragePermissionAttribute/cpp/IsolatedStoragePermissionAttribute.cpp#1)]\n [!code-csharp[IsolatedStoragePermissionAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsolatedStoragePermissionAttribute/CS/IsolatedStoragePermissionAttribute.cs#1)]\n [!code-vb[IsolatedStoragePermissionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsolatedStoragePermissionAttribute/VB/program.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum IsolatedStorageContainment
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser
  id: AdministerIsolatedStorageByUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: AdministerIsolatedStorageByUser
  nameWithType: IsolatedStorageContainment.AdministerIsolatedStorageByUser
  fullName: IsolatedStorageContainment.AdministerIsolatedStorageByUser
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Unlimited administration ability for the user store. Allows browsing and deletion of the entire user store, but not read access other than the user's own domain/assembly identity.
  syntax:
    content: AdministerIsolatedStorageByUser
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine
  id: ApplicationIsolationByMachine
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: ApplicationIsolationByMachine
  nameWithType: IsolatedStorageContainment.ApplicationIsolationByMachine
  fullName: IsolatedStorageContainment.ApplicationIsolationByMachine
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by computer and then by application. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.
  syntax:
    content: ApplicationIsolationByMachine
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser
  id: ApplicationIsolationByRoamingUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: ApplicationIsolationByRoamingUser
  nameWithType: IsolatedStorageContainment.ApplicationIsolationByRoamingUser
  fullName: IsolatedStorageContainment.ApplicationIsolationByRoamingUser
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by user and then by application evidence. Storage will roam if Windows user data roaming is enabled. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.
  syntax:
    content: ApplicationIsolationByRoamingUser
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser
  id: ApplicationIsolationByUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: ApplicationIsolationByUser
  nameWithType: IsolatedStorageContainment.ApplicationIsolationByUser
  fullName: IsolatedStorageContainment.ApplicationIsolationByUser
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by user and then by application. Storage is also isolated by computer. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.
  syntax:
    content: ApplicationIsolationByUser
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine
  id: AssemblyIsolationByMachine
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: AssemblyIsolationByMachine
  nameWithType: IsolatedStorageContainment.AssemblyIsolationByMachine
  fullName: IsolatedStorageContainment.AssemblyIsolationByMachine
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by computer and then by code assembly. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.
  syntax:
    content: AssemblyIsolationByMachine
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser
  id: AssemblyIsolationByRoamingUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: AssemblyIsolationByRoamingUser
  nameWithType: IsolatedStorageContainment.AssemblyIsolationByRoamingUser
  fullName: IsolatedStorageContainment.AssemblyIsolationByRoamingUser
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by user and then by assembly evidence. Storage will roam if Windows user data roaming is enabled. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.
  syntax:
    content: AssemblyIsolationByRoamingUser
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser
  id: AssemblyIsolationByUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: AssemblyIsolationByUser
  nameWithType: IsolatedStorageContainment.AssemblyIsolationByUser
  fullName: IsolatedStorageContainment.AssemblyIsolationByUser
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by user and then by code assembly. Storage is also isolated by computer. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.
  syntax:
    content: AssemblyIsolationByUser
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine
  id: DomainIsolationByMachine
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: DomainIsolationByMachine
  nameWithType: IsolatedStorageContainment.DomainIsolationByMachine
  fullName: IsolatedStorageContainment.DomainIsolationByMachine
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by computer and then by domain and assembly. Data can only be accessed within the context of the same application and only when run on the same computer. This is helpful when a third-party assembly wants to keep a private data store.
  syntax:
    content: DomainIsolationByMachine
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser
  id: DomainIsolationByRoamingUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: DomainIsolationByRoamingUser
  nameWithType: IsolatedStorageContainment.DomainIsolationByRoamingUser
  fullName: IsolatedStorageContainment.DomainIsolationByRoamingUser
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by user and then by domain and assembly. Storage will roam if Windows user data roaming is enabled. Data can only be accessed within the context of the same application and only when run by the same user. This is helpful when a third-party assembly wants to keep a private data store.
  syntax:
    content: DomainIsolationByRoamingUser
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser
  id: DomainIsolationByUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: DomainIsolationByUser
  nameWithType: IsolatedStorageContainment.DomainIsolationByUser
  fullName: IsolatedStorageContainment.DomainIsolationByUser
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Storage is isolated first by user and then by domain and assembly. Storage is also isolated by computer. Data can only be accessed within the context of the same application and only when run by the same user. This is helpful when a third-party assembly wants to keep a private data store.
  syntax:
    content: DomainIsolationByUser
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.None
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.None
  id: None
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: None
  nameWithType: IsolatedStorageContainment.None
  fullName: IsolatedStorageContainment.None
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Use of isolated storage is not allowed.
  syntax:
    content: None
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
- uid: System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage
  commentId: F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage
  id: UnrestrictedIsolatedStorage
  parent: System.Security.Permissions.IsolatedStorageContainment
  langs:
  - csharp
  name: UnrestrictedIsolatedStorage
  nameWithType: IsolatedStorageContainment.UnrestrictedIsolatedStorage
  fullName: IsolatedStorageContainment.UnrestrictedIsolatedStorage
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Use of isolated storage is allowed without restriction. Code has full access to any part of the user store, regardless of the identity of the domain or assembly. This use of isolated storage includes the ability to enumerate the contents of the isolated storage data store.
  syntax:
    content: UnrestrictedIsolatedStorage
    return:
      type: System.Security.Permissions.IsolatedStorageContainment
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/IsolatedStorageContainment.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: AdministerIsolatedStorageByUser
  nameWithType: IsolatedStorageContainment.AdministerIsolatedStorageByUser
  fullName: IsolatedStorageContainment.AdministerIsolatedStorageByUser
- uid: System.Security.Permissions.IsolatedStorageContainment
  parent: System.Security.Permissions
  isExternal: false
  name: IsolatedStorageContainment
  nameWithType: IsolatedStorageContainment
  fullName: System.Security.Permissions.IsolatedStorageContainment
- uid: System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: ApplicationIsolationByMachine
  nameWithType: IsolatedStorageContainment.ApplicationIsolationByMachine
  fullName: IsolatedStorageContainment.ApplicationIsolationByMachine
- uid: System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: ApplicationIsolationByRoamingUser
  nameWithType: IsolatedStorageContainment.ApplicationIsolationByRoamingUser
  fullName: IsolatedStorageContainment.ApplicationIsolationByRoamingUser
- uid: System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: ApplicationIsolationByUser
  nameWithType: IsolatedStorageContainment.ApplicationIsolationByUser
  fullName: IsolatedStorageContainment.ApplicationIsolationByUser
- uid: System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: AssemblyIsolationByMachine
  nameWithType: IsolatedStorageContainment.AssemblyIsolationByMachine
  fullName: IsolatedStorageContainment.AssemblyIsolationByMachine
- uid: System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: AssemblyIsolationByRoamingUser
  nameWithType: IsolatedStorageContainment.AssemblyIsolationByRoamingUser
  fullName: IsolatedStorageContainment.AssemblyIsolationByRoamingUser
- uid: System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: AssemblyIsolationByUser
  nameWithType: IsolatedStorageContainment.AssemblyIsolationByUser
  fullName: IsolatedStorageContainment.AssemblyIsolationByUser
- uid: System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: DomainIsolationByMachine
  nameWithType: IsolatedStorageContainment.DomainIsolationByMachine
  fullName: IsolatedStorageContainment.DomainIsolationByMachine
- uid: System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: DomainIsolationByRoamingUser
  nameWithType: IsolatedStorageContainment.DomainIsolationByRoamingUser
  fullName: IsolatedStorageContainment.DomainIsolationByRoamingUser
- uid: System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: DomainIsolationByUser
  nameWithType: IsolatedStorageContainment.DomainIsolationByUser
  fullName: IsolatedStorageContainment.DomainIsolationByUser
- uid: System.Security.Permissions.IsolatedStorageContainment.None
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: None
  nameWithType: IsolatedStorageContainment.None
  fullName: IsolatedStorageContainment.None
- uid: System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage
  parent: System.Security.Permissions.IsolatedStorageContainment
  isExternal: false
  name: UnrestrictedIsolatedStorage
  nameWithType: IsolatedStorageContainment.UnrestrictedIsolatedStorage
  fullName: IsolatedStorageContainment.UnrestrictedIsolatedStorage
