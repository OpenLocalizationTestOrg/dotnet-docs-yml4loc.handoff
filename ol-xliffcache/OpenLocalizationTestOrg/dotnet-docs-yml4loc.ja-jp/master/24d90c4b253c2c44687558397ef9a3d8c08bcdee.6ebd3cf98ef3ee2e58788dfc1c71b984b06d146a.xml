{"nodes":[{"content":"Contains activities to be executed by the workflow runtime in an exception handling block.","nodes":[{"pos":[0,90],"content":"Contains activities to be executed by the workflow runtime in an exception handling block.","nodes":[{"content":"Contains activities to be executed by the workflow runtime in an exception handling block.","pos":[0,90]}]}],"pos":[1178,1269],"yaml":true},{"content":"> [!NOTE]\n>  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.","nodes":[{"pos":[2,349],"content":"[!NOTE]\n The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.TryCatch.Finally%2A&gt;</ph> activity member of a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph> activity that is the child of a <ph id=\"ph3\">&lt;xref:System.Activities.Statements.TransactionScope&gt;</ph> will not execute if an unhandled exception propagates past the <ph id=\"ph4\">&lt;xref:System.Activities.Statements.TransactionScope&gt;</ph> boundary.","pos":[9,345],"source":" The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary."}]}],"pos":[1280,1642],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.TryCatch.#ctor\"></xref> class.","nodes":[{"pos":[0,101],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TryCatch.#ctor\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.TryCatch.#ctor\"></xref> class."}],"pos":[4082,4184],"yaml":true},{"content":"The collection of `Catch` elements to be checked when the <xref href=\"System.Activities.Statements.TryCatch.Try\"></xref> activity throws an exception.","nodes":[{"pos":[0,150],"content":"The collection of <ph id=\"ph1\">`Catch`</ph> elements to be checked when the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TryCatch.Try\"&gt;&lt;/xref&gt;</ph> activity throws an exception.","source":"The collection of `Catch` elements to be checked when the <xref href=\"System.Activities.Statements.TryCatch.Try\"></xref> activity throws an exception."}],"pos":[8187,8338],"yaml":true},{"content":"Catches are evaluated in the order in which they are added to the collection. If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.","nodes":[{"pos":[0,378],"content":"Catches are evaluated in the order in which they are added to the collection. If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.","nodes":[{"content":"Catches are evaluated in the order in which they are added to the collection. If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.","pos":[0,378],"nodes":[{"content":"Catches are evaluated in the order in which they are added to the collection.","pos":[0,77]},{"content":"If an exact match for the exception type is found, the matching <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Catch&gt;</ph> activity is executed.","pos":[78,205],"source":" If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed."},{"content":"If no exact match is found, the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Catch&gt;</ph> with the closest matching <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Catch.ExceptionType%2A&gt;</ph> is executed.","pos":[207,378],"source":"  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed."}]}]}],"pos":[8349,8728],"yaml":true,"extradata":"MT"},{"content":"The catch collection.","nodes":[{"pos":[0,21],"content":"The catch collection.","nodes":[{"content":"The catch collection.","pos":[0,21]}]}],"pos":[9675,9697],"yaml":true},{"content":"The activity to be executed when the <xref href=\"System.Activities.Statements.TryCatch.Try\"></xref> and any necessary activities in the <xref href=\"System.Activities.Statements.TryCatch.Catches\"></xref> collection complete execution.","nodes":[{"pos":[0,233],"content":"The activity to be executed when the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TryCatch.Try\"&gt;&lt;/xref&gt;</ph> and any necessary activities in the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TryCatch.Catches\"&gt;&lt;/xref&gt;</ph> collection complete execution.","source":"The activity to be executed when the <xref href=\"System.Activities.Statements.TryCatch.Try\"></xref> and any necessary activities in the <xref href=\"System.Activities.Statements.TryCatch.Catches\"></xref> collection complete execution."}],"pos":[12041,12275],"yaml":true},{"content":"The activity that represents the <xref href=\"System.Activities.Statements.TryCatch.Finally\"></xref> logic.","nodes":[{"pos":[0,106],"content":"The activity that represents the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TryCatch.Finally\"&gt;&lt;/xref&gt;</ph> logic.","source":"The activity that represents the <xref href=\"System.Activities.Statements.TryCatch.Finally\"></xref> logic."}],"pos":[12880,12987],"yaml":true},{"content":"The activity first executed when the <xref href=\"System.Activities.Statements.TryCatch\"></xref> executes.","nodes":[{"pos":[0,105],"content":"The activity first executed when the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TryCatch\"&gt;&lt;/xref&gt;</ph> executes.","source":"The activity first executed when the <xref href=\"System.Activities.Statements.TryCatch\"></xref> executes."}],"pos":[15839,15945],"yaml":true},{"content":"The activity.","nodes":[{"pos":[0,13],"content":"The activity.","nodes":[{"content":"The activity.","pos":[0,13]}]}],"pos":[16496,16510],"yaml":true},{"content":"The collection of contained variables.","nodes":[{"pos":[0,38],"content":"The collection of contained variables.","nodes":[{"content":"The collection of contained variables.","pos":[0,38]}]}],"pos":[19048,19087],"yaml":true},{"content":"The collection of variables.","nodes":[{"pos":[0,28],"content":"The collection of variables.","nodes":[{"content":"The collection of variables.","pos":[0,28]}]}],"pos":[19319,19348],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.TryCatch\n  commentId: T:System.Activities.Statements.TryCatch\n  id: TryCatch\n  children:\n  - System.Activities.Statements.TryCatch.#ctor\n  - System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TryCatch.Catches\n  - System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TryCatch.Finally\n  - System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.TryCatch.Try\n  - System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Activities.Statements.TryCatch.Variables\n  langs:\n  - csharp\n  name: TryCatch\n  nameWithType: TryCatch\n  fullName: System.Activities.Statements.TryCatch\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Contains activities to be executed by the workflow runtime in an exception handling block.\n  remarks: >-\n    > [!NOTE]\n\n    >  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.\n  example:\n  - The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.\n  syntax:\n    content: 'public sealed class TryCatch : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TryCatch.#ctor\n  commentId: M:System.Activities.Statements.TryCatch.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: TryCatch()\n  nameWithType: TryCatch.TryCatch()\n  fullName: TryCatch.TryCatch()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.TryCatch.#ctor\"></xref> class.\n  remarks: ''\n  example:\n  - The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.\n  syntax:\n    content: public TryCatch ();\n    parameters: []\n  overload: System.Activities.Statements.TryCatch.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TryCatch.CacheMetadata(NativeActivityMetadata)\n  fullName: TryCatch.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.TryCatch.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: TryCatch.Cancel(NativeActivityContext)\n  fullName: TryCatch.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.TryCatch.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Catches\n  commentId: P:System.Activities.Statements.TryCatch.Catches\n  id: Catches\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Catches\n  nameWithType: TryCatch.Catches\n  fullName: TryCatch.Catches\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The collection of `Catch` elements to be checked when the <xref href=\"System.Activities.Statements.TryCatch.Try\"></xref> activity throws an exception.\n  remarks: Catches are evaluated in the order in which they are added to the collection. If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.  If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.\n  example:\n  - \"The following code sample demonstrates setting the Catches property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.  \\n  \\n Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.  To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"Try\")]\n\n      public System.Collections.ObjectModel.Collection<System.Activities.Statements.Catch> Catches { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.Catch}\n      description: The catch collection.\n  overload: System.Activities.Statements.TryCatch.Catches*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: TryCatch.Execute(NativeActivityContext)\n  fullName: TryCatch.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.TryCatch.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Finally\n  commentId: P:System.Activities.Statements.TryCatch.Finally\n  id: Finally\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Finally\n  nameWithType: TryCatch.Finally\n  fullName: TryCatch.Finally\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The activity to be executed when the <xref href=\"System.Activities.Statements.TryCatch.Try\"></xref> and any necessary activities in the <xref href=\"System.Activities.Statements.TryCatch.Catches\"></xref> collection complete execution.\n  remarks: ''\n  example:\n  - The following code sample demonstrates setting the <xref:System.Activities.Statements.TryCatch.Finally%2A> property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"Catches\")]\n\n      public System.Activities.Activity Finally { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that represents the <xref href=\"System.Activities.Statements.TryCatch.Finally\"></xref> logic.\n  overload: System.Activities.Statements.TryCatch.Finally*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  commentId: M:System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: ''\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: ''\n  overload: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Try\n  commentId: P:System.Activities.Statements.TryCatch.Try\n  id: Try\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Try\n  nameWithType: TryCatch.Try\n  fullName: TryCatch.Try\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The activity first executed when the <xref href=\"System.Activities.Statements.TryCatch\"></xref> executes.\n  remarks: ''\n  example:\n  - The following code sample demonstrates setting the Try property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"Variables\")]\n\n      public System.Activities.Activity Try { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity.\n  overload: System.Activities.Statements.TryCatch.Try*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  commentId: M:System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: TryCatch.UpdateInstance(NativeActivityUpdateContext)\n  fullName: TryCatch.UpdateInstance(NativeActivityUpdateContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);\n    parameters:\n    - id: updateContext\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n      description: ''\n  overload: System.Activities.Statements.TryCatch.UpdateInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Variables\n  commentId: P:System.Activities.Statements.TryCatch.Variables\n  id: Variables\n  parent: System.Activities.Statements.TryCatch\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: TryCatch.Variables\n  fullName: TryCatch.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The collection of contained variables.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The collection of variables.\n  overload: System.Activities.Statements.TryCatch.Variables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.TryCatch.#ctor\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: TryCatch()\n  nameWithType: TryCatch.TryCatch()\n  fullName: TryCatch.TryCatch()\n- uid: System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TryCatch.CacheMetadata(NativeActivityMetadata)\n  fullName: TryCatch.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: TryCatch.Cancel(NativeActivityContext)\n  fullName: TryCatch.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.TryCatch.Catches\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Catches\n  nameWithType: TryCatch.Catches\n  fullName: TryCatch.Catches\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Activities.Statements.Catch\n  name: Catch\n  nameWithType: Catch\n  fullName: System.Activities.Statements.Catch\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.Catch}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Catch>\n  nameWithType: Collection<Catch>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.Catch>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Statements.Catch\n    name: Catch\n    nameWithType: Catch\n    fullName: System.Activities.Statements.Catch\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: TryCatch.Execute(NativeActivityContext)\n  fullName: TryCatch.Execute(NativeActivityContext)\n- uid: System.Activities.Statements.TryCatch.Finally\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Finally\n  nameWithType: TryCatch.Finally\n  fullName: TryCatch.Finally\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: TryCatch.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Statements.TryCatch.Try\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Try\n  nameWithType: TryCatch.Try\n  fullName: TryCatch.Try\n- uid: System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: TryCatch.UpdateInstance(NativeActivityUpdateContext)\n  fullName: TryCatch.UpdateInstance(NativeActivityUpdateContext)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateContext\n  nameWithType: NativeActivityUpdateContext\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n- uid: System.Activities.Statements.TryCatch.Variables\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Variables\n  nameWithType: TryCatch.Variables\n  fullName: TryCatch.Variables\n- uid: System.Activities.Variable\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: System.Activities.Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TryCatch.#ctor*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: TryCatch\n  nameWithType: TryCatch.TryCatch\n  fullName: TryCatch.TryCatch\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.CacheMetadata*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: TryCatch.CacheMetadata\n  fullName: TryCatch.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Cancel*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Cancel\n  nameWithType: TryCatch.Cancel\n  fullName: TryCatch.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Catches*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Catches\n  nameWithType: TryCatch.Catches\n  fullName: TryCatch.Catches\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Execute*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Execute\n  nameWithType: TryCatch.Execute\n  fullName: TryCatch.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Finally*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Finally\n  nameWithType: TryCatch.Finally\n  fullName: TryCatch.Finally\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: TryCatch.OnCreateDynamicUpdateMap\n  fullName: TryCatch.OnCreateDynamicUpdateMap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Try*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Try\n  nameWithType: TryCatch.Try\n  fullName: TryCatch.Try\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.UpdateInstance*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: UpdateInstance\n  nameWithType: TryCatch.UpdateInstance\n  fullName: TryCatch.UpdateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Activities.Statements.TryCatch.Variables*\n  parent: System.Activities.Statements.TryCatch\n  isExternal: false\n  name: Variables\n  nameWithType: TryCatch.Variables\n  fullName: TryCatch.Variables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TryCatch.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n"}