### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlFileStream
  commentId: T:System.Data.SqlTypes.SqlFileStream
  id: SqlFileStream
  children:
  - System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  - System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  - System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Data.SqlTypes.SqlFileStream.CanRead
  - System.Data.SqlTypes.SqlFileStream.CanSeek
  - System.Data.SqlTypes.SqlFileStream.CanTimeout
  - System.Data.SqlTypes.SqlFileStream.CanWrite
  - System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  - System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  - System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  - System.Data.SqlTypes.SqlFileStream.Finalize
  - System.Data.SqlTypes.SqlFileStream.Flush
  - System.Data.SqlTypes.SqlFileStream.Length
  - System.Data.SqlTypes.SqlFileStream.Name
  - System.Data.SqlTypes.SqlFileStream.Position
  - System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlFileStream.ReadByte
  - System.Data.SqlTypes.SqlFileStream.ReadTimeout
  - System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  - System.Data.SqlTypes.SqlFileStream.TransactionContext
  - System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  - System.Data.SqlTypes.SqlFileStream.WriteTimeout
  langs:
  - csharp
  name: SqlFileStream
  nameWithType: SqlFileStream
  fullName: System.Data.SqlTypes.SqlFileStream
  type: Class
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Exposes SQL Server data that is stored with the FILESTREAM column attribute as a sequence of bytes.
  remarks: "The <xref:System.Data.SqlTypes.SqlFileStream> class is used to work with `varbinary(max)` data stored with the FILESTREAM attribute in a SQL Server 2008 database. You must install the .NET Framework 3.5 SP1 (or later) to use <xref:System.Data.SqlTypes.SqlFileStream> to work with FILESTREAM data.  \n  \n Specifying the FILESTREAM attribute on a `varbinary(max)` column causes SQL Server to store the data in the local NTFS file system instead of in the database file. Transact-SQL statements provide data manipulation capabilities within the server, and Win32 file system interfaces provide streaming access to the data.  \n  \n> [!NOTE]\n>  Individual files stored in a FILESTREAM column cannot be opened directly from the NTFS file system. Streaming FILESTREAM data works only in the context of a SQL Server transaction.  \n  \n The <xref:System.Data.SqlTypes.SqlFileStream> class is derived from the <xref:System.IO.Stream> class, which represents an abstraction of a sequence of bytes from some arbitrary data source such as a file or a block of memory. You can read from a FILESTREAM by transferring data from a stream into a data structure such as an array of bytes. You can write to a FILESTREAM by transferring the data from a data structure into a stream. You can also seek within the stream, which allows you to query and modify data at the current position within the stream.  \n  \n For conceptual documentation and code examples, see [FILESTREAM Data](~/docs/framework/data/adonet/sql/filestream-data.md).  \n  \n For documentation about setting up and configuring FILESTREAM data on SQL Server,  see [Designing and Implementing FILESTREAM Storage](http://go.microsoft.com/fwlink/?LinkId=121499) in SQL Server 2008 Books Online."
  syntax:
    content: 'public sealed class SqlFileStream : System.IO.Stream'
  inheritance:
  - System.Object
  - System.IO.Stream
  implements: []
  inheritedMembers:
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.Stream.Null
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  commentId: M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  id: '#ctor(System.String,System.Byte[],System.IO.FileAccess)'
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SqlFileStream(String, Byte[], FileAccess)
  nameWithType: SqlFileStream.SqlFileStream(String, Byte[], FileAccess)
  fullName: SqlFileStream.SqlFileStream(String, Byte[], FileAccess)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlFileStream"></xref> class.
  remarks: If an exception is thrown, any open transactions should be rolled back. Otherwise, data loss can occur.
  syntax:
    content: public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: The logical path to the file. The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.
    - id: transactionContext
      type: System.Byte[]
      description: The transaction context for the `SqlFileStream` object. Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.
    - id: access
      type: System.IO.FileAccess
      description: "The access mode to use when opening the file. Supported <xref href=\"System.IO.FileAccess\"></xref> enumeration values are <xref href=\"System.IO.FileAccess.Read\"></xref>, <xref href=\"System.IO.FileAccess.Write\"></xref>, and <xref href=\"System.IO.FileAccess.ReadWrite\"></xref>.  \n  \n When using `FileAccess.Read`, the `SqlFileStream` object can be used to read all of the existing data.  \n  \n When using `FileAccess.Write`, `SqlFileStream` points to a zero byte file. Existing data will be overwritten when the object is closed and the transaction is committed.  \n  \n When using `FileAccess.ReadWrite`, the `SqlFileStream` points to a file which has all the existing data in it. The handle is positioned at the beginning of the file. You can use one of the `System.IO``Seek` methods to move the handle position within the file to write or append new data."
  overload: System.Data.SqlTypes.SqlFileStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>path</code> is a null reference, or <code>transactionContext</code> is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>path</code> is an empty string (\"\"), contains only white space, or contains one or more invalid characters.  \n  \n <code>path</code> begins with \"\\\\\\\\.\\\\\", for example \"\\\\\\\\.\\PHYSICALDRIVE0 \".  \n  \n The handle returned by the call to NTCreateFile is not of type FILE_TYPE_DISK.  \n  \n <code>options</code> contains an unsupported value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The file cannot be found.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurred.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The specified <code>path</code> is invalid, such as being on an unmapped drive.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The access requested is not permitted by the operating system for the specified path. This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  commentId: M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  id: '#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)'
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SqlFileStream(String, Byte[], FileAccess, FileOptions, Int64)
  nameWithType: SqlFileStream.SqlFileStream(String, Byte[], FileAccess, FileOptions, Int64)
  fullName: SqlFileStream.SqlFileStream(String, Byte[], FileAccess, FileOptions, Int64)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlFileStream"></xref> class.
  remarks: If an exception is thrown, any open transactions should be rolled back. Otherwise, data loss can occur.
  syntax:
    content: public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access, System.IO.FileOptions options, long allocationSize);
    parameters:
    - id: path
      type: System.String
      description: The logical path to the file. The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.
    - id: transactionContext
      type: System.Byte[]
      description: The transaction context for the `SqlFileStream` object. When set to null, an implicit transaction will be used for the `SqlFileStream` object. Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.
    - id: access
      type: System.IO.FileAccess
      description: "The access mode to use when opening the file. Supported <xref href=\"System.IO.FileAccess\"></xref> enumeration values are <xref href=\"System.IO.FileAccess.Read\"></xref>, <xref href=\"System.IO.FileAccess.Write\"></xref>, and <xref href=\"System.IO.FileAccess.ReadWrite\"></xref>.  \n  \n When using `FileAccess.Read`, the `SqlFileStream` object can be used to read all of the existing data.  \n  \n When using `FileAccess.Write`, `SqlFileStream` points to a zero byte file. Existing data will be overwritten when the object is closed and the transaction is committed.  \n  \n When using `FileAccess.ReadWrite`, the `SqlFileStream` points to a file which has all the existing data in it. The handle is positioned at the beginning of the file. You can use one of the `System.IO``Seek` methods to move the handle position within the file to write or append new data."
    - id: options
      type: System.IO.FileOptions
      description: Specifies the option to use while opening the file. Supported <xref href="System.IO.FileOptions"></xref> values are <xref href="System.IO.FileOptions.Asynchronous"></xref>, <xref href="System.IO.FileOptions.WriteThrough"></xref>, <xref href="System.IO.FileOptions.SequentialScan"></xref>, and <xref href="System.IO.FileOptions.RandomAccess"></xref>.
    - id: allocationSize
      type: System.Int64
      description: The allocation size to use while creating a file. If set to 0, the default value is used.
  overload: System.Data.SqlTypes.SqlFileStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>path</code> is a null reference, or <code>transactionContext</code> is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>path</code> is an empty string (\"\"), contains only white space, or contains one or more invalid characters.  \n  \n <code>path</code> begins with \"\\\\\\\\.\\\\\", for example \"\\\\\\\\.\\PHYSICALDRIVE0 \".  \n  \n The handle returned by call to NTCreateFile is not of type FILE_TYPE_DISK.  \n  \n <code>options</code> contains an unsupported value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The file cannot be found.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurred.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The specified <code>path</code> is invalid, such as being on an unmapped drive.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The access requested is not permitted by the operating system for the specified path. This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: SqlFileStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: SqlFileStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Begins an asynchronous read operation.
  remarks: Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to read the data into.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>buffer</code> at which to begin writing data read from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the read is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous read request from other requests
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that represents the asynchronous read, which could still be pending.
  overload: System.Data.SqlTypes.SqlFileStream.BeginRead*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Reading data is not supported on the stream.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: SqlFileStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: SqlFileStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Begins an asynchronous write operation.
  remarks: Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>buffer</code> from which to begin writing.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the write is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous write request from other requests.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that represents the asynchronous write, which could still be pending.
  overload: System.Data.SqlTypes.SqlFileStream.BeginWrite*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Writing data is not supported on the stream.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.CanRead
  commentId: P:System.Data.SqlTypes.SqlFileStream.CanRead
  id: CanRead
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: SqlFileStream.CanRead
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets a value indicating whether the current stream supports reading.
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: '`true` if the current stream supports reading; otherwise, `false`.'
  overload: System.Data.SqlTypes.SqlFileStream.CanRead*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek
  commentId: P:System.Data.SqlTypes.SqlFileStream.CanSeek
  id: CanSeek
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: SqlFileStream.CanSeek
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets a value indicating whether the current stream supports seeking.
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: '`true` if the current stream supports seeking; otherwise, `false`.'
  overload: System.Data.SqlTypes.SqlFileStream.CanSeek*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout
  commentId: P:System.Data.SqlTypes.SqlFileStream.CanTimeout
  id: CanTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: SqlFileStream.CanTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets a value indicating whether the current stream can time out.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: '`true` if the current stream can time out; otherwise, `false`.'
  overload: System.Data.SqlTypes.SqlFileStream.CanTimeout*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite
  commentId: P:System.Data.SqlTypes.SqlFileStream.CanWrite
  id: CanWrite
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: SqlFileStream.CanWrite
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets a value indicating whether the current stream supports writing.
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: '`true` if the current stream supports writing; otherwise, `false`.'
  overload: System.Data.SqlTypes.SqlFileStream.CanWrite*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  commentId: M:System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlFileStream.Dispose(Boolean)
  fullName: SqlFileStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overload: System.Data.SqlTypes.SqlFileStream.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  commentId: M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SqlFileStream.EndRead(IAsyncResult)
  fullName: SqlFileStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Waits for the pending asynchronous read to complete.
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
    return:
      type: System.Int32
      description: The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.
  overload: System.Data.SqlTypes.SqlFileStream.EndRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.IAsyncResult"></xref> object did not come from the corresponding `BeginRead` method.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  commentId: M:System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SqlFileStream.EndWrite(IAsyncResult)
  fullName: SqlFileStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Ends an asynchronous write operation.
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: A reference to the outstanding asynchronous I/O request.
  overload: System.Data.SqlTypes.SqlFileStream.EndWrite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.IAsyncResult"></xref> object did not come from the corresponding `BeginWrite` method.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Finalize
  commentId: M:System.Data.SqlTypes.SqlFileStream.Finalize
  id: Finalize
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: SqlFileStream.Finalize()
  fullName: SqlFileStream.Finalize()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <xref href="System.Data.SqlTypes.SqlFileStream"></xref>.
  syntax:
    content: ~SqlFileStream ();
    parameters: []
  overload: System.Data.SqlTypes.SqlFileStream.Finalize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Flush
  commentId: M:System.Data.SqlTypes.SqlFileStream.Flush
  id: Flush
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SqlFileStream.Flush()
  fullName: SqlFileStream.Flush()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: clears all buffers for this stream and causes any buffered data to be written to the underlying device.
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.SqlTypes.SqlFileStream.Flush*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Length
  commentId: P:System.Data.SqlTypes.SqlFileStream.Length
  id: Length
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: SqlFileStream.Length
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets a value indicating the length of the current stream in bytes.
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: An <xref href="System.Int64"></xref> indicating the length of the current stream in bytes.
  overload: System.Data.SqlTypes.SqlFileStream.Length*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Name
  commentId: P:System.Data.SqlTypes.SqlFileStream.Name
  id: Name
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: SqlFileStream.Name
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets the logical path of the <xref href="System.Data.SqlTypes.SqlFileStream"></xref> passed to the constructor.
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: A string value indicating the name of the <xref href="System.Data.SqlTypes.SqlFileStream"></xref>.
  overload: System.Data.SqlTypes.SqlFileStream.Name*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Position
  commentId: P:System.Data.SqlTypes.SqlFileStream.Position
  id: Position
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: SqlFileStream.Position
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets or sets the position within the current stream.
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: The current position within the <xref href="System.Data.SqlTypes.SqlFileStream"></xref>.
  overload: System.Data.SqlTypes.SqlFileStream.Position*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Read(Byte[], Int32, Int32)
  nameWithType: SqlFileStream.Read(Byte[], Int32, Int32)
  fullName: SqlFileStream.Read(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
  remarks: Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports writing.
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin storing the data read from the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to be read from the current stream.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
  overload: System.Data.SqlTypes.SqlFileStream.Read*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The object does not support reading of data.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte
  commentId: M:System.Data.SqlTypes.SqlFileStream.ReadByte
  id: ReadByte
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SqlFileStream.ReadByte()
  fullName: SqlFileStream.ReadByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
  remarks: Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: The unsigned byte cast to an <xref href="System.Int32"></xref>, or -1 if at the end of the stream.
  overload: System.Data.SqlTypes.SqlFileStream.ReadByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The object does not support reading of data.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  commentId: P:System.Data.SqlTypes.SqlFileStream.ReadTimeout
  id: ReadTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: SqlFileStream.ReadTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: A value, in milliseconds, that determines how long the stream will attempt to read before timing out.
  overload: System.Data.SqlTypes.SqlFileStream.ReadTimeout*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Seek(Int64, SeekOrigin)
  nameWithType: SqlFileStream.Seek(Int64, SeekOrigin)
  fullName: SqlFileStream.Seek(Int64, SeekOrigin)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Sets the position within the current stream.
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: A byte offset relative to the <code>origin</code> parameter
    - id: origin
      type: System.IO.SeekOrigin
      description: A value of type <xref href="System.IO.SeekOrigin"></xref> indicating the reference point used to obtain the new position
    return:
      type: System.Int64
      description: The new position within the current stream.
  overload: System.Data.SqlTypes.SqlFileStream.Seek*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  commentId: M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SqlFileStream.SetLength(Int64)
  fullName: SqlFileStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Sets the length of the current stream.
  remarks: Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The desired length of the current stream in bytes.
  overload: System.Data.SqlTypes.SqlFileStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The object does not support reading of data.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext
  commentId: P:System.Data.SqlTypes.SqlFileStream.TransactionContext
  id: TransactionContext
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: SqlFileStream.TransactionContext
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets or sets the transaction context for this <xref href="System.Data.SqlTypes.SqlFileStream"></xref> object.
  syntax:
    content: public byte[] TransactionContext { get; }
    return:
      type: System.Byte[]
      description: The <code>transactionContext</code> array that was passed to the constructor for this <xref href="System.Data.SqlTypes.SqlFileStream"></xref> object.
  overload: System.Data.SqlTypes.SqlFileStream.TransactionContext*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Write(Byte[], Int32, Int32)
  nameWithType: SqlFileStream.Write(Byte[], Int32, Int32)
  fullName: SqlFileStream.Write(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
  remarks: Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes. This method copies <code>count</code> bytes from <code>buffer</code> to the current stream.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the current stream.
  overload: System.Data.SqlTypes.SqlFileStream.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The object does not support writing of data.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  commentId: M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: SqlFileStream.WriteByte(Byte)
  fullName: SqlFileStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Writes a byte to the current position in the stream and advances the position within the stream by one byte.
  remarks: Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: The byte to write to the stream.
  overload: System.Data.SqlTypes.SqlFileStream.WriteByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The object does not support writing of data.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  commentId: P:System.Data.SqlTypes.SqlFileStream.WriteTimeout
  id: WriteTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: SqlFileStream.WriteTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: A value, in milliseconds, that determines how long the stream will attempt to write before timing out.
  overload: System.Data.SqlTypes.SqlFileStream.WriteTimeout*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.IO.FileNotFoundException
  parent: System.IO
  isExternal: false
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.IO.DirectoryNotFoundException
  parent: System.IO
  isExternal: false
  name: DirectoryNotFoundException
  nameWithType: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream(String, Byte[], FileAccess)
  nameWithType: SqlFileStream.SqlFileStream(String, Byte[], FileAccess)
  fullName: SqlFileStream.SqlFileStream(String, Byte[], FileAccess)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream(String, Byte[], FileAccess, FileOptions, Int64)
  nameWithType: SqlFileStream.SqlFileStream(String, Byte[], FileAccess, FileOptions, Int64)
  fullName: SqlFileStream.SqlFileStream(String, Byte[], FileAccess, FileOptions, Int64)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: SqlFileStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: SqlFileStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: SqlFileStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: SqlFileStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.Data.SqlTypes.SqlFileStream.CanRead
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: SqlFileStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: SqlFileStream.CanSeek
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: SqlFileStream.CanTimeout
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: SqlFileStream.CanWrite
- uid: System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlFileStream.Dispose(Boolean)
  fullName: SqlFileStream.Dispose(Boolean)
- uid: System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SqlFileStream.EndRead(IAsyncResult)
  fullName: SqlFileStream.EndRead(IAsyncResult)
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SqlFileStream.EndWrite(IAsyncResult)
  fullName: SqlFileStream.EndWrite(IAsyncResult)
- uid: System.Data.SqlTypes.SqlFileStream.Finalize
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Finalize()
  nameWithType: SqlFileStream.Finalize()
  fullName: SqlFileStream.Finalize()
- uid: System.Data.SqlTypes.SqlFileStream.Flush
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Flush()
  nameWithType: SqlFileStream.Flush()
  fullName: SqlFileStream.Flush()
- uid: System.Data.SqlTypes.SqlFileStream.Length
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: SqlFileStream.Length
- uid: System.Data.SqlTypes.SqlFileStream.Name
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: SqlFileStream.Name
- uid: System.Data.SqlTypes.SqlFileStream.Position
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: SqlFileStream.Position
- uid: System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Read(Byte[], Int32, Int32)
  nameWithType: SqlFileStream.Read(Byte[], Int32, Int32)
  fullName: SqlFileStream.Read(Byte[], Int32, Int32)
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadByte()
  nameWithType: SqlFileStream.ReadByte()
  fullName: SqlFileStream.ReadByte()
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: SqlFileStream.ReadTimeout
- uid: System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Seek(Int64, SeekOrigin)
  nameWithType: SqlFileStream.Seek(Int64, SeekOrigin)
  fullName: SqlFileStream.Seek(Int64, SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SqlFileStream.SetLength(Int64)
  fullName: SqlFileStream.SetLength(Int64)
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: SqlFileStream.TransactionContext
- uid: System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Write(Byte[], Int32, Int32)
  nameWithType: SqlFileStream.Write(Byte[], Int32, Int32)
  fullName: SqlFileStream.Write(Byte[], Int32, Int32)
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: SqlFileStream.WriteByte(Byte)
  fullName: SqlFileStream.WriteByte(Byte)
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: SqlFileStream.WriteTimeout
- uid: System.Data.SqlTypes.SqlFileStream.#ctor*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream
  nameWithType: SqlFileStream.SqlFileStream
  fullName: SqlFileStream.SqlFileStream
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginRead
  nameWithType: SqlFileStream.BeginRead
  fullName: SqlFileStream.BeginRead
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginWrite
  nameWithType: SqlFileStream.BeginWrite
  fullName: SqlFileStream.BeginWrite
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.CanRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: SqlFileStream.CanRead
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: SqlFileStream.CanSeek
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: SqlFileStream.CanTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: SqlFileStream.CanWrite
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Dispose*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Dispose
  nameWithType: SqlFileStream.Dispose
  fullName: SqlFileStream.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.EndRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndRead
  nameWithType: SqlFileStream.EndRead
  fullName: SqlFileStream.EndRead
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndWrite
  nameWithType: SqlFileStream.EndWrite
  fullName: SqlFileStream.EndWrite
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Finalize*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Finalize
  nameWithType: SqlFileStream.Finalize
  fullName: SqlFileStream.Finalize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Flush*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Flush
  nameWithType: SqlFileStream.Flush
  fullName: SqlFileStream.Flush
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Length*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: SqlFileStream.Length
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Name*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: SqlFileStream.Name
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Position*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: SqlFileStream.Position
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Read*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Read
  nameWithType: SqlFileStream.Read
  fullName: SqlFileStream.Read
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadByte
  nameWithType: SqlFileStream.ReadByte
  fullName: SqlFileStream.ReadByte
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: SqlFileStream.ReadTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Seek*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Seek
  nameWithType: SqlFileStream.Seek
  fullName: SqlFileStream.Seek
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.SetLength*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SetLength
  nameWithType: SqlFileStream.SetLength
  fullName: SqlFileStream.SetLength
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: SqlFileStream.TransactionContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.Write*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Write
  nameWithType: SqlFileStream.Write
  fullName: SqlFileStream.Write
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteByte
  nameWithType: SqlFileStream.WriteByte
  fullName: SqlFileStream.WriteByte
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: SqlFileStream.WriteTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlTypes/SqlFileStream.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: false
  name: Close()
  nameWithType: Stream.Close()
  fullName: Stream.Close()
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: Stream.CopyTo(Stream, Int32)
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: Stream.CopyTo(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: Stream.CopyToAsync(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: Stream.CopyToAsync(Stream, Int32)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: false
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: Stream.CreateWaitHandle()
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: false
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: Stream.Dispose()
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: Stream.FlushAsync()
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: Stream.FlushAsync(CancellationToken)
  fullName: Stream.FlushAsync(CancellationToken)
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: false
  name: "Null"
  nameWithType: Stream.Null
  fullName: Stream.Null
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: false
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: Stream.ObjectInvariant()
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: Stream.ReadAsync(Byte[], Int32, Int32)
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: Stream.Synchronized(Stream)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: Stream.WriteAsync(Byte[], Int32, Int32)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
