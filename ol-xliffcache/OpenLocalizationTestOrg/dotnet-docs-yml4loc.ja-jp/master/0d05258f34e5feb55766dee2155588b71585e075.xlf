<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d05258f34e5feb55766dee2155588b71585e075</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.Timer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e61882dd828defdcae192a51ebe7f74e86dc196a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">062443dd261b6710e67b0e0b6ba4f8ef2da53046</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Performs asynchronous or synchronous Web page postbacks at a defined interval.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this topic:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#declarative_syntax)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Introduction</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control enables you to perform postbacks at a specified interval.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control as a trigger for an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, the <ph id="ph3">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is updated by using an asynchronous, partial-page update.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must include a <ph id="ph1">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> object in a Web page to use the <ph id="ph2">&lt;xref:System.Web.UI.Timer&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control to update an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control by including the timer inside the <ph id="ph3">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can place the timer outside the <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control and set the timer as a trigger.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also initiate full postback of a complete Web page by including the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control in the Web page and not setting it as a trigger for an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can run server code when the timer interval has elapsed by creating an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Tick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the event handler, you can include code that dynamically adjusts the behavior of the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property to specify how often postbacks will occur.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Enabled%2A&gt;</ph> property to turn the <ph id="ph2">&lt;xref:System.Web.UI.Timer&gt;</ph> on or off.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The accuracy of when the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control posts back to the Web server depends on the accuracy of the ECMAScript (JavaScript) <ph id="ph2">`window.setTimeout`</ph> function that is running in the browser.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property is defined in milliseconds.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property to a value that lets at least one asynchronous postback complete before the next postback is initiated.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control is outside an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, the timer continues to run while the content of the <ph id="ph3">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is refreshed.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new postback is initiated while an earlier postback is being processed, the first postback will be canceled.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 60,000 milliseconds (60 seconds).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control with a small value in the <ph id="ph2">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property can generate significant traffic to and from the Web server.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control to refresh the content only as often as necessary.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Declarative Syntax</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control initiates a postback to the server after the number of milliseconds specified in the <ph id="ph2">&lt;xref href="System.Web.UI.Timer.Interval"&gt;&lt;/xref&gt;</ph> property has elapsed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Enabled%2A&gt;</ph> property to turn the <ph id="ph2">&lt;xref:System.Web.UI.Timer&gt;</ph> control on and off.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set <ph id="ph1">&lt;xref:System.Web.UI.Timer.Enabled%2A&gt;</ph> to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.Timer&gt;</ph> control starts its timer countdown when the Web page is rendered.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>On postback, you can change property values in the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Enabled%2A&gt;</ph> property, and the changes will be reflected when the Web page content is rendered in the browser.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Enabled%2A&gt;</ph> property and then change it back to its original value during the same postback, the <ph id="ph2">&lt;xref:System.Web.UI.Timer&gt;</ph> control runs as if no change had been made.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> will initiate a postback; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Retrieves properties from a <ph id="ph1">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> object that are passed to the client component that implements timer logic in the browser.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Timer.GetScriptDescriptors%2A&gt;</ph> method adds the <ph id="ph2">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.Timer.Enabled%2A&gt;</ph> properties from an instance of the <ph id="ph4">&lt;xref:System.Web.UI.Timer&gt;</ph> class to a <ph id="ph5">&lt;xref:System.Web.UI.ScriptDescriptor&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client component accesses the values and sets the corresponding values in script.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Web.UI.ScriptDescriptor"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Retrieves the client script for the <ph id="ph1">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.ScriptReference"&gt;&lt;/xref&gt;</ph> object that contains client script for the <ph id="ph2">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of milliseconds to wait before initiating a postback.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property to set how often the <ph id="ph2">&lt;xref:System.Web.UI.Timer&gt;</ph> control initiates a postback to the server.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property in server code after a postback, such as in an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.Timer.Tick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The accuracy of when the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control posts back to the Web server depends on the accuracy of the ECMAScript (JavaScript) <ph id="ph2">`window.setTimeout`</ph> function that runs in the browser.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property to a small value can generate significant traffic to and from the Web server.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> control to refresh the content only as often as necessary.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you change the value of the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property, the ECMAScript timing code running in the browser will be reset when the updates are rendered.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait before initiating a postback.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default value is 60,000 (60 seconds).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The specified value is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.UI.Control.PreRender"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.UI.Timer.Tick"&gt;&lt;/xref&gt;</ph> event of the <ph id="ph2">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Timer.Tick&gt;</ph> event is raised when the number of milliseconds specified in the <ph id="ph2">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property has elapsed either since the Web page was rendered or since the previous <ph id="ph3">&lt;xref:System.Web.UI.Timer.Tick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Enables a <ph id="ph1">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control to raise the <ph id="ph2">&lt;xref href="System.Web.UI.Timer.Tick"&gt;&lt;/xref&gt;</ph> event when a page is posted to the server.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A string with an optional argument to be passed to the event handler.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Renders the <ph id="ph1">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control content to the browser by using the specified <ph id="ph2">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> object that is used to render the <ph id="ph2">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control content to the browser.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Occurs when the number of milliseconds specified in the <ph id="ph1">&lt;xref href="System.Web.UI.Timer.Interval"&gt;&lt;/xref&gt;</ph> property has elapsed and the page is posted to the server.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Timer.Tick&gt;</ph> event is raised when the number of milliseconds specified in the <ph id="ph2">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> property has elapsed either since the Web page was last rendered or since the previous <ph id="ph3">&lt;xref:System.Web.UI.Timer.Tick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.Timer.Tick&gt;</ph> event when you have to perform actions during each postback.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&lt;xref href="System.Web.UI.Control.Visible"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Web.UI.Control"&gt;&lt;/xref&gt;</ph> class to prevent this value from being set.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Visible`</ph> property is overridden in the <ph id="ph2">&lt;xref:System.Web.UI.Timer&gt;</ph> class to prevent setting this property.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Visible`</ph> property returns <ph id="ph2">`true`</ph> if the client component of the <ph id="ph3">&lt;xref:System.Web.UI.Timer&gt;</ph> class is included in the Web page, even if <ph id="ph4">&lt;xref:System.Web.UI.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Visible`</ph> property returns <ph id="ph2">`false`</ph> when it is inside a container, such as an <ph id="ph3">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, whose <ph id="ph4">`Visible`</ph> property is set to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control is rendered on the page; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A value is assigned to the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Visible</ph><ept id="p1">&lt;/code&gt;</ept> property.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.UI.Timer.Tick"&gt;&lt;/xref&gt;</ph> event when a page is posted to the server.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A string with an optional argument to be passed to the event handler.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Retrieves properties from a <ph id="ph1">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> object that are passed to the client component.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.UI.IScriptControl&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Timer.GetScriptDescriptors%2A&gt;</ph> method adds the <ph id="ph2">&lt;xref:System.Web.UI.Timer.Interval%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.Timer.Enabled%2A&gt;</ph> properties from an instance of the <ph id="ph4">&lt;xref:System.Web.UI.Timer&gt;</ph> class to a <ph id="ph5">&lt;xref:System.Web.UI.ScriptDescriptor&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client component retrieves the values and sets the corresponding values in script.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Web.UI.ScriptDescriptor"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Retrieves the client script for the <ph id="ph1">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.Timer&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.UI.IScriptControl&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.ScriptReference"&gt;&lt;/xref&gt;</ph> object that contains client script for the <ph id="ph2">&lt;xref href="System.Web.UI.Timer"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>