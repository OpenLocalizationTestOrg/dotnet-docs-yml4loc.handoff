{"nodes":[{"content":"<xref href=\"System.Drawing.FontConverter.FontNameConverter\"></xref> is a type converter that is used to convert a font name to and from various other representations.","nodes":[{"pos":[0,166],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Drawing.FontConverter.FontNameConverter\"&gt;&lt;/xref&gt;</ph> is a type converter that is used to convert a font name to and from various other representations.","source":"<xref href=\"System.Drawing.FontConverter.FontNameConverter\"></xref> is a type converter that is used to convert a font name to and from various other representations."}],"pos":[1233,1400],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.FontConverter.FontNameConverter\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.FontConverter.FontNameConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Drawing.FontConverter.FontNameConverter\"></xref> class."}],"pos":[6194,6303],"yaml":true},{"content":"Determines if this converter can convert an object in the given source type to the native type of the converter.","nodes":[{"pos":[0,112],"content":"Determines if this converter can convert an object in the given source type to the native type of the converter.","nodes":[{"content":"Determines if this converter can convert an object in the given source type to the native type of the converter.","pos":[0,112]}]}],"pos":[7769,7882],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"pos":[0,285],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,179],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This may be <ph id=\"ph1\">`null`</ph>, so you should always check.","pos":[180,227],"source":" This may be `null`, so you should always check."},{"content":"Also, properties on the context object may return <ph id=\"ph1\">`null`</ph>.","pos":[228,285],"source":" Also, properties on the context object may return `null`."}]}],"pos":[8124,8410],"yaml":true},{"content":"The type you wish to convert from.","nodes":[{"pos":[0,34],"content":"The type you wish to convert from.","nodes":[{"content":"The type you wish to convert from.","pos":[0,34]}]}],"pos":[8474,8509],"yaml":true},{"content":"`true` if the converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the converter can perform the conversion; otherwise, `false`."}],"pos":[8567,8641],"yaml":true},{"content":"Converts the given object to the converter's native type.","nodes":[{"pos":[0,57],"content":"Converts the given object to the converter's native type.","nodes":[{"content":"Converts the given object to the converter's native type.","pos":[0,57]}]}],"pos":[10177,10235],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"pos":[0,285],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,179],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This may be <ph id=\"ph1\">`null`</ph>, so you should always check.","pos":[180,227],"source":" This may be `null`, so you should always check."},{"content":"Also, properties on the context object may return <ph id=\"ph1\">`null`</ph>.","pos":[228,285],"source":" Also, properties on the context object may return `null`."}]}],"pos":[10515,10801],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> to use to perform the conversion","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use to perform the conversion","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> to use to perform the conversion"}],"pos":[10883,10972],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[11033,11056],"yaml":true},{"content":"The converted object.","nodes":[{"pos":[0,21],"content":"The converted object.","nodes":[{"content":"The converted object.","pos":[0,21]}]}],"pos":[11113,11135],"yaml":true},{"content":"The conversion cannot be completed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be completed.","nodes":[{"content":"The conversion cannot be completed.","pos":[0,35]}]}],"pos":[11323,11359],"yaml":true},{"content":"Retrieves a collection containing a set of standard values for the data type this converter is designed for.","nodes":[{"pos":[0,108],"content":"Retrieves a collection containing a set of standard values for the data type this converter is designed for.","nodes":[{"content":"Retrieves a collection containing a set of standard values for the data type this converter is designed for.","pos":[0,108]}]}],"pos":[12635,12744],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"pos":[0,285],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,179],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This may be <ph id=\"ph1\">`null`</ph>, so you should always check.","pos":[180,227],"source":" This may be `null`, so you should always check."},{"content":"Also, properties on the context object may return <ph id=\"ph1\">`null`</ph>.","pos":[228,285],"source":" Also, properties on the context object may return `null`."}]}],"pos":[13028,13314],"yaml":true},{"content":"A collection containing a standard set of valid values, or `null`. The default is `null`.","nodes":[{"pos":[0,89],"content":"A collection containing a standard set of valid values, or `null`. The default is `null`.","nodes":[{"content":"A collection containing a standard set of valid values, or <ph id=\"ph1\">`null`</ph>.","pos":[0,66],"source":"A collection containing a standard set of valid values, or `null`."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[67,89],"source":" The default is `null`."}]}],"pos":[13418,13508],"yaml":true},{"content":"Determines if the list of standard values returned from the <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> method is an exclusive list.","nodes":[{"pos":[0,175],"content":"Determines if the list of standard values returned from the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"&gt;&lt;/xref&gt;</ph> method is an exclusive list.","source":"Determines if the list of standard values returned from the <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> method is an exclusive list."}],"pos":[14933,15109],"yaml":true},{"content":"If the list is exclusive, no other values are valid, such as in an enumeration data type. If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> provides.","nodes":[{"pos":[0,274],"content":"If the list is exclusive, no other values are valid, such as in an enumeration data type. If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> provides.","nodes":[{"content":"If the list is exclusive, no other values are valid, such as in an enumeration data type. If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> provides.","pos":[0,274],"nodes":[{"content":"If the list is exclusive, no other values are valid, such as in an enumeration data type.","pos":[0,89]},{"content":"If the list is not exclusive, then there are other valid values besides the list of standard values <ph id=\"ph1\">&lt;xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A&gt;</ph> provides.","pos":[90,274],"source":" If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> provides."}]}]}],"pos":[15120,15395],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"pos":[0,285],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,179],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This may be <ph id=\"ph1\">`null`</ph>, so you should always check.","pos":[180,227],"source":" This may be `null`, so you should always check."},{"content":"Also, properties on the context object may return <ph id=\"ph1\">`null`</ph>.","pos":[228,285],"source":" Also, properties on the context object may return `null`."}]}],"pos":[15632,15918],"yaml":true},{"content":"`true` if the collection returned from <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> is an exclusive list of possible values; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,210],"content":"`true` if the collection returned from <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> is an exclusive list of possible values; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the collection returned from <ph id=\"ph2\">&lt;xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"&gt;&lt;/xref&gt;</ph> is an exclusive list of possible values; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,186],"source":"`true` if the collection returned from <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> is an exclusive list of possible values; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[187,210],"source":" The default is `false`."}]}],"pos":[15976,16189],"yaml":true},{"content":"Determines if this object supports a standard set of values that can be picked from a list.","nodes":[{"pos":[0,91],"content":"Determines if this object supports a standard set of values that can be picked from a list.","nodes":[{"content":"Determines if this object supports a standard set of values that can be picked from a list.","pos":[0,91]}]}],"pos":[17623,17715],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"pos":[0,285],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,179],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This may be <ph id=\"ph1\">`null`</ph>, so you should always check.","pos":[180,227],"source":" This may be `null`, so you should always check."},{"content":"Also, properties on the context object may return <ph id=\"ph1\">`null`</ph>.","pos":[228,285],"source":" Also, properties on the context object may return `null`."}]}],"pos":[17952,18238],"yaml":true},{"content":"`true` if <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> should be called to find a common set of values the object supports; otherwise, `false`.","nodes":[{"pos":[0,185],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"&gt;&lt;/xref&gt;</ph> should be called to find a common set of values the object supports; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> should be called to find a common set of values the object supports; otherwise, `false`."}],"pos":[18296,18484],"yaml":true},{"content":"Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.","nodes":[{"pos":[0,104],"content":"Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.","nodes":[{"content":"Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.","pos":[0,104]}]}],"pos":[19707,19812],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.FontConverter.FontNameConverter\n  commentId: T:System.Drawing.FontConverter.FontNameConverter\n  id: FontConverter.FontNameConverter\n  children:\n  - System.Drawing.FontConverter.FontNameConverter.#ctor\n  - System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: FontConverter.FontNameConverter\n  nameWithType: FontConverter.FontNameConverter\n  fullName: System.Drawing.FontConverter.FontNameConverter\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: <xref href=\"System.Drawing.FontConverter.FontNameConverter\"></xref> is a type converter that is used to convert a font name to and from various other representations.\n  syntax:\n    content: 'public sealed class FontConverter.FontNameConverter : System.ComponentModel.TypeConverter, IDisposable'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.FontNameConverter.#ctor\n  commentId: M:System.Drawing.FontConverter.FontNameConverter.#ctor\n  id: '#ctor'\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: FontConverter.FontNameConverter()\n  nameWithType: FontConverter.FontNameConverter.FontConverter.FontNameConverter()\n  fullName: FontConverter.FontNameConverter.FontConverter.FontNameConverter()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.FontConverter.FontNameConverter\"></xref> class.\n  syntax:\n    content: public FontNameConverter ();\n    parameters: []\n  overload: System.Drawing.FontConverter.FontNameConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: FontConverter.FontNameConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: FontConverter.FontNameConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines if this converter can convert an object in the given source type to the native type of the converter.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.\n    - id: sourceType\n      type: System.Type\n      description: The type you wish to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if the converter can perform the conversion; otherwise, `false`.'\n  overload: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: FontConverter.FontNameConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: FontConverter.FontNameConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the given object to the converter's native type.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> to use to perform the conversion\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.Drawing.FontConverter.FontNameConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be completed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: FontConverter.FontNameConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: FontConverter.FontNameConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Retrieves a collection containing a set of standard values for the data type this converter is designed for.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: A collection containing a standard set of valid values, or `null`. The default is `null`.\n  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: FontConverter.FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: FontConverter.FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines if the list of standard values returned from the <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> method is an exclusive list.\n  remarks: If the list is exclusive, no other values are valid, such as in an enumeration data type. If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> provides.\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the collection returned from <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> is an exclusive list of possible values; otherwise, `false`. The default is `false`.'\n  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: FontConverter.FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: FontConverter.FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines if this object supports a standard set of values that can be picked from a list.\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that can be used to extract additional information about the environment this converter is being invoked from. This may be `null`, so you should always check. Also, properties on the context object may return `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\"></xref> should be called to find a common set of values the object supports; otherwise, `false`.'\n  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose\n  commentId: M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Drawing.FontConverter.FontNameConverter\n  langs:\n  - csharp\n  name: IDisposable.Dispose()\n  nameWithType: FontConverter.FontNameConverter.IDisposable.Dispose()\n  fullName: FontConverter.FontNameConverter.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Drawing.FontConverter.FontNameConverter.#ctor\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: FontConverter.FontNameConverter()\n  nameWithType: FontConverter.FontNameConverter.FontConverter.FontNameConverter()\n  fullName: FontConverter.FontNameConverter.FontConverter.FontNameConverter()\n- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: FontConverter.FontNameConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: FontConverter.FontNameConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: FontConverter.FontNameConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: FontConverter.FontNameConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: FontConverter.FontNameConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: FontConverter.FontNameConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: FontConverter.FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: FontConverter.FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: FontConverter.FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: FontConverter.FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: FontConverter.FontNameConverter.IDisposable.Dispose()\n  fullName: FontConverter.FontNameConverter.IDisposable.Dispose()\n- uid: System.Drawing.FontConverter.FontNameConverter.#ctor*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: FontConverter.FontNameConverter\n  nameWithType: FontConverter.FontNameConverter.FontConverter.FontNameConverter\n  fullName: FontConverter.FontNameConverter.FontConverter.FontNameConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: FontConverter.FontNameConverter.CanConvertFrom\n  fullName: FontConverter.FontNameConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: FontConverter.FontNameConverter.ConvertFrom\n  fullName: FontConverter.FontNameConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: FontConverter.FontNameConverter.GetStandardValues\n  fullName: FontConverter.FontNameConverter.GetStandardValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: FontConverter.FontNameConverter.GetStandardValuesExclusive\n  fullName: FontConverter.FontNameConverter.GetStandardValuesExclusive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: FontConverter.FontNameConverter.GetStandardValuesSupported\n  fullName: FontConverter.FontNameConverter.GetStandardValuesSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose*\n  parent: System.Drawing.FontConverter.FontNameConverter\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: FontConverter.FontNameConverter.System.IDisposable.Dispose\n  fullName: FontConverter.FontNameConverter.System.IDisposable.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter+FontNameConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}